// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:61
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	setExprs                 SetExprs
	setExpr                  *SetExpr
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const CLASS_ORIGIN = 57524
const SUBCLASS_ORIGIN = 57525
const MESSAGE_TEXT = 57526
const MYSQL_ERRNO = 57527
const CONSTRAINT_CATALOG = 57528
const CONSTRAINT_SCHEMA = 57529
const CONSTRAINT_NAME = 57530
const CATALOG_NAME = 57531
const SCHEMA_NAME = 57532
const TABLE_NAME = 57533
const COLUMN_NAME = 57534
const CURSOR_NAME = 57535
const SIGNAL = 57536
const RESIGNAL = 57537
const SQLSTATE = 57538
const DECLARE = 57539
const CONDITION = 57540
const CURSOR = 57541
const CONTINUE = 57542
const EXIT = 57543
const UNDO = 57544
const HANDLER = 57545
const FOUND = 57546
const SQLWARNING = 57547
const SQLEXCEPTION = 57548
const BEGIN = 57549
const START = 57550
const TRANSACTION = 57551
const COMMIT = 57552
const ROLLBACK = 57553
const BIT = 57554
const TINYINT = 57555
const SMALLINT = 57556
const MEDIUMINT = 57557
const INT = 57558
const INTEGER = 57559
const BIGINT = 57560
const INTNUM = 57561
const REAL = 57562
const DOUBLE = 57563
const FLOAT_TYPE = 57564
const DECIMAL = 57565
const NUMERIC = 57566
const DEC = 57567
const FIXED = 57568
const PRECISION = 57569
const TIME = 57570
const TIMESTAMP = 57571
const DATETIME = 57572
const YEAR = 57573
const CHAR = 57574
const VARCHAR = 57575
const BOOL = 57576
const CHARACTER = 57577
const VARBINARY = 57578
const NCHAR = 57579
const NVARCHAR = 57580
const NATIONAL = 57581
const VARYING = 57582
const TEXT = 57583
const TINYTEXT = 57584
const MEDIUMTEXT = 57585
const LONGTEXT = 57586
const LONG = 57587
const BLOB = 57588
const TINYBLOB = 57589
const MEDIUMBLOB = 57590
const LONGBLOB = 57591
const JSON = 57592
const ENUM = 57593
const GEOMETRY = 57594
const POINT = 57595
const LINESTRING = 57596
const POLYGON = 57597
const GEOMETRYCOLLECTION = 57598
const MULTIPOINT = 57599
const MULTILINESTRING = 57600
const MULTIPOLYGON = 57601
const NULLX = 57602
const AUTO_INCREMENT = 57603
const APPROXNUM = 57604
const SIGNED = 57605
const UNSIGNED = 57606
const ZEROFILL = 57607
const LOCAL = 57608
const COLLATION = 57609
const DATABASES = 57610
const SCHEMAS = 57611
const TABLES = 57612
const FULL = 57613
const PROCESSLIST = 57614
const COLUMNS = 57615
const FIELDS = 57616
const ENGINES = 57617
const PLUGINS = 57618
const NAMES = 57619
const CHARSET = 57620
const GLOBAL = 57621
const SESSION = 57622
const ISOLATION = 57623
const LEVEL = 57624
const READ = 57625
const WRITE = 57626
const ONLY = 57627
const REPEATABLE = 57628
const COMMITTED = 57629
const UNCOMMITTED = 57630
const SERIALIZABLE = 57631
const CURRENT_TIMESTAMP = 57632
const DATABASE = 57633
const CURRENT_DATE = 57634
const CURRENT_USER = 57635
const CURRENT_TIME = 57636
const LOCALTIME = 57637
const LOCALTIMESTAMP = 57638
const UTC_DATE = 57639
const UTC_TIME = 57640
const UTC_TIMESTAMP = 57641
const REPLACE = 57642
const CONVERT = 57643
const CAST = 57644
const SUBSTR = 57645
const SUBSTRING = 57646
const GROUP_CONCAT = 57647
const SEPARATOR = 57648
const TIMESTAMPADD = 57649
const TIMESTAMPDIFF = 57650
const OVER = 57651
const WINDOW = 57652
const GROUPING = 57653
const GROUPS = 57654
const AVG = 57655
const BIT_AND = 57656
const BIT_OR = 57657
const BIT_XOR = 57658
const COUNT = 57659
const JSON_ARRAYAGG = 57660
const JSON_OBJECTAGG = 57661
const MAX = 57662
const MIN = 57663
const STDDEV_POP = 57664
const STDDEV = 57665
const STD = 57666
const STDDEV_SAMP = 57667
const SUM = 57668
const VAR_POP = 57669
const VARIANCE = 57670
const VAR_SAMP = 57671
const CUME_DIST = 57672
const DENSE_RANK = 57673
const FIRST_VALUE = 57674
const LAG = 57675
const LAST_VALUE = 57676
const LEAD = 57677
const NTH_VALUE = 57678
const NTILE = 57679
const ROW_NUMBER = 57680
const PERCENT_RANK = 57681
const RANK = 57682
const MATCH = 57683
const AGAINST = 57684
const BOOLEAN = 57685
const LANGUAGE = 57686
const WITH = 57687
const QUERY = 57688
const EXPANSION = 57689
const UNUSED = 57690
const ARRAY = 57691
const DESCRIPTION = 57692
const EMPTY = 57693
const EXCEPT = 57694
const JSON_TABLE = 57695
const LATERAL = 57696
const MEMBER = 57697
const RECURSIVE = 57698
const ACTIVE = 57699
const ADMIN = 57700
const BUCKETS = 57701
const CLONE = 57702
const COMPONENT = 57703
const DEFINITION = 57704
const ENFORCED = 57705
const EXCLUDE = 57706
const FOLLOWING = 57707
const GEOMCOLLECTION = 57708
const GET_MASTER_PUBLIC_KEY = 57709
const HISTOGRAM = 57710
const HISTORY = 57711
const INACTIVE = 57712
const INVISIBLE = 57713
const LOCKED = 57714
const MASTER_COMPRESSION_ALGORITHMS = 57715
const MASTER_PUBLIC_KEY_PATH = 57716
const MASTER_TLS_CIPHERSUITES = 57717
const MASTER_ZSTD_COMPRESSION_LEVEL = 57718
const NESTED = 57719
const NETWORK_NAMESPACE = 57720
const NOWAIT = 57721
const NULLS = 57722
const OJ = 57723
const OLD = 57724
const OPTIONAL = 57725
const ORDINALITY = 57726
const ORGANIZATION = 57727
const OTHERS = 57728
const PATH = 57729
const PERSIST = 57730
const PERSIST_ONLY = 57731
const PRECEDING = 57732
const PRIVILEGE_CHECKS_USER = 57733
const PROCESS = 57734
const RANDOM = 57735
const REFERENCE = 57736
const REQUIRE_ROW_FORMAT = 57737
const RESOURCE = 57738
const RESPECT = 57739
const RESTART = 57740
const RETAIN = 57741
const REUSE = 57742
const ROLE = 57743
const SECONDARY = 57744
const SECONDARY_ENGINE = 57745
const SECONDARY_LOAD = 57746
const SECONDARY_UNLOAD = 57747
const SKIP = 57748
const SRID = 57749
const THREAD_PRIORITY = 57750
const TIES = 57751
const UNBOUNDED = 57752
const VCPU = 57753
const VISIBLE = 57754
const SYSTEM = 57755
const INFILE = 57756

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 43,
	-2, 4,
	-1, 37,
	141, 897,
	-2, 115,
	-1, 44,
	180, 488,
	181, 488,
	-2, 478,
	-1, 51,
	1, 1300,
	432, 1300,
	-2, 508,
	-1, 424,
	127, 907,
	-2, 901,
	-1, 425,
	127, 908,
	-2, 902,
	-1, 526,
	97, 1225,
	127, 1225,
	-2, 79,
	-1, 527,
	97, 1126,
	127, 1126,
	-2, 80,
	-1, 532,
	97, 1081,
	127, 1081,
	-2, 865,
	-1, 534,
	97, 1164,
	127, 1164,
	-2, 867,
	-1, 741,
	5, 43,
	-2, 502,
	-1, 745,
	5, 43,
	-2, 501,
	-1, 957,
	1, 562,
	5, 562,
	12, 562,
	13, 562,
	14, 562,
	15, 562,
	17, 562,
	19, 562,
	30, 562,
	31, 562,
	56, 562,
	57, 562,
	58, 562,
	59, 562,
	60, 562,
	62, 562,
	63, 562,
	66, 562,
	67, 562,
	69, 562,
	70, 562,
	432, 562,
	-2, 592,
	-1, 961,
	67, 60,
	69, 60,
	-2, 64,
	-1, 1148,
	127, 910,
	-2, 906,
	-1, 1310,
	68, 349,
	-2, 1047,
	-1, 1313,
	68, 345,
	71, 345,
	-2, 982,
	-1, 1314,
	68, 346,
	71, 346,
	-2, 992,
	-1, 1394,
	68, 423,
	71, 423,
	-2, 389,
	-1, 1440,
	5, 44,
	-2, 658,
	-1, 1501,
	5, 43,
	-2, 842,
	-1, 1601,
	5, 43,
	-2, 81,
	-1, 1752,
	1, 613,
	5, 613,
	12, 613,
	13, 613,
	14, 613,
	15, 613,
	17, 613,
	19, 613,
	30, 613,
	31, 613,
	56, 613,
	57, 613,
	58, 613,
	59, 613,
	60, 613,
	62, 613,
	63, 613,
	66, 613,
	67, 613,
	69, 613,
	70, 613,
	432, 613,
	-2, 592,
	-1, 1876,
	5, 44,
	-2, 843,
	-1, 1907,
	5, 43,
	-2, 81,
	-1, 1969,
	5, 43,
	-2, 845,
	-1, 2009,
	41, 917,
	-2, 915,
	-1, 2052,
	5, 43,
	-2, 193,
	-1, 2114,
	5, 44,
	-2, 846,
	-1, 2213,
	5, 43,
	-2, 145,
}

const yyPrivate = 57344

const yyLast = 25163

var yyAct = [...]int{

	458, 62, 2236, 2215, 2261, 2131, 2226, 2117, 2217, 422,
	2023, 1357, 2227, 2055, 7, 2054, 6, 2053, 5, 2056,
	8, 2103, 2157, 1947, 1884, 2097, 2130, 989, 1983, 2009,
	1746, 1355, 429, 1655, 74, 1530, 522, 1765, 1728, 1665,
	457, 416, 1315, 1123, 1291, 1262, 1268, 1555, 719, 882,
	1911, 1266, 1929, 403, 1766, 1729, 2118, 1311, 1609, 729,
	442, 1815, 1725, 62, 1260, 1307, 355, 358, 957, 349,
	541, 95, 1664, 1392, 1296, 1424, 1734, 408, 1297, 1738,
	371, 1115, 1347, 1676, 1382, 1632, 1173, 538, 1207, 1212,
	1303, 1244, 1592, 1089, 1069, 1204, 1134, 1186, 1343, 974,
	1251, 1150, 782, 788, 823, 1331, 755, 537, 2052, 3,
	1631, 954, 373, 973, 953, 427, 525, 528, 832, 520,
	706, 412, 350, 351, 370, 754, 354, 684, 517, 963,
	1710, 2283, 2279, 2269, 2251, 2249, 539, 2231, 2210, 898,
	2165, 73, 1108, 1796, 1905, 2242, 2150, 2225, 2111, 1912,
	899, 2198, 2149, 2110, 1693, 1470, 1861, 1914, 683, 1760,
	78, 1761, 1762, 30, 1285, 30, 30, 30, 1286, 1287,
	975, 364, 976, 97, 2033, 847, 846, 856, 857, 849,
	850, 851, 852, 853, 854, 855, 848, 1499, 717, 858,
	409, 543, 80, 81, 82, 83, 84, 1539, 731, 1677,
	1538, 732, 733, 1540, 1500, 353, 1968, 1264, 352, 30,
	773, 63, 33, 34, 711, 90, 1188, 1575, 1317, 1319,
	686, 1319, 689, 1954, 1332, 71, 1917, 71, 71, 71,
	471, 1344, 477, 479, 478, 475, 476, 474, 473, 472,
	1852, 1679, 1323, 1325, 1337, 1324, 1332, 480, 481, 1850,
	2221, 368, 71, 2216, 63, 33, 34, 105, 101, 102,
	2240, 103, 1915, 1916, 1918, 1919, 1920, 2219, 92, 94,
	2162, 71, 89, 2160, 2161, 2212, 35, 356, 99, 98,
	2006, 2005, 710, 714, 2004, 2003, 716, 2001, 2002, 2000,
	2082, 2083, 1610, 2119, 107, 106, 1886, 418, 2050, 1567,
	2154, 2155, 1522, 726, 727, 728, 1364, 734, 725, 735,
	732, 733, 724, 2224, 1572, 1571, 1681, 346, 96, 712,
	715, 1685, 713, 1680, 2197, 1678, 718, 718, 1611, 1553,
	1683, 1363, 688, 687, 2098, 2048, 1568, 1658, 718, 1245,
	1930, 1931, 988, 1682, 988, 987, 62, 62, 1769, 359,
	1573, 2275, 1565, 347, 1984, 1637, 1684, 1686, 1566, 742,
	988, 744, 2284, 743, 2281, 2270, 2252, 1986, 685, 694,
	2085, 1820, 781, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 75, 366, 367, 367, 1940,
	360, 1614, 357, 1059, 1050, 1529, 1528, 1527, 681, 1627,
	777, 2218, 2220, 320, 1332, 100, 1843, 1346, 1582, 62,
	1322, 1292, 1612, 1613, 357, 1836, 1318, 1570, 1543, 357,
	1939, 1535, 747, 748, 867, 1552, 104, 869, 1443, 2034,
	1913, 1639, 1637, 870, 871, 1795, 1645, 91, 1985, 1644,
	1647, 819, 872, 873, 874, 875, 876, 877, 878, 879,
	2109, 709, 988, 775, 741, 745, 1640, 880, 1553, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	2206, 897, 900, 900, 900, 906, 900, 900, 906, 900,
	906, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 945, 946, 947, 948, 720, 958, 820, 790, 70,
	64, 70, 70, 70, 774, 30, 739, 63, 33, 34,
	97, 836, 357, 30, 31, 63, 33, 34, 1943, 59,
	1785, 1938, 1866, 2265, 1429, 69, 70, 59, 1569, 35,
	1549, 1045, 1413, 69, 1552, 1121, 528, 35, 54, 55,
	971, 952, 1451, 64, 60, 70, 1553, 881, 982, 969,
	821, 838, 847, 846, 856, 857, 849, 850, 851, 852,
	853, 854, 855, 848, 1448, 1652, 858, 71, 2239, 702,
	858, 45, 1786, 1271, 1273, 71, 851, 852, 853, 854,
	855, 848, 1553, 848, 858, 431, 858, 1553, 1281, 1118,
	2076, 1046, 901, 903, 905, 907, 909, 911, 912, 914,
	1090, 785, 789, 902, 904, 986, 908, 910, 1556, 913,
	1383, 988, 988, 1656, 87, 99, 98, 831, 839, 1157,
	1944, 1373, 1103, 977, 722, 962, 830, 829, 967, 37,
	65, 41, 40, 43, 1155, 1156, 1154, 37, 65, 41,
	40, 43, 1552, 56, 831, 2077, 746, 2263, 1639, 1637,
	2264, 86, 2262, 988, 1272, 883, 1641, 1638, 693, 870,
	871, 44, 68, 67, 708, 690, 896, 736, 42, 44,
	68, 67, 829, 1640, 52, 53, 42, 1695, 1552, 1052,
	1205, 870, 871, 1552, 2268, 718, 1651, 2207, 1773, 831,
	1648, 826, 718, 718, 718, 1205, 1091, 1459, 776, 849,
	850, 851, 852, 853, 854, 855, 848, 718, 718, 858,
	57, 58, 2133, 2078, 2276, 830, 829, 1374, 57, 58,
	723, 2115, 2272, 2079, 66, 1904, 48, 49, 1096, 2194,
	28, 46, 66, 831, 48, 49, 847, 846, 856, 857,
	849, 850, 851, 852, 853, 854, 855, 848, 1903, 1597,
	858, 830, 829, 2255, 2237, 2254, 1595, 707, 2209, 718,
	738, 1114, 696, 697, 698, 699, 700, 2277, 1576, 831,
	1124, 1125, 933, 934, 935, 936, 937, 921, 922, 923,
	938, 939, 924, 925, 926, 932, 940, 927, 928, 929,
	930, 931, 943, 942, 941, 944, 945, 947, 946, 948,
	2193, 1106, 1060, 71, 1093, 1094, 1073, 407, 2158, 1709,
	2182, 2167, 2181, 1153, 1126, 365, 64, 1076, 1077, 2139,
	2047, 1140, 1142, 1143, 64, 1085, 1086, 1141, 1131, 1113,
	1149, 830, 829, 1158, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1120, 831,
	62, 1132, 1999, 1127, 1133, 1098, 1099, 752, 1174, 1101,
	1175, 70, 1151, 1961, 1447, 884, 1541, 1147, 1542, 70,
	830, 829, 1901, 1072, 1071, 1104, 1109, 2159, 1778, 751,
	1078, 1079, 1080, 1593, 1112, 1426, 1427, 1428, 831, 1128,
	1208, 1389, 1446, 1100, 1445, 1087, 1088, 514, 515, 1119,
	830, 829, 1074, 1194, 1197, 1075, 2158, 830, 829, 2180,
	1206, 830, 829, 1146, 1697, 2179, 830, 829, 831, 1814,
	1598, 970, 1816, 1129, 2045, 831, 836, 830, 829, 831,
	1975, 2199, 1144, 1095, 831, 2017, 830, 829, 1556, 1265,
	1895, 2196, 2144, 776, 958, 831, 2013, 1111, 958, 1816,
	1181, 1183, 1936, 959, 831, 1831, 1191, 1827, 881, 1895,
	2141, 1895, 2049, 1975, 2041, 1180, 1177, 1178, 883, 1975,
	1989, 1975, 776, 1184, 1253, 1256, 1257, 1258, 1254, 1202,
	1255, 1259, 1824, 528, 1739, 1740, 1975, 1974, 2146, 1276,
	1216, 1217, 1823, 1278, 1895, 1894, 109, 1223, 1224, 1225,
	1226, 1218, 1821, 1220, 1806, 348, 1879, 776, 1412, 776,
	1148, 1293, 868, 1298, 539, 1405, 1805, 1227, 1228, 1804,
	1270, 1621, 1232, 1793, 1792, 1235, 1137, 1138, 1620, 1404,
	1240, 1371, 718, 1274, 718, 1789, 1790, 519, 1046, 1370,
	535, 1838, 1531, 682, 1789, 1788, 776, 881, 1441, 776,
	1248, 776, 965, 1304, 692, 1182, 1386, 1294, 1182, 776,
	1531, 1176, 701, 1097, 1068, 1067, 1283, 1282, 1279, 1066,
	1261, 1409, 1065, 1301, 447, 446, 449, 450, 451, 452,
	1403, 883, 1057, 448, 453, 1192, 1193, 1055, 1054, 1053,
	1051, 1333, 1334, 1335, 1336, 62, 1353, 985, 984, 1839,
	704, 960, 361, 2012, 1349, 1350, 1351, 1352, 966, 1993,
	968, 1271, 1273, 75, 1992, 1801, 1779, 1248, 1345, 2011,
	965, 1726, 1531, 1275, 970, 964, 75, 1874, 1430, 1247,
	1802, 1401, 1395, 1396, 1791, 1394, 1748, 1397, 1398, 1629,
	1544, 1071, 1284, 1441, 1464, 1432, 1433, 1434, 1463, 1102,
	1147, 1369, 964, 1122, 1148, 847, 846, 856, 857, 849,
	850, 851, 852, 853, 854, 855, 848, 1182, 1248, 858,
	1058, 780, 1407, 1410, 1290, 1151, 966, 1839, 964, 970,
	1441, 779, 71, 2152, 1411, 2142, 1747, 2015, 1906, 1384,
	1375, 1319, 1272, 1882, 1390, 1381, 1294, 1348, 1772, 1385,
	1739, 1740, 1356, 881, 1344, 1548, 1417, 1365, 1339, 1338,
	1418, 1047, 771, 2246, 1425, 790, 71, 2244, 2228, 1800,
	1359, 1742, 1361, 1435, 1726, 1502, 1503, 1599, 1062, 958,
	958, 958, 958, 958, 1514, 1512, 1431, 1745, 1744, 1515,
	1513, 1511, 1510, 2176, 1354, 1437, 1265, 2148, 1523, 1662,
	1438, 1135, 1402, 1440, 1442, 1516, 958, 1257, 1258, 1444,
	528, 413, 414, 1414, 1504, 1450, 824, 825, 1453, 1454,
	1455, 2174, 1423, 1422, 703, 1461, 1966, 1462, 1400, 1458,
	1465, 1466, 1558, 1467, 1468, 1826, 1777, 1472, 1473, 1474,
	1475, 1476, 1533, 1148, 1534, 822, 1776, 1526, 1483, 1484,
	1485, 1532, 1487, 1488, 1550, 1490, 1491, 1492, 1493, 2087,
	1495, 1496, 1497, 2090, 2138, 2137, 1415, 1416, 1406, 789,
	778, 1518, 2010, 2166, 2008, 1298, 2081, 1469, 1471, 2080,
	1525, 1519, 1520, 1501, 1477, 1478, 1479, 1480, 62, 1557,
	1517, 1506, 1507, 1505, 1509, 362, 1508, 1551, 1554, 718,
	1624, 718, 718, 1586, 1184, 1545, 1585, 1046, 1587, 1588,
	1589, 1590, 783, 983, 1536, 1408, 960, 769, 753, 1547,
	750, 749, 705, 1625, 784, 2189, 425, 2021, 2020, 1439,
	1253, 1256, 1257, 1258, 1254, 1872, 1255, 1259, 1619, 1124,
	1125, 1360, 1945, 1320, 1321, 1388, 1326, 1327, 1328, 1329,
	1330, 1061, 1460, 1659, 1602, 1380, 1577, 1578, 824, 825,
	2188, 1261, 1594, 1584, 1340, 1341, 1342, 1049, 404, 112,
	410, 411, 112, 1591, 2187, 1596, 1671, 1152, 112, 1421,
	2186, 1996, 1633, 1646, 1650, 1858, 2169, 1420, 1689, 1690,
	2168, 1691, 1692, 1630, 2135, 2091, 1601, 112, 2025, 1965,
	405, 1701, 1622, 1698, 1699, 75, 2024, 1948, 1667, 1626,
	112, 1643, 1636, 112, 546, 1635, 112, 1628, 951, 1531,
	961, 1694, 1147, 1213, 1604, 1605, 1606, 112, 1452, 546,
	1623, 1731, 1449, 62, 1092, 112, 1642, 827, 1653, 1654,
	2248, 2247, 1657, 2247, 2248, 2038, 1775, 1669, 1117, 363,
	1668, 77, 79, 1750, 2066, 47, 50, 1672, 1754, 1755,
	1756, 1688, 528, 1687, 1752, 72, 1727, 1, 1675, 1673,
	1736, 1730, 2068, 19, 847, 846, 856, 857, 849, 850,
	851, 852, 853, 854, 855, 848, 2136, 1615, 858, 1617,
	1618, 2067, 18, 1749, 960, 1757, 2069, 20, 1759, 960,
	1707, 1708, 1753, 960, 2086, 1713, 2088, 1774, 1716, 2070,
	21, 2065, 15, 1721, 1733, 2064, 14, 2007, 1743, 2058,
	10, 1925, 1667, 1298, 1910, 1298, 2073, 25, 1909, 1770,
	1751, 1864, 1771, 1702, 1703, 1704, 1705, 1706, 2072, 24,
	1608, 1732, 1607, 1798, 1799, 1768, 2074, 26, 770, 1763,
	1353, 1107, 1780, 1781, 1634, 1764, 2063, 13, 1399, 1784,
	2060, 12, 2059, 11, 1809, 1148, 1787, 2096, 1803, 1305,
	847, 846, 856, 857, 849, 850, 851, 852, 853, 854,
	855, 848, 2057, 9, 858, 1295, 536, 85, 1372, 721,
	1114, 1934, 328, 1056, 1302, 1563, 2089, 519, 772, 1562,
	1064, 1559, 1574, 1316, 1561, 1560, 1696, 2084, 1564, 993,
	1842, 1818, 991, 992, 990, 1782, 995, 994, 1081, 1082,
	1083, 332, 523, 978, 1859, 1084, 2125, 828, 93, 51,
	1837, 1937, 1817, 1813, 1812, 1649, 1819, 1840, 1393, 88,
	730, 334, 1046, 1822, 866, 1830, 1419, 112, 1537, 529,
	2153, 787, 546, 546, 2099, 1457, 895, 1203, 1835, 430,
	1521, 2102, 1810, 1139, 546, 445, 1865, 444, 443, 1579,
	1580, 1581, 1583, 1808, 440, 441, 1379, 1130, 1758, 1498,
	840, 1110, 1794, 428, 420, 956, 949, 1841, 1387, 1252,
	1152, 1250, 1249, 112, 1848, 1844, 1063, 518, 1741, 1737,
	1263, 1880, 955, 369, 61, 737, 1853, 1854, 345, 1890,
	1891, 1892, 1860, 2032, 32, 76, 415, 27, 17, 740,
	1873, 22, 16, 1391, 691, 36, 39, 1897, 38, 1888,
	62, 1136, 1603, 1362, 2124, 2214, 756, 2235, 2156, 2071,
	2075, 1893, 1298, 2062, 456, 835, 2061, 1889, 2201, 23,
	1875, 1876, 1877, 1878, 2200, 4, 406, 1899, 29, 2,
	0, 0, 1922, 1923, 1924, 0, 1898, 0, 0, 958,
	1887, 0, 1545, 0, 1932, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 960, 960, 960, 960, 960, 0,
	0, 1921, 0, 0, 0, 1955, 1956, 1957, 1958, 1959,
	1926, 960, 1832, 1962, 1963, 1731, 1928, 1935, 1970, 1950,
	1951, 960, 418, 1941, 1949, 1927, 1768, 1750, 0, 0,
	0, 1353, 1667, 1942, 1900, 0, 1902, 0, 0, 530,
	0, 0, 542, 0, 0, 0, 0, 1973, 1907, 0,
	0, 112, 112, 112, 1862, 1730, 0, 695, 0, 1995,
	0, 1997, 0, 0, 1246, 0, 546, 1976, 0, 0,
	1967, 0, 0, 0, 1972, 0, 0, 0, 1277, 1977,
	1988, 0, 0, 0, 1994, 1990, 2022, 1991, 883, 1960,
	1987, 1982, 1953, 0, 1964, 0, 1881, 0, 0, 1883,
	0, 1998, 0, 0, 0, 0, 0, 883, 1270, 1731,
	1978, 62, 0, 0, 0, 2014, 0, 0, 0, 1979,
	1980, 1981, 2016, 0, 0, 2026, 1969, 0, 0, 0,
	0, 0, 2027, 0, 0, 2019, 0, 0, 62, 1783,
	0, 0, 0, 2051, 0, 0, 0, 2039, 0, 1730,
	0, 2044, 958, 0, 0, 2037, 0, 0, 0, 2046,
	0, 0, 0, 0, 1358, 2043, 0, 0, 0, 0,
	2095, 0, 1366, 1367, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 2028, 2029, 2030, 2031, 2094, 0,
	2106, 2035, 2036, 2093, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 2120, 0, 0, 1378, 2107, 0, 0,
	0, 528, 2112, 0, 0, 2113, 0, 0, 546, 2040,
	62, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	112, 0, 0, 112, 1845, 1846, 0, 1847, 0, 112,
	1849, 546, 1851, 0, 0, 0, 0, 0, 546, 546,
	546, 112, 112, 112, 0, 2132, 2134, 2147, 112, 0,
	0, 2108, 0, 546, 546, 0, 0, 2129, 2140, 2114,
	0, 0, 0, 0, 0, 0, 0, 2101, 2105, 0,
	542, 542, 0, 0, 0, 0, 0, 2044, 0, 2171,
	0, 0, 542, 2163, 0, 0, 0, 0, 0, 0,
	62, 0, 0, 0, 2170, 2178, 62, 418, 2175, 0,
	2173, 2192, 0, 0, 112, 546, 112, 2177, 546, 2183,
	2172, 2195, 883, 62, 1896, 2143, 2185, 0, 62, 0,
	0, 0, 2205, 0, 2204, 2211, 2203, 0, 2202, 2222,
	0, 2151, 0, 0, 2223, 0, 0, 62, 0, 2208,
	62, 62, 2229, 2190, 0, 62, 2192, 0, 0, 0,
	2238, 0, 0, 0, 112, 2241, 0, 0, 0, 0,
	835, 0, 62, 2230, 2245, 62, 2232, 2192, 2256, 2243,
	0, 2100, 2104, 2258, 0, 0, 0, 0, 0, 0,
	62, 2259, 62, 2266, 0, 2192, 62, 2192, 0, 2105,
	0, 2253, 0, 0, 0, 960, 0, 0, 0, 0,
	62, 0, 0, 62, 0, 2192, 546, 0, 0, 0,
	62, 0, 2271, 0, 62, 2192, 0, 0, 0, 2192,
	0, 0, 0, 2121, 2122, 0, 2213, 0, 0, 2280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 546, 1711, 1712, 0, 1714, 1715, 0,
	1717, 1718, 1719, 1720, 0, 1722, 1723, 1724, 856, 857,
	849, 850, 851, 852, 853, 854, 855, 848, 530, 0,
	858, 0, 0, 1616, 979, 0, 0, 112, 2273, 2274,
	0, 0, 0, 0, 0, 112, 112, 0, 0, 0,
	112, 112, 0, 2104, 112, 112, 112, 340, 0, 0,
	0, 0, 0, 0, 0, 2184, 0, 0, 0, 1185,
	1190, 546, 546, 0, 1196, 1199, 1200, 1201, 0, 0,
	0, 0, 0, 1663, 846, 856, 857, 849, 850, 851,
	852, 853, 854, 855, 848, 337, 0, 858, 0, 0,
	0, 1211, 0, 1214, 1215, 0, 0, 0, 1219, 0,
	1221, 1222, 0, 0, 0, 0, 0, 0, 1229, 1230,
	1231, 0, 1233, 1234, 0, 1236, 1237, 1238, 1239, 0,
	1241, 1242, 1243, 0, 960, 0, 0, 112, 546, 0,
	546, 0, 0, 0, 2257, 112, 112, 321, 1863, 112,
	0, 0, 0, 1857, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 338, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 112, 112,
	0, 0, 0, 0, 0, 0, 1048, 847, 846, 856,
	857, 849, 850, 851, 852, 853, 854, 855, 848, 0,
	330, 858, 0, 331, 0, 0, 336, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 542, 542, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 1868, 0,
	0, 542, 542, 1869, 0, 0, 1870, 0, 0, 0,
	0, 1871, 847, 846, 856, 857, 849, 850, 851, 852,
	853, 854, 855, 848, 0, 0, 858, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 322, 0, 1807, 0,
	0, 0, 0, 542, 0, 0, 1116, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 960, 335, 325,
	326, 0, 343, 1828, 0, 0, 327, 329, 0, 323,
	342, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 112, 112, 112, 112,
	0, 0, 0, 542, 0, 0, 0, 112, 0, 0,
	0, 0, 112, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 112, 847, 846, 856, 857, 849, 850, 851,
	852, 853, 854, 855, 848, 0, 0, 858, 0, 0,
	0, 0, 0, 546, 1179, 0, 1456, 847, 846, 856,
	857, 849, 850, 851, 852, 853, 854, 855, 848, 0,
	0, 858, 530, 0, 1670, 0, 0, 0, 0, 0,
	0, 1481, 1482, 0, 0, 0, 1486, 0, 0, 1489,
	1209, 1210, 0, 0, 1494, 847, 846, 856, 857, 849,
	850, 851, 852, 853, 854, 855, 848, 0, 0, 858,
	0, 0, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 112, 546, 546, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 542,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	546, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 842, 0, 845, 0, 546, 0, 0, 0,
	0, 859, 860, 861, 862, 863, 864, 865, 786, 843,
	844, 841, 847, 846, 856, 857, 849, 850, 851, 852,
	853, 854, 855, 848, 0, 0, 858, 0, 0, 0,
	0, 0, 0, 0, 1015, 0, 542, 546, 542, 847,
	846, 856, 857, 849, 850, 851, 852, 853, 854, 855,
	848, 110, 0, 858, 344, 0, 0, 0, 0, 0,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	546, 0, 0, 2164, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	546, 0, 521, 531, 0, 110, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 542, 1436, 0, 110,
	546, 546, 0, 546, 0, 546, 0, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1002, 847, 846,
	856, 857, 849, 850, 851, 852, 853, 854, 855, 848,
	0, 0, 858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 1016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2116, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 112, 546, 0, 0,
	0, 0, 0, 0, 546, 546, 0, 0, 0, 0,
	0, 0, 530, 1029, 1032, 1033, 1034, 1035, 1036, 1037,
	0, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 0, 1017,
	1018, 1019, 1020, 996, 1000, 1030, 997, 1003, 999, 1001,
	998, 0, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 546, 546, 546, 0, 0, 0, 0, 0, 110,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 1600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 542, 542, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1660, 1661, 0,
	0, 0, 0, 546, 0, 112, 0, 0, 0, 0,
	546, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 546,
	0, 1015, 0, 0, 112, 1700, 112, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 1116, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 110, 110, 0, 0, 542, 542,
	0, 542, 531, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 1002, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 546, 0, 0, 0, 1016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 1833, 1834, 0, 546, 0, 0, 0, 0,
	1029, 1032, 1033, 1034, 1035, 1036, 1037, 0, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 546, 1017, 1018, 1019, 1020,
	996, 1000, 1030, 997, 1003, 999, 1001, 998, 0, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 110, 0,
	0, 0, 110, 0, 0, 110, 0, 0, 0, 546,
	0, 1070, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 110, 110, 110, 0, 0, 0, 0,
	110, 546, 1885, 0, 0, 0, 0, 0, 0, 1885,
	1885, 1885, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 110, 0, 372, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1946, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 1189, 1189, 0, 0, 0, 1189,
	1189, 1189, 1189, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2018, 1189, 1189, 1189, 1189,
	0, 0, 1189, 1189, 1189, 1189, 1189, 0, 0, 0,
	0, 0, 0, 1189, 1189, 1189, 0, 1189, 1189, 0,
	1189, 1189, 1189, 1189, 0, 1189, 1189, 1189, 0, 110,
	2042, 0, 0, 0, 0, 0, 0, 110, 372, 0,
	0, 0, 110, 110, 0, 0, 110, 1280, 1070, 531,
	0, 0, 0, 0, 0, 30, 0, 63, 33, 34,
	0, 1070, 0, 0, 30, 0, 63, 33, 34, 59,
	1767, 0, 0, 0, 0, 69, 0, 0, 59, 35,
	0, 0, 0, 0, 69, 0, 0, 0, 35, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 110,
	0, 0, 0, 542, 0, 0, 0, 110, 110, 0,
	2076, 110, 0, 2234, 2237, 2233, 0, 0, 0, 2076,
	0, 0, 0, 2145, 2282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1376,
	1377, 110, 0, 0, 0, 0, 0, 0, 0, 37,
	65, 41, 40, 43, 0, 0, 0, 0, 37, 65,
	41, 40, 43, 0, 0, 2077, 0, 1767, 0, 0,
	1070, 0, 0, 0, 2077, 0, 0, 1885, 0, 0,
	0, 44, 68, 67, 0, 0, 0, 0, 42, 542,
	44, 68, 67, 0, 0, 0, 0, 42, 0, 0,
	0, 30, 0, 63, 33, 34, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 69, 0, 0, 0, 35, 0, 0, 0, 1189,
	57, 58, 0, 2078, 0, 0, 0, 0, 0, 57,
	58, 0, 2078, 2079, 66, 0, 48, 49, 0, 0,
	0, 1189, 2079, 66, 0, 48, 49, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 1189, 0, 0,
	0, 1189, 0, 0, 1189, 0, 2076, 0, 0, 1189,
	0, 2278, 0, 0, 0, 0, 531, 110, 110, 110,
	110, 110, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 110, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 110, 37, 65, 41, 40, 43,
	0, 0, 0, 0, 0, 0, 64, 0, 0, 0,
	0, 2077, 0, 0, 0, 64, 30, 0, 63, 33,
	34, 0, 0, 0, 0, 0, 0, 44, 68, 67,
	59, 0, 0, 0, 42, 0, 69, 0, 0, 0,
	35, 30, 0, 63, 33, 34, 0, 0, 0, 0,
	0, 70, 0, 0, 0, 59, 0, 0, 0, 0,
	70, 69, 0, 0, 0, 35, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 71, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 2079,
	66, 0, 48, 49, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 71, 0, 0, 2267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 110, 0,
	37, 65, 41, 40, 43, 0, 0, 0, 0, 1189,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	1189, 0, 1070, 0, 0, 37, 65, 41, 40, 43,
	0, 0, 44, 68, 67, 0, 0, 0, 0, 42,
	0, 2077, 64, 0, 0, 0, 30, 0, 63, 33,
	34, 0, 0, 0, 0, 0, 0, 44, 68, 67,
	59, 0, 0, 0, 42, 0, 69, 0, 0, 0,
	35, 0, 0, 0, 0, 0, 0, 0, 531, 0,
	0, 57, 58, 0, 2078, 0, 0, 70, 0, 0,
	0, 0, 0, 0, 2079, 66, 0, 48, 49, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 71, 2078,
	0, 0, 0, 30, 0, 63, 33, 34, 0, 2079,
	66, 0, 48, 49, 0, 0, 0, 59, 0, 0,
	0, 2076, 0, 69, 0, 0, 2191, 35, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	37, 65, 41, 40, 43, 71, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 2077, 64, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 0, 2076, 0,
	0, 0, 44, 68, 67, 0, 110, 0, 0, 42,
	0, 0, 64, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 0, 70, 0, 0, 0, 0, 37, 65, 41,
	40, 43, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 57, 58, 2077, 2078, 0, 0, 70, 0, 0,
	0, 0, 0, 0, 2079, 66, 0, 48, 49, 44,
	68, 67, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 66, 0, 48, 49, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 0, 0,
	0, 0, 0, 0, 64, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 372, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 644, 287, 602, 667, 574,
	591, 678, 592, 595, 633, 560, 614, 223, 589, 561,
	0, 578, 551, 585, 552, 575, 604, 157, 573, 646,
	617, 666, 187, 629, 0, 148, 195, 193, 0, 0,
	110, 229, 285, 665, 610, 0, 673, 190, 0, 626,
	308, 276, 208, 0, 0, 606, 653, 612, 642, 601,
	635, 567, 625, 668, 590, 631, 669, 531, 0, 0,
	2123, 0, 0, 0, 0, 0, 0, 110, 0, 138,
	0, 628, 663, 587, 630, 632, 549, 627, 0, 555,
	562, 677, 659, 581, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 605, 613, 639, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 623, 0, 0,
	0, 563, 556, 0, 0, 603, 0, 0, 0, 566,
	117, 580, 640, 0, 547, 167, 209, 128, 643, 658,
	600, 180, 314, 662, 597, 596, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 588,
	548, 647, 576, 586, 149, 584, 254, 227, 303, 0,
	620, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	599, 634, 577, 146, 637, 624, 652, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 2126, 2127, 2128, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 553, 0, 278,
	306, 319, 196, 135, 572, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 570, 571, 568, 0,
	569, 615, 616, 670, 671, 672, 641, 564, 0, 654,
	655, 0, 645, 660, 661, 636, 679, 593, 594, 554,
	557, 558, 559, 565, 607, 608, 619, 622, 650, 649,
	648, 651, 656, 675, 674, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 618, 113, 124,
	189, 680, 247, 163, 307, 550, 155, 0, 0, 609,
	611, 621, 638, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 657,
	664, 644, 287, 602, 667, 574, 591, 678, 592, 595,
	633, 560, 614, 223, 589, 561, 0, 578, 551, 585,
	552, 575, 604, 157, 573, 646, 617, 666, 187, 629,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 665,
	610, 0, 673, 190, 0, 626, 308, 276, 208, 0,
	0, 606, 653, 612, 642, 601, 635, 567, 625, 668,
	590, 631, 669, 0, 0, 0, 545, 0, 1299, 1300,
	0, 0, 0, 0, 0, 138, 0, 628, 663, 587,
	630, 632, 549, 627, 0, 555, 562, 677, 659, 581,
	582, 583, 1546, 0, 0, 0, 0, 0, 0, 605,
	613, 639, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 623, 0, 0, 0, 563, 556, 0,
	0, 603, 0, 0, 0, 566, 117, 580, 640, 0,
	547, 167, 209, 128, 643, 658, 600, 180, 314, 662,
	597, 596, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 588, 548, 647, 576, 586,
	149, 584, 254, 227, 303, 0, 620, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 599, 634, 577, 146,
	637, 624, 652, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 553, 0, 278, 306, 319, 196, 135,
	572, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 570, 571, 568, 0, 569, 615, 616, 670,
	671, 672, 641, 564, 0, 654, 655, 0, 645, 660,
	661, 636, 679, 593, 594, 554, 557, 558, 559, 565,
	607, 608, 619, 622, 650, 649, 648, 651, 656, 675,
	674, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 618, 113, 124, 189, 680, 247, 163,
	307, 550, 155, 0, 0, 609, 611, 621, 638, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 657, 664, 644, 287, 602,
	667, 574, 591, 678, 592, 595, 633, 560, 614, 223,
	589, 561, 0, 578, 551, 585, 552, 575, 604, 157,
	573, 646, 617, 666, 187, 629, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 665, 610, 0, 673, 190,
	0, 626, 308, 276, 208, 0, 0, 606, 653, 612,
	642, 601, 635, 567, 625, 668, 590, 631, 669, 0,
	0, 0, 545, 0, 1299, 1300, 0, 0, 0, 0,
	0, 138, 0, 628, 663, 587, 630, 632, 549, 627,
	0, 555, 562, 677, 659, 581, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 605, 613, 639, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 623,
	0, 0, 0, 563, 556, 0, 0, 603, 0, 0,
	0, 566, 117, 580, 640, 0, 547, 167, 209, 128,
	643, 658, 600, 180, 314, 662, 597, 596, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 588, 548, 647, 576, 586, 149, 584, 254, 227,
	303, 0, 620, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 599, 634, 577, 146, 637, 624, 652, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 553,
	0, 278, 306, 319, 196, 135, 572, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 570, 571,
	568, 0, 569, 615, 616, 670, 671, 672, 641, 564,
	0, 654, 655, 0, 645, 660, 661, 636, 679, 593,
	594, 554, 557, 558, 559, 565, 607, 608, 619, 622,
	650, 649, 648, 651, 656, 675, 674, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 618,
	113, 124, 189, 680, 247, 163, 307, 550, 155, 0,
	0, 609, 611, 621, 638, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 657, 664, 644, 287, 602, 667, 574, 591, 678,
	592, 595, 633, 560, 614, 223, 589, 561, 0, 578,
	551, 585, 552, 575, 604, 157, 573, 646, 617, 666,
	187, 629, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 665, 610, 0, 673, 190, 0, 626, 308, 276,
	208, 0, 0, 606, 653, 612, 642, 601, 635, 567,
	625, 668, 590, 631, 669, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 628,
	663, 587, 630, 632, 549, 627, 0, 555, 562, 677,
	659, 581, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 605, 613, 639, 598, 0, 0, 0, 0, 0,
	0, 1952, 0, 579, 0, 623, 0, 0, 0, 563,
	556, 0, 0, 603, 0, 0, 0, 566, 117, 580,
	640, 0, 547, 167, 209, 128, 643, 658, 600, 180,
	314, 662, 597, 596, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 588, 548, 647,
	576, 586, 149, 584, 254, 227, 303, 0, 620, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 599, 634,
	577, 146, 637, 624, 652, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 553, 0, 278, 306, 319,
	196, 135, 572, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 570, 571, 568, 0, 569, 615,
	616, 670, 671, 672, 641, 564, 0, 654, 655, 0,
	645, 660, 661, 636, 679, 593, 594, 554, 557, 558,
	559, 565, 607, 608, 619, 622, 650, 649, 648, 651,
	656, 675, 674, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 618, 113, 124, 189, 680,
	247, 163, 307, 550, 155, 0, 0, 609, 611, 621,
	638, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 657, 664, 644,
	287, 602, 667, 574, 591, 678, 592, 595, 633, 560,
	614, 223, 589, 561, 0, 578, 551, 585, 552, 575,
	604, 157, 573, 646, 617, 666, 187, 629, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 665, 610, 0,
	673, 190, 0, 626, 308, 276, 208, 0, 0, 606,
	653, 612, 642, 601, 635, 567, 625, 668, 590, 631,
	669, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 628, 663, 587, 630, 632,
	549, 627, 0, 555, 562, 677, 659, 581, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 605, 613, 639,
	598, 0, 0, 0, 0, 0, 0, 1674, 0, 579,
	0, 623, 0, 0, 0, 563, 556, 0, 0, 603,
	0, 0, 0, 566, 117, 580, 640, 0, 547, 167,
	209, 128, 643, 658, 600, 180, 314, 662, 597, 596,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 588, 548, 647, 576, 586, 149, 584,
	254, 227, 303, 0, 620, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 599, 634, 577, 146, 637, 624,
	652, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 553, 0, 278, 306, 319, 196, 135, 572, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	570, 571, 568, 0, 569, 615, 616, 670, 671, 672,
	641, 564, 0, 654, 655, 0, 645, 660, 661, 636,
	679, 593, 594, 554, 557, 558, 559, 565, 607, 608,
	619, 622, 650, 649, 648, 651, 656, 675, 674, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 618, 113, 124, 189, 680, 247, 163, 307, 550,
	155, 0, 0, 609, 611, 621, 638, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 657, 664, 644, 287, 602, 667, 574,
	591, 678, 592, 595, 633, 560, 614, 223, 589, 561,
	0, 578, 551, 585, 552, 575, 604, 157, 573, 646,
	617, 666, 187, 629, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 665, 610, 0, 673, 190, 0, 626,
	308, 276, 208, 0, 0, 606, 653, 612, 642, 601,
	635, 567, 625, 668, 590, 631, 669, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 628, 663, 587, 630, 632, 549, 627, 0, 555,
	562, 677, 659, 581, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 605, 613, 639, 598, 0, 0, 0,
	0, 0, 0, 1666, 0, 579, 0, 623, 0, 0,
	0, 563, 556, 0, 0, 603, 0, 0, 0, 566,
	117, 580, 640, 0, 547, 167, 209, 128, 643, 658,
	600, 180, 314, 662, 597, 596, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 588,
	548, 647, 576, 586, 149, 584, 254, 227, 303, 0,
	620, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	599, 634, 577, 146, 637, 624, 652, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 553, 0, 278,
	306, 319, 196, 135, 572, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 570, 571, 568, 0,
	569, 615, 616, 670, 671, 672, 641, 564, 0, 654,
	655, 0, 645, 660, 661, 636, 679, 593, 594, 554,
	557, 558, 559, 565, 607, 608, 619, 622, 650, 649,
	648, 651, 656, 675, 674, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 618, 113, 124,
	189, 680, 247, 163, 307, 550, 155, 0, 0, 609,
	611, 621, 638, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 657,
	664, 644, 287, 602, 667, 574, 591, 678, 592, 595,
	633, 560, 614, 223, 589, 561, 0, 578, 551, 585,
	552, 575, 604, 157, 573, 646, 617, 666, 187, 629,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 665,
	610, 0, 673, 190, 0, 626, 308, 276, 208, 0,
	0, 606, 653, 612, 642, 601, 635, 567, 625, 668,
	590, 631, 669, 71, 0, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 628, 663, 587,
	630, 632, 549, 627, 0, 555, 562, 677, 659, 581,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 605,
	613, 639, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 623, 0, 0, 0, 563, 556, 0,
	0, 603, 0, 0, 0, 566, 117, 580, 640, 0,
	547, 167, 209, 128, 643, 658, 600, 180, 314, 662,
	597, 596, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 588, 548, 647, 576, 586,
	149, 584, 254, 227, 303, 0, 620, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 599, 634, 577, 146,
	637, 624, 652, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 553, 0, 278, 306, 319, 196, 135,
	572, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 570, 571, 568, 0, 569, 615, 616, 670,
	671, 672, 641, 564, 0, 654, 655, 0, 645, 660,
	661, 636, 679, 593, 594, 554, 557, 558, 559, 565,
	607, 608, 619, 622, 650, 649, 648, 651, 656, 675,
	674, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 618, 113, 124, 189, 680, 247, 163,
	307, 550, 155, 0, 0, 609, 611, 621, 638, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 657, 664, 644, 287, 602,
	667, 574, 591, 678, 592, 595, 633, 560, 614, 223,
	589, 561, 0, 578, 551, 585, 552, 575, 604, 157,
	573, 646, 617, 666, 187, 629, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 665, 610, 0, 673, 190,
	0, 626, 308, 276, 208, 0, 0, 606, 653, 612,
	642, 601, 635, 567, 625, 668, 590, 631, 669, 0,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 628, 663, 587, 630, 632, 549, 627,
	0, 555, 562, 677, 659, 581, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 605, 613, 639, 598, 0,
	0, 0, 0, 0, 0, 1281, 0, 579, 0, 623,
	0, 0, 0, 563, 556, 0, 0, 603, 0, 0,
	0, 566, 117, 580, 640, 0, 547, 167, 209, 128,
	643, 658, 600, 180, 314, 662, 597, 596, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 588, 548, 647, 576, 586, 149, 584, 254, 227,
	303, 0, 620, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 599, 634, 577, 146, 637, 624, 652, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 553,
	0, 278, 306, 319, 196, 135, 572, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 570, 571,
	568, 0, 569, 615, 616, 670, 671, 672, 641, 564,
	0, 654, 655, 0, 645, 660, 661, 636, 679, 593,
	594, 554, 557, 558, 559, 565, 607, 608, 619, 622,
	650, 649, 648, 651, 656, 675, 674, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 618,
	113, 124, 189, 680, 247, 163, 307, 550, 155, 0,
	0, 609, 611, 621, 638, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 657, 664, 644, 287, 602, 667, 574, 591, 678,
	592, 595, 633, 560, 614, 223, 589, 561, 0, 578,
	551, 585, 552, 575, 604, 157, 573, 646, 617, 666,
	187, 629, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 665, 610, 0, 673, 190, 0, 626, 308, 276,
	208, 0, 0, 606, 653, 612, 642, 601, 635, 567,
	625, 668, 590, 631, 669, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 628,
	663, 587, 630, 632, 549, 627, 0, 555, 562, 677,
	659, 581, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 605, 613, 639, 598, 0, 0, 0, 0, 0,
	0, 1145, 0, 579, 0, 623, 0, 0, 0, 563,
	556, 0, 0, 603, 0, 0, 0, 566, 117, 580,
	640, 0, 547, 167, 209, 128, 643, 658, 600, 180,
	314, 662, 597, 596, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 588, 548, 647,
	576, 586, 149, 584, 254, 227, 303, 0, 620, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 599, 634,
	577, 146, 637, 624, 652, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 553, 0, 278, 306, 319,
	196, 135, 572, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 570, 571, 568, 0, 569, 615,
	616, 670, 671, 672, 641, 564, 0, 654, 655, 0,
	645, 660, 661, 636, 679, 593, 594, 554, 557, 558,
	559, 565, 607, 608, 619, 622, 650, 649, 648, 651,
	656, 675, 674, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 618, 113, 124, 189, 680,
	247, 163, 307, 550, 155, 0, 0, 609, 611, 621,
	638, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 657, 664, 644,
	287, 602, 667, 574, 591, 678, 592, 595, 633, 560,
	614, 223, 589, 561, 0, 578, 551, 585, 552, 575,
	604, 157, 573, 646, 617, 666, 187, 629, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 665, 610, 0,
	673, 190, 0, 626, 308, 276, 208, 0, 0, 606,
	653, 612, 642, 601, 635, 567, 625, 668, 590, 631,
	669, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 628, 663, 587, 630, 632,
	549, 627, 0, 555, 562, 677, 659, 581, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 605, 613, 639,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	0, 623, 0, 0, 0, 563, 556, 0, 0, 603,
	0, 0, 0, 566, 117, 580, 640, 0, 547, 167,
	209, 128, 643, 658, 600, 180, 314, 662, 597, 596,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 588, 548, 647, 576, 586, 149, 584,
	254, 227, 303, 0, 620, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 599, 634, 577, 146, 637, 624,
	652, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 553, 0, 278, 306, 319, 196, 135, 572, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	570, 571, 568, 0, 569, 615, 616, 670, 671, 672,
	641, 564, 0, 654, 655, 0, 645, 660, 661, 636,
	679, 593, 594, 554, 557, 558, 559, 565, 607, 608,
	619, 622, 650, 649, 648, 651, 656, 675, 674, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 618, 113, 124, 189, 680, 247, 163, 307, 550,
	155, 0, 0, 609, 611, 621, 638, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 657, 664, 644, 287, 602, 667, 574,
	591, 678, 592, 595, 633, 560, 614, 223, 589, 561,
	0, 578, 551, 585, 552, 575, 604, 157, 573, 646,
	617, 666, 187, 629, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 665, 610, 0, 673, 190, 0, 626,
	308, 276, 208, 0, 0, 606, 653, 612, 642, 601,
	635, 567, 625, 668, 590, 631, 669, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 628, 663, 587, 630, 632, 549, 627, 0, 555,
	562, 677, 659, 581, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 605, 613, 639, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 623, 0, 0,
	0, 563, 556, 0, 0, 603, 0, 0, 0, 566,
	117, 580, 640, 0, 547, 167, 209, 128, 643, 658,
	600, 180, 314, 662, 597, 596, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 588,
	548, 647, 576, 586, 149, 584, 254, 227, 303, 0,
	620, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	599, 634, 577, 146, 637, 624, 652, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 553, 0, 278,
	306, 319, 196, 135, 572, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 570, 571, 568, 0,
	569, 615, 616, 670, 671, 672, 641, 564, 0, 654,
	655, 0, 645, 660, 661, 636, 679, 593, 594, 554,
	557, 558, 559, 565, 607, 608, 619, 622, 650, 649,
	648, 651, 656, 675, 674, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 618, 113, 124,
	189, 680, 247, 163, 307, 550, 155, 0, 0, 609,
	611, 621, 638, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 657,
	664, 644, 287, 602, 667, 574, 591, 678, 592, 595,
	633, 560, 614, 223, 589, 561, 0, 578, 551, 585,
	552, 575, 604, 157, 573, 646, 617, 666, 187, 629,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 1310,
	1314, 0, 673, 190, 0, 626, 308, 276, 208, 0,
	0, 606, 653, 612, 642, 601, 635, 567, 625, 668,
	590, 631, 669, 0, 0, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 628, 663, 587,
	630, 632, 549, 627, 0, 555, 562, 677, 659, 581,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 605,
	613, 639, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 623, 0, 0, 0, 563, 556, 0,
	0, 603, 0, 0, 0, 566, 117, 580, 640, 0,
	547, 167, 209, 128, 643, 658, 1313, 180, 314, 662,
	597, 596, 1308, 0, 1309, 170, 188, 544, 114, 126,
	1306, 1312, 219, 252, 261, 588, 548, 647, 576, 586,
	149, 584, 254, 227, 303, 0, 620, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 599, 634, 577, 146,
	637, 624, 652, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 553, 0, 278, 306, 319, 196, 135,
	572, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 570, 571, 568, 0, 569, 615, 616, 670,
	671, 672, 641, 564, 0, 654, 655, 0, 645, 660,
	661, 636, 679, 593, 594, 554, 557, 558, 559, 565,
	607, 608, 619, 622, 650, 649, 648, 651, 656, 675,
	674, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 618, 113, 124, 189, 680, 247, 163,
	307, 550, 155, 0, 0, 609, 611, 621, 638, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 657, 664, 644, 287, 602,
	667, 574, 591, 678, 592, 595, 633, 560, 614, 223,
	589, 561, 0, 578, 551, 585, 552, 575, 604, 157,
	573, 646, 617, 666, 187, 629, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 665, 610, 0, 673, 190,
	0, 626, 308, 276, 208, 0, 0, 606, 653, 612,
	642, 601, 635, 567, 625, 668, 590, 631, 669, 0,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 628, 663, 587, 630, 632, 549, 627,
	0, 555, 562, 677, 659, 581, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 605, 613, 639, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 623,
	0, 0, 0, 563, 556, 0, 0, 603, 0, 0,
	0, 566, 117, 580, 640, 0, 547, 167, 209, 128,
	643, 658, 600, 180, 314, 662, 597, 596, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 588, 548, 647, 576, 586, 149, 584, 254, 227,
	303, 0, 620, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 599, 634, 577, 146, 637, 624, 652, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 553,
	0, 278, 306, 319, 196, 135, 572, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 570, 571,
	568, 0, 569, 615, 616, 670, 671, 672, 641, 564,
	0, 654, 655, 0, 645, 660, 661, 636, 679, 593,
	594, 554, 557, 558, 559, 565, 607, 608, 619, 622,
	650, 649, 648, 651, 656, 675, 674, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 618,
	113, 124, 189, 680, 247, 163, 307, 550, 155, 0,
	0, 609, 611, 621, 638, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 657, 664, 644, 287, 602, 667, 574, 591, 678,
	592, 595, 633, 560, 614, 223, 589, 561, 0, 578,
	551, 585, 552, 575, 604, 157, 573, 646, 617, 666,
	187, 629, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 665, 610, 0, 673, 190, 0, 626, 308, 276,
	208, 0, 0, 606, 653, 612, 642, 601, 635, 567,
	625, 668, 590, 631, 669, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 628,
	663, 587, 630, 632, 549, 627, 0, 555, 562, 677,
	659, 581, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 605, 613, 639, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 623, 0, 0, 0, 563,
	556, 0, 0, 603, 0, 0, 0, 566, 117, 580,
	640, 0, 547, 167, 209, 128, 643, 658, 600, 180,
	314, 662, 597, 596, 243, 0, 281, 170, 188, 544,
	114, 126, 540, 169, 219, 252, 261, 588, 548, 647,
	576, 586, 149, 584, 254, 227, 303, 0, 620, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 599, 634,
	577, 146, 637, 624, 652, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 553, 0, 278, 306, 319,
	196, 135, 572, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 570, 571, 568, 0, 569, 615,
	616, 670, 671, 672, 641, 564, 0, 654, 655, 0,
	645, 660, 661, 636, 679, 593, 594, 554, 557, 558,
	559, 565, 607, 608, 619, 622, 650, 649, 648, 651,
	656, 675, 674, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 618, 113, 124, 189, 680,
	247, 163, 307, 550, 155, 0, 0, 609, 611, 621,
	638, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 657, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 426, 0, 0, 0, 157,
	423, 0, 0, 0, 187, 0, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 0, 0, 0, 470, 190,
	0, 0, 308, 276, 208, 0, 0, 0, 0, 459,
	460, 0, 0, 0, 0, 0, 0, 1288, 0, 71,
	0, 0, 424, 447, 446, 449, 450, 451, 452, 0,
	0, 138, 448, 453, 454, 455, 1289, 0, 0, 421,
	438, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 0, 0, 0, 0, 484,
	0, 437, 0, 0, 432, 433, 434, 439, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 167, 209, 128,
	461, 0, 0, 180, 314, 0, 0, 482, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 467, 0, 0, 0, 0, 149, 0, 254, 227,
	303, 0, 0, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 0, 0, 0, 146, 0, 0, 0, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 0,
	0, 278, 306, 319, 196, 135, 0, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 471, 483,
	477, 479, 478, 475, 476, 474, 473, 472, 485, 462,
	463, 464, 465, 468, 0, 480, 481, 0, 0, 0,
	0, 498, 499, 500, 501, 502, 503, 504, 497, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 486, 487,
	488, 489, 490, 491, 492, 493, 496, 494, 495, 466,
	113, 124, 189, 0, 247, 163, 307, 0, 155, 0,
	0, 0, 0, 0, 0, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 30, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 426,
	0, 0, 0, 157, 423, 0, 0, 0, 187, 0,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 0,
	0, 0, 470, 190, 0, 0, 308, 276, 208, 0,
	0, 0, 0, 459, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 424, 447, 446, 449,
	450, 451, 452, 0, 0, 138, 448, 453, 454, 455,
	0, 0, 0, 421, 438, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 0,
	0, 0, 0, 484, 0, 437, 0, 0, 432, 433,
	434, 439, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 167, 209, 128, 461, 0, 0, 180, 314, 0,
	0, 482, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 467, 0, 0, 0, 0,
	149, 0, 254, 227, 303, 0, 0, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 0, 0, 0, 146,
	0, 0, 0, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 0, 0, 278, 306, 319, 196, 135,
	0, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 471, 483, 477, 479, 478, 475, 476, 474,
	473, 472, 485, 462, 463, 464, 465, 468, 0, 480,
	481, 0, 0, 0, 0, 498, 499, 500, 501, 502,
	503, 504, 497, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 486, 487, 488, 489, 490, 491, 492, 493,
	496, 494, 495, 466, 113, 124, 189, 70, 247, 163,
	307, 0, 155, 0, 0, 0, 0, 0, 0, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 157, 423, 0, 0,
	0, 187, 0, 0, 148, 195, 193, 0, 0, 0,
	229, 285, 0, 0, 0, 470, 190, 0, 0, 308,
	276, 208, 0, 0, 0, 0, 459, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 424,
	447, 446, 449, 450, 451, 452, 0, 0, 138, 448,
	453, 454, 455, 0, 0, 0, 421, 438, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 417, 0, 0, 0, 484, 0, 437, 0,
	0, 432, 433, 434, 439, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 167, 209, 128, 461, 0, 0,
	180, 314, 0, 0, 482, 243, 0, 281, 170, 188,
	132, 114, 126, 142, 169, 219, 252, 261, 467, 0,
	0, 0, 0, 149, 0, 254, 227, 303, 0, 0,
	233, 253, 191, 292, 245, 301, 302, 171, 286, 311,
	316, 273, 158, 0, 118, 0, 240, 153, 184, 0,
	0, 0, 146, 0, 0, 0, 272, 133, 288, 207,
	213, 143, 145, 144, 127, 267, 290, 137, 147, 277,
	257, 282, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 284, 300, 139, 265, 121, 298, 280,
	205, 181, 182, 120, 0, 250, 156, 166, 151, 222,
	0, 165, 242, 295, 296, 150, 318, 129, 310, 123,
	130, 309, 216, 0, 215, 312, 291, 299, 206, 199,
	0, 122, 297, 204, 198, 186, 161, 173, 238, 194,
	239, 174, 211, 210, 212, 0, 0, 0, 278, 306,
	319, 196, 135, 0, 266, 289, 0, 0, 136, 164,
	160, 237, 214, 131, 176, 275, 185, 192, 249, 317,
	226, 255, 140, 305, 274, 471, 483, 477, 479, 478,
	475, 476, 474, 473, 472, 485, 462, 463, 464, 465,
	468, 0, 480, 481, 0, 0, 0, 0, 498, 499,
	500, 501, 502, 503, 504, 497, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 486, 487, 488, 489, 490,
	491, 492, 493, 496, 494, 495, 466, 113, 124, 189,
	0, 247, 163, 307, 0, 155, 0, 0, 0, 0,
	0, 0, 115, 116, 125, 134, 141, 154, 159, 162,
	168, 172, 175, 177, 178, 179, 183, 197, 200, 201,
	202, 203, 217, 218, 220, 221, 224, 225, 228, 230,
	231, 232, 234, 235, 236, 241, 244, 246, 248, 251,
	256, 258, 259, 260, 262, 263, 264, 268, 269, 270,
	271, 279, 283, 293, 294, 304, 313, 315, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 426, 0, 0, 0, 157,
	423, 0, 0, 0, 187, 0, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 0, 0, 0, 470, 190,
	0, 0, 308, 276, 208, 0, 0, 0, 0, 459,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 776, 424, 447, 446, 449, 450, 451, 452, 0,
	0, 138, 448, 453, 454, 455, 0, 0, 0, 421,
	438, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 0, 0, 0, 0, 484,
	0, 437, 0, 0, 432, 433, 434, 439, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 167, 209, 128,
	461, 0, 0, 180, 314, 0, 0, 482, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 467, 0, 0, 0, 0, 149, 0, 254, 227,
	303, 0, 0, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 0, 0, 0, 146, 0, 0, 0, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 0,
	0, 278, 306, 319, 196, 135, 0, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 471, 483,
	477, 479, 478, 475, 476, 474, 473, 472, 485, 462,
	463, 464, 465, 468, 0, 480, 481, 0, 0, 0,
	0, 498, 499, 500, 501, 502, 503, 504, 497, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 486, 487,
	488, 489, 490, 491, 492, 493, 496, 494, 495, 466,
	113, 124, 189, 0, 247, 163, 307, 0, 155, 0,
	0, 0, 0, 0, 0, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 157, 423, 0, 0, 0, 187, 0, 0,
	148, 195, 193, 0, 0, 0, 229, 285, 0, 0,
	0, 470, 190, 0, 0, 308, 276, 208, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 424, 447, 446, 449, 450,
	451, 452, 0, 0, 138, 448, 453, 454, 455, 0,
	0, 0, 421, 438, 0, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 1187, 0,
	0, 0, 484, 0, 437, 0, 0, 432, 433, 434,
	439, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	167, 209, 128, 461, 0, 0, 180, 314, 0, 0,
	482, 243, 0, 281, 170, 188, 132, 114, 126, 142,
	169, 219, 252, 261, 467, 0, 0, 0, 0, 149,
	0, 254, 227, 303, 0, 0, 233, 253, 191, 292,
	245, 301, 302, 171, 286, 311, 316, 273, 158, 0,
	118, 0, 240, 153, 184, 0, 0, 0, 146, 0,
	0, 0, 272, 133, 288, 207, 213, 143, 145, 144,
	127, 267, 290, 137, 147, 277, 257, 282, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 284,
	300, 139, 265, 121, 298, 280, 205, 181, 182, 120,
	0, 250, 156, 166, 151, 222, 0, 165, 242, 295,
	296, 150, 318, 129, 310, 123, 130, 309, 216, 0,
	215, 312, 291, 299, 206, 199, 0, 122, 297, 204,
	198, 186, 161, 173, 238, 194, 239, 174, 211, 210,
	212, 0, 0, 0, 278, 306, 319, 196, 135, 0,
	266, 289, 0, 0, 136, 164, 160, 237, 214, 131,
	176, 275, 185, 192, 249, 317, 226, 255, 140, 305,
	274, 471, 483, 477, 479, 478, 475, 476, 474, 473,
	472, 485, 462, 463, 464, 465, 468, 0, 480, 481,
	0, 0, 0, 0, 498, 499, 500, 501, 502, 503,
	504, 497, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 486, 487, 488, 489, 490, 491, 492, 493, 496,
	494, 495, 466, 113, 124, 189, 0, 247, 163, 307,
	0, 155, 0, 0, 0, 0, 0, 0, 115, 116,
	125, 134, 141, 154, 159, 162, 168, 172, 175, 177,
	178, 179, 183, 197, 200, 201, 202, 203, 217, 218,
	220, 221, 224, 225, 228, 230, 231, 232, 234, 235,
	236, 241, 244, 246, 248, 251, 256, 258, 259, 260,
	262, 263, 264, 268, 269, 270, 271, 279, 283, 293,
	294, 304, 313, 315, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 426, 0, 0, 0, 157, 423, 0, 0, 0,
	187, 0, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 0, 0, 0, 470, 190, 0, 0, 308, 276,
	208, 0, 0, 0, 0, 459, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 424, 447,
	1198, 449, 450, 451, 452, 0, 0, 138, 448, 453,
	454, 455, 0, 0, 0, 421, 438, 0, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 1187, 0, 0, 0, 484, 0, 437, 0, 0,
	432, 433, 434, 439, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 167, 209, 128, 461, 0, 0, 180,
	314, 0, 0, 482, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 467, 0, 0,
	0, 0, 149, 0, 254, 227, 303, 0, 0, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 0, 0,
	0, 146, 0, 0, 0, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 0, 0, 278, 306, 319,
	196, 135, 0, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 471, 483, 477, 479, 478, 475,
	476, 474, 473, 472, 485, 462, 463, 464, 465, 468,
	0, 480, 481, 0, 0, 0, 0, 498, 499, 500,
	501, 502, 503, 504, 497, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 486, 487, 488, 489, 490, 491,
	492, 493, 496, 494, 495, 466, 113, 124, 189, 0,
	247, 163, 307, 0, 155, 0, 0, 0, 0, 0,
	0, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 157, 423,
	0, 0, 0, 187, 0, 0, 148, 195, 193, 0,
	0, 0, 229, 285, 0, 0, 0, 470, 190, 0,
	0, 308, 276, 208, 0, 0, 0, 0, 459, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 424, 447, 1195, 449, 450, 451, 452, 0, 0,
	138, 448, 453, 454, 455, 0, 0, 0, 421, 438,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 1187, 0, 0, 0, 484, 0,
	437, 0, 0, 432, 433, 434, 439, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 167, 209, 128, 461,
	0, 0, 180, 314, 0, 0, 482, 243, 0, 281,
	170, 188, 132, 114, 126, 142, 169, 219, 252, 261,
	467, 0, 0, 0, 0, 149, 0, 254, 227, 303,
	0, 0, 233, 253, 191, 292, 245, 301, 302, 171,
	286, 311, 316, 273, 158, 0, 118, 0, 240, 153,
	184, 0, 0, 0, 146, 0, 0, 0, 272, 133,
	288, 207, 213, 143, 145, 144, 127, 267, 290, 137,
	147, 277, 257, 282, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 284, 300, 139, 265, 121,
	298, 280, 205, 181, 182, 120, 0, 250, 156, 166,
	151, 222, 0, 165, 242, 295, 296, 150, 318, 129,
	310, 123, 130, 309, 216, 0, 215, 312, 291, 299,
	206, 199, 0, 122, 297, 204, 198, 186, 161, 173,
	238, 194, 239, 174, 211, 210, 212, 0, 0, 0,
	278, 306, 319, 196, 135, 0, 266, 289, 0, 0,
	136, 164, 160, 237, 214, 131, 176, 275, 185, 192,
	249, 317, 226, 255, 140, 305, 274, 471, 483, 477,
	479, 478, 475, 476, 474, 473, 472, 485, 462, 463,
	464, 465, 468, 0, 480, 481, 0, 0, 0, 0,
	498, 499, 500, 501, 502, 503, 504, 497, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 486, 487, 488,
	489, 490, 491, 492, 493, 496, 494, 495, 466, 113,
	124, 189, 0, 247, 163, 307, 0, 155, 0, 0,
	0, 0, 0, 0, 115, 116, 125, 134, 141, 154,
	159, 162, 168, 172, 175, 177, 178, 179, 183, 197,
	200, 201, 202, 203, 217, 218, 220, 221, 224, 225,
	228, 230, 231, 232, 234, 235, 236, 241, 244, 246,
	248, 251, 256, 258, 259, 260, 262, 263, 264, 268,
	269, 270, 271, 279, 283, 293, 294, 304, 313, 315,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 426, 0, 0,
	0, 157, 423, 0, 0, 0, 187, 0, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 0, 0, 0,
	470, 190, 0, 0, 308, 276, 208, 0, 0, 0,
	0, 459, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 1105, 424, 447, 446, 449, 450, 451,
	452, 0, 0, 138, 448, 453, 454, 455, 0, 0,
	0, 421, 438, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 0, 0, 0,
	0, 484, 0, 437, 0, 0, 432, 433, 434, 439,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 167,
	209, 128, 461, 0, 0, 180, 314, 0, 0, 482,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 467, 0, 0, 0, 0, 149, 0,
	254, 227, 303, 0, 0, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 0, 0, 0, 146, 0, 0,
	0, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 0, 0, 278, 306, 319, 196, 135, 0, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	471, 483, 477, 479, 478, 475, 476, 474, 473, 472,
	485, 462, 463, 464, 465, 468, 0, 480, 481, 0,
	0, 0, 0, 498, 499, 500, 501, 502, 503, 504,
	497, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	486, 487, 488, 489, 490, 491, 492, 493, 496, 494,
	495, 466, 113, 124, 189, 0, 247, 163, 307, 0,
	155, 0, 0, 0, 0, 0, 0, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 157, 423, 0, 0, 0, 187,
	0, 0, 148, 195, 193, 0, 0, 0, 229, 285,
	0, 0, 0, 470, 190, 0, 0, 308, 276, 208,
	0, 0, 0, 0, 459, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 424, 447, 446,
	449, 450, 451, 452, 0, 0, 138, 448, 453, 454,
	455, 0, 0, 0, 421, 438, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	0, 0, 0, 0, 484, 0, 437, 0, 0, 432,
	433, 434, 439, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 167, 209, 128, 461, 0, 0, 180, 314,
	0, 0, 482, 243, 0, 281, 170, 188, 132, 114,
	126, 142, 169, 219, 252, 261, 467, 0, 0, 0,
	0, 149, 0, 254, 227, 303, 0, 0, 233, 253,
	191, 292, 245, 301, 302, 171, 286, 311, 316, 273,
	158, 0, 118, 0, 240, 153, 184, 0, 0, 0,
	146, 0, 0, 0, 272, 133, 288, 207, 213, 143,
	145, 144, 127, 267, 290, 137, 147, 277, 257, 282,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 284, 300, 139, 265, 121, 298, 280, 205, 181,
	182, 120, 0, 250, 156, 166, 151, 222, 0, 165,
	242, 295, 296, 150, 318, 129, 310, 123, 130, 309,
	216, 0, 215, 312, 291, 299, 206, 199, 0, 122,
	297, 204, 198, 186, 161, 173, 238, 194, 239, 174,
	211, 210, 212, 0, 0, 0, 278, 306, 319, 196,
	135, 0, 266, 289, 0, 0, 136, 164, 160, 237,
	214, 131, 176, 275, 185, 192, 249, 317, 226, 255,
	140, 305, 274, 471, 483, 477, 479, 478, 475, 476,
	474, 473, 472, 485, 462, 463, 464, 465, 468, 0,
	480, 481, 0, 0, 0, 0, 498, 499, 500, 501,
	502, 503, 504, 497, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 486, 487, 488, 489, 490, 491, 492,
	493, 496, 494, 495, 466, 113, 124, 189, 0, 247,
	163, 307, 0, 155, 0, 0, 0, 0, 0, 0,
	115, 116, 125, 134, 141, 154, 159, 162, 168, 172,
	175, 177, 178, 179, 183, 197, 200, 201, 202, 203,
	217, 218, 220, 221, 224, 225, 228, 230, 231, 232,
	234, 235, 236, 241, 244, 246, 248, 251, 256, 258,
	259, 260, 262, 263, 264, 268, 269, 270, 271, 279,
	283, 293, 294, 304, 313, 315, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 426, 0, 0, 0, 157, 423, 0,
	0, 0, 187, 0, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 0, 0, 0, 470, 190, 0, 0,
	308, 276, 208, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	424, 447, 446, 449, 450, 451, 452, 0, 0, 138,
	448, 453, 454, 455, 0, 0, 0, 421, 438, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 0, 0, 0, 0, 484, 0, 437,
	0, 0, 432, 433, 434, 439, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 167, 209, 128, 461, 0,
	0, 180, 314, 0, 0, 482, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 467,
	0, 0, 0, 0, 149, 0, 254, 227, 303, 0,
	0, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	0, 0, 0, 146, 0, 0, 0, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 0, 0, 278,
	306, 319, 196, 135, 0, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 471, 483, 477, 479,
	478, 475, 476, 474, 473, 472, 485, 462, 463, 464,
	465, 468, 0, 480, 481, 0, 0, 0, 0, 791,
	792, 793, 794, 795, 799, 800, 804, 805, 813, 812,
	811, 814, 815, 817, 816, 818, 796, 797, 798, 801,
	802, 803, 806, 807, 810, 808, 809, 466, 113, 124,
	189, 0, 247, 163, 307, 0, 155, 0, 0, 0,
	0, 0, 0, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 187, 0, 0, 148, 195,
	193, 0, 0, 0, 229, 285, 0, 0, 0, 470,
	190, 0, 0, 308, 276, 208, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 424, 447, 446, 449, 450, 451, 452,
	0, 0, 138, 448, 453, 454, 455, 0, 0, 0,
	0, 438, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 0, 0, 0, 0,
	484, 0, 437, 0, 0, 432, 433, 434, 439, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 167, 209,
	128, 461, 0, 0, 180, 314, 0, 0, 482, 243,
	0, 281, 170, 188, 132, 114, 126, 142, 169, 219,
	252, 261, 467, 0, 0, 0, 0, 149, 0, 254,
	227, 303, 0, 2260, 233, 253, 191, 292, 245, 301,
	302, 171, 286, 311, 316, 273, 158, 0, 118, 0,
	240, 153, 184, 0, 0, 0, 146, 0, 0, 0,
	272, 133, 288, 207, 213, 143, 145, 144, 127, 267,
	290, 137, 147, 277, 257, 282, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 284, 300, 139,
	265, 121, 298, 280, 205, 181, 182, 120, 0, 250,
	156, 166, 151, 222, 0, 165, 242, 295, 296, 150,
	318, 129, 310, 123, 130, 309, 216, 0, 215, 312,
	291, 299, 206, 199, 0, 122, 297, 204, 198, 186,
	161, 173, 238, 194, 239, 174, 211, 210, 212, 0,
	0, 0, 278, 306, 319, 196, 135, 0, 266, 289,
	0, 0, 136, 164, 160, 237, 214, 131, 176, 275,
	185, 192, 249, 317, 226, 255, 140, 305, 274, 471,
	483, 477, 479, 478, 475, 476, 474, 473, 472, 485,
	462, 463, 464, 465, 468, 0, 480, 481, 0, 0,
	0, 0, 498, 499, 500, 501, 502, 503, 504, 497,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 486,
	487, 488, 489, 490, 491, 492, 493, 496, 494, 495,
	466, 113, 124, 189, 0, 247, 163, 307, 0, 155,
	0, 0, 0, 0, 0, 0, 115, 116, 125, 134,
	141, 154, 159, 162, 168, 172, 175, 177, 178, 179,
	183, 197, 200, 201, 202, 203, 217, 218, 220, 221,
	224, 225, 228, 230, 231, 232, 234, 235, 236, 241,
	244, 246, 248, 251, 256, 258, 259, 260, 262, 263,
	264, 268, 269, 270, 271, 279, 283, 293, 294, 304,
	313, 315, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 187, 0,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 0,
	0, 0, 470, 190, 0, 0, 308, 276, 208, 0,
	0, 0, 0, 459, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 776, 424, 447, 446, 449,
	450, 451, 452, 0, 0, 138, 448, 453, 454, 455,
	0, 0, 0, 0, 438, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 0,
	0, 0, 0, 484, 0, 437, 0, 0, 432, 433,
	434, 439, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 167, 209, 128, 461, 0, 0, 180, 314, 0,
	0, 482, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 467, 0, 0, 0, 0,
	149, 0, 254, 227, 303, 0, 0, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 0, 0, 0, 146,
	0, 0, 0, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 0, 0, 278, 306, 319, 196, 135,
	0, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 471, 483, 477, 479, 478, 475, 476, 474,
	473, 472, 485, 462, 463, 464, 465, 468, 0, 480,
	481, 0, 0, 0, 0, 498, 499, 500, 501, 502,
	503, 504, 497, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 486, 487, 488, 489, 490, 491, 492, 493,
	496, 494, 495, 466, 113, 124, 189, 0, 247, 163,
	307, 0, 155, 0, 0, 0, 0, 0, 0, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 187, 0, 0, 148, 195, 193, 0, 0, 0,
	229, 285, 0, 0, 0, 470, 190, 0, 0, 308,
	276, 208, 0, 0, 0, 0, 459, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 424,
	447, 446, 449, 450, 451, 452, 0, 0, 138, 448,
	453, 454, 455, 0, 0, 0, 0, 438, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 0, 0, 0, 0, 484, 0, 437, 0,
	0, 432, 433, 434, 439, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 167, 209, 128, 461, 0, 0,
	180, 314, 0, 0, 482, 243, 0, 281, 170, 188,
	132, 114, 126, 142, 169, 219, 252, 261, 467, 0,
	0, 0, 0, 149, 0, 254, 227, 303, 0, 0,
	233, 253, 191, 292, 245, 301, 302, 171, 286, 311,
	316, 273, 158, 0, 118, 0, 240, 153, 184, 0,
	0, 0, 146, 0, 0, 0, 272, 133, 288, 207,
	213, 143, 145, 144, 127, 267, 290, 137, 147, 277,
	257, 282, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 284, 300, 139, 265, 121, 298, 280,
	205, 181, 182, 120, 0, 250, 156, 166, 151, 222,
	0, 165, 242, 295, 296, 150, 318, 129, 310, 123,
	130, 309, 216, 0, 215, 312, 291, 299, 206, 199,
	0, 122, 297, 204, 198, 186, 161, 173, 238, 194,
	239, 174, 211, 210, 212, 0, 0, 0, 278, 306,
	319, 196, 135, 0, 266, 289, 0, 0, 136, 164,
	160, 237, 214, 131, 176, 275, 185, 192, 249, 317,
	226, 255, 140, 305, 274, 471, 483, 477, 479, 478,
	475, 476, 474, 473, 472, 485, 462, 463, 464, 465,
	468, 0, 480, 481, 0, 0, 0, 0, 498, 499,
	500, 501, 502, 503, 504, 497, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 486, 487, 488, 489, 490,
	491, 492, 493, 496, 494, 495, 466, 113, 124, 189,
	0, 247, 163, 307, 0, 155, 0, 0, 0, 0,
	0, 0, 115, 116, 125, 134, 141, 154, 159, 162,
	168, 172, 175, 177, 178, 179, 183, 197, 200, 201,
	202, 203, 217, 218, 220, 221, 224, 225, 228, 230,
	231, 232, 234, 235, 236, 241, 244, 246, 248, 251,
	256, 258, 259, 260, 262, 263, 264, 268, 269, 270,
	271, 279, 283, 293, 294, 304, 313, 315, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 1269, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 187, 0, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 0, 0, 0, 0, 190,
	0, 0, 308, 276, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 1273, 0, 0, 0,
	0, 0, 111, 0, 374, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 167, 209, 128,
	0, 0, 0, 180, 314, 0, 1272, 0, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 0, 0, 0, 0, 0, 149, 0, 254, 227,
	303, 0, 0, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 0, 0, 0, 146, 0, 0, 0, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 0,
	0, 278, 306, 319, 196, 135, 0, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 376, 377, 378, 379, 383, 384, 388, 389,
	397, 396, 395, 398, 399, 401, 400, 402, 380, 381,
	382, 385, 386, 387, 390, 391, 394, 392, 393, 0,
	113, 124, 189, 0, 247, 163, 307, 0, 155, 0,
	0, 0, 0, 0, 0, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 1269, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 187, 0, 0,
	148, 195, 193, 0, 0, 0, 229, 285, 0, 0,
	0, 0, 190, 0, 0, 308, 276, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 1273,
	0, 0, 0, 0, 0, 111, 0, 374, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	167, 209, 128, 0, 0, 0, 180, 314, 0, 1272,
	0, 243, 0, 281, 170, 188, 132, 114, 126, 142,
	169, 219, 252, 261, 0, 0, 0, 0, 0, 149,
	0, 254, 227, 303, 0, 0, 1267, 253, 191, 292,
	245, 301, 302, 171, 286, 311, 316, 273, 158, 0,
	118, 0, 240, 153, 184, 0, 0, 0, 146, 0,
	0, 0, 272, 133, 288, 207, 213, 143, 145, 144,
	127, 267, 290, 137, 147, 277, 257, 282, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 284,
	300, 139, 265, 121, 298, 280, 205, 181, 182, 120,
	0, 250, 156, 166, 151, 222, 0, 165, 242, 295,
	296, 150, 318, 129, 310, 123, 130, 309, 216, 0,
	215, 312, 291, 299, 206, 199, 0, 122, 297, 204,
	198, 186, 161, 173, 238, 194, 239, 174, 211, 210,
	212, 0, 0, 0, 278, 306, 319, 196, 135, 0,
	266, 289, 0, 0, 136, 164, 160, 237, 214, 131,
	176, 275, 185, 192, 249, 317, 226, 255, 140, 305,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 376, 377, 378, 379, 383,
	384, 388, 389, 397, 396, 395, 398, 399, 401, 400,
	402, 380, 381, 382, 385, 386, 387, 390, 391, 394,
	392, 393, 0, 113, 124, 189, 0, 247, 163, 307,
	0, 155, 0, 0, 0, 0, 0, 0, 115, 116,
	125, 134, 141, 154, 159, 162, 168, 172, 175, 177,
	178, 179, 183, 197, 200, 201, 202, 203, 217, 218,
	220, 221, 224, 225, 228, 230, 231, 232, 234, 235,
	236, 241, 244, 246, 248, 251, 256, 258, 259, 260,
	262, 263, 264, 268, 269, 270, 271, 279, 283, 293,
	294, 304, 313, 315, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	833, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	187, 0, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 0, 0, 0, 0, 190, 0, 0, 308, 276,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 834, 0,
	837, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 830, 829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 167, 209, 128, 0, 0, 0, 180,
	314, 0, 0, 0, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 0, 0, 0,
	0, 0, 149, 0, 254, 227, 303, 0, 0, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 0, 0,
	0, 146, 0, 0, 0, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 0, 0, 278, 306, 319,
	196, 135, 0, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 376, 377,
	378, 379, 383, 384, 388, 389, 397, 396, 395, 398,
	399, 401, 400, 402, 380, 381, 382, 385, 386, 387,
	390, 391, 394, 392, 393, 0, 113, 124, 189, 0,
	247, 163, 307, 0, 155, 0, 0, 0, 0, 0,
	0, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 187, 1524, 0, 148, 195, 193, 0,
	0, 0, 229, 285, 0, 0, 0, 0, 190, 0,
	0, 308, 276, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 0, 374, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 167, 209, 128, 0,
	0, 0, 180, 314, 0, 0, 0, 243, 0, 281,
	170, 188, 132, 114, 126, 142, 169, 219, 252, 261,
	0, 0, 0, 0, 0, 149, 0, 254, 227, 303,
	0, 0, 233, 253, 191, 292, 245, 301, 302, 171,
	286, 311, 316, 273, 158, 0, 118, 0, 240, 153,
	184, 0, 0, 0, 146, 0, 0, 0, 272, 133,
	288, 207, 213, 143, 145, 144, 127, 267, 290, 137,
	147, 277, 257, 282, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 284, 300, 139, 265, 121,
	298, 280, 205, 181, 182, 120, 0, 250, 156, 166,
	151, 222, 0, 165, 242, 295, 296, 150, 318, 129,
	310, 123, 130, 309, 216, 0, 215, 312, 291, 299,
	206, 199, 0, 122, 297, 204, 198, 186, 161, 173,
	238, 194, 239, 174, 211, 210, 212, 0, 0, 0,
	278, 306, 319, 196, 135, 0, 266, 289, 0, 0,
	136, 164, 160, 237, 214, 131, 176, 275, 185, 192,
	249, 317, 226, 255, 140, 305, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 378, 379, 383, 384, 388, 389, 397,
	396, 395, 398, 399, 401, 400, 402, 380, 381, 382,
	385, 386, 387, 390, 391, 394, 392, 393, 0, 113,
	124, 189, 0, 247, 163, 307, 0, 155, 0, 0,
	0, 0, 0, 0, 115, 116, 125, 134, 141, 154,
	159, 162, 168, 172, 175, 177, 178, 179, 183, 197,
	200, 201, 202, 203, 217, 218, 220, 221, 224, 225,
	228, 230, 231, 232, 234, 235, 236, 241, 244, 246,
	248, 251, 256, 258, 259, 260, 262, 263, 264, 268,
	269, 270, 271, 279, 283, 293, 294, 304, 313, 315,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 187, 0, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 0, 0, 0,
	0, 190, 0, 0, 308, 276, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 374, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 167,
	209, 128, 0, 0, 0, 180, 314, 0, 0, 0,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 0, 0, 0, 0, 0, 149, 0,
	254, 227, 303, 0, 0, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 0, 0, 0, 146, 0, 0,
	0, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 0, 0, 278, 306, 319, 196, 135, 0, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 376, 377, 378, 379, 383, 384,
	388, 389, 397, 396, 395, 398, 399, 401, 400, 402,
	380, 381, 382, 385, 386, 387, 390, 391, 394, 392,
	393, 0, 113, 124, 189, 0, 247, 163, 307, 0,
	155, 0, 0, 0, 0, 0, 0, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 187,
	0, 0, 148, 195, 193, 0, 0, 0, 229, 285,
	0, 0, 0, 0, 190, 0, 0, 308, 276, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 0, 837,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 167, 209, 128, 0, 0, 0, 180, 314,
	0, 0, 0, 243, 0, 281, 170, 188, 132, 114,
	126, 142, 169, 219, 252, 261, 0, 0, 0, 0,
	0, 149, 0, 254, 227, 303, 0, 0, 233, 253,
	191, 292, 245, 301, 302, 171, 286, 311, 316, 273,
	158, 0, 118, 0, 240, 153, 184, 0, 0, 0,
	146, 0, 0, 0, 272, 133, 288, 207, 213, 143,
	145, 144, 127, 267, 290, 137, 147, 277, 257, 282,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 284, 300, 139, 265, 121, 298, 280, 205, 181,
	182, 120, 0, 250, 156, 166, 151, 222, 0, 165,
	242, 295, 296, 150, 318, 129, 310, 123, 130, 309,
	216, 0, 215, 312, 291, 299, 206, 199, 0, 122,
	297, 204, 198, 186, 161, 173, 238, 194, 239, 174,
	211, 210, 212, 0, 0, 0, 278, 306, 319, 196,
	135, 0, 266, 289, 0, 0, 136, 164, 160, 237,
	214, 131, 176, 275, 185, 192, 249, 317, 226, 255,
	140, 305, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 378,
	379, 383, 384, 388, 389, 397, 396, 395, 398, 399,
	401, 400, 402, 380, 381, 382, 385, 386, 387, 390,
	391, 394, 392, 393, 0, 113, 124, 189, 0, 247,
	163, 307, 0, 155, 0, 0, 0, 0, 0, 0,
	115, 116, 125, 134, 141, 154, 159, 162, 168, 172,
	175, 177, 178, 179, 183, 197, 200, 201, 202, 203,
	217, 218, 220, 221, 224, 225, 228, 230, 231, 232,
	234, 235, 236, 241, 244, 246, 248, 251, 256, 258,
	259, 260, 262, 263, 264, 268, 269, 270, 271, 279,
	283, 293, 294, 304, 313, 315, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 187, 0, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 0, 0, 0, 0, 190, 0, 0,
	308, 276, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 847, 846, 856,
	857, 849, 850, 851, 852, 853, 854, 855, 848, 0,
	0, 858, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 167, 209, 128, 0, 0,
	0, 180, 314, 0, 0, 0, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 0,
	0, 0, 0, 0, 149, 0, 254, 227, 303, 0,
	0, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	0, 0, 0, 146, 0, 0, 0, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 0, 0, 278,
	306, 319, 196, 135, 0, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 124,
	189, 0, 247, 163, 307, 0, 155, 0, 0, 0,
	0, 0, 0, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 30,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 187, 0, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 0, 0, 0,
	1264, 190, 0, 0, 308, 276, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 111, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 167,
	209, 128, 0, 0, 0, 180, 314, 0, 0, 0,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 0, 0, 0, 0, 0, 149, 0,
	254, 227, 303, 0, 0, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 0, 0, 0, 146, 0, 0,
	0, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 0, 0, 278, 306, 319, 196, 135, 0, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 124, 189, 70, 247, 163, 307, 0,
	155, 0, 0, 0, 0, 0, 0, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 30, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	187, 0, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 0, 0, 0, 0, 190, 0, 0, 308, 276,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 167, 209, 128, 0, 0, 0, 180,
	314, 0, 0, 0, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 0, 0, 0,
	0, 0, 149, 0, 254, 227, 303, 0, 0, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 0, 0,
	0, 146, 0, 0, 0, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 0, 0, 278, 306, 319,
	196, 135, 0, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 124, 189, 70,
	247, 163, 307, 0, 155, 0, 0, 0, 0, 0,
	0, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 981,
	0, 0, 0, 187, 0, 0, 148, 195, 193, 0,
	0, 0, 229, 285, 0, 0, 0, 0, 190, 0,
	0, 308, 276, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 0, 980, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 167, 209, 128, 0,
	0, 0, 180, 314, 0, 0, 0, 243, 0, 281,
	170, 188, 132, 114, 126, 142, 169, 219, 252, 261,
	0, 0, 0, 0, 0, 149, 0, 254, 227, 303,
	0, 0, 233, 253, 191, 292, 245, 301, 302, 171,
	286, 311, 316, 273, 158, 0, 118, 0, 240, 153,
	184, 0, 0, 0, 146, 0, 0, 0, 272, 133,
	288, 207, 213, 143, 145, 144, 127, 267, 290, 137,
	147, 277, 257, 282, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 284, 300, 139, 265, 121,
	298, 280, 205, 181, 182, 120, 0, 250, 156, 166,
	151, 222, 0, 165, 242, 295, 296, 150, 318, 129,
	310, 123, 130, 309, 216, 0, 215, 312, 291, 299,
	206, 199, 0, 122, 297, 204, 198, 186, 161, 173,
	238, 194, 239, 174, 211, 210, 212, 0, 0, 0,
	278, 306, 319, 196, 135, 0, 266, 289, 0, 0,
	136, 164, 160, 237, 214, 131, 176, 275, 185, 192,
	249, 317, 226, 255, 140, 305, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	124, 189, 0, 247, 163, 307, 0, 155, 0, 0,
	0, 0, 0, 0, 115, 116, 125, 134, 141, 154,
	159, 162, 168, 172, 175, 177, 178, 179, 183, 197,
	200, 201, 202, 203, 217, 218, 220, 221, 224, 225,
	228, 230, 231, 232, 234, 235, 236, 241, 244, 246,
	248, 251, 256, 258, 259, 260, 262, 263, 264, 268,
	269, 270, 271, 279, 283, 293, 294, 304, 313, 315,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 187, 0, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 0, 0, 0,
	0, 190, 0, 0, 308, 276, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 111, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 167,
	209, 128, 0, 0, 0, 180, 314, 0, 0, 0,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 0, 0, 0, 0, 0, 149, 0,
	254, 227, 303, 0, 0, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 0, 0, 0, 146, 0, 0,
	0, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 0, 0, 278, 306, 319, 196, 135, 0, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 124, 189, 0, 247, 163, 307, 0,
	155, 0, 0, 0, 0, 0, 0, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 187,
	0, 0, 148, 195, 193, 0, 0, 0, 229, 285,
	0, 0, 0, 0, 190, 0, 0, 308, 276, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 167, 209, 128, 0, 0, 0, 180, 314,
	0, 0, 0, 243, 0, 281, 170, 188, 132, 114,
	126, 142, 169, 219, 252, 261, 0, 0, 0, 0,
	0, 149, 0, 254, 227, 303, 0, 0, 233, 253,
	191, 292, 245, 301, 302, 171, 286, 311, 316, 273,
	158, 0, 118, 0, 240, 153, 184, 0, 0, 0,
	146, 0, 0, 0, 272, 133, 288, 207, 213, 143,
	145, 144, 127, 267, 290, 137, 147, 277, 257, 282,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 284, 300, 139, 265, 121, 298, 280, 205, 181,
	182, 120, 0, 250, 156, 166, 151, 222, 0, 165,
	242, 295, 296, 150, 318, 129, 310, 123, 130, 309,
	216, 0, 215, 312, 291, 299, 206, 199, 0, 122,
	297, 204, 198, 186, 161, 173, 238, 194, 239, 174,
	211, 210, 212, 0, 0, 0, 278, 306, 319, 196,
	135, 0, 266, 289, 0, 0, 136, 164, 160, 237,
	214, 131, 176, 275, 185, 192, 249, 317, 226, 255,
	140, 305, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 124, 189, 0, 247,
	163, 307, 0, 155, 0, 0, 0, 0, 0, 0,
	115, 116, 125, 134, 141, 154, 159, 162, 168, 172,
	175, 177, 178, 179, 183, 197, 200, 201, 202, 203,
	217, 218, 220, 221, 224, 225, 228, 230, 231, 232,
	234, 235, 236, 241, 244, 246, 248, 251, 256, 258,
	259, 260, 262, 263, 264, 268, 269, 270, 271, 279,
	283, 293, 294, 304, 313, 315, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 950, 157, 0, 0,
	0, 0, 187, 0, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 0, 0, 0, 0, 190, 0, 0,
	308, 276, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 167, 209, 128, 0, 0,
	0, 180, 314, 0, 0, 0, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 0,
	0, 0, 0, 0, 149, 0, 254, 227, 303, 0,
	0, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	0, 0, 0, 146, 0, 0, 0, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 0, 0, 278,
	306, 319, 196, 135, 0, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 124,
	189, 0, 247, 163, 307, 0, 155, 0, 0, 0,
	0, 0, 0, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 287,
	0, 0, 0, 516, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 187, 0, 0, 148, 195,
	193, 0, 0, 0, 229, 285, 0, 0, 0, 0,
	190, 0, 0, 308, 276, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 167, 209,
	128, 0, 0, 0, 180, 314, 0, 0, 0, 243,
	0, 281, 170, 188, 132, 114, 126, 142, 169, 219,
	252, 261, 0, 0, 0, 0, 0, 149, 0, 254,
	227, 303, 0, 0, 233, 253, 191, 292, 245, 301,
	302, 171, 286, 311, 316, 273, 158, 0, 118, 0,
	240, 153, 184, 0, 0, 0, 146, 0, 0, 0,
	272, 133, 288, 207, 213, 143, 145, 144, 127, 267,
	290, 137, 147, 277, 257, 282, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 284, 300, 139,
	265, 121, 298, 280, 205, 181, 182, 120, 0, 250,
	156, 166, 151, 222, 0, 165, 242, 295, 296, 150,
	318, 129, 310, 123, 130, 309, 216, 0, 215, 312,
	291, 299, 206, 199, 0, 122, 297, 204, 198, 186,
	161, 173, 238, 194, 239, 174, 211, 210, 212, 0,
	0, 0, 278, 306, 319, 196, 135, 0, 266, 289,
	0, 0, 136, 164, 160, 237, 214, 131, 176, 275,
	185, 192, 249, 317, 226, 255, 140, 305, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 124, 189, 0, 247, 163, 307, 0, 155,
	0, 0, 0, 0, 0, 0, 115, 116, 125, 134,
	141, 154, 159, 162, 168, 172, 175, 177, 178, 179,
	183, 197, 200, 201, 202, 203, 217, 218, 220, 221,
	224, 225, 228, 230, 231, 232, 234, 235, 236, 241,
	244, 246, 248, 251, 256, 258, 259, 260, 262, 263,
	264, 268, 269, 270, 271, 279, 283, 293, 294, 304,
	313, 315, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 187, 0,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 0,
	0, 0, 0, 190, 0, 0, 308, 276, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 167, 209, 128, 0, 108, 0, 180, 314, 0,
	0, 0, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 0, 0, 0, 0, 0,
	149, 0, 254, 227, 303, 0, 0, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 0, 0, 0, 146,
	0, 0, 0, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 0, 0, 278, 306, 319, 196, 135,
	0, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 124, 189, 0, 247, 163,
	307, 0, 155, 0, 0, 0, 0, 0, 0, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 187, 0, 0, 148, 195, 193, 0, 0, 0,
	229, 285, 0, 0, 0, 0, 190, 0, 0, 308,
	276, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 167, 209, 128, 0, 0, 0,
	180, 314, 0, 0, 0, 243, 0, 281, 170, 188,
	132, 114, 126, 142, 169, 219, 252, 261, 0, 0,
	0, 0, 0, 149, 0, 254, 227, 303, 0, 0,
	233, 253, 191, 292, 245, 301, 302, 171, 286, 311,
	316, 273, 158, 0, 118, 0, 240, 153, 184, 0,
	0, 0, 146, 0, 0, 0, 272, 133, 288, 207,
	213, 143, 145, 144, 127, 267, 290, 137, 147, 277,
	257, 282, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 284, 300, 139, 265, 121, 298, 280,
	205, 181, 182, 120, 0, 250, 156, 166, 151, 222,
	0, 165, 242, 295, 296, 150, 318, 129, 310, 123,
	130, 309, 216, 0, 215, 312, 291, 299, 206, 199,
	0, 122, 297, 204, 198, 186, 161, 173, 238, 194,
	239, 174, 211, 210, 212, 0, 0, 0, 278, 306,
	319, 196, 135, 0, 266, 289, 0, 0, 136, 164,
	160, 237, 214, 131, 176, 275, 185, 192, 249, 317,
	226, 255, 140, 305, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 124, 189,
	0, 247, 163, 307, 0, 155, 0, 0, 0, 0,
	0, 0, 115, 116, 125, 134, 141, 154, 159, 162,
	168, 172, 175, 177, 178, 179, 183, 197, 200, 201,
	202, 203, 217, 218, 220, 221, 224, 225, 228, 230,
	231, 232, 234, 235, 236, 241, 244, 246, 248, 251,
	256, 258, 259, 260, 262, 263, 264, 268, 269, 270,
	271, 279, 283, 293, 294, 304, 313, 315, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 187, 0, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 0, 0, 0, 0, 190,
	0, 0, 308, 276, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 167, 209, 128,
	0, 0, 0, 180, 314, 0, 0, 0, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 0, 0, 0, 0, 0, 149, 0, 254, 227,
	303, 0, 0, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 0, 0, 0, 146, 0, 0, 0, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 0,
	0, 278, 306, 319, 196, 135, 0, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 124, 189, 0, 247, 163, 307, 0, 155, 0,
	0, 0, 0, 0, 0, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 187, 0, 0,
	148, 195, 193, 0, 0, 0, 229, 285, 0, 0,
	0, 0, 190, 0, 0, 308, 276, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	167, 209, 128, 0, 0, 0, 180, 314, 0, 0,
	0, 243, 0, 281, 170, 188, 132, 114, 126, 142,
	169, 219, 252, 261, 0, 0, 0, 0, 0, 149,
	0, 254, 227, 303, 0, 0, 233, 253, 191, 292,
	245, 301, 302, 171, 286, 311, 316, 273, 158, 0,
	118, 0, 240, 153, 184, 0, 0, 0, 146, 0,
	0, 0, 272, 133, 288, 207, 213, 143, 145, 144,
	127, 267, 290, 137, 147, 277, 257, 282, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 284,
	300, 139, 265, 121, 298, 280, 205, 181, 182, 120,
	0, 250, 156, 166, 151, 222, 0, 165, 242, 295,
	296, 150, 318, 129, 310, 123, 533, 309, 216, 0,
	215, 312, 291, 299, 206, 199, 0, 122, 297, 204,
	198, 186, 161, 173, 238, 194, 239, 174, 211, 210,
	212, 0, 0, 0, 278, 306, 319, 196, 135, 0,
	266, 289, 0, 0, 136, 164, 160, 237, 534, 532,
	176, 275, 185, 192, 249, 317, 226, 255, 140, 305,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 124, 189, 0, 247, 163, 307,
	0, 155, 0, 0, 0, 0, 0, 0, 115, 116,
	125, 134, 141, 154, 159, 162, 168, 172, 175, 177,
	178, 179, 183, 197, 200, 201, 202, 203, 217, 218,
	220, 221, 224, 225, 228, 230, 231, 232, 234, 235,
	236, 241, 244, 246, 248, 251, 256, 258, 259, 260,
	262, 263, 264, 268, 269, 270, 271, 279, 283, 293,
	294, 304, 313, 315, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	187, 0, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 0, 0, 0, 0, 190, 0, 0, 308, 276,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 167, 209, 128, 0, 0, 0, 180,
	314, 0, 0, 0, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 0, 0, 0,
	0, 0, 149, 0, 254, 227, 303, 0, 0, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 0, 0,
	0, 146, 0, 0, 0, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 0, 0, 278, 306, 319,
	196, 135, 0, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 124, 189, 0,
	247, 163, 307, 0, 155, 0, 0, 0, 0, 0,
	0, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 187, 0, 0, 148, 195, 193, 0,
	0, 0, 229, 285, 0, 0, 0, 0, 190, 0,
	0, 308, 276, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 167, 209, 128, 0,
	0, 0, 180, 314, 0, 0, 0, 243, 0, 281,
	170, 188, 132, 114, 126, 142, 169, 219, 252, 261,
	0, 0, 0, 0, 0, 149, 0, 254, 227, 303,
	0, 0, 233, 253, 191, 292, 245, 301, 302, 171,
	286, 311, 316, 273, 158, 0, 118, 0, 240, 153,
	184, 0, 0, 0, 146, 0, 0, 0, 272, 133,
	288, 207, 213, 143, 145, 144, 127, 267, 290, 137,
	147, 277, 257, 282, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 284, 972, 139, 265, 121,
	298, 280, 205, 181, 182, 120, 0, 250, 156, 166,
	151, 222, 0, 165, 242, 295, 296, 150, 318, 129,
	310, 123, 533, 309, 216, 0, 215, 312, 291, 299,
	206, 199, 0, 122, 297, 204, 198, 186, 161, 173,
	238, 194, 239, 174, 211, 210, 212, 0, 0, 0,
	278, 306, 319, 196, 135, 0, 266, 289, 0, 0,
	136, 164, 160, 237, 534, 532, 176, 275, 185, 192,
	249, 317, 226, 255, 140, 305, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	124, 189, 0, 247, 163, 307, 0, 155, 0, 0,
	0, 0, 0, 0, 115, 116, 125, 134, 141, 154,
	159, 162, 168, 172, 175, 177, 178, 179, 183, 197,
	200, 201, 202, 203, 217, 218, 220, 221, 224, 225,
	228, 230, 231, 232, 234, 235, 236, 241, 244, 246,
	248, 251, 256, 258, 259, 260, 262, 263, 264, 268,
	269, 270, 271, 279, 283, 293, 294, 304, 313, 315,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 187, 0, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 0, 0, 0,
	0, 190, 0, 0, 308, 276, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 167,
	209, 128, 0, 0, 0, 180, 314, 0, 0, 0,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 0, 0, 0, 0, 0, 149, 0,
	254, 227, 303, 0, 0, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 0, 0, 0, 146, 0, 0,
	0, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 524,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 533, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 0, 0, 278, 306, 319, 196, 135, 0, 266,
	289, 0, 0, 136, 164, 160, 237, 534, 532, 527,
	526, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 124, 189, 0, 247, 163, 307, 0,
	155, 0, 0, 0, 0, 0, 0, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315,
}
var yyPact = [...]int{

	527, -1000, -291, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1460, 1516,
	-1000, -1000, -1000, -1000, -1000, -1000, 566, 129, -1000, -1000,
	265, 118, 22195, 263, 2334, 23041, -1000, -1000, -1000, -1000,
	183, 23041, -1000, -1000, -79, -82, -1000, 206, 319, 1051,
	1329, 1513, 161, -1000, -1000, 243, 25, -1000, -1000, -1000,
	17963, -1000, -1000, -1000, 1421, 1454, 184, 1419, 1227, -1000,
	11618, 242, 242, 21772, 24733, -1000, 23041, 10347, 257, 23041,
	-159, 222, 222, 156, 222, -1000, 588, -1000, -1000, -1000,
	23041, 223, 22618, 223, 223, 223, 223, 223, 23041, -1000,
	462, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	23041, 1049, 1362, 672, 143, 7365, 7365, -1000, 633, -1000,
	132, 128, 123, 125, 20, 675, -1000, 7365, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 203, 161, 569, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1361, 1360, 826, 1358, 174,
	1357, 1164, -73, -1000, 996, 260, 23041, -1000, -1000, 1132,
	-1000, 1168, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1363, 14156, 14579, 1460, -1000, 161, -1000,
	-1000, -1000, 1265, -1000, -1000, 632, 1496, -1000, 17117, 444,
	-1000, 14156, 2734, 1134, -1000, -1000, 1134, -1000, -1000, 305,
	-1000, -1000, 15848, 15848, 15848, 15848, 15848, 15848, 15848, 15848,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1134, -1000, 11195, 1134,
	1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 14156,
	1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
	1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
	1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
	1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
	1134, 1134, 1134, 1134, 21349, 20503, 23041, 1129, 1061, -1000,
	-1000, 442, 872, 24310, -128, -1000, -1000, -1000, 546, 20080,
	-1000, 441, -1000, 1353, -1000, -1000, 1048, 190, -1000, 3251,
	480, -1000, -1000, -1000, 1163, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22618, 1414, 251, 1039, 611, 1038, 1037, 1036, 23041,
	1031, 1121, 249, 23041, 1397, 1182, 23041, 1021, 1018, 1014,
	1013, -1000, 9921, -1000, 7365, 672, -1000, 849, 14156, 222,
	222, 7365, 7365, 7365, 23041, 23041, 23041, -1000, -1000, -1000,
	-1000, 23041, -1000, -1000, 672, 672, 7365, 7365, 609, 1493,
	609, 609, -1000, -1000, -1000, -1000, 14156, -1000, 15848, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1012, -1000, -1000, 174,
	174, -1000, 840, 174, 1100, -1000, 545, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 174,
	-1000, 13733, -289, -1000, 1227, -1000, -1000, 23041, 7365, 17963,
	1134, 22618, -1000, 1509, 502, 850, 428, 1104, -1000, 765,
	1384, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
	1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
	1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1421,
	996, 1227, 797, 1222, -1000, -1000, -1000, 23041, -1000, 14156,
	14156, 759, -1000, 18386, -1000, -1000, -1000, -1000, 8217, 533,
	15848, 755, 549, 15848, 15848, 15848, 15848, 15848, 15848, 15848,
	15848, 15848, 15848, 15848, 15848, 15848, 15848, 15848, 807, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1010, -1000, 161,
	1022, 1022, 468, 468, 468, 468, 468, 468, 468, 18809,
	1407, 996, 1009, 560, 11195, 12464, 12464, 996, 14156, 14156,
	13310, 12887, 12464, 12464, 1407, 608, 560, 23887, -1000, -1000,
	15425, -1000, -1000, -1000, -1000, -1000, 996, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 22618, 22618, 12464, 12464, 12464,
	12464, 996, 996, 12464, 12464, 12464, 12464, 12464, 996, 996,
	996, 996, 1407, 1407, 12464, 12464, 12464, 1407, 12464, 12464,
	1407, 12464, 12464, 12464, 12464, 1407, 12464, 12464, 12464, 167,
	23041, -1000, 1119, 1344, -1000, -1000, -1000, 1408, 19233, 16694,
	-1000, 167, 1076, 20503, 23041, -1000, -1000, 20503, 23041, 7791,
	23464, 872, -128, 1093, -1000, -135, -133, 10771, 289, -1000,
	-1000, -1000, 9069, -1000, 5661, 9495, -1000, 480, 1163, -1000,
	-63, -1000, -1000, -1000, 1143, -1000, 1143, 153, -7, 1143,
	1143, 1143, 1143, 1143, -28, -28, -28, -28, -6, -1000,
	-1000, -1000, -1000, -1000, 1161, 1160, -1000, 1143, 1143, 1143,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1156, 163,
	1149, 1149, 1149, 1149, 1149, 208, -1000, 14156, 1155, -1000,
	23041, 7365, 1387, 7365, 145, 1159, -1000, -1000, 23041, 23041,
	1103, -1000, 23041, 1102, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 560, 988, 980, -1000, -1000,
	-1000, -1000, -1000, -1000, 630, -1000, -1000, -1000, -1000, 672,
	23041, 23041, 23041, 1402, 672, 560, 464, -1000, 1100, 1100,
	-1000, 1100, 174, 1022, 1100, -1000, 1006, 1388, 838, 1407,
	1020, -1000, -1000, -1000, 160, 959, 425, -1000, 1231, 14156,
	14156, 9069, 14579, -1000, -1000, -1000, -1000, 1363, -1000, 1407,
	1438, -1000, 1246, 1245, 1177, -1000, -1000, 533, 605, -1000,
	-1000, 823, -1000, -1000, -1000, -1000, 417, 1134, -1000, 2761,
	-1000, -1000, -1000, -1000, 755, 15848, 15848, 15848, 464, 2761,
	2850, 2218, 2285, 468, 482, 482, 484, 484, 484, 484,
	484, 607, 607, -1000, -1000, -1000, 996, -1000, -1000, -1000,
	12464, -1000, 14156, -1000, 996, 999, -1000, -1000, 560, 301,
	999, -1000, 845, 861, 573, 1491, 999, 551, 1487, 999,
	999, 999, 12464, 623, -1000, 14156, 996, -1000, 648, 1099,
	1095, 999, 996, 1094, 999, 999, -171, -171, 996, 999,
	996, 999, 999, -171, -171, -171, -171, 12464, 12464, 999,
	999, 999, 12464, 999, 999, 12464, 999, 999, 999, 999,
	12464, 999, 999, 999, 157, 1134, -1000, 23464, 20503, 20503,
	20503, 20503, 20503, -1000, 1206, 1205, -1000, 1199, 1198, 1219,
	17963, -1000, 1001, 996, 117, 19233, -1000, 1134, -1000, 17540,
	529, 256, 255, 254, 1477, 20503, 1068, -1000, 1068, -1000,
	294, -1000, -1000, 1093, -128, -103, -1000, -1000, -1000, -1000,
	560, -1000, 815, -1000, 291, 1091, 5235, -1000, -1000, -1000,
	-1000, 190, -1000, -1000, -1000, 1157, 479, -1000, 1279, 413,
	557, 887, 1257, -1000, -1000, 270, -65, -1000, -1000, 714,
	-28, -28, 1143, 1143, 151, 1143, -1000, -28, -1000, -1000,
	-1000, 289, 1343, 289, 289, 289, 289, -28, 830, 830,
	-1000, -1000, -1000, -1000, 702, -1000, 1156, -1000, 695, -1000,
	-1000, -1000, -1000, -1000, 870, 1181, 22618, 161, 1401, -1000,
	-1000, -1000, 1486, -1000, -1000, 221, 247, -1000, 7365, 23041,
	7365, 7365, 1477, 977, 970, -1000, -1000, -1000, 609, 672,
	1336, -1000, -1000, 15848, -1000, -1000, -1000, 167, 259, -1000,
	1222, 1090, -1000, -1000, 521, 284, 562, 207, 207, -1000,
	536, 207, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	165, 1400, 22618, 22618, 1216, 560, 560, -1000, -1000, 23041,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6939,
	12464, -1000, 464, 2761, 2627, -1000, 15848, -1000, 996, 560,
	-1000, 12464, -1000, 6513, -1000, 76, 807, 76, 15848, 15848,
	-1000, 15848, 15848, -1000, -205, -1000, 1131, 601, -1000, 14156,
	841, -1000, -1000, 15848, 15848, -1000, -1000, -1000, -1000, -1000,
	20926, -1000, -171, -171, -171, -171, -171, -1000, -1000, -1000,
	-1000, 999, 999, -171, -171, -171, 999, -171, -171, 999,
	-171, -171, -171, -171, 999, -171, -171, -171, 1178, 23464,
	1134, -1000, 19657, 22618, 1130, 1344, 1154, 1175, 938, -1000,
	-1000, -1000, -1000, 1202, -1000, 1201, -1000, -1000, 1138, -1000,
	-1000, 1087, 1134, 22618, 15848, 529, -1000, 1134, 1134, 1134,
	1460, 14156, 1068, -1000, -1000, 494, -1000, -1000, -141, -143,
	-1000, -1000, -1000, 8643, 5661, -1000, 5661, -1000, 22618, 192,
	-1000, 887, -1000, -1000, 887, -1000, -1000, -1000, 1150, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 626, 15848, 1507, -1000,
	1271, -1000, 1261, 825, -1000, -1000, 1066, 289, 289, -28,
	-1000, -1000, 1143, -1000, 289, -1000, 469, -1000, -1000, -1000,
	-1000, 289, 995, -1000, 986, 1085, -1000, 974, 55, 23041,
	-1000, -1000, -1000, 1173, -1000, -1000, -1000, 1065, 1081, -1000,
	3251, 968, 965, 953, 23041, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 672, -1000, 15848, 2761, -28, 23041, 1177, 1020,
	-1000, 871, -1000, 887, 486, -1000, -1000, -1000, 1257, -1000,
	-1000, 300, 951, -1000, 941, 931, 22618, 1260, 906, 23041,
	22618, -1000, -1000, 898, 904, 14156, -1000, 22618, 22618, 1134,
	288, -1000, -1000, -1000, 1050, 11618, -1000, -1000, 996, -1000,
	15848, 2761, -1000, -1000, -1000, 279, 996, 1143, 1143, -1000,
	1143, 1149, -1000, 1143, 15, 1143, 6, 996, 996, 2589,
	2565, 2444, 1436, 1134, -167, -1000, 560, 14156, 2389, 1532,
	-1000, 370, -1000, -1000, -1000, -1000, -1000, -171, -171, -1000,
	-1000, -1000, -1000, -171, -1000, -1000, -171, -1000, -1000, -1000,
	-1000, -171, -1000, -1000, -1000, -1000, 1377, 1075, 1078, -1000,
	-1000, 12041, 996, 959, 957, -1000, 1460, -1000, -1000, 14156,
	1145, -1000, 14156, -1000, -1000, -1000, -1000, 22618, 111, -1000,
	14156, 957, 1067, -1000, 22618, 22618, 22618, 1421, 560, -1000,
	-1000, -1000, -1000, 5235, -1000, 945, -1000, 1143, -1000, 1257,
	-1000, -1000, 22618, -1000, 2761, -77, -1000, -1000, -1000, -1000,
	-1000, -1000, 289, -1000, -1000, -1000, -1000, -1000, -28, 819,
	-28, 694, -1000, 671, -1000, -1000, -236, 1140, -1000, 161,
	23041, 69, 221, -1000, 3251, 3251, 3251, -1000, -1000, 2761,
	-89, -1000, -1000, -1000, 898, 180, 3251, -1000, 1155, 413,
	192, -1000, -1000, -1000, -1000, -1000, 901, 397, -1000, 245,
	180, 898, 560, 508, 1385, -1000, 22618, 1464, 20503, -1000,
	-1000, -1000, 2761, 6087, -1000, -1000, 152, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 15848, 15848, 15848, 15848, 15848,
	996, 810, 560, 15848, 15848, 996, 1453, -1000, -1000, -1000,
	-1000, -1000, 1251, -1000, 1134, -1000, -1000, 159, -1000, 22618,
	1421, 560, 22618, 560, 937, -1000, 1134, 16271, -1000, 17963,
	922, 922, 922, -1000, 287, 22618, 1384, 920, -1000, -1000,
	289, -1000, 289, 1064, 1059, -1000, 22618, -1000, 1432, -1000,
	69, -1000, 799, 92, 94, -1000, 91, 88, 87, 84,
	82, -1000, -1000, -1000, -1000, 1306, 1303, 1128, 1053, -1000,
	-1000, 895, -1000, 1139, 887, -1000, -1000, 884, -1000, -1000,
	22618, -1000, 180, 1369, 1368, 1134, -1000, 1462, 1452, 1068,
	11618, -1000, -1000, -1000, -1000, 648, 648, 648, 648, 67,
	-1000, -1000, 648, 648, -1000, 14156, 1506, -1000, 1134, -1000,
	161, -1000, -1000, 914, -1000, 22618, -1000, -1000, 529, -1000,
	-1000, -1000, 287, -1000, 873, 536, 767, -1000, -1000, 177,
	-1000, -1000, -1000, -1000, 912, -1000, 114, 4367, -1000, -1000,
	-1000, -1000, -1000, -1000, 1313, 1310, 101, 225, 1286, 1291,
	1449, 20503, -1000, -1000, 270, 22618, 1155, -1000, -1000, -1000,
	15848, -1000, 162, -1000, 14579, 14579, 1464, -1000, -1000, -1000,
	-1000, -1000, 996, 90, -215, -1000, -1000, 1118, 23464, 1078,
	996, -1000, -1000, -1000, -1000, -1000, 667, -1000, 23041, 287,
	108, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14156, 14156, 4809, 4367,
	-1000, -1000, -1000, -1000, 1138, 658, 1303, 1448, 1295, 1293,
	-1000, 766, 1068, 910, 1137, 2761, 893, -1000, 22618, -1000,
	560, -1000, 939, -1000, 560, -1000, 1462, -1000, -1000, 1214,
	-209, -218, 996, 872, -1000, -1000, 1135, -1000, 287, 113,
	-1000, 834, 804, 58, 50, 2834, -1000, -1000, -1000, -1000,
	-292, -1000, -1000, 1305, -1000, 758, -1000, 1444, 1440, -1000,
	1464, 287, 22618, -1000, 162, 1244, 14579, -1000, -1000, 1210,
	-1000, -1000, 22618, -1000, 864, 858, 736, -1000, 14156, 4367,
	1431, 1425, 1411, 1366, 8643, 4300, -1000, -1000, 747, 676,
	1462, -1000, 891, -1000, 150, -1000, -211, 881, 246, -1000,
	-1000, 616, 4367, -1000, 685, -294, 201, 161, 179, 15848,
	-1000, -1000, -1000, -1000, -1000, -1000, 287, 138, -216, 1172,
	-1000, -1000, -1000, -1000, -1000, -1000, 4367, -1000, -295, 4367,
	3809, -1000, -1000, -1000, 519, -1000, -1000, -1000, -1000, 39,
	-1000, -1000, 2761, -1000, 1134, -219, 1171, 1167, 1501, -1000,
	-297, 4155, -298, 220, 4367, 679, -1000, 14156, -1000, 179,
	-1000, 15002, -1000, -1000, 1505, -1000, 1503, 513, 513, 4130,
	613, 4367, -1000, -299, 219, 4367, -1000, 649, -1000, 648,
	996, -1000, -1000, -1000, 198, 705, -1000, -1000, -1000, 3985,
	-1000, -300, 4367, -1000, -1000, -1000, -1000, -1000, 218, 3818,
	-301, -1000, 216, 4367, -1000,
}
var yyPgo = [...]int{

	0, 1829, 108, 750, 1828, 1826, 1825, 17, 15, 13,
	19, 1824, 1652, 1632, 1630, 1626, 1819, 1616, 1818, 5,
	1816, 1813, 1608, 1810, 1809, 1596, 26, 1808, 22, 1807,
	2, 106, 125, 1806, 3, 1805, 1804, 8, 1803, 1802,
	1589, 1798, 1796, 1795, 1794, 73, 1793, 1585, 1581, 1792,
	1791, 1579, 1566, 1789, 1788, 1561, 1542, 1524, 1787, 160,
	1786, 1785, 1784, 104, 75, 121, 1783, 1782, 1778, 84,
	72, 1493, 89, 41, 97, 216, 1775, 21, 45, 1774,
	1773, 114, 111, 1772, 124, 1770, 68, 605, 79, 1769,
	1768, 128, 1767, 1766, 1762, 100, 1761, 1759, 973, 1758,
	1756, 119, 1755, 51, 46, 35, 1754, 1753, 1752, 1750,
	1749, 115, 9, 1747, 1746, 1745, 60, 1744, 1738, 150,
	1737, 1735, 1733, 101, 49, 1731, 38, 1730, 40, 55,
	1729, 32, 1727, 95, 1726, 1725, 23, 10, 1724, 34,
	1721, 52, 1720, 103, 130, 829, 11, 39, 43, 53,
	102, 81, 24, 30, 91, 76, 62, 36, 113, 1719,
	116, 99, 1718, 1716, 835, 1714, 1711, 93, 1710, 59,
	120, 678, 127, 96, 71, 1709, 1708, 1705, 1701, 64,
	110, 1699, 1698, 69, 188, 191, 1396, 112, 1814, 48,
	118, 1697, 31, 1696, 1693, 2838, 94, 80, 86, 1692,
	1691, 83, 27, 42, 1687, 1686, 1684, 1683, 1682, 1679,
	416, 1678, 1677, 1675, 1674, 105, 44, 1673, 1672, 98,
	82, 1671, 1669, 1668, 1666, 1665, 92, 61, 107, 1664,
	90, 87, 57, 1662, 1661, 1659, 1658, 47, 33, 1657,
	1656, 1655, 74, 78, 1639, 54, 37, 28, 56, 7,
	65, 70, 1637, 25, 1628, 85, 4, 6, 12, 1624,
	1621, 1618, 1612, 1610, 58, 1598, 1594, 50, 1591, 1587,
	1576, 29, 1574, 1556, 1537, 1535, 0, 88, 129, 1526,
	1522, 139,
}
var yyR1 = [...]int{

	0, 274, 275, 275, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	58, 2, 2, 2, 6, 3, 3, 3, 79, 80,
	80, 84, 84, 4, 4, 5, 5, 7, 7, 62,
	62, 8, 9, 9, 9, 9, 278, 278, 93, 93,
	91, 91, 92, 92, 154, 154, 10, 10, 10, 10,
	158, 158, 161, 161, 161, 162, 162, 162, 162, 199,
	199, 146, 147, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 262, 262, 263, 263, 264, 264, 264, 264,
	265, 265, 266, 266, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 23, 182, 182, 38, 38, 39,
	39, 39, 142, 142, 142, 11, 11, 11, 11, 11,
	18, 20, 20, 27, 27, 28, 21, 21, 21, 21,
	29, 29, 30, 24, 24, 24, 24, 24, 24, 36,
	36, 36, 35, 35, 34, 34, 34, 34, 34, 34,
	22, 22, 22, 22, 37, 37, 32, 32, 31, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 25, 25, 25, 25, 25, 25, 17, 261, 261,
	261, 26, 26, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 43, 239, 240,
	240, 240, 240, 240, 240, 240, 240, 227, 228, 203,
	203, 203, 203, 203, 203, 203, 202, 202, 202, 202,
	206, 206, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 205, 205, 205, 205, 205, 205, 205, 205, 207,
	207, 207, 207, 207, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 209,
	209, 209, 209, 209, 209, 209, 209, 226, 226, 210,
	210, 219, 219, 220, 220, 220, 217, 217, 218, 218,
	221, 221, 213, 214, 222, 215, 215, 215, 216, 216,
	216, 225, 225, 225, 225, 211, 229, 229, 249, 249,
	248, 248, 247, 247, 247, 238, 238, 244, 244, 244,
	244, 244, 233, 233, 233, 232, 232, 234, 234, 237,
	237, 246, 246, 245, 230, 230, 250, 250, 250, 250,
	250, 231, 231, 231, 251, 235, 235, 236, 236, 236,
	257, 258, 256, 256, 256, 256, 256, 108, 108, 108,
	241, 241, 241, 242, 242, 242, 243, 243, 243, 259,
	259, 40, 40, 41, 46, 46, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 141,
	141, 141, 42, 180, 180, 255, 255, 255, 254, 252,
	252, 253, 253, 13, 44, 44, 14, 14, 14, 14,
	14, 14, 14, 15, 15, 47, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 76, 168, 168, 166, 166,
	169, 169, 167, 167, 167, 170, 170, 170, 200, 200,
	200, 49, 49, 54, 54, 57, 55, 56, 181, 181,
	52, 52, 53, 53, 53, 53, 68, 68, 279, 279,
	51, 51, 50, 50, 50, 50, 16, 280, 59, 60,
	60, 61, 61, 61, 173, 173, 65, 65, 65, 63,
	63, 63, 64, 64, 70, 70, 74, 74, 74, 74,
	73, 73, 73, 73, 144, 144, 144, 145, 145, 191,
	191, 191, 190, 190, 190, 190, 78, 78, 81, 81,
	82, 82, 82, 82, 85, 127, 127, 102, 102, 103,
	103, 103, 103, 103, 114, 114, 153, 153, 152, 152,
	155, 155, 83, 83, 83, 83, 88, 88, 89, 89,
	90, 90, 179, 179, 197, 197, 197, 94, 94, 94,
	96, 95, 95, 95, 95, 97, 97, 99, 100, 100,
	98, 98, 101, 104, 104, 104, 104, 105, 105, 75,
	75, 75, 75, 75, 75, 75, 165, 165, 107, 107,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	122, 122, 122, 122, 122, 122, 109, 109, 109, 109,
	109, 109, 109, 69, 69, 123, 123, 123, 87, 86,
	86, 72, 72, 71, 71, 124, 124, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 117, 117, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 281, 281, 119, 118, 118, 118, 118,
	118, 118, 66, 66, 66, 66, 66, 198, 198, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 134, 134, 67, 67, 132, 132, 133, 135,
	135, 131, 131, 131, 111, 111, 111, 111, 111, 111,
	111, 111, 113, 113, 113, 136, 136, 125, 125, 77,
	77, 137, 137, 138, 138, 139, 139, 140, 140, 143,
	143, 148, 148, 148, 149, 149, 149, 149, 150, 150,
	150, 110, 110, 110, 110, 110, 110, 151, 151, 151,
	151, 156, 156, 126, 126, 129, 129, 128, 130, 157,
	157, 160, 160, 160, 160, 159, 159, 159, 194, 194,
	194, 163, 163, 171, 171, 172, 172, 164, 164, 212,
	212, 176, 176, 176, 176, 176, 176, 176, 176, 178,
	178, 177, 177, 177, 174, 174, 174, 175, 175, 192,
	192, 188, 188, 193, 193, 189, 189, 195, 195, 196,
	196, 260, 260, 223, 223, 270, 270, 224, 224, 271,
	271, 273, 273, 268, 268, 269, 269, 272, 272, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 276, 277,
	183, 184, 184, 184,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	11, 4, 6, 7, 5, 10, 12, 13, 2, 1,
	3, 3, 6, 1, 3, 1, 3, 7, 8, 1,
	1, 9, 8, 7, 6, 6, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 4, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 0, 0, 2, 3, 11, 7, 9, 5, 5,
	15, 11, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 4, 0, 3, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	4, 5, 8, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 5, 5, 5, 6, 3, 5, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	2, 4, 2, 4, 2, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 3, 2, 4, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 3, 3, 2, 4,
	5, 2, 3, 4, 2, 2, 3, 3, 3, 3,
	3, 4, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	1, 2, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 2, 1, 2, 1, 2, 5, 4, 0, 1,
	1, 2, 2, 3, 2, 0, 1, 2, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 0,
	2, 1, 1, 5, 1, 3, 2, 5, 4, 3,
	3, 3, 5, 3, 8, 10, 3, 3, 3, 5,
	4, 5, 1, 2, 2, 4, 3, 6, 5, 0,
	1, 2, 4, 0, 1, 1, 1, 1, 7, 1,
	3, 8, 8, 3, 3, 5, 4, 6, 4, 4,
	4, 4, 4, 3, 2, 3, 4, 4, 3, 6,
	6, 4, 4, 4, 4, 4, 4, 3, 3, 2,
	6, 2, 4, 4, 4, 5, 7, 6, 5, 4,
	2, 4, 3, 2, 3, 3, 1, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	2, 2, 2, 2, 3, 3, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 4, 7, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 3, 2, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	1, 0, 2, 1, 1, 0, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	4, 2, 1, 3, 5, 4, 6, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -274, -1, -2, -6, -7, -8, -9, -10, -12,
	-40, -13, -14, -15, -47, -48, -49, -54, -55, -56,
	-52, -51, -50, -16, -22, -25, -17, -58, -3, -4,
	6, 7, -62, 9, 10, 30, -43, 130, -41, -42,
	133, 132, 169, 134, 162, 64, 224, -57, 227, 228,
	-279, -181, 167, 168, 31, 32, 136, 211, 212, 20,
	37, -79, -276, 8, 317, 131, 225, 164, 163, 26,
	362, 68, -275, 432, -139, 15, -61, 5, -59, -280,
	-59, -59, -59, -59, -59, -239, 105, 68, -175, 143,
	86, 308, 139, -182, 140, -174, 189, 44, 150, 149,
	140, 140, 141, 143, 308, 139, 177, 176, 140, -98,
	-195, 71, -186, 359, 153, 374, 375, 131, 186, 224,
	235, 229, 263, 251, 360, 376, 154, 206, 138, 249,
	252, 295, 152, 199, 377, 284, 290, 209, 80, 227,
	304, 378, 155, 203, 205, 204, 194, 210, 36, 165,
	247, 240, 214, 189, 379, 367, 238, 28, 184, 380,
	292, 268, 381, 364, 291, 243, 239, 136, 382, 156,
	150, 179, 383, 269, 273, 384, 296, 385, 386, 387,
	142, 233, 234, 388, 190, 298, 267, 33, 151, 361,
	48, 174, 299, 38, 271, 37, 283, 389, 266, 261,
	390, 391, 392, 393, 265, 232, 260, 201, 53, 137,
	275, 274, 276, 202, 294, 256, 254, 394, 395, 157,
	396, 397, 241, 18, 398, 399, 302, 168, 400, 42,
	401, 402, 403, 172, 404, 405, 406, 293, 270, 272,
	188, 407, 244, 147, 408, 176, 409, 363, 410, 300,
	237, 411, 158, 173, 167, 303, 412, 212, 413, 414,
	415, 159, 416, 417, 418, 228, 286, 207, 419, 420,
	421, 422, 198, 183, 306, 297, 52, 211, 280, 423,
	231, 149, 213, 424, 225, 43, 180, 7, 200, 287,
	208, 258, 175, 425, 426, 245, 246, 264, 230, 259,
	226, 177, 178, 169, 427, 305, 281, 365, 51, 253,
	250, 181, 257, 428, 143, 429, 182, 301, 248, 282,
	140, 123, 252, 295, 130, 285, 286, 292, -233, 293,
	176, 179, -200, 140, -166, 284, 182, 71, 141, 142,
	33, 297, 296, 288, -195, -68, 134, 170, -98, -183,
	-183, -183, 287, 287, -183, -37, 71, 213, -37, 30,
	71, 71, 36, 6, -2, -164, 143, 145, 226, -80,
	-84, -197, -195, -187, 73, 330, 331, 332, 333, 334,
	347, 348, 349, 335, 336, 350, 351, 352, 337, 338,
	353, 354, 356, 357, 355, 341, 340, 339, 342, 343,
	345, 344, 346, -149, 17, 16, -5, -3, -276, 6,
	21, 22, -65, 54, 55, -60, -73, 114, -75, -195,
	-106, 88, -112, 29, 71, -186, 24, -111, -107, -131,
	-130, -87, 123, 124, 125, 112, 113, 120, 89, 126,
	-117, -115, -116, -118, -120, -121, 73, 72, 81, 74,
	75, 76, 77, 82, 83, 84, -188, -128, -276, 58,
	59, 139, 318, 319, 320, 321, 358, 160, 322, 91,
	47, 307, 316, 315, 314, 312, 313, 309, 311, 310,
	324, 325, 146, 308, 118, 317, 347, 348, 349, 350,
	351, 352, 353, 354, 356, 357, 355, 337, 330, 331,
	332, 333, 334, 335, 336, 338, 339, 340, 341, 342,
	343, 344, 345, 346, -164, -164, 11, -91, -92, -98,
	-101, -195, -157, -199, 226, -160, 297, 296, -131, -159,
	-188, -195, 295, 252, 294, -98, -240, -228, -231, -189,
	155, -251, -188, -185, 152, 71, -186, 135, 161, 87,
	366, 23, 25, 278, 330, 90, 123, 331, 332, 333,
	16, 20, 91, 122, 318, 334, 130, 62, 309, 311,
	307, 308, 285, 29, 10, 26, 163, 193, 22, 116,
	132, 94, 95, 96, 166, 24, 164, 84, 160, 19,
	65, 11, 13, 328, 329, 14, 146, 145, 107, 191,
	141, 60, 8, 126, 27, 104, 56, 335, 336, 370,
	45, 371, 58, 105, 17, 312, 313, 31, 358, 337,
	171, 372, 338, 118, 196, 63, 50, 88, 82, 34,
	85, 66, 86, 15, 192, 61, 326, 195, 373, 106,
	133, 317, 59, 139, 6, 323, 30, 162, 341, 340,
	339, 342, 197, 57, 320, 321, 343, 430, 140, 93,
	324, 325, 144, 83, 5, 44, 32, 9, 64, 67,
	314, 315, 316, 47, 345, 344, 346, 92, 12, 327,
	362, 141, -98, 317, -172, 146, -172, 177, 176, -172,
	97, -44, -98, -171, 146, -188, -171, -171, -171, -171,
	-171, -98, 127, -98, 71, 30, -170, 105, 12, 308,
	139, 71, 176, 179, 140, 177, 143, -184, -276, -189,
	-184, -235, 11, 107, 180, 180, 180, 181, 180, -169,
	-168, 178, 290, 291, 287, 289, 12, -76, 105, -184,
	-53, -2, -9, -7, -8, -2, 97, -183, -183, 30,
	30, 73, 51, 30, -32, -31, -33, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 30,
	-261, 68, -223, 283, -59, -277, 70, 140, -98, 69,
	23, -276, -150, 19, 31, -75, -195, -140, -143, -75,
	-187, 330, 331, 332, 333, 334, 347, 348, 349, 335,
	336, 350, 351, 352, 337, 338, 353, 354, 356, 357,
	355, 341, 340, 339, 342, 343, 345, 344, 346, -139,
	-2, -59, 50, -63, 21, 22, 79, 11, -191, 87,
	86, 104, -190, 23, 71, -186, -187, 73, 127, -75,
	-109, 107, 88, 105, 106, 90, 109, 108, 119, 112,
	113, 114, 115, 116, 117, 118, 110, 111, 122, 97,
	98, 99, 100, 101, 102, 103, -165, -276, -87, -276,
	128, 129, -112, -112, -112, -112, -112, -112, -112, -112,
	-276, -2, -124, -75, -276, -276, -276, -276, -276, -276,
	-276, -276, -276, -276, -276, -134, -75, -276, -281, -119,
	-276, -281, -119, -281, -119, -281, -276, -281, -119, -281,
	-119, -281, -281, -119, -281, -276, -276, -276, -276, -276,
	-276, -276, -276, -276, -276, -276, -276, -276, -276, -276,
	-276, -276, -276, -276, -276, -276, -276, -276, -276, -276,
	-276, -276, -276, -276, -276, -276, -276, -276, -276, -100,
	27, -98, -78, -81, -82, -83, -102, -86, -276, -98,
	-87, -98, -91, -278, 69, 11, 67, -278, 69, 127,
	69, -157, 226, -158, -161, 298, 300, 97, -194, -188,
	73, 29, 127, 30, 70, 69, -231, 155, 152, -202,
	-206, -208, -207, -209, -204, -205, 249, 252, 256, 254,
	250, 255, 123, 253, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 30, 165, 245, 246, 247,
	248, 269, 270, 271, 272, 273, 274, 275, 276, 229,
	251, 360, 230, 231, 232, 233, 234, 235, 237, 238,
	239, 240, 241, 242, 243, 71, -251, 68, -188, 23,
	143, 71, 88, 71, 71, 71, -98, 71, 69, 144,
	-91, 24, 66, -93, -98, 71, 71, 71, 71, -196,
	-195, -185, -184, -170, 73, -75, -172, -172, -184, -184,
	-184, -98, -98, -98, -98, -170, -170, -184, -184, -167,
	11, 107, 11, -167, -167, -75, -112, 71, -32, -32,
	73, -32, 69, 97, -32, 70, -124, -260, 431, -65,
	-98, -184, -84, -86, -276, -151, -188, 9, 107, 69,
	18, 127, 69, -148, 25, 26, -148, -149, -277, -65,
	-113, 51, 74, 77, -173, 49, -98, -75, -75, -122,
	82, 88, 83, 84, -190, 114, -196, -189, -185, -112,
	-123, -128, -87, 78, 107, 105, 106, 90, -112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -198, 71, 73, 71, -111, -111, -188,
	-63, -277, 69, -277, -2, -71, -74, 114, -75, -195,
	-71, -277, -75, -75, -131, 73, -71, -131, 73, -71,
	-71, -71, -63, -132, -133, 92, -131, -277, -112, -188,
	-188, -71, -72, -71, -71, -71, -277, -277, -74, -71,
	-74, -71, -71, -277, -277, -277, -277, -63, -63, -71,
	-71, -71, -63, -71, -71, -63, -71, -71, -71, -71,
	-63, -71, -71, -71, -154, 172, -98, 30, 69, -94,
	-96, -95, -97, 56, 60, 62, 57, 58, 59, 63,
	-179, 23, -78, -85, 47, -276, -103, 172, -104, 23,
	-197, 64, 145, 65, -154, 67, -78, -98, -78, -101,
	-195, 114, -160, -158, 69, 299, 301, 302, 66, 85,
	-75, -216, 122, -189, -196, -241, -242, -243, -189, 73,
	74, -228, -229, -230, -231, -244, 155, -250, 147, 149,
	44, -232, 156, 141, 45, -203, -217, 281, -210, 68,
	-210, -210, 257, 249, 252, 250, -210, -210, -210, -210,
	-210, -215, 252, -215, -215, -215, -215, 250, 68, 68,
	-210, -210, -210, -219, 68, -219, 244, -220, 68, -220,
	-220, -220, -220, -251, -75, -192, 67, -146, -98, -184,
	24, -184, -38, 186, 161, 68, -98, -98, -98, 69,
	71, 71, -236, 11, 107, -170, -195, -195, -98, -114,
	23, -170, -69, 166, -31, -111, 70, -99, 27, 73,
	-63, -46, -45, -176, 135, 132, 133, 137, 138, -254,
	278, 131, 252, 80, 29, 15, 318, 172, 365, 71,
	173, -277, 69, 127, 52, -75, -75, -143, -150, -163,
	19, 11, 47, 47, -64, 57, 82, 83, 84, 127,
	-276, -123, -112, -112, -112, -69, 87, -277, -72, -75,
	-277, 69, -277, 127, -277, 69, 67, 23, 11, 11,
	-277, 11, 11, -277, -277, -277, -71, -135, -133, 94,
	-75, -277, -277, 69, 69, -277, -277, -277, -277, -144,
	326, -144, -277, -277, -277, -277, -277, -144, -144, -144,
	-144, -71, -71, -277, -277, -277, -71, -277, -277, -71,
	-277, -277, -277, -277, -71, -277, -277, -277, -110, 30,
	47, -2, -276, -276, -157, -81, -82, -82, -81, -82,
	56, 56, 56, 61, 56, 61, 56, -95, -197, -277,
	-277, -127, 185, -276, 34, -197, -104, 141, 141, 141,
	-105, 12, -78, -105, -105, 127, -161, -162, 303, 300,
	306, 71, 73, 127, 69, -243, 97, -231, 68, 71,
	45, -232, 141, 45, -232, -237, 71, -237, 45, -221,
	-213, -214, -222, -225, -211, 82, 88, 29, 66, 278,
	147, 45, 44, 80, -218, 282, 74, -215, -215, -210,
	-210, -210, 257, -210, -215, -216, 30, -216, -216, -216,
	-216, -215, -226, 73, -226, 74, -219, 74, 70, 66,
	-188, -2, 23, -39, 8, 9, 10, -262, -263, -264,
	71, 107, 191, 192, 144, -184, -98, -184, -184, -105,
	71, 71, -167, -170, 34, -112, -154, 140, -173, 69,
	-183, -180, -255, -232, -259, -230, -231, 148, 156, 147,
	172, 155, -180, -255, 155, 152, -232, 156, 148, -177,
	-232, 144, 23, -180, -180, -238, 97, -180, 172, 23,
	-188, -188, 53, -98, -70, -147, 114, -189, -72, -69,
	87, -112, -277, -74, 114, -196, -201, 123, 249, 165,
	247, 240, 267, 254, 280, 245, 281, -198, -201, -112,
	-112, -112, -112, 359, -139, 96, -75, 93, -112, -112,
	-188, -276, -144, -144, -144, -144, -144, -277, -277, -145,
	-144, -145, -145, -277, -145, -145, -277, -145, -145, -145,
	-145, -277, -145, -145, -145, -156, 66, -157, -126, -129,
	-128, -276, -2, -151, -155, -188, -105, -89, -88, 66,
	67, -90, 66, -88, 56, 56, -153, 68, 69, -128,
	-276, -155, -112, -104, -276, -276, -276, -139, -75, -105,
	300, 304, 305, -242, -243, -246, -245, -188, -250, 156,
	-237, -237, 68, 82, -112, 9, 45, 45, 73, 70,
	-216, -216, -215, -210, -216, 71, 123, -216, 70, 69,
	70, 69, 70, 69, -108, 380, 88, -98, -146, -146,
	66, 70, 69, -202, 71, 71, 71, -98, -170, -112,
	-215, -98, -64, -45, 68, -227, 71, -183, -237, -174,
	71, 71, -183, 71, 71, -188, 45, 71, -98, -188,
	-227, 71, -75, -188, -188, -86, 127, -105, 11, 69,
	-73, -277, -112, 127, -277, -210, -210, -210, -220, -210,
	234, -210, 234, -277, -277, 19, 19, 19, 19, -276,
	-67, 323, -75, 69, 69, -139, 172, -145, -145, -145,
	-145, -145, 28, -156, 69, -277, -277, -277, -277, 69,
	-139, -75, 68, -75, -152, -188, 185, -277, -104, -179,
	-152, -152, -152, -149, 70, 69, -210, -152, -116, -216,
	-215, 73, -215, 74, 74, 380, 68, -2, -98, -265,
	-266, -267, 80, 361, 88, 193, 194, 157, 195, 196,
	197, -264, -202, -202, -202, -268, -169, -70, -227, -141,
	160, 161, -202, -192, -234, -232, 71, -178, 144, 23,
	144, -141, -227, 30, 132, 27, -188, -136, 13, -78,
	-147, -147, 114, -215, 71, -112, -112, -112, -112, -112,
	-277, 73, -112, -112, -277, 16, 45, -129, 47, -2,
	-276, -188, -149, -152, 70, 69, -128, -103, -197, -277,
	-277, -277, -248, -247, 67, 151, 80, -245, -148, 70,
	-216, -216, 70, 70, -246, -146, 19, -146, -267, 73,
	197, 193, 197, 197, 197, 197, 198, -269, 38, -271,
	39, 11, 70, 71, -203, 68, -237, 71, -188, -141,
	29, 29, -276, -137, 14, 16, -105, -73, -277, -277,
	-277, -277, -66, 107, 362, -277, -277, -124, 9, -126,
	-2, 70, -188, -104, -247, 71, -238, 73, 158, 70,
	184, -19, -2, -7, -8, -9, -10, -12, -40, -13,
	-14, -20, -21, -15, -47, -48, -57, -55, -56, -52,
	-51, -24, -22, -25, -17, -23, 91, 146, 214, 224,
	36, 36, 189, 190, -212, 145, -272, 43, -270, -224,
	42, 16, -78, -246, -192, -112, -252, -253, 172, -138,
	-75, -187, -125, -77, -75, -187, -136, -147, -277, 360,
	63, 363, -139, -157, -277, 74, -98, -249, -248, 185,
	-146, -75, -75, 71, -36, -193, 217, 218, 219, -189,
	-26, -19, -153, 74, -271, 16, -273, 40, 41, 73,
	-105, 70, 68, -277, 69, -188, 69, -137, 53, 361,
	364, -277, 68, -142, 187, 188, -27, -28, 92, 93,
	215, 216, 220, -202, 69, 432, 38, 73, 16, 16,
	-136, -249, -246, -253, 47, -77, 53, -152, -146, 71,
	71, 96, 94, -28, -75, -26, 19, 19, 19, 29,
	-189, 96, -19, 73, 73, -137, 70, 174, 362, 70,
	-11, -18, -10, -7, -8, -9, 224, 91, -26, 93,
	432, -37, 74, -2, -35, -34, 74, -37, 222, 88,
	223, 71, -112, -249, 175, 363, -257, -258, 66, -146,
	-26, 432, -26, 96, 94, -29, -30, 95, -19, 69,
	221, -276, 364, -258, 66, -257, 66, 10, 9, 432,
	96, 432, 146, -26, 96, 94, -30, -75, -34, -112,
	171, -256, 159, 154, 157, 30, -256, 96, 91, 432,
	146, -26, 93, -277, -277, 153, 29, 82, 96, 432,
	-26, 146, 96, 432, 146,
}
var yyDef = [...]int{

	29, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 825, 0,
	517, 517, 517, 517, 517, 517, 0, -2, 391, 392,
	0, 0, 0, 0, -2, 492, 493, 494, 496, 497,
	506, -2, 1300, 1300, 0, 0, 1300, 0, 181, 0,
	0, 0, 0, 49, 50, 877, 0, 509, 498, 499,
	0, 1298, 1, 3, 834, 0, 0, 521, 526, 519,
	0, 877, 877, 0, 0, 83, 0, 0, 0, 0,
	0, 875, 875, 0, 875, 898, 0, 894, 895, 896,
	0, 873, 0, 873, 873, 873, 873, 873, 0, 444,
	610, 907, 908, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	0, 0, 0, 485, 0, 1301, 1301, 459, 0, 461,
	0, 0, 0, 0, 0, 470, 473, 1301, 342, 343,
	344, 489, 490, 479, 491, 0, 0, 0, 510, 511,
	512, 513, 1300, 1300, 516, 160, 162, 0, 182, 0,
	185, 188, 913, 517, 43, 0, 0, 878, 495, 38,
	39, 0, 594, 595, 596, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 838, 0, 0, 825, 45, 0, 517,
	522, 523, 529, 527, 528, 518, 0, 540, 549, 0,
	619, 0, 624, 626, -2, -2, 0, 667, 668, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 696, 697, 698, 699, 700, 804, 805, 806, 807,
	808, 809, 810, 811, 628, 629, 801, 858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 763, 763, 763, 763, 763, 763, 763, 763, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	62, 610, 66, 0, 1250, 859, -2, -2, 0, 0,
	801, 0, -2, 1080, -2, 84, 0, 219, 220, 0,
	1092, 363, 905, 906, 1082, 901, 902, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 443, 0, 445, 1301, 485, 448, 0, 0, 875,
	875, 1301, 1301, 1301, 0, 0, 0, 457, 1302, 1303,
	458, 0, 365, 366, 485, 485, 1301, 1301, 482, 0,
	482, 482, 480, 481, 476, 477, 0, 472, 0, 474,
	500, -2, 503, 504, 505, -2, 0, 514, 515, 0,
	0, 164, 0, 0, 184, 166, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 0,
	187, 0, 911, 914, 526, 44, 1299, 0, 1301, 0,
	0, 0, 31, 0, 0, 835, 0, 826, 827, 831,
	831, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 834,
	43, 526, 0, 524, 530, 531, 520, 0, 541, 0,
	0, 0, 550, 0, 552, 553, 554, 555, 0, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	647, 648, 649, 650, 651, 652, 625, 0, 639, 0,
	0, 0, 687, 688, 689, 690, 691, 692, 693, 0,
	529, 43, 0, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 793, 0, 746, 755,
	0, 747, 756, 748, 757, 749, 0, 750, 758, 751,
	759, 752, 753, 760, 754, 0, 0, 0, 661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 529, 0, 0, 0, 529, 0, 0,
	529, 0, 0, 0, 0, 529, 0, 0, 0, 64,
	0, 609, 0, 556, 558, 559, 560, -2, 0, 613,
	659, -2, 0, 0, 0, 56, 57, 0, 0, 0,
	0, 67, 1250, 69, 70, 0, 0, 0, 318, 868,
	869, 870, 0, 866, 380, 0, 221, 0, 0, 229,
	306, 237, 238, 239, 299, 241, 299, 299, 0, 299,
	299, 299, 299, 299, 315, 315, 315, 315, 315, 282,
	283, 284, 285, 286, 0, 0, 259, 299, 299, 299,
	263, 289, 290, 291, 292, 293, 294, 295, 296, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 301, 301,
	303, 303, 303, 303, 303, 0, 362, 0, 899, 81,
	0, 1301, 0, 1301, 0, 0, 217, 116, 0, 0,
	436, 874, 0, 438, 58, 439, 440, 441, 442, 611,
	909, 910, 446, 447, 486, 487, 0, 0, 451, 452,
	453, 454, 455, 456, 367, 462, 463, 464, 469, 485,
	0, 0, 0, 574, 485, 471, 653, 507, 161, 163,
	165, 183, 0, 0, 186, 189, 0, 0, 0, 529,
	0, 422, 40, 41, 0, 0, 847, 839, 0, 0,
	0, 0, 0, 829, 832, 833, 830, 838, 46, 529,
	0, 812, 0, 0, 532, 525, 34, 620, 621, 623,
	640, 0, 642, 644, 551, 542, 0, 802, -2, 630,
	631, 655, 656, 657, 0, 0, 0, 0, 653, 635,
	0, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 686, 777, 778, 0, 684, 685, 694,
	661, 658, 0, 857, 43, 0, 663, 536, 537, 0,
	0, 733, 0, 0, 669, 804, 0, 669, 804, 0,
	0, 0, 0, 799, 796, 0, 0, 764, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 600, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 567, 1183, 569, 0,
	613, 0, 0, 0, 617, 0, 617, 61, 617, 63,
	0, 612, 860, 68, 0, 0, 73, 74, 861, 862,
	863, 864, 0, 802, 0, 218, 381, 383, 386, 387,
	388, 222, 224, 225, 226, 0, 1092, 355, 1193, 1231,
	-2, 349, 1119, -2, -2, 228, 308, 307, 240, 0,
	315, 315, 299, 299, 299, 299, 268, 315, 271, 274,
	275, 318, 0, 318, 318, 318, 318, 315, 0, 0,
	260, 261, 262, 251, 0, 252, 301, 254, 0, 255,
	256, 257, 258, 361, 0, 0, 0, 0, 0, 88,
	876, 89, 0, 117, 118, 92, 0, 434, 1301, 0,
	1301, 1301, 617, 0, 0, 465, 483, 484, 482, 485,
	0, 468, 475, 0, 167, 168, 190, 64, 0, 912,
	524, 393, 394, 1300, -2, 423, 891, 423, 423, 412,
	335, 423, 881, 882, 883, 884, 885, 886, 887, 888,
	0, 0, 0, 0, 0, 836, 837, 828, 32, 0,
	871, 872, 813, 814, 82, 533, 641, 643, 645, 0,
	661, 632, 653, 636, 0, 633, 0, 627, 0, 666,
	-2, 0, 731, 0, 732, 0, 0, 0, 0, 0,
	770, 0, 0, 771, 0, 742, 825, 0, 797, 0,
	0, 745, 765, 0, 0, 766, 767, 768, 769, 720,
	0, 721, 0, 0, 0, 0, 0, 727, 728, 729,
	730, 0, 0, 547, 547, 547, 0, 547, 547, 0,
	547, 547, 547, 547, 0, 547, 547, 547, 851, 0,
	0, -2, 0, 0, 617, 557, 588, 590, 0, 585,
	598, 599, 601, 0, 603, 0, 605, 606, 576, 563,
	660, 564, 0, 0, 0, 613, 573, 0, 0, 0,
	825, 0, 617, 54, 55, 0, 71, 72, 0, 0,
	78, 319, 320, 0, 0, 384, 0, 223, 0, 0,
	337, 349, 345, 346, 349, 340, 350, 341, 0, 230,
	231, 232, 233, 234, 235, 310, 0, 0, 0, 314,
	0, 322, 324, 0, 236, 309, 0, 318, 318, 315,
	266, 267, 299, 272, 318, 276, 0, 277, 278, 279,
	280, 318, 0, 297, 0, 0, 253, 0, 377, 0,
	900, -2, 81, 0, 119, 120, 121, 0, 93, 94,
	0, 0, 0, 0, 0, 437, 59, 449, 450, 460,
	368, 369, 485, 467, 0, 654, 315, 0, 532, 0,
	396, 0, 1300, 349, 0, 413, 414, 424, 425, 426,
	427, 0, 0, 1300, 0, 0, 0, 425, 0, 0,
	0, 892, 893, 0, 0, 0, 336, 0, 0, 0,
	849, 848, 840, 33, 617, 0, 543, 803, 0, 634,
	0, 637, 701, 664, 538, 0, 0, 299, 299, 782,
	299, 303, 785, 299, 787, 299, 790, 0, 0, 0,
	0, 0, 0, 0, 794, 744, 800, 0, 0, 0,
	544, 825, 722, 723, 724, 725, 726, 547, 547, 705,
	548, 706, 707, 547, 709, 710, 547, 712, 713, 714,
	715, 547, 717, 718, 719, 47, 0, 851, 841, 853,
	855, 0, 43, 0, 0, 580, 825, 582, 589, 0,
	0, 583, 0, 584, 602, 604, 561, 0, 0, 565,
	0, 0, -2, 572, 0, 0, 0, 834, 618, 53,
	75, 76, 77, 382, 385, 0, 351, 299, 354, 0,
	338, 339, 0, 311, 312, 0, 321, 323, 325, 300,
	264, 265, 318, 273, 269, 316, 317, 281, 315, 0,
	315, 0, 304, 0, 364, 378, 0, 0, 86, 0,
	0, 100, 0, 96, 0, 0, 0, 435, 466, 575,
	923, 607, 82, 395, 0, 419, 0, 399, 899, 347,
	390, 400, 401, 406, 407, 408, 0, 0, 403, 0,
	419, 0, 416, 0, 0, 42, 0, 815, 0, 82,
	82, 702, 638, 0, 734, 779, 315, 783, 784, 786,
	788, 789, 791, 736, 735, 0, 0, 0, 0, 0,
	0, 0, 798, 0, 0, 0, 0, 703, 704, 708,
	711, 716, 0, 48, 0, 856, -2, 0, 65, 0,
	834, 586, 0, 591, 0, 578, 0, 613, 570, 0,
	0, 0, 0, 52, 327, 0, 831, 0, 313, 270,
	318, 298, 318, 0, 0, 379, 0, -2, 0, 81,
	101, 102, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 95, 97, 98, 99, 925, 919, 0, 0, 398,
	420, 0, 229, 0, 349, 348, 415, 0, 889, 890,
	0, 410, 419, 0, 0, 0, 850, 821, 0, 617,
	0, 534, 539, 780, 781, 0, 0, 0, 0, 772,
	743, 795, 0, 0, 545, 0, 0, 854, 0, -2,
	0, 581, 51, 0, 577, 0, 566, 568, 613, 614,
	615, 616, 326, 330, 0, 335, 0, 352, 353, 0,
	287, 288, 302, 305, 0, 87, 0, 0, 103, 104,
	105, 106, 108, 109, 0, 0, 0, 879, 927, -2,
	0, 0, 397, 421, 227, 0, 899, 402, 409, 411,
	0, 418, 0, 35, 0, 0, 815, 82, 737, 739,
	738, 740, 0, 0, 0, 761, 762, 825, 0, 844,
	43, 587, 579, 571, 331, 332, 0, 334, 0, 328,
	0, 81, -2, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 0, 0, 0,
	110, 111, 112, 113, 576, 0, 919, 0, 921, 0,
	918, 0, 617, 0, 0, 417, 0, 429, 0, 822,
	823, 824, 816, 817, 819, 820, 821, 535, 741, 0,
	0, 0, 0, 852, -2, 333, 0, 85, 329, 122,
	91, 0, 0, 901, 0, 0, 149, 150, 151, 903,
	0, 191, 30, 0, 926, 0, 924, 0, 0, 920,
	815, 328, 0, 428, 0, 0, 0, 36, 773, 0,
	776, 546, 0, 81, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 147, 0, 0, 880, 928, 0, 0,
	821, 404, 0, 430, 0, 818, 774, 0, 0, 123,
	124, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	904, 114, 192, 922, 916, 37, 328, 0, 0, 356,
	81, 125, 126, 127, 128, 129, 0, 131, 0, 0,
	0, 143, 144, -2, 0, 152, 154, 155, 156, 0,
	158, 159, 148, 405, 0, 0, 357, 358, 0, 90,
	0, 0, 0, 0, 0, 0, 140, 0, 146, 0,
	157, 0, 775, 359, 0, 360, 0, 0, 0, 0,
	0, 135, 136, 0, 0, 0, 141, 0, 153, 0,
	0, 370, 372, 373, 0, 0, 371, 130, 132, 0,
	138, 0, 0, 431, 432, 374, 375, 376, 0, 0,
	0, 137, 0, 142, 139,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 432,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:403
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:408
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:409
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:413
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 29:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:441
		{
			setParseTree(yylex, nil)
		}
	case 30:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:447
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 31:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:453
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:461
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:465
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 34:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:471
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 35:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:478
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 36:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:485
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 37:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:492
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:501
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:507
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:511
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:517
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:521
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:531
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:537
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:541
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:548
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:560
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:572
		{
			yyVAL.str = InsertStr
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:576
		{
			yyVAL.str = ReplaceStr
		}
	case 51:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:582
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:588
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:592
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:596
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 55:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:600
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:606
		{
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:610
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:614
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:624
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:634
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:639
		{
			yyVAL.partitions = nil
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:643
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:653
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:657
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:661
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:671
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:677
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:681
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:685
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:691
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:703
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.str = SessionStr
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.str = GlobalStr
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:718
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:723
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:729
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:742
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:746
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:750
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:754
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:762
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 90:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:770
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:774
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			yyVAL.procedureParams = nil
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:789
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:799
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:803
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:807
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:811
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:816
		{
			yyVAL.characteristics = nil
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:820
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:840
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:844
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:848
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:856
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:868
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:878
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:883
		{
			yyVAL.str = ""
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:887
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:893
		{
			yyVAL.str = BeforeStr
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:897
		{
			yyVAL.str = AfterStr
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.str = InsertStr
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:907
		{
			yyVAL.str = UpdateStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:911
		{
			yyVAL.str = DeleteStr
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:916
		{
			yyVAL.triggerOrder = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:924
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:940
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:946
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:950
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:956
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:960
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:966
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:972
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 137:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:977
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:982
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 139:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:988
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1000
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1006
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1012
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1016
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1020
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1024
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1028
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1032
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1039
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1043
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1053
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1057
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1071
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1079
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1083
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1093
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1101
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1127
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1145
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1153
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1183
		{
			yyVAL.statement = &Resignal{}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1191
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1195
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1203
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1214
		{
			yyVAL.exprs = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1218
		{
			yyVAL.exprs = nil
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1228
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1232
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1267
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1285
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1305
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1374
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1392
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1414
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1493
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1505
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1525
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1587
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1682
		{
			yyVAL.sqlVal = nil
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1691
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1695
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1703
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1713
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1721
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1730
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = ""
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = ""
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.colKeyOpt = colKey
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1819
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1823
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1828
		{
			yyVAL.indexOptions = nil
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1852
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = ""
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1873
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1877
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1881
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.str = yyDollar[1].str
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 356:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1963
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 357:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1967
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 358:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1971
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 359:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1975
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 360:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1979
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1999
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2014
		{
			yyVAL.str = ""
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2028
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2034
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2061
		{
			yyVAL.boolean = true
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.boolean = true
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.boolean = false
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2074
		{
			yyVAL.str = ""
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = yyDollar[1].str
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2117
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2131
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2148
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2154
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2158
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2165
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2180
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2184
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2188
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2193
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 405:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2197
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2215
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2219
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2226
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2242
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2248
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2257
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2261
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnOrder = nil
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2280
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2286
		{
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
		}
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2297
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2313
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2317
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2329
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2333
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2341
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 437:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2349
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2353
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2361
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2369
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2377
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2385
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2395
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2404
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2410
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2415
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2419
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 449:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2423
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2427
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2432
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2436
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2440
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2444
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2448
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2452
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2468
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2476
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2480
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2484
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2488
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 466:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2492
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2497
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2507
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2511
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2515
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2519
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2525
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2533
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2543
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2549
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = ""
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.str = "full "
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2589
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2599
		{
			yyVAL.showFilter = nil
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2607
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2613
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2617
		{
			yyVAL.str = SessionStr
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = GlobalStr
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2627
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.statement = &Begin{}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2647
		{
			yyVAL.statement = &Begin{}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.statement = &Commit{}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.statement = &Rollback{}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2669
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2687
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2691
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.statement = &OtherRead{}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2734
		{
			setAllowComments(yylex, true)
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2744
		{
			yyVAL.bytes2 = nil
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2748
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = UnionStr
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = UnionAllStr
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = UnionDistinctStr
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2767
		{
			yyVAL.byt = 0
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2771
		{
			yyVAL.byt = 1
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2776
		{
			yyVAL.str = ""
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.str = SQLCacheStr
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = ""
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = DistinctStr
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2802
		{
			yyVAL.str = ""
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.str = StraightJoinHint
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2812
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2820
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2839
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2843
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2853
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2857
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2861
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2868
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2872
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 546:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2876
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.over = nil
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.over = yyDollar[1].over
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2890
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2898
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2926
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2940
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2968
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2972
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2983
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2994
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2998
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3002
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3010
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3021
		{
			yyVAL.expr = nil
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3025
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3030
		{
			yyVAL.columns = nil
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3034
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3044
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3054
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3067
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3071
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3075
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3079
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3085
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3087
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3091
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3097
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3099
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3102
		{
			yyVAL.empty = struct{}{}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.empty = struct{}{}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3119
		{
			yyVAL.str = JoinStr
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = JoinStr
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = JoinStr
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3133
		{
			yyVAL.str = StraightJoinStr
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.str = LeftJoinStr
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = LeftJoinStr
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = RightJoinStr
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = RightJoinStr
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3157
		{
			yyVAL.str = NaturalJoinStr
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3161
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3171
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3197
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3202
		{
			yyVAL.indexHints = nil
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3206
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3210
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3214
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3219
		{
			yyVAL.expr = nil
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3223
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3229
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3233
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3241
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3245
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3249
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3253
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3259
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3263
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3269
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3287
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3291
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3295
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3303
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3307
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3311
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = IsNullStr
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.str = IsNotNullStr
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.str = IsTrueStr
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3333
		{
			yyVAL.str = IsNotTrueStr
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.str = IsFalseStr
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3341
		{
			yyVAL.str = IsNotFalseStr
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3347
		{
			yyVAL.str = EqualStr
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3351
		{
			yyVAL.str = LessThanStr
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3355
		{
			yyVAL.str = GreaterThanStr
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3359
		{
			yyVAL.str = LessEqualStr
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.str = GreaterEqualStr
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = NotEqualStr
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3376
		{
			yyVAL.expr = nil
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3380
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3386
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3390
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3394
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3406
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3416
		{
			yyVAL.selectExprs = nil
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3433
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3437
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3459
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3495
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3535
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3543
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3565
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3585
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 702:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3589
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 703:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3599
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3603
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3607
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3611
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3615
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3619
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3623
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3627
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 711:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3631
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3635
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3647
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3651
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3672
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3676
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3680
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3684
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3688
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3692
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3708
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3723
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3727
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3731
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 734:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3735
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3739
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3743
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3747
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 738:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3751
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3755
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 740:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3759
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 741:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3763
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 743:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3771
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3775
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3779
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3802
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3807
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3812
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3818
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3823
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3832
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3836
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3840
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3850
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3855
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 761:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3859
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 762:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3863
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3874
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3884
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3900
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3904
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			yyVAL.str = ""
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3914
		{
			yyVAL.str = BooleanModeStr
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3918
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 775:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = QueryExpansionStr
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3942
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3950
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3954
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3962
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3972
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3992
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3997
		{
			yyVAL.expr = nil
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4001
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = string("")
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4020
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4026
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4031
		{
			yyVAL.expr = nil
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4045
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4049
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.expr = &NullVal{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4089
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4097
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4102
		{
			yyVAL.exprs = nil
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4106
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4131
		{
			yyVAL.expr = nil
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4135
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4150
		{
			yyVAL.orderBy = nil
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4154
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4164
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4170
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4174
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = AscScr
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = AscScr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = DescScr
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4192
		{
			yyVAL.limit = nil
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4200
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4204
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = ForUpdateStr
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = ShareModeStr
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4230
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4238
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4243
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4247
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4251
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4262
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4270
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.setExprs = nil
		}
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4279
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4289
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4299
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4305
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4325
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4331
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4335
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4343
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4350
		{
			yyVAL.bytes = []byte("charset")
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.expr = &Default{}
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4374
		{
			yyVAL.byt = 0
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.byt = 1
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.byt = 0
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.byt = 1
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4386
		{
			yyVAL.str = IgnoreStr
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.sqlVal = nil
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4395
		{
			yyVAL.empty = struct{}{}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.empty = struct{}{}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.empty = struct{}{}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4401
		{
			yyVAL.empty = struct{}{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.empty = struct{}{}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.empty = struct{}{}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.empty = struct{}{}
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.empty = struct{}{}
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.empty = struct{}{}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.empty = struct{}{}
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4418
		{
			yyVAL.empty = struct{}{}
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4420
		{
			yyVAL.empty = struct{}{}
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4422
		{
			yyVAL.empty = struct{}{}
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.str = UniqueStr
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.str = FulltextStr
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.str = SpatialStr
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			yyVAL.str = yyDollar[1].str
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4438
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4440
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4458
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4475
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = string("")
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4489
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4492
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4497
		{
			yyVAL.EnclosedBy = nil
		}
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4501
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4506
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4515
		{
			yyVAL.sqlVal = nil
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4524
		{
			yyVAL.sqlVal = nil
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4533
		{
			yyVAL.Fields = nil
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4537
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4542
		{
			yyVAL.Lines = nil
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4546
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4551
		{
			yyVAL.sqlVal = nil
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4555
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4954
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4963
		{
			decNesting(yylex)
		}
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4968
		{
			skipToEnd(yylex)
		}
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4973
		{
			skipToEnd(yylex)
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4977
		{
			skipToEnd(yylex)
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4981
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
