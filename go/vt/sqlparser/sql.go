// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const MAXVALUE = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const TRIGGERS = 57562
const FUNCTION = 57563
const STATUS = 57564
const VARIABLES = 57565
const WARNINGS = 57566
const ERRORS = 57567
const KILL = 57568
const CONNECTION = 57569
const SEQUENCE = 57570
const ENABLE = 57571
const DISABLE = 57572
const EACH = 57573
const ROW = 57574
const BEFORE = 57575
const FOLLOWS = 57576
const PRECEDES = 57577
const DEFINER = 57578
const INVOKER = 57579
const INOUT = 57580
const OUT = 57581
const DETERMINISTIC = 57582
const CONTAINS = 57583
const READS = 57584
const MODIFIES = 57585
const SQL = 57586
const SECURITY = 57587
const TEMPORARY = 57588
const ALGORITHM = 57589
const MERGE = 57590
const TEMPTABLE = 57591
const UNDEFINED = 57592
const EVENT = 57593
const EVENTS = 57594
const SCHEDULE = 57595
const EVERY = 57596
const STARTS = 57597
const ENDS = 57598
const COMPLETION = 57599
const PRESERVE = 57600
const CASCADED = 57601
const INSTANT = 57602
const INPLACE = 57603
const COPY = 57604
const DISCARD = 57605
const IMPORT = 57606
const SHARED = 57607
const EXCLUSIVE = 57608
const WITHOUT = 57609
const VALIDATION = 57610
const COALESCE = 57611
const EXCHANGE = 57612
const REBUILD = 57613
const REMOVE = 57614
const PARTITIONING = 57615
const CLASS_ORIGIN = 57616
const SUBCLASS_ORIGIN = 57617
const MESSAGE_TEXT = 57618
const MYSQL_ERRNO = 57619
const CONSTRAINT_CATALOG = 57620
const CONSTRAINT_SCHEMA = 57621
const CONSTRAINT_NAME = 57622
const CATALOG_NAME = 57623
const SCHEMA_NAME = 57624
const TABLE_NAME = 57625
const COLUMN_NAME = 57626
const CURSOR_NAME = 57627
const SIGNAL = 57628
const RESIGNAL = 57629
const SQLSTATE = 57630
const DECLARE = 57631
const CONDITION = 57632
const CURSOR = 57633
const CONTINUE = 57634
const EXIT = 57635
const UNDO = 57636
const HANDLER = 57637
const FOUND = 57638
const SQLWARNING = 57639
const SQLEXCEPTION = 57640
const FETCH = 57641
const OPEN = 57642
const CLOSE = 57643
const LOOP = 57644
const LEAVE = 57645
const ITERATE = 57646
const REPEAT = 57647
const UNTIL = 57648
const WHILE = 57649
const DO = 57650
const RETURN = 57651
const USER = 57652
const IDENTIFIED = 57653
const ROLE = 57654
const REUSE = 57655
const GRANT = 57656
const GRANTS = 57657
const REVOKE = 57658
const NONE = 57659
const ATTRIBUTE = 57660
const RANDOM = 57661
const PASSWORD = 57662
const INITIAL = 57663
const AUTHENTICATION = 57664
const SSL = 57665
const X509 = 57666
const CIPHER = 57667
const ISSUER = 57668
const SUBJECT = 57669
const ACCOUNT = 57670
const EXPIRE = 57671
const NEVER = 57672
const OPTION = 57673
const OPTIONAL = 57674
const ADMIN = 57675
const PRIVILEGES = 57676
const MAX_QUERIES_PER_HOUR = 57677
const MAX_UPDATES_PER_HOUR = 57678
const MAX_CONNECTIONS_PER_HOUR = 57679
const MAX_USER_CONNECTIONS = 57680
const FLUSH = 57681
const FAILED_LOGIN_ATTEMPTS = 57682
const PASSWORD_LOCK_TIME = 57683
const REQUIRE = 57684
const PROXY = 57685
const ROUTINE = 57686
const TABLESPACE = 57687
const CLIENT = 57688
const SLAVE = 57689
const EXECUTE = 57690
const FILE = 57691
const RELOAD = 57692
const REPLICATION = 57693
const SHUTDOWN = 57694
const SUPER = 57695
const USAGE = 57696
const LOGS = 57697
const ENGINE = 57698
const ERROR = 57699
const GENERAL = 57700
const HOSTS = 57701
const OPTIMIZER_COSTS = 57702
const RELAY = 57703
const SLOW = 57704
const USER_RESOURCES = 57705
const NO_WRITE_TO_BINLOG = 57706
const CHANNEL = 57707
const APPLICATION_PASSWORD_ADMIN = 57708
const AUDIT_ABORT_EXEMPT = 57709
const AUDIT_ADMIN = 57710
const AUTHENTICATION_POLICY_ADMIN = 57711
const BACKUP_ADMIN = 57712
const BINLOG_ADMIN = 57713
const BINLOG_ENCRYPTION_ADMIN = 57714
const CLONE_ADMIN = 57715
const CONNECTION_ADMIN = 57716
const ENCRYPTION_KEY_ADMIN = 57717
const FIREWALL_ADMIN = 57718
const FIREWALL_EXEMPT = 57719
const FIREWALL_USER = 57720
const FLUSH_OPTIMIZER_COSTS = 57721
const FLUSH_STATUS = 57722
const FLUSH_TABLES = 57723
const FLUSH_USER_RESOURCES = 57724
const GROUP_REPLICATION_ADMIN = 57725
const GROUP_REPLICATION_STREAM = 57726
const INNODB_REDO_LOG_ARCHIVE = 57727
const INNODB_REDO_LOG_ENABLE = 57728
const NDB_STORED_USER = 57729
const PASSWORDLESS_USER_ADMIN = 57730
const PERSIST_RO_VARIABLES_ADMIN = 57731
const REPLICATION_APPLIER = 57732
const REPLICATION_SLAVE_ADMIN = 57733
const RESOURCE_GROUP_ADMIN = 57734
const RESOURCE_GROUP_USER = 57735
const ROLE_ADMIN = 57736
const SENSITIVE_VARIABLES_OBSERVER = 57737
const SESSION_VARIABLES_ADMIN = 57738
const SET_USER_ID = 57739
const SHOW_ROUTINE = 57740
const SKIP_QUERY_REWRITE = 57741
const SYSTEM_VARIABLES_ADMIN = 57742
const TABLE_ENCRYPTION_ADMIN = 57743
const TP_CONNECTION_ADMIN = 57744
const VERSION_TOKEN_ADMIN = 57745
const XA_RECOVER_ADMIN = 57746
const REPLICA = 57747
const REPLICAS = 57748
const SOURCE = 57749
const STOP = 57750
const RESET = 57751
const FILTER = 57752
const LOG = 57753
const MASTER = 57754
const SOURCE_HOST = 57755
const SOURCE_USER = 57756
const SOURCE_PASSWORD = 57757
const SOURCE_PORT = 57758
const SOURCE_CONNECT_RETRY = 57759
const SOURCE_RETRY_COUNT = 57760
const SOURCE_AUTO_POSITION = 57761
const REPLICATE_DO_TABLE = 57762
const REPLICATE_IGNORE_TABLE = 57763
const BEGIN = 57764
const START = 57765
const TRANSACTION = 57766
const COMMIT = 57767
const ROLLBACK = 57768
const SAVEPOINT = 57769
const WORK = 57770
const RELEASE = 57771
const CHAIN = 57772
const CONSISTENT = 57773
const SNAPSHOT = 57774
const BIT = 57775
const TINYINT = 57776
const SMALLINT = 57777
const MEDIUMINT = 57778
const INT = 57779
const INTEGER = 57780
const BIGINT = 57781
const INTNUM = 57782
const SERIAL = 57783
const INT1 = 57784
const INT2 = 57785
const INT3 = 57786
const INT4 = 57787
const INT8 = 57788
const REAL = 57789
const DOUBLE = 57790
const FLOAT_TYPE = 57791
const DECIMAL = 57792
const NUMERIC = 57793
const DEC = 57794
const FIXED = 57795
const PRECISION = 57796
const TIME = 57797
const TIMESTAMP = 57798
const DATETIME = 57799
const CHAR = 57800
const VARCHAR = 57801
const BOOL = 57802
const CHARACTER = 57803
const VARBINARY = 57804
const NCHAR = 57805
const NVARCHAR = 57806
const NATIONAL = 57807
const VARYING = 57808
const VARCHARACTER = 57809
const TEXT = 57810
const TINYTEXT = 57811
const MEDIUMTEXT = 57812
const LONGTEXT = 57813
const LONG = 57814
const BLOB = 57815
const TINYBLOB = 57816
const MEDIUMBLOB = 57817
const LONGBLOB = 57818
const JSON = 57819
const ENUM = 57820
const GEOMETRY = 57821
const POINT = 57822
const LINESTRING = 57823
const POLYGON = 57824
const GEOMETRYCOLLECTION = 57825
const MULTIPOINT = 57826
const MULTILINESTRING = 57827
const MULTIPOLYGON = 57828
const LOCAL = 57829
const LOW_PRIORITY = 57830
const SKIP = 57831
const LOCKED = 57832
const NULLX = 57833
const AUTO_INCREMENT = 57834
const APPROXNUM = 57835
const SIGNED = 57836
const UNSIGNED = 57837
const ZEROFILL = 57838
const SRID = 57839
const COLLATION = 57840
const DATABASES = 57841
const SCHEMAS = 57842
const TABLES = 57843
const FULL = 57844
const PROCESSLIST = 57845
const COLUMNS = 57846
const FIELDS = 57847
const ENGINES = 57848
const PLUGINS = 57849
const NAMES = 57850
const CHARSET = 57851
const GLOBAL = 57852
const SESSION = 57853
const ISOLATION = 57854
const LEVEL = 57855
const READ = 57856
const WRITE = 57857
const ONLY = 57858
const REPEATABLE = 57859
const COMMITTED = 57860
const UNCOMMITTED = 57861
const SERIALIZABLE = 57862
const ENCRYPTION = 57863
const CURRENT_TIMESTAMP = 57864
const NOW = 57865
const DATABASE = 57866
const CURRENT_DATE = 57867
const CURRENT_USER = 57868
const CURRENT_TIME = 57869
const LOCALTIME = 57870
const LOCALTIMESTAMP = 57871
const UTC_DATE = 57872
const UTC_TIME = 57873
const UTC_TIMESTAMP = 57874
const REPLACE = 57875
const CONVERT = 57876
const CAST = 57877
const POSITION = 57878
const SUBSTR = 57879
const SUBSTRING = 57880
const TRIM = 57881
const LEADING = 57882
const TRAILING = 57883
const BOTH = 57884
const GROUP_CONCAT = 57885
const SEPARATOR = 57886
const TIMESTAMPADD = 57887
const TIMESTAMPDIFF = 57888
const EXTRACT = 57889
const GET_FORMAT = 57890
const OVER = 57891
const WINDOW = 57892
const GROUPING = 57893
const CURRENT = 57894
const AVG = 57895
const BIT_AND = 57896
const BIT_OR = 57897
const BIT_XOR = 57898
const COUNT = 57899
const JSON_ARRAYAGG = 57900
const JSON_OBJECTAGG = 57901
const MAX = 57902
const MIN = 57903
const STDDEV_POP = 57904
const STDDEV = 57905
const STD = 57906
const STDDEV_SAMP = 57907
const SUM = 57908
const VAR_POP = 57909
const VARIANCE = 57910
const VAR_SAMP = 57911
const CUME_DIST = 57912
const DENSE_RANK = 57913
const FIRST_VALUE = 57914
const LAG = 57915
const LAST_VALUE = 57916
const LEAD = 57917
const NTH_VALUE = 57918
const NTILE = 57919
const ROW_NUMBER = 57920
const PERCENT_RANK = 57921
const RANK = 57922
const DUAL = 57923
const JSON_TABLE = 57924
const PATH = 57925
const AVG_ROW_LENGTH = 57926
const CHECKSUM = 57927
const COMPACT = 57928
const COMPRESSED = 57929
const COMPRESSION = 57930
const DISK = 57931
const DIRECTORY = 57932
const DELAY_KEY_WRITE = 57933
const DYNAMIC = 57934
const ENGINE_ATTRIBUTE = 57935
const ENCRYPTED = 57936
const ENCRYPTION_KEY_ID = 57937
const HASH = 57938
const INSERT_METHOD = 57939
const ITEF_QUOTES = 57940
const LIST = 57941
const MIN_ROWS = 57942
const MAX_ROWS = 57943
const PACK_KEYS = 57944
const MEMORY = 57945
const PAGE_CHECKSUM = 57946
const PAGE_COMPRESSED = 57947
const PAGE_COMPRESSION_LEVEL = 57948
const PARTITIONS = 57949
const REDUNDANT = 57950
const ROW_FORMAT = 57951
const SECONDARY_ENGINE = 57952
const SECONDARY_ENGINE_ATTRIBUTE = 57953
const STATS_AUTO_RECALC = 57954
const STATS_PERSISTENT = 57955
const STATS_SAMPLE_PAGES = 57956
const STORAGE = 57957
const SUBPARTITION = 57958
const SUBPARTITIONS = 57959
const TABLE_CHECKSUM = 57960
const TRANSACTIONAL = 57961
const VERSIONING = 57962
const YES = 57963
const PREPARE = 57964
const DEALLOCATE = 57965
const MATCH = 57966
const AGAINST = 57967
const BOOLEAN = 57968
const LANGUAGE = 57969
const WITH = 57970
const QUERY = 57971
const EXPANSION = 57972
const MICROSECOND = 57973
const SECOND = 57974
const MINUTE = 57975
const HOUR = 57976
const DAY = 57977
const WEEK = 57978
const MONTH = 57979
const QUARTER = 57980
const YEAR = 57981
const SECOND_MICROSECOND = 57982
const MINUTE_MICROSECOND = 57983
const MINUTE_SECOND = 57984
const HOUR_MICROSECOND = 57985
const HOUR_SECOND = 57986
const HOUR_MINUTE = 57987
const DAY_MICROSECOND = 57988
const DAY_SECOND = 57989
const DAY_MINUTE = 57990
const DAY_HOUR = 57991
const YEAR_MONTH = 57992
const NAME = 57993
const SYSTEM = 57994
const ACCESSIBLE = 57995
const ASENSITIVE = 57996
const CUBE = 57997
const DELAYED = 57998
const DISTINCTROW = 57999
const EMPTY = 58000
const FLOAT4 = 58001
const FLOAT8 = 58002
const GET = 58003
const HIGH_PRIORITY = 58004
const INSENSITIVE = 58005
const IO_AFTER_GTIDS = 58006
const IO_BEFORE_GTIDS = 58007
const LINEAR = 58008
const MASTER_BIND = 58009
const MASTER_SSL_VERIFY_SERVER_CERT = 58010
const MIDDLEINT = 58011
const PURGE = 58012
const READ_WRITE = 58013
const RLIKE = 58014
const SENSITIVE = 58015
const SPECIFIC = 58016
const SQL_BIG_RESULT = 58017
const SQL_SMALL_RESULT = 58018
const UNUSED = 58019
const DESCRIPTION = 58020
const LATERAL = 58021
const MEMBER = 58022
const RECURSIVE = 58023
const BUCKETS = 58024
const CLONE = 58025
const COMPONENT = 58026
const DEFINITION = 58027
const ENFORCED = 58028
const NOT_ENFORCED = 58029
const EXCLUDE = 58030
const GEOMCOLLECTION = 58031
const GET_MASTER_PUBLIC_KEY = 58032
const HISTOGRAM = 58033
const HISTORY = 58034
const INACTIVE = 58035
const INVISIBLE = 58036
const MASTER_COMPRESSION_ALGORITHMS = 58037
const MASTER_PUBLIC_KEY_PATH = 58038
const MASTER_TLS_CIPHERSUITES = 58039
const MASTER_ZSTD_COMPRESSION_LEVEL = 58040
const NESTED = 58041
const NETWORK_NAMESPACE = 58042
const NOWAIT = 58043
const NULLS = 58044
const OJ = 58045
const OLD = 58046
const ORDINALITY = 58047
const ORGANIZATION = 58048
const OTHERS = 58049
const PERSIST = 58050
const PERSIST_ONLY = 58051
const PRIVILEGE_CHECKS_USER = 58052
const PROCESS = 58053
const REFERENCE = 58054
const REQUIRE_ROW_FORMAT = 58055
const RESOURCE = 58056
const RESPECT = 58057
const RESTART = 58058
const RETAIN = 58059
const SECONDARY = 58060
const SECONDARY_LOAD = 58061
const SECONDARY_UNLOAD = 58062
const THREAD_PRIORITY = 58063
const TIES = 58064
const VCPU = 58065
const VISIBLE = 58066
const INFILE = 58067
const ACTIVE = 58068
const AGGREGATE = 58069
const ANY = 58070
const ARRAY = 58071
const ASCII = 58072
const AT = 58073
const AUTOEXTEND_SIZE = 58074
const GENERATED = 58075
const ALWAYS = 58076
const STORED = 58077
const VIRTUAL = 58078
const NVAR = 58079
const PASSWORD_LOCK = 58080

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	758, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1789,
	200, 1810,
	-2, 331,
	-1, 62,
	241, 1169,
	242, 1169,
	-2, 1158,
	-1, 90,
	270, 331,
	-2, 1795,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 540,
	1, 2490,
	6, 2490,
	7, 2490,
	28, 2490,
	187, 2490,
	758, 2490,
	-2, 1204,
	-1, 553,
	187, 1820,
	-2, 1814,
	-1, 554,
	187, 1821,
	-2, 1815,
	-1, 659,
	1, 679,
	758, 679,
	-2, 677,
	-1, 668,
	1, 1308,
	8, 1308,
	9, 1308,
	10, 1308,
	17, 1308,
	18, 1308,
	19, 1308,
	20, 1308,
	22, 1308,
	24, 1308,
	34, 1308,
	35, 1308,
	64, 1308,
	65, 1308,
	66, 1308,
	67, 1308,
	68, 1308,
	70, 1308,
	71, 1308,
	74, 1308,
	75, 1308,
	77, 1308,
	78, 1308,
	96, 1308,
	521, 1308,
	569, 1308,
	647, 1308,
	758, 1308,
	-2, 1804,
	-1, 673,
	1, 1415,
	8, 1415,
	9, 1415,
	10, 1415,
	17, 1415,
	18, 1415,
	19, 1415,
	20, 1415,
	22, 1415,
	24, 1415,
	34, 1415,
	35, 1415,
	64, 1415,
	65, 1415,
	66, 1415,
	67, 1415,
	68, 1415,
	70, 1415,
	71, 1415,
	74, 1415,
	75, 1415,
	77, 1415,
	78, 1415,
	96, 1415,
	521, 1415,
	569, 1415,
	647, 1415,
	758, 1415,
	-2, 1804,
	-1, 701,
	187, 2187,
	-2, 1429,
	-1, 734,
	187, 2295,
	-2, 1697,
	-1, 735,
	187, 2376,
	-2, 1431,
	-1, 736,
	187, 2207,
	-2, 1432,
	-1, 805,
	187, 2158,
	-2, 1663,
	-1, 808,
	187, 2173,
	-2, 1581,
	-1, 809,
	187, 2176,
	-2, 1581,
	-1, 810,
	187, 2386,
	-2, 1581,
	-1, 812,
	187, 2174,
	-2, 1581,
	-1, 813,
	187, 2387,
	-2, 1581,
	-1, 814,
	187, 2388,
	-2, 1581,
	-1, 873,
	187, 2175,
	-2, 1581,
	-1, 956,
	187, 2275,
	-2, 1581,
	-1, 957,
	187, 2276,
	-2, 1581,
	-1, 1069,
	109, 2503,
	120, 2503,
	187, 2503,
	-2, 1771,
	-1, 1070,
	109, 2633,
	120, 2633,
	187, 2633,
	-2, 1772,
	-1, 1075,
	109, 2530,
	120, 2530,
	187, 2530,
	-2, 1773,
	-1, 1076,
	109, 2581,
	120, 2581,
	187, 2581,
	-2, 1774,
	-1, 1077,
	109, 2582,
	120, 2582,
	187, 2582,
	-2, 1775,
	-1, 1078,
	109, 2430,
	120, 2430,
	187, 2430,
	-2, 1780,
	-1, 1080,
	109, 2558,
	120, 2558,
	187, 2558,
	-2, 1782,
	-1, 1253,
	448, 1183,
	-2, 1187,
	-1, 1255,
	448, 1183,
	-2, 1187,
	-1, 1381,
	1, 679,
	758, 679,
	-2, 677,
	-1, 1383,
	1, 680,
	758, 680,
	-2, 677,
	-1, 1406,
	1, 1309,
	8, 1309,
	9, 1309,
	10, 1309,
	17, 1309,
	18, 1309,
	19, 1309,
	20, 1309,
	22, 1309,
	24, 1309,
	34, 1309,
	35, 1309,
	64, 1309,
	65, 1309,
	66, 1309,
	67, 1309,
	68, 1309,
	70, 1309,
	71, 1309,
	74, 1309,
	75, 1309,
	77, 1309,
	78, 1309,
	96, 1309,
	521, 1309,
	569, 1309,
	647, 1309,
	758, 1309,
	-2, 1804,
	-1, 1417,
	1, 1415,
	8, 1415,
	9, 1415,
	10, 1415,
	17, 1415,
	18, 1415,
	19, 1415,
	20, 1415,
	22, 1415,
	24, 1415,
	34, 1415,
	35, 1415,
	64, 1415,
	65, 1415,
	66, 1415,
	67, 1415,
	68, 1415,
	70, 1415,
	71, 1415,
	74, 1415,
	75, 1415,
	77, 1415,
	78, 1415,
	96, 1415,
	521, 1415,
	569, 1415,
	647, 1415,
	758, 1415,
	-2, 1804,
	-1, 1710,
	1, 679,
	758, 679,
	-2, 677,
	-1, 1712,
	1, 679,
	758, 679,
	-2, 677,
	-1, 2261,
	187, 1824,
	-2, 1675,
	-1, 2263,
	187, 2718,
	-2, 1677,
	-1, 2264,
	187, 2719,
	-2, 1678,
	-1, 2265,
	187, 1823,
	-2, 1819,
	-1, 2414,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2432,
	187, 2299,
	-2, 1776,
	-1, 2439,
	1, 894,
	758, 894,
	-2, 677,
	-1, 2625,
	49, 914,
	206, 917,
	208, 914,
	209, 914,
	210, 914,
	-2, 1030,
	-1, 2706,
	8, 59,
	9, 59,
	10, 59,
	-2, 1461,
	-1, 2723,
	1, 1354,
	8, 1354,
	9, 1354,
	10, 1354,
	17, 1354,
	18, 1354,
	19, 1354,
	20, 1354,
	22, 1354,
	24, 1354,
	34, 1354,
	35, 1354,
	64, 1354,
	65, 1354,
	66, 1354,
	67, 1354,
	68, 1354,
	70, 1354,
	71, 1354,
	74, 1354,
	75, 1354,
	77, 1354,
	78, 1354,
	96, 1354,
	521, 1354,
	569, 1354,
	647, 1354,
	758, 1354,
	-2, 1804,
	-1, 2900,
	212, 1024,
	216, 1024,
	-2, 782,
	-1, 2901,
	212, 1094,
	216, 1094,
	-2, 783,
	-1, 3162,
	1, 1415,
	8, 1415,
	9, 1415,
	10, 1415,
	17, 1415,
	18, 1415,
	19, 1415,
	20, 1415,
	22, 1415,
	24, 1415,
	34, 1415,
	35, 1415,
	64, 1415,
	65, 1415,
	66, 1415,
	67, 1415,
	68, 1415,
	70, 1415,
	71, 1415,
	74, 1415,
	75, 1415,
	77, 1415,
	78, 1415,
	96, 1415,
	521, 1415,
	569, 1415,
	647, 1415,
	758, 1415,
	-2, 1804,
	-1, 3265,
	1, 1728,
	74, 1728,
	758, 1728,
	-2, 1804,
	-1, 3466,
	49, 914,
	206, 917,
	208, 914,
	209, 914,
	210, 914,
	-2, 1030,
	-1, 3479,
	206, 918,
	212, 1024,
	216, 1024,
	-2, 916,
	-1, 3664,
	77, 2070,
	78, 2070,
	187, 2070,
	-2, 1210,
	-1, 3665,
	76, 1739,
	251, 1739,
	-2, 2119,
	-1, 3666,
	76, 1740,
	251, 1740,
	-2, 2684,
	-1, 3905,
	8, 59,
	9, 59,
	10, 59,
	-2, 1735,
	-1, 4050,
	46, 1835,
	-2, 1833,
	-1, 4313,
	8, 59,
	9, 59,
	10, 59,
	-2, 1736,
	-1, 4338,
	314, 426,
	-2, 1890,
	-1, 4339,
	314, 427,
	-2, 1931,
	-1, 4340,
	314, 428,
	-2, 2107,
	-1, 4569,
	104, 412,
	106, 412,
	108, 412,
	-2, 79,
	-1, 4650,
	106, 419,
	107, 419,
	108, 419,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 80563

var yyAct = [...]int{
	747, 44, 4623, 4524, 4560, 4592, 693, 1185, 4573, 4526,
	4561, 2429, 2917, 565, 4199, 8, 4305, 4198, 7, 4443,
	4189, 4044, 4332, 4197, 6, 4084, 4230, 28, 4200, 9,
	2916, 3753, 489, 3609, 653, 4442, 707, 2352, 4191, 3273,
	2353, 4039, 4331, 1630, 3242, 44, 4163, 1416, 4095, 3431,
	703, 3331, 3684, 3938, 3868, 3825, 1409, 2290, 720, 4345,
	4057, 2702, 4303, 4050, 4045, 1533, 3861, 2640, 3826, 3579,
	4048, 3670, 2501, 3860, 3662, 1745, 101, 4006, 2456, 544,
	547, 684, 3152, 3817, 4344, 3879, 592, 592, 3409, 3782,
	3444, 3776, 2897, 637, 649, 4190, 2169, 670, 2984, 2690,
	3759, 107, 2236, 2520, 3859, 3332, 1411, 2898, 3274, 3090,
	1464, 1747, 2904, 3654, 2905, 3585, 2928, 746, 3471, 1145,
	105, 2970, 811, 3559, 3547, 2161, 3538, 1157, 2487, 1561,
	2446, 134, 2623, 4046, 1214, 1413, 2624, 3053, 2592, 1266,
	2618, 2460, 3429, 1203, 2831, 1562, 712, 706, 2707, 2462,
	2854, 3204, 2552, 1074, 1153, 1387, 694, 1376, 2222, 2224,
	3250, 1415, 2622, 2162, 1750, 2102, 2043, 2143, 1240, 2994,
	2575, 1720, 2951, 1267, 1611, 2267, 1408, 2483, 1445, 1071,
	1607, 2342, 2693, 1453, 668, 2606, 2107, 689, 1448, 1300,
	1382, 1637, 1278, 3057, 1148, 1610, 1067, 1068, 2416, 1161,
	1472, 665, 1386, 664, 1394, 2229, 1385, 1384, 3671, 677,
	1744, 568, 567, 652, 1277, 1259, 2075, 2042, 2076, 1184,
	550, 1172, 3249, 1713, 4196, 3, 1166, 687, 660, 4650,
	4644, 129, 4631, 2306, 4615, 125, 2924, 4601, 1149, 4569,
	4567, 2931, 4539, 4536, 4535, 710, 4534, 4519, 4517, 4425,
	4421, 4416, 100, 4097, 4096, 3347, 3587, 2936, 2935, 3836,
	2100, 2505, 1176, 4287, 3979, 3422, 2539, 2538, 86, 108,
	3831, 3832, 3829, 3830, 3391, 3392, 3687, 4591, 3394, 4554,
	3977, 4552, 2932, 1436, 4639, 94, 4590, 3685, 4553, 3835,
	3330, 3103, 3425, 3980, 2962, 1723, 99, 657, 2938, 3423,
	2914, 97, 4359, 4358, 71, 4557, 4301, 4501, 2915, 683,
	4169, 3939, 2652, 47, 3760, 3992, 651, 2536, 560, 2982,
	3424, 4452, 662, 1186, 3762, 1353, 3941, 2035, 2536, 4192,
	4265, 3854, 3406, 4300, 122, 4168, 3232, 3540, 499, 3731,
	3527, 4593, 674, 4079, 3728, 3576, 3922, 3934, 42, 3857,
	2431, 2918, 4395, 3301, 3300, 1168, 3113, 1174, 1175, 3926,
	3112, 3935, 42, 3858, 4377, 4286, 700, 1178, 2366, 2364,
	2363, 2362, 2365, 2361, 2360, 2359, 3137, 42, 2373, 4118,
	2372, 2371, 4154, 2370, 2369, 2368, 2367, 1144, 2354, 2366,
	2364, 2363, 2362, 2365, 2361, 2360, 2359, 2355, 2356, 2373,
	2357, 2372, 2371, 2358, 2370, 2369, 2368, 2367, 4053, 2942,
	2807, 3646, 4309, 89, 2934, 4309, 1165, 42, 2937, 1701,
	1160, 3270, 2568, 1156, 3560, 3271, 2927, 89, 3285, 3286,
	4304, 3372, 1061, 2574, 42, 45, 2425, 3373, 3374, 1354,
	2106, 3765, 89, 2426, 2427, 539, 663, 3940, 71, 4306,
	2845, 1253, 4306, 2844, 93, 3284, 2846, 47, 75, 76,
	3034, 88, 114, 112, 113, 72, 2104, 2105, 2146, 2147,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 88, 486,
	562, 3887, 89, 3763, 3764, 3766, 3767, 3768, 1612, 2929,
	1613, 4379, 4064, 89, 2103, 63, 4288, 136, 3607, 89,
	2124, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 3885, 4310, 1497, 42, 4310, 1238, 1239,
	3294, 1247, 2177, 1330, 559, 558, 3880, 1218, 1219, 2940,
	1236, 1222, 1237, 1238, 1239, 2731, 96, 2930, 3185, 3264,
	1145, 1338, 1145, 2458, 2459, 2573, 646, 1297, 2473, 2472,
	96, 3498, 3205, 1311, 1261, 3076, 2477, 1263, 4322, 2463,
	3270, 3627, 2223, 1262, 3271, 96, 1220, 1221, 148, 144,
	145, 661, 146, 2194, 1198, 1400, 1401, 2603, 4590, 3631,
	4553, 89, 4551, 1396, 1399, 1400, 1401, 1397, 3629, 1398,
	1403, 673, 2148, 2694, 2695, 2558, 2484, 2557, 1265, 1223,
	534, 557, 640, 1248, 1249, 96, 2463, 150, 149, 2466,
	2465, 537, 2467, 49, 90, 56, 55, 58, 641, 3319,
	80, 641, 96, 2081, 4323, 2144, 2145, 1351, 643, 4418,
	1352, 642, 4419, 3033, 4420, 3208, 4638, 4591, 4589, 1224,
	153, 1256, 4588, 3978, 4554, 2154, 62, 92, 91, 156,
	1145, 2153, 2152, 57, 1377, 2151, 2150, 2149, 1380, 1210,
	542, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 77, 647,
	1407, 1412, 4037, 4275, 1372, 639, 1430, 1431, 1145, 3852,
	1145, 1145, 1334, 1335, 1145, 3844, 3083, 3081, 2929, 2981,
	3842, 4446, 1250, 3014, 1145, 2977, 3082, 3080, 4459, 151,
	4458, 152, 1506, 1508, 96, 4258, 1510, 4398, 4112, 4010,
	3777, 3443, 1146, 3019, 2587, 1327, 1404, 3163, 3780, 2933,
	4513, 4260, 1451, 3163, 2926, 3163, 3416, 1313, 69, 70,
	3778, 3779, 4123, 3586, 1182, 4122, 2930, 3794, 1525, 4371,
	3812, 2377, 1528, 1529, 1530, 1531, 1532, 1199, 1536, 4417,
	4445, 3783, 3784, 3785, 3786, 2588, 78, 1304, 79, 1345,
	3539, 2136, 1346, 4363, 1260, 4001, 108, 2979, 2521, 3792,
	2569, 142, 4357, 4035, 3974, 1379, 3410, 3411, 3412, 3413,
	3414, 84, 3686, 4647, 4617, 659, 1313, 4646, 4616, 4120,
	60, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 3999, 1555, 1556, 1558,
	1558, 1558, 3996, 1563, 1563, 1563, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1422, 3942, 3687,
	82, 83, 4324, 3419, 1406, 538, 3503, 1337, 3293, 1313,
	2175, 4114, 4577, 3562, 64, 81, 3943, 66, 67, 73,
	3761, 74, 1217, 554, 1563, 3212, 3211, 3213, 3210, 2929,
	4413, 2226, 561, 3217, 138, 3209, 3206, 3445, 4613, 3207,
	4532, 3215, 4521, 3075, 3102, 108, 4369, 2607, 2581, 4307,
	3093, 143, 4307, 4155, 2943, 3214, 3292, 3865, 2176, 4167,
	3491, 2929, 1320, 147, 545, 674, 674, 4394, 1373, 1209,
	2178, 2913, 3216, 3218, 3925, 3154, 4514, 2930, 3082, 3080,
	2980, 163, 126, 487, 498, 4411, 4412, 163, 4285, 4280,
	3924, 3993, 163, 1564, 1565, 2983, 3584, 4146, 1507, 3945,
	3404, 1212, 634, 634, 1557, 1559, 1560, 1563, 1563, 2930,
	2925, 163, 1373, 1433, 1439, 1433, 1433, 1374, 2945, 1433,
	163, 1391, 108, 2106, 1432, 1318, 1437, 1437, 4085, 3944,
	1444, 1438, 1438, 163, 109, 1390, 1264, 2082, 1255, 2379,
	2380, 2378, 696, 2486, 163, 1159, 3565, 3563, 87, 2104,
	2105, 115, 3561, 1597, 3851, 1257, 3971, 1211, 2469, 1718,
	3843, 154, 3841, 109, 1312, 2470, 163, 634, 3564, 1159,
	4065, 3975, 3139, 4259, 4113, 3147, 3149, 3148, 487, 163,
	1402, 3141, 3970, 128, 4444, 1358, 1305, 548, 1347, 1319,
	1402, 1315, 1235, 132, 140, 139, 4119, 3969, 1396, 1399,
	1400, 1401, 1397, 109, 1398, 1403, 1469, 1470, 1468, 1728,
	1729, 1727, 1600, 3998, 59, 61, 3968, 3219, 3155, 3995,
	87, 3966, 3154, 1316, 1317, 1471, 1202, 3967, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 549, 1598, 1599, 3965, 1173,
	136, 1370, 727, 136, 728, 730, 731, 732, 733, 2511,
	137, 141, 729, 2302, 1074, 4107, 4108, 3505, 3506, 1074,
	3418, 3407, 85, 1708, 1323, 546, 1476, 3410, 3411, 3412,
	3413, 3414, 4389, 3583, 1314, 1321, 1322, 1324, 1325, 1326,
	2510, 1328, 1329, 1368, 1331, 1332, 1333, 4194, 1336, 546,
	1339, 1340, 1341, 1342, 1343, 2157, 1145, 1170, 1169, 658,
	1301, 4103, 109, 1469, 1470, 1468, 3492, 3493, 3494, 3504,
	136, 2515, 2516, 2045, 130, 1251, 131, 4327, 4328, 3580,
	3581, 141, 1471, 1173, 3002, 3003, 1232, 1233, 2108, 1234,
	1171, 1231, 4269, 592, 1230, 1229, 4530, 1228, 4525, 1722,
	4367, 543, 3818, 3819, 2158, 1693, 1694, 1695, 1696, 1697,
	4187, 4640, 107, 592, 4528, 3092, 2077, 3548, 1604, 1746,
	3549, 3142, 3550, 2035, 1160, 1622, 2110, 3072, 2453, 2109,
	4400, 1627, 4399, 3060, 3060, 1160, 3477, 2455, 138, 3070,
	2522, 1405, 3069, 1754, 4653, 4648, 4632, 2299, 4604, 4627,
	1167, 1187, 3336, 1703, 4264, 1364, 663, 1615, 3092, 4137,
	1721, 4029, 1616, 1309, 3850, 1726, 3847, 3582, 3441, 2455,
	3077, 3013, 3009, 2987, 1698, 1145, 1363, 1359, 1360, 1361,
	1362, 1365, 1366, 1367, 1369, 1418, 1420, 2986, 2582, 1261,
	3143, 2141, 1263, 1733, 1699, 1731, 4537, 1258, 1262, 2504,
	1164, 1601, 1602, 2455, 123, 1418, 1420, 1752, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	546, 123, 2209, 2208, 2207, 1163, 4032, 592, 3436, 1389,
	1177, 484, 2070, 3153, 89, 3833, 1512, 1513, 118, 691,
	1735, 3606, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 2778, 3046, 1497, 2033, 2046, 3283,
	2533, 2523, 2134, 3011, 2775, 2532, 3010, 2851, 163, 89,
	2097, 1511, 2048, 2058, 4278, 3068, 2059, 2060, 2061, 1509,
	108, 2037, 2041, 487, 2748, 2065, 121, 2454, 127, 1308,
	3091, 2725, 2614, 4422, 3086, 2073, 2117, 3476, 140, 139,
	1704, 1716, 3089, 670, 670, 670, 670, 1709, 1717, 3335,
	1725, 1707, 2537, 2062, 1724, 2064, 2512, 1419, 1145, 2454,
	2166, 546, 1371, 1412, 1743, 2203, 1742, 120, 2421, 4625,
	4527, 4529, 4626, 3091, 4624, 2044, 2140, 1419, 2239, 1514,
	1623, 2553, 163, 2095, 1626, 1511, 1527, 1526, 1514, 2196,
	1477, 1624, 1295, 2454, 2050, 2051, 1200, 4117, 648, 3066,
	3060, 2204, 2431, 4136, 2197, 3063, 1427, 1428, 3062, 3067,
	3049, 1487, 2646, 3048, 1497, 2206, 2180, 2292, 2291, 2202,
	1252, 4135, 2079, 2078, 3744, 3742, 1497, 2841, 1421, 3438,
	2083, 2072, 96, 3834, 4144, 2300, 2301, 2088, 2089, 1260,
	4429, 2091, 3827, 2112, 4390, 4391, 2649, 2647, 2642, 96,
	3901, 2184, 2644, 2181, 1429, 1402, 3083, 2094, 1514, 1145,
	1754, 2163, 4172, 4171, 2155, 2156, 1512, 1513, 3982, 2115,
	2113, 2116, 1418, 1420, 163, 2034, 1512, 1513, 3081, 2293,
	4387, 4388, 2135, 2455, 3068, 2138, 3743, 1536, 670, 3059,
	2832, 3101, 3100, 727, 163, 728, 730, 731, 732, 733,
	3050, 3051, 3099, 729, 2302, 3983, 2643, 2645, 2648, 2650,
	2139, 3098, 2455, 2298, 2303, 3097, 3463, 3462, 1454, 1241,
	487, 4430, 2171, 3096, 2265, 2455, 3095, 3094, 2722, 2205,
	3049, 1478, 2646, 3048, 2328, 2331, 2174, 2170, 2346, 2159,
	2172, 2173, 2344, 2202, 2182, 2183, 1623, 2185, 2268, 2719,
	2716, 1427, 1428, 670, 1471, 2374, 2375, 1624, 2195, 2232,
	4183, 2260, 2069, 3353, 3351, 2547, 2649, 2647, 2642, 3042,
	3041, 2246, 2644, 1421, 2039, 2039, 2039, 2039, 3464, 1534,
	2430, 1226, 108, 1468, 3059, 3039, 3038, 108, 674, 674,
	674, 674, 2259, 2295, 664, 2297, 1074, 683, 3029, 1429,
	1471, 2848, 2847, 3028, 1419, 3027, 1606, 1216, 674, 1754,
	2309, 2311, 1153, 2244, 4607, 4574, 4606, 1418, 1420, 2274,
	3050, 3051, 1242, 3140, 2256, 3352, 2643, 2645, 2648, 2650,
	1243, 3043, 3026, 2454, 2272, 2273, 2271, 1554, 2299, 3066,
	3060, 1469, 1470, 1468, 3025, 3063, 3024, 3040, 3062, 3067,
	1490, 1491, 1492, 1493, 1494, 1487, 3023, 1377, 1497, 2438,
	1471, 2602, 2454, 2849, 2601, 2093, 1271, 1414, 2548, 3060,
	1469, 1470, 1468, 2265, 1160, 2454, 2269, 3061, 2453, 1180,
	2382, 4636, 3060, 108, 1227, 1179, 2387, 1160, 2389, 1471,
	3061, 2453, 2530, 3234, 2452, 2343, 2443, 2415, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1487, 1706, 1215, 1497, 4630,
	2436, 108, 2312, 2313, 2314, 2315, 2316, 1470, 1468, 1469,
	1470, 1468, 2493, 2494, 2495, 2496, 2497, 4634, 1606, 2413,
	1245, 1739, 2343, 674, 2791, 1471, 2340, 4603, 1471, 2468,
	2471, 2437, 4515, 2474, 2475, 2476, 4463, 2985, 2228, 1419,
	1711, 2480, 2481, 2482, 2419, 4453, 2423, 2422, 2528, 2529,
	2428, 2052, 2053, 2054, 2055, 2056, 2770, 2057, 2489, 2490,
	2491, 2492, 3793, 2442, 2440, 3787, 2498, 2237, 2238, 2514,
	2464, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 1254, 4481, 1497, 2266, 3007, 674, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2503, 2485, 2118, 2230, 3345, 2121,
	2122, 2123, 3862, 2125, 2126, 1465, 4621, 2127, 2350, 4362,
	3163, 2128, 2500, 2241, 2129, 1469, 1470, 1468, 2130, 2131,
	4641, 2132, 2133, 1476, 1469, 1470, 1468, 4256, 4333, 3853,
	4462, 2506, 4461, 2508, 1471, 4333, 3175, 4407, 2242, 4406,
	2245, 2243, 2326, 1471, 4319, 691, 2334, 1486, 1485, 1495,
	1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 2230,
	4495, 1497, 103, 2252, 2254, 2255, 2300, 2301, 163, 4115,
	691, 2253, 2745, 2746, 2747, 4262, 2409, 1159, 4257, 4642,
	1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1487, 1606, 1606, 1497, 1486, 1485, 1495, 1496, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1487, 4492, 110, 1497,
	116, 2179, 3147, 3149, 3148, 690, 692, 4255, 4184, 4494,
	4116, 4080, 3172, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 3372, 1061, 1497, 3362, 3363, 3365, 3373,
	3374, 3364, 3366, 3367, 2219, 691, 3990, 3989, 2769, 4346,
	2768, 2351, 3988, 89, 2221, 3169, 3368, 3369, 3370, 3371,
	487, 4652, 1469, 1470, 1468, 2270, 4491, 1159, 163, 3987,
	1469, 1470, 1468, 4583, 1062, 1063, 1064, 3981, 634, 634,
	2220, 1471, 3803, 634, 3751, 3750, 1162, 3516, 2247, 1471,
	163, 3457, 3456, 163, 1469, 1470, 1468, 3455, 634, 634,
	2957, 4333, 1558, 2296, 163, 3720, 3718, 3454, 487, 487,
	487, 487, 1309, 1471, 3396, 3348, 3719, 2956, 2954, 1469,
	1470, 1468, 2941, 163, 163, 163, 163, 163, 2049, 163,
	2218, 2319, 2320, 2321, 1469, 1470, 1468, 2325, 1471, 2327,
	2330, 2333, 4465, 2338, 2339, 163, 163, 3568, 3566, 2349,
	634, 1303, 1302, 1471, 1388, 2068, 163, 3725, 3567, 2215,
	3421, 3420, 4651, 2381, 4635, 2383, 2384, 4618, 2572, 2217,
	2388, 2086, 2390, 2391, 2564, 4612, 4541, 4451, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	3723, 1407, 1469, 1470, 1468, 2216, 1469, 1470, 1468, 1159,
	4410, 1380, 4533, 1381, 3236, 4423, 1534, 3573, 3147, 3149,
	3148, 1471, 634, 634, 634, 1471, 3571, 1159, 4404, 4403,
	2211, 4350, 2545, 2412, 4349, 2414, 4343, 2549, 4342, 670,
	2213, 4121, 2085, 4012, 2551, 3653, 3495, 2997, 2711, 2712,
	2713, 3147, 3149, 3148, 2996, 2214, 2559, 2555, 634, 2544,
	2543, 2294, 2087, 634, 634, 2080, 2212, 1741, 3147, 3149,
	3148, 1740, 2704, 1712, 1710, 1275, 1298, 3147, 3149, 3148,
	556, 2710, 4450, 4447, 163, 163, 4380, 4376, 4360, 163,
	4295, 1159, 4289, 4186, 4185, 2502, 4111, 1274, 4110, 4091,
	4036, 2749, 1534, 163, 634, 4000, 163, 163, 163, 163,
	1451, 1451, 1754, 3997, 3964, 3933, 2210, 3932, 163, 3897,
	3856, 3855, 3802, 2579, 2689, 2563, 163, 3801, 2615, 3800,
	163, 2571, 3799, 3790, 3789, 3788, 3749, 3746, 2578, 3721,
	3716, 3707, 3703, 3698, 3697, 2705, 2586, 3696, 3569, 2589,
	3558, 3546, 3542, 3535, 3534, 3533, 2524, 2782, 3460, 3453,
	3452, 3451, 2526, 2527, 3379, 3184, 3183, 3181, 3044, 2534,
	2952, 2850, 1524, 1523, 1522, 2630, 2265, 2609, 2570, 2542,
	163, 2090, 2608, 4151, 691, 2611, 696, 487, 3590, 4505,
	2248, 2249, 2250, 3733, 4435, 691, 2743, 2744, 2772, 1734,
	2724, 691, 564, 3590, 691, 4011, 2709, 2698, 4019, 691,
	3733, 4366, 3957, 2260, 3733, 4266, 3733, 4100, 3956, 691,
	3590, 4099, 3398, 1159, 1344, 1159, 3590, 4094, 1159, 2268,
	4033, 691, 3382, 3231, 3381, 1159, 3590, 4004, 3163, 691,
	1159, 1159, 2613, 691, 2437, 3380, 674, 3590, 3872, 163,
	2417, 163, 2035, 3815, 3230, 2035, 3814, 670, 1534, 2735,
	670, 4585, 2733, 2734, 2323, 2324, 3674, 3876, 2754, 1486,
	1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1487, 2417, 636, 1497, 674, 3733, 3732, 2750, 3590, 3589,
	2317, 2560, 3389, 3388, 1754, 3385, 3386, 3385, 3384, 4296,
	1074, 2724, 691, 2584, 2583, 2758, 2317, 2566, 2836, 2418,
	2035, 2420, 2317, 691, 4165, 163, 163, 163, 1486, 1485,
	1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487,
	2198, 691, 1497, 1629, 1628, 3655, 2834, 2995, 3674, 2519,
	2418, 2995, 2035, 1159, 2435, 1486, 1485, 1495, 1496, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1487, 2269, 1752, 1497,
	3270, 2234, 102, 2790, 3271, 2610, 1486, 1485, 1495, 1496,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 2536, 2198,
	1497, 89, 3804, 2518, 2908, 2911, 2806, 2808, 1349, 1348,
	3910, 3163, 1307, 2814, 2815, 2816, 2817, 2198, 3590, 2835,
	2198, 3674, 592, 2903, 1306, 2906, 2907, 1307, 3001, 3399,
	3387, 3182, 3022, 1699, 2424, 2233, 2899, 2714, 2715, 2724,
	2801, 2717, 2718, 2799, 2499, 2720, 2721, 2798, 2724, 2600,
	2092, 2541, 2535, 2837, 1721, 2860, 2838, 2235, 163, 2842,
	1375, 2839, 2137, 1615, 163, 163, 634, 634, 634, 1309,
	2101, 163, 2989, 2035, 2944, 2946, 1732, 2852, 1730, 2947,
	2948, 1609, 2949, 2950, 1378, 89, 4397, 2540, 2703, 4267,
	4131, 4015, 3752, 3741, 3738, 2461, 2488, 2463, 3157, 2751,
	2752, 2753, 3032, 3031, 2484, 2896, 2166, 2694, 2695, 4385,
	1313, 2513, 2953, 2479, 2478, 2550, 1702, 1294, 2554, 1207,
	1206, 4620, 674, 4619, 2955, 674, 4598, 4596, 4587, 4586,
	4562, 4133, 4555, 4549, 3875, 4547, 4497, 4496, 2585, 3867,
	3863, 3655, 3397, 2992, 2991, 2975, 2999, 2958, 2697, 2691,
	2978, 2111, 1737, 1301, 1350, 1310, 2193, 2701, 2700, 2699,
	2187, 2192, 2783, 2784, 2785, 3639, 2190, 2188, 2993, 2186,
	4299, 2191, 2189, 533, 3186, 2732, 2740, 3170, 2739, 2998,
	3173, 4070, 3848, 3176, 3824, 1486, 1485, 1495, 1496, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1487, 4352, 3008, 1497,
	3054, 3065, 3058, 670, 3736, 3485, 3484, 2163, 3036, 3012,
	3378, 3377, 3376, 3159, 3087, 1458, 1459, 2912, 1754, 3052,
	3138, 3165, 3166, 3167, 3064, 3071, 3161, 3074, 3030, 2902,
	4157, 3177, 4160, 4294, 4049, 4293, 3085, 3035, 4051, 4353,
	535, 536, 4106, 3146, 3047, 4105, 1461, 3874, 4003, 1410,
	43, 1463, 1462, 3015, 1460, 555, 2562, 2561, 2084, 3984,
	3985, 3021, 3079, 3078, 3461, 4, 4428, 3840, 3243, 1486,
	1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1487, 3692, 2265, 1497, 1458, 1459, 3496, 3220, 3350, 2616,
	3222, 1625, 3267, 3272, 43, 1292, 1276, 670, 1486, 1485,
	1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487,
	106, 1446, 1497, 1273, 1272, 1461, 1456, 1213, 4578, 2260,
	1463, 1462, 1447, 1460, 4022, 3233, 4021, 3277, 1388, 2237,
	2238, 3275, 3164, 3902, 3426, 2759, 2760, 2761, 2762, 2763,
	1269, 1270, 3193, 2507, 3178, 3797, 3795, 3649, 3266, 1736,
	3180, 1405, 3798, 3796, 4297, 4261, 4007, 3754, 3740, 2960,
	3191, 2160, 1268, 2788, 3195, 2086, 3268, 2085, 3194, 163,
	1356, 3188, 2307, 2308, 1442, 1443, 1440, 1441, 2738, 3190,
	3000, 685, 3221, 1434, 1435, 3346, 2737, 4469, 3004, 3005,
	4468, 4467, 3359, 3961, 2605, 1246, 4382, 163, 1486, 1485,
	1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487,
	4381, 4291, 1497, 4178, 4161, 4124, 4069, 3883, 3288, 686,
	102, 2039, 1377, 3882, 3612, 2995, 3327, 1159, 4600, 4599,
	3244, 3245, 3246, 3247, 3248, 163, 4424, 163, 2964, 2965,
	2966, 1159, 3354, 3448, 3020, 3193, 1159, 592, 674, 3146,
	3358, 3018, 4599, 3415, 3017, 3338, 3339, 3340, 2800, 3341,
	3342, 2779, 2776, 2833, 2742, 3279, 3287, 3281, 3282, 1159,
	2590, 2860, 1159, 3280, 2063, 3400, 1466, 1205, 1204, 4600,
	3344, 4174, 3375, 2231, 678, 4485, 2498, 682, 681, 3337,
	4213, 65, 4215, 23, 4214, 22, 4216, 24, 4217, 25,
	4211, 18, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258,
	3259, 3260, 3261, 4210, 17, 3269, 108, 4209, 16, 104,
	3478, 4212, 19, 3428, 4208, 15, 4202, 11, 4237, 39,
	68, 163, 163, 4235, 37, 4234, 36, 1159, 3356, 3357,
	163, 4351, 674, 4238, 40, 3417, 4233, 32, 4232, 31,
	4231, 30, 4228, 27, 1, 3383, 2961, 4227, 26, 4207,
	14, 4204, 13, 4284, 1159, 1485, 1495, 1496, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1487, 672, 1454, 1497, 3395,
	4203, 12, 3197, 4201, 10, 50, 2580, 2988, 2119, 591,
	3775, 3774, 3781, 3405, 3408, 3432, 2976, 4279, 3434, 4145,
	3223, 3791, 3224, 3225, 1719, 3226, 3227, 3474, 3973, 3228,
	1183, 3435, 3578, 2517, 1299, 4292, 4156, 4158, 3229, 3758,
	3757, 3450, 2969, 2968, 1293, 3237, 3238, 3239, 3240, 2567,
	3480, 3481, 3482, 2099, 3055, 3458, 3459, 3487, 3488, 3465,
	3490, 3056, 2531, 3045, 3052, 4176, 2604, 3475, 2142, 1699,
	2591, 1357, 2899, 3545, 3508, 2439, 2444, 3513, 3921, 2764,
	3648, 3683, 2630, 4078, 3507, 3682, 3681, 3588, 2853, 1147,
	117, 2546, 3605, 1225, 507, 3610, 3146, 3486, 2441, 2922,
	3437, 4159, 1296, 2921, 3442, 2792, 2939, 2457, 3446, 3447,
	3499, 3449, 3501, 3644, 1383, 3929, 2920, 2919, 4263, 2923,
	1634, 1632, 1633, 3514, 3543, 3517, 1631, 3519, 3521, 3523,
	3525, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 1636, 1635, 1497, 513, 1617, 3663, 3326,
	1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1487, 4337, 3652, 1497, 163, 1467, 2199, 2200, 2201,
	163, 739, 135, 163, 163, 163, 3088, 3277, 3591, 644,
	2166, 3275, 3613, 645, 3657, 124, 133, 515, 1505, 2736,
	2843, 1072, 1073, 3658, 1065, 4427, 3334, 2727, 4170, 2901,
	4052, 4162, 4326, 1452, 3659, 2910, 2910, 4054, 3187, 3881,
	3730, 3611, 2789, 1553, 2341, 709, 1422, 656, 3669, 3626,
	3900, 4056, 2251, 723, 722, 721, 718, 3622, 3623, 3624,
	719, 3625, 2376, 4308, 2240, 3263, 3679, 3628, 3262, 3630,
	3265, 1479, 3390, 1558, 1558, 1558, 1563, 1563, 1563, 1566,
	1567, 1568, 1569, 1563, 1563, 1563, 1159, 3656, 163, 1355,
	698, 3706, 1426, 1425, 1424, 1423, 1159, 1159, 1417, 667,
	2410, 3006, 634, 3661, 1395, 1393, 1392, 1738, 1605, 2696,
	2692, 2163, 666, 671, 3146, 46, 3745, 2741, 1244, 163,
	634, 1159, 2318, 1457, 3645, 487, 3675, 3676, 3677, 3678,
	2322, 3672, 3616, 3617, 3618, 3619, 3620, 4063, 634, 3701,
	111, 680, 3704, 679, 3708, 688, 3343, 29, 21, 20,
	1201, 2621, 3717, 3673, 2641, 3770, 3771, 3772, 1181, 3737,
	3680, 48, 1159, 2385, 2386, 54, 634, 53, 1159, 51,
	2392, 2393, 2394, 2395, 634, 52, 3610, 2963, 2509, 3807,
	4336, 4523, 1279, 3473, 4540, 3734, 3735, 4572, 38, 2408,
	3805, 3528, 35, 3530, 34, 33, 4229, 1159, 1159, 4223,
	4222, 4225, 108, 4224, 4221, 3755, 1564, 1565, 3748, 3551,
	3552, 3553, 1597, 1598, 1599, 3473, 4226, 4220, 1557, 1559,
	1560, 4219, 4218, 3575, 4236, 4206, 3820, 3821, 4205, 3349,
	3773, 3769, 4507, 4506, 5, 98, 95, 41, 3809, 119,
	1143, 2, 0, 3811, 0, 3596, 3597, 3598, 3599, 3600,
	3601, 3602, 3603, 3604, 0, 0, 0, 3822, 0, 0,
	3393, 0, 0, 0, 0, 3839, 0, 0, 0, 0,
	3145, 0, 0, 3615, 0, 0, 0, 0, 0, 3806,
	0, 0, 0, 0, 0, 0, 3156, 1159, 3427, 3158,
	0, 3054, 3065, 3058, 0, 1159, 1159, 1159, 3823, 3816,
	0, 3845, 0, 3828, 0, 0, 3641, 3642, 3643, 0,
	0, 0, 0, 0, 0, 3064, 0, 0, 3878, 0,
	163, 0, 0, 0, 3837, 0, 163, 0, 3846, 0,
	3849, 0, 1159, 1606, 1606, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3869, 3871, 0,
	0, 0, 0, 0, 0, 3870, 0, 0, 0, 0,
	0, 0, 3810, 0, 3610, 3610, 0, 3884, 3886, 3813,
	0, 3907, 0, 0, 3663, 0, 3688, 3689, 3690, 670,
	0, 0, 3912, 3235, 0, 3146, 0, 0, 0, 0,
	3510, 1159, 0, 0, 3923, 3866, 0, 3709, 3710, 3711,
	0, 0, 0, 3904, 3864, 0, 0, 0, 0, 0,
	0, 0, 3727, 0, 0, 0, 0, 3277, 3638, 0,
	163, 3275, 0, 3739, 0, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 1159, 3747, 0, 0, 0,
	0, 0, 0, 0, 0, 3906, 0, 0, 0, 0,
	3193, 3953, 0, 0, 0, 0, 0, 0, 0, 3927,
	3914, 0, 0, 0, 1145, 0, 0, 0, 0, 0,
	0, 3920, 0, 0, 0, 0, 3145, 3930, 0, 0,
	487, 3903, 0, 0, 0, 664, 2910, 2910, 2910, 0,
	2910, 2910, 0, 3915, 0, 0, 487, 0, 3951, 3911,
	3146, 3954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 3958, 0, 0, 0, 0, 0,
	3959, 0, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 0, 0, 1497, 3146, 3937, 3949,
	3950, 0, 163, 0, 0, 3936, 0, 3947, 3948, 3946,
	0, 0, 0, 0, 0, 0, 1159, 1159, 1159, 0,
	0, 0, 0, 634, 4031, 0, 0, 0, 0, 3963,
	163, 634, 0, 0, 0, 1159, 1159, 3976, 3962, 0,
	0, 3986, 0, 3972, 0, 0, 3991, 3433, 0, 0,
	0, 0, 0, 634, 0, 1159, 0, 634, 108, 4009,
	3473, 634, 634, 4005, 634, 0, 4024, 3994, 4025, 4013,
	4014, 4008, 4002, 0, 0, 163, 163, 0, 3907, 4074,
	0, 0, 4040, 0, 674, 3473, 4016, 4017, 0, 0,
	0, 4023, 0, 0, 0, 4082, 4083, 487, 2910, 0,
	0, 0, 0, 0, 0, 487, 487, 487, 487, 1159,
	0, 0, 1159, 487, 487, 1159, 487, 0, 0, 4038,
	0, 2556, 0, 0, 4026, 1159, 4028, 1159, 4030, 487,
	487, 1159, 163, 487, 0, 4073, 4071, 0, 1159, 0,
	1159, 1159, 1159, 1159, 1159, 1159, 0, 4068, 108, 0,
	0, 0, 4075, 4072, 0, 0, 4086, 3529, 0, 3756,
	0, 4088, 4102, 3145, 4104, 0, 4077, 0, 0, 0,
	0, 0, 0, 3888, 3889, 3890, 3891, 0, 0, 0,
	0, 3895, 0, 4089, 0, 3898, 3899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3808, 0,
	0, 1159, 0, 3960, 0, 0, 3146, 1159, 0, 0,
	2612, 0, 4109, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 1159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4129, 0, 0,
	0, 0, 0, 0, 0, 3663, 4126, 0, 0, 4177,
	0, 2706, 0, 4127, 0, 4182, 4128, 4139, 4132, 4130,
	4152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2723, 0, 1145, 0, 1145, 0, 4141, 4143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3146, 4175, 4180, 108, 0, 4173, 0, 4138, 0, 0,
	0, 1159, 0, 1145, 0, 0, 1159, 0, 0, 0,
	0, 0, 0, 3334, 0, 0, 0, 0, 0, 4193,
	0, 0, 0, 0, 4195, 0, 0, 0, 0, 0,
	0, 0, 3334, 2756, 0, 2757, 4254, 0, 0, 0,
	0, 3145, 0, 4268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4271, 0, 0, 3869, 2765, 2766,
	2767, 4281, 4276, 0, 2771, 3870, 2774, 3277, 4274, 2777,
	4277, 3275, 2780, 2781, 4312, 0, 4283, 2786, 2787, 0,
	4290, 0, 0, 2793, 2794, 2795, 4298, 0, 2796, 0,
	2797, 4315, 4318, 4314, 0, 4311, 0, 4321, 4101, 0,
	0, 4041, 4042, 4043, 4088, 4272, 1145, 0, 1145, 0,
	0, 0, 0, 0, 1145, 0, 0, 0, 0, 0,
	2802, 2803, 2804, 2805, 0, 0, 2809, 2810, 2811, 2812,
	2813, 163, 0, 1159, 0, 2818, 2819, 2820, 2821, 2822,
	2823, 2824, 2825, 2826, 2827, 2828, 2829, 4364, 2830, 4378,
	4081, 0, 0, 0, 0, 0, 0, 0, 3243, 108,
	0, 0, 0, 0, 1159, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 4142, 634, 0, 0, 0, 4365,
	4098, 4386, 634, 4374, 0, 4361, 0, 108, 4368, 4372,
	4375, 3869, 4347, 0, 0, 4373, 0, 0, 4356, 3870,
	0, 0, 4384, 4383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4408, 0, 0, 0, 0, 487,
	0, 4392, 0, 0, 4401, 0, 0, 0, 4437, 487,
	4125, 592, 0, 4405, 0, 0, 4341, 4434, 0, 0,
	4449, 4414, 0, 0, 0, 0, 487, 4436, 4134, 0,
	0, 0, 0, 0, 0, 4455, 0, 0, 0, 0,
	4448, 0, 0, 0, 0, 0, 0, 0, 1145, 0,
	4441, 1145, 0, 4439, 0, 4440, 0, 1145, 1145, 1145,
	1145, 4456, 1145, 1145, 0, 0, 1145, 1145, 4408, 0,
	4454, 0, 0, 0, 4460, 3334, 0, 0, 0, 1145,
	0, 0, 0, 0, 0, 3610, 0, 4457, 4470, 0,
	4181, 0, 3145, 0, 0, 0, 4486, 4504, 0, 0,
	0, 3277, 4490, 1145, 1159, 3275, 1145, 0, 4484, 1145,
	4502, 4500, 4325, 0, 4329, 4512, 4473, 4520, 4511, 4493,
	1159, 4473, 4531, 2430, 4510, 4473, 4483, 4509, 0, 4508,
	0, 0, 4464, 592, 0, 4466, 0, 4498, 4489, 4543,
	0, 0, 4475, 4476, 4477, 0, 0, 4480, 0, 0,
	0, 0, 0, 0, 1145, 0, 0, 0, 1145, 0,
	1145, 4566, 0, 0, 1145, 4522, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 1145, 1145, 1145, 1145, 0,
	1145, 163, 163, 4548, 0, 0, 4550, 4516, 0, 4471,
	4518, 3334, 0, 0, 0, 4370, 0, 3916, 3917, 3918,
	3919, 0, 0, 0, 0, 0, 4597, 3145, 1145, 0,
	1145, 4595, 1145, 0, 0, 0, 0, 4473, 0, 4473,
	4610, 4608, 0, 4575, 0, 0, 3162, 0, 0, 0,
	0, 0, 0, 0, 4473, 4473, 4473, 0, 4564, 4473,
	4622, 0, 1145, 4628, 3145, 4402, 0, 487, 1145, 0,
	2910, 2910, 1159, 0, 0, 1159, 1145, 0, 2617, 4354,
	0, 0, 4582, 0, 4140, 0, 487, 4473, 0, 4473,
	1455, 0, 1145, 3196, 0, 1145, 4426, 3198, 3199, 3200,
	3201, 3202, 3203, 0, 0, 1145, 0, 0, 0, 0,
	4438, 1145, 0, 0, 0, 0, 4605, 0, 0, 0,
	0, 4473, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 0, 4473, 1497, 2726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3334, 157, 0,
	0, 4473, 4633, 108, 532, 0, 0, 2910, 2910, 157,
	0, 1159, 552, 0, 4473, 0, 0, 0, 0, 0,
	4473, 0, 0, 0, 0, 0, 0, 0, 654, 4645,
	487, 1159, 487, 0, 487, 0, 0, 157, 1486, 1485,
	1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487,
	654, 697, 1497, 0, 0, 0, 0, 1082, 0, 0,
	0, 157, 1159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4542, 0, 4055, 4058, 0, 0, 4546, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 4320,
	0, 3531, 3532, 0, 0, 4563, 157, 0, 0, 3541,
	0, 0, 3544, 0, 1534, 0, 0, 0, 0, 3554,
	3555, 3556, 3557, 0, 4487, 0, 0, 3570, 3572, 3574,
	0, 0, 0, 3145, 0, 0, 1481, 0, 1484, 0,
	0, 0, 4503, 0, 3577, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 0, 1482, 1483, 1480, 0, 0, 0, 0,
	0, 0, 0, 0, 1486, 1485, 1495, 1496, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1487, 0, 0, 1497, 0,
	0, 0, 0, 0, 0, 0, 2688, 0, 0, 0,
	0, 4559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 487,
	1388, 0, 2637, 0, 0, 0, 0, 0, 2661, 0,
	0, 0, 0, 487, 0, 0, 163, 3145, 0, 0,
	0, 0, 0, 0, 0, 0, 708, 0, 0, 0,
	0, 0, 0, 2773, 0, 0, 0, 1159, 3174, 0,
	2636, 0, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 0, 4611, 1497, 2658, 0, 0,
	0, 1534, 0, 0, 0, 0, 1159, 1486, 1485, 1495,
	1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 3694,
	3695, 1497, 0, 0, 158, 0, 490, 3702, 0, 0,
	3705, 0, 0, 0, 0, 158, 0, 3712, 3713, 3714,
	3715, 0, 0, 0, 0, 0, 3722, 3724, 3726, 0,
	0, 0, 3729, 0, 655, 487, 0, 0, 0, 0,
	0, 487, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 655, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 0, 158, 1151, 0,
	0, 0, 0, 3637, 3593, 3594, 3595, 4058, 2627, 3467,
	2639, 0, 3466, 2638, 2629, 3171, 1159, 2662, 0, 158,
	0, 163, 0, 0, 0, 0, 0, 3636, 2671, 0,
	0, 490, 158, 3614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3621, 1486, 1485, 1495, 1496, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1487, 0, 0, 1497, 3632,
	3633, 3634, 3635, 2660, 2682, 2633, 2632, 3640, 0, 0,
	0, 0, 528, 0, 0, 157, 1159, 0, 3650, 3651,
	0, 4330, 4334, 2628, 0, 0, 0, 0, 0, 0,
	4348, 0, 0, 0, 0, 0, 2894, 0, 0, 3468,
	3469, 487, 0, 2652, 0, 0, 3660, 1486, 1485, 1495,
	1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 0,
	1388, 1497, 0, 0, 0, 0, 0, 0, 2866, 3168,
	1159, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 0, 0, 1497, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 2678, 0, 1486, 1485,
	1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487,
	0, 0, 1497, 0, 0, 4409, 0, 2863, 500, 0,
	0, 2686, 0, 0, 2755, 0, 0, 0, 0, 0,
	0, 0, 2668, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 1159, 1486, 1485, 1495, 1496, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1487, 503, 0, 1497, 0, 0,
	0, 1159, 0, 0, 514, 526, 527, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 1159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 4478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 0, 516, 512, 1082, 0, 521, 522,
	0, 0, 0, 1159, 0, 0, 0, 2867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2876, 0,
	0, 0, 0, 0, 0, 0, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	0, 4538, 0, 0, 0, 0, 0, 0, 2654, 0,
	0, 0, 0, 2865, 2888, 1486, 1485, 1495, 1496, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1487, 0, 163, 1497,
	0, 0, 0, 0, 0, 0, 0, 2665, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 518,
	2631, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4609, 0, 0, 0,
	2655, 2656, 0, 4614, 2659, 0, 2883, 2664, 0, 2669,
	2666, 2667, 0, 2670, 2663, 158, 2673, 2672, 2674, 0,
	2675, 2676, 2677, 0, 0, 2679, 2680, 2681, 2683, 2684,
	2685, 2892, 0, 0, 2657, 2687, 0, 0, 0, 510,
	524, 0, 2873, 0, 2651, 0, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3892, 3893, 3894, 0, 3896, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3905, 0,
	3908, 3909, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 3913, 0, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 655, 0, 2885,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 517, 504, 505, 0, 531, 0, 0, 0,
	506, 508, 1083, 502, 530, 529, 0, 0, 2653, 0,
	0, 0, 0, 490, 0, 551, 0, 0, 3952, 0,
	0, 0, 0, 0, 0, 0, 3955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	1081, 0, 0, 0, 0, 1150, 0, 2870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	0, 0, 0, 0, 0, 1608, 0, 0, 1082, 0,
	0, 0, 0, 1082, 4018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2859, 2861, 0, 0, 2864, 0, 0, 2869, 4034, 2874,
	2871, 2872, 0, 2875, 2868, 0, 2878, 2877, 2879, 0,
	2880, 2881, 2882, 0, 0, 2884, 2886, 2887, 2889, 2890,
	2891, 0, 0, 0, 2862, 2893, 0, 4059, 4060, 4061,
	4062, 0, 0, 0, 2895, 0, 0, 4066, 4067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4076, 0, 0, 0, 157, 0, 0, 0, 0,
	1715, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4087, 0, 157, 0, 0,
	157, 0, 0, 1715, 552, 0, 0, 1749, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 157, 157, 157, 157, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 2067, 0, 0, 0, 0, 2857, 0,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4147, 4148, 4149, 4150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4188, 0, 0,
	0, 158, 0, 0, 1083, 0, 0, 0, 0, 1083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 157, 0, 0, 0, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4273, 0,
	157, 0, 1749, 157, 157, 157, 157, 0, 0, 4282,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 654, 2894, 4302,
	0, 0, 0, 0, 4313, 0, 0, 0, 0, 4316,
	4317, 2227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1388, 490, 0, 0, 0, 0, 0, 0,
	2866, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 697, 0, 157, 0, 0,
	0, 0, 0, 158, 0, 0, 158, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 2855, 0, 0, 0,
	0, 490, 490, 490, 490, 0, 0, 0, 0, 2863,
	0, 0, 0, 0, 0, 0, 158, 158, 158, 158,
	158, 2227, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2856, 0, 0, 0, 0, 654, 0, 157, 2227,
	2227, 2227, 0, 0, 0, 2227, 0, 2227, 2227, 2227,
	0, 2227, 2227, 0, 0, 0, 1082, 2227, 0, 0,
	0, 0, 0, 4393, 0, 0, 0, 4396, 0, 0,
	0, 2227, 2227, 2227, 2227, 0, 0, 2227, 2227, 2227,
	2227, 2227, 0, 0, 0, 0, 2227, 2227, 2227, 2227,
	2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227, 0, 1081,
	0, 0, 157, 157, 157, 0, 0, 0, 0, 2867,
	1082, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2876, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2865, 2888, 158, 158, 0,
	0, 0, 655, 0, 2164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 158,
	158, 158, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 4499, 0, 158,
	0, 0, 0, 655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 157, 157, 0, 0, 0, 4544, 4545, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2883, 4556,
	0, 0, 4558, 158, 0, 0, 0, 0, 0, 0,
	490, 0, 0, 0, 2262, 0, 0, 0, 0, 0,
	0, 0, 0, 2892, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 0, 2873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 655, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 2345, 0, 0, 0, 0, 0, 160, 0,
	0, 2885, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 158,
	158, 0, 0, 0, 0, 0, 1083, 0, 0, 0,
	160, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 2262, 488, 0, 1151, 0, 0, 0,
	2858, 0, 160, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2870,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 1152, 0, 0, 0,
	0, 1081, 0, 0, 0, 0, 1081, 1618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 488,
	159, 158, 2859, 2861, 0, 0, 2864, 158, 158, 2869,
	0, 2874, 2871, 2872, 158, 2875, 2868, 0, 2878, 2877,
	2879, 0, 2880, 2881, 2882, 0, 157, 2884, 2886, 2887,
	2889, 2890, 2891, 0, 0, 0, 2862, 2893, 2047, 0,
	0, 0, 0, 0, 0, 0, 2895, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 1714, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 654, 0, 1714, 551, 0, 0,
	1748, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 0, 0, 0, 0, 0, 0, 0,
	2857, 0, 0, 0, 0, 0, 2619, 2620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	578, 589, 571, 0, 0, 0, 0, 0, 654, 157,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 2098,
	0, 0, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2120, 0, 0,
	0, 0, 0, 0, 1082, 1082, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 0, 2227, 0, 0,
	0, 0, 0, 2227, 2227, 2227, 2227, 2227, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 159,
	1657, 2227, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 569, 572,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 0, 0, 4415, 0, 0, 0, 0, 158, 0,
	655, 2168, 0, 0, 0, 581, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 159, 0, 588, 0, 157, 0, 0,
	157, 2840, 1751, 2168, 1082, 2168, 0, 0, 2304, 0,
	0, 0, 0, 0, 0, 2305, 0, 0, 0, 0,
	2168, 2168, 0, 0, 0, 0, 0, 573, 0, 1644,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 655, 158, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1083, 1083, 0, 1081, 0, 159, 2262, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 157, 0, 0, 0,
	2168, 0, 0, 1150, 574, 575, 582, 2114, 586, 587,
	590, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 0, 0, 0, 0, 3037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3073, 0, 0,
	0, 0, 0, 0, 0, 0, 3084, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111,
	0, 0, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121,
	3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131,
	3132, 3133, 3134, 3135, 3136, 0, 3150, 3151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 158, 0, 0, 158, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2227, 1751, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 157, 697, 0, 0, 0, 0, 0,
	2227, 0, 0, 0, 0, 0, 0, 0, 1671, 1674,
	1675, 1676, 1677, 1678, 1679, 0, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 0,
	1659, 1660, 1661, 1641, 1640, 1672, 1642, 1645, 1639, 1643,
	1638, 158, 0, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 1082, 0, 157, 0, 0,
	0, 0, 0, 0, 160, 0, 3289, 3290, 3291, 0,
	3295, 3296, 3297, 3298, 3299, 0, 0, 3302, 3303, 3304,
	3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314,
	3315, 3316, 3317, 3318, 0, 3320, 3321, 3322, 3323, 3324,
	3325, 0, 3328, 3329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2164, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 1673, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 1662, 0, 160, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	160, 160, 160, 160, 0, 160, 0, 2565, 0, 0,
	0, 488, 2262, 0, 0, 0, 0, 0, 0, 159,
	0, 2577, 0, 158, 0, 0, 2577, 0, 0, 158,
	0, 0, 157, 157, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 159, 0, 0, 0, 0, 2577,
	0, 0, 2577, 0, 0, 1753, 0, 0, 0, 488,
	488, 488, 488, 0, 0, 3497, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 159, 159, 159, 159, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3536, 3537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2708, 0, 0,
	0, 3276, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2730, 0, 0, 1081, 1081, 0,
	160, 160, 0, 2168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 160, 160, 160, 160, 0, 0, 654, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 159, 0, 0, 0,
	0, 0, 2165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 158, 160, 159, 159, 159,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 159, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 3691, 0, 3693, 0, 0, 0, 0, 0, 3699,
	3700, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 158, 158,
	0, 159, 0, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 2261, 0, 0, 0, 0, 1081, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 490, 490,
	490, 490, 0, 0, 0, 0, 490, 490, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 490, 0, 158, 490, 0, 0, 0,
	0, 160, 160, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 0, 0, 2959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2967, 2971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2990, 0, 0, 0, 0, 159, 159, 159, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2261, 0, 0, 1152, 3838, 0, 0, 0, 0,
	0, 0, 2577, 0, 0, 0, 0, 0, 3016, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	160, 160, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2168, 2168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3276, 0, 0, 2164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 1749, 0, 159, 159, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3160, 0, 0,
	0, 2688, 0, 0, 0, 3160, 3160, 3160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2168,
	0, 0, 0, 0, 0, 1388, 0, 2637, 0, 0,
	0, 0, 0, 2661, 0, 0, 0, 0, 0, 654,
	0, 0, 2168, 0, 0, 0, 0, 0, 654, 157,
	0, 0, 0, 0, 0, 1082, 0, 0, 0, 0,
	0, 3928, 0, 0, 158, 2636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3241, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1081, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 2168, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 2627, 2626, 2639, 2646, 2625, 2638, 2629,
	0, 0, 2662, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 2671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2649, 2647, 2642, 160, 0, 0, 2644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2660, 2682,
	2633, 2632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2628, 0,
	0, 160, 0, 0, 0, 0, 3401, 3402, 3403, 0,
	159, 0, 0, 0, 2634, 2635, 0, 0, 2652, 0,
	2643, 2645, 2648, 2650, 0, 3160, 3160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 3440, 0, 0, 0, 4090,
	0, 4092, 4093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	0, 2678, 0, 0, 655, 158, 159, 0, 0, 0,
	0, 3276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2686, 0, 160, 3483,
	0, 0, 2708, 0, 0, 3489, 0, 2668, 0, 0,
	0, 0, 0, 0, 0, 2708, 0, 2708, 0, 0,
	0, 3509, 0, 0, 0, 0, 0, 0, 2708, 0,
	2708, 3518, 2708, 2708, 2708, 2708, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3160, 0, 0, 0, 0, 0, 3592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2261, 0, 3608, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 2654, 4270, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 0, 490, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 2631, 0, 0, 0, 4246,
	0, 0, 0, 0, 0, 1082, 0, 0, 1081, 0,
	0, 2168, 0, 0, 0, 0, 2708, 0, 157, 0,
	4239, 160, 0, 4571, 4574, 4570, 160, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2655, 2656, 0, 0, 2659,
	0, 0, 2664, 0, 2669, 2666, 2667, 0, 2670, 2663,
	0, 2673, 2672, 2674, 0, 2675, 2676, 2677, 0, 0,
	2679, 2680, 2681, 2683, 2684, 2685, 0, 0, 0, 2657,
	2687, 0, 0, 0, 0, 0, 0, 0, 0, 2651,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 159, 0, 0, 159, 0, 1753, 49, 90, 56,
	55, 58, 0, 0, 160, 0, 96, 0, 0, 0,
	0, 0, 4240, 0, 0, 0, 0, 0, 0, 0,
	488, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 2971, 0, 160, 490, 57, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 2653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 69, 70, 0, 4242, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 4251, 4243, 4244, 4245, 4249,
	4250, 4247, 0, 4248, 0, 4252, 0, 0, 490, 0,
	78, 0, 79, 0, 490, 0, 0, 0, 0, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 3276, 0, 0, 0, 0, 0, 0, 2165, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 3873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 160, 0, 0, 0,
	2168, 0, 160, 0, 0, 0, 0, 0, 4253, 4241,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 71, 0, 0,
	0, 4153, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	2261, 0, 0, 0, 0, 0, 0, 0, 1081, 0,
	0, 159, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 4246, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4239, 0, 0, 0, 0,
	4649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3160, 0, 0, 3160, 0, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 3276, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 59, 61,
	0, 96, 0, 0, 87, 0, 0, 4240, 160, 0,
	0, 4020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 4027, 57, 1658, 0, 0, 160, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2168, 0, 0, 0, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 160, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4242, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	4251, 4243, 4244, 4245, 4249, 4250, 4247, 0, 4248, 0,
	4252, 0, 0, 0, 0, 78, 0, 79, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 159, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 488, 488, 488, 488,
	0, 0, 0, 0, 488, 488, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	488, 488, 0, 159, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4164, 0, 0,
	0, 0, 0, 4253, 4241, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 1671,
	1674, 1675, 1676, 1677, 1678, 1679, 3160, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	0, 1659, 1660, 1661, 1641, 1640, 1672, 1642, 1645, 1639,
	1643, 1638, 0, 0, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1081, 0,
	0, 0, 0, 0, 0, 0, 3160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 445, 0, 0, 0, 2168, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 59, 61, 0, 0, 160, 0, 87,
	258, 244, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 1662, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	4164, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 85, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 1486, 1485,
	1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487,
	0, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 2168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 2168,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	488, 301, 1081, 0, 0, 0, 0, 0, 0, 0,
	488, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 2168, 0, 0, 245, 488, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	0, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 482, 220, 308, 447, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 452, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 159, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 488, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 488, 0, 488, 0, 488, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	488, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 488, 196, 0, 159, 202, 0,
	203, 205, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 488, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 159, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 4333,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 0,
	0, 0, 488, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 691, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 0,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 2225,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 695,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 2432,
	1046, 89, 0, 0, 0, 0, 2434, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	2433, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 0,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 2332, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 2225,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 2329, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 2225,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 42, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 0,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1537, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1535, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 2096, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 0,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 0,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 1118, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 0,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 1118, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 0,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 4488, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 727, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 1118, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 0,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 2335, 2336, 2337, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 1824, 2003, 0, 3664, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 172, 474, 190,
	3665, 313, 1979, 493, 3666, 422, 338, 496, 495, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 89, 0, 691, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1917, 2001, 1828,
	494, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 3668, 1854, 301, 191, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 177, 198, 312, 1969, 1810,
	1827, 245, 2167, 391, 1922, 464, 492, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 180, 405, 404, 1842, 292,
	1956, 181, 170, 384, 182, 302, 204, 1981, 482, 220,
	308, 447, 491, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1952, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 188,
	189, 174, 179, 1931, 2027, 1844, 242, 164, 1768, 1769,
	1770, 165, 1874, 1875, 167, 168, 1985, 1984, 1983, 1986,
	169, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 3667, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 172, 474, 190,
	2014, 313, 1979, 493, 472, 422, 338, 496, 495, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1917, 2001, 1828,
	494, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 3179,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 191, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 177, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 2264, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 180, 405, 404, 1842, 292,
	1956, 181, 170, 384, 182, 302, 204, 1981, 482, 220,
	308, 447, 2263, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1952, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 188,
	189, 174, 179, 1931, 2027, 1844, 242, 164, 1768, 1769,
	1770, 165, 1874, 1875, 167, 168, 1985, 1984, 1983, 1986,
	169, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 172, 474, 190,
	2014, 313, 1979, 493, 472, 422, 338, 496, 495, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1917, 2001, 1828,
	494, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 191, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 177, 198, 312, 1969, 1810,
	1827, 245, 2167, 391, 1922, 464, 492, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 180, 405, 404, 1842, 292,
	1956, 181, 170, 384, 182, 302, 204, 1981, 482, 220,
	308, 447, 491, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1952, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 188,
	189, 174, 179, 1931, 2027, 1844, 242, 164, 1768, 1769,
	1770, 165, 1874, 1875, 167, 168, 1985, 1984, 1983, 1986,
	169, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 172, 474, 190,
	2014, 313, 1979, 493, 472, 422, 338, 496, 495, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1917, 2001, 1828,
	494, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 2258,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 191, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 177, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 2264, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 180, 405, 404, 1842, 292,
	1956, 181, 170, 384, 182, 302, 204, 1981, 482, 220,
	308, 447, 2263, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1952, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 188,
	189, 174, 179, 1931, 2027, 1844, 242, 164, 1768, 1769,
	1770, 165, 1874, 1875, 167, 168, 1985, 1984, 1983, 1986,
	169, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 172, 474, 190,
	2014, 313, 1979, 493, 472, 422, 338, 496, 495, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1917, 2001, 1828,
	494, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 191, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 177, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 2264, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 180, 405, 404, 1842, 292,
	1956, 181, 170, 384, 182, 302, 204, 1981, 482, 220,
	308, 447, 2263, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1952, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 188,
	189, 174, 179, 1931, 2027, 1844, 242, 164, 1768, 1769,
	1770, 165, 1874, 1875, 167, 168, 1985, 1984, 1983, 1986,
	169, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 897, 1039, 0, 0, 445, 1106, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	1139, 313, 0, 493, 472, 422, 338, 496, 495, 939,
	0, 1113, 1126, 924, 982, 871, 969, 1045, 905, 974,
	1046, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1121, 1135, 1102,
	494, 934, 979, 1058, 850, 1118, 0, 855, 1090, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 865, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 1128, 1029, 922, 301, 191, 1035, 920,
	1105, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 177, 198, 312, 1014, 886,
	899, 245, 3278, 391, 975, 464, 2348, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 1124,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 2347, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 460,
	461, 246, 1091, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 1096, 0, 1098, 1094,
	1097, 1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092, 192,
	193, 1133, 1134, 194, 944, 1036, 858, 0, 1012, 188,
	189, 174, 179, 984, 1055, 1104, 242, 164, 1087, 1088,
	1089, 165, 1108, 1109, 167, 168, 1131, 1130, 1129, 1132,
	169, 1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112,
	1119, 1120, 1127, 1122, 1123, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1116, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 172, 474, 190,
	2014, 313, 1979, 493, 472, 422, 338, 496, 495, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1917, 2001, 1828,
	494, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 2841,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 191, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 177, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 492, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 180, 405, 404, 1842, 292,
	1956, 181, 170, 384, 182, 302, 204, 1981, 482, 220,
	308, 447, 491, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1952, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 188,
	189, 174, 179, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 897, 1039, 0, 0, 445, 1106, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	1139, 313, 0, 493, 472, 422, 338, 496, 495, 939,
	0, 1113, 1126, 924, 982, 871, 969, 1045, 905, 974,
	1046, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1121, 1135, 1102,
	494, 934, 979, 1058, 850, 1118, 0, 855, 1090, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 865, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 1128, 1029, 922, 301, 191, 1035, 920,
	1105, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 177, 198, 312, 1014, 886,
	899, 245, 0, 391, 975, 464, 2348, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 1124,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 2347, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 460,
	461, 246, 1091, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 1096, 0, 1098, 1094,
	1097, 1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092, 192,
	193, 1133, 1134, 194, 944, 1036, 858, 0, 1012, 188,
	189, 174, 179, 984, 1055, 1104, 242, 164, 1087, 1088,
	1089, 165, 1108, 1109, 167, 168, 1131, 1130, 1129, 1132,
	169, 1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112,
	1119, 1120, 1127, 1122, 1123, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1116, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 172, 474, 190,
	2014, 313, 1979, 493, 472, 422, 338, 496, 495, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1917, 2001, 1828,
	494, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 191, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 177, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 492, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 180, 405, 404, 1842, 292,
	1956, 181, 170, 384, 182, 302, 204, 1981, 482, 220,
	308, 447, 491, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1952, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 188,
	189, 174, 179, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 897, 1039, 0, 0, 445, 1106, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	1139, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 1113, 1126, 924, 982, 871, 969, 1045, 905, 974,
	1046, 0, 0, 0, 0, 0, 0, 553, 0, 1449,
	0, 0, 1450, 0, 0, 171, 0, 1121, 1135, 1102,
	0, 934, 979, 1058, 850, 1118, 0, 855, 1090, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 865, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 1128, 1029, 922, 301, 191, 1035, 920,
	1105, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 177, 198, 312, 1014, 886,
	899, 245, 0, 391, 975, 464, 1085, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 1124,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 1084, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 460,
	461, 246, 1091, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 1096, 0, 1098, 1094,
	1097, 1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092, 192,
	193, 1133, 1134, 194, 944, 1036, 858, 0, 1012, 188,
	189, 174, 179, 984, 1055, 1104, 242, 164, 1087, 1088,
	1089, 165, 1108, 1109, 167, 168, 1131, 1130, 1129, 1132,
	169, 1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112,
	1119, 1120, 1127, 1122, 1123, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1116, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 1106, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	1139, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 1113, 1126, 924, 982, 871, 969, 1045, 905, 974,
	1046, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1121, 1135, 1102,
	0, 934, 979, 1058, 850, 1118, 0, 855, 1090, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 865, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 1128, 1029, 922, 301, 191, 1035, 920,
	1105, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 177, 198, 312, 1014, 886,
	899, 245, 0, 391, 975, 464, 1085, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 1124,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 1084, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 460,
	461, 246, 1091, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 1096, 0, 1098, 1094,
	1097, 1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092, 192,
	193, 1133, 1134, 194, 944, 1036, 858, 0, 1012, 188,
	189, 174, 179, 984, 1055, 1104, 242, 164, 1087, 1088,
	1089, 165, 1108, 1109, 167, 168, 1131, 1130, 1129, 1132,
	169, 1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112,
	1119, 1120, 1127, 1122, 1123, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1116, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 1106, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	1139, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 1113, 1126, 924, 982, 871, 969, 1045, 905, 974,
	1046, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1121, 1135, 1102,
	0, 934, 979, 1058, 850, 1118, 0, 855, 1090, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 865, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 1128, 1029, 922, 301, 191, 1035, 920,
	1105, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 177, 198, 312, 1014, 886,
	899, 245, 0, 391, 975, 464, 1085, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 1124,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 1084, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 460,
	461, 246, 1091, 1048, 211, 1079, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 1075, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 1080, 1078, 1069, 1070, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 1096, 0, 1098, 1094,
	1097, 1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092, 192,
	193, 1133, 1134, 194, 944, 1036, 858, 0, 1012, 188,
	189, 174, 179, 984, 1055, 1104, 242, 164, 1087, 1088,
	1089, 165, 1108, 1109, 167, 168, 1131, 1130, 1129, 1132,
	169, 1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112,
	1119, 1120, 1127, 1122, 1123, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1116, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 1076, 1077, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 1106, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	1139, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 1113, 1126, 924, 982, 871, 969, 1045, 905, 974,
	1046, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1121, 1135, 1102,
	0, 934, 979, 1058, 850, 1118, 0, 855, 1090, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 865, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 1128, 1029, 922, 301, 191, 1035, 920,
	1105, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 177, 198, 312, 1014, 886,
	899, 245, 0, 391, 975, 464, 1085, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 1124,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 1084, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 1614, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 460,
	461, 246, 1091, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 1096, 0, 1098, 1094,
	1097, 1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092, 192,
	193, 1133, 1134, 194, 944, 1036, 858, 0, 1012, 188,
	189, 174, 179, 984, 1055, 1104, 242, 164, 1087, 1088,
	1089, 165, 1108, 1109, 167, 168, 1131, 1130, 1129, 1132,
	169, 1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112,
	1119, 1120, 1127, 1122, 1123, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1116, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 1106, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	1139, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 1113, 1126, 924, 982, 871, 969, 1045, 905, 974,
	1046, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1121, 1135, 1102,
	0, 934, 979, 1058, 850, 1118, 0, 855, 1090, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 865, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 1128, 1029, 922, 301, 191, 1035, 920,
	1105, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 177, 198, 312, 1014, 886,
	899, 245, 0, 391, 975, 464, 1085, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 1124,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 1084, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 1066, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 460,
	461, 246, 1091, 1048, 211, 1079, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 1075, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 1080, 1078, 1069, 1070, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 1096, 0, 1098, 1094,
	1097, 1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092, 192,
	193, 1133, 1134, 194, 944, 1036, 858, 0, 1012, 188,
	189, 174, 179, 984, 1055, 1104, 242, 164, 1087, 1088,
	1089, 165, 1108, 1109, 167, 168, 1131, 1130, 1129, 1132,
	169, 1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112,
	1119, 1120, 1127, 1122, 1123, 0, 940, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1116, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 1076, 1077, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 3139, 3144, 0, 3147,
	3149, 3148, 0, 0, 0, 3141, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 3142, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 3143, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 3931, 3144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 0, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 3877,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 0, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 3192,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 0, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 0, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 2310, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 0, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 4047, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 0, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 4335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 4338, 4339, 4340, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 0, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 3144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 0, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 584, 445, 578, 589, 571, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 635, 0,
	0, 0, 0, 0, 259, 0, 0, 579, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 632, 633, 0, 727, 0, 728, 730,
	731, 732, 733, 0, 0, 0, 729, 2302, 3360, 3361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 3355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 0, 570, 569, 572, 0, 0, 0, 339, 0,
	0, 0, 577, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	581, 0, 0, 198, 312, 585, 0, 0, 245, 0,
	391, 2299, 464, 0, 278, 0, 390, 314, 457, 0,
	588, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 573, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 576, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 638, 407, 452, 222, 425, 574,
	575, 582, 583, 586, 587, 590, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 1657, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 2300,
	2301, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 3372, 1061, 0, 3362,
	3363, 3365, 3373, 3374, 3364, 3366, 3367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 3368,
	3369, 3370, 3371, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 1658,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 580, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 0, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 584, 445, 578, 589,
	571, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 563, 0, 0, 0, 0, 0, 259, 0, 0,
	579, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 313, 0, 0, 472, 422, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 375, 283, 0, 0, 1671, 1674, 1675, 1676, 1677,
	1678, 1679, 0, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 0, 1659, 1660, 1661,
	1641, 1640, 1672, 1642, 1645, 1639, 1643, 1638, 0, 0,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 0,
	0, 0, 0, 0, 0, 570, 569, 572, 0, 0,
	0, 339, 0, 0, 0, 577, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 195, 0,
	0, 0, 352, 581, 0, 0, 198, 312, 585, 0,
	0, 245, 0, 391, 0, 464, 0, 278, 0, 390,
	314, 457, 0, 588, 463, 0, 439, 473, 478, 271,
	0, 234, 419, 261, 254, 0, 0, 0, 284, 374,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 418,
	454, 200, 333, 455, 477, 573, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 360, 224, 0, 0, 1673, 0,
	467, 0, 257, 0, 469, 0, 405, 404, 576, 292,
	0, 1662, 0, 384, 0, 302, 204, 0, 482, 220,
	308, 447, 0, 277, 351, 0, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 0, 566, 407, 452,
	222, 425, 574, 575, 582, 583, 586, 587, 590, 321,
	266, 270, 286, 297, 0, 388, 426, 470, 0, 217,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 0, 216, 237, 427, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 460,
	461, 246, 0, 0, 211, 0, 0, 348, 355, 347,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 0, 424, 319, 0, 206, 0, 423, 0,
	0, 436, 226, 0, 0, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 0, 0,
	359, 392, 233, 466, 420, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 440, 441, 442, 444,
	448, 449, 450, 0, 0, 0, 376, 248, 0, 199,
	212, 311, 0, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 580, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 445,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 2451, 2455, 0, 172,
	474, 190, 0, 313, 0, 493, 472, 422, 338, 496,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 2454, 301, 191,
	0, 0, 0, 2447, 0, 2448, 2450, 2449, 310, 1160,
	195, 0, 2445, 2453, 352, 0, 0, 177, 198, 312,
	0, 0, 0, 245, 1154, 391, 0, 464, 492, 278,
	0, 390, 314, 457, 0, 0, 463, 0, 439, 473,
	478, 271, 0, 234, 419, 261, 254, 0, 0, 0,
	284, 374, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 418, 454, 200, 333, 455, 477, 166, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 360, 224, 0, 0,
	0, 0, 467, 0, 257, 0, 469, 180, 405, 404,
	0, 292, 0, 181, 170, 384, 182, 302, 204, 0,
	482, 220, 308, 447, 491, 277, 351, 0, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 0, 381,
	407, 452, 222, 425, 173, 176, 185, 397, 186, 187,
	0, 321, 266, 270, 286, 297, 0, 388, 426, 470,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 0, 216, 237, 427, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 460, 461, 246, 0, 0, 211, 0, 0, 348,
	355, 347, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 0, 424, 319, 0, 206, 0,
	423, 0, 0, 436, 226, 0, 0, 451, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	0, 0, 359, 392, 233, 466, 420, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 317, 336, 329, 365, 332,
	0, 0, 0, 367, 386, 408, 414, 415, 440, 441,
	442, 444, 448, 449, 450, 0, 0, 0, 376, 248,
	0, 199, 212, 311, 0, 383, 276, 335, 412, 337,
	298, 247, 479, 340, 382, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 458, 459, 475,
	476, 445, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 356, 0, 0, 0, 0, 1473, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 474, 190, 0, 313, 0, 493, 472, 422,
	338, 496, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1475, 1474, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 494, 0, 1469, 1470, 1468, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 1471, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 375, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 195, 0, 0, 0, 352, 0, 0, 177,
	198, 312, 0, 0, 0, 245, 0, 391, 0, 464,
	492, 278, 0, 390, 314, 457, 0, 0, 463, 0,
	439, 473, 478, 271, 0, 234, 419, 261, 254, 0,
	0, 0, 284, 374, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 418, 454, 200, 333, 455, 477, 166,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 360, 224,
	0, 0, 0, 0, 467, 0, 257, 0, 469, 180,
	405, 404, 0, 292, 0, 181, 170, 384, 182, 302,
	204, 0, 482, 220, 308, 447, 491, 277, 351, 0,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	0, 381, 407, 452, 222, 425, 173, 176, 185, 397,
	186, 187, 0, 321, 266, 270, 286, 297, 0, 388,
	426, 470, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 0, 216, 237,
	427, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 460, 461, 246, 0, 0, 211, 0,
	0, 348, 355, 347, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 0, 424, 319, 0,
	206, 0, 423, 0, 0, 436, 226, 0, 0, 451,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 0, 0, 359, 392, 233, 466, 420, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 317, 336, 329,
	365, 332, 0, 0, 0, 367, 386, 408, 414, 415,
	440, 441, 442, 444, 448, 449, 450, 0, 0, 0,
	376, 248, 0, 199, 212, 311, 0, 383, 276, 335,
	412, 337, 298, 247, 479, 340, 382, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 458,
	459, 475, 476, 445, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 474, 190, 0, 313, 0, 493,
	472, 422, 338, 496, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 1160, 195, 0, 1156, 0, 352, 0,
	0, 177, 198, 312, 0, 0, 0, 245, 1154, 391,
	0, 464, 492, 278, 0, 390, 314, 457, 0, 0,
	463, 0, 439, 473, 478, 271, 0, 234, 419, 261,
	254, 0, 0, 0, 284, 374, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 418, 454, 200, 333, 455,
	477, 166, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	360, 224, 0, 0, 0, 0, 467, 0, 257, 0,
	469, 180, 405, 404, 0, 292, 0, 181, 170, 384,
	182, 302, 204, 0, 482, 220, 308, 447, 491, 277,
	351, 0, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 0, 381, 407, 452, 222, 425, 173, 176,
	185, 397, 186, 187, 0, 321, 266, 270, 286, 297,
	0, 388, 426, 470, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 0,
	216, 237, 427, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 460, 461, 246, 0, 0,
	211, 0, 0, 348, 355, 347, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 0, 424,
	319, 0, 206, 0, 423, 0, 0, 436, 226, 0,
	0, 451, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 0, 0, 359, 392, 233, 466,
	420, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 317,
	336, 329, 365, 332, 0, 0, 0, 367, 386, 408,
	414, 415, 440, 441, 442, 444, 448, 449, 450, 0,
	0, 0, 376, 248, 0, 199, 212, 311, 0, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 0, 196, 42, 445, 202,
	0, 203, 205, 0, 201, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 474,
	190, 88, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 96, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 482,
	220, 308, 447, 161, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 109, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 669, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 474, 190, 0, 313, 0, 493, 472, 422, 338,
	496, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	3512, 195, 0, 0, 3511, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 492,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 482, 220, 308, 447, 491, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 452, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 474, 190, 0, 313, 0, 493, 472,
	422, 338, 496, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3479, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 1160, 195, 0, 0, 2453, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 492, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 491, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 474, 190, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 166, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 482, 220, 308, 447, 161,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 452, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3189, 676, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	669, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 474, 190, 0,
	313, 0, 493, 472, 422, 338, 496, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2900, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 1160, 195, 0, 0,
	2453, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 492, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 482, 220, 308,
	447, 491, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 452, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 440, 441, 442, 444, 448,
	449, 450, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 474,
	190, 0, 313, 0, 493, 472, 422, 338, 496, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1475, 1474, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 2257, 391, 0, 464, 492, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 482,
	220, 308, 447, 491, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 474, 190, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 482, 220, 308, 447, 161, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 452, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 676,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 669, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 474, 190, 0, 313, 0, 493, 472,
	422, 338, 496, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3470, 0, 0, 0,
	0, 0, 3472, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 492, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 491, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 474, 190, 0, 313, 0,
	493, 472, 422, 338, 496, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 2038, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 492, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 166, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 482, 220, 308, 447, 491,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 452, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 474, 190, 0,
	313, 0, 493, 472, 422, 338, 496, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2036, 2038, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 492, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 482, 220, 308,
	447, 491, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 452, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 440, 441, 442, 444, 448,
	449, 450, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 474,
	190, 0, 313, 0, 493, 472, 422, 338, 496, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 1160, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 492, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 482,
	220, 308, 447, 491, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 474, 190, 0, 313, 0, 493, 472, 422, 338,
	496, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3333, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 492,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 482, 220, 308, 447, 491, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 452, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 474, 190, 0, 313, 0, 493, 472,
	422, 338, 496, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 492, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 491, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 474, 190, 0, 313, 0,
	493, 472, 422, 338, 496, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3472, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 492, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 166, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 482, 220, 308, 447, 491,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 452, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 474, 190, 0,
	313, 0, 493, 472, 422, 338, 496, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 492, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 482, 220, 308,
	447, 491, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 452, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 440, 441, 442, 444, 448,
	449, 450, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 474,
	190, 0, 313, 0, 493, 472, 422, 338, 496, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 492, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 482,
	220, 308, 447, 491, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 474, 190, 0, 313, 0, 493, 472, 422, 338,
	496, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1197, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 492,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 482, 220, 308, 447, 491, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 452, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 474, 190, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 543, 540, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 161, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 474, 190, 0, 313, 0,
	493, 472, 422, 338, 496, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 492, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 166, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 482, 220, 308, 447, 491,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 452, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 474, 190, 0,
	313, 0, 0, 472, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 2525, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 482, 220, 308,
	447, 161, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 452, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 440, 441, 442, 444, 448,
	449, 450, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 474,
	190, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 2411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 482,
	220, 308, 447, 161, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	0, 196, 0, 0, 202, 0, 203, 205, 445, 201,
	0, 0, 1603, 0, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 474,
	190, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 482,
	220, 308, 447, 161, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 474, 190, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 155, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 482, 220, 308, 447, 161, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 452, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 474, 190, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 161, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 1158, 728, 730, 731, 732, 733,
	0, 0, 0, 729, 2302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 724, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 725, 726, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 0, 0,
	313, 0, 0, 472, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 0, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 482, 220, 308,
	447, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 452, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 440, 441, 442, 444, 448,
	449, 450, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 650, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 482,
	220, 308, 447, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	452, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 4433, 0, 0, 0, 0, 0,
	259, 4431, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 0, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 0, 405,
	404, 0, 292, 0, 4432, 0, 384, 0, 302, 204,
	0, 482, 220, 308, 447, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 452, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2972,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 2973, 2974, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	0, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 482, 220, 308, 447, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 452, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 1620, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 2455, 0, 0, 474, 0, 0,
	313, 0, 0, 472, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2909, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 2454, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 0, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 0, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 482, 220, 308,
	447, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 452, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 440, 441, 442, 444, 448,
	449, 450, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 0, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 482,
	220, 308, 447, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	452, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 0, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 482, 220, 308, 447, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 452, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 3526, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	0, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 482, 220, 308, 447, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 452, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 3524, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	3522, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 0, 0,
	313, 0, 0, 472, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 0, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 0, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 482, 220, 308,
	447, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 452, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 440, 441, 442, 444, 448,
	449, 450, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 3520, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 0, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 482,
	220, 308, 447, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	452, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 3515, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 0, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 482, 220, 308, 447, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 452, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 3502, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	0, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 482, 220, 308, 447, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 452, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 3500, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 0, 0,
	313, 0, 0, 472, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 3439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 0, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 0, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 482, 220, 308,
	447, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 452, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 440, 441, 442, 444, 448,
	449, 450, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3430, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 0, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 482,
	220, 308, 447, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	452, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 0, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 482, 220, 308, 447, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 452, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 2576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	0, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 482, 220, 308, 447, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 452, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 2729, 2728, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 0, 0,
	313, 0, 0, 472, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 0, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 0, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 482, 220, 308,
	447, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 452, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 440, 441, 442, 444, 448,
	449, 450, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 0, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 482,
	220, 308, 447, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	452, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 440, 441, 442,
	444, 448, 449, 450, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 0, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 482, 220, 308, 447, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 452, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 440,
	441, 442, 444, 448, 449, 450, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	0, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 482, 220, 308, 447, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 452, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 440, 441, 442, 444, 448, 449, 450, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 440, 441, 442, 444, 448, 449, 450,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 42, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 71, 0, 0, 4246, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4239, 0,
	0, 0, 0, 4643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4239, 0, 0, 0, 0, 4637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 71, 57, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 62, 92, 91, 89, 0, 0, 0, 57,
	0, 4246, 71, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 4239, 4242, 0, 0, 0, 4629, 0, 0,
	0, 0, 0, 4251, 4243, 4244, 4245, 4249, 4250, 4247,
	0, 4248, 0, 4252, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 89, 0, 0, 0, 0, 0, 4246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 69, 70, 0, 4242, 0, 0,
	4239, 0, 60, 0, 0, 4602, 0, 4251, 4243, 4244,
	4245, 4249, 4250, 4247, 0, 4248, 0, 4252, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4240, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 4253, 4241, 42, 66,
	67, 73, 0, 74, 0, 0, 0, 49, 90, 56,
	55, 58, 71, 0, 0, 0, 96, 0, 93, 0,
	0, 47, 4240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	4253, 4241, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 89, 69, 70, 0, 4242, 0, 4246,
	0, 0, 0, 0, 0, 0, 0, 4251, 4243, 4244,
	4245, 4249, 4250, 4247, 0, 4248, 0, 4252, 0, 0,
	4239, 0, 78, 0, 79, 4584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 69, 70, 0, 4242, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 4251, 4243, 4244, 4245, 4249,
	4250, 4247, 0, 4248, 0, 4252, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 84, 0, 49, 90, 56,
	55, 58, 71, 0, 60, 0, 96, 0, 93, 0,
	0, 47, 4240, 0, 0, 0, 59, 61, 0, 0,
	4253, 4241, 87, 66, 67, 73, 0, 74, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 89, 0, 0, 0, 0, 0, 4246,
	0, 0, 0, 0, 85, 0, 71, 0, 0, 0,
	59, 61, 93, 0, 0, 47, 87, 0, 4253, 4241,
	4239, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 4242, 0, 89, 85, 0,
	0, 0, 0, 4246, 0, 4251, 4243, 4244, 4245, 4249,
	4250, 4247, 0, 4248, 0, 4252, 0, 0, 0, 0,
	78, 0, 79, 0, 4239, 0, 0, 0, 0, 4580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 49, 90, 56,
	55, 58, 0, 0, 60, 0, 96, 0, 0, 0,
	0, 0, 4240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 42, 0, 0, 0, 87, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 71, 0, 0, 0,
	96, 0, 93, 0, 0, 47, 4240, 0, 4253, 4241,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 85, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 69, 70, 87, 4242, 0, 89, 0, 0,
	0, 0, 0, 4246, 0, 4251, 4243, 4244, 4245, 4249,
	4250, 4247, 4581, 4248, 0, 4252, 0, 0, 0, 0,
	78, 0, 79, 0, 4239, 0, 0, 0, 0, 4579,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 69, 70, 0, 4242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4251,
	4243, 4244, 4245, 4249, 4250, 4247, 0, 4248, 0, 4252,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 84,
	0, 49, 90, 56, 55, 58, 71, 0, 60, 0,
	96, 0, 93, 0, 0, 47, 4240, 0, 4253, 4241,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 59, 61,
	42, 0, 0, 0, 87, 0, 0, 89, 4576, 0,
	0, 0, 0, 4246, 71, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 4253, 4241, 4239, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 69, 70, 0, 4242,
	0, 4246, 0, 0, 0, 0, 0, 0, 0, 4251,
	4243, 4244, 4245, 4249, 4250, 4247, 0, 4248, 0, 4252,
	0, 0, 4239, 0, 78, 0, 79, 4568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 49, 90, 56, 55, 58, 0, 0, 60, 0,
	96, 0, 0, 0, 0, 0, 4240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 71, 0, 0, 0, 59, 61,
	93, 0, 0, 47, 87, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4240, 0, 0, 0, 0, 0,
	0, 0, 4253, 4241, 42, 66, 67, 73, 0, 74,
	0, 0, 62, 92, 91, 89, 85, 0, 71, 57,
	0, 4246, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 59, 61, 0, 0, 69, 70, 87, 4242,
	0, 0, 4239, 0, 0, 0, 0, 4565, 0, 4251,
	4243, 4244, 4245, 4249, 4250, 4247, 0, 4248, 0, 4252,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 89,
	0, 0, 0, 0, 0, 4246, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 69, 70, 4239, 4242, 60, 0,
	0, 4482, 0, 0, 0, 0, 0, 4251, 4243, 4244,
	4245, 4249, 4250, 4247, 0, 4248, 0, 4252, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4240, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 4253, 4241, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4240, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	4253, 4241, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 69, 70, 0, 4242, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 4251, 4243, 4244,
	4245, 4249, 4250, 4247, 0, 4248, 0, 4252, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 84, 69, 70,
	0, 4242, 93, 0, 0, 47, 60, 0, 0, 0,
	0, 4251, 4243, 4244, 4245, 4249, 4250, 4247, 0, 4248,
	0, 4252, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	71, 84, 0, 4246, 0, 0, 93, 0, 0, 47,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 61, 4239, 0, 0, 0, 87, 0,
	4253, 4241, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 4239, 0,
	59, 61, 0, 4474, 4253, 4241, 87, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4240, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	71, 57, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 62, 92,
	91, 89, 0, 0, 0, 57, 0, 4246, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 4239, 4242,
	59, 61, 0, 4472, 0, 0, 87, 0, 0, 4251,
	4243, 4244, 4245, 4249, 4250, 4247, 4479, 4248, 0, 4252,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 89,
	0, 0, 0, 0, 0, 4246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 84,
	69, 70, 0, 4242, 59, 61, 4239, 0, 60, 0,
	87, 4355, 0, 4251, 4243, 4244, 4245, 4249, 4250, 4247,
	0, 4248, 0, 4252, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4240, 0, 85, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 4253, 4241, 42, 66, 67, 73, 0, 74,
	0, 0, 0, 49, 90, 56, 55, 58, 71, 0,
	0, 0, 96, 0, 93, 0, 0, 47, 4240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 4253, 4241, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 89,
	69, 70, 0, 4242, 0, 4246, 0, 0, 0, 0,
	0, 0, 0, 4251, 4243, 4244, 4245, 4249, 4250, 4247,
	0, 4248, 0, 4252, 0, 0, 4239, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 69, 70,
	0, 4242, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 4251, 4243, 4244, 4245, 4249, 4250, 4247, 0, 4248,
	0, 4252, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 49, 90, 56, 55, 58, 0, 0,
	60, 0, 96, 0, 0, 0, 0, 0, 4240, 0,
	0, 0, 59, 61, 0, 0, 4253, 4241, 87, 66,
	67, 73, 0, 74, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 4253, 4241, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4242, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 4251, 4243, 4244, 4245, 4249, 4250, 4247, 0, 4248,
	0, 4252, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4253, 4241, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85,
}

var yyPact = [...]int{
	423, -1000, -506, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2940, -1000, 2940, 406, -1000, 449, -1000, 1300, 835,
	-1000, -1000, -1000, -1000, -1000, 572, 370, 57398, 1122, 54462,
	77162, -303, 5075, 76430, 153, -1000, 153, 408, 53730, 832,
	1003, 75698, 2754, 2158, 155, 5, 4, 234, 38355, 37612,
	305, 178, 207, 204, 163, 1305, -1000, 59594, 898, -1000,
	242, -1000, -1000, -1000, -1000, -1000, 45678, 3014, 3019, 3014,
	-1000, 2899, 2938, -1000, -1000, 2899, 2277, 2277, -1000, 59594,
	12865, -1000, -1000, -1000, -1000, -1000, 30115, -1000, 1283, -1000,
	58130, 40551, 2940, -1000, 1115, 1088, -136, 1035, 1035, 910,
	1035, 1035, -469, 1121, -1000, 838, 1626, -1000, -1000, -1000,
	-1000, 1620, 58130, 64718, 1036, 74234, 1036, 1036, 1036, 1036,
	1036, 1036, 1036, 1036, 52998, 58130, -1000, 1259, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 58130, 3002, 3001, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2585, 2584, 52266,
	577, 2823, 1640, 329, 1640, -1000, -1000, 1615, -1000, 946,
	944, 943, 940, 935, 938, 10, 1553, 1663, 2911, -1000,
	2549, 2899, 2899, 1553, -1000, 924, -1000, -1000, -1000, -1000,
	-1000, -1000, 1335, -1000, -1000, 1744, 1744, 559, 1084, 351,
	960, 337, 2874, 1607, 2820, 2819, 2176, 2802, 1005, 2801,
	2581, -1000, 1255, -1000, -1000, 41, -1000, 2154, 58130, -1000,
	-1000, 2038, 2037, 683, 2490, 1176, 2621, -1000, -1000, 651,
	710, 2574, 783, 2574, 2574, 2574, 365, 2574, 2574, 3,
	2574, 2574, 2574, 317, 2574, 339, 2574, 2574, 2574, 2574,
	2574, -1000, 2305, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 685, 2475, 2532, 2620, 201,
	-1000, -208, -1000, 2884, 892, -1000, -1000, -1000, 300, 1283,
	60326, 2523, -1000, 2549, -1000, -1000, 2547, 2549, -1000, 2091,
	1120, 1036, 701, -1000, 984, -1000, -1000, -1000, 2863, 2549,
	41286, -1000, -1000, 1595, -1000, 2549, 2549, 1283, 2897, 1283,
	1283, 2890, 2888, 1283, 2827, 27115, 17365, 2798, 1786, -1000,
	-1000, -1000, -1000, 1283, 3000, -1000, 39819, 1253, -1000, 17365,
	4716, 2549, 2549, -1000, 1182, 1248, -1000, 1138, 1242, -1000,
	-1000, 18115, 18115, 18115, 18115, 18115, 18115, 18115, -1000, -1000,
	-1000, -1000, -1000, -1000, 2253, 2252, 2251, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2549, 1250, 1249,
	-1000, 2549, 2549, 2549, 2549, 2549, -1000, 15865, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549,
	2549, 2549, 2549, 2549, 2549, 17365, 2549, 2549, 2549, 2549,
	2549, -1000, 2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549,
	2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549,
	2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549,
	2549, 2549, 2549, 2549, 2549, 2549, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2549, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2549, 2549, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2549, 1042, 1042, 56666, 2544, -43, 29365, -1000, -1000,
	-1000, -1000, 27865, 62522, 1487, -1000, -1000, -1000, -1000, 2797,
	-1000, -1000, 1247, 1242, 1182, 1174, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2940, 337, -1000, 2416, -1000, -1000,
	38033, 38033, 38033, 38033, 38033, 38033, 48606, -1000, -1000, -1000,
	2580, 2899, -1000, 74234, 58130, 905, 2152, 1700, 2151, 75698,
	75698, 1035, -1000, 745, 64718, 64718, -376, 1035, 826, 64718,
	792, 2541, 1082, 2539, 1080, 2280, 58130, 2860, 2618, 58130,
	2149, 2145, 75698, 75698, 64718, 64718, 75698, -1000, -1000, -1000,
	26365, -1000, 1333, 2536, 47874, 47142, 51534, 51534, -1000, -1000,
	-1000, 922, -1000, 1640, -1000, 6597, 17365, 1035, 1035, 58130,
	58130, 58130, 58130, 58130, -1000, 58130, -1000, -1000, 1640, -1000,
	-1000, 1640, 1640, 1640, 1553, 2998, 1553, -1000, -1000, -1000,
	1640, 76430, 76430, 17365, -1000, 18115, 63986, 1347, -1000, -1000,
	1640, -1000, 76430, 989, 989, 989, -1000, 2143, 541, -1000,
	-1000, -1000, -1000, -1000, 351, -1000, -1000, -1000, 2760, 2879,
	2877, 2140, 1005, 1005, -1000, 2260, 1005, 2513, -1000, 1606,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1005, 2874, 16615, 74234, -484, -1000, -1000, 2533,
	-1000, 466, -1000, -1000, 979, 2617, 979, 6807, 64718, 64718,
	64718, -1000, 2574, 74234, -1000, 2574, 2574, 2574, -20, 2574,
	2574, -1000, -1000, 2574, -1000, -1000, -1000, 2574, -1000, -1000,
	2574, -1000, -1000, -1000, 2574, 2574, -1000, 2574, 2574, -1000,
	-1000, -1000, -1000, -1000, 64718, 979, 428, 2525, 979, 64718,
	64718, 1078, 186, -66, 142, -1000, -1000, -1000, 283, 282,
	281, 278, -1000, -1000, -1000, -1000, 277, 271, -1000, -1000,
	58130, 58130, 942, -1000, 2523, 60326, 2873, 21865, 898, -1000,
	17365, 2835, -1000, 2835, -1000, -1000, -1000, 380, -1000, 58130,
	64718, 75698, 45678, 45678, 45678, 45678, -1000, 2645, 2636, -1000,
	2643, 2642, 2632, 509, 60326, -1000, 2863, 406, 2413, 2277,
	2277, 984, 41286, -1000, 2549, -1000, 60326, 1203, 1114, 1113,
	1112, 2760, -1000, -1000, -1000, -1000, -1000, 2174, 2113, 1998,
	12115, 18115, -1000, -1000, -1000, -1000, -1000, 3014, 3014, -1000,
	-1000, -1000, -1000, -1000, -1000, 1771, 3009, 1490, 2498, -1000,
	-1000, -1000, 2520, -1000, 1797, 1241, 1824, 1833, -1000, -1000,
	-1000, -1000, -1000, -1000, 12865, -1000, 58130, -1000, 17365, 17365,
	17365, 1841, -1000, 44946, -1000, -1000, -1000, 22615, 1488, 18115,
	1947, 1567, 18115, 18115, 18115, 18115, 18115, 18115, 18115, 18115,
	18115, 18115, 18115, 18115, 18115, 18115, 18115, 1386, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2139, -1000, 337, 35365,
	12115, 35365, 1011, 1011, 74234, 1334, 1334, 1334, 1334, 1334,
	1334, 9770, -1000, -1000, -1000, 2886, 33865, 35365, 2886, 2886,
	2886, 2886, 2886, 2395, 1594, 59594, 15865, 45678, 12115, 12115,
	12115, 2277, 17365, 17365, 12115, 18115, 12115, 15115, 14365, 19615,
	12115, 12115, 2886, 1641, 1594, 25615, 12115, -1000, 2277, -1000,
	-1000, -1000, -1000, 1937, -1000, -1000, -262, -262, -262, 515,
	12115, 12115, 12115, 12115, 2277, 2277, 12115, 12115, 12115, 12115,
	12115, 2277, 2277, 2277, 2277, 12115, 12115, 12115, 12115, 12115,
	12115, 12115, 12115, 12115, 12115, 12115, 12115, -1000, -1000, -1000,
	1862, 55926, 45678, 58130, 2425, 2394, -1000, -1000, 1231, 28615,
	2497, -1000, -96, -91, -43, -1000, -1000, 1310, -1000, -1000,
	-1000, -1000, 13615, -1000, -1000, -1000, 23365, 2899, -1000, 39087,
	-1000, 30, -1000, -1000, -1000, 2559, -1000, 2561, 132, 530,
	2561, 64, 63, 2561, 2561, 2561, -1000, -1000, -1000, -1000,
	78, -1000, -1000, -1000, -1000, -1000, 2578, 2577, -1000, 2559,
	2559, 2559, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2568, 520, 2560, 2560,
	2560, 2560, 2560, -1000, -1000, -1000, -1000, -1000, 1013, -1000,
	-1000, -1000, 17365, 2827, 2729, 2180, 2549, 1087, -470, 826,
	2835, 2854, 2835, 878, -1000, 1219, 2575, 75698, 906, 2466,
	-1000, 438, 2005, 1146, 55194, -1000, -1000, -1000, -1000, -1000,
	58130, 58130, 64718, 64718, 64718, 1136, -1000, 58130, 2515, -1000,
	-1000, -1000, -1000, -1000, 2461, -1000, 2005, -1000, -1000, 1215,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -443, -444, 58130, -1000, -1000, -1000, -1000,
	-1000, -1000, 2514, -1000, 2514, -1000, -1000, -1000, 2258, 1594,
	2138, 2137, 2874, -1000, -1000, -1000, -1000, 1599, -1000, -1000,
	-1000, -1000, 1640, 58130, 2874, -1000, -1000, -1000, 1594, 1204,
	2583, 2549, 2277, -1000, -1000, -1000, 149, -1000, 146, -1000,
	-1000, -1000, 2134, -1000, 18115, 2759, 2758, -1000, 2513, 2513,
	-1000, 2513, 1005, 58862, 2513, -1000, -1000, 2389, -1000, 218,
	2257, 58130, -1000, 60326, 39, -1000, -101, 72770, -1000, -1000,
	-1000, 979, 72770, -1000, 317, 251, -1000, 1075, -1000, 2386,
	-1000, -1000, -1000, -1000, 2574, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 72770, 364, 422, 72770, 2461,
	2994, 229, 2512, -1000, 1605, 1602, -1000, -1000, 126, -1000,
	-1000, -1000, -1000, 2910, -1000, 250, 250, 2256, 18115, -1000,
	2549, 2325, -1000, 1195, -1000, -1000, -1000, -1000, -1000, -1000,
	2549, -1000, -1000, -1000, -1000, 2795, 1487, 1487, 1487, 8242,
	438, 2615, 2573, 2614, 519, -1000, -1000, -1000, -1000, 2635,
	-1000, 2634, 2633, -1000, -1000, -1000, 2552, 60326, 45678, -1000,
	-1000, -1000, 2277, 74234, 1223, -1000, 60326, 2549, 2549, 2549,
	18115, 18115, 1481, -1000, 18115, 18115, 1480, -1000, 18115, 18115,
	1459, -1000, 2277, 2511, -1000, -1000, 1594, 1194, 4600, -1000,
	73502, 27, 2655, 27115, 27115, 17365, -1000, -1000, -1000, 23365,
	2902, -1000, 2663, 2661, 2988, -1000, -1000, -1000, 1488, 1669,
	1534, -1000, -1000, 1850, -1000, -1000, -1000, -1000, -1000, 1187,
	2549, -1000, -1000, -1000, -1000, -1000, 5247, -1000, -1000, -1000,
	-1000, 1947, 18115, 18115, 18115, 1204, 5247, 5125, 1863, 2976,
	1334, 1566, 1566, 1322, 1322, 1322, 1322, 1322, 1616, 1616,
	-1000, -1000, -1000, -1000, 2277, -1000, 2384, -1000, -1000, 2253,
	2252, 2251, -1000, -1000, -1000, -1000, 12115, -1000, -1000, -1000,
	-1000, -1000, 12115, 12115, 12115, 12115, 12115, 17365, -1000, 2384,
	2384, 2384, -1000, 1943, 1788, 2283, 4804, 2384, 1338, 2986,
	2384, 1328, 2985, 2384, 2301, 18115, 18115, 18115, 2384, 2384,
	12115, 1678, -1000, 17365, 2277, 1251, 2277, 1182, 1174, 2384,
	-1000, 2277, 2510, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2506, 2982, 2503, -1000, -1000, -1000,
	-1000, 2384, 2277, 2384, 2384, -158, -158, 2277, 2384, 2277,
	2384, 2384, -158, -158, -158, -158, 2384, 2384, 2384, 2384,
	2384, 2384, 2384, 2384, 2384, 2384, 2384, 2384, -1000, 2277,
	1418, 58130, -1000, 2462, 1418, 2393, 45678, -1000, -1000, 45678,
	76430, 24865, -1000, 27865, -43, -83, -1000, -1000, 2497, -1000,
	-1000, 1570, -1000, -1000, 2250, 1594, -1000, 1170, 2827, 6039,
	-1000, -1000, -1000, -1000, 2569, 44214, -1000, 2719, 1209, 1209,
	1209, 63254, 74966, 2707, -1000, -1000, 208, 14, -1000, -1000,
	-1000, 2008, -1000, 325, 483, 2561, -1000, -1000, -1000, 2561,
	2561, -1000, 2561, 2561, -1000, -1000, -1000, -1000, 2249, 2249,
	-1000, -1000, -1000, -1000, 2004, -1000, 2568, -1000, 2003, -1000,
	-1000, -1000, -1000, 208, 208, 208, 208, 208, -1000, 1992,
	-1000, 2613, 74234, 2871, 58130, -377, -1000, -1000, -1000, 2965,
	-1000, -1000, 74234, 61790, 2611, -1000, -1000, 334, 64718, 436,
	590, 298, -1000, 1697, -1000, -1000, 1074, -1000, 1060, -1000,
	-1000, -1000, -1000, -1000, -1000, 58130, 64718, 74234, 2610, 2609,
	-1000, 51534, -1000, -1000, -1000, -1000, 2948, 2132, 2125, -1000,
	1553, 1640, -1000, 18115, 64718, -1000, 931, -1000, -1000, -1000,
	5247, 18115, 18115, -1000, -1000, -1000, -1000, 1751, -1000, -1000,
	-1000, -1000, -67, -1000, -1000, 1059, 1169, 1166, 72770, 1058,
	-1000, 341, 64718, -1000, 74234, -1000, 2978, 2975, 363, 2968,
	64718, 2495, -1000, 1597, 1587, 1585, 1573, 1546, 1544, 1539,
	186, 2567, 2566, -1000, -1000, 249, -1000, -73, -1000, -1000,
	5247, -1000, -1000, 21865, 35365, -1000, 1487, 1554, -1000, 1538,
	2247, 1268, 1388, -1000, -1000, 1512, 1243, 1017, 1487, 1016,
	413, 1057, 2766, 2765, 565, 564, -1000, 1487, 1016, 1177,
	613, -1000, 1455, 1454, 1451, 1443, 1439, 1430, 1420, 1419,
	602, -380, -1000, 1487, 1487, 1487, 1487, 1487, 1487, 1487,
	1487, -249, -253, 1487, 1487, 1487, 1487, 1487, 1487, 1487,
	1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487,
	1487, 1487, 1487, 1487, 1487, 1487, 30865, 1487, 1487, -1000,
	1130, 796, -1000, -1000, 17365, 2562, -1000, 17365, -1000, -1000,
	-1000, -1000, -1000, 74234, 2552, 984, -1000, 2321, -1000, -1000,
	1223, 74234, 74234, 74234, 5070, 1822, 2549, 4956, 1789, 2549,
	4829, 1703, 2549, 2863, 12115, 21115, 2246, 2494, 2245, 2244,
	-1000, 29, 2653, -1000, -1000, -1000, 58130, -1000, -1000, -1000,
	-1000, 2948, 43482, 12865, -1000, -1000, -1000, -1000, 33115, 12115,
	-1000, 1204, 5247, 4534, -1000, 18115, -1000, -1000, 2277, 2384,
	2384, 2384, 2384, 2384, 1594, -1000, -1000, -1000, 409, 1386,
	409, -1000, 1386, 18115, -1000, 18115, 18115, -1000, 18115, 18115,
	-1000, -1000, 18115, 3142, 2398, 2377, -308, -1000, 2502, 1635,
	-1000, 17365, 2069, -1000, -1000, -1000, -1000, -1000, 18115, 18115,
	18115, 18115, -1000, -1000, -1000, -1000, -1000, 72038, -1000, -158,
	-158, -158, -158, -158, -1000, -1000, -1000, -1000, -158, -158,
	-158, -158, -158, -158, -158, -158, -158, -158, -158, -158,
	-1000, 505, 2549, -1000, 24115, 2948, 45678, 2480, 2480, -1000,
	1162, -1000, -1000, -1000, -78, -109, -1000, -1000, -1000, -1000,
	-1000, 35365, -1000, -1000, -1000, 5127, 2937, 1487, 1487, 1487,
	378, 1487, 1487, 1487, 1487, 1487, -255, -256, 1487, 1487,
	1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487,
	1487, 1487, 1487, 1487, 1487, 176, 1487, 1487, 1487, 1487,
	1487, 1487, 30865, 1487, 1487, -381, 49338, 1193, 1002, -1000,
	-1000, -1000, 74966, 74966, 74966, -1000, 74966, 74966, -1000, -1000,
	-1000, -1000, 50070, -1000, -1000, 1776, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2549, -498, 2001, 58130, -1000, 2794,
	1532, 37615, 3008, -1000, 2702, -1000, 2701, 2700, 2243, -1000,
	-1000, 2327, 2316, 2314, -1000, 2561, -1000, -1000, -1000, -1000,
	-1000, 2380, -1000, 2378, 2493, -1000, 2375, -431, 58130, -1000,
	-1000, 2549, 2000, 2608, -1000, -1000, -1000, -1000, 2304, 2492,
	-1000, 38033, 74234, 74234, 74234, 678, -315, 775, -1000, 64718,
	385, 438, 772, 2049, -405, 2845, 58130, 64718, -1000, -1000,
	-1000, 71306, 71306, -1000, -1000, 17365, -1000, -1000, 2874, -1000,
	5247, 2005, -1000, -1000, 5247, 5247, 1418, 1119, -1000, 64718,
	1345, 70574, 1055, 64718, 361, 240, -1000, 64718, 64718, 2967,
	64718, 2461, 229, 2240, 2239, 2238, 1993, 1983, 1978, 1977,
	-1000, 58130, 58130, 2237, 2769, -1000, -1000, 1485, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4857, 1388, 1417, 1412,
	1406, 1384, -1000, 46410, 74966, 1179, 1020, -1000, -1000, 2549,
	-1000, 42750, 50070, 50070, 50070, 74234, 2696, 2695, 74234, 50070,
	50070, 74234, 50070, 877, 2124, 2792, 1487, 71, -1000, -1000,
	-1000, 69842, -1000, 69110, 823, 50802, 50070, 74234, 58130, 42018,
	-1000, -1000, -1000, -1000, 68378, 1973, 74234, 74234, 67646, 66914,
	66182, 65450, -1000, -299, 941, 17365, 941, 1898, 1898, 2234,
	2233, 2232, 1487, 1487, 120, 1898, 2231, 120, 1898, 36865,
	2230, 990, 941, 941, 941, 1898, 1898, 1898, 1898, 2229,
	391, 2036, 2227, 1898, 2153, 2144, 941, -1000, -289, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1898, 2549, 921, 1054, 846, -17, 1594, 74234, 1594, 2371,
	-1000, -1000, 1450, 74234, -1000, 2286, 2286, 2286, 18115, 18115,
	18115, 18115, 18115, 18115, 18115, 18115, 18115, 60326, -1000, -1000,
	1144, -25, 74234, -1000, 9, -1000, -1000, -1000, 2946, -1000,
	2483, -1000, -1000, -1000, 2277, -1000, 18115, 5247, -1000, -158,
	-158, -158, -158, -158, 2277, 2559, 2559, 2559, -1000, 2559,
	2560, 88, -1000, -1000, -1000, 2559, 131, 2559, 122, -1000,
	2277, 2277, 2277, 1837, 5043, 5019, 3684, 2681, 1837, 18115,
	18115, 18115, 2549, -152, -1000, 1594, 17365, 3123, 2810, 1837,
	1837, -1000, -1000, 2123, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2607, 2607, 24115, 2863, -1000, 20365, -1000, 898,
	-1000, -1000, 74234, 2484, -1000, 1487, 1321, 1487, 1487, 2940,
	2480, -1000, -1000, 1343, -1000, -1000, -1000, -1000, 164, 941,
	941, 941, 1487, 2787, 1487, 1898, 1898, 2226, 2223, 2222,
	1487, 1487, 120, 1898, 2221, 120, 1898, 36865, 2220, 990,
	941, 941, 941, 1898, 1898, 1898, 1898, 2219, 391, -1000,
	1994, 2218, 1898, 2127, 2094, 941, -1000, -290, 1898, 2549,
	-300, 2368, -1000, 2559, 2559, 2694, 1209, -1000, -1000, -1000,
	-1000, -1000, -1000, 2558, -1000, -1000, 18115, 2870, -1000, 2557,
	1393, -1000, -1000, -1000, -1000, 1011, 2216, -1000, -1000, 18115,
	-1000, -1000, 2549, 2549, 2549, 2549, 2549, 2549, 2549, 2549,
	2549, 2549, 2549, 2549, 2549, -110, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2215, -1000, 1971, -1000, 1970,
	-1000, -1000, -1000, 2556, -1000, 2869, -1000, 58130, 224, 61790,
	-1000, 38033, 38033, 38033, -17, 371, 397, -1000, 1726, -1000,
	-1000, -1000, 2214, 2213, 2212, 2005, 439, 1723, 398, -1000,
	2865, 2864, 2211, 2208, 2206, 2201, 1968, -1000, -1000, 2467,
	74234, 2481, -1000, 1594, 1640, 9, 58130, 240, -1000, -1000,
	-1000, 64718, 240, -1000, -1000, 407, 2461, 2461, 64718, 2461,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2338, 2335,
	-1000, -1000, -1000, -1000, -1000, -1000, 1525, 1483, 333, 332,
	50802, 972, 38033, 38033, 2180, 1209, -1000, 2674, 1370, -1000,
	-1000, -1000, -1000, -1000, -1000, 50070, 2474, -433, -435, 1291,
	-454, -1000, -1000, -1000, -1000, 50802, 1487, 1386, 2773, 648,
	326, 646, 321, -1000, -1000, -1000, -1000, 972, 1220, 1053,
	-1000, 2672, 50070, 1051, 640, 315, -1000, 1803, -316, 2474,
	-1000, 2474, -1000, 2474, -1000, 2474, -1000, -1000, -1000, 1594,
	-1000, -1000, -1000, -1000, -1000, -1000, 2200, 2199, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -259, -1000, 36865, 1782,
	-1000, 2606, 75698, -1000, 630, 2605, 1462, 1011, 2330, -1000,
	74234, -1000, -1000, -1000, -1000, -1000, 5247, 5247, 2710, 5247,
	5247, 2597, 5247, 5247, 2350, -1000, 32365, 2549, -1000, -5,
	-1000, 2944, 2936, -1000, -1000, 5247, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 431, 399, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18115, 18115, 18115, 18115,
	-1000, 1837, 1837, 1837, 18115, 2277, 2198, 1594, 18115, 18115,
	-1000, -1000, 1378, -1000, -1000, 2841, -1000, 2421, 60326, 2277,
	2465, 2325, 2277, 366, -1000, -1000, -1000, 59594, 45678, 2473,
	-1000, 2549, 2321, 2940, 24115, 17365, 17365, 17365, 17365, 2899,
	-1000, -280, -1000, 417, 309, -1000, -1000, -1000, -1000, -1000,
	-1000, 1386, 1487, 31615, -1000, -1000, -1000, -1000, -1000, 2196,
	2194, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -261, -1000,
	36865, -1000, 236, 49338, 2839, 2839, 74966, 74966, 74234, 1837,
	2549, 74234, -1000, -1000, -1000, -1000, -1000, 1837, -1000, -1000,
	2300, 2294, 49338, 337, -1000, -405, 2909, -1000, 224, -1000,
	2193, 825, 812, -1000, 814, 803, 784, 769, 742, -1000,
	-1000, -1000, -1000, 2605, 684, 371, -1000, -68, 1963, 1434,
	2764, 397, -1000, 1955, 1938, 1933, 1932, 434, -1000, -1000,
	-1000, -1000, 294, 438, -1000, 731, 2192, 725, 2184, -1000,
	-1000, 435, -1000, -1000, 2747, 2319, -1000, -5, -1000, 2868,
	240, 2868, 359, 2461, -1000, -1000, 2287, -1000, -1000, 2121,
	-1000, -1000, 2555, 74966, 74966, 2291, -1000, 74234, -1000, -1000,
	-1000, -1000, -1000, 2833, 2831, -1000, -1000, 972, 1386, -1000,
	1386, -1000, -1000, -1000, -1000, -1000, 50070, 74234, 50070, 1048,
	50070, -1000, -1000, 2549, 1117, -1000, -1000, -1000, -1000, 2313,
	-1000, 446, 2179, 306, -1000, -1000, 1130, 649, -1000, -1000,
	-1000, -283, -1000, -1000, 18115, 18115, 18115, -1000, 34615, 2731,
	2734, -161, 17365, 17365, -1000, -1000, -1000, -1000, 1837, 1837,
	1837, 1837, -1000, -1000, -1000, 373, -1000, -1000, 1837, 1837,
	2940, 2935, 2671, -1000, 2552, -1000, -1000, 2465, 366, -1000,
	898, -1000, 11365, -1000, 2899, -1000, 1594, 1594, 1594, 1594,
	-1000, -292, 1907, 18115, 2549, 2549, 712, -1000, 1386, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2313, 236, -1000, 36865,
	1487, 2178, 1487, 1487, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2309, -501, 18115, 2303, -1000, -1000, -1000, 2299, -1000,
	-1000, 901, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2744,
	2741, 850, 921, -1000, 2177, 2175, -1000, 675, 1906, 1261,
	-192, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 708, 2119, -1000, 396, -1000, -1000, 393, -1000,
	-1000, 2934, -405, 18115, -1000, 2731, -1000, 64718, 2868, -1000,
	-1000, -1000, -1000, 208, 208, 49338, 2180, 2554, -1000, 1370,
	2616, 18115, -1000, -1000, 1329, 1311, -1000, -1000, 1046, 50070,
	-1000, 1370, 58130, 36865, -1000, -1000, -1000, -1000, 921, 1352,
	673, 1837, 1837, 1837, 2266, -1000, 9167, 301, -1000, 2722,
	2725, 2933, -1000, 74234, -1000, 1594, 2397, -1000, 1594, -1000,
	-1000, -1000, -1000, 2277, 264, -338, -1000, -1000, 1389, 17365,
	3007, -1000, -1000, -1000, 366, -1000, -1000, -1000, 2549, 2932,
	-1000, 1837, 74234, 18115, 2549, 1501, -1000, -1000, -1000, -1000,
	1904, -1000, 2173, 2172, 982, -1000, -1000, -1000, 1837, -1000,
	236, -318, 337, 886, 79873, -1000, -1000, -1000, -1000, 1782,
	-1000, -1000, -1000, -1000, 1903, -1000, -1000, 1864, 672, 382,
	-1000, 2867, -1000, -1000, 1861, 5247, 1040, -317, -1000, 2297,
	2553, 49338, -1000, 947, 5247, 1487, 1386, 50070, -1000, 2291,
	26, -1000, 79873, 1782, 1178, 664, 1462, -1000, -1000, -1000,
	2277, 34615, 336, -461, -27, 2171, 2734, 2930, 2730, 2727,
	-1000, 2169, 2382, -1000, 2866, 17365, -1000, 2649, -313, -343,
	2277, 328, 328, 2373, 24115, 2277, -1000, 1370, -409, -1000,
	2286, 1837, 74234, 1830, -1000, -1000, -1000, 58130, -501, -1000,
	236, -1000, 346, -1000, 914, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10615,
	17365, 175, 36115, 2116, 2114, 79873, 1939, 79873, 17365, 2112,
	2109, 2721, 18115, 79703, 445, -351, -1000, -352, -1000, -1000,
	-1000, 2167, -1000, 2552, 1795, 432, 236, 49338, 2293, 954,
	1386, -1000, -1000, -1000, 609, -1000, -1000, 412, 1011, -1000,
	1462, -1000, 2863, -1000, -1000, 2166, -238, -1000, 2549, -32,
	-1000, 2165, -1000, 2929, 2915, -1000, 74234, 2549, -1000, -1000,
	2588, -1000, -1000, -1000, 331, -1000, 1404, 871, 1368, -1000,
	1011, -1000, 2349, -1000, 2291, 302, -1000, -1000, 2286, -1000,
	2550, -1000, 357, 1010, 1008, -318, -1000, 2107, 2106, -1000,
	1967, 1801, -1000, 17365, 2065, 626, 566, 6936, -1000, -1000,
	-1000, -1000, -1000, -1000, -507, -1000, 308, -508, 1056, -1000,
	-1000, 2093, -1000, 2960, 5247, -1000, -509, -1000, -1000, -1000,
	-1000, 2772, 1447, 61058, -1000, 2276, 236, 2549, -1000, -1000,
	-1000, -1000, -283, -1000, 1352, 60326, 658, 2162, 34615, 2549,
	-1000, 2161, 2066, -1000, -1000, -326, 1706, -1000, -1000, -1000,
	-1000, -1000, -262, -1000, 2549, 712, -1000, 74234, -1000, 350,
	348, -1000, -1000, -1000, -1000, 1794, 1693, 79873, -1000, 2007,
	79873, 2907, 2906, 2903, 9, 35365, 79645, 79495, 79873, 79873,
	17365, 79441, 79873, 1748, -1000, 79163, 79873, -1000, 24115, -1000,
	-1000, -1000, -1000, 3017, 2005, 236, -1000, 18865, 79873, -1000,
	1352, -1000, 1944, 1897, 2603, 2602, 1011, -1000, 2266, 34615,
	-1000, -1000, -341, 331, -1000, 18115, 2549, 2271, -1000, -1000,
	279, 1689, 79873, -1000, -510, 79873, -511, 808, 337, 1104,
	1310, -1000, 569, -1000, 2090, -512, -514, -515, 959, 17365,
	-516, 2064, -1000, -1000, 2349, 64718, -1000, 1837, 2277, -1000,
	-1000, 2601, 1011, -1000, 2599, 1011, -95, -97, 2598, -1000,
	2266, -344, -1000, 1837, 18115, 2596, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 79109, 59594, -1000, -518, 78959, -519, 8717,
	-1000, -1000, -1000, 78901, -1000, -1000, -1000, -1000, 547, -1000,
	-1000, 2825, -1000, -1000, 78731, 78561, 78497, 79873, 1935, 78327,
	2344, -1000, -1000, 2005, -1000, -1000, -1000, 268, 2595, -389,
	2594, 266, 262, -1000, -1000, -99, -1000, -1000, -295, 1837,
	2593, 2592, 2954, -1000, -521, -1000, -1000, 78157, 1684, 79873,
	1033, 79873, 1558, -1000, 17365, -1000, 1104, -1000, 18115, 2063,
	567, 17365, -524, 464, 458, 2055, 261, -391, 2589, 2587,
	-1000, -1000, -1000, 1792, -295, -1000, 3005, -1000, 2977, 1205,
	1205, 78099, 1656, -1000, -1000, -526, 1031, 79873, -1000, 1672,
	-1000, 5247, -1000, 2052, 1623, 77949, -1000, -1000, -1000, 260,
	-393, -1000, -1000, -1000, -1000, -1000, 988, 1857, -1000, -1000,
	-1000, 77895, -1000, -528, 79873, -1000, 463, 457, -1000, -1000,
	-1000, -1000, -1000, 1030, 9162, -529, 2050, 1949, -1000, 1029,
	79873, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3531, 3530, 3529, 224, 3527, 268, 296, 285, 56,
	2805, 3526, 301, 3525, 283, 3524, 23, 17, 14, 28,
	3523, 3123, 3120, 3101, 3099, 26, 3522, 59, 3518, 3515,
	3097, 3514, 3512, 3092, 3511, 3507, 3506, 3494, 3493, 3491,
	3490, 3489, 3486, 3090, 3088, 3086, 3083, 3485, 3484, 3482,
	3075, 3073, 3068, 3478, 84, 42, 22, 3477, 8, 3474,
	192, 214, 3472, 3, 3471, 3470, 9, 191, 3468, 3467,
	67, 3066, 3465, 3459, 3457, 3455, 3451, 3448, 132, 3444,
	3441, 3064, 3440, 3061, 3439, 3057, 3053, 3040, 3038, 3036,
	215, 3438, 3034, 3032, 3030, 3437, 2713, 218, 451, 216,
	3436, 124, 126, 1932, 3435, 233, 3433, 209, 3431, 3430,
	3427, 445, 3414, 152, 3413, 562, 158, 156, 159, 881,
	3408, 60, 176, 316, 3407, 6, 3405, 106, 3403, 201,
	3402, 213, 2789, 184, 245, 182, 3400, 3399, 143, 3398,
	3397, 3396, 204, 3395, 3394, 223, 591, 3391, 3390, 180,
	3389, 135, 3388, 173, 3385, 3384, 3383, 3382, 220, 111,
	82, 161, 169, 3380, 147, 3379, 3362, 3361, 3360, 3358,
	3355, 74, 50, 366, 3354, 139, 188, 3353, 54, 37,
	40, 3352, 3350, 58, 3346, 3345, 129, 3344, 3343, 122,
	3342, 175, 65, 3341, 3340, 3338, 3337, 117, 71, 3335,
	36, 3334, 181, 3333, 3332, 3331, 3329, 3327, 76, 3323,
	83, 3322, 183, 160, 222, 3321, 3320, 46, 44, 3318,
	62, 16, 278, 110, 31, 102, 81, 178, 163, 125,
	157, 49, 142, 61, 144, 148, 3317, 217, 166, 205,
	113, 39, 3315, 3314, 195, 3312, 108, 197, 179, 174,
	196, 3311, 3310, 3309, 228, 3308, 168, 526, 3307, 134,
	323, 226, 3306, 227, 131, 3305, 3303, 3299, 3296, 109,
	47, 137, 3292, 25, 231, 221, 235, 38, 96, 3291,
	873, 4916, 6409, 6484, 32, 419, 107, 5543, 133, 200,
	3286, 72, 3283, 3282, 3267, 4630, 164, 34, 57, 146,
	3266, 151, 43, 78, 3264, 3263, 3246, 3242, 3241, 3240,
	149, 141, 3239, 3238, 66, 3237, 3236, 33, 30, 11,
	12, 3235, 155, 207, 206, 202, 3234, 190, 48, 3227,
	3226, 177, 128, 3223, 3222, 3221, 3219, 172, 118, 194,
	3218, 193, 116, 114, 3214, 112, 3213, 3211, 92, 4618,
	140, 3210, 3209, 376, 123, 3208, 3206, 3205, 3203, 52,
	3201, 3198, 5, 3196, 105, 51, 53, 95, 20, 150,
	3195, 3191, 185, 3190, 3188, 138, 167, 3186, 130, 127,
	55, 3185, 68, 136, 3183, 162, 2, 4, 10, 3182,
	3181, 3174, 3173, 3169, 3164, 3163, 3162, 121, 3160, 3159,
	100, 85, 70, 3157, 63, 3156, 3155, 3154, 189, 165,
	75, 211, 210, 13, 3153, 3150, 7, 3148, 171, 3144,
	103, 3141, 115, 3139, 3137, 69, 99, 41, 88, 3136,
	3134, 89, 3133, 3132, 91, 3131, 3130, 212, 2362, 3129,
	553, 3128, 186, 170, 77, 90, 3126, 73, 104, 3125,
	98, 3116, 21, 64, 3103, 35, 19, 1673, 3094, 0,
	1878, 198, 3081, 145, 3070, 3059, 208, 3055,
}

var yyR1 = [...]int{
	0, 458, 458, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 242, 242, 95, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 125, 125, 8, 8,
	124, 124, 124, 239, 239, 239, 239, 236, 236, 126,
	126, 123, 123, 131, 16, 16, 16, 109, 109, 17,
	18, 18, 18, 18, 461, 461, 140, 140, 138, 138,
	139, 139, 234, 234, 19, 19, 19, 244, 244, 249,
	249, 249, 252, 252, 252, 252, 222, 223, 224, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 449, 449, 449, 450, 450, 450,
	450, 450, 277, 277, 277, 277, 414, 414, 429, 429,
	429, 430, 430, 428, 428, 428, 428, 428, 432, 432,
	433, 433, 431, 431, 431, 431, 435, 435, 436, 436,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 417, 417, 417, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 438, 438, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 440, 440, 441, 441, 442, 442, 442, 442,
	443, 443, 443, 443, 443, 444, 444, 444, 444, 444,
	444, 444, 445, 445, 446, 446, 3, 2, 395, 395,
	396, 396, 397, 397, 397, 397, 398, 398, 399, 399,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	31, 31, 31, 31, 31, 31, 276, 276, 272, 272,
	272, 274, 274, 275, 275, 275, 416, 416, 416, 410,
	410, 410, 412, 412, 411, 411, 411, 413, 413, 418,
	418, 418, 418, 418, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 421, 421, 421, 419, 419, 159,
	159, 422, 422, 427, 427, 423, 423, 424, 424, 426,
	426, 426, 425, 425, 425, 425, 314, 314, 178, 178,
	68, 68, 69, 69, 69, 211, 211, 211, 20, 20,
	20, 20, 20, 20, 26, 26, 28, 28, 28, 28,
	55, 55, 56, 29, 29, 29, 29, 57, 57, 58,
	32, 32, 32, 32, 32, 32, 65, 65, 65, 64,
	64, 63, 63, 63, 63, 63, 63, 34, 35, 36,
	462, 462, 462, 59, 59, 37, 37, 37, 40, 40,
	40, 41, 41, 41, 38, 39, 42, 30, 30, 30,
	30, 66, 66, 61, 61, 60, 60, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 33,
	33, 33, 33, 33, 33, 25, 394, 394, 394, 54,
	54, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 76, 76, 351, 352, 352, 352,
	352, 352, 352, 338, 338, 339, 339, 339, 339, 339,
	339, 328, 328, 328, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 302, 302, 302, 302, 306, 306, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 305, 305, 305, 305, 305, 305, 305, 305,
	307, 307, 307, 307, 307, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 309, 309, 309, 309, 309, 309, 309, 309, 337,
	337, 311, 311, 310, 310, 310, 331, 331, 332, 332,
	332, 329, 329, 329, 330, 330, 315, 315, 315, 315,
	315, 315, 316, 333, 317, 317, 318, 318, 318, 318,
	318, 318, 319, 319, 320, 320, 320, 322, 322, 327,
	327, 326, 326, 326, 326, 326, 326, 323, 323, 323,
	323, 323, 323, 324, 324, 324, 325, 336, 336, 336,
	336, 336, 312, 46, 46, 52, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	372, 372, 377, 377, 266, 266, 267, 267, 53, 53,
	53, 53, 53, 165, 165, 373, 373, 375, 375, 375,
	375, 375, 375, 375, 374, 374, 376, 376, 340, 340,
	368, 368, 367, 367, 366, 366, 366, 366, 366, 366,
	366, 349, 349, 350, 350, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 344, 344, 344, 343, 343, 345,
	345, 348, 348, 348, 365, 365, 364, 364, 341, 341,
	341, 378, 378, 378, 378, 378, 100, 100, 342, 342,
	342, 379, 346, 346, 347, 347, 347, 387, 388, 386,
	386, 386, 386, 386, 166, 166, 166, 370, 370, 370,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 101, 101,
	101, 102, 102, 321, 321, 353, 353, 353, 353, 353,
	457, 457, 457, 354, 354, 354, 354, 354, 354, 448,
	448, 447, 447, 447, 355, 355, 356, 356, 356, 357,
	357, 359, 359, 273, 273, 360, 360, 361, 361, 358,
	358, 358, 362, 362, 391, 391, 391, 390, 390, 71,
	71, 71, 71, 73, 73, 72, 72, 80, 80, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 70, 70, 286, 286, 75, 210, 210, 210,
	271, 271, 384, 384, 385, 385, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 381, 381, 380,
	380, 382, 382, 74, 74, 74, 74, 160, 160, 22,
	22, 77, 77, 415, 415, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 389, 389, 389, 24, 24,
	81, 82, 82, 82, 285, 285, 285, 285, 85, 85,
	85, 85, 237, 237, 238, 238, 86, 86, 86, 86,
	87, 87, 87, 87, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 120, 258, 258,
	257, 257, 256, 256, 256, 259, 259, 259, 259, 300,
	300, 300, 84, 84, 84, 96, 96, 91, 91, 94,
	94, 94, 94, 97, 97, 98, 98, 99, 99, 92,
	93, 43, 44, 44, 44, 44, 45, 89, 89, 89,
	90, 90, 90, 90, 111, 111, 464, 464, 464, 88,
	465, 103, 104, 104, 106, 106, 106, 107, 107, 107,
	108, 108, 108, 263, 263, 263, 263, 263, 263, 263,
	105, 105, 105, 114, 114, 118, 118, 118, 118, 117,
	117, 117, 117, 213, 213, 218, 292, 292, 194, 194,
	214, 214, 219, 219, 219, 220, 220, 221, 221, 221,
	221, 221, 216, 216, 215, 215, 217, 181, 181, 181,
	181, 179, 179, 179, 179, 179, 179, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 177, 177, 290, 290, 290, 290, 289, 289,
	289, 122, 122, 127, 127, 129, 129, 129, 129, 129,
	129, 129, 129, 132, 196, 196, 466, 466, 150, 150,
	151, 151, 151, 151, 152, 152, 152, 152, 152, 154,
	154, 154, 155, 155, 155, 155, 155, 155, 156, 157,
	157, 153, 153, 153, 175, 175, 232, 232, 233, 233,
	231, 231, 235, 235, 128, 128, 130, 130, 130, 130,
	135, 135, 136, 136, 137, 137, 297, 297, 141, 141,
	141, 143, 142, 142, 142, 142, 142, 142, 144, 144,
	451, 452, 452, 453, 453, 453, 453, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 455, 455, 456,
	456, 145, 145, 147, 148, 148, 146, 146, 146, 146,
	146, 146, 158, 158, 149, 161, 161, 161, 161, 162,
	162, 119, 119, 119, 119, 119, 119, 119, 119, 255,
	255, 164, 164, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 190, 190, 190, 190, 190, 190, 167,
	167, 167, 167, 167, 167, 167, 113, 113, 191, 191,
	191, 134, 133, 133, 116, 116, 115, 115, 192, 192,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 184, 184, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 189, 189, 189, 189,
	189, 463, 463, 186, 186, 185, 185, 185, 185, 185,
	185, 110, 110, 110, 110, 110, 298, 298, 298, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 67, 67, 203, 203, 112, 112, 201, 201, 202,
	204, 204, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 174, 174,
	174, 205, 205, 193, 193, 121, 206, 206, 207, 208,
	208, 209, 209, 212, 225, 225, 225, 226, 226, 226,
	226, 176, 176, 176, 227, 227, 227, 227, 169, 169,
	168, 168, 168, 170, 170, 170, 170, 171, 171, 467,
	467, 230, 230, 229, 229, 228, 228, 228, 228, 228,
	228, 240, 240, 195, 195, 198, 198, 197, 199, 241,
	241, 246, 246, 246, 246, 243, 243, 247, 247, 247,
	247, 250, 250, 251, 251, 251, 248, 248, 248, 248,
	245, 245, 245, 294, 294, 294, 294, 253, 253, 262,
	262, 260, 260, 261, 261, 254, 254, 313, 313, 313,
	268, 268, 269, 269, 270, 270, 264, 264, 264, 264,
	265, 265, 291, 291, 287, 287, 293, 293, 288, 288,
	295, 295, 296, 296, 296, 296, 392, 392, 393, 393,
	393, 334, 334, 403, 403, 335, 335, 404, 404, 406,
	406, 401, 401, 402, 402, 405, 405, 47, 407, 407,
	408, 408, 409, 409, 409, 409, 48, 49, 49, 49,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 284, 284,
	284, 284, 284, 284, 281, 281, 281, 281, 281, 281,
	282, 282, 282, 459, 460,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 3, 6, 6,
	5, 5, 5, 5, 4, 3, 5, 1, 3, 1,
	3, 3, 5, 0, 5, 0, 3, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 8, 4, 7,
	1, 2, 5, 7, 10, 8, 11, 1, 2, 5,
	5, 5, 5, 6, 5, 7, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 2, 2, 5,
	0, 1, 2, 1, 3, 5, 7, 8, 7, 9,
	10, 7, 9, 10, 2, 2, 2, 2, 4, 2,
	4, 2, 3, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 4, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 5, 5, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 6, 8, 3, 6,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 3, 2, 3, 3,
	2, 3, 3, 2, 3, 4, 2, 2, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 2, 3, 3, 2,
	2, 4, 3, 1, 0, 1, 3, 3, 3, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 5, 5, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 3, 3,
	0, 3, 0, 3, 1, 1, 0, 1, 5, 4,
	2, 2, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 3, 5, 5, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 3, 3, 1,
	1, 0, 1, 1, 1, 3, 5, 3, 3, 3,
	5, 3, 2, 2, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 3, 3, 3, 3, 2,
	1, 11, 12, 12, 13, 13, 0, 1, 3, 2,
	1, 5, 1, 1, 0, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 2, 3,
	3, 3, 3, 4, 5, 3, 3, 4, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 4, 4, 3, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 0, 6, 1, 4, 5, 5,
	6, 0, 1, 0, 3, 1, 1, 0, 2, 0,
	8, 9, 0, 2, 0, 1, 2, 0, 2, 1,
	1, 1, 1, 4, 3, 6, 5, 1, 3, 5,
	4, 8, 10, 9, 2, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 3, 3, 6, 5, 4, 4,
	5, 5, 8, 4, 5, 7, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 3, 3, 3, 4,
	5, 5, 3, 7, 6, 5, 2, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 4, 4, 3,
	5, 3, 1, 1, 1, 1, 5, 0, 1, 2,
	0, 1, 0, 1, 1, 2, 5, 3, 4, 4,
	4, 4, 4, 4, 3, 7, 6, 8, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 3, 1,
	3, 8, 8, 8, 11, 12, 15, 0, 3, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 8, 5, 1, 1, 1, 1, 1, 4, 4,
	4, 4, 1, 3, 1, 1, 2, 2, 4, 4,
	3, 3, 3, 3, 3, 4, 3, 5, 5, 5,
	4, 4, 4, 4, 3, 2, 2, 6, 2, 4,
	3, 3, 4, 4, 5, 8, 6, 3, 4, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 4, 2, 4, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 3, 2, 0,
	1, 1, 2, 4, 1, 0, 1, 2, 1, 2,
	4, 4, 5, 0, 1, 0, 3, 0, 2, 4,
	4, 2, 3, 4, 4, 5, 3, 3, 4, 3,
	1, 1, 1, 1, 0, 3, 1, 1, 1, 3,
	0, 2, 0, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 0, 2, 2, 2, 2, 2, 2,
	0, 1, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 2, 6, 0, 1, 0, 3,
	0, 1, 0, 2, 2, 4, 1, 2, 2, 2,
	2, 2, 0, 2, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 2, 2, 1, 1,
	1, 1, 3, 1, 1, 1, 4, 5, 1, 2,
	3, 1, 1, 2, 2, 4, 0, 1, 2, 6,
	1, 3, 2, 4, 1, 1, 1, 1, 1, 5,
	5, 8, 5, 5, 8, 5, 5, 8, 2, 2,
	2, 3, 4, 4, 0, 1, 3, 1, 0, 3,
	1, 3, 1, 3, 4, 6, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 2, 2,
	12, 1, 3, 3, 3, 6, 7, 2, 3, 3,
	4, 4, 5, 5, 8, 8, 3, 3, 4, 3,
	4, 1, 3, 3, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 6, 4, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 4, 4, 4, 2, 2, 2, 1, 2,
	2, 2, 8, 8, 6, 6, 3, 4, 2, 2,
	2, 0, 2, 1, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 1, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 1, 0, 2, 4, 4, 1, 4,
	1, 3, 4, 1, 4, 3, 6, 2, 3, 1,
	1, 0, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 5, 1, 3, 2, 3, 3, 1, 1,
	3, 3, 3, 3, 3, 1, 3, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 3, 4, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	1, 0, 1, 0, 4, 0, 1, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 3, 3, 1, 3,
	2, 4, 1, 2, 1, 2, 2, 2, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -458, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -71, -22, -23, -24, -81, -85, -86, -87, -83,
	-84, -91, -92, -93, -89, -88, -30, -33, -25, -95,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -132, -459, 12, -126, 34, -76, 190,
	-449, -73, -72, -74, -75, 193, 192, 230, 194, 641,
	367, 642, 223, 72, 441, -94, 444, 445, -464, 305,
	306, 25, 42, 446, 448, 35, 36, 245, 333, 335,
	197, 442, 427, 428, 358, 689, -6, 647, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	758, -208, 20, -103, -465, -208, -10, -9, -4, 647,
	-103, -109, 14, 15, 13, 552, -103, -351, 28, -3,
	117, 76, -8, 11, -265, -276, 97, 543, 198, -274,
	329, 331, 208, -262, -264, -272, 255, 265, 49, 210,
	209, 266, 199, 329, 199, 200, 202, 543, 198, 238,
	237, 329, 331, 270, 641, 199, -146, -295, -281, -283,
	-282, 347, 82, -280, 572, 576, 270, 579, 580, 585,
	337, 90, 52, 367, 566, 359, 368, 220, 521, 567,
	330, 336, 339, 360, 730, 369, 371, 372, 564, 565,
	54, 202, 554, 555, 558, 213, 745, 352, 221, 644,
	266, 753, 748, 750, 341, 751, 511, 603, 441, 460,
	452, 479, 645, 701, 278, 300, 449, 384, 528, 604,
	344, 293, 365, 702, 320, 288, 517, 523, 303, 444,
	605, 606, 607, 537, 246, 276, 703, 450, 297, 299,
	298, 260, 571, 304, 41, 226, 476, 654, 642, 255,
	704, 610, 697, 609, 249, 282, 608, 327, 40, 32,
	611, 248, 540, 108, 275, 705, 375, 525, 612, 497,
	376, 244, 271, 273, 289, 707, 649, 348, 232, 524,
	429, 472, 358, 127, 253, 315, 377, 708, 498, 502,
	709, 529, 334, 314, 615, 710, 711, 378, 653, 283,
	712, 201, 340, 616, 279, 713, 256, 531, 345, 496,
	211, 646, 222, 56, 235, 532, 500, 618, 506, 509,
	430, 374, 431, 714, 715, 716, 717, 356, 354, 620,
	355, 357, 622, 267, 295, 650, 619, 652, 61, 196,
	656, 504, 503, 505, 296, 670, 527, 484, 482, 718,
	719, 349, 217, 720, 721, 483, 23, 722, 723, 535,
	319, 351, 724, 725, 726, 621, 292, 626, 602, 727,
	728, 526, 499, 501, 254, 126, 641, 277, 729, 353,
	522, 362, 657, 648, 338, 290, 627, 731, 380, 291,
	234, 228, 536, 424, 425, 439, 440, 370, 732, 428,
	733, 734, 735, 736, 332, 331, 445, 363, 628, 446,
	272, 301, 651, 737, 629, 630, 738, 739, 264, 247,
	539, 530, 60, 513, 508, 366, 381, 451, 426, 436,
	432, 434, 435, 438, 437, 433, 516, 442, 274, 241,
	631, 632, 633, 427, 634, 12, 294, 346, 635, 636,
	637, 520, 364, 302, 265, 268, 487, 236, 740, 741,
	474, 475, 443, 239, 230, 121, 538, 325, 696, 329,
	382, 287, 59, 242, 53, 742, 743, 269, 243, 655,
	286, 447, 343, 658, 199, 82, -285, -280, -283, -284,
	-281, 347, 231, 58, 95, 63, 62, 82, -280, 641,
	143, 480, 528, 190, 518, 519, 525, -344, 526, 237,
	424, 366, 240, -300, 199, -258, 239, 517, 334, 353,
	576, 243, 244, 271, 425, 431, 200, 201, 37, 530,
	529, 521, -295, -96, 447, -96, -96, 203, 447, -111,
	232, 194, -146, 231, -66, 82, 307, -66, 34, 82,
	-158, -287, -295, 82, -280, 41, 82, 446, 520, 520,
	84, 648, 246, 26, -438, -413, 362, -437, -411, 191,
	190, 15, 192, 270, 367, 368, 333, 200, 13, 35,
	730, 218, 369, 370, 11, 223, 371, 372, 238, 14,
	373, -439, -416, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 81, 82, -280, 26, -438, -413, 362, 370,
	424, 443, 424, 424, -267, -266, 383, 506, 143, -125,
	700, -123, -131, -297, -295, -281, -196, -466, 251, 543,
	-254, 329, -274, 204, -127, -129, -130, -150, -133, 698,
	-459, -128, -451, -146, -134, 82, 601, -107, 10, -106,
	-108, 9, 8, -107, -226, 22, 21, -263, -104, -226,
	-460, 78, -460, -125, -117, 134, -119, -295, -163, 100,
	-173, 33, 29, -172, 347, 231, -164, -200, -281, -199,
	-134, 143, -299, 132, 133, 140, 101, 186, -184, -182,
	-183, -185, -187, -188, 226, 474, 475, 81, 83, 91,
	84, 85, 86, 87, 92, 93, 94, -287, -283, -279,
	-282, 572, 576, 579, 580, 585, -197, -459, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	66, 67, 570, 198, 553, 554, 477, 555, 13, 556,
	557, 558, 643, 220, 562, 103, 55, 324, 544, 545,
	549, -189, 546, 550, 551, 564, 565, 566, 567, 205,
	543, 138, 552, 589, 590, 591, 592, 593, 594, 595,
	596, 598, 599, 597, 573, 574, 575, 577, 578, 581,
	582, 583, 584, 586, 587, 588, 672, 195, 191, 194,
	99, 28, 30, 673, 252, 102, 458, 492, 561, 21,
	25, 214, 197, 480, 212, 142, 207, 215, 309, 311,
	190, 70, 674, 541, 310, 518, 668, 665, 667, 666,
	471, 469, 308, 675, 15, 31, 224, 259, 676, 467,
	192, 250, 106, 107, 677, 46, 45, 8, 312, 225,
	318, 468, 678, 679, 24, 73, 216, 16, 210, 240,
	752, 680, 333, 18, 125, 19, 681, 662, 664, 663,
	204, 119, 200, 744, 68, 257, 682, 456, 461, 462,
	463, 464, 465, 457, 96, 683, 684, 116, 323, 64,
	601, 37, 245, 698, 559, 322, 685, 43, 42, 491,
	495, 490, 321, 507, 117, 22, 547, 548, 35, 686,
	687, 233, 494, 455, 489, 699, 688, 660, 262, 71,
	383, 470, 756, 38, 74, 229, 379, 350, 47, 97,
	20, 258, 69, 39, 568, 122, 757, 473, 206, 237,
	689, 533, 261, 690, 123, 466, 700, 218, 118, 448,
	193, 361, 306, 219, 328, 335, 691, 251, 124, 519,
	659, 692, 563, 34, 223, 305, 454, 208, 693, 263,
	317, 307, 316, 694, 695, 342, 48, 754, 671, 199,
	44, 105, 493, 453, 488, 203, 560, 238, 313, 9,
	49, 36, 514, 14, 373, 72, 75, 481, 478, 486,
	485, 209, 755, 17, 326, 569, 647, 534, 98, 669,
	515, 542, -103, -103, -103, -243, 443, -250, -247, 529,
	530, -248, -251, -245, -200, 506, 727, 728, 528, 480,
	527, -287, -295, -281, 347, 231, 143, 573, 574, 575,
	103, 477, 553, 589, 544, 546, 541, 545, 543, 33,
	590, 29, 94, 591, 570, 205, 13, 186, 577, 578,
	592, 593, 594, 66, 547, 548, 643, 138, 100, 595,
	596, 92, 598, 599, 324, 552, 67, 597, 198, 583,
	582, 581, 584, 556, 557, 93, 549, 550, 551, 55,
	587, 586, 588, -2, -6, -459, -146, -352, -339, -342,
	-287, -281, -283, -284, 227, -282, 215, -379, 82, -280,
	212, -208, -103, 200, 202, 552, -261, 205, -261, 238,
	237, 270, -275, 263, -261, -261, 731, 199, -274, 109,
	109, -77, -146, -415, -410, -416, -260, 205, -287, -260,
	-260, -260, -260, -260, -260, -260, -260, 82, -285, -146,
	187, -82, -146, -138, 16, 16, 75, 75, 82, -285,
	82, 430, 374, 34, -259, 117, 17, 543, 198, 199,
	237, 238, 202, 270, -259, -346, 16, 119, 241, 241,
	241, 241, 241, 242, 241, -257, 520, 522, 523, 524,
	-256, 16, 119, 17, -120, 117, 24, -459, -226, -226,
	-256, 241, 135, -98, 99, -98, 82, 446, 203, -90,
	-4, -18, -16, -17, -111, -9, -175, -153, 28, 6,
	7, 109, 34, 34, 81, 59, 34, -61, -60, -62,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	303, 304, 34, -394, 76, 187, -334, 506, 82, -407,
	-408, -146, 84, 84, 74, 353, 74, 77, 203, 77,
	74, -440, 363, 76, -440, 331, 363, 364, 265, 329,
	202, -440, -440, 331, -440, -440, -440, 350, -440, -440,
	520, -440, -440, -440, 365, 366, -440, 518, 202, -440,
	-440, -440, -440, -440, 79, 74, 77, 353, 74, 16,
	74, 426, 429, 533, 647, -165, 26, -371, 143, 375,
	376, 377, 378, 374, 353, 379, 380, 381, 241, 382,
	199, 520, 374, -6, -123, 77, -230, -459, 77, -197,
	-459, 82, -327, -326, -323, -324, -325, -322, 33, 199,
	-260, 270, -141, -143, -142, -144, 64, 68, 70, 65,
	66, 67, 521, 71, -270, 28, -133, -459, -122, -9,
	-132, -127, -459, -151, 122, -161, -270, -152, 72, 204,
	73, 28, -153, -154, -155, -156, -157, 6, 7, 54,
	-459, -459, -7, -8, 26, 27, -14, -7, -12, -14,
	26, 27, 26, 27, -7, -227, 24, 35, -176, 84,
	87, -200, -209, -212, -119, -295, 58, -114, 26, 27,
	65, 57, 63, 62, -223, 89, 16, -290, 99, 97,
	98, 116, -289, 28, 82, 81, -285, 187, -119, -167,
	119, 100, 117, 118, 102, 129, 128, 139, 132, 133,
	134, 135, 136, 137, 138, 130, 131, 142, 109, 110,
	111, 112, 113, 114, 115, -255, -459, -134, -459, 187,
	-459, 187, 188, 189, 187, -173, -173, -173, -173, -173,
	-173, -173, 81, 81, 81, -459, 187, 187, -459, -459,
	-459, -459, -459, -192, -119, 647, -459, 199, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -203, -119, -459, -459, -463, -459, -463,
	-463, -186, -463, -459, -186, -186, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -186, -186, -186,
	-459, -254, -254, 16, -138, -139, -146, -149, -295, 77,
	-244, -249, 531, 533, 443, -248, -248, -294, -287, 81,
	33, 143, -350, 109, 120, 34, 187, -208, 78, 77,
	-302, -306, -308, -307, -309, -304, -305, -67, 484, 482,
	478, 477, 480, 483, 143, 481, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 34, 226, 474,
	475, 476, 658, 498, 499, 500, 501, 502, 503, 504,
	505, 452, 479, 645, 453, 454, 455, 456, 457, 458,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, -302, -302, -302, -302, -302, -286, -379,
	82, -285, 76, -226, -263, -287, -146, -276, 208, -274,
	82, 100, 82, -145, -287, -295, -158, -261, 264, -419,
	-418, -410, -413, 671, -261, -275, -410, 269, 267, 268,
	77, 203, 77, 203, 79, -138, 29, 74, -140, -146,
	82, 82, -145, -158, -412, -410, -413, -159, -287, -295,
	-296, -295, -278, -283, -284, 672, 195, 26, 191, 194,
	99, 28, 30, 673, 252, 102, 458, 143, 573, 574,
	575, 492, 561, 21, 25, 214, 103, 197, 477, 480,
	212, 142, 207, 215, 309, 311, 553, 589, 190, 70,
	674, 544, 546, 541, 545, 310, 543, 518, 668, 665,
	667, 666, 471, 469, 308, 33, 675, 15, 590, 31,
	224, 259, 27, 676, 136, 467, 192, 600, 250, 106,
	107, 677, 46, 45, 8, 29, 312, 225, 94, 318,
	591, 468, 678, 679, 24, 73, 216, 16, 210, 240,
	752, 680, 333, 18, 570, 125, 19, 681, 662, 664,
	663, 205, 204, 119, 200, 744, 68, 257, 13, 682,
	456, 461, 462, 463, 464, 465, 457, 186, 96, 683,
	684, 116, 323, 64, 577, 578, 601, 50, 37, 245,
	592, 593, 698, 594, 559, 322, 685, 43, 42, 491,
	495, 490, 321, 507, 66, 117, 22, 547, 548, 35,
	686, 687, 643, 233, 494, 455, 489, 699, 688, 660,
	138, 262, 71, 100, 383, 595, 596, 92, 470, 756,
	38, 74, 229, 379, 350, 47, 97, 20, 258, 69,
	39, 568, 122, 757, 598, 473, 206, 237, 689, 533,
	261, 690, 123, 599, 466, 700, 218, 118, 448, 193,
	324, 552, 361, 306, 219, 328, 335, 67, 691, 251,
	124, 597, 198, 519, 659, 11, 692, 563, 34, 223,
	305, 454, 208, 693, 263, 317, 307, 316, 694, 57,
	695, 342, 48, 583, 582, 581, 584, 754, 65, 556,
	557, 671, 199, 44, 105, 493, 453, 488, 203, 560,
	238, 93, 313, 9, 49, 36, 514, 14, 373, 72,
	75, 549, 550, 551, 55, 481, 478, 486, 587, 485,
	586, 588, 209, 755, 104, 17, 326, 569, 647, 534,
	98, 669, 515, 14, 192, 77, 81, -238, 82, -285,
	81, -238, -237, -238, -237, 241, -259, 81, -299, -119,
	-261, -261, -146, -146, -146, -146, -146, -146, -259, -259,
	-259, -259, -256, 16, -256, -259, -295, -295, -119, -173,
	-410, 545, 134, -259, -295, -99, -97, 217, -97, -99,
	82, 82, 446, -90, 38, 28, 28, 82, -61, -61,
	81, -61, 77, 109, -61, -175, 78, -192, -287, -392,
	744, 77, -409, 28, 533, 534, 507, -442, 199, 240,
	237, 74, -442, -437, 370, -412, -411, -410, -440, -441,
	-287, -440, -440, -440, 520, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -416, -442, 333, 77, -442, -412,
	-410, 203, -374, -376, 439, 440, 534, 535, 450, 374,
	374, 374, 374, 374, 374, -138, -138, 203, 252, -131,
	28, -229, -228, -288, -281, -283, -284, 227, -287, -278,
	-466, -327, -324, -323, -325, 480, 528, 142, 540, -146,
	-410, -159, -129, -129, -127, -129, 64, 64, 64, 69,
	64, 69, 69, 64, 64, -142, -297, -270, 77, -460,
	-460, -460, -9, -459, -297, -161, -270, 200, 200, 200,
	102, 16, 52, 26, 102, 16, 52, 26, 102, 16,
	52, 26, -116, -115, -118, 134, -119, -295, -173, -239,
	96, 14, 119, 77, 23, 77, -225, 30, 31, 187,
	-174, 59, 84, 87, -239, 77, -117, -146, -119, -119,
	-119, -190, 92, 100, 93, 94, -289, 227, 134, -296,
	-288, -283, -281, 347, 231, -278, -173, -191, -197, -134,
	88, 119, 117, 118, 102, -173, -173, -173, -173, -173,
	-173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
	-298, 82, 81, 143, 82, -288, -115, -288, -172, 226,
	474, 475, 92, -172, -287, -287, -105, 26, 27, -288,
	521, -288, -105, -105, -105, -105, -105, 77, -460, -115,
	-115, -115, -460, -119, -119, -115, -173, -115, -200, 81,
	-115, -200, 81, -115, -173, 559, 560, 561, -115, -115,
	-105, -201, -202, 104, -200, -281, -284, 347, 231, -115,
	-460, 84, -179, -180, 650, 659, 660, 662, 665, 658,
	657, 656, 654, 653, 652, 655, 651, 669, 668, 667,
	666, 664, 663, 661, -179, -179, -181, 226, 476, 474,
	475, -115, -116, -115, -115, -460, -460, -118, -115, -118,
	-115, -115, -460, -460, -460, -460, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -460, 84,
	-148, 96, -146, -122, -146, -138, -461, 16, 75, -461,
	77, 187, -247, -250, 77, 532, 534, 535, -244, -319,
	-320, 142, 74, 95, 81, -119, -288, -296, -226, -370,
	-339, -340, -341, -342, -363, 215, -378, 206, 208, 210,
	209, 49, -343, 216, 200, 50, -303, -329, 513, 514,
	-311, 76, -310, 76, -67, 478, 477, 480, -310, 478,
	485, -310, 485, 485, -310, -310, -310, 478, 76, 76,
	-311, -311, -311, -331, 76, -331, 473, -332, 76, -332,
	-332, -332, -332, -303, -303, -303, -303, -303, -379, -119,
	-227, -291, 75, -230, 202, 731, -327, 29, -327, -68,
	252, 221, 187, 76, -159, 255, 256, -414, 77, 33,
	-420, 330, 84, 205, -146, 231, -146, -146, -410, -410,
	-416, -389, 219, 214, -146, 77, 77, 187, 710, 710,
	-146, 77, 81, 82, 82, -175, -347, 16, 119, -259,
	-146, -175, -113, 227, 75, -463, -460, 448, 449, 82,
	-173, 38, 38, -60, -172, -287, 78, -393, 204, 552,
	81, -408, -297, 506, 534, -443, 134, -287, -442, -443,
	-446, 647, 203, 78, 77, -440, -443, 350, 333, -443,
	16, -373, -375, 432, 433, 434, 435, 436, 437, 438,
	77, 109, 109, 451, -377, 24, -372, 647, -372, 81,
	-173, -133, -460, 77, 187, -197, 34, -349, -350, -349,
	-349, -80, -385, -78, -383, 195, 192, 191, 266, 197,
	-322, 553, 249, 248, 282, 283, 73, 35, 196, 193,
	-70, -79, 230, 288, 234, 289, 194, 229, 290, 228,
	291, 647, 286, 751, 511, 603, 604, 637, 90, 607,
	246, 41, 200, 617, 610, 540, 613, 614, 375, 612,
	616, 211, 620, 619, 621, 623, 624, 625, 339, 628,
	629, 630, 247, 631, 632, 633, 364, 638, 9, -420,
	-426, 74, -136, -135, 74, 75, -137, 74, -135, 64,
	64, 64, -233, 76, -297, -127, -460, -235, -287, -161,
	-297, -459, -459, -459, -173, -173, 119, -173, -173, 119,
	-173, -173, 119, -460, 77, 187, 77, -236, 40, 39,
	-287, 508, 60, -176, -176, -212, -253, 24, 16, 55,
	55, -124, 16, -223, -223, 92, 93, 94, 187, -459,
	-191, -173, -173, -173, -113, 99, -460, -460, -116, -115,
	-115, -115, -115, -115, -119, -460, -460, -460, 77, 75,
	28, -460, 75, 119, -460, 16, 16, -460, 16, 16,
	-460, -460, 16, -173, -173, -173, -460, -460, -115, -204,
	-202, 106, -119, -460, -460, -460, -460, -460, 77, 77,
	16, 77, -460, -460, -460, -460, -213, 568, -213, -460,
	-460, -460, -460, -460, -213, -213, -213, -213, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -234, 122, -146, 34, -234, 75, -122, -122, -149,
	-295, 134, -249, -252, 536, 533, 539, 82, 81, 143,
	81, 187, -227, -355, -369, 77, 122, 751, 511, 603,
	-322, 604, 637, 90, 607, 246, 41, 200, 617, 610,
	540, 613, 614, 375, 612, 616, 211, 620, 619, 621,
	623, 624, 625, 339, 628, 442, 629, 630, 247, 631,
	632, 633, 364, 638, 9, 647, 76, -348, -286, -378,
	82, -280, 50, -343, -345, -343, -343, -343, -348, 82,
	-280, -348, 50, 713, 92, 100, -318, -320, 143, -315,
	-316, -333, -336, -312, 28, 752, 516, 218, -342, 480,
	528, 33, 74, 511, 206, 50, 49, 210, 90, -330,
	515, 84, 84, 579, -310, 485, -310, -310, -310, -310,
	-310, -337, 81, -337, 84, -331, 84, 78, 74, -287,
	28, -146, 671, -69, 13, 14, 15, -287, -395, -396,
	-397, -287, 119, 257, 258, 74, -429, 361, -418, 331,
	340, 99, 21, 647, -450, 100, 203, 203, -146, -410,
	-287, 74, 74, -238, -162, 17, 82, 82, -256, -259,
	-173, -413, 243, 244, -173, -173, -147, 96, -409, 203,
	187, 187, -443, 203, 352, -412, -287, 16, 16, 350,
	16, -412, 77, 109, 109, 109, 109, 109, 109, 109,
	-376, 76, 76, 384, 533, -228, -288, -349, 82, 81,
	143, 82, 81, 143, 81, -384, 77, -385, 195, 192,
	282, 283, -383, -271, -343, -391, -390, -341, -342, 122,
	207, 215, 215, 212, -271, -343, 206, 216, 122, 215,
	212, -271, 200, -349, -271, 480, 142, 203, 37, 37,
	364, 122, 364, 122, -349, -271, 207, -343, -268, 215,
	-269, 203, 28, 287, 122, 122, 122, 122, 122, 122,
	122, 122, 292, 671, -349, -349, -349, -349, -349, -349,
	-349, -349, 609, 609, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -353, -447, 81,
	-457, 90, 270, 339, 82, -280, -278, 84, 86, 85,
	-349, -349, -160, 193, 276, 272, -119, 76, -119, -231,
	-287, -233, -460, 77, -161, -231, -231, -231, 99, 203,
	-459, 99, 203, -459, 99, 203, -459, -270, -118, 134,
	-296, 81, 77, 81, 81, 509, 61, -146, -162, 600,
	-122, -117, 134, -288, -116, -113, 99, -173, -460, -460,
	-460, -460, -460, -460, -301, 143, 477, 480, 226, 476,
	469, 467, 466, 468, 496, 482, 513, 474, 514, 658,
	-298, -301, -298, -173, -173, -173, -173, -173, -173, 16,
	16, 16, 644, -208, 108, -119, 105, -173, -173, -173,
	-173, -287, -218, -459, -213, -213, -213, -213, -213, -214,
	-213, -214, -214, -214, -214, -214, -214, -214, -214, -214,
	-214, -214, -169, -170, 34, -168, -9, -459, -171, -467,
	55, 59, -459, -241, -246, -200, -281, -284, 227, -162,
	-122, -162, -162, 187, 533, 537, 538, -369, 21, -349,
	-349, -349, 528, 480, 142, -349, -349, -349, -349, -349,
	609, 609, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, 443,
	-349, -349, -349, -349, -349, -349, -353, -447, -349, -349,
	671, -365, -364, 82, -285, 206, 49, -378, -348, -348,
	-348, -348, -348, -100, -286, 92, -459, 753, 84, -146,
	34, 82, 143, 81, -172, 133, -299, -164, -183, -459,
	93, 94, 544, 545, 549, 546, 550, 551, 564, 565,
	566, 567, 541, 547, 548, 14, 50, 50, 50, 81,
	78, 78, 78, -310, 78, 77, 78, 77, 78, 77,
	-166, 705, 706, -146, -222, -230, 84, 74, 78, 77,
	-302, -287, -287, -287, 272, -432, 647, 336, -430, -428,
	342, 343, 344, 345, 346, -413, 341, -420, 338, 81,
	82, 81, 670, 704, 725, 697, 29, -146, -410, -232,
	76, -231, -232, -119, -175, -234, 199, -412, 134, 134,
	-287, 203, -412, 350, -445, 647, -412, -412, 16, -412,
	-375, 81, 81, 81, 84, 84, 84, 84, -138, -138,
	81, 35, 82, 81, 143, -78, 195, 192, 282, 283,
	76, -338, 82, -285, -348, -264, 208, 206, -459, 82,
	-286, -286, -286, -287, 50, 50, -235, -286, -286, -287,
	-286, 33, 279, 280, 281, 82, 34, -349, 480, -235,
	26, -235, 26, 33, 336, 284, 285, -338, -286, -287,
	-146, 216, 212, -286, -235, 26, 84, -235, -287, -235,
	26, -235, 26, -235, 26, -235, 26, 639, -353, -119,
	-353, -457, -457, 81, 81, 81, -349, -349, -102, 640,
	217, -457, 81, -102, -457, -447, 81, -101, 217, 220,
	222, -353, -353, -353, -457, -457, -457, -457, 81, -354,
	33, 611, 472, 606, 627, 605, 82, 92, 81, 81,
	-457, 33, -457, 33, -457, -353, 634, -457, -459, -425,
	248, 249, 203, 277, 100, -422, 750, 273, -231, 78,
	77, -151, -287, -460, -460, -460, -173, -173, -173, -173,
	-173, -173, -173, -173, -173, -297, 187, 523, -287, -317,
	-318, -205, 18, -223, -460, -173, -214, -214, -214, -214,
	-214, -460, -311, -311, -311, -311, -332, 473, -311, 457,
	-311, 457, -460, -460, -460, -460, 24, 24, 24, 24,
	-460, -173, -173, -173, -459, -112, 563, -119, 77, 77,
	-460, -460, -292, 82, -240, 74, -240, -241, -270, -9,
	-460, -229, -171, -459, 11, 55, 59, 647, 199, -195,
	-198, -466, -235, -162, 77, -350, -350, -350, -350, -208,
	-162, -356, -357, -360, -359, 123, 618, 685, -353, -353,
	-353, -349, 34, -349, -457, -457, 81, 81, 81, -349,
	-349, -102, -457, 81, -102, -457, -447, 81, -101, -353,
	-353, -353, -457, -457, -457, -457, 81, -354, 82, 92,
	81, 81, -457, 33, -457, 33, -457, -353, 634, -457,
	-459, 639, 78, 77, -311, -311, 50, -345, 76, -173,
	28, 76, 82, 143, 81, -172, 81, -173, -189, 81,
	84, 84, 76, -224, 28, -450, -146, -398, -399, -400,
	90, 646, 100, 259, 260, 217, 261, 262, 263, -397,
	-302, -302, -302, -422, -435, -436, -434, 339, 359, 360,
	347, -433, -431, 354, 355, 356, 357, 99, 81, 81,
	81, -421, 330, 99, 339, 21, 28, 21, 28, 81,
	81, 81, 81, 84, 75, -231, -259, -317, -146, -445,
	-412, -445, 333, -412, 78, 78, -338, -210, 220, 221,
	-302, -302, -291, -345, 50, -380, -382, 122, -286, 705,
	706, 705, 706, 34, 192, 743, 713, -338, -349, -298,
	34, 364, 364, 364, 364, -210, -269, 203, 50, -286,
	203, 364, 364, 96, 647, 81, 81, 608, 622, -448,
	-447, -314, 90, 74, -159, 277, -426, 74, -178, -172,
	-183, -172, 78, -287, 77, 77, 77, 134, -459, -401,
	-257, -206, 19, 21, -317, 82, -317, 82, -173, -173,
	-173, -173, -460, -460, -460, -173, -460, 81, -173, -173,
	-194, 122, 32, -240, -297, -460, -171, -459, -460, -460,
	77, -197, -459, -460, -208, -246, -119, -119, -119, -119,
	-226, -361, 626, -459, 523, 615, 50, -298, -349, -321,
	-447, 81, 81, 81, 608, 622, -448, -367, -366, 75,
	211, 90, 612, 630, 743, 713, -364, -225, -225, -348,
	-348, -231, -460, -459, -231, -460, 78, 78, -365, -9,
	-222, 24, -223, -400, 81, 263, 259, 263, 263, 263,
	263, 264, -426, -417, 90, 337, -434, 348, 711, 332,
	361, 84, 84, 121, 35, 36, -431, 84, 84, 84,
	84, -428, 21, 647, -420, 338, 81, 81, 338, 81,
	81, 330, -450, 41, 78, -401, -444, 28, -445, -444,
	350, 78, 82, -303, -303, 76, -348, -348, -460, 77,
	-287, 33, 33, -210, -298, -298, -286, -287, -286, 203,
	-286, -459, 199, 77, -460, 327, 81, 366, -160, -427,
	-180, -173, -173, -173, -452, -453, -288, 718, -402, 43,
	-404, 44, -216, 569, -207, -119, -193, -121, -119, -460,
	-460, -460, -460, -110, 119, 647, -460, -460, -208, 21,
	50, -233, -171, -9, -459, -198, -460, -226, -358, 635,
	84, -173, -459, -459, -273, 266, -298, -460, -366, -447,
	-349, 81, -349, -349, 78, -328, 755, 754, -173, 78,
	78, -222, -224, 250, -224, 41, 41, 255, 256, -425,
	81, 81, 33, 349, 186, 33, 84, 186, 571, 338,
	81, 82, 339, 339, 21, -173, -402, -410, -444, -365,
	-291, 76, -382, 55, -173, 142, 142, 203, -286, -380,
	-146, -447, -222, -425, 132, -423, 274, -460, -460, -460,
	-460, 77, -302, 24, 81, 602, -405, 48, -403, -335,
	47, 21, -215, -217, -287, 77, -460, 645, 71, 648,
	-219, 124, 123, -192, 14, -9, -381, -459, 21, -460,
	-231, -173, -459, 109, 84, 81, 81, 218, -460, -368,
	-367, -277, 647, -9, 251, -27, -4, -16, -17, -18,
	-19, -21, -71, -22, -23, -28, -29, -24, -81, -85,
	-86, -87, -83, -94, -92, -93, -89, -88, -32, -34,
	-35, -37, -40, -41, -38, -39, -36, -30, -33, -42,
	-25, -43, -44, -45, -50, -51, -31, -52, -46, 103,
	205, 442, 308, 319, 320, 321, 82, 324, 326, 322,
	323, 318, 328, 441, -314, 84, 33, 84, 33, 351,
	339, 28, 84, -313, 204, 647, 78, 76, -365, 235,
	-349, -298, -286, -460, -70, 647, -27, -314, 186, -424,
	275, -178, -460, -453, -454, 602, 29, 724, 523, 81,
	-404, 21, -406, 45, 46, 81, 77, 28, -121, 61,
	646, 649, -460, -220, 102, -221, 121, 571, -177, 84,
	186, -220, -241, -460, -380, -359, -460, -460, -231, 84,
	-146, -328, 212, 278, 506, -222, -211, 253, 254, -222,
	-119, -55, -56, 104, -119, 82, -65, -293, 311, 312,
	313, -288, 82, 82, -54, -27, 80, -54, -119, 82,
	82, -462, 16, 58, -173, 108, -54, 327, 654, 654,
	81, -233, 84, 331, -368, -365, 78, 236, -298, 287,
	-222, 327, -172, -178, -427, -270, 81, 602, -459, 523,
	81, 21, 21, -217, -218, 61, -221, 126, 127, 251,
	126, 127, -172, -460, 615, 50, -460, 76, 350, 212,
	212, -277, -222, 82, 82, -55, 108, 106, -56, -119,
	105, 309, 310, 314, -302, 77, 758, 441, 321, 324,
	326, 758, 327, 82, 16, 758, -222, -242, 34, 43,
	124, 33, 336, 26, -413, 78, -368, -459, -222, -180,
	-427, -297, -455, -456, 376, 92, 33, 81, -452, -459,
	81, 81, 647, 99, -179, -459, -273, -231, 350, 350,
	-224, 108, 106, 103, -54, 105, -54, 24, 24, 24,
	-317, -288, 108, -27, 108, -54, -54, -54, -119, 325,
	-54, 96, 108, -27, -241, 8, -368, -173, 233, -27,
	-456, 92, 33, -455, 92, 33, 74, 74, -172, -460,
	-452, 648, -221, -173, -459, 78, -20, -26, -19, -25,
	-16, -17, -18, 441, 647, 103, -54, 758, -54, 758,
	-66, 84, -9, -64, -63, 84, -66, 316, 100, 317,
	82, -319, 321, 82, 758, 758, 758, 327, -119, 758,
	-59, 82, -222, -413, -460, -460, -222, 74, -172, 74,
	-172, 677, 376, 677, 376, 74, -460, 649, -460, -173,
	-387, -388, 74, -222, -54, 108, -125, 758, 108, 758,
	108, 106, -57, -58, 107, -27, 77, 315, 33, 108,
	108, 325, -54, 108, 108, 77, 74, 74, 376, 376,
	677, 376, -362, 636, -460, -388, 74, -387, 74, 15,
	14, 758, 108, 103, 205, -54, 108, 106, -58, -119,
	-63, -173, 82, 321, -119, 758, 324, 326, 82, 74,
	74, 84, -362, -386, 219, 214, 217, 34, -386, 108,
	103, 758, 205, -54, 105, 82, 108, 108, 376, 677,
	213, 33, 92, 108, 758, -54, 324, 326, 205, 108,
	758, 82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1709, 1210, 1709, 0, 1210, 0, 1210, 0, -2,
	133, 919, 920, 921, 922, 0, 0, 0, 0, 0,
	0, 0, -2, 1174, 1175, 1178, 1175, 1175, 1204, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 64, 0, 1316, 2733,
	-2, 1206, 1207, 1208, -2, -2, 0, 53, 0, 60,
	2, 1717, 0, 1223, 1212, 1717, 0, 0, 49, 0,
	0, 1210, 1210, 1210, 87, 88, 0, 119, 0, 121,
	0, 0, 1709, 1210, 0, 0, 0, 1793, 1793, 333,
	1793, 1793, 1808, 0, 1811, 331, 0, 1790, 1806, 1807,
	1809, 0, 0, 0, 1791, 0, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 0, 0, 1089, 1406, 1408, 1409,
	1410, 1411, 1820, 1821, 2724, 2725, 2726, 2727, 2728, 2729,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2730, 2731, 2732, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 0, 0, 0, 1094, 1095, 1096,
	1097, 2718, 2719, 2720, 2721, 2722, 2723, 1106, 1107, 0,
	0, 0, 1165, 0, 1165, 1125, 1126, 0, 1128, 0,
	0, 0, 0, 0, 0, 0, 1162, 1140, 1143, 1147,
	0, 1717, 1717, 1162, 1153, 0, 774, 775, 776, 1170,
	1171, 1159, 1172, 1177, 1176, 1185, 1185, 0, 1176, 79,
	-2, 0, 1344, 0, 457, 459, 0, 480, 0, 483,
	486, 1412, 0, -2, -2, 1831, 1191, 0, 0, 1856,
	1857, 0, 0, 0, 0, 0, 2593, 231, 347, 272,
	272, 272, 272, 272, 272, 272, 0, 272, 272, 0,
	272, 272, 272, 2609, 272, 0, 272, 272, 272, 272,
	272, 230, 346, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 336, 337, 338, 0, 0, 0, 2593, 0,
	730, 1179, 731, 733, 0, 727, 724, 725, 0, 80,
	0, 67, 81, 1741, 1366, 1367, 1313, 0, 1317, -2,
	0, 1791, 0, 1796, 69, 1303, 1304, 1305, -2, 0,
	0, 1311, 1312, -2, 1462, 1820, 0, 0, 1217, 0,
	0, 1214, 1220, 0, 1724, 0, 0, 117, 1211, 47,
	48, 2734, 59, 0, 0, 1239, 1294, 0, 1421, 2291,
	1427, -2, 2204, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 2149, 0, 0, 0, 0, 0, 2246, 1500, 1501,
	1502, 1503, 1504, 1505, 2457, 2672, 2673, 1687, 1691, 1692,
	1693, 1694, 1695, 1696, -2, -2, -2, 1672, 1673, 0,
	1685, 2724, 2725, 2727, 2728, 2729, 1758, 0, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	2272, 2335, 2223, 2340, 2168, 2730, 2160, 2731, 2237, 2364,
	2365, 2732, 2280, 2703, 0, -2, 2389, 2328, -2, -2,
	-2, 1568, -2, -2, -2, 2714, 2715, 2700, 2705, 2230,
	2178, 2288, 2329, 2169, 2190, 2209, 2258, 2259, 2261, 2293,
	2294, 2312, 2321, 2339, 2150, 2151, 2152, 2253, 2254, 2361,
	2360, 2359, 2362, 2395, 2393, 2396, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2153, 2154, 2155,
	2156, 2157, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2170, 2171, 2172, -2, 2177, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2188, 2189, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2205, 2206,
	2208, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2224, 2225, 2226, 2227, 2228, 2229,
	2231, 2232, 2233, 2234, 2235, 2236, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2247, 2248, 2249, 2250, 2251, 2252,
	2255, 2256, 2257, 2260, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2273, 2274, -2, -2, 2277, 2278,
	2279, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2289, 2290,
	2292, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2322, 2323, 2324, 2325, 2326,
	2327, 2330, 2331, 2332, 2333, 2334, 2336, 2337, 2338, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2363, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2390, 2391, 2392,
	2394, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 0, 1795, 1795, 0, 104, 2674, 0, 1765, -2,
	-2, 1767, 0, 0, 0, -2, -2, -2, -2, 2161,
	-2, 1672, 0, 0, 0, 0, 2149, 2150, 2151, 2152,
	2158, 2160, 2168, 2169, 2173, 2174, 2175, 2176, 2178, 2187,
	2190, 2204, 2207, 2209, 2223, 2230, 2237, 2246, 2253, 2254,
	2258, 2259, 2261, 2272, 2275, 2276, 2280, 2288, 2291, 2293,
	2294, 2295, 2312, 2321, 2328, 2329, 2335, 2339, 2340, 2359,
	2360, 2361, 2362, 2364, 2365, 2376, 2386, 2387, 2388, 2389,
	2393, 2395, 2396, 120, 1709, 0, 122, 0, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 800, 1814, 1815,
	0, 1717, 1223, 0, 0, 331, 0, 0, 0, 0,
	0, 1793, 326, 0, 0, 0, 0, 1793, 333, 0,
	0, 1069, 0, 1070, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 1113, 1088,
	0, 1090, 98, 1093, 0, 0, 0, 0, 1110, 1111,
	1114, 0, 1156, 1165, 1116, 0, 0, 1793, 1793, 0,
	0, 0, 0, 0, 1124, 0, 802, 803, 1165, 1130,
	1131, 1165, 1165, 1165, 1162, 0, 1162, 1137, 1160, 1161,
	1165, 0, 0, 0, 1142, 0, 0, 0, 1150, 1151,
	1165, 1155, 0, -2, 1183, -2, 1192, 0, 0, 1197,
	1200, 1201, 1202, 1203, 79, 1199, 1209, 1345, 0, 0,
	0, 0, 0, 0, 461, 0, 0, 482, 463, 0,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 1344, 0, 0, 1826, 1832, 1196, 1847,
	1848, 0, 1858, 1859, 276, 0, 276, 0, 0, 0,
	0, 198, 272, 0, 200, 272, 272, 272, 0, 272,
	272, 207, 208, 272, 210, 211, 212, 272, 214, 215,
	272, 217, 218, 219, 272, 272, 222, 272, 272, 225,
	226, 227, 228, 229, 345, 276, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 732, 734, 705, 0, 0,
	0, 0, 710, 711, 712, 713, 0, 0, 716, 717,
	0, 0, 0, 65, 66, 0, 0, 0, 1316, 1314,
	0, -2, 924, -2, 681, 682, 683, 0, 678, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 1371,
	0, 0, 0, 0, 0, 1805, -2, 0, 0, 0,
	0, 1301, 0, 1318, 0, 1320, 0, -2, 0, 0,
	0, 1805, 1324, 1325, 1326, 1327, 1328, 0, 0, 0,
	1464, 0, 57, 58, 1218, 1219, 54, 62, 63, 55,
	1215, 1216, 1221, 1222, 56, 73, 0, 0, 1718, 1721,
	1722, 1723, 1710, 1711, 1714, 0, 0, 73, 1224, 1225,
	1226, 1227, 1228, 1229, 0, 1213, 0, 1240, 0, 0,
	0, 0, 1295, 0, 1298, 1299, 1300, 0, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1428, 0, 1442, 0, 0,
	0, 0, 0, 0, 0, 1493, 1494, 1495, 1496, 1497,
	1498, 0, 1688, 1689, 1690, 1230, 0, 0, 1230, 1230,
	1230, 1230, 1230, 0, 1468, 2402, 0, 2367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1230, 0, 1664, 0, 0, 1565, 0, 1566,
	1567, 1569, 1583, 0, 1570, 1571, 0, 0, 0, 0,
	0, 1464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 1579, 1580,
	0, 0, 0, 0, 0, 0, 98, 100, 1406, 0,
	105, 107, 0, 0, 2674, 1768, 1769, 672, 1783, 1784,
	1785, 1786, 0, 763, 764, 1781, 0, 1717, 817, 0,
	554, 651, 572, 573, 574, 641, 576, 643, 0, 643,
	643, 1661, 1662, 643, 643, 643, 618, 619, 620, 621,
	622, 624, 625, 626, 627, 628, 0, 0, 600, 641,
	641, 641, 604, 631, 632, 633, 634, 635, 636, 637,
	638, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 646, 646, 648, 648,
	648, 648, 648, 554, 554, 554, 554, 554, 0, 799,
	1024, 1025, 0, 1724, 117, 1812, 1741, 0, 0, 333,
	-2, 0, -2, 0, 1401, 0, 0, 0, 0, 146,
	367, 349, 131, 0, 0, 327, 332, 328, 329, 330,
	0, 0, 0, 0, 340, 1085, 1792, 0, 1077, 96,
	1078, 1079, 1080, 1081, 1082, 342, 1083, 1084, 369, 0,
	1407, 1822, 1823, 1824, 1825, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 0, 0, 0, 1098, 1100, 1104, 1105,
	1099, 1101, 1108, 1102, 1109, 1154, 1115, 1166, 0, 1168,
	0, 0, 1344, 1120, 1121, 1122, 1123, 804, 1129, 1132,
	1133, 1139, 1165, 0, 1344, 1138, 1163, 1164, 1141, 1456,
	1144, 1581, 0, 1152, 1173, 1189, 0, 1184, 0, 1190,
	1194, 1193, 0, 1198, 0, 0, 0, 1205, 458, 460,
	462, 481, 0, 0, 484, 485, 487, 0, 1413, 1828,
	0, 0, 1850, 0, 1852, 1854, 0, 0, 277, 278,
	279, 276, 0, 232, 0, 294, 348, 0, 199, 0,
	274, 201, 202, 203, 272, 205, 206, 209, 213, 216,
	220, 221, 223, 224, 344, 0, 0, 0, 0, 196,
	0, 0, 729, 744, 0, 0, 1180, 1181, 0, 706,
	707, 708, 709, 722, 715, 720, 720, 0, 0, 82,
	0, 0, 1743, 1746, 1747, 1748, 1749, 1750, 1818, 1819,
	0, 923, 684, 685, 686, 0, 761, 761, 761, 677,
	0, 379, 1362, 1364, 0, 1359, 1369, 1370, 1372, 0,
	1374, 0, 0, 1377, 1378, 1379, 1348, 0, 0, 1310,
	1461, 1463, 0, 0, 1415, 1322, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 1339, 0, 0,
	0, 1340, 0, 1465, 1466, 1235, 1236, 0, 0, 45,
	0, 1725, 0, 0, 0, 0, 1713, 1715, 1716, 0,
	0, 1698, 0, 0, 70, 117, 117, 50, 1422, 1423,
	1424, 1426, 1443, 0, 1445, 1447, 1296, 1297, 1241, 0,
	1674, -2, 1676, -2, -2, -2, 1433, 1434, 1458, 1459,
	1460, 0, 0, 0, 0, 1456, 1438, 0, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1492, 1596, 1597, 1598, 0, 1683, 0, 1684, 1490, 0,
	0, 0, 1697, 1491, 1679, 1499, 1464, 1231, 1232, 1681,
	1682, 1680, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 1540, 0, 0, 0, 0, 0, 1474, 1687,
	0, 1474, 1687, 0, 0, 2262, 2374, 2154, 0, 0,
	0, 1670, 1667, 0, 0, 0, 0, 2718, 2719, 0,
	1582, 0, 0, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 0, 0, 0, 1267, 1268, 1269,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	102, 0, 1405, 0, -2, 0, 0, 94, 95, 0,
	0, 0, 1766, 0, 0, 0, 110, 111, 106, 1770,
	673, 0, -2, 1777, 1687, 1779, 1674, 0, 1724, -2,
	539, 540, 541, 542, 0, 781, 790, 0, 0, 779,
	0, 781, 781, 0, 777, 778, 545, 654, 652, 653,
	575, 0, 605, 0, 643, 643, 1661, 1662, 607, 643,
	643, 610, 643, 643, 613, 616, 617, 623, 0, 0,
	601, 602, 603, 592, 0, 593, 646, 595, 0, 596,
	597, 598, 599, 546, 547, 548, 549, 550, 798, 0,
	296, 0, 0, 0, 0, 0, 126, 1794, 127, 0,
	390, 391, 0, 298, 0, 334, 335, 148, 0, 0,
	350, 0, 137, 0, 534, 535, 0, 1071, 0, 1073,
	339, 1075, 1086, 1087, 1076, 0, 0, 0, 0, 0,
	99, 0, 1167, 1117, 1118, 1119, 1419, 0, 0, 1134,
	1162, 1165, 1157, 0, 0, 1145, 0, 1188, 1186, 1195,
	1341, 0, 0, 464, 465, 466, 488, 0, 1829, 1830,
	1827, 1849, 0, 1853, 1855, 0, 280, 282, 0, 0,
	190, 0, 0, 273, 0, 204, 0, 0, 0, 0,
	0, 728, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1182, 714, 0, 718, 0, 719, 703,
	704, 83, 1742, 0, 0, 1315, 761, 0, 762, 0,
	0, 1032, 926, 927, 1034, -2, 1030, 1030, 761, 1030,
	0, 0, 0, 0, 0, 0, 964, 761, 1030, 1800,
	0, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1022, 1023, 761, 761, 761, 761, 761, 761, 761,
	761, 0, 0, 761, 761, 761, 761, 761, 761, 761,
	761, 761, 761, 761, 761, 761, 761, 761, 761, 761,
	761, 761, 761, 761, 761, 761, 0, 761, 761, 1026,
	1067, 0, 1356, 1363, 0, 0, 1357, 0, 1358, 1373,
	1375, 1376, 1306, 0, 1348, 1302, -2, 0, 1352, 1321,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 74, 2470, 0,
	77, 0, 0, 1719, 1720, 1712, 0, 1787, 1788, 1699,
	1700, 1419, 0, 0, 1233, 1444, 1446, 1448, 0, 1464,
	1435, 1456, 1439, 0, 1436, 0, 1430, 1538, 0, 0,
	0, 0, 0, 0, 1469, 1536, 1537, 1539, 0, 0,
	0, 1543, 0, 0, 1547, 0, 0, 1589, 0, 0,
	1590, 1552, 0, 0, 0, 0, 0, 1558, 1709, 0,
	1668, 0, 0, 1561, 1562, 1563, 1564, 1584, 0, 0,
	0, 0, 1585, 1586, 1587, 1588, 1525, 0, 1526, 0,
	0, 0, 0, 0, 1532, 1533, 1534, 1535, 1250, 1250,
	1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
	1577, 0, 0, 1404, 0, 1419, 0, 1419, 1419, 101,
	0, 1414, 108, 109, 0, 0, 115, 674, 675, 676,
	1778, 0, 297, 536, 818, 677, 0, 761, 761, 761,
	0, 761, 761, 761, 761, 761, 0, 0, 761, 761,
	761, 761, 761, 761, 761, 761, 761, 761, 761, 761,
	761, 761, 761, 761, 761, 0, 761, 761, 761, 761,
	761, 761, 0, 761, 761, 0, 0, 0, 0, 789,
	-2, -2, 781, 781, 781, 780, 781, 781, 772, 782,
	783, 773, 796, 555, 556, 0, 558, 559, 560, 561,
	562, 563, 564, 565, 0, 0, 0, 0, 570, 0,
	0, 0, 0, 663, 0, 698, 700, 0, 0, 571,
	655, 0, 0, 0, 606, 643, 614, 608, 609, 611,
	612, 0, 639, 0, 0, 594, 0, 814, 0, 1813,
	116, 1741, 0, 0, 392, 393, 394, 1402, 0, 299,
	300, 0, 0, 0, 0, 0, 158, 0, 368, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 97, 343,
	370, 0, 0, 1103, 1127, 0, 805, 806, 1344, 1136,
	1457, 1146, 1148, 1149, 1342, 1343, 102, 0, 1851, 0,
	0, 0, 0, 0, 0, 292, 275, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 1744, 1745, 0, 690, 691,
	692, 693, 694, 695, 696, 925, 677, 1033, 0, 0,
	0, 0, 1035, 0, 781, 0, 0, 934, 935, 0,
	1031, 915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 0, 956, 957,
	958, 0, 959, 0, 0, 0, 0, 0, 0, 0,
	1801, 1802, 1803, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1015, 1016, 875,
	876, 877, 878, 879, 891, 892, 893, 880, 881, 882,
	0, 0, 382, 0, 0, 0, 1360, 0, 1365, 0,
	1350, 1307, -2, 0, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1467, 1237,
	0, 0, 0, 75, 664, 1726, 1727, 46, 1701, 71,
	72, 117, 1242, 1686, 0, 1437, 0, 1440, 1506, 1250,
	1250, 1250, 1250, 1250, 0, 641, 641, 641, 1646, 641,
	648, 1649, 1651, 1652, 1653, 641, 1655, 641, 1658, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1665, 1560, 1671, 0, 0, 0, 0,
	0, 1243, 1244, 1246, 1527, 1528, 1529, 1530, 1531, 1510,
	1251, 1511, 1512, 1514, 1515, 1517, 1518, 1519, 1520, 1522,
	1523, 1524, 1751, 1751, 0, -2, 1733, 0, 1730, 1316,
	1739, 1740, 0, 1419, 1759, 0, 0, 0, 0, 1709,
	1419, 92, 93, 0, 112, 113, 114, 819, 901, 0,
	0, 0, 761, 0, 761, 0, 0, 0, 0, 0,
	761, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 850,
	0, 0, 0, 0, 0, 0, 861, 862, 0, 0,
	0, 0, 784, 641, 641, 0, 779, 788, 765, 767,
	768, 769, 771, 0, 797, 557, 0, 0, 568, 0,
	0, 669, 670, 671, 656, 0, 0, 659, 660, 0,
	1431, 1432, 1581, 1581, 1581, 1581, 1581, 1581, 0, 0,
	0, 0, 1581, 1581, 1581, 0, 697, 699, 701, 702,
	642, 644, 645, 615, 629, 0, 630, 0, 649, 0,
	801, 815, 816, 0, 118, 0, 137, 0, 306, 0,
	302, 0, 0, 0, 0, 166, 0, 149, 150, 151,
	153, 154, 0, 0, 0, 147, 0, 352, 0, 355,
	356, 357, 0, 0, 0, 0, 0, 1072, 1074, 0,
	0, 1347, 1092, 1420, 1165, 664, 0, 292, 281, 283,
	284, 0, 292, 295, 191, 0, 192, 194, 0, 193,
	736, 737, 738, 739, 740, 741, 742, 743, 0, 0,
	723, 721, 687, 688, 689, 928, -2, 1030, 0, 0,
	0, 1027, 0, 0, 1812, 779, 1808, 0, 0, -2,
	936, 937, 960, 961, 962, 0, 1037, 0, 0, 0,
	0, 942, 943, 944, 945, 0, 761, 0, 0, 0,
	0, 0, 0, 965, 966, 967, 968, 1027, 0, 0,
	972, 0, 0, 0, 0, 0, 1044, 0, 0, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1021, 978, 979,
	980, 981, 982, 983, 984, 985, 0, 0, 988, 871,
	872, 989, 990, 991, 992, 993, 994, 995, 868, 869,
	870, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	883, 884, 885, 886, 887, 888, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 0, 1019, 0, 386,
	383, 384, 0, 380, 0, 379, 0, 0, 0, 1349,
	0, 1319, 1353, 1416, 1417, 1418, 1329, 1330, 0, 1332,
	1333, 0, 1335, 1336, 0, 1355, 0, 0, 78, 1841,
	665, 1706, 0, 1234, 1507, 1441, 1509, 1513, 1508, 1516,
	1521, 1541, 1641, 664, 664, 1647, 1648, 1650, 1654, 1656,
	1657, 1659, 1545, 1542, 1544, 1546, 0, 0, 0, 0,
	1553, 0, 0, 0, 0, 0, 0, 1669, 0, 0,
	1574, 1575, 1248, 1247, 84, 0, 85, 1751, 0, 0,
	0, 0, 0, 0, -2, -2, -2, 2133, 2097, 1737,
	1753, 0, 0, 1709, 0, 0, 0, 0, 0, 1717,
	91, 907, 896, 0, 0, 905, 906, 902, 820, 821,
	822, 0, 761, 0, 825, 826, 828, 829, 830, 0,
	0, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 0, 865,
	0, 867, 749, 0, 1714, 1714, 781, 781, 0, 0,
	0, 0, 666, 667, 668, 657, 658, 0, 662, 640,
	0, 0, 0, 0, 116, 136, 0, 117, 307, 308,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 301,
	303, 304, 305, 379, 184, 167, 168, 0, 0, 0,
	0, 159, 160, 0, 0, 0, 0, 0, 155, 156,
	157, 351, 0, 0, 354, 0, 0, 0, 0, 138,
	139, 0, 141, 137, 0, 0, 1135, 1841, 1403, 285,
	292, 285, 0, 195, 746, 747, 0, 930, 1028, 0,
	554, 554, 0, 781, 781, 0, 1059, 0, 963, 938,
	940, 939, 941, 0, 0, 948, 949, 1027, 0, 953,
	0, 1038, 1039, 1040, 1041, 969, 0, 0, 0, 0,
	0, 1042, 1043, 0, 0, 986, 987, 1017, 1018, 0,
	889, 1063, 0, 0, 1068, 381, 1067, 0, 373, 388,
	389, 0, 1361, 1351, 0, 0, 0, 1238, 0, 1843,
	1837, 1262, 0, 0, 1642, 1643, 1644, 1645, 0, 0,
	0, 0, 1554, 1555, 1556, 1591, 1559, 1666, 0, 0,
	1709, 0, 0, 86, 1348, -2, 1731, 0, 0, 1738,
	1316, 1755, 0, 103, 1717, 1760, 1761, 1762, 1763, 1764,
	90, 909, 0, 0, 0, 0, 903, 823, 0, 827,
	873, 874, 831, 832, 863, 864, 0, 748, 752, 0,
	761, 0, 761, 761, 759, 760, 785, 786, 787, 766,
	770, 0, 551, 0, 0, 661, 647, 650, 0, 116,
	118, 0, 118, 309, 310, 311, 312, 314, 315, 0,
	0, 0, 382, 130, 0, 0, 169, 0, 0, 0,
	0, 179, 180, 181, 182, 183, 161, 162, 163, 164,
	165, 152, 0, 0, 353, 0, 360, 362, 0, 361,
	363, 0, 135, 0, 1346, 1843, 187, 0, 285, 189,
	293, 929, 1029, 543, 544, 0, 1812, 0, 1036, 0,
	0, 0, 947, 950, 951, 954, 970, 971, 0, 0,
	975, 0, 0, 0, 1020, 116, 387, 385, 382, 371,
	375, 0, 0, 0, 0, 1381, 0, 2561, 76, 1845,
	-2, 0, 68, 0, 1707, 1708, 1702, 1703, 1705, 1548,
	1550, 1549, 1551, 0, 0, 0, 1572, 1573, 1252, 0,
	0, 1729, 1732, 1734, 0, 1754, 1756, 89, 1057, 0,
	908, 0, 0, 0, 0, 0, 824, 866, 753, 754,
	0, 756, 0, 0, 0, 566, 552, 553, 0, 569,
	750, 142, 0, 0, 79, 316, 317, 318, 319, 386,
	185, 186, 170, 171, 0, 173, 174, 0, 0, 0,
	365, 0, 358, 359, 0, 1091, 1797, 286, 188, 0,
	0, 0, 1060, 0, 946, 761, 0, 0, 974, 0,
	1046, 890, 79, 386, 0, 377, 0, 1331, 1334, 1337,
	0, 0, 0, 0, 0, 0, 1837, 0, 1839, 0,
	1836, 0, 1263, 1264, 0, 0, 1557, 0, 0, 0,
	0, 0, 0, 1249, 0, 0, 895, 0, 901, 897,
	0, 0, 0, 0, 755, 757, 758, 0, 551, 123,
	751, 124, 0, 116, 395, 116, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	0, 0, 0, 0, 0, 79, 0, 79, 0, 0,
	0, 440, 0, 79, 0, 0, 175, 0, 177, 178,
	364, 0, 140, 1348, 0, 0, 750, 0, 0, 0,
	0, 955, 973, 1045, 0, 1022, 116, 1064, 0, 372,
	0, 373, 1804, 1382, 1383, 0, 0, 1384, 0, 0,
	1844, 0, 1842, 0, 0, 1838, 0, 0, 1704, 1592,
	0, 1595, 1245, 1253, 0, 1256, 0, 0, 0, 1292,
	0, 1254, 1752, -2, 0, 0, 898, 899, 0, 904,
	0, 567, 0, 0, 0, 142, 116, 0, 0, 129,
	0, 0, 410, 0, 0, 1814, 0, 0, -2, -2,
	-2, 1816, 437, 438, 0, 489, 0, 0, 0, 454,
	455, 0, 441, 0, 456, 320, 0, 116, 172, 176,
	366, 42, 0, 0, 931, 0, 750, 0, 952, 1047,
	1065, 116, 0, 373, 376, 0, 1387, 0, 0, 0,
	1846, 0, 0, 1265, 1266, 1593, 0, 1257, 1258, 1259,
	1260, 1261, 0, 1058, 0, 903, 900, 0, 143, 0,
	0, 125, 118, 396, 397, 0, 0, 79, 411, 0,
	79, 0, 0, 0, 664, 0, 79, 79, 79, 79,
	0, 79, 79, 0, 442, 79, 79, 44, 0, 1798,
	1799, 287, 288, 289, 291, 750, 933, 0, 79, 374,
	378, 1380, 1388, 1389, 0, 0, 0, 1396, 0, 0,
	1840, 1834, 0, 0, 1293, 0, 0, 0, 144, 145,
	79, 0, 79, 408, 0, 79, 0, 0, 0, 0,
	672, 1817, 0, 490, 321, 0, 0, 0, 0, 0,
	0, 0, 323, 116, 43, 0, 932, 0, 2281, 116,
	1390, 0, 0, 1391, 0, 0, 0, 0, 0, 1385,
	0, 0, 1255, 0, 0, 791, 116, 398, 399, 400,
	401, 402, 403, 79, 0, 406, 0, 79, 0, 79,
	420, 421, 422, 79, 429, 431, 432, 433, 0, 435,
	436, 424, 445, 322, 79, 79, 79, 79, 0, 79,
	439, 443, 132, 290, 1061, 1062, 1066, 0, 0, 0,
	0, 1392, 1393, 1397, 1399, 0, 1386, 1594, 912, 0,
	792, 793, 0, 128, 0, 405, 80, 79, 0, -2,
	0, 79, 0, 417, 0, 423, 0, 434, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1398, 1400, 910, 0, 912, 794, 0, 795, 0, 0,
	0, 79, 0, 409, 413, 0, 0, 79, 418, 0,
	430, 425, 325, 446, 0, 79, 448, 451, 444, 0,
	0, 913, 911, 807, 809, 810, 0, 0, 808, 404,
	407, 79, 415, 0, 79, 447, 0, 0, 1394, 1395,
	811, 812, 813, 0, 79, 0, 449, 452, 414, 0,
	-2, 450, 453, 416,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 758,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:550
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:554
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:561
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:565
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:605
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:614
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:620
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:642
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:654
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:685
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:701
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:728
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:741
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:748
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:756
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:764
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:768
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:776
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:780
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:786
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:790
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:800
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:803
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:809
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:823
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:831
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:835
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:839
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:848
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:860
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:870
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:875
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:879
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:885
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:889
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:895
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:907
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:932
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:957
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1002
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1020
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1043
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1056
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1069
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1094
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1098
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1104
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1123
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1127
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1137
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1144
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1153
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1194
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1199
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1204
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1233
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1238
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1265
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1285
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1306
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1324
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1342
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1366
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1388
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1420
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1435
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1469
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1481
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1494
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1508
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1530
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1551
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1559
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1563
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1568
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1577
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1609
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1613
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1617
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1622
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1636
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1642
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1646
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1650
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1659
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1673
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1679
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1687
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1691
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1695
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1699
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1703
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1707
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1711
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1715
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1719
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1723
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1727
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1736
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1751
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1767
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1783
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1798
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1810
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1824
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				Privileges:     allPriv,
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1838
		{
			yyVAL.val = &RevokePrivilege{
				Privileges:     yyDollar[2].val.([]Privilege),
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1851
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1861
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1871
		{
			yyVAL.val = &RevokeRole{
				Roles: yyDollar[2].val.([]AccountName),
				From:  yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1882
		{
			yyVAL.val = &RevokeProxy{
				On:   yyDollar[4].val.(AccountName),
				From: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1899
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1903
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1907
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1911
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1915
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1919
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1955
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1971
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1975
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1979
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1983
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1987
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2003
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2079
		{
			yyVAL.val = []string(nil)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2093
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2098
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2132
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2137
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2145
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2149
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2153
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2157
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2161
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2166
		{
			yyVAL.val = false
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2170
		{
			yyVAL.val = true
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2179
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2186
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2199
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2211
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2239
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2243
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2272
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2284
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2288
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2300
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2314
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2318
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2327
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2331
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2335
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2369
		{
			yyVAL.val = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2378
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2382
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2428
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2434
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2450
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2464
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2478
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2482
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2486
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2492
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2496
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2504
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2508
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2512
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2516
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2520
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2524
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2528
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2534
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2542
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2552
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2558
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2568
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2572
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2577
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2581
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2586
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2595
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2604
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2612
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2617
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.val = EventStatus_Enable
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.val = EventStatus_Disable
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2634
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2638
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.val = BeforeStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.val = AfterStr
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.val = InsertStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.val = UpdateStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.val = DeleteStr
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2677
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2685
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2702
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2712
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2716
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2720
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2724
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2740
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2746
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 414:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2751
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2756
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2762
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2780
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2786
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2790
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2794
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2798
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2802
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2809
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2859
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2863
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2881
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2886
		{
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2889
		{
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2903
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2907
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2911
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2922
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 449:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2926
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 450:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2930
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2941
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2945
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2949
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2982
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2986
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2990
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2996
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3000
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3010
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3016
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3020
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3026
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3030
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3054
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3076
		{
			yyVAL.val = &Resignal{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3080
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3084
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3092
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3096
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3102
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3118
		{
			yyVAL.val = Exprs(nil)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			yyVAL.val = Exprs(nil)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3126
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3136
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3190
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3217
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3247
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3257
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3262
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3267
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3271
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3275
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3285
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3309
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3376
		{
			yyVAL.val = BoolVal(false)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.val = BoolVal(false)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3384
		{
			yyVAL.val = BoolVal(true)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3389
		{
			yyVAL.val = ColumnType{}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3393
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3408
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3419
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3429
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3462
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3506
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3517
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3540
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3551
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3564
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3576
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3600
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3604
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3612
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3616
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3620
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3685
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3692
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3699
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3720
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3730
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3738
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3742
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3746
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3758
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3762
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3766
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3770
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3786
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3802
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3814
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3826
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3831
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3881
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3885
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3890
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3894
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3898
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3903
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3907
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3915
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3925
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3933
		{
			yyVAL.val = BoolVal(false)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.val = BoolVal(false)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.val = BoolVal(true)
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3956
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3982
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3986
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = ""
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4013
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4021
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4029
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4039
		{
			yyVAL.val = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4049
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4053
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4057
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4062
		{
			yyVAL.val = false
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.val = true
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4071
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4089
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4097
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4101
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4107
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4111
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4115
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4119
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4123
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4127
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4133
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4137
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4141
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4147
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.val = colKeyPrimary
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.val = colKey
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.val = colKeyUnique
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4169
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4175
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4181
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4185
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4205
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4209
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4217
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4237
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4257
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4262
		{
			yyVAL.val = false
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = true
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4267
		{
			yyVAL.val = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4269
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.val = ""
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4284
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4294
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4304
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4313
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			yyVAL.val = false
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.val = true
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4344
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4350
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4354
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4358
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4374
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4390
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4394
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4400
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4404
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4409
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4423
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4429
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4433
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4438
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4442
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4446
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4460
		{
			yyVAL.val = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.val = ":="
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4486
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4490
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4494
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4498
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4502
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4511
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4515
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4519
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4539
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4548
		{
			yyVAL.val = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4557
		{
			yyVAL.val = ""
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4591
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4595
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 791:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4605
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4609
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 793:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4613
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 794:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4617
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 795:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4621
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4626
		{
			yyVAL.bytes = []byte(nil)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4630
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4636
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4650
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4656
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4665
		{
			yyVAL.val = ""
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4669
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4679
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.val = Restrict
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.val = Cascade
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4699
		{
			yyVAL.val = NoAction
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4703
		{
			yyVAL.val = SetDefault
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.val = SetNull
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4712
		{
			yyVAL.val = true
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.val = true
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.val = false
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4725
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4729
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4733
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4739
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4743
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4747
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4751
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4755
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4759
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4763
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4767
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4771
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4775
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4779
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4783
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4787
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4791
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4795
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4803
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4811
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4819
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4823
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4827
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4831
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4839
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4843
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4855
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4867
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4871
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4875
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4883
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4887
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4891
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4899
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4903
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4907
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4911
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4915
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4919
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4923
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4947
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4951
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4961
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4967
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4976
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4980
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4990
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4994
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5004
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5008
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5020
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5024
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5030
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5034
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5045
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5049
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5062
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5069
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5078
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5086
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5096
		{
			yyVAL.val = false
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5100
		{
			yyVAL.val = true
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5105
		{
			yyVAL.val = ""
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5109
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5115
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5124
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5128
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5133
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 910:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5137
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 911:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5146
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5157
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5161
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5166
		{
			yyVAL.val = ""
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			yyVAL.val = ""
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5174
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5179
		{
			yyVAL.val = string("")
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5183
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5195
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5209
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5224
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5244
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5259
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5263
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5269
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5284
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 931:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5300
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 932:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5317
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 933:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5341
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5363
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5377
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5391
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5409
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5428
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5438
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5448
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5458
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5478
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5488
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5498
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5508
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5523
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5539
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5549
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5559
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5575
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5589
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5603
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5617
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5631
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5645
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5658
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5671
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5681
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5691
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5717
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5731
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5748
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5758
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5768
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5778
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5788
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5798
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5815
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5828
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5843
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5857
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5878
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5899
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5918
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5928
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5940
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5944
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5948
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5952
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5956
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5960
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5964
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5968
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5972
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5976
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5980
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5984
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5988
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5992
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5996
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6000
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6004
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6008
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6012
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6016
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6020
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6024
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6028
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6032
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6036
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6040
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6044
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6048
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6052
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6056
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6060
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6064
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6068
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6072
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6076
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6080
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6084
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6088
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6092
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6096
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6100
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6104
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6108
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6112
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6118
		{
			yyVAL.val = true
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6122
		{
			yyVAL.val = false
		}
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6132
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
			}
		}
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6152
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6156
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6160
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6165
		{
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6167
		{
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6170
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6174
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6180
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6184
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6190
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6194
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6198
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6202
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6206
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6210
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6214
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6218
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6222
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1045:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6226
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6230
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1047:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6234
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6238
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6242
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6255
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6259
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6263
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6267
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6271
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6275
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6279
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6284
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6288
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6294
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6298
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6304
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1062:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6308
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1063:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6314
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1064:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6344
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1065:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6370
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1066:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6398
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6428
		{
			yyVAL.val = EventName{}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6432
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6438
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6442
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6454
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6478
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6494
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6498
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6504
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6522
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6542
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6560
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6577
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6594
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6614
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6634
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6649
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6664
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6683
		{

		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6687
		{
			yyVAL.val = Restrict
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6691
		{
			yyVAL.val = Cascade
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6697
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6710
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6725
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1091:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6731
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6735
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6739
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6751
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6755
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6759
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6763
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6769
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6773
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6780
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6784
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6790
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6794
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6798
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6802
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6808
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6812
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6816
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6820
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6826
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6837
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6848
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6859
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6871
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6883
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6896
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6909
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6920
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6931
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6942
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6953
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6963
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6973
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6986
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6996
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7007
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7017
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7027
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7038
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7050
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7062
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7076
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7089
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7100
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7114
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7126
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7136
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7147
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7160
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7170
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7182
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7193
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7206
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7215
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7226
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7237
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7248
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7259
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7273
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7283
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7293
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7303
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7315
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7321
		{
			yyVAL.val = false
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7325
		{
			yyVAL.val = true
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7331
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7335
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7341
		{
			yyVAL.val = ""
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7345
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7349
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7355
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7359
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7363
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7367
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7373
		{
			yyVAL.val = ""
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7377
		{
			yyVAL.val = SessionStr
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7381
		{
			yyVAL.val = GlobalStr
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7387
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7399
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7412
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7424
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7428
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7434
		{
			yyVAL.val = &Begin{}
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7438
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7444
		{
			yyVAL.val = &Begin{}
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7448
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7452
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7456
		{
			yyVAL.val = &Begin{}
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7461
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7465
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7470
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7474
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7479
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7483
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7489
		{
			yyVAL.val = &Commit{}
		}
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7495
		{
			yyVAL.val = &Rollback{}
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7501
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7507
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7511
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7515
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7519
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7525
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7531
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Statement: tryCastStatement(yyDollar[3].val)}
		}
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7535
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7539
		{
			yyVAL.val = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].val.(SelectStatement)}
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7545
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7553
		{
			yyVAL.val = ""
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7557
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7569
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7589
		{
			setAllowComments(yylex, true)
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7593
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7601
		{
			yyVAL.val = Comments(nil)
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7605
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7611
		{
			yyVAL.val = UnionStr
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7615
		{
			yyVAL.val = UnionAllStr
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7619
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7625
		{
			yyVAL.val = IntersectStr
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7629
		{
			yyVAL.val = IntersectAllStr
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7633
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7639
		{
			yyVAL.val = ExceptStr
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7643
		{
			yyVAL.val = ExceptAllStr
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7647
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7652
		{
			yyVAL.val = QueryOpts{}
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7656
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7667
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7678
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7689
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7700
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7711
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7723
		{
			yyVAL.val = ""
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7727
		{
			yyVAL.val = AllStr
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7731
		{
			yyVAL.val = DistinctStr
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7737
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7745
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7756
		{
			yyVAL.val = &StarExpr{}
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7760
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7764
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1238:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7768
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7774
		{
			yyVAL.val = &StarExpr{}
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7778
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7782
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7786
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7792
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7796
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7802
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7807
		{
			yyVAL.val = ColIdent{}
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7810
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7815
		{
			yyVAL.val = Exprs(nil)
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7819
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7824
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7828
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7833
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7837
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7841
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7848
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7871
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7886
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7890
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7894
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7898
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7905
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7913
		{
			yyVAL.val = Window(nil)
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7916
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7922
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7925
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7931
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7971
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7975
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7980
		{
			yyVAL.val = ColIdent{}
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7984
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7988
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7992
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7998
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8002
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8006
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8012
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8016
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8026
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8030
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8045
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8060
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8066
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8072
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8080
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8086
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8090
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8095
		{
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8097
		{
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8101
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8111
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8126
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8130
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8134
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8138
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8144
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8148
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8152
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8156
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8160
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8166
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8170
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8174
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1332:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8180
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8184
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1334:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8188
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8192
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1336:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8196
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8200
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8206
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8212
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8216
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8222
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8226
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8230
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8235
		{
			yyVAL.val = Expr(nil)
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8239
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8245
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8249
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8254
		{
			yyVAL.val = Columns(nil)
		}
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8258
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8264
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8268
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8274
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8278
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8284
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8288
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8302
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8306
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8310
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8314
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8320
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8322
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8326
		{
			yyVAL.val = JoinCondition{}
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8328
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8332
		{
			yyVAL.val = JoinCondition{}
		}
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8334
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8339
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8345
		{
			yyVAL.val = JoinStr
		}
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8349
		{
			yyVAL.val = JoinStr
		}
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8353
		{
			yyVAL.val = JoinStr
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8359
		{
			yyVAL.val = StraightJoinStr
		}
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8365
		{
			yyVAL.val = LeftJoinStr
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8369
		{
			yyVAL.val = LeftJoinStr
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8373
		{
			yyVAL.val = RightJoinStr
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8377
		{
			yyVAL.val = RightJoinStr
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8381
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8385
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8391
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8395
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1380:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8405
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8412
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8417
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8423
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8427
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8431
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1386:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8436
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8443
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8447
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8451
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8455
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8459
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1392:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8463
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8467
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1394:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8471
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1395:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8475
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8479
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8485
		{
			yyVAL.val = &NullVal{}
		}
	case 1398:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8489
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8495
		{
			yyVAL.val = &NullVal{}
		}
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8499
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8505
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8509
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8515
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8521
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8525
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8531
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8535
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8539
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8543
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8547
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8551
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8557
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8561
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8567
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8572
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8576
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8580
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8584
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8589
		{
			yyVAL.val = Expr(nil)
		}
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8593
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8599
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8603
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8607
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8611
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8615
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8619
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8623
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8627
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8633
		{
			yyVAL.val = ""
		}
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8637
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8643
		{
			yyVAL.val = BoolVal(true)
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8647
		{
			yyVAL.val = BoolVal(false)
		}
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8653
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8657
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8661
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8665
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8669
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8673
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8677
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1440:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8681
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8685
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8689
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8695
		{
			yyVAL.val = IsNullStr
		}
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8699
		{
			yyVAL.val = IsNotNullStr
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8703
		{
			yyVAL.val = IsTrueStr
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8707
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8711
		{
			yyVAL.val = IsFalseStr
		}
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8715
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8721
		{
			yyVAL.val = EqualStr
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8725
		{
			yyVAL.val = LessThanStr
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8729
		{
			yyVAL.val = GreaterThanStr
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8733
		{
			yyVAL.val = LessEqualStr
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8737
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8741
		{
			yyVAL.val = NotEqualStr
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8745
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8750
		{
			yyVAL.val = Expr(nil)
		}
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8754
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8760
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8764
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8768
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8774
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8780
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8784
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8789
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8796
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8800
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8806
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8810
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8816
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8820
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8824
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8828
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8832
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8836
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8840
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8844
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8848
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8852
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8856
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8860
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8864
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8868
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8872
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8876
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8880
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8888
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8892
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8896
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8900
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8904
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8908
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8912
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8916
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8924
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8938
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8942
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8946
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8966
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1507:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8970
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1508:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8980
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1509:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8984
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1510:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8988
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1511:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8992
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1512:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8996
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1513:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9000
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1514:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9004
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1515:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9008
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1516:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9012
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1517:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9016
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1518:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9020
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9024
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9028
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1521:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9032
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9036
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9040
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9044
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9053
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9057
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9061
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9065
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9069
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9073
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9077
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9081
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9085
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9089
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9093
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9104
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9108
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9112
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9116
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9120
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1541:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9124
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1542:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9128
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9132
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1544:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9136
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1545:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9140
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1546:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9144
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9148
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1548:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9152
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1549:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9156
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1550:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9160
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1551:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9164
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9168
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1553:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9172
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1554:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9176
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1555:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9180
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1556:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9184
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1557:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9188
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9192
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1559:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9196
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1560:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9200
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9204
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9208
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9213
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9217
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9228
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9232
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9236
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9241
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9245
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9249
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9253
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1572:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9257
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9261
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1574:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9265
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9269
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9277
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9281
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9285
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9289
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9293
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9306
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9310
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9320
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9324
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9328
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9332
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9336
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9340
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9346
		{
			yyVAL.val = ""
		}
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9350
		{
			yyVAL.val = BooleanModeStr
		}
	case 1593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9354
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1594:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9358
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9362
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9368
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9372
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9376
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9382
		{
			yyVAL.val = Armscii8Str
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9386
		{
			yyVAL.val = AsciiStr
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9390
		{
			yyVAL.val = Big5Str
		}
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9394
		{
			yyVAL.val = UBinaryStr
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9398
		{
			yyVAL.val = Cp1250Str
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9402
		{
			yyVAL.val = Cp1251Str
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9406
		{
			yyVAL.val = Cp1256Str
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9410
		{
			yyVAL.val = Cp1257Str
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9414
		{
			yyVAL.val = Cp850Str
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9418
		{
			yyVAL.val = Cp852Str
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9422
		{
			yyVAL.val = Cp866Str
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9426
		{
			yyVAL.val = Cp932Str
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9430
		{
			yyVAL.val = Dec8Str
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9434
		{
			yyVAL.val = EucjpmsStr
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9438
		{
			yyVAL.val = EuckrStr
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9442
		{
			yyVAL.val = Gb18030Str
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9446
		{
			yyVAL.val = Gb2312Str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9450
		{
			yyVAL.val = GbkStr
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9454
		{
			yyVAL.val = Geostd8Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9458
		{
			yyVAL.val = GreekStr
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9462
		{
			yyVAL.val = HebrewStr
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9466
		{
			yyVAL.val = Hp8Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9470
		{
			yyVAL.val = Keybcs2Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9474
		{
			yyVAL.val = Koi8rStr
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9478
		{
			yyVAL.val = Koi8uStr
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9482
		{
			yyVAL.val = Latin1Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9486
		{
			yyVAL.val = Latin2Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9490
		{
			yyVAL.val = Latin5Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9494
		{
			yyVAL.val = Latin7Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9498
		{
			yyVAL.val = MacceStr
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9502
		{
			yyVAL.val = MacromanStr
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9506
		{
			yyVAL.val = SjisStr
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9510
		{
			yyVAL.val = Swe7Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9514
		{
			yyVAL.val = Tis620Str
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9518
		{
			yyVAL.val = Ucs2Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9522
		{
			yyVAL.val = UjisStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9526
		{
			yyVAL.val = Utf16Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9530
		{
			yyVAL.val = Utf16leStr
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9534
		{
			yyVAL.val = Utf32Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9538
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9542
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9546
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9552
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9556
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9560
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9564
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9568
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9572
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9576
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9580
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9587
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9591
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9595
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9599
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9603
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9607
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9611
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9615
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9619
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9623
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9627
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9631
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9637
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9641
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9646
		{
			yyVAL.val = Expr(nil)
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9650
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9655
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9659
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9665
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9669
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9675
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9680
		{
			yyVAL.val = Expr(nil)
		}
	case 1671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9684
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9690
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9694
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9698
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9702
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9706
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9710
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9714
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9718
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9722
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9726
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9730
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9734
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9738
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9742
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9746
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9752
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9756
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9760
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9764
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9768
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9772
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9776
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9780
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9784
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9788
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9792
		{
			yyVAL.val = &NullVal{}
		}
	case 1698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9798
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9802
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9806
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9811
		{
			yyVAL.val = Exprs(nil)
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9815
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9821
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9825
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9831
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9836
		{
			yyVAL.val = Expr(nil)
		}
	case 1707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9840
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9846
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9851
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9855
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9861
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9865
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9871
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9876
		{
			yyVAL.val = AscScr
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9880
		{
			yyVAL.val = AscScr
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9884
		{
			yyVAL.val = DescScr
		}
	case 1717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9889
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9893
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9897
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9901
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9907
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9911
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9920
		{
			yyVAL.val = ""
		}
	case 1725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9924
		{
			yyVAL.val = ForUpdateStr
		}
	case 1726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9928
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9932
		{
			yyVAL.val = ShareModeStr
		}
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9938
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9942
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9962
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9966
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9971
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9978
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9982
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9986
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1736:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9991
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9998
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10002
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10011
		{
			yyVAL.val = Columns(nil)
		}
	case 1742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10015
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10021
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10025
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10031
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10035
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10039
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10043
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10047
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10051
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10056
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10060
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10066
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10070
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10076
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10080
		{
			yyVAL.val = ValTuple{}
		}
	case 1757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10086
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10092
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10102
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10106
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10112
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10115
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10119
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10123
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10129
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10133
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10139
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10150
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10163
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10176
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10182
		{
			yyVAL.val = SetScope_Global
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10186
		{
			yyVAL.val = SetScope_Session
		}
	case 1773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10192
		{
			yyVAL.val = SetScope_Session
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10196
		{
			yyVAL.val = SetScope_Persist
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10200
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10206
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10210
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10214
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10224
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10231
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10238
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10242
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10246
		{
			yyVAL.val = &Default{}
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10250
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10259
		{
			yyVAL.val = 0
		}
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10261
		{
			yyVAL.val = 1
		}
	case 1791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10264
		{
			yyVAL.val = 0
		}
	case 1792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10266
		{
			yyVAL.val = 1
		}
	case 1793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10269
		{
			yyVAL.val = 0
		}
	case 1794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10271
		{
			yyVAL.val = 1
		}
	case 1795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10274
		{
			yyVAL.val = ""
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10276
		{
			yyVAL.val = IgnoreStr
		}
	case 1797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10279
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10281
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10283
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10286
		{
			yyVAL.val = struct{}{}
		}
	case 1801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10288
		{
			yyVAL.val = struct{}{}
		}
	case 1802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10292
		{
			yyVAL.val = struct{}{}
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10294
		{
			yyVAL.val = struct{}{}
		}
	case 1804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10297
		{
			yyVAL.val = struct{}{}
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10299
		{
			yyVAL.val = struct{}{}
		}
	case 1806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10303
		{
			yyVAL.val = UniqueStr
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10305
		{
			yyVAL.val = FulltextStr
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10307
		{
			yyVAL.val = SpatialStr
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10309
		{
			yyVAL.val = VectorStr
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10312
		{
			yyVAL.val = ""
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10314
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10317
		{
			yyVAL.val = ColIdent{}
		}
	case 1813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10319
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10323
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10327
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10333
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10337
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10344
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10350
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10354
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10361
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10365
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10369
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10374
		{
			yyVAL.val = string("")
		}
	case 1827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10376
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10379
		{
			yyVAL.val = string("")
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10381
		{
			yyVAL.val = IgnoreStr
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10383
		{
			yyVAL.val = ReplaceStr
		}
	case 1831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10386
		{
			yyVAL.val = BoolVal(false)
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10388
		{
			yyVAL.val = BoolVal(true)
		}
	case 1833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10391
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10395
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10400
		{
			yyVAL.val = BoolVal(false)
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10404
		{
			yyVAL.val = BoolVal(true)
		}
	case 1837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10409
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10413
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10418
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10422
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10430
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10434
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10439
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10443
		{
			yyVAL.val = &Lines{StartingBy: yyDollar[2].val.(*SQLVal), TerminatedBy: yyDollar[3].val.(*SQLVal)}
		}
	case 1845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10448
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10452
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10458
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10464
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10468
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10474
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10489
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10507
		{
			yyVAL.val = LockRead
		}
	case 1853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10511
		{
			yyVAL.val = LockReadLocal
		}
	case 1854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10515
		{
			yyVAL.val = LockWrite
		}
	case 1855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10519
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10525
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10531
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10542
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10552
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11477
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11486
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
