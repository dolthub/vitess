// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const RETURNING = 57368
const ALL = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const OF = 57381
const OUTFILE = 57382
const DUMPFILE = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const OPTIONALLY = 57390
const STARTING = 57391
const UNIQUE = 57392
const KEY = 57393
const SYSTEM_TIME = 57394
const CONTAINED = 57395
const VERSION = 57396
const VERSIONS = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const SQL_CALC_FOUND_ROWS = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const STRING = 57419
const ID = 57420
const HEX = 57421
const INTEGRAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const VALUE_ARG = 57425
const LIST_ARG = 57426
const COMMENT = 57427
const COMMENT_KEYWORD = 57428
const BIT_LITERAL = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const OFF = 57433
const INTO = 57434
const OR = 57435
const XOR = 57436
const AND = 57437
const NOT = 57438
const BETWEEN = 57439
const CASE = 57440
const WHEN = 57441
const THEN = 57442
const ELSE = 57443
const ELSEIF = 57444
const END = 57445
const LE = 57446
const GE = 57447
const NE = 57448
const NULL_SAFE_EQUAL = 57449
const IS = 57450
const LIKE = 57451
const REGEXP = 57452
const IN = 57453
const ASSIGNMENT_OP = 57454
const UNBOUNDED = 57455
const PARTITION = 57456
const RANGE = 57457
const ROWS = 57458
const GROUPS = 57459
const PRECEDING = 57460
const FOLLOWING = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_ARMSCII8 = 57469
const UNDERSCORE_ASCII = 57470
const UNDERSCORE_BIG5 = 57471
const UNDERSCORE_BINARY = 57472
const UNDERSCORE_CP1250 = 57473
const UNDERSCORE_CP1251 = 57474
const UNDERSCORE_CP1256 = 57475
const UNDERSCORE_CP1257 = 57476
const UNDERSCORE_CP850 = 57477
const UNDERSCORE_CP852 = 57478
const UNDERSCORE_CP866 = 57479
const UNDERSCORE_CP932 = 57480
const UNDERSCORE_DEC8 = 57481
const UNDERSCORE_EUCJPMS = 57482
const UNDERSCORE_EUCKR = 57483
const UNDERSCORE_GB18030 = 57484
const UNDERSCORE_GB2312 = 57485
const UNDERSCORE_GBK = 57486
const UNDERSCORE_GEOSTD8 = 57487
const UNDERSCORE_GREEK = 57488
const UNDERSCORE_HEBREW = 57489
const UNDERSCORE_HP8 = 57490
const UNDERSCORE_KEYBCS2 = 57491
const UNDERSCORE_KOI8R = 57492
const UNDERSCORE_KOI8U = 57493
const UNDERSCORE_LATIN1 = 57494
const UNDERSCORE_LATIN2 = 57495
const UNDERSCORE_LATIN5 = 57496
const UNDERSCORE_LATIN7 = 57497
const UNDERSCORE_MACCE = 57498
const UNDERSCORE_MACROMAN = 57499
const UNDERSCORE_SJIS = 57500
const UNDERSCORE_SWE7 = 57501
const UNDERSCORE_TIS620 = 57502
const UNDERSCORE_UCS2 = 57503
const UNDERSCORE_UJIS = 57504
const UNDERSCORE_UTF16 = 57505
const UNDERSCORE_UTF16LE = 57506
const UNDERSCORE_UTF32 = 57507
const UNDERSCORE_UTF8 = 57508
const UNDERSCORE_UTF8MB3 = 57509
const UNDERSCORE_UTF8MB4 = 57510
const INTERVAL = 57511
const JSON_EXTRACT_OP = 57512
const JSON_UNQUOTE_EXTRACT_OP = 57513
const CREATE = 57514
const ALTER = 57515
const DROP = 57516
const RENAME = 57517
const ANALYZE = 57518
const ADD = 57519
const MODIFY = 57520
const CHANGE = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const INDEXES = 57525
const VIEW = 57526
const TO = 57527
const IGNORE = 57528
const IF = 57529
const PRIMARY = 57530
const COLUMN = 57531
const SPATIAL = 57532
const VECTOR = 57533
const FULLTEXT = 57534
const KEY_BLOCK_SIZE = 57535
const CHECK = 57536
const ACTION = 57537
const CASCADE = 57538
const CONSTRAINT = 57539
const FOREIGN = 57540
const NO = 57541
const REFERENCES = 57542
const RESTRICT = 57543
const FIRST = 57544
const AFTER = 57545
const LAST = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const FORMAT = 57555
const EXTENDED = 57556
const PLAN = 57557
const MAXVALUE = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const TRIGGERS = 57564
const FUNCTION = 57565
const STATUS = 57566
const VARIABLES = 57567
const WARNINGS = 57568
const ERRORS = 57569
const KILL = 57570
const CONNECTION = 57571
const SEQUENCE = 57572
const ENABLE = 57573
const DISABLE = 57574
const EACH = 57575
const ROW = 57576
const BEFORE = 57577
const FOLLOWS = 57578
const PRECEDES = 57579
const DEFINER = 57580
const INVOKER = 57581
const INOUT = 57582
const OUT = 57583
const DETERMINISTIC = 57584
const CONTAINS = 57585
const READS = 57586
const MODIFIES = 57587
const SQL = 57588
const SECURITY = 57589
const TEMPORARY = 57590
const ALGORITHM = 57591
const MERGE = 57592
const TEMPTABLE = 57593
const UNDEFINED = 57594
const EVENT = 57595
const EVENTS = 57596
const SCHEDULE = 57597
const EVERY = 57598
const STARTS = 57599
const ENDS = 57600
const COMPLETION = 57601
const PRESERVE = 57602
const CASCADED = 57603
const INSTANT = 57604
const INPLACE = 57605
const COPY = 57606
const DISCARD = 57607
const IMPORT = 57608
const SHARED = 57609
const EXCLUSIVE = 57610
const WITHOUT = 57611
const VALIDATION = 57612
const COALESCE = 57613
const EXCHANGE = 57614
const REBUILD = 57615
const REMOVE = 57616
const PARTITIONING = 57617
const CLASS_ORIGIN = 57618
const SUBCLASS_ORIGIN = 57619
const MESSAGE_TEXT = 57620
const MYSQL_ERRNO = 57621
const CONSTRAINT_CATALOG = 57622
const CONSTRAINT_SCHEMA = 57623
const CONSTRAINT_NAME = 57624
const CATALOG_NAME = 57625
const SCHEMA_NAME = 57626
const TABLE_NAME = 57627
const COLUMN_NAME = 57628
const CURSOR_NAME = 57629
const SIGNAL = 57630
const RESIGNAL = 57631
const SQLSTATE = 57632
const DECLARE = 57633
const CONDITION = 57634
const CURSOR = 57635
const CONTINUE = 57636
const EXIT = 57637
const UNDO = 57638
const HANDLER = 57639
const FOUND = 57640
const SQLWARNING = 57641
const SQLEXCEPTION = 57642
const FETCH = 57643
const OPEN = 57644
const CLOSE = 57645
const LOOP = 57646
const LEAVE = 57647
const ITERATE = 57648
const REPEAT = 57649
const UNTIL = 57650
const WHILE = 57651
const DO = 57652
const RETURN = 57653
const USER = 57654
const IDENTIFIED = 57655
const ROLE = 57656
const REUSE = 57657
const GRANT = 57658
const GRANTS = 57659
const REVOKE = 57660
const NONE = 57661
const ATTRIBUTE = 57662
const RANDOM = 57663
const PASSWORD = 57664
const INITIAL = 57665
const AUTHENTICATION = 57666
const SSL = 57667
const X509 = 57668
const CIPHER = 57669
const ISSUER = 57670
const SUBJECT = 57671
const ACCOUNT = 57672
const EXPIRE = 57673
const NEVER = 57674
const OPTION = 57675
const OPTIONAL = 57676
const ADMIN = 57677
const PRIVILEGES = 57678
const MAX_QUERIES_PER_HOUR = 57679
const MAX_UPDATES_PER_HOUR = 57680
const MAX_CONNECTIONS_PER_HOUR = 57681
const MAX_USER_CONNECTIONS = 57682
const FLUSH = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const REQUIRE = 57686
const PROXY = 57687
const ROUTINE = 57688
const TABLESPACE = 57689
const CLIENT = 57690
const SLAVE = 57691
const EXECUTE = 57692
const FILE = 57693
const RELOAD = 57694
const REPLICATION = 57695
const SHUTDOWN = 57696
const SUPER = 57697
const USAGE = 57698
const LOGS = 57699
const ENGINE = 57700
const ERROR = 57701
const GENERAL = 57702
const HOSTS = 57703
const OPTIMIZER_COSTS = 57704
const RELAY = 57705
const SLOW = 57706
const USER_RESOURCES = 57707
const NO_WRITE_TO_BINLOG = 57708
const CHANNEL = 57709
const UNKNOWN = 57710
const APPLICATION_PASSWORD_ADMIN = 57711
const AUDIT_ABORT_EXEMPT = 57712
const AUDIT_ADMIN = 57713
const AUTHENTICATION_POLICY_ADMIN = 57714
const BACKUP_ADMIN = 57715
const BINLOG_ADMIN = 57716
const BINLOG_ENCRYPTION_ADMIN = 57717
const CLONE_ADMIN = 57718
const CONNECTION_ADMIN = 57719
const ENCRYPTION_KEY_ADMIN = 57720
const FIREWALL_ADMIN = 57721
const FIREWALL_EXEMPT = 57722
const FIREWALL_USER = 57723
const FLUSH_OPTIMIZER_COSTS = 57724
const FLUSH_STATUS = 57725
const FLUSH_TABLES = 57726
const FLUSH_USER_RESOURCES = 57727
const GROUP_REPLICATION_ADMIN = 57728
const GROUP_REPLICATION_STREAM = 57729
const INNODB_REDO_LOG_ARCHIVE = 57730
const INNODB_REDO_LOG_ENABLE = 57731
const NDB_STORED_USER = 57732
const PASSWORDLESS_USER_ADMIN = 57733
const PERSIST_RO_VARIABLES_ADMIN = 57734
const REPLICATION_APPLIER = 57735
const REPLICATION_SLAVE_ADMIN = 57736
const RESOURCE_GROUP_ADMIN = 57737
const RESOURCE_GROUP_USER = 57738
const ROLE_ADMIN = 57739
const SENSITIVE_VARIABLES_OBSERVER = 57740
const SESSION_VARIABLES_ADMIN = 57741
const SET_USER_ID = 57742
const SHOW_ROUTINE = 57743
const SKIP_QUERY_REWRITE = 57744
const SYSTEM_VARIABLES_ADMIN = 57745
const TABLE_ENCRYPTION_ADMIN = 57746
const TP_CONNECTION_ADMIN = 57747
const VERSION_TOKEN_ADMIN = 57748
const XA_RECOVER_ADMIN = 57749
const REPLICA = 57750
const REPLICAS = 57751
const SOURCE = 57752
const STOP = 57753
const RESET = 57754
const FILTER = 57755
const LOG = 57756
const MASTER = 57757
const SOURCE_HOST = 57758
const SOURCE_SSL = 57759
const SOURCE_USER = 57760
const SOURCE_PASSWORD = 57761
const SOURCE_PORT = 57762
const SOURCE_CONNECT_RETRY = 57763
const SOURCE_RETRY_COUNT = 57764
const SOURCE_AUTO_POSITION = 57765
const REPLICATE_DO_TABLE = 57766
const REPLICATE_IGNORE_TABLE = 57767
const IO_THREAD = 57768
const SQL_THREAD = 57769
const BEGIN = 57770
const START = 57771
const TRANSACTION = 57772
const COMMIT = 57773
const ROLLBACK = 57774
const SAVEPOINT = 57775
const WORK = 57776
const RELEASE = 57777
const CHAIN = 57778
const CONSISTENT = 57779
const SNAPSHOT = 57780
const BIT = 57781
const TINYINT = 57782
const SMALLINT = 57783
const MEDIUMINT = 57784
const INT = 57785
const INTEGER = 57786
const BIGINT = 57787
const INTNUM = 57788
const SERIAL = 57789
const INT1 = 57790
const INT2 = 57791
const INT3 = 57792
const INT4 = 57793
const INT8 = 57794
const REAL = 57795
const DOUBLE = 57796
const FLOAT_TYPE = 57797
const DECIMAL = 57798
const NUMERIC = 57799
const DEC = 57800
const FIXED = 57801
const PRECISION = 57802
const TIME = 57803
const TIMESTAMP = 57804
const DATETIME = 57805
const CHAR = 57806
const VARCHAR = 57807
const BOOL = 57808
const CHARACTER = 57809
const VARBINARY = 57810
const NCHAR = 57811
const NVARCHAR = 57812
const NATIONAL = 57813
const VARYING = 57814
const VARCHARACTER = 57815
const TEXT = 57816
const TINYTEXT = 57817
const MEDIUMTEXT = 57818
const LONGTEXT = 57819
const LONG = 57820
const BLOB = 57821
const TINYBLOB = 57822
const MEDIUMBLOB = 57823
const LONGBLOB = 57824
const JSON = 57825
const ENUM = 57826
const GEOMETRY = 57827
const POINT = 57828
const LINESTRING = 57829
const POLYGON = 57830
const GEOMETRYCOLLECTION = 57831
const MULTIPOINT = 57832
const MULTILINESTRING = 57833
const MULTIPOLYGON = 57834
const LOCAL = 57835
const LOW_PRIORITY = 57836
const SKIP = 57837
const LOCKED = 57838
const NULLX = 57839
const AUTO_INCREMENT = 57840
const APPROXNUM = 57841
const SIGNED = 57842
const UNSIGNED = 57843
const ZEROFILL = 57844
const SRID = 57845
const COLLATION = 57846
const DATABASES = 57847
const SCHEMAS = 57848
const TABLES = 57849
const FULL = 57850
const PROCESSLIST = 57851
const COLUMNS = 57852
const FIELDS = 57853
const ENGINES = 57854
const PLUGINS = 57855
const NAMES = 57856
const CHARSET = 57857
const GLOBAL = 57858
const SESSION = 57859
const ISOLATION = 57860
const LEVEL = 57861
const READ = 57862
const WRITE = 57863
const ONLY = 57864
const REPEATABLE = 57865
const COMMITTED = 57866
const UNCOMMITTED = 57867
const SERIALIZABLE = 57868
const ENCRYPTION = 57869
const CURRENT_TIMESTAMP = 57870
const NOW = 57871
const DATABASE = 57872
const CURRENT_DATE = 57873
const CURRENT_USER = 57874
const CURRENT_TIME = 57875
const LOCALTIME = 57876
const LOCALTIMESTAMP = 57877
const UTC_DATE = 57878
const UTC_TIME = 57879
const UTC_TIMESTAMP = 57880
const REPLACE = 57881
const CONVERT = 57882
const CAST = 57883
const POSITION = 57884
const SUBSTR = 57885
const SUBSTRING = 57886
const TRIM = 57887
const LEADING = 57888
const TRAILING = 57889
const BOTH = 57890
const GROUP_CONCAT = 57891
const SEPARATOR = 57892
const TIMESTAMPADD = 57893
const TIMESTAMPDIFF = 57894
const EXTRACT = 57895
const GET_FORMAT = 57896
const OVER = 57897
const WINDOW = 57898
const GROUPING = 57899
const CURRENT = 57900
const AVG = 57901
const BIT_AND = 57902
const BIT_OR = 57903
const BIT_XOR = 57904
const COUNT = 57905
const JSON_ARRAYAGG = 57906
const JSON_OBJECTAGG = 57907
const MAX = 57908
const MIN = 57909
const STDDEV_POP = 57910
const STDDEV = 57911
const STD = 57912
const STDDEV_SAMP = 57913
const SUM = 57914
const VAR_POP = 57915
const VARIANCE = 57916
const VAR_SAMP = 57917
const CUME_DIST = 57918
const DENSE_RANK = 57919
const FIRST_VALUE = 57920
const LAG = 57921
const LAST_VALUE = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const ROW_NUMBER = 57926
const PERCENT_RANK = 57927
const RANK = 57928
const DUAL = 57929
const JSON_TABLE = 57930
const PATH = 57931
const AVG_ROW_LENGTH = 57932
const CHECKSUM = 57933
const COMPACT = 57934
const COMPRESSED = 57935
const COMPRESSION = 57936
const DISK = 57937
const DIRECTORY = 57938
const DELAY_KEY_WRITE = 57939
const DYNAMIC = 57940
const ENGINE_ATTRIBUTE = 57941
const ENCRYPTED = 57942
const ENCRYPTION_KEY_ID = 57943
const HASH = 57944
const INSERT_METHOD = 57945
const ITEF_QUOTES = 57946
const LIST = 57947
const MIN_ROWS = 57948
const MAX_ROWS = 57949
const PACK_KEYS = 57950
const MEMORY = 57951
const PAGE_CHECKSUM = 57952
const PAGE_COMPRESSED = 57953
const PAGE_COMPRESSION_LEVEL = 57954
const PARTITIONS = 57955
const REDUNDANT = 57956
const ROW_FORMAT = 57957
const SECONDARY_ENGINE = 57958
const SECONDARY_ENGINE_ATTRIBUTE = 57959
const STATS_AUTO_RECALC = 57960
const STATS_PERSISTENT = 57961
const STATS_SAMPLE_PAGES = 57962
const STORAGE = 57963
const SUBPARTITION = 57964
const SUBPARTITIONS = 57965
const TABLE_CHECKSUM = 57966
const TRANSACTIONAL = 57967
const VERSIONING = 57968
const YES = 57969
const PREPARE = 57970
const DEALLOCATE = 57971
const MATCH = 57972
const AGAINST = 57973
const BOOLEAN = 57974
const LANGUAGE = 57975
const WITH = 57976
const QUERY = 57977
const EXPANSION = 57978
const MICROSECOND = 57979
const SECOND = 57980
const MINUTE = 57981
const HOUR = 57982
const DAY = 57983
const WEEK = 57984
const MONTH = 57985
const QUARTER = 57986
const YEAR = 57987
const SECOND_MICROSECOND = 57988
const MINUTE_MICROSECOND = 57989
const MINUTE_SECOND = 57990
const HOUR_MICROSECOND = 57991
const HOUR_SECOND = 57992
const HOUR_MINUTE = 57993
const DAY_MICROSECOND = 57994
const DAY_SECOND = 57995
const DAY_MINUTE = 57996
const DAY_HOUR = 57997
const YEAR_MONTH = 57998
const NAME = 57999
const SYSTEM = 58000
const ACCESSIBLE = 58001
const ASENSITIVE = 58002
const CUBE = 58003
const DELAYED = 58004
const DISTINCTROW = 58005
const EMPTY = 58006
const FLOAT4 = 58007
const FLOAT8 = 58008
const GET = 58009
const HIGH_PRIORITY = 58010
const INSENSITIVE = 58011
const IO_AFTER_GTIDS = 58012
const IO_BEFORE_GTIDS = 58013
const LINEAR = 58014
const MASTER_BIND = 58015
const MASTER_SSL_VERIFY_SERVER_CERT = 58016
const MIDDLEINT = 58017
const PURGE = 58018
const READ_WRITE = 58019
const RLIKE = 58020
const SENSITIVE = 58021
const SPECIFIC = 58022
const SQL_BIG_RESULT = 58023
const SQL_SMALL_RESULT = 58024
const UNUSED = 58025
const DESCRIPTION = 58026
const LATERAL = 58027
const MEMBER = 58028
const RECURSIVE = 58029
const BUCKETS = 58030
const CLONE = 58031
const COMPONENT = 58032
const DEFINITION = 58033
const ENFORCED = 58034
const NOT_ENFORCED = 58035
const EXCLUDE = 58036
const GEOMCOLLECTION = 58037
const GET_MASTER_PUBLIC_KEY = 58038
const HISTOGRAM = 58039
const HISTORY = 58040
const INACTIVE = 58041
const INVISIBLE = 58042
const MASTER_COMPRESSION_ALGORITHMS = 58043
const MASTER_PUBLIC_KEY_PATH = 58044
const MASTER_TLS_CIPHERSUITES = 58045
const MASTER_ZSTD_COMPRESSION_LEVEL = 58046
const NESTED = 58047
const NETWORK_NAMESPACE = 58048
const NOWAIT = 58049
const NULLS = 58050
const OJ = 58051
const OLD = 58052
const ORDINALITY = 58053
const ORGANIZATION = 58054
const OTHERS = 58055
const PERSIST = 58056
const PERSIST_ONLY = 58057
const PRIVILEGE_CHECKS_USER = 58058
const PROCESS = 58059
const REFERENCE = 58060
const REQUIRE_ROW_FORMAT = 58061
const RESOURCE = 58062
const RESPECT = 58063
const RESTART = 58064
const RETAIN = 58065
const SECONDARY = 58066
const SECONDARY_LOAD = 58067
const SECONDARY_UNLOAD = 58068
const THREAD_PRIORITY = 58069
const TIES = 58070
const VCPU = 58071
const VISIBLE = 58072
const INFILE = 58073
const ACTIVE = 58074
const AGGREGATE = 58075
const ANY = 58076
const ARRAY = 58077
const ASCII = 58078
const AT = 58079
const AUTOEXTEND_SIZE = 58080
const GENERATED = 58081
const ALWAYS = 58082
const STORED = 58083
const VIRTUAL = 58084
const NVAR = 58085
const PASSWORD_LOCK = 58086

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"RETURNING",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	764, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	200, 1812,
	201, 1833,
	-2, 335,
	-1, 62,
	243, 1185,
	244, 1185,
	-2, 1174,
	-1, 90,
	272, 335,
	-2, 1818,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 545,
	1, 2516,
	6, 2516,
	7, 2516,
	29, 2516,
	188, 2516,
	764, 2516,
	-2, 1220,
	-1, 558,
	188, 1843,
	-2, 1837,
	-1, 559,
	188, 1844,
	-2, 1838,
	-1, 663,
	1, 686,
	764, 686,
	-2, 684,
	-1, 672,
	1, 1326,
	8, 1326,
	9, 1326,
	10, 1326,
	17, 1326,
	18, 1326,
	19, 1326,
	20, 1326,
	22, 1326,
	24, 1326,
	26, 1326,
	35, 1326,
	36, 1326,
	65, 1326,
	66, 1326,
	67, 1326,
	68, 1326,
	69, 1326,
	71, 1326,
	72, 1326,
	75, 1326,
	76, 1326,
	78, 1326,
	79, 1326,
	97, 1326,
	527, 1326,
	575, 1326,
	653, 1326,
	764, 1326,
	-2, 1827,
	-1, 677,
	1, 1434,
	8, 1434,
	9, 1434,
	10, 1434,
	17, 1434,
	18, 1434,
	19, 1434,
	20, 1434,
	22, 1434,
	24, 1434,
	26, 1434,
	35, 1434,
	36, 1434,
	65, 1434,
	66, 1434,
	67, 1434,
	68, 1434,
	69, 1434,
	71, 1434,
	72, 1434,
	75, 1434,
	76, 1434,
	78, 1434,
	79, 1434,
	97, 1434,
	527, 1434,
	575, 1434,
	653, 1434,
	764, 1434,
	-2, 1827,
	-1, 705,
	188, 2212,
	-2, 1448,
	-1, 738,
	188, 2320,
	-2, 1718,
	-1, 739,
	188, 2402,
	-2, 1450,
	-1, 740,
	188, 2232,
	-2, 1451,
	-1, 809,
	188, 2183,
	-2, 1682,
	-1, 812,
	188, 2198,
	-2, 1600,
	-1, 813,
	188, 2201,
	-2, 1600,
	-1, 814,
	188, 2412,
	-2, 1600,
	-1, 816,
	188, 2199,
	-2, 1600,
	-1, 817,
	188, 2413,
	-2, 1600,
	-1, 818,
	188, 2414,
	-2, 1600,
	-1, 877,
	188, 2200,
	-2, 1600,
	-1, 960,
	188, 2300,
	-2, 1600,
	-1, 961,
	188, 2301,
	-2, 1600,
	-1, 1074,
	110, 2529,
	121, 2529,
	188, 2529,
	-2, 1794,
	-1, 1075,
	110, 2660,
	121, 2660,
	188, 2660,
	-2, 1795,
	-1, 1080,
	110, 2557,
	121, 2557,
	188, 2557,
	-2, 1796,
	-1, 1081,
	110, 2608,
	121, 2608,
	188, 2608,
	-2, 1797,
	-1, 1082,
	110, 2609,
	121, 2609,
	188, 2609,
	-2, 1798,
	-1, 1083,
	110, 2456,
	121, 2456,
	188, 2456,
	-2, 1803,
	-1, 1085,
	110, 2585,
	121, 2585,
	188, 2585,
	-2, 1805,
	-1, 1257,
	454, 1199,
	-2, 1203,
	-1, 1259,
	454, 1199,
	-2, 1203,
	-1, 1384,
	1, 686,
	764, 686,
	-2, 684,
	-1, 1386,
	1, 687,
	764, 687,
	-2, 684,
	-1, 1409,
	1, 1327,
	8, 1327,
	9, 1327,
	10, 1327,
	17, 1327,
	18, 1327,
	19, 1327,
	20, 1327,
	22, 1327,
	24, 1327,
	26, 1327,
	35, 1327,
	36, 1327,
	65, 1327,
	66, 1327,
	67, 1327,
	68, 1327,
	69, 1327,
	71, 1327,
	72, 1327,
	75, 1327,
	76, 1327,
	78, 1327,
	79, 1327,
	97, 1327,
	527, 1327,
	575, 1327,
	653, 1327,
	764, 1327,
	-2, 1827,
	-1, 1420,
	1, 1434,
	8, 1434,
	9, 1434,
	10, 1434,
	17, 1434,
	18, 1434,
	19, 1434,
	20, 1434,
	22, 1434,
	24, 1434,
	26, 1434,
	35, 1434,
	36, 1434,
	65, 1434,
	66, 1434,
	67, 1434,
	68, 1434,
	69, 1434,
	71, 1434,
	72, 1434,
	75, 1434,
	76, 1434,
	78, 1434,
	79, 1434,
	97, 1434,
	527, 1434,
	575, 1434,
	653, 1434,
	764, 1434,
	-2, 1827,
	-1, 1715,
	1, 686,
	764, 686,
	-2, 684,
	-1, 1717,
	1, 686,
	764, 686,
	-2, 684,
	-1, 2276,
	188, 1847,
	-2, 1694,
	-1, 2279,
	188, 2748,
	-2, 1697,
	-1, 2280,
	188, 2749,
	-2, 1698,
	-1, 2281,
	188, 1846,
	-2, 1842,
	-1, 2431,
	76, 98,
	78, 98,
	-2, 102,
	-1, 2449,
	188, 2324,
	-2, 1799,
	-1, 2456,
	1, 907,
	764, 907,
	-2, 684,
	-1, 2645,
	50, 928,
	207, 931,
	209, 928,
	210, 928,
	211, 928,
	-2, 1045,
	-1, 2727,
	8, 59,
	9, 59,
	10, 59,
	-2, 1480,
	-1, 2744,
	1, 1372,
	8, 1372,
	9, 1372,
	10, 1372,
	17, 1372,
	18, 1372,
	19, 1372,
	20, 1372,
	22, 1372,
	24, 1372,
	26, 1372,
	35, 1372,
	36, 1372,
	65, 1372,
	66, 1372,
	67, 1372,
	68, 1372,
	69, 1372,
	71, 1372,
	72, 1372,
	75, 1372,
	76, 1372,
	78, 1372,
	79, 1372,
	97, 1372,
	527, 1372,
	575, 1372,
	653, 1372,
	764, 1372,
	-2, 1827,
	-1, 2922,
	213, 1039,
	217, 1039,
	-2, 795,
	-1, 2923,
	213, 1109,
	217, 1109,
	-2, 796,
	-1, 3194,
	1, 1434,
	8, 1434,
	9, 1434,
	10, 1434,
	17, 1434,
	18, 1434,
	19, 1434,
	20, 1434,
	22, 1434,
	24, 1434,
	26, 1434,
	35, 1434,
	36, 1434,
	65, 1434,
	66, 1434,
	67, 1434,
	68, 1434,
	69, 1434,
	71, 1434,
	72, 1434,
	75, 1434,
	76, 1434,
	78, 1434,
	79, 1434,
	97, 1434,
	527, 1434,
	575, 1434,
	653, 1434,
	764, 1434,
	-2, 1827,
	-1, 3298,
	1, 1750,
	26, 1750,
	75, 1750,
	764, 1750,
	-2, 1827,
	-1, 3501,
	50, 928,
	207, 931,
	209, 928,
	210, 928,
	211, 928,
	-2, 1045,
	-1, 3521,
	207, 932,
	213, 1039,
	217, 1039,
	-2, 930,
	-1, 3712,
	78, 2095,
	79, 2095,
	188, 2095,
	-2, 1228,
	-1, 3713,
	77, 1761,
	253, 1761,
	-2, 2144,
	-1, 3714,
	77, 1762,
	253, 1762,
	-2, 2714,
	-1, 3960,
	8, 59,
	9, 59,
	10, 59,
	-2, 1757,
	-1, 4106,
	47, 1858,
	-2, 1856,
	-1, 4367,
	8, 59,
	9, 59,
	10, 59,
	-2, 1758,
	-1, 4387,
	316, 432,
	-2, 1914,
	-1, 4388,
	316, 433,
	-2, 1955,
	-1, 4389,
	316, 434,
	-2, 2132,
	-1, 4626,
	105, 418,
	107, 418,
	109, 418,
	-2, 79,
	-1, 4707,
	107, 425,
	108, 425,
	109, 425,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 83404

var yyAct = [...]int{
	751, 44, 4680, 4643, 4580, 4617, 697, 4630, 4618, 570,
	3794, 4370, 4582, 2939, 4244, 3, 1412, 2446, 4247, 8,
	4359, 4246, 7, 1190, 4100, 4245, 6, 4495, 4278, 28,
	4248, 9, 707, 4381, 493, 711, 2369, 4008, 4102, 4095,
	3306, 4065, 4393, 4380, 3363, 44, 3987, 3274, 4496, 4372,
	4221, 2723, 656, 1634, 4394, 1419, 724, 2938, 3920, 108,
	3657, 107, 2370, 4113, 4145, 4101, 4357, 3913, 2980, 3627,
	3508, 2660, 1537, 3871, 3872, 4104, 1749, 3047, 4050, 2306,
	688, 3907, 549, 552, 3710, 3718, 3954, 1460, 3184, 3863,
	2919, 2473, 3476, 3463, 652, 3441, 1171, 674, 2184, 3817,
	101, 1467, 597, 3931, 2537, 2251, 3006, 2711, 3800, 3364,
	2920, 3906, 4371, 3307, 3702, 750, 1751, 3513, 3622, 1150,
	1414, 3120, 2926, 2927, 2992, 3083, 1218, 3633, 3601, 2175,
	2950, 815, 2477, 3589, 2505, 1565, 1748, 134, 2643, 3580,
	3020, 1416, 1162, 2642, 105, 2463, 2875, 2609, 3461, 3167,
	640, 2853, 1079, 3182, 1379, 2479, 1158, 2636, 716, 710,
	1267, 2876, 1390, 1207, 2728, 3236, 2567, 1411, 2640, 698,
	1418, 1754, 2176, 1268, 2154, 1566, 2048, 2113, 1725, 2239,
	2501, 2973, 1244, 2237, 1076, 1448, 693, 1615, 1611, 2359,
	2283, 2591, 1456, 2714, 2878, 672, 1451, 2166, 1706, 2118,
	1301, 1279, 2088, 1614, 1641, 1385, 3087, 1153, 2433, 1072,
	1073, 1475, 2244, 681, 669, 1397, 1389, 668, 1388, 1387,
	1189, 655, 573, 1166, 1263, 1173, 572, 1179, 1180, 2080,
	714, 2047, 3719, 2081, 1718, 1278, 3283, 555, 1177, 664,
	4707, 129, 4701, 125, 2322, 4688, 4672, 4658, 4626, 691,
	4624, 4595, 1154, 4592, 2916, 4591, 704, 4590, 490, 4575,
	4573, 4475, 4471, 4466, 100, 4147, 4146, 3379, 2111, 2522,
	3635, 1181, 4341, 2752, 2554, 3883, 2553, 4028, 3511, 1391,
	3454, 3878, 3879, 3876, 3877, 3423, 3424, 2888, 4696, 3509,
	4651, 4613, 4611, 4026, 86, 4650, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 3882, 4029, 3457, 1439, 4612,
	3362, 3282, 94, 687, 3455, 3133, 2984, 1728, 4408, 99,
	4407, 661, 4616, 2877, 97, 565, 4355, 678, 4557, 2672,
	4227, 2551, 666, 1353, 4036, 3456, 2885, 71, 3004, 4507,
	42, 3801, 2040, 3988, 4373, 42, 4313, 47, 2551, 3901,
	3183, 3803, 654, 1202, 4354, 4226, 42, 42, 3990, 3264,
	3582, 122, 504, 3772, 2238, 3569, 4644, 4060, 2644, 569,
	3769, 3618, 3857, 4415, 3861, 3333, 3332, 1183, 2371, 2383,
	2381, 2380, 2379, 2382, 2378, 2377, 2376, 2372, 2373, 2390,
	2374, 2389, 2388, 2375, 2387, 2386, 2385, 2384, 3983, 4430,
	3904, 3303, 88, 2946, 3143, 3304, 89, 3142, 2953, 4213,
	42, 89, 3984, 1149, 3905, 2964, 4168, 4340, 4109, 2829,
	3694, 2584, 89, 89, 2958, 2957, 2383, 2381, 2380, 2379,
	2382, 2378, 2377, 2376, 3297, 1170, 2390, 4363, 2389, 2388,
	4363, 2387, 2386, 2385, 2384, 544, 2889, 1354, 3602, 2954,
	2867, 3318, 3319, 2866, 2117, 3303, 2868, 2898, 4358, 3304,
	114, 112, 113, 3404, 1066, 2960, 2590, 2936, 3806, 3405,
	3406, 2443, 2444, 1257, 4360, 2937, 89, 4360, 3317, 3989,
	2115, 2116, 2157, 2158, 138, 2753, 4120, 1616, 567, 1617,
	2625, 2442, 4432, 2887, 2910, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 4342, 667, 1500,
	3326, 3804, 3805, 3807, 3808, 3809, 2951, 2448, 2940, 1240,
	3655, 1241, 1242, 1243, 2135, 1331, 1251, 1222, 1223, 96,
	564, 1226, 126, 89, 96, 563, 148, 2962, 145, 4364,
	146, 1339, 4364, 2114, 3932, 96, 96, 2192, 1242, 1243,
	2475, 2476, 1399, 1402, 1403, 1404, 1400, 3217, 1401, 1406,
	136, 3939, 2715, 2716, 2952, 649, 1312, 1224, 1225, 2589,
	2209, 1298, 1403, 1404, 4448, 2490, 150, 149, 3937, 2489,
	3540, 2956, 2494, 3237, 3679, 2959, 2905, 1165, 2483, 2482,
	1161, 2484, 3675, 2949, 3677, 4650, 4612, 4610, 2621, 96,
	1227, 2159, 3106, 2573, 137, 2572, 2480, 1252, 1253, 153,
	2480, 2914, 1399, 1402, 1403, 1404, 1400, 542, 1401, 1406,
	539, 562, 2895, 644, 643, 3351, 2502, 1356, 1357, 2155,
	2156, 646, 4468, 128, 665, 4469, 1228, 4470, 645, 3482,
	3062, 4449, 2086, 132, 140, 139, 644, 4695, 1351, 1260,
	1348, 1352, 4651, 1150, 4649, 4648, 4613, 1380, 2165, 2999,
	4027, 2164, 1383, 2163, 597, 2162, 3240, 2161, 151, 2160,
	152, 1375, 642, 4093, 1410, 1415, 3003, 1335, 1336, 3195,
	1433, 1434, 1150, 3113, 1150, 1150, 1214, 3111, 1150, 108,
	3899, 136, 650, 2907, 4329, 4499, 4561, 3891, 1150, 3889,
	4560, 137, 141, 1213, 3040, 3112, 1509, 1511, 3110, 4511,
	1513, 1254, 731, 3448, 732, 734, 735, 736, 737, 3818,
	4054, 3480, 733, 2318, 3475, 1454, 4308, 3821, 1407, 2610,
	2613, 2611, 2612, 2614, 2615, 2616, 2617, 4306, 3044, 3819,
	3820, 1328, 1528, 4173, 4162, 3195, 1532, 1533, 1534, 1535,
	1536, 3634, 1540, 4172, 4498, 3195, 4467, 1314, 3829, 4569,
	3847, 3852, 2880, 3045, 2603, 130, 108, 131, 2394, 4412,
	2146, 1266, 4170, 2147, 2585, 1305, 4043, 1382, 3001, 142,
	4045, 1314, 3623, 3624, 3625, 3626, 1314, 2538, 3581, 3510,
	4040, 2892, 3827, 3451, 4424, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	4406, 1559, 1560, 1562, 1562, 1562, 1393, 1567, 1567, 1567,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1425, 663, 3325, 2881, 2883, 3511, 2315, 2886, 4023,
	2951, 2891, 1338, 2896, 2893, 2894, 543, 2897, 2890, 1409,
	2900, 2899, 2901, 4450, 2902, 2903, 2904, 1221, 1567, 2906,
	2908, 2909, 2911, 2912, 2913, 3991, 147, 3545, 2884, 2915,
	2190, 2955, 3604, 4704, 566, 4674, 2948, 4164, 2917, 1479,
	4091, 3324, 3802, 3992, 678, 678, 3477, 1321, 2952, 4703,
	143, 3244, 3243, 3245, 3242, 2965, 4673, 2168, 3002, 3249,
	4670, 3241, 3238, 2597, 4634, 3239, 3112, 3247, 4588, 4361,
	3110, 4463, 4361, 3132, 4225, 4214, 4422, 1510, 2191, 4461,
	4462, 3246, 4577, 4414, 3860, 3105, 550, 1376, 3123, 3917,
	2193, 3186, 3632, 1568, 1569, 4334, 3187, 4205, 3248, 3250,
	3186, 1567, 1567, 3437, 2951, 4570, 4037, 3898, 1394, 3533,
	3005, 1319, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1216,
	559, 2951, 109, 127, 154, 3859, 3994, 87, 1561, 1563,
	1564, 1265, 1376, 1442, 1436, 4339, 1436, 1436, 109, 109,
	1436, 1435, 2879, 1440, 1440, 115, 1377, 1447, 1441, 1441,
	1347, 2087, 2952, 1601, 1405, 1259, 3993, 2486, 1261, 4121,
	2967, 2396, 2397, 2395, 2487, 3607, 3605, 2117, 2504, 2952,
	4169, 3603, 1405, 3890, 4042, 1320, 1215, 1316, 163, 4497,
	491, 503, 1324, 3888, 163, 1313, 553, 3606, 4039, 163,
	2148, 3450, 109, 2115, 2116, 1306, 4307, 4066, 1361, 639,
	4020, 4163, 1175, 1174, 1723, 1239, 4019, 1604, 163, 1317,
	1318, 1733, 1734, 1732, 1405, 4018, 731, 163, 732, 734,
	735, 736, 737, 4017, 4016, 4014, 733, 2318, 1178, 1713,
	163, 1178, 4015, 2935, 554, 1176, 1602, 1603, 4157, 4158,
	136, 163, 1164, 3251, 4586, 2171, 4581, 4024, 1079, 3439,
	2316, 2317, 4443, 1079, 1373, 3442, 3443, 3444, 3445, 3446,
	4376, 4377, 4584, 163, 639, 3442, 3443, 3444, 3445, 3446,
	3631, 2528, 2947, 2532, 2533, 491, 163, 136, 4242, 3547,
	3548, 662, 1315, 1322, 1323, 1325, 1326, 1327, 141, 1329,
	1330, 1150, 1332, 1333, 1334, 2172, 1337, 1371, 1340, 1341,
	1342, 1343, 1344, 2527, 4153, 108, 551, 107, 3628, 3629,
	3169, 2050, 551, 3177, 3179, 3178, 1255, 3404, 1066, 3171,
	3394, 3395, 3397, 3405, 3406, 3396, 3398, 3399, 3028, 3029,
	1727, 3546, 1236, 1237, 1238, 1235, 1472, 1473, 1471, 2119,
	3400, 3401, 3402, 3403, 597, 1472, 1473, 1471, 1234, 1750,
	1698, 1699, 1700, 1701, 1702, 1474, 3534, 3535, 3536, 1233,
	1232, 2315, 4420, 597, 1474, 4323, 1264, 548, 3864, 3865,
	2040, 3590, 2082, 1608, 3591, 4237, 3592, 1626, 2121, 1758,
	1165, 2120, 4697, 138, 2470, 4513, 4512, 1708, 3102, 1165,
	1631, 3090, 3519, 2539, 4684, 3090, 1726, 1619, 1421, 1423,
	3100, 1731, 1620, 3099, 1150, 1710, 1711, 1150, 4710, 1367,
	4705, 3368, 1703, 1722, 4689, 4661, 1172, 3122, 2089, 1729,
	641, 108, 2090, 2094, 4312, 2092, 3122, 667, 2472, 2091,
	1366, 1362, 1363, 1364, 1365, 1368, 1369, 1370, 1372, 2472,
	1310, 2472, 2521, 1756, 1704, 4196, 2551, 1605, 1606, 4085,
	3897, 695, 3894, 3630, 3473, 3107, 3039, 3035, 2055, 2056,
	551, 3009, 3008, 2598, 2152, 1738, 1736, 2075, 1262, 1169,
	551, 2472, 2224, 2223, 597, 123, 2222, 1168, 1408, 4583,
	4585, 4088, 1740, 3468, 2051, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1392, 1191, 2063,
	3172, 1182, 2064, 2065, 2066, 488, 2472, 3012, 2108, 2145,
	3185, 2070, 3011, 3098, 2540, 3654, 3880, 2038, 2053, 1515,
	1516, 2078, 1421, 1423, 1627, 2042, 2046, 2800, 2128, 2797,
	1422, 3316, 3037, 3036, 2873, 1628, 674, 674, 674, 674,
	1514, 89, 3518, 140, 139, 1512, 89, 2044, 2044, 2044,
	2044, 1150, 1714, 1721, 1712, 2181, 1415, 1709, 2218, 2177,
	1517, 2067, 1730, 2069, 2770, 108, 1309, 4593, 3367, 3173,
	108, 1746, 2217, 3048, 4682, 1747, 4472, 4683, 2471, 4681,
	1374, 2746, 2632, 2049, 3096, 3090, 2126, 2552, 2529, 2471,
	3093, 2471, 3121, 3092, 3097, 2106, 3116, 3096, 3090, 2438,
	2211, 3121, 1517, 3093, 3119, 2212, 3092, 3097, 4332, 163,
	2195, 2254, 2219, 1517, 2316, 2317, 2221, 1630, 1531, 651,
	1530, 2471, 2472, 1529, 3078, 491, 2666, 3077, 1480, 2084,
	2093, 1296, 2083, 1204, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 2074, 2123, 1500, 2099,
	2100, 2196, 1150, 2102, 1422, 1758, 2471, 1514, 2199, 2275,
	2669, 2667, 2662, 3090, 96, 4167, 108, 2664, 1165, 2105,
	2448, 3091, 2470, 2127, 3881, 2124, 4195, 2167, 2170, 2308,
	2307, 1540, 674, 4194, 163, 1500, 123, 1256, 2314, 2319,
	2241, 2311, 2863, 2313, 3089, 108, 2039, 2217, 3785, 3783,
	1515, 1516, 1515, 1516, 118, 3470, 1490, 2077, 2325, 1500,
	2328, 4203, 2169, 4444, 4445, 3079, 3080, 4441, 4442, 2281,
	2743, 2663, 2665, 2668, 2670, 4230, 4229, 2345, 2348, 4479,
	2186, 2220, 3873, 2568, 2363, 2361, 1430, 1431, 3953, 2284,
	2173, 2309, 3113, 2189, 2804, 2187, 2188, 674, 2391, 2392,
	2197, 2198, 121, 2200, 2185, 3497, 3496, 1430, 1431, 1424,
	3784, 639, 2210, 4031, 3385, 3383, 678, 678, 678, 678,
	3111, 3098, 2471, 3089, 163, 2447, 2644, 2261, 2854, 3090,
	1424, 3131, 3071, 3070, 1165, 1432, 678, 3091, 2470, 1079,
	3130, 3170, 2274, 120, 687, 163, 1474, 3129, 4187, 3128,
	4032, 700, 668, 1421, 1423, 1758, 1432, 695, 1158, 2453,
	4480, 3068, 3067, 2259, 3127, 1479, 3126, 3498, 2870, 2869,
	3125, 491, 3124, 3058, 1421, 1423, 3384, 2740, 2271, 2737,
	2247, 2243, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1490, 3072, 1627, 1500, 1245, 2562, 1230,
	3057, 3056, 2455, 1417, 2285, 1471, 1628, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 2281,
	3055, 1500, 1474, 3069, 3054, 96, 4664, 4631, 4663, 2282,
	2871, 1220, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2302, 2303, 2304, 2305, 2469, 3053, 2399,
	2404, 3052, 2406, 2547, 2460, 2409, 3051, 3207, 2290, 2620,
	2619, 2432, 678, 533, 2430, 1247, 2104, 2329, 2330, 2331,
	2332, 2333, 1272, 2288, 2289, 2287, 1185, 103, 1184, 3266,
	2511, 2512, 2513, 2514, 2515, 1422, 2497, 2498, 2499, 2485,
	2488, 2357, 2454, 2491, 2492, 2493, 2343, 2360, 2360, 2813,
	2351, 1246, 2563, 1231, 2545, 2546, 1422, 4687, 2436, 1472,
	1473, 1471, 2445, 2440, 2439, 1472, 1473, 1471, 2500, 2507,
	2508, 2509, 2510, 110, 4660, 116, 4693, 678, 1474, 2531,
	2459, 2457, 1219, 4571, 1474, 4517, 2516, 2481, 3007, 1716,
	4508, 3075, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1490, 1473, 1471, 1500, 1493, 1494, 1495,
	1496, 1497, 1490, 2503, 3828, 1500, 1249, 3822, 2312, 505,
	2129, 1258, 1474, 2132, 2133, 2134, 4535, 2136, 2137, 3033,
	2245, 2138, 3377, 4698, 2518, 2139, 3914, 1468, 2140, 1067,
	1068, 1069, 2141, 2142, 2548, 2143, 2144, 2336, 2337, 2338,
	2791, 1167, 2790, 2342, 4676, 2344, 2347, 2350, 695, 2355,
	2356, 2523, 4411, 2525, 2426, 2366, 508, 3204, 3195, 3761,
	3759, 2260, 1472, 1473, 1471, 519, 531, 532, 4709, 2398,
	3760, 2400, 2401, 2252, 2253, 4319, 2405, 3900, 2407, 2408,
	2245, 1474, 4699, 4310, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 3078, 4551, 2666, 3077,
	4304, 4382, 4548, 4516, 514, 4515, 521, 517, 4303, 4165,
	526, 527, 2767, 2768, 2769, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 4708, 4234, 1500,
	695, 89, 2669, 2667, 2662, 1484, 2368, 1487, 528, 2664,
	1472, 1473, 1471, 2286, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 4305, 1485, 1486, 1483, 4061, 4550, 4030, 695, 1474,
	4166, 4547, 3912, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 3610, 3608, 1500, 2256, 3911,
	163, 3910, 3909, 1472, 1473, 1471, 3609, 3079, 3080, 1164,
	3201, 4691, 3838, 2663, 2665, 2668, 2670, 3792, 3791, 3928,
	3558, 523, 1474, 2257, 3492, 3491, 2258, 1562, 1489, 1488,
	1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490,
	524, 3490, 1500, 3927, 1150, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 516, 3489, 1500, 2234, 4382, 2089, 4457,
	3488, 4456, 2090, 3429, 3380, 2092, 2978, 2236, 2976, 2091,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 2963, 1304, 1500, 1303, 4506, 2580, 3177, 3179,
	3178, 4692, 491, 2235, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 3453, 3452, 1500, 2230,
	639, 639, 515, 529, 3766, 639, 4505, 2588, 4675, 530,
	2232, 4669, 2097, 1164, 163, 1410, 1472, 1473, 1471, 639,
	639, 1472, 1473, 1471, 4597, 163, 1383, 4640, 4382, 491,
	491, 491, 491, 2233, 2564, 1474, 2231, 4589, 4473, 1391,
	1474, 1472, 1473, 1471, 163, 163, 163, 163, 163, 4519,
	163, 2267, 2269, 2270, 674, 3177, 3179, 3178, 2560, 2268,
	1474, 506, 4454, 2732, 2733, 2734, 163, 163, 2607, 3764,
	2566, 639, 1472, 1473, 1471, 4453, 2226, 163, 4399, 2792,
	4460, 1457, 1472, 1473, 1471, 4398, 2229, 2228, 1384, 2096,
	3268, 1474, 2570, 4392, 1481, 4391, 4171, 4068, 522, 509,
	510, 1474, 536, 3701, 3537, 2725, 511, 513, 3615, 507,
	535, 534, 3023, 2227, 2731, 3022, 2771, 1164, 2979, 3613,
	3177, 3179, 3178, 2574, 1454, 1454, 2559, 2606, 2558, 1758,
	639, 639, 639, 2275, 2310, 1164, 2575, 1472, 1473, 1471,
	2710, 2633, 1538, 1276, 2098, 2579, 2085, 1745, 1472, 1473,
	1471, 1744, 1717, 2587, 1715, 2595, 1474, 525, 1299, 3177,
	3179, 3178, 2594, 2225, 561, 1275, 639, 1474, 4504, 4503,
	3177, 3179, 3178, 4500, 2726, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 4429, 2602, 1500, 3263, 2605,
	4409, 4349, 2576, 2281, 163, 163, 3926, 2650, 4343, 163,
	1558, 1164, 2765, 2766, 4236, 2624, 4235, 4161, 2626, 4160,
	2629, 4141, 4092, 163, 639, 4044, 163, 163, 163, 163,
	4041, 4013, 3982, 3981, 3949, 3903, 3902, 3837, 163, 2641,
	2730, 3836, 3835, 2719, 3834, 3825, 163, 3824, 3823, 3790,
	163, 3787, 3762, 2284, 3757, 678, 3748, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 3744,
	3739, 1500, 3738, 3737, 3611, 3600, 2454, 3588, 3584, 2628,
	3577, 3576, 3575, 3495, 674, 3487, 3486, 674, 3485, 3411,
	3216, 3215, 3213, 2757, 678, 2755, 2756, 3073, 2974, 2872,
	163, 1527, 1526, 1525, 2627, 2586, 2557, 491, 2776, 2101,
	4395, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 1758, 3697, 1500, 1079, 2794, 2772, 2745,
	695, 695, 2735, 2736, 4210, 695, 2738, 2739, 3638, 4559,
	2741, 2742, 1739, 1164, 1345, 1164, 3774, 4542, 1164, 3774,
	4419, 3774, 4417, 3638, 695, 1164, 2780, 4075, 695, 4067,
	1164, 1164, 1164, 3696, 3774, 4239, 3638, 4149, 2285, 4006,
	163, 1380, 163, 3638, 4144, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 1756, 3262, 1500,
	4089, 695, 3638, 4048, 4005, 2773, 2774, 2775, 2812, 3195,
	695, 2631, 695, 3638, 3924, 2040, 3855, 2040, 3854, 2930,
	2933, 3774, 3773, 3021, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 3638, 3637, 1500, 3027,
	3421, 3420, 3431, 2857, 3417, 3418, 163, 163, 163, 2925,
	3414, 2928, 2929, 597, 3417, 3416, 2745, 695, 2600, 2599,
	3413, 2859, 2334, 2582, 2860, 1704, 2334, 695, 2921, 2805,
	2806, 2807, 1726, 3021, 1164, 2213, 695, 2434, 3412, 2882,
	2434, 1633, 1632, 3303, 2213, 1619, 2861, 3304, 3015, 2864,
	3703, 102, 2858, 3722, 2040, 2249, 1310, 2966, 2968, 2828,
	2830, 2874, 2969, 2970, 89, 2971, 2972, 2837, 2838, 2839,
	4642, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 2856, 678, 1500, 2181, 678, 2536, 2150,
	2177, 3065, 3722, 2149, 3722, 2982, 1308, 2435, 2975, 2437,
	2435, 1307, 2040, 2334, 1308, 2977, 4350, 2260, 4223, 2745,
	2248, 1164, 163, 3025, 2781, 2782, 2783, 2784, 2785, 3965,
	3195, 3638, 2601, 2213, 3432, 3419, 2213, 3214, 3050, 2441,
	163, 2823, 2535, 2821, 3000, 2820, 163, 163, 639, 639,
	639, 163, 2810, 2745, 2618, 2604, 2103, 2556, 2551, 2550,
	2250, 1310, 1378, 3019, 2112, 3041, 2040, 1737, 3202, 1735,
	1613, 3205, 1381, 89, 3208, 4447, 4418, 2724, 3024, 4190,
	4188, 4007, 3782, 3779, 2478, 2044, 2506, 2480, 3189, 3061,
	3060, 2502, 2918, 2715, 2716, 674, 3034, 1314, 2530, 3084,
	3095, 2054, 3094, 3101, 3687, 3104, 3088, 3193, 2496, 3081,
	2495, 1758, 1707, 3117, 3115, 2275, 3038, 1295, 3168, 2981,
	3839, 2569, 1211, 3059, 3043, 1210, 4679, 3046, 2073, 4678,
	3209, 4655, 4653, 4647, 3064, 3176, 4646, 4619, 3076, 3225,
	4614, 4608, 4606, 4553, 4552, 3919, 3915, 3703, 3191, 3430,
	3425, 3018, 3017, 2997, 2718, 3026, 3197, 3198, 3199, 2712,
	3275, 2549, 2151, 2122, 3030, 3031, 1311, 2208, 2205, 2203,
	2722, 2721, 2207, 2206, 2204, 2281, 1538, 2720, 2202, 2201,
	4439, 4353, 538, 3218, 3300, 3305, 3686, 2754, 133, 674,
	4192, 2762, 4401, 2761, 1461, 1462, 4127, 3895, 108, 3870,
	3299, 3252, 3777, 3527, 3254, 3526, 3410, 1461, 1462, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 3310, 3308, 1500, 3409, 1464, 1459, 4218, 3408, 2934,
	1466, 1465, 3196, 1463, 3220, 4402, 2924, 4348, 1464, 4347,
	4107, 3265, 3225, 1466, 1465, 144, 1463, 4345, 3212, 540,
	541, 4344, 4105, 4156, 4155, 3210, 4047, 560, 1413, 43,
	2578, 4, 3222, 2577, 1538, 3223, 2095, 3109, 3301, 3108,
	3227, 4033, 4034, 3063, 1449, 4478, 3887, 3378, 3733, 3538,
	3382, 2634, 1629, 1293, 3391, 3226, 1450, 1277, 3253, 1274,
	1273, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 43, 1217, 1500, 106, 4635, 4078, 4077,
	1391, 2252, 2253, 3832, 1380, 3956, 3386, 3458, 2524, 1270,
	1271, 3833, 1359, 1350, 3830, 678, 3359, 1408, 3312, 4351,
	3314, 3315, 3831, 4309, 4051, 3795, 3781, 3427, 2323, 2324,
	3390, 3447, 1269, 3176, 2174, 3370, 3371, 3372, 700, 3373,
	3374, 163, 2263, 2264, 2265, 597, 3313, 2097, 2096, 1445,
	1446, 1443, 1444, 3955, 3229, 1437, 1438, 4523, 2760, 3320,
	2882, 4522, 4521, 4010, 2623, 3376, 2759, 3433, 1250, 163,
	689, 4436, 3255, 4435, 3256, 3257, 4434, 3258, 3259, 4433,
	4219, 3260, 4182, 2516, 3358, 4174, 3369, 4125, 3276, 3277,
	3278, 3279, 3280, 3281, 3935, 3082, 690, 3269, 3270, 3271,
	3272, 102, 3934, 3660, 3021, 1164, 3460, 4657, 4656, 678,
	3520, 1538, 4474, 163, 3850, 163, 3481, 2340, 2341, 1164,
	2986, 2987, 2988, 4656, 1164, 3479, 3478, 3049, 3449, 2822,
	2801, 2798, 3388, 3389, 2764, 2068, 1469, 3366, 1209, 1208,
	4657, 4232, 3407, 3415, 2246, 682, 686, 685, 4539, 4261,
	65, 639, 639, 4263, 23, 4262, 22, 3302, 3428, 4264,
	24, 4265, 25, 4259, 18, 4258, 17, 4257, 16, 4260,
	19, 104, 3438, 3284, 3285, 3286, 3287, 3288, 3289, 3290,
	3291, 3292, 3293, 3294, 4256, 15, 68, 3464, 4250, 11,
	4285, 39, 3469, 4283, 37, 4400, 3474, 2452, 4282, 36,
	1, 3516, 3620, 4338, 3467, 3466, 3483, 4286, 40, 4281,
	32, 4280, 31, 163, 163, 4279, 30, 676, 3484, 1164,
	4276, 27, 163, 3522, 3523, 3524, 4275, 26, 4255, 14,
	3529, 3530, 50, 3532, 2596, 3081, 4252, 13, 2130, 3500,
	596, 3499, 3816, 3517, 3493, 3494, 1164, 3550, 4251, 12,
	3555, 3587, 3815, 3549, 1704, 3621, 3685, 2921, 2650, 4249,
	10, 3440, 2998, 4333, 4204, 3826, 3525, 2709, 3176, 1724,
	4022, 1188, 2534, 1300, 4346, 4106, 4216, 4215, 2517, 3799,
	3798, 2991, 3653, 3528, 2990, 3692, 1294, 2583, 2110, 3085,
	3086, 3010, 3074, 4180, 3658, 2622, 3541, 2153, 3543, 2608,
	1360, 2456, 3515, 3636, 3570, 2461, 3572, 3585, 3856, 3556,
	3507, 3559, 4059, 3561, 3563, 3565, 3567, 3506, 3505, 1152,
	117, 3711, 3593, 3594, 3595, 2561, 1229, 512, 2458, 2944,
	4217, 1297, 2943, 2961, 3515, 108, 3617, 3707, 2474, 1386,
	3978, 2942, 2941, 4311, 2945, 3661, 1638, 1636, 1637, 1635,
	1640, 1639, 3310, 3308, 518, 2181, 3639, 1621, 3705, 2177,
	4386, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 3700, 3706, 1500, 1470, 744, 135, 3118,
	647, 648, 3771, 124, 520, 1508, 2758, 2865, 1425, 1077,
	3670, 3671, 3672, 1078, 3673, 1070, 4477, 3674, 2748, 2367,
	3676, 4228, 3678, 4108, 4220, 4375, 1455, 4110, 3933, 3659,
	2811, 1557, 2358, 713, 660, 1562, 1562, 1562, 1567, 1567,
	1567, 1570, 1571, 1572, 1573, 1567, 1567, 1567, 3717, 163,
	3952, 3704, 4112, 3727, 163, 2266, 727, 163, 163, 163,
	3786, 3747, 726, 725, 722, 723, 2393, 4362, 2255, 3296,
	3709, 3295, 3298, 1482, 3422, 1358, 702, 1429, 3176, 1428,
	1427, 1426, 1420, 2923, 671, 2427, 3032, 3721, 1398, 2932,
	2932, 1396, 1395, 1742, 3728, 1609, 2717, 3644, 3645, 3646,
	3647, 3648, 3649, 3650, 3651, 3652, 3723, 3724, 3725, 3726,
	3720, 3729, 3730, 3731, 3742, 3749, 2713, 3745, 670, 3758,
	675, 3261, 46, 2763, 1248, 3663, 694, 696, 3811, 3812,
	3813, 3778, 3750, 3751, 3752, 3693, 4119, 111, 3775, 3776,
	684, 683, 163, 692, 3375, 29, 21, 3768, 3858, 20,
	1164, 1164, 1205, 2639, 2661, 1186, 639, 48, 3689, 3690,
	3691, 54, 53, 51, 52, 3658, 2985, 2526, 3842, 4385,
	163, 163, 639, 1164, 1568, 1569, 3796, 491, 4579, 3789,
	1601, 1602, 1603, 3664, 3665, 3666, 3667, 3668, 1280, 4596,
	639, 4629, 1355, 38, 35, 34, 3840, 3810, 33, 4277,
	4271, 3853, 3844, 4270, 4273, 3814, 4272, 3846, 3866, 3867,
	1561, 1563, 1564, 4269, 4274, 1164, 4268, 4267, 4266, 639,
	4284, 1164, 4254, 1164, 4253, 4563, 1164, 4562, 5, 98,
	95, 41, 119, 3841, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 1148, 3868, 1500, 2,
	3845, 0, 1164, 1164, 0, 3848, 3849, 0, 3851, 3886,
	0, 0, 0, 0, 0, 3084, 3095, 0, 3094, 0,
	3862, 0, 3088, 0, 0, 3780, 0, 0, 3875, 3892,
	3869, 0, 0, 0, 0, 3228, 0, 0, 3788, 0,
	0, 0, 0, 0, 0, 3884, 3930, 0, 0, 0,
	0, 0, 0, 0, 0, 3896, 0, 3921, 3923, 0,
	0, 0, 3893, 0, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 0, 3175, 1500, 0,
	0, 3922, 0, 3225, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 1164, 0, 1500, 1458, 3962,
	0, 3515, 3711, 1164, 1164, 1164, 0, 674, 0, 3176,
	3967, 0, 0, 0, 0, 0, 108, 0, 107, 3658,
	3658, 0, 3936, 3938, 0, 0, 3515, 0, 0, 163,
	3908, 3918, 0, 0, 0, 163, 0, 3916, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 3310, 3308, 3959,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 537, 0, 0, 0, 0, 157, 0, 0,
	557, 0, 4002, 0, 0, 0, 0, 0, 0, 0,
	0, 3957, 0, 3961, 0, 0, 657, 0, 0, 0,
	0, 1457, 0, 0, 0, 157, 4009, 0, 3975, 0,
	1164, 0, 3976, 0, 0, 0, 3979, 0, 657, 701,
	3958, 0, 3969, 0, 0, 1087, 0, 0, 0, 157,
	0, 0, 0, 3176, 0, 3966, 3970, 668, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 1164, 0, 0, 0, 0, 0,
	4063, 4064, 0, 0, 157, 0, 0, 0, 3998, 3999,
	3176, 0, 0, 4000, 0, 0, 4003, 0, 0, 0,
	0, 3996, 3997, 3985, 3995, 2786, 3986, 0, 0, 0,
	0, 0, 0, 0, 0, 3175, 0, 0, 0, 491,
	4011, 4087, 0, 0, 0, 2932, 2932, 2932, 4012, 2932,
	2932, 2814, 0, 0, 0, 491, 4025, 0, 4035, 0,
	0, 0, 4021, 0, 0, 4053, 4055, 4056, 0, 4058,
	163, 0, 0, 4038, 0, 0, 0, 4071, 4052, 0,
	0, 3940, 3941, 3942, 3943, 4046, 4049, 678, 0, 3947,
	0, 0, 0, 3950, 3951, 0, 0, 0, 4069, 4070,
	0, 4073, 1164, 3962, 4132, 4080, 4072, 4081, 0, 0,
	0, 0, 0, 3366, 4079, 1164, 1164, 1164, 108, 0,
	4131, 0, 639, 0, 0, 0, 4096, 4057, 0, 163,
	639, 0, 0, 0, 0, 0, 0, 0, 1164, 1164,
	0, 0, 0, 0, 4082, 0, 4084, 4094, 4086, 1150,
	0, 4129, 0, 0, 0, 0, 639, 0, 1164, 0,
	639, 0, 0, 108, 0, 4151, 0, 0, 0, 0,
	639, 0, 0, 4138, 0, 0, 0, 0, 0, 0,
	0, 163, 163, 4126, 0, 4128, 0, 4152, 4130, 4154,
	4135, 4133, 4150, 4124, 0, 0, 0, 4136, 0, 0,
	4181, 0, 0, 0, 491, 0, 4186, 0, 0, 0,
	4139, 0, 491, 491, 491, 491, 0, 0, 0, 1164,
	491, 491, 1164, 491, 0, 0, 0, 3176, 0, 0,
	0, 4159, 1164, 0, 1164, 0, 491, 491, 1164, 163,
	491, 0, 4201, 0, 0, 1164, 3684, 1164, 1164, 1164,
	1164, 1164, 1164, 0, 0, 4062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4176, 0, 0, 4177, 0,
	3175, 4178, 0, 3711, 0, 4179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 4233,
	4191, 0, 0, 1150, 0, 1150, 4211, 4184, 0, 0,
	0, 4198, 4240, 4189, 4202, 0, 0, 108, 0, 4241,
	1164, 4200, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 4097, 4098, 4099, 0, 0, 3176, 0,
	163, 0, 0, 0, 0, 1164, 4197, 157, 4231, 0,
	0, 0, 1150, 0, 0, 0, 3366, 0, 0, 4243,
	0, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 0, 0, 1500, 0, 4302, 0, 0,
	0, 0, 0, 4320, 0, 4322, 0, 0, 3921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4374, 4315, 4378, 4314, 4330, 0, 4321, 4148,
	0, 0, 3922, 0, 4335, 0, 3188, 3310, 3308, 3190,
	4331, 4328, 157, 4366, 0, 4325, 4337, 0, 0, 0,
	4318, 1164, 0, 0, 0, 0, 1164, 4352, 0, 0,
	0, 0, 0, 0, 1150, 0, 1150, 4365, 0, 0,
	0, 0, 1150, 4369, 4175, 0, 0, 4326, 0, 0,
	0, 0, 0, 0, 0, 0, 700, 0, 0, 0,
	3175, 4185, 0, 0, 0, 0, 0, 0, 0, 4390,
	0, 0, 0, 0, 4193, 0, 0, 0, 4396, 0,
	0, 4423, 0, 4431, 4405, 0, 0, 0, 0, 0,
	0, 0, 3275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 4410, 3267, 4425, 0, 3921, 0, 0,
	0, 0, 0, 0, 0, 4427, 0, 0, 0, 4440,
	0, 0, 0, 157, 0, 0, 4452, 3366, 0, 3366,
	0, 3922, 4428, 4426, 0, 0, 0, 4446, 1087, 4438,
	0, 4437, 0, 0, 4421, 0, 163, 0, 0, 0,
	0, 163, 0, 1164, 4458, 4485, 0, 4476, 4138, 0,
	0, 4490, 4484, 4455, 4451, 0, 0, 0, 0, 4487,
	0, 4489, 0, 4502, 0, 4491, 597, 0, 0, 0,
	4464, 0, 0, 1164, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 639, 0, 4501, 4486, 1150, 639,
	639, 1150, 639, 4488, 0, 0, 4493, 1150, 1150, 1150,
	1150, 0, 1150, 1150, 0, 0, 1150, 1150, 0, 0,
	0, 4494, 0, 4509, 0, 0, 0, 4541, 4492, 4458,
	4514, 0, 1150, 491, 0, 0, 0, 2932, 0, 0,
	4518, 0, 0, 4520, 4525, 0, 1164, 0, 491, 0,
	4529, 4530, 4531, 3310, 3308, 4534, 0, 1150, 491, 4538,
	1150, 4527, 3658, 1150, 4549, 4524, 4527, 4556, 0, 4558,
	4527, 4537, 4554, 4568, 4576, 491, 4567, 108, 2447, 4578,
	4566, 4510, 4587, 4565, 4546, 4564, 4545, 0, 4598, 4599,
	0, 0, 0, 0, 4602, 0, 4605, 4403, 0, 4572,
	0, 0, 4574, 597, 0, 0, 0, 0, 0, 0,
	1150, 0, 3465, 4620, 1150, 0, 1150, 4623, 0, 0,
	1150, 4607, 0, 0, 4609, 0, 0, 0, 0, 0,
	0, 1150, 1150, 1150, 1150, 0, 1150, 0, 0, 0,
	0, 3175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4621, 0, 0, 0, 0, 3366, 0, 1164,
	0, 0, 0, 0, 4654, 1150, 4652, 1150, 4527, 1150,
	4527, 0, 0, 0, 4632, 1164, 4639, 4665, 4667, 0,
	0, 0, 0, 0, 0, 4527, 4527, 4527, 0, 4677,
	4527, 0, 0, 0, 0, 0, 0, 0, 0, 1150,
	4685, 0, 0, 0, 0, 1150, 0, 0, 0, 0,
	0, 4662, 0, 1150, 0, 0, 0, 0, 0, 4527,
	0, 4527, 0, 0, 0, 0, 3571, 163, 0, 1150,
	0, 0, 1150, 0, 0, 0, 163, 163, 0, 0,
	0, 0, 1150, 0, 0, 0, 0, 4690, 1150, 0,
	0, 0, 0, 4527, 0, 3175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4527, 0, 0,
	0, 0, 0, 0, 4702, 0, 3206, 0, 0, 0,
	0, 0, 4540, 4527, 0, 0, 0, 4543, 0, 0,
	0, 0, 3175, 0, 0, 491, 4527, 0, 2932, 2932,
	1164, 0, 4527, 1164, 0, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 0, 1612, 1500,
	0, 1087, 0, 0, 0, 0, 1087, 0, 0, 3573,
	3574, 2214, 2215, 2216, 0, 0, 0, 3583, 4601, 0,
	3586, 0, 0, 0, 3203, 0, 0, 3596, 3597, 3598,
	3599, 0, 0, 0, 0, 3612, 3614, 3616, 0, 3695,
	0, 0, 0, 0, 0, 0, 3200, 0, 0, 0,
	0, 639, 3619, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 0, 0, 1500, 0, 0,
	0, 2932, 0, 0, 1164, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 0, 0, 1500,
	0, 0, 0, 0, 491, 1164, 491, 0, 491, 0,
	0, 0, 0, 1720, 557, 0, 0, 0, 0, 0,
	0, 0, 4668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 1720, 557, 0, 0, 1753,
	0, 1164, 0, 1755, 0, 0, 0, 2335, 0, 0,
	0, 0, 0, 0, 0, 2339, 0, 0, 0, 0,
	2795, 0, 157, 157, 157, 157, 157, 0, 157, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 0, 0, 1500, 2071, 2072, 2708, 0, 2402, 2403,
	0, 0, 0, 0, 0, 2079, 2410, 2411, 2412, 3175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3735,
	3736, 1391, 0, 2657, 2425, 0, 0, 3743, 491, 2681,
	3746, 0, 0, 0, 0, 0, 0, 3753, 3754, 3755,
	3756, 0, 2916, 0, 0, 0, 3763, 3765, 3767, 0,
	0, 0, 3770, 0, 0, 0, 0, 0, 0, 0,
	0, 2656, 0, 0, 0, 2777, 0, 1391, 0, 0,
	0, 0, 639, 0, 0, 2888, 0, 0, 2678, 0,
	0, 0, 0, 0, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 2932, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 491, 0, 1500, 163,
	3175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 157, 2885, 0, 0, 657, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 1753, 157, 157, 157, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2647,
	3502, 2659, 2242, 3501, 2658, 2649, 0, 0, 2682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2691,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 491,
	0, 491, 0, 0, 0, 0, 701, 491, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 1164, 0, 0, 2889, 2680, 2702, 2653, 2652, 0,
	0, 0, 0, 0, 0, 2898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2648, 0, 0, 163, 0,
	0, 0, 2242, 0, 0, 0, 0, 0, 0, 0,
	0, 3503, 3504, 0, 0, 2672, 0, 0, 0, 0,
	0, 2887, 2910, 0, 0, 0, 0, 0, 657, 0,
	157, 2242, 2242, 2242, 0, 0, 0, 2242, 0, 2242,
	2242, 2242, 0, 2242, 2242, 0, 0, 0, 1087, 2242,
	0, 1164, 0, 0, 3971, 3972, 3973, 3974, 0, 0,
	0, 0, 0, 2242, 2242, 2242, 2242, 0, 2698, 2242,
	2242, 2242, 2242, 2242, 2242, 2747, 0, 0, 2242, 2242,
	2242, 2242, 2242, 2242, 2242, 2242, 2242, 2242, 2242, 2242,
	0, 0, 0, 2706, 157, 157, 157, 0, 0, 0,
	0, 0, 1087, 0, 2688, 0, 712, 0, 0, 0,
	0, 1164, 0, 0, 2905, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 0, 2914,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2895, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 0, 158, 1500, 494, 0, 0, 0,
	0, 0, 0, 639, 0, 158, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 1164, 0, 658, 0, 0, 0, 0, 0,
	157, 0, 0, 158, 0, 0, 0, 0, 1164, 0,
	0, 1753, 0, 0, 0, 0, 658, 0, 157, 0,
	0, 2907, 0, 1088, 157, 157, 1164, 158, 1156, 157,
	0, 0, 0, 0, 0, 0, 0, 2571, 0, 0,
	0, 0, 0, 0, 2674, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 158, 1164, 0, 4111, 4114, 0, 0, 0,
	0, 0, 0, 2685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2651, 0, 0, 0,
	2880, 0, 0, 0, 0, 0, 0, 0, 1538, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 2630, 2675, 2676, 0, 0,
	2679, 0, 0, 2684, 0, 2689, 2686, 2687, 0, 2690,
	2683, 0, 2693, 2692, 2694, 0, 2695, 2696, 2697, 0,
	0, 2699, 2700, 2701, 2703, 2704, 2705, 0, 0, 0,
	2677, 2707, 0, 0, 0, 0, 0, 2727, 0, 0,
	2671, 0, 2881, 2883, 677, 0, 2886, 0, 0, 2891,
	0, 2896, 2893, 2894, 0, 2897, 2890, 2744, 2900, 2899,
	2901, 0, 2902, 2903, 2904, 0, 0, 2906, 2908, 2909,
	2911, 2912, 2913, 0, 0, 0, 2884, 2915, 0, 0,
	0, 0, 0, 0, 0, 0, 2917, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 0, 0, 1538, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2778, 0, 2779, 71, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 2673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2787, 2788, 2789, 0,
	0, 0, 2793, 0, 2796, 1151, 0, 2799, 0, 0,
	2802, 2803, 0, 0, 0, 2808, 2809, 0, 0, 0,
	0, 2815, 2816, 2817, 0, 89, 2818, 1187, 2819, 157,
	2879, 4294, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4287, 0, 4114, 0, 0, 157, 2824, 2825,
	2826, 2827, 0, 0, 2831, 2832, 2833, 2834, 2835, 2836,
	0, 0, 0, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 2851, 0, 2852, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 157, 0, 657, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 4379, 4383,
	0, 0, 0, 0, 0, 0, 0, 4397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 157, 0, 0, 0, 0, 0, 0, 0,
	657, 0, 0, 4459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 1087, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4290, 0,
	658, 0, 0, 0, 0, 0, 0, 0, 4299, 4291,
	4292, 4293, 4297, 4298, 4295, 4638, 4296, 0, 4300, 0,
	0, 158, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 0, 0,
	0, 4532, 0, 0, 0, 0, 0, 494, 84, 0,
	0, 2242, 0, 0, 0, 0, 0, 60, 2242, 2242,
	2242, 2242, 2242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 2242, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 93, 0, 4594, 47, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3194, 0,
	0, 0, 0, 0, 0, 4301, 4289, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4294, 0, 0, 0, 157, 0, 0,
	0, 0, 157, 0, 0, 157, 2862, 1755, 0, 1087,
	0, 0, 0, 0, 4287, 0, 0, 4628, 4631, 4627,
	3230, 3231, 3232, 3233, 3234, 3235, 0, 0, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4666, 0, 0, 0, 0, 0, 0, 4671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 42, 45, 0, 0,
	96, 0, 0, 0, 0, 0, 4288, 0, 157, 157,
	71, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 75, 76, 0, 62, 92, 91, 0, 72, 0,
	0, 57, 0, 0, 160, 0, 495, 0, 0, 0,
	0, 88, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	0, 0, 89, 0, 659, 59, 61, 0, 0, 0,
	0, 87, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4290, 0, 0, 85, 0, 0, 0, 0, 0, 160,
	4299, 4291, 4292, 4293, 4297, 4298, 4295, 0, 4296, 0,
	4300, 495, 160, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 1088,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 80, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2242, 1755, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 157, 0, 0,
	0, 0, 0, 157, 701, 0, 0, 0, 0, 0,
	2242, 0, 77, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 4301, 4289, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 494, 494, 494, 0,
	0, 0, 69, 70, 0, 0, 0, 0, 0, 0,
	158, 158, 158, 158, 158, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 1087, 0, 157, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 3641, 3642, 3643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 3662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3680, 3681, 3682, 3683, 0, 0, 0, 0,
	3688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3698, 3699, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 82, 83, 0, 0, 0,
	0, 0, 0, 0, 1610, 0, 0, 0, 0, 0,
	3708, 0, 64, 81, 0, 66, 67, 73, 0, 74,
	42, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	158, 158, 0, 87, 71, 658, 0, 2178, 0, 0,
	0, 93, 0, 0, 47, 160, 0, 157, 0, 158,
	0, 0, 158, 158, 158, 158, 0, 0, 0, 0,
	0, 495, 0, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 85, 658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 4294, 0, 0, 0, 0, 0, 0, 157,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4287, 0, 0, 0, 0, 4706, 0,
	160, 0, 0, 0, 0, 0, 158, 0, 1743, 0,
	0, 0, 0, 494, 0, 0, 0, 2277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 2057, 2058,
	2059, 2060, 2061, 0, 2062, 0, 0, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 158, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	659, 0, 59, 61, 0, 4288, 2362, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 62, 92, 91, 0, 0, 0, 556,
	57, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	85, 0, 158, 158, 158, 0, 0, 0, 0, 0,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 2277, 0, 1155,
	1156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1610, 1610,
	0, 0, 0, 0, 0, 742, 69, 70, 0, 4290,
	0, 0, 0, 0, 0, 0, 0, 2194, 0, 4299,
	4291, 4292, 4293, 4297, 4298, 4295, 1087, 4296, 0, 4300,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 84,
	0, 0, 0, 159, 0, 492, 0, 0, 60, 0,
	0, 0, 0, 0, 159, 0, 158, 0, 0, 0,
	0, 0, 158, 158, 0, 0, 0, 158, 0, 3944,
	3945, 3946, 0, 3948, 2262, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 3960, 0, 3963,
	3964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3968, 0, 0, 0, 0, 0, 159, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4301, 4289, 159, 66,
	67, 73, 0, 74, 157, 0, 0, 0, 0, 157,
	492, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4001, 0, 0, 0, 0, 0, 0, 0, 4004, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2429, 0, 2431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2520, 0, 0, 0,
	4115, 4116, 4117, 4118, 0, 0, 59, 61, 0, 0,
	4122, 4123, 87, 0, 2541, 0, 0, 0, 0, 1753,
	2543, 2544, 0, 0, 0, 1610, 0, 4134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4137, 0, 158, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 0,
	160, 0, 0, 0, 657, 157, 0, 0, 0, 0,
	0, 1087, 0, 0, 0, 495, 495, 495, 495, 158,
	0, 658, 4183, 0, 0, 0, 0, 0, 0, 0,
	160, 160, 160, 160, 160, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 4206, 4207, 4208,
	4209, 0, 0, 0, 2635, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 4224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 4238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	158, 0, 0, 0, 0, 0, 0, 0, 658, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4316, 4317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 1088, 0, 4327, 0,
	0, 2277, 0, 0, 0, 0, 0, 0, 0, 4336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 160, 0, 0, 0, 659, 0, 2179, 4356, 0,
	0, 0, 0, 4367, 0, 0, 0, 0, 0, 160,
	0, 0, 160, 160, 160, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 2555, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 4413, 0, 160, 0, 4416, 0,
	0, 0, 0, 495, 0, 0, 0, 2278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	158, 0, 0, 158, 0, 0, 659, 1088, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 160, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 2278, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 158, 0, 0,
	0, 4555, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 0, 0, 1086, 1622, 0, 0, 0,
	4600, 0, 0, 4603, 4604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4615, 0, 160, 0,
	0, 1087, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 2178, 0,
	0, 0, 160, 160, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 2855, 1719, 556, 0, 0, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2983, 0, 0, 0,
	0, 0, 0, 0, 2109, 0, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 2131, 0, 3013, 3014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 3309, 0, 158, 0, 1087, 0, 0,
	1757, 0, 0, 0, 492, 492, 492, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	159, 159, 159, 159, 0, 159, 0, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 160,
	0, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	2183, 0, 2183, 0, 0, 2320, 0, 0, 0, 159,
	159, 0, 2321, 3219, 0, 0, 2180, 2183, 2327, 2183,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 159, 159, 159, 159, 0, 0, 158, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 494, 494,
	494, 494, 2052, 0, 0, 0, 494, 494, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	160, 0, 494, 494, 0, 158, 494, 0, 659, 0,
	0, 1086, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 2276, 0, 2183, 0,
	0, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2278, 0, 0, 0, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2519, 0,
	0, 0, 0, 0, 3381, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 159, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3459, 0, 0, 2276, 0, 0, 1157,
	0, 0, 0, 0, 3309, 0, 0, 2178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	160, 0, 0, 160, 0, 1610, 1610, 0, 0, 0,
	1391, 0, 2657, 0, 0, 0, 0, 0, 2681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2656, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 159, 159, 3552, 0, 0, 159, 2678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 158, 0, 0, 0, 0, 158, 0, 2644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 160, 0, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2647, 2646,
	2659, 2666, 2645, 2658, 2649, 0, 0, 2682, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 2691, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 2179, 0,
	0, 0, 0, 0, 494, 2669, 2667, 2662, 0, 0,
	0, 0, 2664, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 2680, 2702, 2653, 2652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2654, 2655, 0, 0, 2672, 0, 2663, 2665, 2668, 2670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2593, 0, 0, 0,
	0, 2593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2278, 0, 0, 0, 2698, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	3793, 0, 0, 658, 0, 3797, 0, 0, 0, 0,
	0, 0, 658, 158, 0, 0, 0, 0, 0, 3309,
	0, 0, 0, 0, 159, 0, 2729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2751, 0, 160, 1086, 1086, 0, 0,
	0, 0, 2183, 0, 0, 0, 0, 0, 159, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 2674, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 2685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2651, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 494, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	2276, 0, 0, 0, 0, 2675, 2676, 0, 0, 2679,
	0, 0, 2684, 0, 2689, 2686, 2687, 0, 2690, 2683,
	0, 2693, 2692, 2694, 0, 2695, 2696, 2697, 0, 0,
	2699, 2700, 2701, 2703, 2704, 2705, 0, 0, 1086, 2677,
	2707, 0, 0, 0, 0, 0, 0, 160, 160, 2671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 495, 495,
	495, 495, 0, 0, 0, 0, 495, 495, 0, 495,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 495, 495, 0, 160, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2989, 2993, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3016, 0, 0, 2673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 159, 158, 0, 0, 0, 159,
	0, 0, 159, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 2593, 0, 0, 0, 659, 0, 3042, 0,
	2593, 0, 0, 2593, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2183,
	2183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 494, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 2179, 0, 0,
	0, 0, 0, 0, 0, 159, 159, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3309,
	0, 0, 3192, 0, 158, 0, 0, 0, 0, 0,
	3192, 3192, 3192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 2180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2637, 2638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4199, 1086, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2276, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 159, 494, 0, 0, 0, 0,
	159, 0, 0, 0, 495, 658, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3434, 3435, 3436, 0, 0, 0, 0, 0,
	0, 0, 4368, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3192, 3192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 159, 2729, 0, 0, 3531,
	0, 0, 659, 160, 0, 0, 0, 0, 0, 2729,
	0, 2729, 0, 0, 0, 3551, 0, 0, 0, 0,
	0, 0, 2729, 0, 2729, 3560, 2729, 2729, 2729, 2729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3192, 0, 0,
	0, 0, 0, 3640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 159, 0, 0,
	0, 0, 3656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 492, 492, 492,
	492, 0, 0, 0, 0, 492, 492, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 492, 0, 159, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3066,
	495, 0, 495, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 3103, 0, 1086, 0, 0, 2183, 0,
	0, 0, 3114, 2729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3134, 3135,
	3136, 3137, 3138, 3139, 3140, 3141, 0, 0, 3144, 3145,
	3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155,
	3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165,
	3166, 0, 3180, 3181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 583, 594, 576, 0, 2180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3192, 0, 0, 0, 0, 584, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3874, 3321, 3322, 3323, 0, 3327, 3328,
	3329, 3330, 3331, 0, 0, 3334, 3335, 3336, 3337, 3338,
	3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348,
	3349, 3350, 0, 3352, 3353, 3354, 3355, 3356, 3357, 0,
	3360, 3361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 495, 159, 495, 0, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	575, 574, 577, 0, 160, 0, 0, 0, 1752, 0,
	582, 0, 0, 0, 0, 0, 3925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 2183, 590, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	492, 578, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3539, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 581, 4294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3192, 0, 0,
	3192, 0, 0, 0, 0, 0, 4287, 3578, 3579, 0,
	0, 4700, 0, 0, 0, 0, 0, 0, 579, 580,
	587, 2125, 591, 592, 595, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 659, 0, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 4076, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4288, 0,
	0, 0, 4083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 2183, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3732,
	0, 3734, 0, 0, 0, 0, 0, 3740, 3741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4290, 0, 0, 89, 0, 0, 0, 0,
	0, 4294, 4299, 4291, 4292, 4293, 4297, 4298, 4295, 0,
	4296, 0, 4300, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 4287, 0, 0, 0, 0, 4694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 492, 84, 492, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1661, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4222, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4288, 0, 0, 4465, 0, 4301,
	4289, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3885, 3192, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4290, 0,
	1086, 492, 0, 0, 159, 0, 0, 0, 4299, 4291,
	4292, 4293, 4297, 4298, 4295, 0, 4296, 0, 4300, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 1672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1662, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 492, 87, 492, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 4222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4301, 4289, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 85, 3977, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2183, 0, 0, 0, 0, 0, 0, 1676, 1679, 1680,
	1681, 1682, 1683, 1684, 0, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 0, 1663,
	1664, 1665, 1645, 1644, 1677, 1646, 1649, 1643, 1647, 1642,
	0, 0, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1667, 1668, 1669, 1670, 1671, 1673, 1674,
	1675, 0, 0, 0, 492, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4140, 0, 4142, 4143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 901, 1044, 0,
	0, 448, 802, 1048, 888, 911, 1058, 917, 919, 984,
	863, 959, 357, 908, 864, 1009, 0, 0, 855, 706,
	856, 889, 259, 705, 1018, 962, 1046, 945, 977, 987,
	258, 244, 952, 951, 1035, 900, 899, 982, 1031, 1045,
	1678, 0, 172, 478, 190, 810, 314, 0, 0, 476,
	423, 339, 0, 1666, 943, 0, 794, 795, 928, 986,
	875, 973, 1050, 909, 978, 1051, 89, 0, 0, 0,
	0, 731, 558, 732, 734, 735, 736, 737, 0, 0,
	171, 733, 738, 739, 740, 0, 938, 983, 1063, 854,
	703, 720, 859, 809, 4382, 1036, 896, 897, 263, 0,
	0, 0, 0, 0, 0, 0, 941, 958, 1002, 925,
	0, 468, 989, 998, 1013, 918, 376, 283, 0, 0,
	0, 0, 717, 718, 0, 0, 0, 0, 825, 0,
	719, 0, 869, 715, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 721, 0, 0, 4324,
	874, 852, 894, 1004, 853, 851, 340, 866, 797, 1034,
	926, 301, 191, 1040, 924, 823, 992, 870, 1022, 1056,
	912, 311, 868, 195, 865, 871, 910, 353, 1001, 1007,
	807, 198, 313, 1019, 890, 903, 728, 0, 392, 979,
	467, 709, 278, 0, 965, 391, 315, 460, 993, 1042,
	466, 913, 442, 477, 482, 271, 946, 234, 420, 261,
	254, 895, 1012, 858, 284, 375, 249, 306, 929, 985,
	891, 241, 996, 972, 1024, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1006, 1026, 886,
	872, 878, 873, 902, 1043, 293, 285, 1027, 1025, 904,
	361, 224, 956, 949, 942, 811, 471, 1059, 257, 1008,
	473, 180, 406, 405, 916, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 486, 220, 309, 450, 708, 277,
	352, 981, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1005, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	980, 389, 427, 474, 974, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1003, 216, 237, 428, 210, 1038, 1021,
	967, 931, 937, 860, 0, 209, 932, 933, 934, 935,
	936, 999, 893, 905, 885, 975, 884, 281, 991, 729,
	730, 246, 800, 1053, 211, 867, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 968, 955, 953, 861, 1037, 966,
	954, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 957, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 879, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 995, 1062,
	360, 393, 233, 469, 421, 262, 877, 1066, 824, 812,
	813, 816, 960, 961, 814, 817, 818, 826, 798, 799,
	801, 803, 804, 805, 948, 1041, 862, 808, 1017, 819,
	820, 821, 822, 988, 1060, 796, 242, 745, 838, 839,
	840, 746, 841, 842, 747, 748, 843, 844, 845, 846,
	749, 847, 848, 849, 827, 828, 829, 830, 831, 832,
	833, 834, 837, 835, 836, 0, 944, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 806, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1015, 971, 0, 921, 923, 922,
	881, 883, 882, 880, 1064, 346, 1033, 850, 857, 876,
	887, 892, 898, 906, 907, 915, 920, 930, 939, 940,
	950, 963, 964, 970, 994, 997, 1011, 1016, 1023, 1028,
	1029, 472, 252, 947, 969, 1000, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 927,
	196, 0, 0, 202, 0, 203, 205, 914, 201, 1032,
	1057, 976, 990, 901, 1044, 0, 0, 448, 802, 1048,
	888, 911, 1058, 917, 919, 984, 863, 959, 357, 908,
	864, 1009, 0, 0, 855, 706, 856, 889, 259, 705,
	1018, 962, 1046, 945, 977, 987, 258, 244, 952, 951,
	1035, 900, 899, 982, 1031, 1045, 0, 0, 172, 478,
	190, 810, 314, 0, 0, 476, 423, 339, 0, 0,
	943, 0, 794, 795, 928, 986, 875, 973, 1050, 909,
	978, 1051, 89, 0, 695, 0, 0, 731, 558, 732,
	734, 735, 736, 737, 0, 0, 171, 733, 738, 739,
	740, 0, 938, 983, 1063, 854, 703, 720, 859, 809,
	0, 1036, 896, 897, 263, 0, 0, 0, 0, 0,
	0, 0, 941, 958, 1002, 925, 0, 468, 989, 998,
	1013, 918, 376, 283, 0, 0, 0, 0, 717, 718,
	0, 0, 0, 0, 825, 0, 719, 0, 869, 715,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 721, 0, 0, 0, 874, 852, 894, 1004,
	853, 851, 340, 866, 797, 1034, 926, 301, 191, 1040,
	924, 823, 992, 870, 1022, 1056, 912, 311, 868, 195,
	865, 871, 910, 353, 1001, 1007, 807, 198, 313, 1019,
	890, 903, 728, 0, 392, 979, 467, 709, 278, 0,
	965, 391, 315, 460, 993, 1042, 466, 913, 442, 477,
	482, 271, 946, 234, 420, 261, 254, 895, 1012, 858,
	284, 375, 249, 306, 929, 985, 891, 241, 996, 972,
	1024, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1006, 1026, 886, 872, 878, 873, 902,
	1043, 293, 285, 1027, 1025, 904, 361, 224, 956, 949,
	942, 811, 471, 1059, 257, 1008, 473, 180, 406, 405,
	916, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	486, 220, 309, 450, 708, 277, 352, 981, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1005, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 980, 389, 427, 474,
	974, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1003,
	216, 237, 428, 210, 1038, 1021, 967, 931, 937, 860,
	0, 209, 932, 933, 934, 935, 936, 999, 893, 905,
	885, 975, 884, 281, 991, 729, 730, 246, 800, 1053,
	211, 867, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	968, 955, 953, 861, 1037, 966, 954, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 957, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 879,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 995, 1062, 360, 393, 233, 469,
	421, 262, 877, 1066, 824, 812, 813, 816, 960, 961,
	814, 817, 818, 826, 798, 799, 801, 803, 804, 805,
	948, 1041, 862, 808, 1017, 819, 820, 821, 822, 988,
	1060, 796, 242, 745, 838, 839, 840, 746, 841, 842,
	747, 748, 843, 844, 845, 846, 749, 847, 848, 849,
	827, 828, 829, 830, 831, 832, 833, 834, 837, 835,
	836, 0, 944, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 806, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1015, 971, 0, 921, 923, 922, 881, 883, 882, 880,
	1064, 346, 1033, 850, 857, 876, 887, 892, 898, 906,
	907, 915, 920, 930, 939, 940, 950, 963, 964, 970,
	994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947,
	969, 1000, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 927, 196, 0, 0, 202,
	0, 203, 205, 914, 201, 1032, 1057, 976, 990, 901,
	1044, 0, 0, 448, 802, 1048, 888, 911, 1058, 917,
	919, 984, 863, 959, 357, 908, 864, 1009, 0, 0,
	855, 706, 856, 889, 259, 705, 1018, 962, 1046, 945,
	977, 987, 258, 244, 952, 951, 1035, 900, 899, 982,
	1031, 1045, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1050, 909, 978, 1051, 89, 0,
	0, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1063, 854, 703, 720, 859, 809, 0, 1036, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1013, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 2240, 0, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1034, 926, 301, 191, 1040, 924, 823, 992, 870,
	1022, 1056, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1019, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1042, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1012, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1024, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1006,
	1026, 886, 872, 878, 873, 902, 1043, 293, 285, 1027,
	1025, 904, 361, 224, 956, 949, 942, 811, 471, 1059,
	257, 1008, 473, 180, 406, 405, 916, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1038, 1021, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1053, 211, 867, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 968, 955, 953, 861,
	1037, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 879, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1062, 360, 393, 233, 469, 421, 262, 877, 1066,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 948, 1041, 862, 808,
	1017, 819, 820, 821, 822, 988, 1060, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1015, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1064, 346, 1033, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1011, 1016,
	1023, 1028, 1029, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1032, 1057, 976, 990, 901, 1044, 0, 0, 448,
	802, 1048, 888, 911, 1058, 917, 919, 984, 863, 959,
	357, 908, 864, 1009, 0, 0, 855, 706, 856, 889,
	259, 705, 1018, 962, 1046, 945, 977, 987, 258, 244,
	952, 951, 1035, 900, 899, 982, 1031, 1045, 0, 0,
	172, 478, 190, 810, 314, 0, 0, 476, 423, 339,
	0, 0, 943, 0, 794, 795, 928, 986, 875, 973,
	1050, 909, 978, 1051, 89, 0, 0, 0, 0, 731,
	558, 732, 734, 735, 736, 737, 0, 0, 171, 733,
	738, 739, 740, 0, 938, 983, 1063, 854, 703, 720,
	859, 809, 0, 1036, 896, 897, 263, 0, 0, 0,
	0, 0, 0, 0, 941, 958, 1002, 925, 0, 468,
	989, 998, 1013, 918, 376, 283, 0, 0, 0, 0,
	717, 718, 699, 0, 0, 0, 825, 0, 719, 0,
	869, 715, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 721, 0, 0, 0, 874, 852,
	894, 1004, 853, 851, 340, 866, 797, 1034, 926, 301,
	191, 1040, 924, 823, 992, 870, 1022, 1056, 912, 311,
	868, 195, 865, 871, 910, 353, 1001, 1007, 807, 198,
	313, 1019, 890, 903, 728, 0, 392, 979, 467, 709,
	278, 0, 965, 391, 315, 460, 993, 1042, 466, 913,
	442, 477, 482, 271, 946, 234, 420, 261, 254, 895,
	1012, 858, 284, 375, 249, 306, 929, 985, 891, 241,
	996, 972, 1024, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1006, 1026, 886, 872, 878,
	873, 902, 1043, 293, 285, 1027, 1025, 904, 361, 224,
	956, 949, 942, 811, 471, 1059, 257, 1008, 473, 180,
	406, 405, 916, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 486, 220, 309, 450, 708, 277, 352, 981,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1005, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 980, 389,
	427, 474, 974, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 1003, 216, 237, 428, 210, 1038, 1021, 967, 931,
	937, 860, 0, 209, 932, 933, 934, 935, 936, 999,
	893, 905, 885, 975, 884, 281, 991, 729, 730, 246,
	800, 1053, 211, 867, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 968, 955, 953, 861, 1037, 966, 954, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	957, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 879, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 995, 1062, 360, 393,
	233, 469, 421, 262, 877, 1066, 824, 812, 813, 816,
	960, 961, 814, 817, 818, 826, 798, 799, 801, 803,
	804, 805, 948, 1041, 862, 808, 1017, 819, 820, 821,
	822, 988, 1060, 796, 242, 745, 838, 839, 840, 746,
	841, 842, 747, 748, 843, 844, 845, 846, 749, 847,
	848, 849, 827, 828, 829, 830, 831, 832, 833, 834,
	837, 835, 836, 0, 944, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 806, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1015, 971, 0, 921, 923, 922, 881, 883,
	882, 880, 1064, 346, 1033, 850, 857, 876, 887, 892,
	898, 906, 907, 915, 920, 930, 939, 940, 950, 963,
	964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472,
	252, 947, 969, 1000, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 927, 196, 0,
	0, 202, 0, 203, 205, 914, 201, 1032, 1057, 976,
	990, 901, 1044, 0, 0, 448, 802, 1048, 888, 911,
	1058, 917, 919, 984, 863, 959, 357, 908, 864, 1009,
	0, 0, 855, 706, 856, 889, 259, 705, 1018, 962,
	1046, 945, 977, 987, 258, 244, 952, 951, 1035, 900,
	899, 982, 1031, 1045, 0, 0, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1050, 909, 2449, 1051,
	89, 0, 0, 0, 0, 2451, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 2450,
	938, 983, 1063, 854, 703, 720, 859, 809, 0, 1036,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1013, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 0, 0,
	0, 0, 825, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1034, 926, 301, 191, 1040, 924, 823,
	992, 870, 1022, 1056, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1019, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1042, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1012, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1024, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1020, 1006, 1026, 886, 872, 878, 873, 902, 1043, 293,
	285, 1027, 1025, 904, 361, 224, 956, 949, 942, 811,
	471, 1059, 257, 1008, 473, 180, 406, 405, 916, 292,
	1010, 181, 170, 385, 182, 302, 204, 1030, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1049, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1038, 1021, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1053, 211, 867,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 968, 955,
	953, 861, 1037, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 879, 1014, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1062, 360, 393, 233, 469, 421, 262,
	877, 1066, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 948, 1041,
	862, 808, 1017, 819, 820, 821, 822, 988, 1060, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1015, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1064, 346,
	1033, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1032, 1057, 976, 990, 901, 1044, 0,
	0, 448, 802, 1048, 888, 911, 1058, 917, 919, 984,
	863, 959, 357, 908, 864, 1009, 0, 0, 855, 706,
	856, 889, 259, 705, 1018, 962, 1046, 945, 977, 987,
	258, 244, 952, 951, 1035, 900, 899, 982, 1031, 1045,
	0, 0, 172, 478, 190, 810, 314, 0, 0, 476,
	423, 339, 0, 0, 943, 0, 794, 795, 928, 986,
	875, 973, 1050, 909, 978, 1051, 89, 0, 0, 0,
	0, 2349, 558, 732, 734, 735, 736, 737, 0, 0,
	171, 733, 738, 739, 740, 0, 938, 983, 1063, 854,
	703, 720, 859, 809, 0, 1036, 896, 897, 263, 0,
	0, 0, 0, 0, 0, 0, 941, 958, 1002, 925,
	0, 468, 989, 998, 1013, 918, 376, 283, 0, 0,
	0, 0, 717, 718, 2240, 0, 0, 0, 825, 0,
	719, 0, 869, 715, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 721, 0, 0, 0,
	874, 852, 894, 1004, 853, 851, 340, 866, 797, 1034,
	926, 301, 191, 1040, 924, 823, 992, 870, 1022, 1056,
	912, 311, 868, 195, 865, 871, 910, 353, 1001, 1007,
	807, 198, 313, 1019, 890, 903, 728, 0, 392, 979,
	467, 709, 278, 0, 965, 391, 315, 460, 993, 1042,
	466, 913, 442, 477, 482, 271, 946, 234, 420, 261,
	254, 895, 1012, 858, 284, 375, 249, 306, 929, 985,
	891, 241, 996, 972, 1024, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1006, 1026, 886,
	872, 878, 873, 902, 1043, 293, 285, 1027, 1025, 904,
	361, 224, 956, 949, 942, 811, 471, 1059, 257, 1008,
	473, 180, 406, 405, 916, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 486, 220, 309, 450, 708, 277,
	352, 981, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1005, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	980, 389, 427, 474, 974, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1003, 216, 237, 428, 210, 1038, 1021,
	967, 931, 937, 860, 0, 209, 932, 933, 934, 935,
	936, 999, 893, 905, 885, 975, 884, 281, 991, 729,
	730, 246, 800, 1053, 211, 867, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 968, 955, 953, 861, 1037, 966,
	954, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 957, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 879, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 995, 1062,
	360, 393, 233, 469, 421, 262, 877, 1066, 824, 812,
	813, 816, 960, 961, 814, 817, 818, 826, 798, 799,
	801, 803, 804, 805, 948, 1041, 862, 808, 1017, 819,
	820, 821, 822, 988, 1060, 796, 242, 745, 838, 839,
	840, 746, 841, 842, 747, 748, 843, 844, 845, 846,
	749, 847, 848, 849, 827, 828, 829, 830, 831, 832,
	833, 834, 837, 835, 836, 0, 944, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 806, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1015, 971, 0, 921, 923, 922,
	881, 883, 882, 880, 1064, 346, 1033, 850, 857, 876,
	887, 892, 898, 906, 907, 915, 920, 930, 939, 940,
	950, 963, 964, 970, 994, 997, 1011, 1016, 1023, 1028,
	1029, 472, 252, 947, 969, 1000, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 927,
	196, 0, 0, 202, 0, 203, 205, 914, 201, 1032,
	1057, 976, 990, 901, 1044, 0, 0, 448, 802, 1048,
	888, 911, 1058, 917, 919, 984, 863, 959, 357, 908,
	864, 1009, 0, 0, 855, 706, 856, 889, 259, 705,
	1018, 962, 1046, 945, 977, 987, 258, 244, 952, 951,
	1035, 900, 899, 982, 1031, 1045, 0, 0, 172, 478,
	190, 810, 314, 0, 0, 476, 423, 339, 0, 0,
	943, 0, 794, 795, 928, 986, 875, 973, 1050, 909,
	978, 1051, 89, 0, 0, 0, 0, 2346, 558, 732,
	734, 735, 736, 737, 0, 0, 171, 733, 738, 739,
	740, 0, 938, 983, 1063, 854, 703, 720, 859, 809,
	0, 1036, 896, 897, 263, 0, 0, 0, 0, 0,
	0, 0, 941, 958, 1002, 925, 0, 468, 989, 998,
	1013, 918, 376, 283, 0, 0, 0, 0, 717, 718,
	2240, 0, 0, 0, 825, 0, 719, 0, 869, 715,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 721, 0, 0, 0, 874, 852, 894, 1004,
	853, 851, 340, 866, 797, 1034, 926, 301, 191, 1040,
	924, 823, 992, 870, 1022, 1056, 912, 311, 868, 195,
	865, 871, 910, 353, 1001, 1007, 807, 198, 313, 1019,
	890, 903, 728, 0, 392, 979, 467, 709, 278, 0,
	965, 391, 315, 460, 993, 1042, 466, 913, 442, 477,
	482, 271, 946, 234, 420, 261, 254, 895, 1012, 858,
	284, 375, 249, 306, 929, 985, 891, 241, 996, 972,
	1024, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1006, 1026, 886, 872, 878, 873, 902,
	1043, 293, 285, 1027, 1025, 904, 361, 224, 956, 949,
	942, 811, 471, 1059, 257, 1008, 473, 180, 406, 405,
	916, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	486, 220, 309, 450, 708, 277, 352, 981, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1005, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 980, 389, 427, 474,
	974, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1003,
	216, 237, 428, 210, 1038, 1021, 967, 931, 937, 860,
	0, 209, 932, 933, 934, 935, 936, 999, 893, 905,
	885, 975, 884, 281, 991, 729, 730, 246, 800, 1053,
	211, 867, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	968, 955, 953, 861, 1037, 966, 954, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 957, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 879,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 995, 1062, 360, 393, 233, 469,
	421, 262, 877, 1066, 824, 812, 813, 816, 960, 961,
	814, 817, 818, 826, 798, 799, 801, 803, 804, 805,
	948, 1041, 862, 808, 1017, 819, 820, 821, 822, 988,
	1060, 796, 242, 745, 838, 839, 840, 746, 841, 842,
	747, 748, 843, 844, 845, 846, 749, 847, 848, 849,
	827, 828, 829, 830, 831, 832, 833, 834, 837, 835,
	836, 0, 944, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 806, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1015, 971, 0, 921, 923, 922, 881, 883, 882, 880,
	1064, 346, 1033, 850, 857, 876, 887, 892, 898, 906,
	907, 915, 920, 930, 939, 940, 950, 963, 964, 970,
	994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947,
	969, 1000, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 927, 196, 0, 0, 202,
	0, 203, 205, 914, 201, 1032, 1057, 976, 990, 901,
	1044, 0, 42, 448, 802, 1048, 888, 911, 1058, 917,
	919, 984, 863, 959, 357, 908, 864, 1009, 0, 0,
	855, 706, 856, 889, 259, 705, 1018, 962, 1046, 945,
	977, 987, 258, 244, 952, 951, 1035, 900, 899, 982,
	1031, 1045, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1050, 909, 978, 1051, 89, 0,
	0, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1063, 854, 703, 720, 859, 809, 0, 1036, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1013, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 0, 0, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1541, 926, 301, 191, 1040, 924, 823, 992, 870,
	1022, 1056, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1019, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1042, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1012, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1024, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1006,
	1026, 886, 872, 878, 873, 902, 1043, 293, 285, 1027,
	1025, 904, 361, 224, 956, 949, 942, 811, 471, 1059,
	257, 1008, 473, 180, 406, 405, 916, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1038, 1021, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1053, 211, 867, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 968, 955, 953, 861,
	1037, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 879, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1062, 360, 393, 233, 469, 421, 262, 877, 1066,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 948, 1041, 862, 808,
	1017, 819, 820, 821, 822, 988, 1060, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1539, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1015, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1064, 346, 1033, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1011, 1016,
	1023, 1028, 1029, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1032, 1057, 976, 990, 901, 1044, 0, 0, 448,
	802, 1048, 888, 911, 1058, 917, 919, 984, 863, 959,
	357, 908, 864, 1009, 0, 0, 855, 706, 856, 889,
	259, 705, 1018, 962, 1046, 945, 977, 987, 258, 244,
	952, 951, 1035, 900, 899, 982, 1031, 1045, 0, 0,
	172, 478, 190, 810, 314, 0, 0, 476, 423, 339,
	0, 0, 943, 0, 794, 795, 928, 986, 875, 973,
	1050, 909, 978, 1051, 89, 0, 2107, 0, 0, 731,
	558, 732, 734, 735, 736, 737, 0, 0, 171, 733,
	738, 739, 740, 0, 938, 983, 1063, 854, 703, 720,
	859, 809, 0, 1036, 896, 897, 263, 0, 0, 0,
	0, 0, 0, 0, 941, 958, 1002, 925, 0, 468,
	989, 998, 1013, 918, 376, 283, 0, 0, 0, 0,
	717, 718, 0, 0, 0, 0, 825, 0, 719, 0,
	869, 715, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 721, 0, 0, 0, 874, 852,
	894, 1004, 853, 851, 340, 866, 797, 1034, 926, 301,
	191, 1040, 924, 823, 992, 870, 1022, 1056, 912, 311,
	868, 195, 865, 871, 910, 353, 1001, 1007, 807, 198,
	313, 1019, 890, 903, 728, 0, 392, 979, 467, 709,
	278, 0, 965, 391, 315, 460, 993, 1042, 466, 913,
	442, 477, 482, 271, 946, 234, 420, 261, 254, 895,
	1012, 858, 284, 375, 249, 306, 929, 985, 891, 241,
	996, 972, 1024, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1006, 1026, 886, 872, 878,
	873, 902, 1043, 293, 285, 1027, 1025, 904, 361, 224,
	956, 949, 942, 811, 471, 1059, 257, 1008, 473, 180,
	406, 405, 916, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 486, 220, 309, 450, 708, 277, 352, 981,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1005, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 980, 389,
	427, 474, 974, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 1003, 216, 237, 428, 210, 1038, 1021, 967, 931,
	937, 860, 0, 209, 932, 933, 934, 935, 936, 999,
	893, 905, 885, 975, 884, 281, 991, 729, 730, 246,
	800, 1053, 211, 867, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 968, 955, 953, 861, 1037, 966, 954, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	957, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 879, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 995, 1062, 360, 393,
	233, 469, 421, 262, 877, 1066, 824, 812, 813, 816,
	960, 961, 814, 817, 818, 826, 798, 799, 801, 803,
	804, 805, 948, 1041, 862, 808, 1017, 819, 820, 821,
	822, 988, 1060, 796, 242, 745, 838, 839, 840, 746,
	841, 842, 747, 748, 843, 844, 845, 846, 749, 847,
	848, 849, 827, 828, 829, 830, 831, 832, 833, 834,
	837, 835, 836, 0, 944, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 806, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1015, 971, 0, 921, 923, 922, 881, 883,
	882, 880, 1064, 346, 1033, 850, 857, 876, 887, 892,
	898, 906, 907, 915, 920, 930, 939, 940, 950, 963,
	964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472,
	252, 947, 969, 1000, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 927, 196, 0,
	0, 202, 0, 203, 205, 914, 201, 1032, 1057, 976,
	990, 901, 1044, 0, 0, 448, 802, 1048, 888, 911,
	1058, 917, 919, 984, 863, 959, 357, 908, 864, 1009,
	0, 0, 855, 706, 856, 889, 259, 705, 1018, 962,
	1046, 945, 977, 987, 258, 244, 952, 951, 1035, 900,
	899, 982, 1031, 1045, 0, 0, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1050, 909, 978, 1051,
	89, 0, 0, 0, 0, 731, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 0,
	938, 983, 1063, 854, 703, 720, 859, 809, 0, 1036,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1013, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 0, 0,
	0, 0, 825, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1034, 926, 301, 191, 1040, 924, 823,
	992, 870, 1022, 1056, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1019, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1042, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1012, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1024, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1020, 1006, 1026, 886, 872, 878, 873, 902, 1043, 293,
	285, 1027, 1025, 904, 361, 224, 956, 949, 942, 811,
	471, 1059, 257, 1008, 473, 180, 406, 405, 916, 292,
	1010, 181, 170, 385, 182, 302, 204, 1030, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1049, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1038, 1021, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1053, 211, 867,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 968, 955,
	953, 861, 1037, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 879, 1014, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1062, 360, 393, 233, 469, 421, 262,
	877, 1066, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 948, 1041,
	862, 808, 1017, 819, 820, 821, 822, 988, 1060, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1015, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1064, 346,
	1033, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1032, 1057, 976, 990, 901, 1044, 0,
	0, 448, 802, 1048, 888, 911, 1058, 917, 919, 984,
	863, 959, 357, 908, 864, 1009, 0, 0, 855, 1106,
	856, 889, 259, 1104, 1018, 962, 1046, 945, 977, 987,
	258, 244, 952, 951, 1035, 900, 899, 982, 1031, 1045,
	0, 0, 172, 478, 190, 810, 314, 0, 0, 476,
	423, 339, 0, 0, 943, 0, 794, 795, 928, 986,
	875, 973, 1050, 909, 978, 1051, 89, 0, 0, 0,
	0, 731, 558, 732, 734, 735, 736, 737, 0, 0,
	171, 733, 738, 739, 740, 0, 938, 983, 1063, 854,
	1123, 720, 859, 809, 0, 1036, 896, 897, 263, 0,
	0, 0, 0, 0, 0, 0, 941, 958, 1002, 925,
	0, 468, 989, 998, 1013, 918, 376, 283, 0, 0,
	0, 0, 717, 718, 0, 0, 0, 0, 825, 0,
	719, 0, 869, 715, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 721, 0, 0, 0,
	874, 852, 894, 1004, 853, 851, 340, 866, 797, 1034,
	926, 301, 191, 1040, 924, 823, 992, 870, 1022, 1056,
	912, 311, 868, 195, 865, 871, 910, 353, 1001, 1007,
	807, 198, 313, 1019, 890, 903, 728, 0, 392, 979,
	467, 709, 278, 0, 965, 391, 315, 460, 993, 1042,
	466, 913, 442, 477, 482, 271, 946, 234, 420, 261,
	254, 895, 1012, 858, 284, 375, 249, 306, 929, 985,
	891, 241, 996, 972, 1024, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1006, 1026, 886,
	872, 878, 873, 902, 1043, 293, 285, 1027, 1025, 904,
	361, 224, 956, 949, 942, 811, 471, 1059, 257, 1008,
	473, 180, 406, 405, 916, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 486, 220, 309, 450, 708, 277,
	352, 981, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1005, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	980, 389, 427, 474, 974, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1003, 216, 237, 428, 210, 1038, 1021,
	967, 931, 937, 860, 0, 209, 932, 933, 934, 935,
	936, 999, 893, 905, 885, 975, 884, 281, 991, 729,
	730, 246, 800, 1053, 211, 867, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 968, 955, 953, 861, 1037, 966,
	954, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 957, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 879, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 995, 1062,
	360, 393, 233, 469, 421, 262, 877, 1066, 824, 812,
	813, 816, 960, 961, 814, 817, 818, 826, 798, 799,
	801, 803, 804, 805, 948, 1041, 862, 808, 1017, 819,
	820, 821, 822, 988, 1060, 796, 242, 745, 838, 839,
	840, 746, 841, 842, 747, 748, 843, 844, 845, 846,
	749, 847, 848, 849, 827, 828, 829, 830, 831, 832,
	833, 834, 837, 835, 836, 0, 944, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 806, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1015, 971, 0, 921, 923, 922,
	881, 883, 882, 880, 1064, 346, 1033, 850, 857, 876,
	887, 892, 898, 906, 907, 915, 920, 930, 939, 940,
	950, 963, 964, 970, 994, 997, 1011, 1016, 1023, 1028,
	1029, 472, 252, 947, 969, 1000, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 927,
	196, 0, 0, 202, 0, 203, 205, 914, 201, 1032,
	1057, 976, 990, 901, 1044, 0, 0, 448, 802, 1048,
	888, 911, 1058, 917, 919, 984, 863, 959, 357, 908,
	864, 1009, 0, 0, 855, 1106, 856, 889, 259, 1104,
	1018, 962, 1046, 945, 977, 987, 258, 244, 952, 951,
	1035, 900, 899, 982, 1031, 1045, 0, 0, 172, 478,
	190, 810, 314, 0, 0, 476, 423, 339, 0, 0,
	943, 0, 794, 795, 928, 986, 875, 973, 1050, 909,
	978, 1051, 89, 0, 0, 0, 0, 731, 558, 732,
	734, 735, 736, 737, 0, 0, 171, 733, 738, 739,
	740, 0, 938, 983, 1063, 854, 1123, 720, 859, 809,
	0, 1036, 896, 897, 263, 0, 0, 0, 0, 0,
	0, 0, 941, 958, 1002, 925, 0, 468, 989, 998,
	1013, 918, 376, 283, 0, 0, 0, 0, 717, 718,
	0, 0, 0, 0, 825, 0, 719, 0, 869, 715,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 721, 0, 0, 0, 874, 852, 894, 1004,
	853, 851, 340, 866, 797, 1034, 926, 301, 191, 1040,
	924, 823, 992, 870, 1022, 1056, 912, 311, 868, 195,
	865, 871, 910, 353, 1001, 1007, 807, 198, 313, 1019,
	890, 903, 728, 0, 392, 979, 467, 709, 278, 0,
	4544, 391, 315, 460, 993, 1042, 466, 913, 442, 477,
	482, 271, 946, 234, 420, 261, 254, 895, 1012, 858,
	284, 375, 249, 306, 929, 985, 891, 241, 996, 972,
	1024, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1006, 1026, 886, 872, 878, 873, 902,
	1043, 293, 285, 1027, 1025, 904, 361, 224, 956, 949,
	942, 811, 471, 1059, 257, 1008, 473, 180, 406, 405,
	916, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	486, 220, 309, 450, 708, 277, 352, 981, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1005, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 980, 389, 427, 474,
	974, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1003,
	216, 237, 428, 210, 1038, 1021, 967, 931, 937, 860,
	0, 209, 932, 933, 934, 935, 936, 999, 893, 905,
	885, 975, 884, 281, 991, 729, 730, 246, 800, 1053,
	211, 867, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	968, 955, 953, 861, 1037, 966, 954, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 957, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 879,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 995, 1062, 360, 393, 233, 469,
	421, 262, 877, 1066, 824, 812, 813, 816, 960, 961,
	814, 817, 818, 826, 798, 799, 801, 803, 804, 805,
	948, 1041, 862, 808, 1017, 819, 820, 821, 822, 988,
	1060, 796, 242, 745, 838, 839, 840, 746, 841, 842,
	747, 748, 843, 844, 845, 846, 749, 847, 848, 849,
	827, 828, 829, 830, 831, 832, 833, 834, 837, 835,
	836, 0, 944, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 806, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1015, 971, 0, 921, 923, 922, 881, 883, 882, 880,
	1064, 346, 1033, 850, 857, 876, 887, 892, 898, 906,
	907, 915, 920, 930, 939, 940, 950, 963, 964, 970,
	994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947,
	969, 1000, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 927, 196, 0, 0, 202,
	0, 203, 205, 914, 201, 1032, 1057, 976, 990, 901,
	1044, 0, 0, 448, 802, 1048, 888, 911, 1058, 917,
	919, 984, 863, 959, 357, 908, 864, 1009, 0, 0,
	855, 1106, 856, 889, 259, 1104, 1018, 962, 1046, 945,
	977, 987, 258, 244, 952, 951, 1035, 900, 899, 982,
	1031, 1045, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1050, 909, 978, 1051, 89, 0,
	0, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1063, 854, 1123, 720, 859, 809, 0, 1036, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1013, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 0, 0, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1034, 926, 301, 191, 1040, 924, 823, 992, 870,
	1022, 1056, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1019, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1042, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1012, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1024, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1006,
	1026, 886, 872, 878, 873, 902, 1043, 293, 285, 1027,
	1025, 904, 361, 224, 956, 949, 942, 811, 471, 1059,
	257, 1008, 473, 180, 406, 405, 916, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1038, 1021, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1053, 211, 867, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 968, 955, 953, 861,
	1037, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 879, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1062, 360, 393, 233, 469, 421, 262, 877, 1066,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 2352, 2353, 2354, 808,
	1017, 819, 820, 821, 822, 988, 1060, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1015, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1064, 346, 1033, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1011, 1016,
	1023, 1028, 1029, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1032, 1057, 976, 990, 1828, 2008, 0, 3712, 448,
	1862, 2012, 1811, 1841, 2030, 1847, 1850, 1931, 1777, 1900,
	357, 1838, 1778, 1960, 1761, 1816, 1765, 1829, 1766, 1813,
	259, 1809, 1973, 1903, 2010, 1882, 1924, 1934, 258, 244,
	1892, 1891, 1998, 1827, 1826, 1929, 1987, 2009, 1881, 0,
	172, 478, 190, 3713, 314, 1984, 498, 3714, 423, 339,
	501, 500, 1877, 1993, 1898, 1962, 1860, 1933, 1793, 1916,
	2014, 1839, 1925, 2015, 89, 0, 695, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1921, 2006, 1832, 499, 1872, 1930, 2035, 1764, 1917, 0,
	1769, 1780, 2029, 1999, 1823, 1824, 263, 0, 0, 0,
	0, 0, 0, 0, 1875, 1899, 1951, 1857, 0, 468,
	1936, 1946, 1965, 1849, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 1914, 0, 0, 0,
	1785, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 1792, 1762,
	1820, 1953, 1763, 1760, 340, 1781, 1967, 3716, 1858, 301,
	191, 2003, 1856, 1855, 1940, 1786, 1977, 2027, 1842, 311,
	1784, 195, 1779, 1787, 1840, 353, 1950, 1958, 177, 198,
	313, 1974, 1814, 1831, 245, 2182, 392, 1926, 467, 497,
	278, 0, 1907, 391, 315, 460, 1941, 2005, 466, 1843,
	442, 477, 482, 271, 1883, 234, 420, 261, 254, 1822,
	1964, 1768, 284, 375, 249, 306, 1861, 1932, 1815, 241,
	1944, 1915, 1979, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1975, 1957, 1981, 1808, 1788, 1799,
	1789, 1830, 2007, 293, 285, 1982, 1980, 1833, 361, 224,
	1896, 1889, 1876, 1954, 471, 2031, 257, 1959, 473, 180,
	406, 405, 1846, 292, 1961, 181, 170, 385, 182, 302,
	204, 1986, 486, 220, 309, 450, 496, 277, 352, 1928,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1956, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 2013, 322, 266, 270, 286, 297, 1927, 389,
	427, 474, 1918, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 1952, 216, 237, 428, 210, 2001, 1976, 1909, 1864,
	1870, 1770, 0, 209, 1865, 1866, 1867, 1868, 1869, 1948,
	1819, 1835, 1807, 1922, 1806, 281, 1939, 463, 464, 246,
	1782, 2021, 211, 1783, 2020, 349, 356, 348, 2024, 2022,
	459, 2002, 1910, 1895, 1893, 1775, 2000, 1908, 1894, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1897, 425, 320, 0, 206, 0, 424, 2011, 2037, 439,
	226, 1801, 1968, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1943, 2034, 360, 393,
	233, 469, 421, 262, 1797, 0, 1800, 1795, 1798, 1796,
	1901, 1902, 2016, 2017, 2018, 1955, 1790, 192, 193, 1994,
	1995, 194, 1888, 2004, 1776, 0, 1972, 188, 189, 174,
	179, 1935, 2032, 1848, 242, 164, 1772, 1773, 1774, 165,
	1878, 1879, 167, 168, 1990, 1989, 1988, 1991, 169, 2025,
	2023, 2026, 1791, 1812, 1834, 1884, 1885, 1887, 1919, 1920,
	1966, 1938, 1947, 1821, 1880, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1906, 199, 212, 312,
	3715, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1969, 1913, 0, 1852, 1854, 1853, 1803, 1805,
	1804, 1802, 2036, 346, 1996, 1759, 1767, 1794, 1810, 1817,
	1825, 1836, 1837, 1845, 1851, 1863, 1873, 1874, 1890, 1904,
	1905, 1912, 1942, 1945, 1963, 1971, 1978, 1983, 1985, 472,
	252, 1886, 1911, 1949, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 1859, 196, 0,
	0, 202, 0, 203, 205, 1844, 201, 1992, 2028, 1923,
	1937, 1828, 2008, 0, 1970, 448, 1862, 2012, 1811, 1841,
	2030, 1847, 1850, 1931, 1777, 1900, 357, 1838, 1778, 1960,
	1761, 1816, 1765, 1829, 1766, 1813, 259, 1809, 1973, 1903,
	2010, 1882, 1924, 1934, 258, 244, 1892, 1891, 1998, 1827,
	1826, 1929, 1987, 2009, 1881, 0, 172, 478, 190, 2019,
	314, 1984, 498, 476, 423, 339, 501, 500, 1877, 1993,
	1898, 1962, 1860, 1933, 1793, 1916, 2014, 1839, 1925, 2015,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1921, 2006, 1832, 499,
	1872, 1930, 2035, 1764, 1917, 0, 1769, 1780, 2029, 1999,
	1823, 1824, 263, 0, 0, 0, 0, 0, 0, 0,
	1875, 1899, 1951, 1857, 0, 468, 1936, 1946, 1965, 1849,
	376, 283, 0, 0, 0, 0, 0, 0, 3211, 0,
	1818, 0, 1914, 0, 0, 0, 1785, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 1792, 1762, 1820, 1953, 1763, 1760,
	340, 1781, 1967, 1997, 1858, 301, 191, 2003, 1856, 1855,
	1940, 1786, 1977, 2027, 1842, 311, 1784, 195, 1779, 1787,
	1840, 353, 1950, 1958, 177, 198, 313, 1974, 1814, 1831,
	245, 0, 392, 1926, 467, 2280, 278, 0, 1907, 391,
	315, 460, 1941, 2005, 466, 1843, 442, 477, 482, 271,
	1883, 234, 420, 261, 254, 1822, 1964, 1768, 284, 375,
	249, 306, 1861, 1932, 1815, 241, 1944, 1915, 1979, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1975, 1957, 1981, 1808, 1788, 1799, 1789, 1830, 2007, 293,
	285, 1982, 1980, 1833, 361, 224, 1896, 1889, 1876, 1954,
	471, 2031, 257, 1959, 473, 180, 406, 405, 1846, 292,
	1961, 181, 170, 385, 182, 302, 204, 1986, 486, 220,
	309, 450, 2279, 277, 352, 1928, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1956, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 2013, 322,
	266, 270, 286, 297, 1927, 389, 427, 474, 1918, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1952, 216, 237,
	428, 210, 2001, 1976, 1909, 1864, 1870, 1770, 0, 209,
	1865, 1866, 1867, 1868, 1869, 1948, 1819, 1835, 1807, 1922,
	1806, 281, 1939, 463, 464, 246, 1782, 2021, 211, 1783,
	2020, 349, 356, 348, 2024, 2022, 459, 2002, 1910, 1895,
	1893, 1775, 2000, 1908, 1894, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1897, 425, 320, 0,
	206, 0, 424, 2011, 2037, 439, 226, 1801, 1968, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1943, 2034, 360, 393, 233, 469, 421, 262,
	1797, 0, 1800, 1795, 1798, 1796, 1901, 1902, 2016, 2017,
	2018, 1955, 1790, 192, 193, 1994, 1995, 194, 1888, 2004,
	1776, 0, 1972, 188, 189, 174, 179, 1935, 2032, 1848,
	242, 164, 1772, 1773, 1774, 165, 1878, 1879, 167, 168,
	1990, 1989, 1988, 1991, 169, 2025, 2023, 2026, 1791, 1812,
	1834, 1884, 1885, 1887, 1919, 1920, 1966, 1938, 1947, 1821,
	1880, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1906, 199, 212, 312, 2033, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1969, 1913,
	0, 1852, 1854, 1853, 1803, 1805, 1804, 1802, 2036, 346,
	1996, 1759, 1767, 1794, 1810, 1817, 1825, 1836, 1837, 1845,
	1851, 1863, 1873, 1874, 1890, 1904, 1905, 1912, 1942, 1945,
	1963, 1971, 1978, 1983, 1985, 472, 252, 1886, 1911, 1949,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1859, 196, 0, 0, 202, 0, 203,
	205, 1844, 201, 1992, 2028, 1923, 1937, 1828, 2008, 0,
	1970, 448, 1862, 2012, 1811, 1841, 2030, 1847, 1850, 1931,
	1777, 1900, 357, 1838, 1778, 1960, 1761, 1816, 1765, 1829,
	1766, 1813, 259, 1809, 1973, 1903, 2010, 1882, 1924, 1934,
	258, 244, 1892, 1891, 1998, 1827, 1826, 1929, 1987, 2009,
	1881, 0, 172, 478, 190, 2019, 314, 1984, 498, 476,
	423, 339, 501, 500, 1877, 1993, 1898, 1962, 1860, 1933,
	1793, 1916, 2014, 1839, 1925, 2015, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1921, 2006, 1832, 499, 1872, 1930, 2035, 1764,
	1917, 0, 1769, 1780, 2029, 1999, 1823, 1824, 263, 0,
	0, 0, 0, 0, 0, 0, 1875, 1899, 1951, 1857,
	0, 468, 1936, 1946, 1965, 1849, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 1914, 0,
	0, 0, 1785, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	1792, 1762, 1820, 1953, 1763, 1760, 340, 1781, 1967, 1997,
	1858, 301, 191, 2003, 1856, 1855, 1940, 1786, 1977, 2027,
	1842, 311, 1784, 195, 1779, 1787, 1840, 353, 1950, 1958,
	177, 198, 313, 1974, 1814, 1831, 245, 2182, 392, 1926,
	467, 497, 278, 0, 1907, 391, 315, 460, 1941, 2005,
	466, 1843, 442, 477, 482, 271, 1883, 234, 420, 261,
	254, 1822, 1964, 1768, 284, 375, 249, 306, 1861, 1932,
	1815, 241, 1944, 1915, 1979, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1975, 1957, 1981, 1808,
	1788, 1799, 1789, 1830, 2007, 293, 285, 1982, 1980, 1833,
	361, 224, 1896, 1889, 1876, 1954, 471, 2031, 257, 1959,
	473, 180, 406, 405, 1846, 292, 1961, 181, 170, 385,
	182, 302, 204, 1986, 486, 220, 309, 450, 496, 277,
	352, 1928, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1956, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 2013, 322, 266, 270, 286, 297,
	1927, 389, 427, 474, 1918, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1952, 216, 237, 428, 210, 2001, 1976,
	1909, 1864, 1870, 1770, 0, 209, 1865, 1866, 1867, 1868,
	1869, 1948, 1819, 1835, 1807, 1922, 1806, 281, 1939, 463,
	464, 246, 1782, 2021, 211, 1783, 2020, 349, 356, 348,
	2024, 2022, 459, 2002, 1910, 1895, 1893, 1775, 2000, 1908,
	1894, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1897, 425, 320, 0, 206, 0, 424, 2011,
	2037, 439, 226, 1801, 1968, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1943, 2034,
	360, 393, 233, 469, 421, 262, 1797, 0, 1800, 1795,
	1798, 1796, 1901, 1902, 2016, 2017, 2018, 1955, 1790, 192,
	193, 1994, 1995, 194, 1888, 2004, 1776, 0, 1972, 188,
	189, 174, 179, 1935, 2032, 1848, 242, 164, 1772, 1773,
	1774, 165, 1878, 1879, 167, 168, 1990, 1989, 1988, 1991,
	169, 2025, 2023, 2026, 1791, 1812, 1834, 1884, 1885, 1887,
	1919, 1920, 1966, 1938, 1947, 1821, 1880, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1906, 199,
	212, 312, 2033, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1969, 1913, 0, 1852, 1854, 1853,
	1803, 1805, 1804, 1802, 2036, 346, 1996, 1759, 1767, 1794,
	1810, 1817, 1825, 1836, 1837, 1845, 1851, 1863, 1873, 1874,
	1890, 1904, 1905, 1912, 1942, 1945, 1963, 1971, 1978, 1983,
	1985, 472, 252, 1886, 1911, 1949, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 1859,
	196, 0, 0, 202, 0, 203, 205, 1844, 201, 1992,
	2028, 1923, 1937, 1828, 2008, 0, 1970, 448, 1862, 2012,
	1811, 1841, 2030, 1847, 1850, 1931, 1777, 1900, 357, 1838,
	1778, 1960, 1761, 1816, 1765, 1829, 1766, 1813, 259, 1809,
	1973, 1903, 2010, 1882, 1924, 1934, 258, 244, 1892, 1891,
	1998, 1827, 1826, 1929, 1987, 2009, 1881, 0, 172, 478,
	190, 2019, 314, 1984, 498, 476, 423, 339, 501, 500,
	1877, 1993, 1898, 1962, 1860, 1933, 1793, 1916, 2014, 1839,
	1925, 2015, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1921, 2006,
	1832, 499, 1872, 1930, 2035, 1764, 1917, 0, 1769, 1780,
	2029, 1999, 1823, 1824, 263, 0, 0, 0, 0, 0,
	0, 0, 1875, 1899, 1951, 1857, 0, 468, 1936, 1946,
	1965, 1849, 376, 283, 0, 0, 0, 0, 0, 0,
	2273, 0, 1818, 0, 1914, 0, 0, 0, 1785, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 1792, 1762, 1820, 1953,
	1763, 1760, 340, 1781, 1967, 1997, 1858, 301, 191, 2003,
	1856, 1855, 1940, 1786, 1977, 2027, 1842, 311, 1784, 195,
	1779, 1787, 1840, 353, 1950, 1958, 177, 198, 313, 1974,
	1814, 1831, 245, 0, 392, 1926, 467, 2280, 278, 0,
	1907, 391, 315, 460, 1941, 2005, 466, 1843, 442, 477,
	482, 271, 1883, 234, 420, 261, 254, 1822, 1964, 1768,
	284, 375, 249, 306, 1861, 1932, 1815, 241, 1944, 1915,
	1979, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1975, 1957, 1981, 1808, 1788, 1799, 1789, 1830,
	2007, 293, 285, 1982, 1980, 1833, 361, 224, 1896, 1889,
	1876, 1954, 471, 2031, 257, 1959, 473, 180, 406, 405,
	1846, 292, 1961, 181, 170, 385, 182, 302, 204, 1986,
	486, 220, 309, 450, 2279, 277, 352, 1928, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1956, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	2013, 322, 266, 270, 286, 297, 1927, 389, 427, 474,
	1918, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1952,
	216, 237, 428, 210, 2001, 1976, 1909, 1864, 1870, 1770,
	0, 209, 1865, 1866, 1867, 1868, 1869, 1948, 1819, 1835,
	1807, 1922, 1806, 281, 1939, 463, 464, 246, 1782, 2021,
	211, 1783, 2020, 349, 356, 348, 2024, 2022, 459, 2002,
	1910, 1895, 1893, 1775, 2000, 1908, 1894, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1897, 425,
	320, 0, 206, 0, 424, 2011, 2037, 439, 226, 1801,
	1968, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1943, 2034, 360, 393, 233, 469,
	421, 262, 1797, 0, 1800, 1795, 1798, 1796, 1901, 1902,
	2016, 2017, 2018, 1955, 1790, 192, 193, 1994, 1995, 194,
	1888, 2004, 1776, 0, 1972, 188, 189, 174, 179, 1935,
	2032, 1848, 242, 164, 1772, 1773, 1774, 165, 1878, 1879,
	167, 168, 1990, 1989, 1988, 1991, 169, 2025, 2023, 2026,
	1791, 1812, 1834, 1884, 1885, 1887, 1919, 1920, 1966, 1938,
	1947, 1821, 1880, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1906, 199, 212, 312, 2033, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1969, 1913, 0, 1852, 1854, 1853, 1803, 1805, 1804, 1802,
	2036, 346, 1996, 1759, 1767, 1794, 1810, 1817, 1825, 1836,
	1837, 1845, 1851, 1863, 1873, 1874, 1890, 1904, 1905, 1912,
	1942, 1945, 1963, 1971, 1978, 1983, 1985, 472, 252, 1886,
	1911, 1949, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 1859, 196, 0, 0, 202,
	0, 203, 205, 1844, 201, 1992, 2028, 1923, 1937, 1828,
	2008, 0, 1970, 448, 1862, 2012, 1811, 1841, 2030, 1847,
	1850, 1931, 1777, 1900, 357, 1838, 1778, 1960, 1761, 1816,
	1765, 1829, 1766, 1813, 259, 1809, 1973, 1903, 2010, 1882,
	1924, 1934, 258, 244, 1892, 1891, 1998, 1827, 1826, 1929,
	1987, 2009, 1881, 0, 172, 478, 190, 2019, 314, 1984,
	498, 476, 423, 339, 501, 500, 1877, 1993, 1898, 1962,
	1860, 1933, 1793, 1916, 2014, 1839, 1925, 2015, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1921, 2006, 1832, 499, 1872, 1930,
	2035, 1764, 1917, 0, 1769, 1780, 2029, 1999, 1823, 1824,
	263, 0, 0, 0, 0, 0, 0, 0, 1875, 1899,
	1951, 1857, 0, 468, 1936, 1946, 1965, 1849, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	1914, 0, 0, 0, 1785, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 1792, 1762, 1820, 1953, 1763, 1760, 340, 1781,
	1967, 1997, 1858, 301, 191, 2003, 1856, 1855, 1940, 1786,
	1977, 2027, 1842, 311, 1784, 195, 1779, 1787, 1840, 353,
	1950, 1958, 177, 198, 313, 1974, 1814, 1831, 245, 0,
	392, 1926, 467, 2280, 278, 0, 1907, 391, 315, 460,
	1941, 2005, 466, 1843, 442, 477, 482, 271, 1883, 234,
	420, 261, 254, 1822, 1964, 1768, 284, 375, 249, 306,
	1861, 1932, 1815, 241, 1944, 1915, 1979, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1975, 1957,
	1981, 1808, 1788, 1799, 1789, 1830, 2007, 293, 285, 1982,
	1980, 1833, 361, 224, 1896, 1889, 1876, 1954, 471, 2031,
	257, 1959, 473, 180, 406, 405, 1846, 292, 1961, 181,
	170, 385, 182, 302, 204, 1986, 486, 220, 309, 450,
	2279, 277, 352, 1928, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1956, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 2013, 322, 266, 270,
	286, 297, 1927, 389, 427, 474, 1918, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1952, 216, 237, 428, 210,
	2001, 1976, 1909, 1864, 1870, 1770, 0, 209, 1865, 1866,
	1867, 1868, 1869, 1948, 1819, 1835, 1807, 1922, 1806, 281,
	1939, 463, 464, 246, 1782, 2021, 211, 1783, 2020, 349,
	356, 348, 2024, 2022, 459, 2002, 1910, 1895, 1893, 1775,
	2000, 1908, 1894, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1897, 425, 320, 0, 206, 0,
	424, 2011, 2037, 439, 226, 1801, 1968, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1943, 2034, 360, 393, 233, 469, 421, 262, 1797, 0,
	1800, 1795, 1798, 1796, 1901, 1902, 2016, 2017, 2018, 1955,
	1790, 192, 193, 1994, 1995, 194, 1888, 2004, 1776, 0,
	1972, 188, 189, 174, 179, 1935, 2032, 1848, 242, 164,
	1772, 1773, 1774, 165, 1878, 1879, 167, 168, 1990, 1989,
	1988, 1991, 169, 2025, 2023, 2026, 1791, 1812, 1834, 1884,
	1885, 1887, 1919, 1920, 1966, 1938, 1947, 1821, 1880, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1906, 199, 212, 312, 2033, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1969, 1913, 0, 1852,
	1854, 1853, 1803, 1805, 1804, 1802, 2036, 346, 1996, 1759,
	1767, 1794, 1810, 1817, 1825, 1836, 1837, 1845, 1851, 1863,
	1873, 1874, 1890, 1904, 1905, 1912, 1942, 1945, 1963, 1971,
	1978, 1983, 1985, 472, 252, 1886, 1911, 1949, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1859, 196, 0, 0, 202, 0, 203, 205, 1844,
	201, 1992, 2028, 1923, 1937, 901, 1044, 0, 0, 448,
	1111, 1048, 888, 911, 1058, 917, 919, 984, 863, 959,
	357, 908, 864, 1009, 0, 0, 855, 1106, 856, 889,
	259, 1104, 1018, 962, 1046, 945, 977, 987, 258, 244,
	952, 951, 1035, 900, 899, 982, 1031, 1045, 0, 0,
	172, 478, 190, 1144, 314, 0, 498, 476, 423, 339,
	501, 500, 943, 0, 1118, 1131, 928, 986, 875, 973,
	1050, 909, 978, 1051, 0, 0, 0, 0, 0, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1126, 1140, 1107, 499, 938, 983, 1063, 854, 1123, 0,
	859, 1095, 0, 1036, 896, 897, 263, 0, 0, 0,
	0, 0, 0, 0, 941, 958, 1002, 925, 0, 468,
	989, 998, 1013, 918, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1122, 0, 0, 0,
	869, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 874, 852,
	894, 1004, 853, 851, 340, 866, 1133, 1034, 926, 301,
	191, 1040, 924, 1110, 992, 870, 1022, 1056, 912, 311,
	868, 195, 865, 871, 910, 353, 1001, 1007, 177, 198,
	313, 1019, 890, 903, 245, 3311, 392, 979, 467, 2365,
	278, 0, 965, 391, 315, 460, 993, 1042, 466, 913,
	442, 477, 482, 271, 946, 234, 420, 261, 254, 895,
	1012, 858, 284, 375, 249, 306, 929, 985, 891, 241,
	996, 972, 1024, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1006, 1026, 886, 872, 878,
	873, 902, 1043, 293, 285, 1027, 1025, 904, 361, 224,
	956, 949, 942, 1129, 471, 1059, 257, 1008, 473, 180,
	406, 405, 916, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 486, 220, 309, 450, 2364, 277, 352, 981,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1005, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 980, 389,
	427, 474, 974, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 1003, 216, 237, 428, 210, 1038, 1021, 967, 931,
	937, 860, 0, 209, 932, 933, 934, 935, 936, 999,
	893, 905, 885, 975, 884, 281, 991, 463, 464, 246,
	1096, 1053, 211, 867, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 968, 955, 953, 861, 1037, 966, 954, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	957, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 879, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 995, 1062, 360, 393,
	233, 469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100,
	1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138,
	1139, 194, 948, 1041, 862, 0, 1017, 188, 189, 174,
	179, 988, 1060, 1109, 242, 164, 1092, 1093, 1094, 165,
	1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146,
	1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125,
	1132, 1127, 1128, 0, 944, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1121, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1015, 971, 0, 921, 923, 922, 881, 883,
	882, 880, 1064, 346, 1033, 850, 857, 876, 887, 892,
	898, 906, 907, 915, 920, 930, 939, 940, 950, 963,
	964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472,
	252, 947, 969, 1000, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 927, 196, 0,
	0, 202, 0, 203, 205, 914, 201, 1032, 1057, 976,
	990, 1828, 2008, 0, 1970, 448, 1862, 2012, 1811, 1841,
	2030, 1847, 1850, 1931, 1777, 1900, 357, 1838, 1778, 1960,
	1761, 1816, 1765, 1829, 1766, 1813, 259, 1809, 1973, 1903,
	2010, 1882, 1924, 1934, 258, 244, 1892, 1891, 1998, 1827,
	1826, 1929, 1987, 2009, 1881, 0, 172, 478, 190, 2019,
	314, 1984, 498, 476, 423, 339, 501, 500, 1877, 1993,
	1898, 1962, 1860, 1933, 1793, 1916, 2014, 1839, 1925, 2015,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1921, 2006, 1832, 499,
	1872, 1930, 2035, 1764, 1917, 0, 1769, 1780, 2029, 1999,
	1823, 1824, 263, 0, 0, 0, 0, 0, 0, 0,
	1875, 1899, 1951, 1857, 0, 468, 1936, 1946, 1965, 1849,
	376, 283, 0, 0, 0, 0, 0, 0, 2863, 0,
	1818, 0, 1914, 0, 0, 0, 1785, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 1792, 1762, 1820, 1953, 1763, 1760,
	340, 1781, 1967, 1997, 1858, 301, 191, 2003, 1856, 1855,
	1940, 1786, 1977, 2027, 1842, 311, 1784, 195, 1779, 1787,
	1840, 353, 1950, 1958, 177, 198, 313, 1974, 1814, 1831,
	245, 0, 392, 1926, 467, 497, 278, 0, 1907, 391,
	315, 460, 1941, 2005, 466, 1843, 442, 477, 482, 271,
	1883, 234, 420, 261, 254, 1822, 1964, 1768, 284, 375,
	249, 306, 1861, 1932, 1815, 241, 1944, 1915, 1979, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1975, 1957, 1981, 1808, 1788, 1799, 1789, 1830, 2007, 293,
	285, 1982, 1980, 1833, 361, 224, 1896, 1889, 1876, 1954,
	471, 2031, 257, 1959, 473, 180, 406, 405, 1846, 292,
	1961, 181, 170, 385, 182, 302, 204, 1986, 486, 220,
	309, 450, 496, 277, 352, 1928, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1956, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 2013, 322,
	266, 270, 286, 297, 1927, 389, 427, 474, 1918, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1952, 216, 237,
	428, 210, 2001, 1976, 1909, 1864, 1870, 1770, 0, 209,
	1865, 1866, 1867, 1868, 1869, 1948, 1819, 1835, 1807, 1922,
	1806, 281, 1939, 463, 464, 246, 1782, 2021, 211, 1783,
	2020, 349, 356, 348, 2024, 2022, 459, 2002, 1910, 1895,
	1893, 1775, 2000, 1908, 1894, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1897, 425, 320, 0,
	206, 0, 424, 2011, 2037, 439, 226, 1801, 1968, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1943, 2034, 360, 393, 233, 469, 421, 262,
	1797, 0, 1800, 1795, 1798, 1796, 1901, 1902, 2016, 2017,
	2018, 1955, 1790, 0, 0, 1994, 1995, 0, 1888, 2004,
	1776, 0, 1972, 188, 189, 174, 179, 1935, 2032, 1848,
	242, 0, 1772, 1773, 1774, 0, 1878, 1879, 0, 0,
	1990, 1989, 1988, 1991, 0, 2025, 2023, 2026, 1791, 1812,
	1834, 1884, 1885, 1887, 1919, 1920, 1966, 1938, 1947, 1821,
	1880, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1906, 199, 212, 312, 2033, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1969, 1913,
	0, 1852, 1854, 1853, 1803, 1805, 1804, 1802, 2036, 346,
	1996, 1759, 1767, 1794, 1810, 1817, 1825, 1836, 1837, 1845,
	1851, 1863, 1873, 1874, 1890, 1904, 1905, 1912, 1942, 1945,
	1963, 1971, 1978, 1983, 1985, 472, 252, 1886, 1911, 1949,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1859, 196, 0, 0, 202, 0, 203,
	205, 1844, 201, 1992, 2028, 1923, 1937, 901, 1044, 0,
	0, 448, 1111, 1048, 888, 911, 1058, 917, 919, 984,
	863, 959, 357, 908, 864, 1009, 0, 0, 855, 1106,
	856, 889, 259, 1104, 1018, 962, 1046, 945, 977, 987,
	258, 244, 952, 951, 1035, 900, 899, 982, 1031, 1045,
	0, 0, 172, 478, 190, 1144, 314, 0, 498, 476,
	423, 339, 501, 500, 943, 0, 1118, 1131, 928, 986,
	875, 973, 1050, 909, 978, 1051, 0, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1126, 1140, 1107, 499, 938, 983, 1063, 854,
	1123, 0, 859, 1095, 0, 1036, 896, 897, 263, 0,
	0, 0, 0, 0, 0, 0, 941, 958, 1002, 925,
	0, 468, 989, 998, 1013, 918, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1122, 0,
	0, 0, 869, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	874, 852, 894, 1004, 853, 851, 340, 866, 1133, 1034,
	926, 301, 191, 1040, 924, 1110, 992, 870, 1022, 1056,
	912, 311, 868, 195, 865, 871, 910, 353, 1001, 1007,
	177, 198, 313, 1019, 890, 903, 245, 0, 392, 979,
	467, 2365, 278, 0, 965, 391, 315, 460, 993, 1042,
	466, 913, 442, 477, 482, 271, 946, 234, 420, 261,
	254, 895, 1012, 858, 284, 375, 249, 306, 929, 985,
	891, 241, 996, 972, 1024, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1006, 1026, 886,
	872, 878, 873, 902, 1043, 293, 285, 1027, 1025, 904,
	361, 224, 956, 949, 942, 1129, 471, 1059, 257, 1008,
	473, 180, 406, 405, 916, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 486, 220, 309, 450, 2364, 277,
	352, 981, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1005, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	980, 389, 427, 474, 974, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1003, 216, 237, 428, 210, 1038, 1021,
	967, 931, 937, 860, 0, 209, 932, 933, 934, 935,
	936, 999, 893, 905, 885, 975, 884, 281, 991, 463,
	464, 246, 1096, 1053, 211, 867, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 968, 955, 953, 861, 1037, 966,
	954, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 957, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 879, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 995, 1062,
	360, 393, 233, 469, 421, 262, 1101, 0, 1103, 1099,
	1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192,
	193, 1138, 1139, 194, 948, 1041, 862, 0, 1017, 188,
	189, 174, 179, 988, 1060, 1109, 242, 164, 1092, 1093,
	1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137,
	169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117,
	1124, 1125, 1132, 1127, 1128, 0, 944, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1121, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1015, 971, 0, 921, 923, 922,
	881, 883, 882, 880, 1064, 346, 1033, 850, 857, 876,
	887, 892, 898, 906, 907, 915, 920, 930, 939, 940,
	950, 963, 964, 970, 994, 997, 1011, 1016, 1023, 1028,
	1029, 472, 252, 947, 969, 1000, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 927,
	196, 0, 0, 202, 0, 203, 205, 914, 201, 1032,
	1057, 976, 990, 1828, 2008, 0, 1970, 448, 1862, 2012,
	1811, 1841, 2030, 1847, 1850, 1931, 1777, 1900, 357, 1838,
	1778, 1960, 1761, 1816, 1765, 1829, 1766, 1813, 259, 1809,
	1973, 1903, 2010, 1882, 1924, 1934, 258, 244, 1892, 1891,
	1998, 1827, 1826, 1929, 1987, 2009, 1881, 0, 172, 478,
	190, 2019, 314, 1984, 498, 476, 423, 339, 501, 500,
	1877, 1993, 1898, 1962, 1860, 1933, 1793, 1916, 2014, 1839,
	1925, 2015, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1921, 2006,
	1832, 499, 1872, 1930, 2035, 1764, 1917, 0, 1769, 1780,
	2029, 1999, 1823, 1824, 263, 0, 0, 0, 0, 0,
	0, 0, 1875, 1899, 1951, 1857, 0, 468, 1936, 1946,
	1965, 1849, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 1914, 0, 0, 0, 1785, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 1792, 1762, 1820, 1953,
	1763, 1760, 340, 1781, 1967, 1997, 1858, 301, 191, 2003,
	1856, 1855, 1940, 1786, 1977, 2027, 1842, 311, 1784, 195,
	1779, 1787, 1840, 353, 1950, 1958, 177, 198, 313, 1974,
	1814, 1831, 245, 0, 392, 1926, 467, 497, 278, 0,
	1907, 391, 315, 460, 1941, 2005, 466, 1843, 442, 477,
	482, 271, 1883, 234, 420, 261, 254, 1822, 1964, 1768,
	284, 375, 249, 306, 1861, 1932, 1815, 241, 1944, 1915,
	1979, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1975, 1957, 1981, 1808, 1788, 1799, 1789, 1830,
	2007, 293, 285, 1982, 1980, 1833, 361, 224, 1896, 1889,
	1876, 1954, 471, 2031, 257, 1959, 473, 180, 406, 405,
	1846, 292, 1961, 181, 170, 385, 182, 302, 204, 1986,
	486, 220, 309, 450, 496, 277, 352, 1928, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1956, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	2013, 322, 266, 270, 286, 297, 1927, 389, 427, 474,
	1918, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1952,
	216, 237, 428, 210, 2001, 1976, 1909, 1864, 1870, 1770,
	0, 209, 1865, 1866, 1867, 1868, 1869, 1948, 1819, 1835,
	1807, 1922, 1806, 281, 1939, 463, 464, 246, 1782, 2021,
	211, 1783, 2020, 349, 356, 348, 2024, 2022, 459, 2002,
	1910, 1895, 1893, 1775, 2000, 1908, 1894, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1897, 425,
	320, 0, 206, 0, 424, 2011, 2037, 439, 226, 1801,
	1968, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1943, 2034, 360, 393, 233, 469,
	421, 262, 1797, 0, 1800, 1795, 1798, 1796, 1901, 1902,
	2016, 2017, 2018, 1955, 1790, 0, 0, 1994, 1995, 0,
	1888, 2004, 1776, 0, 1972, 188, 189, 174, 179, 1935,
	2032, 1848, 242, 0, 1772, 1773, 1774, 0, 1878, 1879,
	0, 0, 1990, 1989, 1988, 1991, 0, 2025, 2023, 2026,
	1791, 1812, 1834, 1884, 1885, 1887, 1919, 1920, 1966, 1938,
	1947, 1821, 1880, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1906, 199, 212, 312, 2033, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1969, 1913, 0, 1852, 1854, 1853, 1803, 1805, 1804, 1802,
	2036, 346, 1996, 1759, 1767, 1794, 1810, 1817, 1825, 1836,
	1837, 1845, 1851, 1863, 1873, 1874, 1890, 1904, 1905, 1912,
	1942, 1945, 1963, 1971, 1978, 1983, 1985, 472, 252, 1886,
	1911, 1949, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 1859, 196, 0, 0, 202,
	0, 203, 205, 1844, 201, 1992, 2028, 1923, 1937, 901,
	1044, 0, 0, 448, 1111, 1048, 888, 911, 1058, 917,
	919, 984, 863, 959, 357, 908, 864, 1009, 0, 0,
	855, 1106, 856, 889, 259, 1104, 1018, 962, 1046, 945,
	977, 987, 258, 244, 952, 951, 1035, 900, 899, 982,
	1031, 1045, 0, 0, 172, 478, 190, 1144, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 1118, 1131,
	928, 986, 875, 973, 1050, 909, 978, 1051, 0, 0,
	0, 0, 0, 0, 558, 0, 1452, 0, 0, 1453,
	0, 0, 171, 0, 1126, 1140, 1107, 0, 938, 983,
	1063, 854, 1123, 0, 859, 1095, 0, 1036, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1013, 918, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 869, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	1133, 1034, 926, 301, 191, 1040, 924, 1110, 992, 870,
	1022, 1056, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 177, 198, 313, 1019, 890, 903, 245, 0,
	392, 979, 467, 1090, 278, 0, 965, 391, 315, 460,
	993, 1042, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1012, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1024, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1006,
	1026, 886, 872, 878, 873, 902, 1043, 293, 285, 1027,
	1025, 904, 361, 224, 956, 949, 942, 1129, 471, 1059,
	257, 1008, 473, 180, 406, 405, 916, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 486, 220, 309, 450,
	1089, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1038, 1021, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 463, 464, 246, 1096, 1053, 211, 867, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 968, 955, 953, 861,
	1037, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 879, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1062, 360, 393, 233, 469, 421, 262, 1101, 0,
	1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130,
	1097, 192, 193, 1138, 1139, 194, 948, 1041, 862, 0,
	1017, 188, 189, 174, 179, 988, 1060, 1109, 242, 164,
	1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135,
	1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115,
	1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1121, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1015, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1064, 346, 1033, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1011, 1016,
	1023, 1028, 1029, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1032, 1057, 976, 990, 901, 1044, 0, 0, 448,
	1111, 1048, 888, 911, 1058, 917, 919, 984, 863, 959,
	357, 908, 864, 1009, 0, 0, 855, 1106, 856, 889,
	259, 1104, 1018, 962, 1046, 945, 977, 987, 258, 244,
	952, 951, 1035, 900, 899, 982, 1031, 1045, 0, 0,
	172, 478, 190, 1144, 314, 0, 0, 476, 423, 339,
	0, 0, 943, 0, 1118, 1131, 928, 986, 875, 973,
	1050, 909, 978, 1051, 0, 0, 0, 0, 0, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1126, 1140, 1107, 0, 938, 983, 1063, 854, 1123, 0,
	859, 1095, 0, 1036, 896, 897, 263, 0, 0, 0,
	0, 0, 0, 0, 941, 958, 1002, 925, 0, 468,
	989, 998, 1013, 918, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1122, 0, 0, 0,
	869, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 874, 852,
	894, 1004, 853, 851, 340, 866, 1133, 1034, 926, 301,
	191, 1040, 924, 1110, 992, 870, 1022, 1056, 912, 311,
	868, 195, 865, 871, 910, 353, 1001, 1007, 177, 198,
	313, 1019, 890, 903, 245, 0, 392, 979, 467, 1090,
	278, 0, 965, 391, 315, 460, 993, 1042, 466, 913,
	442, 477, 482, 271, 946, 234, 420, 261, 254, 895,
	1012, 858, 284, 375, 249, 306, 929, 985, 891, 241,
	996, 972, 1024, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1006, 1026, 886, 872, 878,
	873, 902, 1043, 293, 285, 1027, 1025, 904, 361, 224,
	956, 949, 942, 1129, 471, 1059, 257, 1008, 473, 180,
	406, 405, 916, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 486, 220, 309, 450, 1089, 277, 352, 981,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1005, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 980, 389,
	427, 474, 974, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 1003, 216, 237, 428, 210, 1038, 1021, 967, 931,
	937, 860, 0, 209, 932, 933, 934, 935, 936, 999,
	893, 905, 885, 975, 884, 281, 991, 463, 464, 246,
	1096, 1053, 211, 867, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 968, 955, 953, 861, 1037, 966, 954, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	957, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 879, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 995, 1062, 360, 393,
	233, 469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100,
	1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138,
	1139, 194, 948, 1041, 862, 0, 1017, 188, 189, 174,
	179, 988, 1060, 1109, 242, 164, 1092, 1093, 1094, 165,
	1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146,
	1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125,
	1132, 1127, 1128, 0, 944, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1121, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1015, 971, 0, 921, 923, 922, 881, 883,
	882, 880, 1064, 346, 1033, 850, 857, 876, 887, 892,
	898, 906, 907, 915, 920, 930, 939, 940, 950, 963,
	964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472,
	252, 947, 969, 1000, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 927, 196, 0,
	0, 202, 0, 203, 205, 914, 201, 1032, 1057, 976,
	990, 901, 1044, 0, 0, 448, 1111, 1048, 888, 911,
	1058, 917, 919, 984, 863, 959, 357, 908, 864, 1009,
	0, 0, 855, 1106, 856, 889, 259, 1104, 1018, 962,
	1046, 945, 977, 987, 258, 244, 952, 951, 1035, 900,
	899, 982, 1031, 1045, 0, 0, 172, 478, 190, 1144,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	1118, 1131, 928, 986, 875, 973, 1050, 909, 978, 1051,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1126, 1140, 1107, 0,
	938, 983, 1063, 854, 1123, 0, 859, 1095, 0, 1036,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1013, 918,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1122, 0, 0, 0, 869, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 1133, 1034, 926, 301, 191, 1040, 924, 1110,
	992, 870, 1022, 1056, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 177, 198, 313, 1019, 890, 903,
	245, 0, 392, 979, 467, 1090, 278, 0, 965, 391,
	315, 460, 993, 1042, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1012, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1024, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1020, 1006, 1026, 886, 872, 878, 873, 902, 1043, 293,
	285, 1027, 1025, 904, 361, 224, 956, 949, 942, 1129,
	471, 1059, 257, 1008, 473, 180, 406, 405, 916, 292,
	1010, 181, 170, 385, 182, 302, 204, 1030, 486, 220,
	309, 450, 1089, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1049, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1038, 1021, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 463, 464, 246, 1096, 1053, 211, 1084,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 968, 955,
	953, 861, 1037, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 1080, 957, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 879, 1014, 454,
	178, 381, 227, 279, 267, 372, 1085, 1083, 1074, 1075,
	308, 316, 995, 1062, 360, 393, 233, 469, 421, 262,
	1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142,
	1143, 1130, 1097, 192, 193, 1138, 1139, 194, 948, 1041,
	862, 0, 1017, 188, 189, 174, 179, 988, 1060, 1109,
	242, 164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168,
	1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105,
	1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1121, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1015, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1064, 346,
	1033, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 1081, 1082, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1032, 1057, 976, 990, 901, 1044, 0,
	0, 448, 1111, 1048, 888, 911, 1058, 917, 919, 984,
	863, 959, 357, 908, 864, 1009, 0, 0, 855, 1106,
	856, 889, 259, 1104, 1018, 962, 1046, 945, 977, 987,
	258, 244, 952, 951, 1035, 900, 899, 982, 1031, 1045,
	0, 0, 172, 478, 190, 1144, 314, 0, 0, 476,
	423, 339, 0, 0, 943, 0, 1118, 1131, 928, 986,
	875, 973, 1050, 909, 978, 1051, 0, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1126, 1140, 1107, 0, 938, 983, 1063, 854,
	1123, 0, 859, 1095, 0, 1036, 896, 897, 263, 0,
	0, 0, 0, 0, 0, 0, 941, 958, 1002, 925,
	0, 468, 989, 998, 1013, 918, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1122, 0,
	0, 0, 869, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	874, 852, 894, 1004, 853, 851, 340, 866, 1133, 1034,
	926, 301, 191, 1040, 924, 1110, 992, 870, 1022, 1056,
	912, 311, 868, 195, 865, 871, 910, 353, 1001, 1007,
	177, 198, 313, 1019, 890, 903, 245, 0, 392, 979,
	467, 1090, 278, 0, 965, 391, 315, 460, 993, 1042,
	466, 913, 442, 477, 482, 271, 946, 234, 420, 261,
	254, 895, 1012, 858, 284, 375, 249, 306, 929, 985,
	891, 241, 996, 972, 1024, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1006, 1026, 886,
	872, 878, 873, 902, 1043, 293, 285, 1027, 1025, 904,
	361, 224, 956, 949, 942, 1129, 471, 1059, 257, 1008,
	473, 180, 406, 405, 916, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 486, 220, 309, 450, 1089, 277,
	352, 981, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1005, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	980, 389, 427, 474, 974, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 1618, 229,
	407, 410, 485, 1003, 216, 237, 428, 210, 1038, 1021,
	967, 931, 937, 860, 0, 209, 932, 933, 934, 935,
	936, 999, 893, 905, 885, 975, 884, 281, 991, 463,
	464, 246, 1096, 1053, 211, 867, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 968, 955, 953, 861, 1037, 966,
	954, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 957, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 879, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 995, 1062,
	360, 393, 233, 469, 421, 262, 1101, 0, 1103, 1099,
	1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192,
	193, 1138, 1139, 194, 948, 1041, 862, 0, 1017, 188,
	189, 174, 179, 988, 1060, 1109, 242, 164, 1092, 1093,
	1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137,
	169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117,
	1124, 1125, 1132, 1127, 1128, 0, 944, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1121, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1015, 971, 0, 921, 923, 922,
	881, 883, 882, 880, 1064, 346, 1033, 850, 857, 876,
	887, 892, 898, 906, 907, 915, 920, 930, 939, 940,
	950, 963, 964, 970, 994, 997, 1011, 1016, 1023, 1028,
	1029, 472, 252, 947, 969, 1000, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 927,
	196, 0, 0, 202, 0, 203, 205, 914, 201, 1032,
	1057, 976, 990, 901, 1044, 0, 0, 448, 1111, 1048,
	888, 911, 1058, 917, 919, 984, 863, 959, 357, 908,
	864, 1009, 0, 0, 855, 1106, 856, 889, 259, 1104,
	1018, 962, 1046, 945, 977, 987, 258, 244, 952, 951,
	1035, 900, 899, 982, 1031, 1045, 0, 0, 172, 478,
	190, 1144, 314, 0, 0, 476, 423, 339, 0, 0,
	943, 0, 1118, 1131, 928, 986, 875, 973, 1050, 909,
	978, 1051, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1126, 1140,
	1107, 0, 938, 983, 1063, 854, 1123, 0, 859, 1095,
	0, 1036, 896, 897, 263, 0, 0, 0, 0, 0,
	0, 0, 941, 958, 1002, 925, 0, 468, 989, 998,
	1013, 918, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1122, 0, 0, 0, 869, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 0, 0, 0, 874, 852, 894, 1004,
	853, 851, 340, 866, 1133, 1034, 926, 301, 191, 1040,
	924, 1110, 992, 870, 1022, 1056, 912, 311, 868, 195,
	865, 871, 910, 353, 1001, 1007, 177, 198, 313, 1019,
	890, 903, 245, 0, 392, 979, 467, 1090, 278, 0,
	965, 391, 315, 460, 993, 1042, 466, 913, 442, 477,
	482, 271, 946, 234, 420, 261, 254, 895, 1012, 858,
	284, 375, 249, 306, 929, 985, 891, 241, 996, 972,
	1024, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1006, 1026, 886, 872, 878, 873, 902,
	1043, 293, 285, 1027, 1025, 904, 361, 224, 956, 949,
	942, 1129, 471, 1059, 257, 1008, 473, 180, 406, 405,
	916, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	486, 220, 309, 450, 1089, 277, 352, 981, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1005, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 980, 389, 427, 474,
	974, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 1071, 229, 407, 410, 485, 1003,
	216, 237, 428, 210, 1038, 1021, 967, 931, 937, 860,
	0, 209, 932, 933, 934, 935, 936, 999, 893, 905,
	885, 975, 884, 281, 991, 463, 464, 246, 1096, 1053,
	211, 1084, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	968, 955, 953, 861, 1037, 966, 954, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 1080, 957, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 879,
	1014, 454, 178, 381, 227, 279, 267, 372, 1085, 1083,
	1074, 1075, 308, 316, 995, 1062, 360, 393, 233, 469,
	421, 262, 1101, 0, 1103, 1099, 1102, 1100, 1119, 1120,
	1141, 1142, 1143, 1130, 1097, 192, 193, 1138, 1139, 194,
	948, 1041, 862, 0, 1017, 188, 189, 174, 179, 988,
	1060, 1109, 242, 164, 1092, 1093, 1094, 165, 1113, 1114,
	167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145, 1147,
	1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127,
	1128, 0, 944, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1121, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1015, 971, 0, 921, 923, 922, 881, 883, 882, 880,
	1064, 346, 1033, 850, 857, 876, 887, 892, 898, 906,
	907, 915, 920, 930, 939, 940, 950, 963, 964, 970,
	994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947,
	969, 1000, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 1081, 1082,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 927, 196, 0, 0, 202,
	0, 203, 205, 914, 201, 1032, 1057, 976, 990, 1828,
	2008, 0, 1970, 448, 1862, 2012, 1811, 1841, 2030, 1847,
	1850, 1931, 1777, 1900, 357, 1838, 1778, 1960, 1761, 1816,
	1765, 1829, 1766, 1813, 259, 1809, 1973, 1903, 2010, 1882,
	1924, 1934, 258, 244, 1892, 1891, 1998, 1827, 1826, 1929,
	1987, 2009, 1881, 0, 0, 478, 0, 2019, 314, 1984,
	0, 476, 423, 339, 0, 0, 1877, 1993, 1898, 1962,
	1860, 1933, 1793, 1916, 2014, 1839, 1925, 2015, 0, 0,
	0, 0, 0, 3169, 3174, 0, 3177, 3179, 3178, 0,
	0, 0, 3171, 0, 1921, 2006, 1832, 0, 1872, 1930,
	2035, 1764, 1917, 0, 1769, 1780, 2029, 1999, 1823, 1824,
	263, 0, 0, 0, 0, 0, 0, 0, 1875, 1899,
	1951, 1857, 0, 468, 1936, 1946, 1965, 1849, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	1914, 0, 0, 0, 1785, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 1792, 1762, 1820, 1953, 1763, 1760, 340, 1781,
	1967, 1997, 1858, 301, 0, 2003, 1856, 1855, 1940, 1786,
	1977, 2027, 1842, 311, 1784, 195, 1779, 1787, 1840, 353,
	1950, 1958, 0, 198, 313, 1974, 1814, 1831, 245, 0,
	392, 1926, 467, 0, 278, 0, 1907, 391, 315, 460,
	1941, 2005, 466, 1843, 442, 477, 482, 271, 1883, 234,
	420, 261, 254, 1822, 1964, 1768, 284, 375, 249, 306,
	1861, 1932, 1815, 241, 1944, 1915, 1979, 419, 457, 200,
	334, 458, 481, 3172, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1975, 1957,
	1981, 1808, 1788, 1799, 1789, 1830, 2007, 293, 285, 1982,
	1980, 1833, 361, 224, 1896, 1889, 1876, 1954, 471, 2031,
	257, 1959, 473, 0, 406, 405, 1846, 292, 1961, 0,
	0, 385, 3173, 302, 204, 1986, 486, 220, 309, 450,
	0, 277, 352, 1928, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1956, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 2013, 322, 266, 270,
	286, 297, 1927, 389, 427, 474, 1918, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1952, 216, 237, 428, 210,
	2001, 1976, 1909, 1864, 1870, 1770, 0, 209, 1865, 1866,
	1867, 1868, 1869, 1948, 1819, 1835, 1807, 1922, 1806, 281,
	1939, 463, 464, 246, 1782, 2021, 211, 1783, 2020, 349,
	356, 348, 2024, 2022, 459, 2002, 1910, 1895, 1893, 1775,
	2000, 1908, 1894, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1897, 425, 320, 0, 206, 0,
	424, 2011, 2037, 439, 226, 1801, 1968, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1943, 2034, 360, 393, 233, 469, 421, 262, 1797, 0,
	1800, 1795, 1798, 1796, 1901, 1902, 2016, 2017, 2018, 1955,
	1790, 0, 0, 1994, 1995, 0, 1888, 2004, 1776, 0,
	1972, 0, 0, 0, 0, 1935, 2032, 1848, 242, 0,
	1772, 1773, 1774, 0, 1878, 1879, 0, 0, 1990, 1989,
	1988, 1991, 0, 2025, 2023, 2026, 1791, 1812, 1834, 1884,
	1885, 1887, 1919, 1920, 1966, 1938, 1947, 1821, 1880, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1906, 199, 212, 312, 2033, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1969, 1913, 0, 1852,
	1854, 1853, 1803, 1805, 1804, 1802, 2036, 346, 1996, 1759,
	1767, 1794, 1810, 1817, 1825, 1836, 1837, 1845, 1851, 1863,
	1873, 1874, 1890, 1904, 1905, 1912, 1942, 1945, 1963, 1971,
	1978, 1983, 1985, 472, 252, 1886, 1911, 1949, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1859, 196, 0, 0, 202, 0, 203, 205, 1844,
	201, 1992, 2028, 1923, 1937, 1828, 2008, 0, 1970, 448,
	1862, 2012, 1811, 1841, 2030, 1847, 1850, 1931, 1777, 1900,
	357, 1838, 1778, 1960, 1761, 1816, 1765, 1829, 1766, 1813,
	259, 1809, 1973, 1903, 2010, 1882, 1924, 1934, 258, 244,
	1892, 1891, 1998, 1827, 1826, 1929, 1987, 2009, 1881, 0,
	0, 478, 0, 2019, 314, 1984, 0, 476, 423, 339,
	0, 0, 1877, 1993, 1898, 1962, 1860, 1933, 1793, 1916,
	2014, 1839, 1925, 2015, 0, 0, 0, 0, 0, 3980,
	3174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1921, 2006, 1832, 0, 1872, 1930, 2035, 1764, 1917, 0,
	1769, 1780, 2029, 1999, 1823, 1824, 263, 0, 0, 0,
	0, 0, 0, 0, 1875, 1899, 1951, 1857, 0, 468,
	1936, 1946, 1965, 1849, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 1914, 0, 0, 0,
	1785, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 1792, 1762,
	1820, 1953, 1763, 1760, 340, 1781, 1967, 1997, 1858, 301,
	0, 2003, 1856, 1855, 1940, 1786, 1977, 2027, 1842, 311,
	1784, 195, 1779, 1787, 1840, 353, 1950, 1958, 0, 198,
	313, 1974, 1814, 1831, 245, 0, 392, 1926, 467, 0,
	278, 0, 1907, 391, 315, 460, 1941, 2005, 466, 1843,
	442, 477, 482, 271, 1883, 234, 420, 261, 254, 1822,
	1964, 1768, 284, 375, 249, 306, 1861, 1932, 1815, 241,
	1944, 1915, 1979, 419, 457, 200, 334, 458, 481, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1975, 1957, 1981, 1808, 1788, 1799,
	1789, 1830, 2007, 293, 285, 1982, 1980, 1833, 361, 224,
	1896, 1889, 1876, 1954, 471, 2031, 257, 1959, 473, 0,
	406, 405, 1846, 292, 1961, 0, 0, 385, 0, 302,
	204, 1986, 486, 220, 309, 450, 0, 277, 352, 1928,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	1956, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 2013, 322, 266, 270, 286, 297, 1927, 389,
	427, 474, 1918, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 1952, 216, 237, 428, 210, 2001, 1976, 1909, 1864,
	1870, 1770, 0, 209, 1865, 1866, 1867, 1868, 1869, 1948,
	1819, 1835, 1807, 1922, 1806, 281, 1939, 463, 464, 246,
	1782, 2021, 211, 1783, 2020, 349, 356, 348, 2024, 2022,
	459, 2002, 1910, 1895, 1893, 1775, 2000, 1908, 1894, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1897, 425, 320, 0, 206, 0, 424, 2011, 2037, 439,
	226, 1801, 1968, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1943, 2034, 360, 393,
	233, 469, 421, 262, 1797, 0, 1800, 1795, 1798, 1796,
	1901, 1902, 2016, 2017, 2018, 1955, 1790, 0, 0, 1994,
	1995, 0, 1888, 2004, 1776, 0, 1972, 0, 0, 0,
	0, 1935, 2032, 1848, 242, 0, 1772, 1773, 1774, 0,
	1878, 1879, 0, 0, 1990, 1989, 1988, 1991, 0, 2025,
	2023, 2026, 1791, 1812, 1834, 1884, 1885, 1887, 1919, 1920,
	1966, 1938, 1947, 1821, 1880, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1906, 199, 212, 312,
	2033, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1969, 1913, 0, 1852, 1854, 1853, 1803, 1805,
	1804, 1802, 2036, 346, 1996, 1759, 1767, 1794, 1810, 1817,
	1825, 1836, 1837, 1845, 1851, 1863, 1873, 1874, 1890, 1904,
	1905, 1912, 1942, 1945, 1963, 1971, 1978, 1983, 1985, 472,
	252, 1886, 1911, 1949, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 1859, 196, 0,
	0, 202, 0, 203, 205, 1844, 201, 1992, 2028, 1923,
	1937, 1828, 2008, 0, 1970, 448, 1862, 2012, 1811, 1841,
	2030, 1847, 1850, 1931, 1777, 1900, 357, 1838, 1778, 1960,
	1761, 1816, 1765, 1829, 1766, 1813, 259, 1809, 1973, 1903,
	2010, 1882, 1924, 1934, 258, 244, 1892, 1891, 1998, 1827,
	1826, 1929, 1987, 2009, 1881, 0, 0, 478, 0, 2019,
	314, 1984, 0, 476, 423, 339, 0, 0, 1877, 1993,
	1898, 1962, 1860, 1933, 1793, 1916, 2014, 1839, 1925, 2015,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1921, 2006, 1832, 0,
	1872, 1930, 2035, 1764, 1917, 0, 1769, 1780, 2029, 1999,
	1823, 1824, 263, 0, 0, 0, 0, 0, 0, 0,
	1875, 1899, 1951, 1857, 0, 468, 1936, 1946, 1965, 1849,
	376, 283, 0, 0, 0, 0, 0, 0, 3929, 0,
	1818, 0, 1914, 0, 0, 0, 1785, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 1792, 1762, 1820, 1953, 1763, 1760,
	340, 1781, 1967, 1997, 1858, 301, 0, 2003, 1856, 1855,
	1940, 1786, 1977, 2027, 1842, 311, 1784, 195, 1779, 1787,
	1840, 353, 1950, 1958, 0, 198, 313, 1974, 1814, 1831,
	245, 0, 392, 1926, 467, 0, 278, 0, 1907, 391,
	315, 460, 1941, 2005, 466, 1843, 442, 477, 482, 271,
	1883, 234, 420, 261, 254, 1822, 1964, 1768, 284, 375,
	249, 306, 1861, 1932, 1815, 241, 1944, 1915, 1979, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1975, 1957, 1981, 1808, 1788, 1799, 1789, 1830, 2007, 293,
	285, 1982, 1980, 1833, 361, 224, 1896, 1889, 1876, 1954,
	471, 2031, 257, 1959, 473, 0, 406, 405, 1846, 292,
	1961, 0, 0, 385, 0, 302, 204, 1986, 486, 220,
	309, 450, 0, 277, 352, 1928, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1956, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2013, 322,
	266, 270, 286, 297, 1927, 389, 427, 474, 1918, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1952, 216, 237,
	428, 210, 2001, 1976, 1909, 1864, 1870, 1770, 0, 209,
	1865, 1866, 1867, 1868, 1869, 1948, 1819, 1835, 1807, 1922,
	1806, 281, 1939, 463, 464, 246, 1782, 2021, 211, 1783,
	2020, 349, 356, 348, 2024, 2022, 459, 2002, 1910, 1895,
	1893, 1775, 2000, 1908, 1894, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1897, 425, 320, 0,
	206, 0, 424, 2011, 2037, 439, 226, 1801, 1968, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1943, 2034, 360, 393, 233, 469, 421, 262,
	1797, 0, 1800, 1795, 1798, 1796, 1901, 1902, 2016, 2017,
	2018, 1955, 1790, 0, 0, 1994, 1995, 0, 1888, 2004,
	1776, 0, 1972, 0, 0, 0, 0, 1935, 2032, 1848,
	242, 0, 1772, 1773, 1774, 0, 1878, 1879, 0, 0,
	1990, 1989, 1988, 1991, 0, 2025, 2023, 2026, 1791, 1812,
	1834, 1884, 1885, 1887, 1919, 1920, 1966, 1938, 1947, 1821,
	1880, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1906, 199, 212, 312, 2033, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1969, 1913,
	0, 1852, 1854, 1853, 1803, 1805, 1804, 1802, 2036, 346,
	1996, 1759, 1767, 1794, 1810, 1817, 1825, 1836, 1837, 1845,
	1851, 1863, 1873, 1874, 1890, 1904, 1905, 1912, 1942, 1945,
	1963, 1971, 1978, 1983, 1985, 472, 252, 1886, 1911, 1949,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1859, 196, 0, 0, 202, 0, 203,
	205, 1844, 201, 1992, 2028, 1923, 1937, 1828, 2008, 0,
	1970, 448, 1862, 2012, 1811, 1841, 2030, 1847, 1850, 1931,
	1777, 1900, 357, 1838, 1778, 1960, 1761, 1816, 1765, 1829,
	1766, 1813, 259, 1809, 1973, 1903, 2010, 1882, 1924, 1934,
	258, 244, 1892, 1891, 1998, 1827, 1826, 1929, 1987, 2009,
	1881, 0, 0, 478, 0, 2019, 314, 1984, 0, 476,
	423, 339, 0, 0, 1877, 1993, 1898, 1962, 1860, 1933,
	1793, 1916, 2014, 1839, 1925, 2015, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1921, 2006, 1832, 0, 1872, 1930, 2035, 1764,
	1917, 0, 1769, 1780, 2029, 1999, 1823, 1824, 263, 0,
	0, 0, 0, 0, 0, 0, 1875, 1899, 1951, 1857,
	0, 468, 1936, 1946, 1965, 1849, 376, 283, 0, 0,
	0, 0, 0, 0, 3224, 0, 1818, 0, 1914, 0,
	0, 0, 1785, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	1792, 1762, 1820, 1953, 1763, 1760, 340, 1781, 1967, 1997,
	1858, 301, 0, 2003, 1856, 1855, 1940, 1786, 1977, 2027,
	1842, 311, 1784, 195, 1779, 1787, 1840, 353, 1950, 1958,
	0, 198, 313, 1974, 1814, 1831, 245, 0, 392, 1926,
	467, 0, 278, 0, 1907, 391, 315, 460, 1941, 2005,
	466, 1843, 442, 477, 482, 271, 1883, 234, 420, 261,
	254, 1822, 1964, 1768, 284, 375, 249, 306, 1861, 1932,
	1815, 241, 1944, 1915, 1979, 419, 457, 200, 334, 458,
	481, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1975, 1957, 1981, 1808,
	1788, 1799, 1789, 1830, 2007, 293, 285, 1982, 1980, 1833,
	361, 224, 1896, 1889, 1876, 1954, 471, 2031, 257, 1959,
	473, 0, 406, 405, 1846, 292, 1961, 0, 0, 385,
	0, 302, 204, 1986, 486, 220, 309, 450, 0, 277,
	352, 1928, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1956, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 2013, 322, 266, 270, 286, 297,
	1927, 389, 427, 474, 1918, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1952, 216, 237, 428, 210, 2001, 1976,
	1909, 1864, 1870, 1770, 0, 209, 1865, 1866, 1867, 1868,
	1869, 1948, 1819, 1835, 1807, 1922, 1806, 281, 1939, 463,
	464, 246, 1782, 2021, 211, 1783, 2020, 349, 356, 348,
	2024, 2022, 459, 2002, 1910, 1895, 1893, 1775, 2000, 1908,
	1894, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1897, 425, 320, 0, 206, 0, 424, 2011,
	2037, 439, 226, 1801, 1968, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1943, 2034,
	360, 393, 233, 469, 421, 262, 1797, 0, 1800, 1795,
	1798, 1796, 1901, 1902, 2016, 2017, 2018, 1955, 1790, 0,
	0, 1994, 1995, 0, 1888, 2004, 1776, 0, 1972, 0,
	0, 0, 0, 1935, 2032, 1848, 242, 0, 1772, 1773,
	1774, 0, 1878, 1879, 0, 0, 1990, 1989, 1988, 1991,
	0, 2025, 2023, 2026, 1791, 1812, 1834, 1884, 1885, 1887,
	1919, 1920, 1966, 1938, 1947, 1821, 1880, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1906, 199,
	212, 312, 2033, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1969, 1913, 0, 1852, 1854, 1853,
	1803, 1805, 1804, 1802, 2036, 346, 1996, 1759, 1767, 1794,
	1810, 1817, 1825, 1836, 1837, 1845, 1851, 1863, 1873, 1874,
	1890, 1904, 1905, 1912, 1942, 1945, 1963, 1971, 1978, 1983,
	1985, 472, 252, 1886, 1911, 1949, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 1859,
	196, 0, 0, 202, 0, 203, 205, 1844, 201, 1992,
	2028, 1923, 1937, 1828, 2008, 0, 1970, 448, 1862, 2012,
	1811, 1841, 2030, 1847, 1850, 1931, 1777, 1900, 357, 1838,
	1778, 1960, 1761, 1816, 1765, 1829, 1766, 1813, 259, 1809,
	1973, 1903, 2010, 1882, 1924, 1934, 258, 244, 1892, 1891,
	1998, 1827, 1826, 1929, 1987, 2009, 1881, 0, 0, 478,
	0, 2019, 314, 1984, 0, 476, 423, 339, 0, 0,
	1877, 1993, 1898, 1962, 1860, 1933, 1793, 1916, 2014, 1839,
	1925, 2015, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1921, 2006,
	1832, 0, 1872, 1930, 2035, 1764, 1917, 0, 1769, 1780,
	2029, 1999, 1823, 1824, 263, 0, 0, 0, 0, 0,
	0, 0, 1875, 1899, 1951, 1857, 0, 468, 1936, 1946,
	1965, 1849, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 1914, 0, 0, 0, 1785, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 1792, 1762, 1820, 1953,
	1763, 1760, 340, 1781, 1967, 1997, 1858, 301, 0, 2003,
	1856, 1855, 1940, 1786, 1977, 2027, 1842, 311, 1784, 195,
	1779, 1787, 1840, 353, 1950, 1958, 0, 198, 313, 1974,
	1814, 1831, 245, 0, 392, 1926, 467, 0, 278, 0,
	1907, 391, 315, 460, 1941, 2005, 466, 1843, 442, 477,
	482, 271, 1883, 234, 420, 261, 254, 1822, 1964, 1768,
	284, 375, 249, 306, 1861, 1932, 1815, 241, 1944, 1915,
	1979, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1975, 1957, 1981, 1808, 1788, 1799, 1789, 1830,
	2007, 293, 285, 1982, 1980, 1833, 361, 224, 1896, 1889,
	1876, 1954, 471, 2031, 257, 1959, 473, 0, 406, 405,
	1846, 292, 1961, 0, 0, 385, 0, 302, 204, 1986,
	486, 220, 309, 450, 0, 277, 352, 1928, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 1956, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	2013, 322, 266, 270, 286, 297, 1927, 389, 427, 474,
	1918, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1952,
	216, 237, 428, 210, 2001, 1976, 1909, 1864, 1870, 1770,
	0, 209, 1865, 1866, 1867, 1868, 1869, 1948, 1819, 1835,
	1807, 1922, 1806, 281, 1939, 463, 464, 246, 1782, 2021,
	211, 1783, 2020, 349, 356, 348, 2024, 2022, 459, 2002,
	1910, 1895, 1893, 1775, 2000, 1908, 1894, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1897, 425,
	320, 0, 206, 0, 424, 2011, 2037, 439, 226, 1801,
	1968, 454, 2326, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1943, 2034, 360, 393, 233, 469,
	421, 262, 1797, 0, 1800, 1795, 1798, 1796, 1901, 1902,
	2016, 2017, 2018, 1955, 1790, 0, 0, 1994, 1995, 0,
	1888, 2004, 1776, 0, 1972, 0, 0, 0, 0, 1935,
	2032, 1848, 242, 0, 1772, 1773, 1774, 0, 1878, 1879,
	0, 0, 1990, 1989, 1988, 1991, 0, 2025, 2023, 2026,
	1791, 1812, 1834, 1884, 1885, 1887, 1919, 1920, 1966, 1938,
	1947, 1821, 1880, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1906, 199, 212, 312, 2033, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1969, 1913, 0, 1852, 1854, 1853, 1803, 1805, 1804, 1802,
	2036, 346, 1996, 1759, 1767, 1794, 1810, 1817, 1825, 1836,
	1837, 1845, 1851, 1863, 1873, 1874, 1890, 1904, 1905, 1912,
	1942, 1945, 1963, 1971, 1978, 1983, 1985, 472, 252, 1886,
	1911, 1949, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 1859, 196, 0, 0, 202,
	0, 203, 205, 1844, 201, 1992, 2028, 1923, 1937, 1828,
	2008, 0, 1970, 448, 1862, 2012, 1811, 1841, 2030, 1847,
	1850, 1931, 1777, 1900, 357, 1838, 1778, 1960, 1761, 1816,
	1765, 1829, 1766, 1813, 259, 1809, 1973, 1903, 2010, 1882,
	1924, 1934, 258, 244, 1892, 1891, 1998, 1827, 1826, 1929,
	1987, 2009, 1881, 0, 0, 478, 0, 2019, 314, 1984,
	0, 476, 423, 339, 0, 0, 1877, 1993, 1898, 1962,
	1860, 1933, 1793, 1916, 2014, 1839, 1925, 2015, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1921, 2006, 1832, 0, 1872, 1930,
	2035, 1764, 1917, 0, 1769, 1780, 2029, 1999, 1823, 1824,
	263, 0, 0, 0, 0, 0, 0, 0, 1875, 1899,
	1951, 1857, 0, 468, 1936, 1946, 1965, 1849, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	1914, 0, 0, 0, 1785, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 1792, 1762, 1820, 1953, 1763, 1760, 340, 1781,
	1967, 1997, 1858, 301, 0, 2003, 1856, 1855, 1940, 1786,
	1977, 2027, 1842, 311, 1784, 195, 1779, 1787, 1840, 353,
	1950, 1958, 0, 198, 313, 1974, 1814, 1831, 245, 0,
	392, 1926, 467, 0, 278, 0, 1907, 391, 315, 460,
	1941, 2005, 466, 1843, 442, 477, 482, 271, 1883, 234,
	420, 261, 254, 1822, 1964, 1768, 284, 375, 249, 306,
	1861, 1932, 1815, 241, 1944, 1915, 1979, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1975, 1957,
	1981, 1808, 1788, 1799, 1789, 1830, 2007, 293, 285, 1982,
	1980, 1833, 361, 224, 1896, 1889, 1876, 1954, 471, 2031,
	257, 1959, 473, 0, 406, 405, 1846, 292, 1961, 0,
	0, 385, 0, 302, 204, 1986, 486, 220, 309, 450,
	0, 277, 352, 1928, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1956, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 2013, 322, 266, 270,
	286, 297, 1927, 389, 427, 474, 1918, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1952, 216, 237, 428, 210,
	2001, 1976, 1909, 1864, 1870, 1770, 0, 209, 1865, 1866,
	1867, 1868, 1869, 1948, 1819, 1835, 1807, 1922, 1806, 281,
	1939, 463, 464, 246, 1782, 2021, 211, 1783, 2020, 349,
	356, 348, 2024, 2022, 459, 2002, 1910, 1895, 1893, 1775,
	2000, 1908, 1894, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1897, 425, 320, 0, 206, 0,
	424, 2011, 2037, 439, 226, 1801, 1968, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1943, 2034, 360, 393, 233, 469, 421, 262, 1797, 0,
	1800, 1795, 1798, 1796, 1901, 1902, 2016, 2017, 2018, 1955,
	1790, 0, 0, 1994, 1995, 0, 1888, 2004, 1776, 0,
	1972, 0, 0, 0, 0, 1935, 2032, 1848, 242, 0,
	1772, 1773, 1774, 0, 1878, 1879, 0, 0, 1990, 1989,
	1988, 1991, 0, 2025, 2023, 2026, 1791, 1812, 1834, 1884,
	1885, 1887, 1919, 1920, 1966, 1938, 1947, 1821, 1880, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1906, 199, 212, 312, 2033, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1969, 1913, 0, 1852,
	1854, 1853, 1803, 1805, 1804, 1802, 2036, 346, 1996, 1759,
	1767, 1794, 1810, 1817, 1825, 1836, 1837, 1845, 1851, 1863,
	1873, 1874, 1890, 1904, 1905, 1912, 1942, 1945, 1963, 1971,
	1978, 1983, 1985, 472, 252, 1886, 1911, 1949, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 4103, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1859, 196, 0, 0, 202, 0, 203, 205, 1844,
	201, 1992, 2028, 1923, 1937, 1828, 2008, 0, 1970, 448,
	1862, 2012, 1811, 1841, 2030, 1847, 1850, 1931, 1777, 1900,
	357, 1838, 1778, 1960, 1761, 1816, 1765, 1829, 1766, 1813,
	259, 1809, 1973, 1903, 2010, 1882, 1924, 1934, 258, 244,
	1892, 1891, 1998, 1827, 1826, 1929, 1987, 2009, 1881, 0,
	0, 478, 0, 2019, 314, 1984, 0, 476, 423, 339,
	0, 0, 1877, 1993, 1898, 1962, 1860, 1933, 1793, 1916,
	2014, 1839, 1925, 2015, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1921, 2006, 1832, 0, 1872, 1930, 2035, 1764, 1917, 0,
	1769, 1780, 2029, 1999, 1823, 1824, 263, 0, 0, 0,
	0, 0, 0, 0, 1875, 1899, 1951, 1857, 0, 468,
	1936, 1946, 1965, 1849, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 1914, 0, 0, 0,
	1785, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 1792, 1762,
	1820, 1953, 1763, 1760, 340, 1781, 1967, 1997, 1858, 301,
	0, 2003, 1856, 1855, 1940, 1786, 1977, 2027, 1842, 311,
	1784, 195, 1779, 1787, 1840, 353, 1950, 1958, 0, 198,
	313, 1974, 1814, 1831, 245, 0, 392, 1926, 467, 0,
	278, 0, 1907, 391, 315, 460, 1941, 2005, 466, 1843,
	442, 477, 482, 271, 1883, 234, 420, 261, 254, 1822,
	1964, 1768, 284, 375, 249, 306, 1861, 1932, 1815, 241,
	1944, 1915, 1979, 419, 457, 200, 334, 458, 481, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1975, 1957, 1981, 1808, 1788, 1799,
	1789, 1830, 2007, 293, 285, 1982, 1980, 1833, 361, 224,
	1896, 1889, 1876, 1954, 471, 2031, 257, 1959, 473, 0,
	406, 405, 1846, 292, 1961, 0, 0, 385, 0, 302,
	204, 1986, 486, 220, 309, 450, 0, 277, 352, 1928,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	1956, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 2013, 322, 266, 270, 286, 297, 1927, 389,
	427, 474, 1918, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 1952, 216, 237, 428, 210, 2001, 1976, 1909, 1864,
	1870, 1770, 0, 209, 1865, 1866, 1867, 1868, 1869, 1948,
	1819, 1835, 1807, 1922, 1806, 281, 1939, 463, 464, 246,
	1782, 2021, 211, 1783, 2020, 349, 356, 348, 2024, 2022,
	459, 2002, 1910, 1895, 1893, 1775, 2000, 1908, 1894, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1897, 425, 320, 0, 206, 0, 424, 2011, 2037, 439,
	226, 1801, 1968, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1943, 2034, 360, 393,
	233, 469, 421, 262, 1797, 0, 1800, 1795, 1798, 1796,
	1901, 1902, 2016, 2017, 2018, 1955, 1790, 0, 0, 1994,
	1995, 0, 1888, 2004, 1776, 0, 1972, 0, 0, 0,
	0, 1935, 2032, 1848, 242, 0, 1772, 1773, 1774, 0,
	1878, 1879, 0, 0, 1990, 1989, 1988, 1991, 0, 2025,
	2023, 2026, 1791, 1812, 1834, 1884, 1885, 1887, 1919, 1920,
	1966, 1938, 1947, 1821, 1880, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1906, 199, 212, 312,
	2033, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1969, 1913, 0, 1852, 1854, 1853, 1803, 1805,
	1804, 1802, 2036, 346, 1996, 1759, 1767, 1794, 1810, 1817,
	1825, 1836, 1837, 1845, 1851, 1863, 1873, 1874, 1890, 1904,
	1905, 1912, 1942, 1945, 1963, 1971, 1978, 1983, 1985, 472,
	252, 1886, 1911, 1949, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 1859, 196, 0,
	0, 202, 0, 203, 205, 1844, 201, 1992, 2028, 1923,
	1937, 1828, 2008, 0, 1970, 448, 1862, 2012, 1811, 1841,
	2030, 1847, 1850, 1931, 1777, 1900, 357, 1838, 1778, 1960,
	1761, 1816, 1765, 1829, 1766, 1813, 259, 1809, 1973, 1903,
	2010, 1882, 1924, 1934, 258, 244, 1892, 1891, 1998, 1827,
	1826, 1929, 1987, 2009, 1881, 0, 0, 478, 0, 2019,
	314, 1984, 0, 476, 423, 339, 0, 0, 1877, 1993,
	1898, 1962, 1860, 1933, 1793, 1916, 2014, 1839, 1925, 2015,
	0, 0, 0, 0, 0, 0, 4384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1921, 2006, 1832, 0,
	1872, 1930, 2035, 1764, 1917, 0, 1769, 1780, 2029, 1999,
	1823, 1824, 263, 0, 0, 0, 0, 0, 0, 0,
	1875, 1899, 1951, 1857, 0, 468, 1936, 1946, 1965, 1849,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 0, 1914, 0, 0, 0, 1785, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 1792, 1762, 1820, 1953, 1763, 1760,
	340, 1781, 1967, 1997, 1858, 301, 0, 2003, 1856, 1855,
	1940, 1786, 1977, 2027, 1842, 311, 1784, 195, 1779, 1787,
	1840, 353, 1950, 1958, 0, 198, 313, 1974, 1814, 1831,
	245, 0, 392, 1926, 467, 0, 278, 0, 1907, 391,
	315, 460, 1941, 2005, 466, 1843, 442, 477, 482, 271,
	1883, 234, 420, 261, 254, 1822, 1964, 1768, 284, 375,
	249, 306, 1861, 1932, 1815, 241, 1944, 1915, 1979, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1975, 1957, 1981, 1808, 1788, 1799, 4387, 4388, 4389, 293,
	285, 1982, 1980, 1833, 361, 224, 1896, 1889, 1876, 1954,
	471, 2031, 257, 1959, 473, 0, 406, 405, 1846, 292,
	1961, 0, 0, 385, 0, 302, 204, 1986, 486, 220,
	309, 450, 0, 277, 352, 1928, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1956, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2013, 322,
	266, 270, 286, 297, 1927, 389, 427, 474, 1918, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1952, 216, 237,
	428, 210, 2001, 1976, 1909, 1864, 1870, 1770, 0, 209,
	1865, 1866, 1867, 1868, 1869, 1948, 1819, 1835, 1807, 1922,
	1806, 281, 1939, 463, 464, 246, 1782, 2021, 211, 1783,
	2020, 349, 356, 348, 2024, 2022, 459, 2002, 1910, 1895,
	1893, 1775, 2000, 1908, 1894, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1897, 425, 320, 0,
	206, 0, 424, 2011, 2037, 439, 226, 1801, 1968, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1943, 2034, 360, 393, 233, 469, 421, 262,
	1797, 0, 1800, 1795, 1798, 1796, 1901, 1902, 2016, 2017,
	2018, 1955, 1790, 0, 0, 1994, 1995, 0, 1888, 2004,
	1776, 0, 1972, 0, 0, 0, 0, 1935, 2032, 1848,
	242, 0, 1772, 1773, 1774, 0, 1878, 1879, 0, 0,
	1990, 1989, 1988, 1991, 0, 2025, 2023, 2026, 1791, 1812,
	1834, 1884, 1885, 1887, 1919, 1920, 1966, 1938, 1947, 1821,
	1880, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1906, 199, 212, 312, 2033, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1969, 1913,
	0, 1852, 1854, 1853, 1803, 1805, 1804, 1802, 2036, 346,
	1996, 1759, 1767, 1794, 1810, 1817, 1825, 1836, 1837, 1845,
	1851, 1863, 1873, 1874, 1890, 1904, 1905, 1912, 1942, 1945,
	1963, 1971, 1978, 1983, 1985, 472, 252, 1886, 1911, 1949,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1859, 196, 0, 0, 202, 0, 203,
	205, 1844, 201, 1992, 2028, 1923, 1937, 1828, 2008, 0,
	1970, 448, 1862, 2012, 1811, 1841, 2030, 1847, 1850, 1931,
	1777, 1900, 357, 1838, 1778, 1960, 1761, 1816, 1765, 1829,
	1766, 1813, 259, 1809, 1973, 1903, 2010, 1882, 1924, 1934,
	258, 244, 1892, 1891, 1998, 1827, 1826, 1929, 1987, 2009,
	1881, 0, 0, 478, 0, 2019, 314, 1984, 0, 476,
	423, 339, 0, 0, 1877, 1993, 1898, 1962, 1860, 1933,
	1793, 1916, 2014, 1839, 1925, 2015, 0, 0, 0, 0,
	0, 0, 3174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1921, 2006, 1832, 0, 1872, 1930, 2035, 1764,
	1917, 0, 1769, 1780, 2029, 1999, 1823, 1824, 263, 0,
	0, 0, 0, 0, 0, 0, 1875, 1899, 1951, 1857,
	0, 468, 1936, 1946, 1965, 1849, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 1914, 0,
	0, 0, 1785, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	1792, 1762, 1820, 1953, 1763, 1760, 340, 1781, 1967, 1997,
	1858, 301, 0, 2003, 1856, 1855, 1940, 1786, 1977, 2027,
	1842, 311, 1784, 195, 1779, 1787, 1840, 353, 1950, 1958,
	0, 198, 313, 1974, 1814, 1831, 245, 0, 392, 1926,
	467, 0, 278, 0, 1907, 391, 315, 460, 1941, 2005,
	466, 1843, 442, 477, 482, 271, 1883, 234, 420, 261,
	254, 1822, 1964, 1768, 284, 375, 249, 306, 1861, 1932,
	1815, 241, 1944, 1915, 1979, 419, 457, 200, 334, 458,
	481, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1975, 1957, 1981, 1808,
	1788, 1799, 1789, 1830, 2007, 293, 285, 1982, 1980, 1833,
	361, 224, 1896, 1889, 1876, 1954, 471, 2031, 257, 1959,
	473, 0, 406, 405, 1846, 292, 1961, 0, 0, 385,
	0, 302, 204, 1986, 486, 220, 309, 450, 0, 277,
	352, 1928, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1956, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 2013, 322, 266, 270, 286, 297,
	1927, 389, 427, 474, 1918, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1952, 216, 237, 428, 210, 2001, 1976,
	1909, 1864, 1870, 1770, 0, 209, 1865, 1866, 1867, 1868,
	1869, 1948, 1819, 1835, 1807, 1922, 1806, 281, 1939, 463,
	464, 246, 1782, 2021, 211, 1783, 2020, 349, 356, 348,
	2024, 2022, 459, 2002, 1910, 1895, 1893, 1775, 2000, 1908,
	1894, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1897, 425, 320, 0, 206, 0, 424, 2011,
	2037, 439, 226, 1801, 1968, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1943, 2034,
	360, 393, 233, 469, 421, 262, 1797, 0, 1800, 1795,
	1798, 1796, 1901, 1902, 2016, 2017, 2018, 1955, 1790, 0,
	0, 1994, 1995, 0, 1888, 2004, 1776, 0, 1972, 0,
	0, 0, 0, 1935, 2032, 1848, 242, 0, 1772, 1773,
	1774, 0, 1878, 1879, 0, 0, 1990, 1989, 1988, 1991,
	0, 2025, 2023, 2026, 1791, 1812, 1834, 1884, 1885, 1887,
	1919, 1920, 1966, 1938, 1947, 1821, 1880, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1906, 199,
	212, 312, 2033, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1969, 1913, 0, 1852, 1854, 1853,
	1803, 1805, 1804, 1802, 2036, 346, 1996, 1759, 1767, 1794,
	1810, 1817, 1825, 1836, 1837, 1845, 1851, 1863, 1873, 1874,
	1890, 1904, 1905, 1912, 1942, 1945, 1963, 1971, 1978, 1983,
	1985, 472, 252, 1886, 1911, 1949, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 1859,
	196, 0, 0, 202, 0, 203, 205, 1844, 201, 1992,
	2028, 1923, 1937, 589, 448, 583, 594, 576, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 259, 0, 0, 584, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 637, 638, 0, 731, 0, 732,
	734, 735, 736, 737, 0, 0, 0, 733, 2318, 3392,
	3393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 3387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 0, 575, 574, 577, 0, 0, 0, 340,
	0, 0, 0, 582, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 586, 0, 0, 198, 313, 590, 0, 0, 245,
	0, 392, 2315, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 593, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 578, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 581, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 1349, 408, 455, 222,
	426, 579, 580, 587, 588, 591, 592, 595, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 2316, 2317, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 3404, 1066, 0, 3394, 3395, 3397, 3405, 3406,
	3396, 3398, 3399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3400, 3401, 3402, 3403, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 585, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 0, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 589, 448, 583, 594, 576, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 568, 0,
	0, 0, 0, 0, 259, 0, 0, 584, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 574, 577, 0, 0, 0, 340, 0,
	0, 0, 582, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	586, 0, 0, 198, 313, 590, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 593, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 578, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 0, 406, 405, 581, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 486, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 571, 408, 455, 222, 426,
	579, 580, 587, 588, 591, 592, 595, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 585, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 2468,
	2472, 0, 172, 478, 190, 0, 314, 0, 498, 476,
	423, 339, 501, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	2471, 301, 191, 0, 0, 0, 2464, 0, 2465, 2467,
	2466, 311, 1165, 195, 0, 2462, 2470, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 1159, 392, 0,
	467, 497, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 496, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 1476, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 498, 476, 423, 339,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1478,
	1477, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 499, 0, 1472, 1473, 1471, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 1474, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 497,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 496, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 478,
	190, 0, 314, 0, 498, 476, 423, 339, 501, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 1165, 195,
	0, 1161, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 1159, 392, 0, 467, 497, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 496, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 478, 190, 0,
	314, 0, 498, 476, 423, 339, 501, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 3554, 195, 0, 0,
	3553, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 497, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 496, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 478, 190, 0, 314, 0,
	498, 476, 423, 339, 501, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3521, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 1165, 195, 0, 0, 2470, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 497, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 486, 220, 309, 450,
	496, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 0, 314, 0, 498, 476,
	423, 339, 501, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2922, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 1165, 195, 0, 0, 2470, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 497, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 496, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 498, 476, 423, 339,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1478,
	1477, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 2272, 392, 0, 467, 497,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 496, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 0, 196, 42,
	448, 202, 0, 203, 205, 0, 201, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 88, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 96, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 109, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 673, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3512, 0, 0, 0, 0, 0, 3514,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2045, 2043, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 2043, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 1165, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3365, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3514, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1212, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1201, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3221, 680, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 673, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 673, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 548, 545, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	2542, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 2428, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1661, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 1648, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 1672, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	1662, 377, 248, 0, 199, 212, 312, 2168, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 0, 196, 0, 0, 202, 0,
	203, 205, 448, 201, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 1676, 1679, 1680, 1681, 1682, 1683, 1684, 0, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 0, 1663, 1664, 1665, 1645, 1644, 1677, 1646,
	1649, 1643, 1647, 1642, 0, 0, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1667, 1668, 1669,
	1670, 1671, 1673, 1674, 1675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 1678, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 1666, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 155, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 653, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	731, 1163, 732, 734, 735, 736, 737, 0, 0, 0,
	733, 2318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 728, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 729, 730,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 4483, 0, 0, 0, 0, 0, 259,
	4481, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 4482, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2994, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 2995, 2996, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 1624, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 2472, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 2471, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 3568, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 3566,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 3564, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 3562, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 3557, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 3544, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 3542,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 3471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3462, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 2592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 2750, 2749, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 42, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	71, 0, 0, 0, 4294, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4287, 0, 0, 0, 0,
	4686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4287,
	0, 0, 0, 0, 4659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 71, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 62,
	92, 91, 0, 0, 0, 89, 57, 0, 0, 0,
	71, 4294, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4290, 4287, 0, 0, 0, 0, 4641, 0, 0,
	0, 4299, 4291, 4292, 4293, 4297, 4298, 4295, 0, 4296,
	0, 4300, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 69, 70, 0, 4290, 0, 0, 0, 4287,
	60, 0, 0, 0, 4637, 4299, 4291, 4292, 4293, 4297,
	4298, 4295, 0, 4296, 0, 4300, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4288, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 4301, 4289,
	0, 66, 67, 73, 0, 74, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 4301, 4289, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 69, 70, 0, 4290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4299, 4291,
	4292, 4293, 4297, 4298, 4295, 0, 4296, 0, 4300, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 69, 70, 0, 4290, 0, 60, 0, 0,
	42, 0, 0, 0, 0, 4299, 4291, 4292, 4293, 4297,
	4298, 4295, 0, 4296, 71, 4300, 0, 0, 0, 0,
	78, 93, 79, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 59, 61,
	0, 0, 4294, 0, 87, 4301, 4289, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4287, 0, 0, 0, 0, 4636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 4301, 4289, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	49, 90, 56, 55, 58, 93, 0, 0, 47, 96,
	0, 0, 0, 0, 0, 4288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 4633, 42, 0, 0, 0, 4294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 47, 4287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 89, 4290,
	0, 0, 0, 0, 4294, 0, 0, 0, 0, 4299,
	4291, 4292, 4293, 4297, 4298, 4295, 0, 4296, 0, 4300,
	0, 0, 0, 85, 78, 4287, 79, 0, 0, 0,
	4625, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 84,
	0, 0, 0, 96, 0, 0, 0, 0, 60, 4288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 92, 91,
	85, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 49, 90, 56, 55, 58, 93, 0, 0,
	47, 96, 0, 0, 0, 0, 0, 4288, 0, 0,
	0, 0, 0, 0, 0, 0, 4301, 4289, 0, 66,
	67, 73, 0, 74, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 89, 4290, 0, 0, 0, 0, 4294, 0,
	0, 0, 0, 4299, 4291, 4292, 4293, 4297, 4298, 4295,
	0, 4296, 0, 4300, 0, 0, 0, 0, 78, 4287,
	79, 0, 0, 0, 4622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 69, 70,
	0, 4290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4299, 4291, 4292, 4293, 4297, 4298, 4295, 0, 4296,
	0, 4300, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 84, 71, 0, 0, 96, 0, 0, 0, 93,
	60, 4288, 47, 0, 0, 0, 0, 0, 0, 0,
	4301, 4289, 0, 66, 67, 73, 0, 74, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 89, 0, 59, 61, 0, 0,
	4294, 0, 87, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 4287, 0, 0, 0, 0, 4536, 0, 4301, 4289,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 4290, 0, 89, 0, 0,
	0, 0, 0, 4294, 0, 4299, 4291, 4292, 4293, 4297,
	4298, 4295, 0, 4296, 0, 4300, 0, 0, 0, 0,
	78, 0, 79, 0, 4287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 49, 90,
	56, 55, 58, 0, 60, 0, 0, 96, 0, 0,
	0, 0, 0, 4288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 42, 0, 87, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 71, 0,
	96, 0, 0, 0, 0, 93, 4288, 0, 47, 0,
	0, 0, 4301, 4289, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 62, 92, 91, 0, 85, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 0, 4290, 59, 61,
	89, 0, 0, 0, 87, 0, 4294, 4299, 4291, 4292,
	4293, 4297, 4298, 4295, 0, 4296, 0, 4300, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 4287, 0, 0,
	0, 0, 4528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 69, 70, 0,
	4290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4299, 4291, 4292, 4293, 4297, 4298, 4295, 4533, 4296, 0,
	4300, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 49, 90, 56, 55, 58, 60,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4288,
	0, 0, 0, 0, 4301, 4289, 0, 66, 67, 73,
	0, 74, 0, 42, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 71, 0, 0,
	0, 0, 59, 61, 93, 0, 0, 47, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4301, 4289, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 89,
	85, 0, 0, 0, 0, 4294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 0, 4290, 0, 0, 4287, 0, 0, 0,
	0, 4526, 0, 4299, 4291, 4292, 4293, 4297, 4298, 4295,
	0, 4296, 0, 4300, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 59, 61, 0, 0, 4288, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 89,
	0, 0, 0, 57, 0, 4294, 0, 0, 0, 0,
	4301, 4289, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 85, 0, 0, 0, 4287, 0, 0, 0,
	0, 4404, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 4212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4290, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 4299, 4291, 4292, 4293, 4297, 4298, 4295, 0,
	4296, 0, 4300, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 42,
	0, 0, 96, 0, 0, 0, 0, 0, 4288, 0,
	0, 0, 84, 71, 0, 0, 0, 0, 0, 0,
	93, 60, 0, 47, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 4287, 0, 0, 0, 87, 0, 0, 4301,
	4289, 0, 66, 67, 73, 0, 74, 0, 0, 69,
	70, 0, 4290, 0, 1672, 0, 0, 0, 0, 0,
	0, 0, 4299, 4291, 4292, 4293, 4297, 4298, 4295, 0,
	4296, 1662, 4300, 0, 0, 0, 0, 78, 85, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4301,
	4289, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4290, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 4299, 4291,
	4292, 4293, 4297, 4298, 4295, 0, 4296, 0, 4300, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 1676, 1679, 1680, 1681, 1682, 1683, 1684, 0,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 0, 1663, 1664, 1665, 1645, 1644, 1677,
	1646, 1649, 1643, 1647, 1642, 0, 0, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1667, 1668,
	1669, 1670, 1671, 1673, 1674, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4301, 4289, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85,
}

var yyPact = [...]int{
	6235, -1000, -500, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3061, -1000, 3061, 346, -1000, 447, -1000, 1535, 434,
	-1000, -1000, -1000, -1000, -1000, 579, 337, 59388, 1165, 53476,
	80052, -285, 1735, 79314, 167, -1000, 167, 413, 55690, 863,
	1011, 78576, 2885, 2241, 169, 9, 4, 240, 39451, 1074,
	300, 197, 211, 204, 180, 1335, -1000, 61602, 888, -1000,
	303, -1000, -1000, -1000, -1000, -1000, 54952, 3115, 3118, 3115,
	-1000, 3028, 3055, -1000, -1000, 3028, 2402, 2402, -1000, 61602,
	13757, -1000, -1000, -1000, -1000, -1000, 31145, -1000, 1324, -1000,
	60126, 41665, 3061, -1000, 1136, 1126, -123, 1070, 1070, 823,
	1070, 1070, -466, 1161, -1000, 843, 1678, -1000, -1000, -1000,
	-1000, 1676, 60126, 67506, 1158, 1074, 1074, 1074, 1074, 1074,
	1074, 1074, 1074, 1074, 52738, 60126, -1000, 1305, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60126, 3103,
	3102, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2719, 2716, 52000, 603, 2939, 1724, 328, 1724,
	-1000, -1000, 1693, -1000, 977, 976, 965, 952, 949, 951,
	-7, 1691, 1758, 3024, -1000, 2666, 3028, 3028, 1691, -1000,
	933, -1000, -1000, -1000, -1000, -1000, -1000, 1411, -1000, -1000,
	1781, 1781, 566, 1124, 992, 995, 992, 2983, 1672, 2925,
	2924, 2243, 2922, 1050, 2918, 2710, -1000, 1303, -1000, -1000,
	59, -1000, 2235, 60126, -1000, -1000, 2050, 2048, 700, 2606,
	1222, 2761, -1000, -1000, 680, 704, 2690, 709, 2690, 2690,
	2690, 389, 2690, 2690, -1, 2690, 2690, 2690, 310, 2690,
	338, 2690, 2690, 2690, 2690, 2690, -1000, 2414, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	38702, 2963, 219, -1000, -206, 182, 2965, 914, -1000, -1000,
	-1000, 295, 1324, 62340, 2654, -1000, 2666, -1000, -1000, -1000,
	2664, 2666, -1000, 2165, 1157, 1074, 696, -1000, 547, -1000,
	-1000, -1000, 2968, 2666, 45358, -1000, -1000, 1590, -1000, 2666,
	2666, 1324, 3008, 1324, 1324, 3004, 3002, 1324, 2920, 28121,
	18293, 2837, 1807, -1000, -1000, -1000, -1000, 1324, 3100, -1000,
	40927, 1300, -1000, 18293, 1904, 2666, 2666, -1000, 1217, 1329,
	-1000, 1190, 1285, -1000, -1000, 19049, 19049, 19049, 19049, 19049,
	19049, 19049, -1000, -1000, -1000, -1000, -1000, -1000, 2371, 2370,
	2369, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2666, 1295, 1292, 1290, 2666, 2666, 2666, 2666, 2666,
	-1000, 16781, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2666, 2666, 2666, 2666, 2666, 2666,
	2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 18293,
	2666, 2666, 2666, 2666, 2666, -1000, 2666, 2666, 2666, 2666,
	2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666,
	2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666,
	2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2666, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2666, 2666, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2666, 1082, 1082, 58650,
	2662, -50, 30389, -1000, -1000, -1000, -1000, 28877, 65292, 1595,
	-1000, -1000, -1000, -1000, 2917, -1000, -1000, 1289, 1285, 1217,
	1212, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3061,
	329, -1000, 2543, -1000, -1000, 58323, 58323, 58323, 58323, 58323,
	58323, 48310, -1000, -1000, -1000, 2705, 3028, -1000, 1070, 1070,
	880, 2231, 1748, 2229, 78576, 78576, 1070, -1000, 798, 67506,
	67506, -360, 1070, 826, 67506, 802, 2661, 1122, 2659, 1121,
	2412, 1074, 77100, 60126, 2228, 2224, 78576, 78576, 67506, 67506,
	78576, -1000, -1000, -1000, 27365, -1000, 1363, 2658, 47572, 46834,
	51262, 51262, -1000, -1000, -1000, 928, -1000, 1724, -1000, 8340,
	18293, 1070, 1070, 60126, 60126, 60126, 60126, 60126, -1000, 60126,
	-1000, -1000, 1724, -1000, -1000, 1724, 1724, 1724, 1691, 3099,
	1691, -1000, -1000, -1000, 1724, 79314, 79314, 18293, -1000, 19049,
	66768, 1432, -1000, -1000, 1724, -1000, 79314, 1014, 1014, 1014,
	-1000, 2223, 559, 334, -1000, 992, 329, -1000, -1000, 2897,
	2999, 2998, 2221, 1050, 1050, -1000, 2377, 1050, 2648, -1000,
	1666, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1050, 2983, 17537, 77100, -482, -1000, -1000,
	2656, -1000, 514, -1000, -1000, 999, 2758, 999, 10269, 67506,
	67506, 67506, -1000, 2690, 77100, -1000, 2690, 2690, 2690, -2,
	2690, 2690, -1000, -1000, 2690, -1000, -1000, -1000, 2690, -1000,
	-1000, 2690, -1000, -1000, -1000, 2690, 2690, -1000, 2690, 2690,
	-1000, -1000, -1000, -1000, -1000, 67506, 695, 2598, 2653, 2757,
	-1000, 1120, 186, -58, 145, -1000, -1000, -1000, -1000, -1000,
	-1000, 293, 291, 289, 287, -1000, -1000, -1000, -1000, 285,
	282, -1000, -1000, 57904, 57904, 901, -1000, 2654, 62340, 2985,
	22829, 888, -1000, 18293, 2946, -1000, 2946, -1000, -1000, -1000,
	404, -1000, 60126, 67506, 78576, 54952, 54952, 54952, 54952, -1000,
	2784, 2783, -1000, 2774, 2773, 2772, 505, 62340, -1000, 2968,
	346, 2537, 2402, 2402, 547, 45358, -1000, 2666, -1000, 62340,
	1309, 1135, 1132, 1131, 2897, -1000, -1000, -1000, -1000, -1000,
	2220, 2143, 2090, 13001, 19049, -1000, -1000, -1000, -1000, -1000,
	3115, 3115, -1000, -1000, -1000, -1000, -1000, -1000, 1793, 3110,
	1570, 2612, -1000, -1000, -1000, 2652, -1000, 1912, 1283, 1988,
	1853, -1000, -1000, -1000, -1000, -1000, -1000, 13757, -1000, 60126,
	-1000, 18293, 18293, 18293, 2118, -1000, 44617, -1000, -1000, -1000,
	23585, 1539, 19049, 1924, 1665, 19049, 19049, 19049, 19049, 19049,
	19049, 19049, 19049, 19049, 19049, 19049, 19049, 19049, 19049, 19049,
	1457, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2211,
	-1000, 329, 36437, 13001, 36437, 994, 994, 77100, 1402, 1402,
	1402, 1402, 1402, 1402, 60864, -1000, -1000, -1000, 2981, 34925,
	77100, 36437, 2981, 2981, 2981, 2981, 2981, 2528, 1721, 61602,
	16781, 54952, 13001, 13001, 13001, 2402, 18293, 18293, 13001, 19049,
	13001, 16025, 15269, 20561, 13001, 13001, 2981, 1703, 1721, 26609,
	13001, -1000, 2402, -1000, -1000, -1000, -1000, 1921, -1000, -1000,
	-278, -278, -278, 541, 13001, 13001, 13001, 13001, 2402, 2402,
	13001, 13001, 13001, 13001, 13001, 13001, 2402, 2402, 2402, 13001,
	13001, 13001, 13001, 13001, 13001, 13001, 13001, 13001, 13001, 13001,
	13001, -1000, -1000, -1000, 1839, 57166, 54952, 60126, 2604, 2601,
	-1000, -1000, 1271, 29633, 2631, -1000, -47, -69, -50, -1000,
	-1000, 1387, -1000, -1000, -1000, -1000, 14513, -1000, -1000, -1000,
	24341, 3028, -1000, 40189, -1000, 31, -1000, -1000, -1000, 2677,
	-1000, 2680, 105, 533, 2680, 88, 84, 2680, 2680, 2680,
	-1000, -1000, -1000, -1000, 98, -1000, -1000, -1000, -1000, -1000,
	2703, 2701, -1000, 2677, 2677, 2677, -1000, -1000, -1000, -1000,
	-1000, -1000, 2680, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2684, 549, 2679, 2679, 2679, 2679, 2679, -1000, -1000,
	-1000, -1000, -1000, 1036, -1000, -1000, -1000, 18293, 2920, 2850,
	77100, 60126, 1099, -468, 826, 2946, 2958, 2946, 909, -1000,
	1260, 2691, 78576, 876, 2634, -1000, 455, 2558, 1168, 56428,
	-1000, -1000, -1000, -1000, -1000, 60126, 60126, 67506, 67506, 67506,
	60126, 2756, 2651, -1000, -1000, -1000, -1000, -1000, 2650, -1000,
	2558, -1000, -1000, 1259, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -440, -442,
	60126, -1000, -1000, -1000, -1000, -1000, -1000, 2649, -1000, 2649,
	-1000, -1000, -1000, 2374, 1721, 2205, 2203, 2983, -1000, -1000,
	-1000, -1000, 1692, -1000, -1000, -1000, -1000, 1724, 60126, 2983,
	-1000, -1000, -1000, 1721, 1365, 2715, 2666, 2402, -1000, -1000,
	-1000, 151, -1000, 148, -1000, -1000, -1000, 2200, -1000, -1000,
	-1000, -1000, -1000, 334, -1000, 19049, 2894, 2891, -1000, 2648,
	2648, -1000, 2648, 1050, 63078, 2648, -1000, -1000, 2524, -1000,
	216, 2373, 60126, -1000, 62340, 57, -1000, -74, 75624, -1000,
	-1000, -1000, 999, 75624, -1000, 310, 270, -1000, 1119, -1000,
	2520, -1000, -1000, -1000, -1000, 2690, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 999, 429, 2647, 999,
	67506, 67506, 294, 2646, -1000, 1660, 1659, -1000, -1000, 141,
	-1000, -1000, -1000, -1000, 3020, -1000, -1000, 264, -49, -1000,
	264, 2372, 19049, -1000, 2666, 2473, -1000, 1254, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2666, -1000, -1000, -1000, -1000,
	2916, 1595, 1595, 1595, 8636, 455, 2754, 2688, 2749, 487,
	-1000, -1000, -1000, -1000, 2782, -1000, 2776, 2775, -1000, -1000,
	-1000, 2670, 62340, 54952, -1000, -1000, -1000, 2402, 77100, 1185,
	-1000, 62340, 2666, 2666, 2666, 19049, 19049, 1569, -1000, 19049,
	19049, 1567, -1000, 19049, 19049, 1460, -1000, 2402, 2645, -1000,
	-1000, 1721, 1253, 5217, -1000, 76362, -241, 2796, 28121, 28121,
	18293, -1000, -1000, -1000, 24341, 3022, -1000, 2807, 2805, 3098,
	-1000, -1000, -1000, 1539, 1765, 1615, -1000, -1000, 1889, -1000,
	-1000, -1000, -1000, -1000, 1236, 2666, -1000, -1000, -1000, -1000,
	-1000, -1000, 5242, -1000, -1000, -1000, -1000, 1924, 19049, 19049,
	19049, 1365, 5242, 4925, 2204, 3564, 1402, 1732, 1732, 1426,
	1426, 1426, 1426, 1426, 1962, 1962, -1000, -1000, -1000, -1000,
	2402, -1000, 2518, -1000, -1000, 2371, 2370, 2369, -1000, -1000,
	-1000, -1000, 13001, -1000, -1000, -1000, -1000, -1000, -1000, 13001,
	13001, 13001, 13001, 13001, 18293, -1000, 2518, 2518, 2518, -1000,
	1834, 2210, 2401, 4810, 2518, 1373, 3095, 2518, 1371, 3094,
	2518, 1588, 19049, 19049, 19049, 2518, 2518, 13001, 1702, -1000,
	18293, 2402, 1232, 2402, 1217, 1212, 2518, -1000, 2402, 2637,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2635, 3093, 2633, -1000, -1000, -1000, -1000, 2518, 2402,
	2518, 2518, -155, -155, 2402, 2518, 2402, 2518, 2518, 2402,
	-155, -155, -155, 2518, 2518, 2518, 2518, 2518, 2518, 2518,
	2518, 2518, 2518, 2518, 2518, -1000, 2402, 1515, 60126, -1000,
	2628, 1515, 2556, 54952, -1000, -1000, 54952, 79314, 25853, -1000,
	28877, -50, -89, -1000, -1000, 2631, -1000, -1000, 1596, -1000,
	-1000, 2367, 1721, -1000, 1206, 2920, 245, -1000, -1000, -1000,
	-1000, 2685, 43879, -1000, 2855, 1280, 1280, 1280, 66030, 77838,
	2848, -1000, -1000, 374, 16, -1000, -1000, -1000, 2047, -1000,
	330, 529, 2680, -1000, -1000, -1000, 2680, 2680, -1000, 2680,
	2680, -1000, -1000, -1000, -1000, 2366, 2366, -1000, -1000, -1000,
	-1000, -1000, 2033, -1000, 2684, -1000, 2031, -1000, -1000, -1000,
	-1000, 374, 374, 374, 374, 374, -1000, 2199, -1000, 2713,
	2666, 60126, -361, -1000, -1000, -1000, 3087, -1000, -1000, 77100,
	64554, 2748, -1000, -1000, 296, 67506, 445, 576, 317, -1000,
	1747, -1000, -1000, 1118, -1000, 1117, -1000, -1000, 1152, 60126,
	60126, 67506, 77100, 2747, 2746, -1000, 51262, -1000, -1000, -1000,
	-1000, 3067, 2192, 2189, -1000, 1691, 1724, -1000, 19049, 67506,
	-1000, 943, -1000, -1000, -1000, -1000, 5242, 19049, 19049, -1000,
	-1000, -1000, -1000, 1792, -1000, -1000, -1000, -1000, -59, -1000,
	-1000, 1113, 1205, 1204, 75624, 1112, -1000, 350, 67506, -1000,
	77100, -1000, 75624, 386, 428, 75624, 1228, 3091, 2630, -1000,
	1656, 1651, 1648, 1624, 1620, 1601, 1600, 1573, 186, 2683,
	2682, -1000, -1000, 254, -1000, 2907, -1000, -1000, 5242, -1000,
	-1000, 22829, 36437, -1000, 1595, 1589, -1000, 1560, 2365, 1773,
	1291, -1000, -1000, -1000, 3054, 1431, 1250, 1047, 1595, 1043,
	459, 1111, 2901, 2899, 564, 560, -1000, 1595, 1043, 1248,
	659, -1000, 1559, 1557, 1553, 1551, 1536, 1534, 1527, 1518,
	639, -362, -1000, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, -208, -211, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 31901, 1595, 1595, -303,
	-1000, 1176, 682, -1000, -1000, 18293, 2681, -1000, 18293, -1000,
	-1000, -1000, -1000, -1000, 77100, 2670, 547, -1000, 2471, -1000,
	-1000, 1185, 77100, 77100, 77100, 4726, 1856, 2666, 4704, 1723,
	2666, 4636, 1563, 2666, 2968, 13001, 22073, 2360, 2629, 2359,
	2358, -1000, 42, -1000, 2791, -1000, -1000, -1000, 60126, -1000,
	-1000, -1000, -1000, 3067, 54214, 13757, -1000, -1000, -1000, -1000,
	34169, 13001, -1000, 1365, 5242, 3545, -1000, 19049, -1000, -1000,
	2402, 2518, 2518, 2518, 2518, 2518, 1721, -1000, -1000, -1000,
	439, 1457, 439, -1000, 1457, 19049, -1000, 19049, 19049, -1000,
	19049, 19049, -1000, -1000, 19049, 3465, 2522, 2332, -291, -1000,
	2611, 1680, -1000, 18293, 2144, -1000, -1000, -1000, -1000, -1000,
	19049, 19049, 19049, 19049, -1000, -1000, -1000, -1000, -1000, 74886,
	-1000, -155, -155, -155, -155, -155, -155, -1000, -1000, -1000,
	-155, -155, -155, -155, -155, -155, -155, -155, -155, -155,
	-155, -155, -1000, 399, 2666, -1000, 25097, 3067, 54952, 2546,
	2546, -1000, 1203, -1000, -1000, -1000, -61, -92, -1000, -1000,
	-1000, -1000, -1000, 36437, -1000, -1000, -1000, 4993, -1000, 1595,
	1595, 1595, 367, 1595, 1595, 1595, 1595, 1595, -239, -240,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 176, 1595, 1595,
	1595, 1595, 1595, 1595, 31901, 1595, 1595, -367, 49048, 1221,
	1027, -1000, -1000, -1000, 77838, 77838, 77838, -1000, 77838, 77838,
	-1000, -1000, -1000, -1000, 49786, -1000, -1000, 1799, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2666, -492, 2029, 60126,
	-1000, 2915, 1542, 38705, 3108, -1000, 2847, -1000, 2843, 2825,
	2357, -1000, -1000, 2539, 2521, 2511, -1000, 2680, -1000, -1000,
	-1000, -1000, -1000, 2516, -1000, 2506, 2627, -1000, 2502, -426,
	2745, 77100, 2978, 2666, 2028, 2744, -1000, -1000, -1000, -1000,
	2503, 2626, -1000, 58323, 77100, 77100, 77100, 689, -303, 771,
	-1000, 67506, 370, 455, 711, 2074, -396, 2957, 60126, 67506,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 74148, 74148, -1000,
	-1000, 18293, -1000, -1000, 2983, -1000, 5242, 2558, -1000, -1000,
	5242, 5242, 1515, 1143, -1000, 67506, 1430, 73410, 1110, 67506,
	372, 253, -1000, 3090, 3089, 369, 3080, -1000, 252, 67506,
	294, 2356, 2354, 2353, 2025, 2019, 2006, 1990, 1989, -1000,
	60126, 60126, 2351, -1000, -1000, -1000, 1533, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1513, 4947, 1291, 1510, 1508, 1507,
	1479, -1000, 165, 46096, 1070, 1193, 1045, -1000, -1000, 2666,
	-1000, 43141, 49786, 49786, 49786, 1074, 2824, 2822, 77100, 49786,
	49786, 77100, 49786, 935, 2181, 2914, 1595, 94, -1000, -1000,
	-1000, 72672, -1000, 71934, 853, 50524, 49786, 77100, 60126, 42403,
	-1000, -1000, -1000, -1000, 71196, 1985, 77100, 77100, 70458, 69720,
	68982, 68244, -1000, -280, 1088, 18293, 1088, 2053, 2053, 2350,
	2349, 2348, 1595, 1595, 142, 2053, 2346, 142, 2053, 37949,
	2345, 1013, 1088, 1088, 1088, 2053, 2053, 2053, 2053, 2343,
	414, 1963, 2342, 2053, 2245, 2234, 1088, -1000, -269, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2053, 2666, -1000, 426, 918, 1109, 851, -5, 1721, 77100,
	1721, 2498, -1000, -1000, 1611, 77100, -1000, 2425, 2425, 2425,
	19049, 19049, 19049, 19049, 19049, 19049, 19049, 19049, 19049, 62340,
	-1000, -1000, 1187, -9, 77100, -1000, 30, -1000, -1000, -1000,
	3065, -1000, 2625, -1000, -1000, -1000, 2402, -1000, 19049, 5242,
	-1000, -155, -155, -155, -155, -155, 2402, 2677, 2677, 2677,
	-1000, 2677, 2679, 113, -1000, -1000, -1000, 2677, 131, 2677,
	121, -1000, 2402, 2402, 2402, 1949, 4082, 3212, 2832, 2750,
	1949, 19049, 19049, 19049, 2666, -149, -1000, 1721, 18293, 2435,
	2396, 1949, 1949, -1000, -1000, 2180, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2742, 2742, 25097, 2968, -1000,
	21317, -1000, 888, -1000, -1000, 77100, 2596, -1000, 1595, 1274,
	1595, 1595, 3061, 2546, -1000, -1000, 1417, -1000, -1000, -1000,
	-1000, 1088, 1088, 1088, 1595, 2913, 1595, 2053, 2053, 2341,
	2340, 2338, 1595, 1595, 142, 2053, 2337, 142, 2053, 37949,
	2324, 1013, 1088, 1088, 1088, 2053, 2053, 2053, 2053, 2322,
	414, -1000, 1847, 2320, 2053, 2195, 2130, 1088, -1000, -270,
	2053, 2666, -282, 2483, -1000, 2677, 2677, 2821, 1280, -1000,
	-1000, -1000, -1000, -1000, -1000, 2676, -1000, -1000, 19049, 2977,
	-1000, 2675, 1476, -1000, -1000, -1000, -1000, 994, 2319, -1000,
	-1000, 19049, -1000, -1000, 2666, 2666, 2666, 2666, 2666, 2666,
	2666, 2666, 2666, 2666, 2666, 2666, 2666, -84, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2317, -1000, 1983,
	-1000, 1982, -1000, -1000, -1000, 60126, -1000, -1000, 2976, -1000,
	60126, 250, 64554, -1000, 58323, 58323, 58323, -5, 378, -1000,
	1777, -1000, -1000, -1000, 2316, 2315, 2313, 2558, 460, 1774,
	417, -1000, 2973, 2962, 2312, 2310, 2309, 2305, 1977, -1000,
	-1000, 2714, 77100, 2623, -1000, 1721, 1724, 30, 60126, 253,
	-1000, -1000, -1000, 67506, 253, -1000, -1000, 425, 67506, 67506,
	3078, 67506, 430, 1228, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2479, 2477, -1000, -1000, -1000, -1000, -1000,
	-1000, 1315, 1237, 342, 339, -260, -1000, 456, 323, -1000,
	-1000, -1000, 50524, 1007, 58323, 58323, 77838, 1280, -1000, 2818,
	1469, -1000, -1000, -1000, -1000, 77100, -1000, 49786, 2622, -428,
	-430, 1341, -444, -1000, -1000, -1000, -1000, 50524, 1595, 1457,
	2911, 677, 333, 667, 331, -1000, -1000, -1000, -1000, 1007,
	1257, 1108, -1000, 2816, 49786, 1106, 601, 324, -1000, 1850,
	-304, 2622, -1000, 2622, -1000, 2622, -1000, 2622, -1000, -1000,
	-1000, 1721, -1000, -1000, -1000, -1000, -1000, -1000, 2304, 2303,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -214, -1000,
	37949, 426, -1000, 1967, 1966, 1964, 1947, 1805, -1000, 2741,
	78576, -1000, 670, 2740, 630, 994, 2475, -1000, 77100, -1000,
	-1000, -1000, -1000, -1000, 5242, 5242, 2278, 5242, 5242, 2015,
	5242, 5242, 1991, -1000, 33413, 2666, -1000, 19, -1000, 3063,
	3053, -1000, -1000, 5242, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 495, 478, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19049, 19049, 19049, 19049, -1000, 1949,
	1949, 1949, 19049, 2402, 2302, 1721, 19049, 19049, -1000, -1000,
	1475, -1000, 3007, 2952, 3007, 2555, 62340, 2402, 2567, 2473,
	2402, 345, -1000, -1000, -1000, 61602, 54952, 2621, -1000, 2666,
	2471, 3061, 25097, 18293, 18293, 18293, 18293, 3028, -1000, -1000,
	-1000, -1000, 1457, 1595, 32657, -1000, -1000, -1000, -1000, -1000,
	2301, 2300, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -216,
	-1000, 37949, -1000, 267, 49048, 2950, 2950, 77838, 77838, 77100,
	1949, 2666, 77100, -1000, -1000, -1000, -1000, -1000, 1949, -1000,
	-1000, 2465, 2440, 2674, -1000, -1000, -396, 3019, -1000, 250,
	-1000, 2299, 820, 831, -1000, 819, 818, 810, 801, 794,
	-1000, -1000, -1000, -1000, 2740, 768, 378, -1000, -57, 1942,
	1538, 2905, 781, -1000, -1000, -1000, -1000, 313, 455, -1000,
	708, 2298, 694, 2293, -1000, -1000, 448, -1000, -1000, 2884,
	2464, -1000, 19, -1000, 2975, 253, 2975, 368, 1228, 1228,
	67506, 1228, -1000, -1000, -1000, -1000, -274, 1940, 19049, 2666,
	2666, 789, 2430, -1000, -1000, 2174, -1000, -1000, 2713, 1070,
	77838, 2429, -1000, 77100, -1000, -1000, -1000, -1000, -1000, -1000,
	2945, 2944, -1000, -1000, 1007, 1457, -1000, 1457, -1000, -1000,
	-1000, -1000, -1000, 49786, 77100, 49786, 1105, 49786, -1000, -1000,
	2666, 1141, -1000, -1000, -1000, -1000, 2462, -1000, -1000, -1000,
	-1000, -1000, -1000, 571, 2290, 305, -1000, -1000, 1176, 673,
	-1000, -1000, -1000, -231, -1000, -1000, 19049, 19049, 19049, -1000,
	35681, 2878, 2865, -157, 18293, 18293, -1000, -1000, -1000, -1000,
	1949, 1949, 1949, 1949, -1000, -1000, -1000, 366, -1000, -1000,
	1949, 1949, 3061, 3046, -1000, -1000, 2815, -1000, 3007, 2670,
	-1000, -1000, 2567, 345, -1000, 888, -1000, 12245, -1000, 3028,
	-1000, 1721, 1721, 1721, 1721, -1000, -1000, 1457, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2462, 267, -1000, 37949, 1595,
	2289, 1595, 1595, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2445, -495, 19049, 2438, -1000, -1000, -1000, 49048, 329, -1000,
	912, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2882, 2881,
	841, 918, -1000, 2287, 2285, -1000, 710, 1945, 1338, -161,
	-1000, -1000, -1000, -1000, -1000, -1000, 690, 2173, -1000, 412,
	-1000, -1000, 402, -1000, -1000, 3044, -396, 19049, -1000, 2878,
	-1000, 67506, 2975, -1000, -1000, -1000, -1000, 1228, -1000, 2666,
	3041, -1000, 1949, 77100, 19049, 2666, 1548, -1000, -1000, 374,
	374, 2673, 77838, 2672, -1000, 1469, 2804, 19049, -1000, -1000,
	1400, 1393, -1000, -1000, 1101, 49786, -1000, 1469, 60126, 37949,
	-1000, -1000, -1000, -1000, 918, 1438, 681, 1949, 1949, 1949,
	2406, -1000, 82624, 327, -1000, -1000, 2849, 3039, -1000, 77100,
	-1000, 1721, 2610, -1000, 1721, -1000, -1000, -1000, -1000, 2402,
	283, -324, -1000, -1000, 1461, 18293, 2609, 3107, -1000, -1000,
	-1000, -1000, 345, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1913, -1000, 2284, 2282, 1016, -1000, -1000, -1000, 1949, -1000,
	2436, -1000, 329, 885, 82708, -1000, -1000, -1000, -1000, 1805,
	-1000, -1000, -1000, -1000, 1893, -1000, -1000, 1936, 703, 385,
	-1000, 2974, -1000, -1000, 1868, 5242, 1079, -307, -1000, -1000,
	-1000, 1469, -413, -1000, 2425, 1949, 77100, 1860, 49048, 2713,
	49048, -1000, 988, 5242, 1595, 1457, 49786, -1000, 2429, 41,
	-1000, 82708, 1805, 1281, 678, 630, -1000, -1000, -1000, 2402,
	35681, 387, -458, -22, 2276, 2872, 2863, 2860, -1000, 2269,
	2608, -1000, 2970, 18293, -1000, 2789, -298, -329, 2402, 355,
	355, 2605, 25097, 2402, -1000, -1000, -1000, 60126, -495, 267,
	-309, -1000, 865, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 11489, 18293, 174,
	37193, 2172, 2170, 82708, 2379, 82708, 18293, 2162, 2155, 2846,
	19049, 82522, 481, -340, -1000, -342, -1000, -1000, -1000, 2268,
	-1000, 2670, 1837, 436, 2429, 322, -1000, -1000, 2425, -1000,
	2423, 2669, 2421, 984, 1457, -1000, -1000, -1000, 647, -1000,
	-1000, 465, 994, -1000, 630, -1000, 2968, -1000, -1000, 2263,
	-209, -1000, 2666, -37, 3038, 3035, -1000, 3032, 3030, -1000,
	77100, 2666, -1000, -1000, 2788, -1000, -1000, -1000, 352, -1000,
	1450, 859, 1446, -1000, 994, -1000, 2594, -1000, 2668, -1000,
	-1000, 267, -1000, 361, -309, -1000, 2152, 2139, -1000, 2083,
	2002, -1000, 18293, 2134, 628, 615, 10889, -1000, -1000, -1000,
	-1000, -1000, -1000, -501, -1000, 309, -502, 1107, -1000, -1000,
	2115, -1000, 3076, 5242, -1000, -503, -1000, -1000, -1000, -1000,
	2910, 1545, 63816, -1000, 2666, 789, -1000, 267, 49048, 267,
	2666, -1000, -1000, -1000, -1000, -231, -1000, 1438, 62340, 661,
	2251, 35681, 2666, 2247, 2246, 2084, 2054, -1000, -1000, -314,
	1750, -1000, -1000, -1000, -1000, -1000, -278, 77100, 357, 1033,
	1032, -1000, -1000, -1000, -1000, 1866, 1741, 82708, -1000, 2103,
	82708, 3018, 3017, 3013, 30, 36437, 82372, 82163, 82708, 82708,
	18293, 81990, 82708, 1789, -1000, 81927, 82708, -1000, 25097, -1000,
	-1000, -1000, -1000, 3120, 2558, 19049, 2666, -1000, 2418, -1000,
	19805, 82708, -1000, 1438, -1000, 1938, 1933, 2739, 2738, 994,
	-1000, 2406, 35681, -1000, -1000, -1000, -1000, -326, 352, -1000,
	2410, -1000, 348, 344, 312, 1739, 82708, -1000, -504, 82708,
	-505, 857, 329, 1021, 1387, -1000, 605, -1000, 2114, -507,
	-509, -511, 1098, 18293, -513, 2101, -1000, -1000, 2594, 67506,
	1949, 19049, 267, 1949, 2402, -1000, -1000, 2737, 994, -1000,
	2736, 994, -86, -87, 2735, -1000, 2406, -333, -1000, 2732,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 81755,
	61602, -1000, -514, 81591, -516, 6050, -1000, -1000, -1000, 81523,
	-1000, -1000, -1000, -1000, 607, -1000, -1000, 2943, -1000, -1000,
	81359, 81055, 5668, 82708, 2078, 80998, 2572, -1000, -1000, 2558,
	-276, 1949, -1000, -1000, -1000, -1000, 278, 2731, -374, 2728,
	277, 276, -1000, -1000, -88, -1000, -1000, 2727, 2726, 3073,
	-1000, -517, -1000, -1000, 80845, 1730, 82708, 1069, 82708, 1629,
	-1000, 18293, -1000, 1021, -1000, 19049, 2088, 597, 18293, -518,
	590, 567, 2085, -1000, 1829, -276, 274, -388, 2724, 2721,
	-1000, -1000, -1000, 3106, -1000, 3088, 1219, 1219, 80791, 1713,
	-1000, -1000, -519, 1068, 82708, -1000, 1955, -1000, 5242, -1000,
	2058, 1727, 10758, -1000, -1000, -1000, -1000, -1000, 269, -395,
	-1000, -1000, -1000, 1028, 1859, -1000, -1000, -1000, 10522, -1000,
	-522, 82708, -1000, 583, 565, -1000, -1000, -1000, -1000, -1000,
	1064, 6679, -524, 1914, 1855, -1000, 1062, 82708, -1000, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 3609, 3606, 3592, 14, 3591, 294, 319, 312, 16,
	2931, 3590, 324, 3589, 308, 3588, 25, 21, 18, 30,
	3587, 3239, 3228, 3216, 3208, 28, 3585, 54, 3584, 3582,
	3206, 3580, 3578, 3200, 3577, 3576, 3574, 3573, 3566, 3564,
	3563, 3560, 3559, 3195, 3191, 3189, 3187, 3558, 3555, 3554,
	3178, 3173, 3170, 3553, 77, 3552, 42, 43, 33, 3551,
	7, 3549, 201, 235, 3548, 4, 3538, 3529, 12, 204,
	3527, 3526, 71, 3168, 3524, 3523, 3522, 3521, 3517, 3515,
	143, 3514, 3513, 3164, 3512, 3149, 3509, 3147, 3145, 3143,
	3141, 3139, 202, 3506, 3135, 3133, 3129, 3505, 2852, 233,
	473, 229, 3504, 133, 139, 1787, 3503, 244, 3501, 213,
	3500, 3497, 3496, 445, 224, 3495, 166, 87, 364, 183,
	169, 179, 1550, 3484, 63, 167, 352, 3483, 6, 3482,
	120, 3480, 214, 3478, 221, 2928, 195, 230, 193, 3476,
	3456, 163, 3455, 3453, 3452, 215, 3451, 3448, 234, 5604,
	3446, 3445, 188, 3444, 141, 3442, 173, 3441, 3440, 3439,
	3437, 237, 116, 88, 170, 140, 3436, 159, 3435, 3434,
	3433, 3432, 3431, 3429, 84, 32, 256, 3428, 160, 196,
	3427, 58, 36, 62, 3426, 3425, 56, 3424, 3423, 135,
	3422, 3416, 131, 3415, 190, 72, 3412, 3410, 3408, 3394,
	115, 85, 3393, 35, 3392, 189, 3391, 3390, 3389, 3388,
	3387, 100, 3386, 89, 3385, 192, 236, 311, 3384, 3383,
	50, 47, 3381, 66, 20, 10, 101, 37, 105, 80,
	185, 172, 129, 154, 93, 148, 51, 151, 164, 86,
	3378, 231, 176, 212, 114, 40, 3376, 3375, 203, 3373,
	113, 210, 184, 187, 209, 3369, 3367, 3366, 239, 3365,
	182, 544, 3364, 126, 150, 96, 2858, 249, 137, 3363,
	3361, 3360, 3359, 121, 55, 125, 3358, 41, 241, 238,
	243, 49, 98, 3357, 980, 5326, 6226, 6985, 34, 198,
	110, 6837, 38, 211, 3356, 68, 3353, 3340, 3337, 3708,
	171, 52, 79, 158, 3334, 165, 53, 91, 3331, 3330,
	3329, 3328, 3327, 3326, 155, 132, 3324, 3323, 67, 3322,
	3321, 60, 57, 17, 13, 3320, 162, 219, 218, 216,
	3319, 205, 64, 3318, 3313, 180, 134, 3312, 3311, 3310,
	3309, 181, 117, 207, 3308, 206, 130, 123, 3307, 122,
	3306, 3305, 90, 7484, 157, 3300, 3299, 149, 128, 146,
	194, 3298, 3297, 3292, 70, 3290, 3288, 3, 3285, 109,
	44, 46, 112, 11, 161, 3281, 3280, 197, 3279, 3277,
	147, 174, 3275, 145, 142, 73, 3273, 74, 138, 3272,
	168, 2, 5, 8, 3271, 3270, 3269, 3268, 3267, 3266,
	3264, 3261, 124, 3260, 3259, 108, 103, 75, 3257, 3256,
	3255, 3254, 3253, 200, 177, 76, 222, 136, 9, 3252,
	3251, 23, 3250, 178, 3249, 104, 3247, 3245, 127, 3244,
	3243, 69, 107, 39, 95, 3242, 3241, 118, 153, 3235,
	99, 3232, 3222, 226, 369, 3220, 566, 3218, 199, 191,
	78, 92, 3214, 81, 111, 3212, 106, 3197, 24, 65,
	3183, 27, 48, 1651, 3180, 0, 3379, 208, 3175, 175,
	3166, 3151, 232, 3137,
}

var yyR1 = [...]int{
	0, 464, 464, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 246, 246, 97, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 128, 128, 8, 8,
	127, 127, 127, 243, 243, 243, 243, 240, 240, 129,
	129, 126, 126, 134, 16, 16, 16, 111, 111, 17,
	18, 18, 18, 18, 467, 467, 143, 143, 141, 141,
	142, 142, 237, 237, 239, 239, 19, 19, 19, 248,
	248, 253, 253, 253, 256, 256, 256, 256, 225, 226,
	227, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 455, 455, 455, 456,
	456, 456, 456, 456, 281, 281, 281, 281, 419, 419,
	435, 435, 435, 436, 436, 434, 434, 434, 434, 434,
	438, 438, 439, 439, 437, 437, 437, 437, 441, 441,
	442, 442, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 422, 422, 422, 50,
	50, 50, 50, 50, 54, 54, 51, 51, 51, 51,
	51, 51, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 444, 444, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 446, 446, 447, 447,
	448, 448, 448, 448, 449, 449, 449, 449, 449, 450,
	450, 450, 450, 450, 450, 450, 451, 451, 452, 452,
	3, 2, 400, 400, 401, 401, 402, 402, 402, 402,
	403, 403, 404, 404, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 31, 31, 31, 31, 31, 31,
	280, 280, 276, 276, 276, 278, 278, 279, 279, 279,
	421, 421, 421, 415, 415, 415, 417, 417, 416, 416,
	416, 418, 418, 423, 423, 423, 423, 423, 426, 426,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	427, 427, 427, 424, 424, 162, 162, 428, 428, 433,
	433, 429, 429, 430, 430, 432, 432, 432, 431, 431,
	431, 431, 318, 318, 181, 181, 70, 70, 71, 71,
	71, 214, 214, 214, 20, 20, 20, 20, 20, 20,
	26, 26, 28, 28, 28, 28, 57, 57, 58, 29,
	29, 29, 29, 59, 59, 60, 32, 32, 32, 32,
	32, 32, 67, 67, 67, 66, 66, 65, 65, 65,
	65, 65, 65, 34, 35, 36, 468, 468, 468, 61,
	61, 37, 37, 37, 40, 40, 40, 41, 41, 41,
	38, 39, 42, 30, 30, 30, 30, 68, 68, 63,
	63, 62, 62, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 33, 33, 33, 33, 33,
	33, 25, 399, 399, 399, 56, 56, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	78, 78, 355, 356, 356, 356, 356, 356, 356, 342,
	342, 343, 343, 343, 343, 343, 343, 332, 332, 332,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 306, 306, 306,
	306, 310, 310, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 309, 309,
	309, 309, 309, 309, 309, 309, 311, 311, 311, 311,
	311, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 341, 341, 315, 315,
	314, 314, 314, 335, 335, 336, 336, 336, 333, 333,
	333, 334, 334, 319, 319, 319, 319, 319, 319, 320,
	337, 321, 321, 322, 322, 322, 322, 322, 322, 323,
	323, 324, 324, 324, 326, 326, 331, 331, 330, 330,
	330, 330, 330, 330, 327, 327, 327, 327, 327, 327,
	328, 328, 328, 329, 340, 340, 340, 340, 340, 316,
	46, 46, 52, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 377,
	377, 382, 382, 270, 270, 271, 271, 53, 53, 53,
	53, 53, 168, 168, 55, 55, 55, 378, 378, 380,
	380, 380, 380, 380, 380, 380, 380, 379, 379, 381,
	381, 344, 344, 373, 373, 372, 372, 371, 371, 371,
	371, 371, 371, 371, 353, 353, 354, 354, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 348, 348, 348,
	347, 347, 349, 349, 352, 352, 352, 370, 370, 369,
	369, 345, 345, 345, 383, 383, 383, 383, 383, 102,
	102, 346, 346, 346, 384, 350, 350, 351, 351, 351,
	392, 393, 391, 391, 391, 391, 391, 169, 169, 169,
	375, 375, 375, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 103, 103, 103, 104, 104, 325, 325, 357, 357,
	357, 357, 357, 463, 463, 463, 358, 358, 358, 358,
	358, 358, 454, 454, 453, 453, 453, 359, 359, 360,
	361, 361, 361, 362, 362, 364, 364, 277, 277, 365,
	365, 366, 366, 363, 363, 363, 367, 367, 396, 396,
	396, 395, 395, 73, 73, 73, 73, 75, 75, 74,
	74, 74, 82, 82, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 72, 72, 290,
	290, 77, 213, 213, 213, 275, 275, 389, 389, 390,
	390, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 386, 386, 385, 385, 387, 387, 76, 76,
	76, 76, 163, 163, 22, 22, 79, 79, 420, 420,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	394, 394, 394, 24, 24, 83, 84, 84, 84, 289,
	289, 289, 289, 289, 87, 87, 87, 87, 241, 241,
	242, 242, 88, 88, 88, 88, 89, 89, 89, 89,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 123, 262, 262, 261, 261, 260, 260,
	260, 263, 263, 263, 263, 304, 304, 304, 86, 86,
	86, 98, 98, 93, 93, 96, 96, 96, 96, 99,
	99, 100, 100, 101, 101, 94, 95, 43, 44, 44,
	44, 44, 45, 91, 91, 91, 92, 92, 92, 92,
	113, 113, 114, 114, 470, 470, 470, 90, 471, 105,
	106, 106, 108, 108, 108, 109, 109, 109, 110, 110,
	110, 267, 267, 267, 267, 267, 267, 267, 107, 107,
	107, 117, 117, 121, 121, 121, 121, 120, 120, 120,
	120, 216, 216, 221, 296, 296, 197, 197, 217, 217,
	222, 222, 222, 223, 223, 224, 224, 224, 224, 224,
	219, 219, 218, 218, 220, 184, 184, 184, 184, 182,
	182, 182, 182, 182, 182, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	180, 180, 294, 294, 294, 294, 293, 293, 293, 125,
	125, 130, 130, 132, 132, 132, 132, 132, 132, 132,
	132, 135, 199, 199, 472, 472, 153, 153, 154, 154,
	154, 154, 155, 155, 155, 155, 155, 157, 157, 157,
	158, 158, 158, 158, 158, 158, 159, 160, 160, 156,
	156, 156, 178, 178, 235, 235, 236, 236, 234, 234,
	238, 238, 131, 131, 133, 133, 133, 133, 138, 138,
	139, 139, 140, 140, 301, 301, 301, 144, 144, 144,
	146, 145, 145, 145, 145, 145, 145, 147, 147, 457,
	458, 458, 459, 459, 459, 459, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 461, 461, 462, 462,
	148, 148, 150, 151, 151, 149, 149, 149, 149, 149,
	149, 161, 161, 152, 164, 164, 164, 164, 165, 165,
	122, 122, 122, 122, 122, 122, 122, 122, 259, 259,
	167, 167, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 193, 193, 193, 193, 193, 193, 170, 170,
	170, 170, 170, 170, 170, 116, 116, 194, 194, 194,
	137, 136, 136, 119, 119, 118, 118, 195, 195, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 187, 187, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 192, 192, 192, 192, 192,
	469, 469, 189, 189, 188, 188, 188, 188, 188, 188,
	112, 112, 112, 112, 112, 302, 302, 302, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	69, 69, 206, 206, 115, 115, 204, 204, 205, 207,
	207, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 177,
	177, 177, 208, 208, 196, 196, 124, 209, 209, 210,
	211, 211, 212, 212, 215, 228, 228, 228, 229, 229,
	229, 229, 179, 179, 179, 230, 230, 230, 230, 230,
	172, 172, 171, 171, 171, 173, 173, 173, 173, 174,
	174, 473, 473, 233, 233, 232, 232, 231, 231, 231,
	231, 231, 231, 231, 244, 244, 198, 198, 201, 201,
	200, 202, 245, 245, 250, 250, 250, 250, 247, 247,
	251, 251, 251, 251, 254, 254, 255, 255, 255, 252,
	252, 252, 252, 249, 249, 249, 298, 298, 298, 298,
	257, 257, 266, 266, 264, 264, 265, 265, 258, 258,
	317, 317, 317, 272, 272, 273, 273, 274, 274, 268,
	268, 268, 268, 269, 269, 295, 295, 291, 291, 297,
	297, 292, 292, 299, 299, 300, 300, 300, 300, 397,
	397, 398, 398, 398, 338, 338, 409, 409, 339, 339,
	410, 410, 411, 411, 406, 406, 407, 407, 408, 408,
	408, 47, 412, 412, 413, 413, 414, 414, 414, 414,
	48, 49, 49, 49, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 288, 288,
	288, 288, 288, 288, 285, 285, 285, 285, 285, 285,
	286, 286, 286, 465, 466,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 9, 9, 10, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 0, 2, 3, 4, 5, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 0, 0,
	0, 2, 3, 2, 3, 12, 12, 13, 5, 5,
	16, 12, 9, 4, 15, 1, 6, 9, 8, 0,
	3, 3, 6, 3, 0, 3, 4, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	10, 9, 5, 7, 0, 3, 9, 9, 9, 10,
	6, 8, 2, 3, 2, 3, 3, 3, 4, 3,
	3, 2, 2, 3, 2, 2, 2, 3, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 2, 4, 5, 4, 6, 7,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 0, 1,
	4, 3, 3, 3, 6, 6, 5, 5, 5, 5,
	4, 3, 5, 1, 3, 1, 3, 3, 5, 0,
	5, 0, 3, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 8, 4, 7, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	5, 7, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 2, 5, 0, 1, 2, 1,
	3, 5, 7, 8, 7, 9, 10, 7, 9, 10,
	2, 2, 2, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 4, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	5, 5, 5, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 6, 8, 3, 6, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 3, 2, 3, 3, 2, 3, 3, 2,
	3, 4, 2, 2, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 4, 4, 1, 1, 1,
	1, 1, 2, 1, 1, 1, 1, 3, 0, 3,
	0, 3, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 2, 3, 3, 2, 2, 4, 3,
	1, 0, 1, 3, 3, 3, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 1, 0, 1, 1, 1,
	1, 2, 2, 2, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 2, 1, 2, 1, 2, 2,
	5, 5, 3, 2, 2, 2, 2, 1, 1, 1,
	1, 3, 2, 1, 1, 2, 2, 3, 3, 0,
	3, 0, 3, 1, 1, 0, 1, 5, 4, 2,
	3, 3, 0, 1, 0, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 3, 5,
	5, 5, 4, 0, 1, 1, 2, 2, 3, 2,
	3, 3, 1, 1, 0, 1, 1, 1, 3, 5,
	3, 3, 3, 5, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 1, 3, 3,
	3, 3, 2, 1, 11, 12, 12, 13, 13, 0,
	1, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	0, 2, 3, 3, 3, 3, 4, 5, 3, 3,
	4, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 4, 4, 3, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 0, 1, 6,
	1, 4, 5, 5, 6, 0, 1, 0, 3, 1,
	1, 0, 2, 0, 8, 9, 0, 2, 0, 1,
	2, 0, 2, 1, 1, 1, 1, 4, 3, 7,
	5, 5, 1, 3, 5, 4, 9, 11, 9, 2,
	2, 3, 3, 4, 4, 4, 4, 3, 3, 3,
	3, 6, 5, 4, 4, 5, 5, 8, 4, 5,
	7, 2, 2, 2, 2, 3, 4, 3, 4, 1,
	3, 3, 3, 3, 4, 5, 5, 3, 7, 6,
	5, 2, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 4, 4, 3, 5, 3, 1, 1, 1,
	1, 6, 0, 1, 2, 0, 1, 0, 1, 1,
	2, 5, 3, 4, 4, 4, 4, 4, 4, 3,
	7, 6, 8, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 3, 1, 3, 8, 8, 8, 11,
	12, 15, 0, 3, 3, 3, 3, 5, 3, 5,
	6, 6, 4, 4, 4, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 8, 5, 1, 1,
	1, 1, 1, 1, 4, 4, 4, 4, 1, 3,
	1, 1, 2, 2, 4, 4, 3, 3, 3, 3,
	3, 4, 3, 5, 5, 5, 4, 4, 4, 4,
	3, 2, 2, 6, 2, 4, 3, 3, 4, 4,
	5, 8, 6, 3, 4, 4, 2, 4, 3, 2,
	4, 5, 6, 2, 6, 6, 3, 3, 4, 2,
	4, 3, 3, 3, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 3, 2, 0, 1, 1, 2, 4,
	1, 0, 1, 2, 1, 2, 4, 4, 5, 0,
	1, 0, 3, 0, 2, 4, 4, 2, 3, 4,
	4, 5, 3, 4, 5, 4, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 3, 0, 2,
	0, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 0, 2, 2, 2, 2, 2, 2, 0, 1,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 2, 6, 0, 1, 0, 3, 0, 1,
	0, 2, 2, 4, 1, 2, 2, 2, 2, 2,
	0, 2, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 2, 2, 1, 1, 1, 1,
	3, 1, 1, 1, 4, 5, 1, 2, 3, 1,
	1, 2, 2, 4, 0, 1, 2, 6, 1, 3,
	2, 4, 1, 1, 1, 1, 1, 5, 5, 8,
	5, 5, 8, 5, 5, 8, 2, 2, 2, 3,
	4, 4, 0, 1, 3, 1, 0, 3, 1, 3,
	1, 3, 4, 6, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 3, 2, 2, 2, 12,
	1, 3, 3, 3, 6, 7, 2, 3, 3, 4,
	4, 5, 5, 8, 8, 3, 3, 4, 3, 4,
	1, 3, 3, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 1, 1, 5, 6, 6, 6, 5,
	5, 5, 6, 5, 5, 6, 5, 5, 5, 5,
	6, 5, 5, 5, 4, 4, 5, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 4, 6, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 4, 4, 2, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 6, 3, 4, 2, 2, 2,
	0, 2, 1, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 2, 1, 2, 1,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 1, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 1, 3, 1, 0, 2, 1,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 1, 0, 2, 4, 3, 4,
	1, 4, 1, 3, 4, 1, 4, 3, 6, 2,
	3, 1, 1, 0, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 0, 5, 1, 3, 2, 3,
	3, 1, 1, 3, 3, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 4, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 0, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 1, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 2, 0, 4,
	4, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -464, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -73, -22, -23, -24, -83, -87, -88, -89, -85,
	-86, -93, -94, -95, -91, -90, -30, -33, -25, -97,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -135, -465, 12, -129, 35, -78, 191,
	-455, -75, -74, -76, -77, 194, 193, 231, 195, 647,
	369, 648, 224, 73, 447, -96, 450, 451, -470, 307,
	308, 25, 43, 452, 454, 36, 37, 247, 335, 337,
	198, 448, 430, 431, 360, 695, -6, 653, 56, 77,
	192, 226, 225, 32, -8, -11, 200, -12, -13, -7,
	764, -211, 20, -105, -471, -211, -10, -9, -4, 653,
	-105, -111, 14, 15, 13, 558, -105, -355, 29, -3,
	118, 77, -8, 11, -269, -280, 98, 549, 199, -278,
	331, 333, 209, -266, -268, -276, 257, 267, 50, 211,
	210, 268, 200, 331, -266, 201, 203, 549, 199, 240,
	239, 331, 333, 272, 647, 200, -149, -299, -285, -287,
	-286, 349, 83, -284, 578, 582, 272, 585, 586, 591,
	339, 91, 53, 369, 572, 361, 370, 221, 527, 573,
	332, 338, 341, 362, 736, 371, 373, 374, 570, 571,
	55, 203, 560, 561, 564, 214, 751, 354, 222, 650,
	268, 759, 754, 756, 343, 757, 517, 609, 447, 466,
	458, 485, 651, 707, 280, 302, 455, 386, 534, 610,
	346, 295, 367, 708, 322, 290, 523, 529, 305, 450,
	611, 612, 613, 543, 248, 278, 709, 456, 299, 301,
	300, 262, 577, 306, 42, 227, 482, 660, 648, 257,
	710, 616, 703, 615, 251, 284, 614, 329, 41, 33,
	617, 250, 546, 109, 277, 711, 377, 531, 618, 503,
	378, 246, 273, 275, 291, 713, 655, 350, 233, 530,
	432, 478, 360, 128, 255, 317, 379, 714, 504, 508,
	715, 535, 336, 316, 621, 716, 717, 380, 659, 285,
	718, 202, 342, 622, 281, 719, 258, 445, 537, 347,
	502, 212, 652, 223, 57, 237, 538, 506, 624, 512,
	515, 433, 376, 434, 720, 721, 722, 723, 358, 356,
	626, 357, 359, 628, 269, 297, 656, 625, 658, 62,
	197, 662, 510, 509, 511, 298, 676, 533, 490, 488,
	724, 725, 351, 218, 726, 727, 489, 23, 728, 729,
	541, 321, 353, 730, 731, 732, 627, 294, 632, 608,
	733, 734, 532, 505, 507, 256, 127, 647, 279, 735,
	355, 528, 364, 663, 654, 340, 292, 633, 737, 382,
	293, 236, 229, 542, 427, 428, 443, 444, 372, 738,
	431, 739, 740, 741, 742, 334, 333, 451, 365, 634,
	452, 274, 303, 657, 743, 635, 636, 744, 745, 266,
	249, 545, 536, 61, 519, 514, 368, 383, 457, 429,
	440, 435, 436, 438, 439, 442, 441, 437, 446, 522,
	448, 276, 243, 637, 638, 639, 430, 640, 12, 296,
	348, 641, 642, 643, 526, 366, 304, 267, 270, 493,
	238, 746, 747, 480, 481, 449, 241, 231, 122, 544,
	387, 327, 702, 331, 384, 289, 60, 244, 54, 748,
	749, 271, 245, 661, 288, 453, 345, 664, 200, 83,
	-289, -284, -287, -288, -285, -286, 349, 232, 59, 96,
	64, 63, 83, -284, 647, 144, 486, 534, 191, 524,
	525, 531, -348, 532, 239, 427, 368, 242, -304, 200,
	-262, 241, 523, 336, 355, 582, 245, 246, 273, 428,
	434, 201, 202, 38, 536, 535, 527, -299, -98, 453,
	-98, -98, 204, 453, -113, 233, 195, -149, 232, -68,
	83, 309, -68, 35, 83, -161, -291, -299, 83, -284,
	42, 83, 452, 526, 526, 85, 654, 248, 27, -444,
	-418, 364, -443, -416, 192, 191, 15, 193, 272, 369,
	370, 335, 201, 13, 36, 736, 219, 371, 372, 11,
	224, 373, 374, 240, 14, 375, -445, -421, 388, 389,
	390, 391, 392, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 82, 83, -284,
	-264, 206, 372, 427, 449, 427, 427, -271, -270, 385,
	512, 144, -128, 706, -126, -134, -301, -299, -285, -286,
	-199, -472, 253, 549, -258, 331, -278, 205, -130, -132,
	-133, -153, -136, 704, -465, -131, -457, -149, -137, 83,
	607, -109, 10, -108, -110, 9, 8, -109, -229, 22,
	21, -267, -106, -229, -466, 79, -466, -128, -120, 135,
	-122, -299, -166, 101, -176, 34, 30, -175, 349, 232,
	-167, -203, -285, -202, -137, 144, -303, 133, 134, 141,
	102, 187, -187, -185, -186, -188, -190, -191, 227, 480,
	481, 82, 84, 92, 85, 86, 87, 88, 93, 94,
	95, -291, -287, -286, -283, 578, 582, 585, 586, 591,
	-200, -465, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 67, 68, 576, 199, 559, 560,
	483, 561, 13, 562, 563, 564, 649, 221, 568, 104,
	56, 326, 550, 551, 555, -192, 552, 556, 557, 570,
	571, 572, 573, 206, 549, 139, 558, 595, 596, 597,
	598, 599, 600, 601, 602, 604, 605, 603, 579, 580,
	581, 583, 584, 587, 588, 589, 590, 592, 593, 594,
	678, 196, 192, 195, 100, 29, 31, 679, 254, 103,
	464, 498, 567, 21, 25, 215, 198, 486, 213, 143,
	208, 216, 311, 313, 191, 71, 680, 547, 312, 524,
	674, 671, 673, 672, 477, 475, 310, 681, 15, 32,
	225, 261, 682, 473, 193, 252, 107, 108, 683, 47,
	46, 8, 314, 226, 320, 474, 684, 685, 24, 74,
	217, 16, 211, 242, 758, 686, 335, 18, 126, 19,
	687, 668, 670, 669, 205, 120, 201, 750, 69, 259,
	688, 462, 467, 468, 469, 470, 471, 463, 97, 689,
	690, 117, 325, 65, 607, 38, 247, 704, 565, 324,
	691, 44, 43, 497, 501, 496, 323, 513, 118, 22,
	553, 554, 36, 692, 693, 235, 500, 461, 495, 705,
	694, 666, 264, 72, 385, 476, 762, 39, 75, 230,
	381, 352, 48, 98, 20, 260, 70, 40, 574, 123,
	763, 479, 207, 239, 695, 539, 263, 696, 124, 472,
	706, 219, 119, 454, 194, 363, 308, 220, 330, 26,
	337, 697, 253, 125, 525, 665, 698, 569, 35, 224,
	307, 460, 209, 699, 265, 319, 309, 318, 700, 701,
	344, 49, 760, 677, 200, 45, 106, 499, 459, 494,
	204, 566, 240, 315, 9, 50, 37, 520, 14, 375,
	73, 76, 487, 484, 492, 491, 210, 761, 17, 328,
	575, 653, 540, 99, 675, 521, 548, -105, -105, -105,
	-247, 449, -254, -251, 535, 536, -252, -255, -249, -203,
	512, 733, 734, 534, 486, 533, -291, -299, -285, 349,
	232, 144, 579, 580, 581, 104, 483, 559, 595, 550,
	552, 547, 551, 549, 34, 596, 30, 95, 597, 576,
	206, 13, 187, 583, 584, 598, 599, 600, 67, 553,
	554, 649, 139, 101, 601, 602, 93, 604, 605, 326,
	558, 68, 603, 199, 589, 588, 587, 590, 562, 563,
	94, 555, 556, 557, 56, 593, 592, 594, -2, -6,
	-465, -149, -356, -343, -346, -291, -285, -287, -288, 228,
	-286, 216, -384, 83, -284, 213, -211, -105, 201, 203,
	558, -265, 206, -265, 240, 239, 272, -279, 265, -265,
	-265, 737, 200, -278, 110, 110, -79, -149, -420, -415,
	-421, 200, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, 83, -289, -149, 188, -84, -149, -141, 16, 16,
	76, 76, 83, -289, 83, 433, 376, 35, -263, 118,
	17, 549, 199, 200, 239, 240, 203, 272, -263, -350,
	16, 120, 243, 243, 243, 243, 243, 244, 243, -261,
	526, 528, 529, 530, -260, 16, 120, 17, -123, 118,
	24, -465, -229, -229, -260, 243, 136, -100, 100, -100,
	83, 452, 204, -114, 234, -113, -114, -178, -156, 29,
	6, 7, 110, 35, 35, 82, 60, 35, -63, -62,
	-64, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 35, -399, 77, 188, -338, 512, 83,
	-412, -413, -149, 85, 85, 75, 355, 75, 78, 204,
	78, 75, -446, 365, 77, -446, 333, 365, 366, 267,
	331, 203, -446, -446, 333, -446, -446, -446, 352, -446,
	-446, 526, -446, -446, -446, 367, 368, -446, 524, 203,
	-446, -446, -446, -446, -446, 80, 27, -444, -418, 364,
	30, 429, 432, 539, 653, -55, 445, 446, -168, 27,
	-376, 144, 377, 378, 379, 380, 376, 355, 381, 382,
	383, 243, 384, 200, 526, 376, -6, -126, 78, -233,
	-465, 78, -200, -465, 83, -331, -330, -327, -328, -329,
	-326, 34, 200, -264, 272, -144, -146, -145, -147, 65,
	69, 71, 66, 67, 68, 527, 72, -274, 29, -136,
	-465, -125, -9, -135, -130, -465, -154, 123, -164, -274,
	-155, 73, 205, 74, 29, -156, -157, -158, -159, -160,
	6, 7, 55, -465, -465, -7, -8, 27, 28, -14,
	-7, -12, -14, 27, 28, 27, 28, -7, -230, 24,
	36, -179, 85, 88, -203, -212, -215, -122, -299, 59,
	-117, 27, 28, 66, 58, 64, 63, -226, 90, 16,
	-294, 100, 98, 99, 117, -293, 29, 83, 82, -289,
	188, -122, -170, 120, 101, 118, 119, 103, 130, 129,
	140, 133, 134, 135, 136, 137, 138, 139, 131, 132,
	143, 110, 111, 112, 113, 114, 115, 116, -259, -465,
	-137, -465, 188, -465, 188, 189, 190, 188, -176, -176,
	-176, -176, -176, -176, -176, 82, 82, 82, -465, 188,
	188, 188, -465, -465, -465, -465, -465, -195, -122, 653,
	-465, 200, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -206, -122, -465,
	-465, -469, -465, -469, -469, -189, -469, -465, -189, -189,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -189, -189, -189, -465, -258, -258, 16, -141, -142,
	-149, -152, -299, 78, -248, -253, 537, 539, 449, -252,
	-252, -298, -291, 82, 34, 144, -354, 110, 121, 35,
	188, -211, 79, 78, -306, -310, -312, -311, -313, -308,
	-309, -69, 490, 488, 484, 483, 486, 489, 144, 487,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 35, 227, 480, 481, 482, 664, 504, 505, 506,
	507, 508, 210, 509, 510, 511, 458, 485, 651, 459,
	460, 461, 462, 463, 464, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, -306, -306,
	-306, -306, -306, -290, -384, 83, -289, 77, -229, -267,
	-265, -265, -280, 209, -278, 83, 101, 83, -148, -291,
	-299, -161, -265, 266, -424, -423, -415, -418, 677, -265,
	-279, -415, 271, 269, 270, 78, 204, 78, 204, 80,
	-264, -291, -143, -149, 83, 83, -148, -161, -417, -415,
	-418, -162, -291, -299, -300, -299, -282, -287, -288, 678,
	196, 27, 192, 195, 100, 29, 31, 679, 254, 103,
	464, 144, 579, 580, 581, 498, 567, 21, 25, 215,
	104, 198, 483, 486, 213, 143, 208, 216, 311, 313,
	559, 595, 191, 71, 680, 550, 552, 547, 551, 312,
	549, 524, 674, 671, 673, 672, 477, 475, 310, 34,
	681, 15, 596, 32, 225, 261, 28, 682, 137, 473,
	193, 606, 252, 107, 108, 683, 47, 46, 8, 30,
	314, 226, 95, 320, 597, 474, 684, 685, 24, 74,
	217, 16, 211, 242, 758, 686, 335, 18, 576, 126,
	19, 687, 668, 670, 669, 206, 205, 120, 201, 750,
	69, 259, 13, 688, 462, 467, 468, 469, 470, 471,
	463, 187, 97, 689, 690, 117, 325, 65, 583, 584,
	607, 51, 38, 247, 598, 599, 704, 600, 565, 324,
	691, 44, 43, 497, 501, 496, 323, 513, 67, 118,
	22, 553, 554, 36, 692, 693, 649, 235, 500, 461,
	495, 705, 694, 666, 139, 264, 72, 101, 385, 601,
	602, 93, 476, 762, 39, 75, 230, 381, 352, 48,
	98, 20, 260, 70, 40, 574, 123, 763, 604, 479,
	207, 239, 695, 539, 263, 696, 124, 605, 472, 706,
	219, 119, 454, 194, 326, 558, 363, 308, 220, 330,
	26, 337, 68, 697, 253, 125, 603, 199, 525, 665,
	11, 698, 569, 35, 224, 307, 460, 209, 699, 265,
	319, 309, 318, 700, 58, 701, 344, 49, 589, 588,
	587, 590, 760, 66, 562, 563, 677, 200, 45, 106,
	499, 459, 494, 204, 566, 240, 94, 315, 9, 50,
	37, 520, 14, 375, 73, 76, 555, 556, 557, 56,
	487, 484, 492, 593, 491, 592, 594, 210, 761, 105,
	17, 328, 575, 653, 540, 99, 675, 521, 14, 193,
	78, 82, -242, 83, -289, 82, -242, -241, -242, -241,
	243, -263, 82, -303, -122, -265, -265, -149, -149, -149,
	-149, -149, -149, -263, -263, -263, -263, -260, 16, -260,
	-263, -299, -299, -122, -176, -415, 551, 135, -263, -299,
	-101, -99, 218, -99, -101, 83, 83, 452, -92, -4,
	-18, -16, -17, -114, -9, 39, 29, 29, 83, -63,
	-63, 82, -63, 78, 110, -63, -178, 79, -195, -291,
	-397, 750, 78, -414, 29, 539, 540, 513, -448, 200,
	242, 239, 75, -448, -443, 372, -417, -416, -415, -446,
	-447, -291, -446, -446, -446, 526, -446, -446, -446, -446,
	-446, -446, -446, -446, -446, -421, 75, 78, 355, 75,
	16, 75, 204, -379, -381, 443, 444, 540, 541, 456,
	376, 376, 376, 376, 376, 376, -377, -141, 653, -377,
	-141, 204, 254, -134, 29, -232, -231, -292, -285, -286,
	-287, -288, 228, -291, -282, -472, -331, -328, -327, -329,
	486, 534, 143, 546, -149, -415, -162, -132, -132, -130,
	-132, 65, 65, 65, 70, 65, 70, 70, 65, 65,
	-145, -301, -274, 78, -466, -466, -466, -9, -465, -301,
	-164, -274, 201, 201, 201, 103, 16, 53, 27, 103,
	16, 53, 27, 103, 16, 53, 27, -119, -118, -121,
	135, -122, -299, -176, -243, 97, 14, 120, 78, 23,
	78, -228, 31, 32, 188, -177, 60, 85, 88, -243,
	78, -120, -149, -122, -122, -122, -193, 93, 101, 94,
	95, -293, 228, 135, -300, -292, -287, -285, -286, 349,
	232, -282, -176, -194, -200, -137, 89, 120, 118, 119,
	103, -176, -176, -176, -176, -176, -176, -176, -176, -176,
	-176, -176, -176, -176, -176, -176, -302, 83, 82, 144,
	83, -292, -118, -292, -175, 227, 480, 481, 93, -175,
	-291, -291, -107, 27, 28, -292, 527, -291, -292, -107,
	-107, -107, -107, -107, 78, -466, -118, -118, -118, -466,
	-122, -122, -118, -176, -118, -203, 82, -118, -203, 82,
	-118, -176, 565, 566, 567, -118, -118, -107, -204, -205,
	105, -203, -285, -288, 349, 232, -118, -466, 85, -182,
	-183, 656, 665, 666, 668, 671, 664, 663, 662, 660,
	659, 658, 661, 657, 675, 674, 673, 672, 670, 669,
	667, -182, -182, -184, 227, 482, 480, 481, -118, -119,
	-118, -118, -466, -466, -121, -118, -121, -118, -118, -121,
	-466, -466, -466, -118, -118, -118, -118, -118, -118, -118,
	-118, -118, -118, -118, -118, -466, 85, -151, 97, -149,
	-125, -149, -141, -467, 16, 76, -467, 78, 188, -251,
	-254, 78, 538, 540, 541, -248, -323, -324, 143, 75,
	96, 82, -122, -292, -300, -229, -375, -343, -344, -345,
	-346, -368, 216, -383, 207, 209, 211, 210, 50, -347,
	217, 201, 51, -307, -333, 519, 520, -315, 77, -314,
	77, -69, 484, 483, 486, -314, 484, 491, -314, 491,
	491, -314, -314, -314, 484, 77, 77, -315, -315, -315,
	-314, -335, 77, -335, 479, -336, 77, -336, -336, -336,
	-336, -307, -307, -307, -307, -307, -384, -122, -230, -291,
	-149, 203, 737, -331, 30, -331, -70, 254, 222, 188,
	77, -162, 257, 258, -419, 78, 34, -425, 332, 85,
	206, -149, 232, -149, -149, -415, -415, -421, -141, 75,
	78, 78, 188, 716, 716, -149, 78, 82, 83, 83,
	-178, -351, 16, 120, -263, -149, -178, -116, 228, 76,
	-469, -466, 454, 455, 83, -92, -176, 39, 39, -62,
	-175, -291, 79, -398, 205, 558, 82, -413, -301, 512,
	540, -449, 135, -291, -448, -449, -452, 653, 204, 79,
	78, -446, -448, 335, 78, -448, -417, -415, -378, -380,
	435, 437, 438, 436, 439, 440, 441, 442, 78, 110,
	110, 457, -382, 24, -377, 539, -377, 82, -176, -136,
	-466, 78, 188, -200, 35, -353, -354, -353, -353, -82,
	-390, -360, -80, -388, 123, 196, 193, 192, 268, 198,
	-326, 559, 251, 250, 284, 285, 74, 36, 197, 194,
	-72, -81, 231, 290, 236, 291, 195, 230, 292, 229,
	293, 653, 288, 757, 517, 609, 610, 643, 91, 613,
	248, 42, 201, 623, 616, 546, 619, 620, 377, 618,
	622, 212, 626, 625, 627, 629, 630, 631, 341, 634,
	635, 636, 249, 637, 638, 639, 366, 644, 9, -426,
	-425, -432, 75, -139, -138, 75, 76, -140, 75, -138,
	65, 65, 65, -236, 77, -301, -130, -466, -238, -291,
	-164, -301, -465, -465, -465, -176, -176, 120, -176, -176,
	120, -176, -176, 120, -466, 78, 188, 78, -240, 41,
	40, -291, 514, 726, 61, -179, -179, -215, -257, 24,
	16, 56, 56, -127, 16, -226, -226, 93, 94, 95,
	188, -465, -194, -176, -176, -176, -116, 100, -466, -466,
	-119, -118, -118, -118, -118, -118, -122, -466, -466, -466,
	78, 76, 29, -466, 76, 120, -466, 16, 16, -466,
	16, 16, -466, -466, 16, -176, -176, -176, -466, -466,
	-118, -207, -205, 107, -122, -466, -466, -466, -466, -466,
	78, 78, 16, 78, -466, -466, -466, -466, -216, 574,
	-216, -466, -466, -466, -466, -466, -466, -216, -216, -216,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -237, 123, -149, 35, -237, 76, -125,
	-125, -152, -299, 135, -253, -256, 542, 539, 545, 83,
	82, 144, 82, 188, -230, -359, -374, 78, -360, 757,
	517, 609, -326, 610, 643, 91, 613, 248, 42, 201,
	623, 616, 546, 619, 620, 377, 618, 622, 212, 626,
	625, 627, 629, 630, 631, 341, 634, 448, 635, 636,
	249, 637, 638, 639, 366, 644, 9, 653, 77, -352,
	-290, -383, 83, -284, 51, -347, -349, -347, -347, -347,
	-352, 83, -284, -352, 51, 719, 93, 101, -322, -324,
	144, -319, -320, -337, -340, -316, 29, 758, 522, 219,
	-346, 486, 534, 34, 75, 517, 207, 51, 50, 211,
	91, -334, 521, 85, 85, 585, -314, 491, -314, -314,
	-314, -314, -314, -341, 82, -341, 85, -335, 85, 79,
	-295, 76, -233, -149, 677, -71, 13, 14, 15, -291,
	-400, -401, -402, -291, 120, 259, 260, 75, -435, 363,
	-423, 333, 342, 100, 21, 653, -456, 101, 204, 204,
	-394, 220, 215, -149, -149, -415, -291, 75, 75, -242,
	-165, 17, 83, 83, -260, -263, -176, -418, 245, 246,
	-176, -176, -150, 97, -414, 204, 188, 188, -449, 204,
	354, -417, -291, -449, 352, 335, -449, -54, 205, 16,
	78, 110, 110, 110, 110, 110, 110, 110, 110, -381,
	77, 77, 386, 36, -231, -292, -353, 83, 82, 144,
	83, 82, 144, 82, -389, 78, -390, 196, 193, 284,
	285, -388, 21, -275, -347, -396, -395, -345, -346, 123,
	208, 216, 216, 213, -275, -347, 207, 217, 123, 216,
	213, -275, 201, -353, -275, 486, 143, 204, 38, 38,
	366, 123, 366, 123, -353, -275, 208, -347, -272, 216,
	-273, 204, 29, 289, 123, 123, 123, 123, 123, 123,
	123, 123, 294, 677, -353, -353, -353, -353, -353, -353,
	-353, -353, 615, 615, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -357, -453, 82,
	-463, 91, 272, 341, 83, -284, -282, 85, 87, 86,
	-353, -353, -438, 653, -163, 194, 278, 274, -122, 77,
	-122, -234, -291, -236, -466, 78, -164, -234, -234, -234,
	100, 204, -465, 100, 204, -465, 100, 204, -465, -274,
	-121, 135, -300, 82, 78, 82, 82, 515, 62, -149,
	-165, 606, -125, -120, 135, -292, -119, -116, 100, -176,
	-466, -466, -466, -466, -466, -466, -305, 144, 483, 486,
	227, 482, 475, 473, 472, 474, 502, 488, 519, 480,
	520, 664, -302, -305, -302, -176, -176, -176, -176, -176,
	-176, 16, 16, 16, 650, -211, 109, -122, 106, -176,
	-176, -176, -176, -291, -221, -465, -216, -216, -216, -216,
	-216, -216, -217, -216, -217, -217, -217, -217, -217, -217,
	-217, -217, -217, -217, -217, -172, -173, 35, -171, -9,
	-465, -174, -473, 56, 60, -465, -245, -250, -203, -285,
	-288, 228, -165, -125, -165, -165, 188, 539, 543, 544,
	-374, -353, -353, -353, 534, 486, 143, -353, -353, -353,
	-353, -353, 615, 615, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, 449, -353, -353, -353, -353, -353, -353, -357, -453,
	-353, -353, 677, -370, -369, 83, -289, 207, 50, -383,
	-352, -352, -352, -352, -352, -102, -290, 93, -465, 759,
	85, -149, 35, 83, 144, 82, -175, 134, -303, -167,
	-186, -465, 94, 95, 550, 551, 555, 552, 556, 557,
	570, 571, 572, 573, 547, 553, 554, 14, 51, 51,
	51, 82, 79, 79, 79, -314, 79, 78, 79, 78,
	79, 78, -169, 711, 712, 75, -291, 29, -233, 85,
	75, 79, 78, -306, -291, -291, -291, 274, -438, 338,
	-436, -434, 344, 345, 346, 347, 348, -418, 343, -425,
	340, 82, 83, 82, 676, 710, 731, 703, 30, -149,
	-415, -235, 77, -234, -235, -122, -178, -237, 200, -417,
	135, 135, -291, 204, -417, 352, -451, 653, 16, 16,
	352, 16, 387, -417, -380, 82, 82, 82, 85, 85,
	85, 85, 85, -141, -141, 82, 83, 82, 144, -359,
	-80, 196, 193, 284, 285, -361, -362, -365, -364, 124,
	624, 691, 77, -342, 83, -289, -265, -268, 209, 207,
	-465, 83, -290, -290, -290, -264, 51, 51, -238, -290,
	-290, -291, -290, 34, 281, 282, 283, 83, 35, -353,
	486, -238, 27, -238, 27, 34, 338, 286, 287, -342,
	-290, -291, -149, 217, 213, -290, -238, 27, 85, -238,
	-291, -238, 27, -238, 27, -238, 27, -238, 27, 645,
	-357, -122, -357, -463, -463, 82, 82, 82, -353, -353,
	-104, 646, 218, -463, 82, -104, -463, -453, 82, -103,
	218, 221, 223, -357, -357, -357, -463, -463, -463, -463,
	82, -358, 34, 617, 478, 612, 633, 611, 83, 93,
	82, 82, -463, 34, -463, 34, -463, -357, 640, -463,
	-465, -439, -437, 356, 357, 358, 359, -431, 250, 251,
	204, 279, 101, -428, 756, 275, -234, 79, 78, -154,
	-291, -466, -466, -466, -176, -176, -176, -176, -176, -176,
	-176, -176, -176, -301, 188, 529, -291, -321, -322, -208,
	18, -226, -466, -176, -217, -217, -217, -217, -217, -466,
	-315, -315, -315, -315, -336, 479, -315, 463, -315, 463,
	-466, -466, -466, -466, 24, 24, 24, 24, -466, -176,
	-176, -176, -465, -115, 569, -122, 78, 78, -466, -466,
	-296, 83, -244, 75, -244, -245, -274, -9, -466, -232,
	-174, -465, 11, 56, 60, 653, 200, -198, -201, -472,
	-238, -165, 78, -354, -354, -354, -354, -211, -165, -357,
	-357, -357, -353, 35, -353, -463, -463, 82, 82, 82,
	-353, -353, -104, -463, 82, -104, -463, -453, 82, -103,
	-357, -357, -357, -463, -463, -463, -463, 82, -358, 83,
	93, 82, 82, -463, 34, -463, 34, -463, -357, 640,
	-463, -465, 645, 79, 78, -315, -315, 51, -349, 77,
	-176, 29, 77, 83, 144, 82, -175, 82, -176, -192,
	82, 85, 85, -149, -225, 29, -456, -149, -403, -404,
	-405, 91, 652, 101, 261, 262, 218, 263, 264, 265,
	-402, -306, -306, -306, -428, -441, -442, -440, 341, 361,
	362, 349, 100, 82, 82, 82, -427, 332, 100, 341,
	21, 29, 21, 29, 82, 82, 82, 82, 85, 76,
	-234, -263, -321, -149, -451, -417, -451, 335, -417, -417,
	16, -417, 331, -54, 79, 79, -366, 632, -465, 529,
	621, 51, -342, -213, 221, 222, -306, -306, -352, -349,
	51, -385, -387, 123, -291, -290, 711, 712, 711, 712,
	35, 193, 749, 719, -342, -353, -302, 35, 366, 366,
	366, 366, -213, -273, 204, 51, -290, 204, 366, 366,
	97, 653, 82, 82, 614, 628, -454, -453, -437, 85,
	85, 85, 85, -318, 91, 75, -162, 279, -432, 75,
	-181, -175, -186, -175, 79, -291, 78, 78, 78, 135,
	-465, -406, -261, -209, 19, 21, -321, 83, -321, 83,
	-176, -176, -176, -176, -466, -466, -466, -176, -466, 82,
	-176, -176, -197, 123, -239, 26, 33, -239, -244, -301,
	-466, -174, -465, -466, -466, 78, -200, -465, -466, -211,
	-250, -122, -122, -122, -122, -229, -302, -353, -325, -453,
	82, 82, 82, 614, 628, -454, -372, -371, 76, 212,
	91, 618, 636, 749, 719, -369, -228, -228, -352, -352,
	-234, -466, -465, -234, -466, 79, 79, 77, -227, -225,
	24, -226, -405, 82, 265, 261, 265, 265, 265, 265,
	266, -432, -422, 91, 339, -440, 350, 717, 334, 363,
	85, 85, 122, 36, 37, -434, 21, 653, -425, 340,
	82, 82, 340, 82, 82, 332, -456, 42, 79, -406,
	-450, 29, -451, -450, 352, -54, -54, -417, -54, -363,
	641, 85, -176, -465, -465, -277, 268, 79, 83, -307,
	-307, -295, -265, -352, -466, 78, -291, 34, 34, -213,
	-302, -302, -290, -291, -290, 204, -290, -465, 200, 78,
	-466, 329, 82, 368, -163, -433, -183, -176, -176, -176,
	-458, -459, -292, 724, -407, 44, -410, 45, -219, 575,
	-210, -122, -196, -124, -122, -466, -466, -466, -466, -112,
	120, 653, -466, -466, -211, 21, -117, 51, -239, -236,
	-174, -9, -465, -201, -466, -229, -302, -466, -371, -453,
	-353, 82, -353, -353, 79, -332, 761, 760, -176, 79,
	-370, -9, -227, 252, -227, 42, 42, 257, 258, -431,
	82, 82, 34, 351, 187, 34, 85, 187, 577, 340,
	82, 83, 341, 341, 21, -176, -407, -415, -450, -54,
	-386, -465, 21, -466, -234, -176, -465, 110, 77, -352,
	77, -387, 56, -176, 143, 143, 204, -290, -385, -149,
	-453, -225, -431, 133, -429, 276, -466, -466, -466, -466,
	78, -306, 24, 82, 608, -408, -409, -339, 48, 21,
	-218, -220, -291, 78, -466, 651, 72, 654, -222, 125,
	124, -195, 14, -9, 85, 82, 82, 219, -466, 79,
	-225, -9, 253, -27, -4, -16, -17, -18, -19, -21,
	-73, -22, -23, -28, -29, -24, -83, -87, -88, -89,
	-85, -96, -94, -95, -91, -90, -32, -34, -35, -37,
	-40, -41, -38, -39, -36, -30, -33, -42, -25, -43,
	-44, -45, -50, -51, -31, -52, -46, 104, 206, 448,
	310, 321, 322, 323, 83, 326, 328, 324, 325, 320,
	330, 447, -318, 85, 34, 85, 34, 353, 341, 29,
	85, -317, 205, 653, -385, -364, -466, -466, -234, 85,
	-370, -295, -370, 237, -353, -302, -290, -466, -72, 653,
	-27, -318, 187, -430, 277, -181, -466, -459, -460, 608,
	30, 730, 529, 82, 49, 45, -411, 46, 47, 82,
	78, 29, -124, 62, 652, 655, -466, -223, 103, -224,
	122, 577, -180, 85, 187, -223, -245, -466, -149, -332,
	-373, -372, -281, 653, -225, -214, 255, 256, -225, -122,
	-57, -58, 105, -122, 83, -67, -297, 313, 314, 315,
	-292, 83, 83, -56, -27, 81, -56, -122, 83, 83,
	-468, 16, 59, -176, 109, -56, 329, 660, 660, 82,
	-236, 85, 333, -466, 621, 51, -466, 79, 77, 79,
	238, -302, 289, -225, 329, -175, -181, -433, -274, 82,
	608, -465, 529, 21, 21, 21, 21, -220, -221, 62,
	-224, 127, 128, 253, 127, 128, -175, 77, 213, 280,
	512, -281, -225, 83, 83, -57, 109, 107, -58, -122,
	106, 311, 312, 316, -306, 78, 764, 447, 323, 326,
	328, 764, 329, 83, 16, 764, -225, -246, 35, 44,
	125, 34, 338, 27, -418, -465, -277, -373, -370, -373,
	-465, -225, -183, -433, -301, -461, -462, 378, 93, 34,
	82, -458, -465, 82, 82, 82, 82, 653, 100, -182,
	-234, 352, 213, 213, -227, 109, 107, 104, -56, 106,
	-56, 24, 24, 24, -321, -292, 109, -27, 109, -56,
	-56, -56, -122, 327, -56, 97, 109, -27, -245, 8,
	-176, -465, 79, -176, 235, -27, -462, 93, 34, -461,
	93, 34, 75, 75, -175, -466, -458, 654, -224, 79,
	352, 352, -20, -26, -19, -25, -16, -17, -18, 447,
	653, 104, -56, 764, -56, 764, -68, 85, -9, -66,
	-65, 85, -68, 318, 101, 319, 83, -323, 323, 83,
	764, 764, 764, 329, -122, 764, -61, 83, -225, -418,
	-466, -176, -373, -466, -466, -225, 75, -175, 75, -175,
	683, 378, 683, 378, 75, -466, 655, -392, -393, 75,
	-225, -56, 109, -128, 764, 109, 764, 109, 107, -59,
	-60, 108, -27, 78, 317, 34, 109, 109, 327, -56,
	109, 109, 78, -367, 642, -466, 75, 75, 378, 378,
	683, 378, -393, 75, -392, 75, 15, 14, 764, 109,
	104, 206, -56, 109, 107, -60, -122, -65, -176, 83,
	323, -122, 764, 326, 328, 83, 85, -367, 75, 75,
	-391, 220, 215, 218, 35, -391, 109, 104, 764, 206,
	-56, 106, 83, 109, 109, 378, 683, 214, 34, 93,
	109, 764, -56, 326, 328, 206, 109, 764, 83, 83,
	206,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1730, 1228, 1730, 0, 1228, 0, 1228, 0, -2,
	135, 933, 934, 935, 936, 0, 1812, 0, 0, 0,
	0, 0, -2, 1190, 1191, 1194, 1191, 1191, 1220, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 735, 0, 64, 0, 1334, 2763,
	-2, 1224, 1225, 1226, -2, -2, 0, 53, 0, 60,
	2, 1738, 0, 1241, 1230, 1738, 0, 0, 49, 0,
	0, 1228, 1228, 1228, 87, 88, 0, 121, 0, 123,
	0, 0, 1730, 1228, 0, 0, 0, 1816, 1816, 337,
	1816, 1816, 1831, 0, 1834, 335, 0, 1813, 1829, 1830,
	1832, 0, 0, 0, 0, 1814, 1814, 1814, 1814, 1814,
	1814, 1814, 1814, 1814, 0, 0, 1104, 1425, 1427, 1428,
	1429, 1430, 1843, 1844, 2754, 2755, 2756, 2757, 2758, 2759,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2760, 2761, 2762, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 0, 0,
	0, 1109, 1110, 1111, 1112, 1113, 2748, 2749, 2750, 2751,
	2752, 2753, 1122, 1123, 0, 0, 0, 1181, 0, 1181,
	1141, 1142, 0, 1144, 0, 0, 0, 0, 0, 0,
	0, 1178, 1156, 1159, 1163, 0, 1738, 1738, 1178, 1169,
	0, 787, 788, 789, 1186, 1187, 1175, 1188, 1193, 1192,
	1201, 1201, 0, 1192, 1222, -2, 1222, 1362, 0, 463,
	465, 0, 486, 0, 489, 492, 1431, 0, -2, -2,
	1854, 1207, 0, 0, 1880, 1881, 0, 0, 0, 0,
	0, 2620, 235, 351, 276, 276, 276, 276, 276, 276,
	276, 0, 276, 276, 0, 276, 276, 276, 2636, 276,
	0, 276, 276, 276, 276, 276, 234, 350, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 340, 341, 342,
	0, 0, 0, 739, 1195, 744, 742, 0, 736, 733,
	734, 0, 80, 0, 67, 81, 1763, 1384, 1385, 1386,
	1331, 0, 1335, -2, 0, 1814, 0, 1819, 69, 1321,
	1322, 1323, -2, 0, 0, 1329, 1330, -2, 1481, 1843,
	0, 0, 1235, 0, 0, 1232, 1238, 0, 1745, 0,
	0, 119, 1229, 47, 48, 2764, 59, 0, 0, 1257,
	1312, 0, 1440, 2316, 1446, -2, 2229, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 2174, 0, 0, 0, 0,
	0, 2271, 1519, 1520, 1521, 1522, 1523, 1524, 2483, 2701,
	2702, 1708, 1712, 1713, 1714, 1715, 1716, 1717, -2, -2,
	-2, 1691, 1692, 1706, 0, 2754, 2755, 2757, 2758, 2759,
	1781, 0, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 2297, 2361, 2248, 2366, 2193, 2760,
	2185, 2761, 2262, 2390, 2391, 2762, 2305, 2733, 0, -2,
	2415, 2353, -2, -2, -2, 1587, -2, -2, -2, 2744,
	2745, 2730, 2735, 2255, 2203, 2313, 2354, 2194, 2215, 2234,
	2283, 2284, 2286, 2318, 2319, 2337, 2346, 2365, 2175, 2176,
	2177, 2278, 2279, 2387, 2386, 2385, 2388, 2421, 2419, 2422,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2178, 2179, 2180, 2181, 2182, 2184, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2195, 2196, 2197, -2, 2202, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2213, 2214, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2230, 2231, 2233, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2249, 2250,
	2251, 2252, 2253, 2254, 2256, 2257, 2258, 2259, 2260, 2261,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2272, 2273,
	2274, 2275, 2276, 2277, 2280, 2281, 2282, 2285, 2287, 2288,
	2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2298, 2299,
	-2, -2, 2302, 2303, 2304, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2314, 2315, 2317, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2347,
	2348, 2349, 2350, 2351, 2352, 2355, 2356, 2357, 2358, 2359,
	2360, 2362, 2363, 2364, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2389, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2416, 2417, 2418, 2420, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 0, 1818, 1818, 0,
	106, 2703, 0, 1788, -2, -2, 1790, 0, 0, 0,
	-2, -2, -2, -2, 2186, -2, 1691, 0, 0, 0,
	0, 2174, 2175, 2176, 2177, 2183, 2185, 2193, 2194, 2198,
	2199, 2200, 2201, 2203, 2212, 2215, 2229, 2232, 2234, 2248,
	2255, 2262, 2271, 2278, 2279, 2283, 2284, 2286, 2297, 2300,
	2301, 2305, 2313, 2316, 2318, 2319, 2320, 2337, 2346, 2353,
	2354, 2361, 2365, 2366, 2385, 2386, 2387, 2388, 2390, 2391,
	2402, 2412, 2413, 2414, 2415, 2419, 2421, 2422, 122, 1730,
	0, 124, 0, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 813, 1837, 1838, 0, 1738, 1241, 1816, 1816,
	335, 0, 0, 0, 0, 0, 1816, 330, 0, 0,
	0, 0, 1816, 337, 0, 0, 1084, 0, 1085, 0,
	345, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1128, 1129, 1103, 0, 1105, 98, 1108, 0, 0,
	0, 0, 1126, 1127, 1130, 0, 1172, 1181, 1132, 0,
	0, 1816, 1816, 0, 0, 0, 0, 0, 1140, 0,
	815, 816, 1181, 1146, 1147, 1181, 1181, 1181, 1178, 0,
	1178, 1153, 1176, 1177, 1181, 0, 0, 0, 1158, 0,
	0, 0, 1166, 1167, 1181, 1171, 0, -2, 1199, -2,
	1208, 0, 0, 79, 1223, 1222, 0, 1227, 1363, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 488, 469,
	0, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 1362, 0, 0, 1849, 1855, 1212,
	1871, 1872, 0, 1882, 1883, 280, 0, 280, 0, 0,
	0, 0, 202, 276, 0, 204, 276, 276, 276, 0,
	276, 276, 211, 212, 276, 214, 215, 216, 276, 218,
	219, 276, 221, 222, 223, 276, 276, 226, 276, 276,
	229, 230, 231, 232, 233, 349, 0, 0, 0, 2620,
	1815, 0, 0, 0, 0, 740, 745, 746, 741, 743,
	712, 0, 0, 0, 0, 717, 718, 719, 720, 0,
	0, 723, 724, 729, 729, 0, 65, 66, 0, 0,
	0, 1334, 1332, 0, -2, 938, -2, 688, 689, 690,
	0, 685, 0, 0, 0, 0, 0, 0, 0, 1387,
	0, 0, 1390, 0, 0, 0, 0, 0, 1828, -2,
	0, 0, 0, 0, 1319, 0, 1336, 0, 1338, 0,
	-2, 0, 0, 0, 1828, 1342, 1343, 1344, 1345, 1346,
	0, 0, 0, 1483, 0, 57, 58, 1236, 1237, 54,
	62, 63, 55, 1233, 1234, 1239, 1240, 56, 73, 0,
	0, 1739, 1742, 1743, 1744, 1731, 1732, 1735, 0, 0,
	73, 1242, 1243, 1244, 1245, 1246, 1247, 0, 1231, 0,
	1258, 0, 0, 0, 0, 1313, 0, 1316, 1317, 1318,
	0, 1444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1447, 0,
	1461, 0, 0, 0, 0, 0, 0, 0, 1512, 1513,
	1514, 1515, 1516, 1517, 0, 1709, 1710, 1711, 1248, 0,
	0, 0, 1248, 1248, 1248, 1248, 1248, 0, 1487, 2428,
	0, 2393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 1683, 0,
	0, 1584, 0, 1585, 1586, 1588, 1602, 0, 1589, 1590,
	0, 0, 0, 0, 0, 1483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1597, 1598, 1599, 0, 0, 0, 0, 0, 0,
	98, 100, 1425, 0, 107, 109, 0, 0, 2703, 1791,
	1792, 679, 1806, 1807, 1808, 1809, 0, 776, 777, 1804,
	0, 1738, 830, 0, 560, 658, 578, 579, 580, 648,
	582, 650, 0, 650, 650, 1680, 1681, 650, 650, 650,
	624, 625, 626, 627, 628, 630, 631, 632, 633, 634,
	0, 0, 606, 648, 648, 648, 610, 637, 638, 639,
	640, 641, 650, 643, 644, 645, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 653, 653, 655, 655, 655, 655, 655, 560, 560,
	560, 560, 560, 0, 812, 1039, 1040, 0, 1745, 119,
	0, 0, 0, 0, 337, -2, 0, -2, 0, 1420,
	0, 0, 0, 0, 148, 373, 353, 133, 0, 0,
	331, 336, 332, 333, 334, 0, 0, 0, 0, 344,
	0, 0, 1092, 96, 1093, 1094, 1095, 1096, 1097, 346,
	1098, 1099, 375, 0, 1426, 1845, 1846, 1847, 1848, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 0, 0,
	0, 1114, 1116, 1120, 1121, 1115, 1117, 1124, 1118, 1125,
	1170, 1131, 1182, 0, 1184, 0, 0, 1362, 1136, 1137,
	1138, 1139, 817, 1145, 1148, 1149, 1155, 1181, 0, 1362,
	1154, 1179, 1180, 1157, 1475, 1160, 1600, 0, 1168, 1189,
	1205, 0, 1200, 0, 1206, 1210, 1209, 0, 1213, 1216,
	1217, 1218, 1219, 79, 1215, 0, 0, 0, 1221, 464,
	466, 468, 487, 0, 0, 490, 491, 493, 0, 1432,
	1851, 0, 0, 1874, 0, 1876, 1878, 0, 0, 281,
	282, 283, 280, 0, 236, 0, 298, 352, 0, 203,
	0, 278, 205, 206, 207, 276, 209, 210, 213, 217,
	220, 224, 225, 227, 228, 348, 280, 0, 0, 280,
	0, 0, 0, 738, 757, 0, 0, 1196, 1197, 0,
	713, 714, 715, 716, 731, 722, 725, 729, 0, 726,
	729, 0, 0, 82, 0, 0, 1765, 1768, 1769, 1770,
	1771, 1772, 1773, 1841, 1842, 0, 937, 691, 692, 693,
	0, 774, 774, 774, 684, 358, 385, 1380, 1382, 0,
	1377, 1388, 1389, 1391, 0, 1393, 0, 0, 1396, 1397,
	1398, 1366, 0, 0, 1328, 1480, 1482, 0, 0, 1434,
	1340, 0, 0, 0, 0, 0, 0, 0, 1356, 0,
	0, 0, 1357, 0, 0, 0, 1358, 0, 1484, 1485,
	1253, 1254, 0, 0, 45, 0, 1746, 0, 0, 0,
	0, 1734, 1736, 1737, 0, 0, 1719, 0, 0, 70,
	119, 119, 50, 1441, 1442, 1443, 1445, 1462, 0, 1464,
	1466, 1314, 1315, 1259, 0, 1693, -2, 1695, 1696, -2,
	-2, -2, 1452, 1453, 1477, 1478, 1479, 0, 0, 0,
	0, 1475, 1457, 0, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1511, 1615, 1616, 1617,
	0, 1704, 0, 1705, 1509, 0, 0, 0, 1718, 1510,
	1699, 1518, 1483, 1249, 1250, 1702, 1703, 1700, 1701, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 1559,
	0, 0, 0, 0, 0, 1493, 1708, 0, 1493, 1708,
	0, 0, 2287, 2400, 2179, 0, 0, 0, 1689, 1686,
	0, 0, 0, 0, 2748, 2749, 0, 1601, 0, 0,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 0, 0, 0, 1285, 1286, 1287, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1595, 0, 102, 0, 1424,
	0, -2, 0, 0, 94, 95, 0, 0, 0, 1789,
	0, 0, 0, 112, 113, 108, 1793, 680, 0, -2,
	1800, 1708, 1802, 1693, 0, 1745, -2, 545, 546, 547,
	548, 0, 794, 803, 0, 0, 792, 0, 794, 794,
	0, 790, 791, 551, 661, 659, 660, 581, 0, 611,
	0, 650, 650, 1680, 1681, 613, 650, 650, 616, 650,
	650, 619, 622, 623, 629, 0, 0, 607, 608, 609,
	642, 598, 0, 599, 653, 601, 0, 602, 603, 604,
	605, 552, 553, 554, 555, 556, 811, 0, 300, 1835,
	1763, 0, 0, 128, 1817, 129, 0, 396, 397, 0,
	302, 0, 338, 339, 150, 0, 0, 354, 0, 139,
	0, 540, 541, 0, 1086, 0, 1088, 343, 1100, 0,
	0, 0, 0, 0, 0, 99, 0, 1183, 1133, 1134,
	1135, 1438, 0, 0, 1150, 1178, 1181, 1173, 0, 0,
	1161, 0, 1204, 1202, 1211, 1214, 1359, 0, 0, 470,
	471, 472, 494, 0, 1852, 1853, 1850, 1873, 0, 1877,
	1879, 0, 284, 286, 0, 0, 192, 0, 0, 277,
	0, 208, 0, 0, 0, 0, 194, 0, 737, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1198, 721, 0, 727, 0, 728, 710, 711, 83,
	1764, 0, 0, 1333, 774, 0, 775, 0, 0, 1047,
	940, 941, 942, 1049, 0, -2, 1045, 1045, 774, 1045,
	0, 0, 0, 0, 0, 0, 979, 774, 1045, 1823,
	0, 992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1037, 1038, 774, 774, 774, 774, 774, 774, 774,
	774, 0, 0, 774, 774, 774, 774, 774, 774, 774,
	774, 774, 774, 774, 774, 774, 774, 774, 774, 774,
	774, 774, 774, 774, 774, 774, 0, 774, 774, 160,
	359, 1082, 0, 1374, 1381, 0, 0, 1375, 0, 1376,
	1392, 1394, 1395, 1324, 0, 1366, 1320, -2, 0, 1370,
	1339, 1434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 0, 74, 2496,
	0, 77, 0, 1748, 0, 1740, 1741, 1733, 0, 1810,
	1811, 1720, 1721, 1438, 0, 0, 1251, 1463, 1465, 1467,
	0, 1483, 1454, 1475, 1458, 0, 1455, 0, 1449, 1557,
	0, 0, 0, 0, 0, 0, 1488, 1555, 1556, 1558,
	0, 0, 0, 1562, 0, 0, 1566, 0, 0, 1608,
	0, 0, 1609, 1571, 0, 0, 0, 0, 0, 1577,
	1730, 0, 1687, 0, 0, 1580, 1581, 1582, 1583, 1603,
	0, 0, 0, 0, 1604, 1605, 1606, 1607, 1544, 0,
	1545, 0, 0, 0, 0, 0, 0, 1552, 1553, 1554,
	1268, 1268, 1268, 1268, 1268, 1268, 1268, 1268, 1268, 1268,
	1268, 1268, 1596, 0, 0, 1423, 0, 1438, 0, 1438,
	1438, 101, 0, 1433, 110, 111, 0, 0, 117, 681,
	682, 683, 1801, 0, 301, 542, 831, 684, 908, 774,
	774, 774, 0, 774, 774, 774, 774, 774, 0, 0,
	774, 774, 774, 774, 774, 774, 774, 774, 774, 774,
	774, 774, 774, 774, 774, 774, 774, 0, 774, 774,
	774, 774, 774, 774, 0, 774, 774, 0, 0, 0,
	0, 802, -2, -2, 794, 794, 794, 793, 794, 794,
	785, 795, 796, 786, 809, 561, 562, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 670, 0, 705, 707, 0,
	0, 577, 662, 0, 0, 0, 612, 650, 620, 614,
	615, 617, 618, 0, 646, 0, 0, 600, 0, 827,
	0, 0, 0, 1763, 0, 0, 398, 399, 400, 1421,
	0, 303, 304, 0, 0, 0, 0, 0, 160, 0,
	374, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	1090, 1101, 1102, 1091, 97, 347, 376, 0, 0, 1119,
	1143, 0, 818, 819, 1362, 1152, 1476, 1162, 1164, 1165,
	1360, 1361, 102, 0, 1875, 0, 0, 0, 0, 0,
	0, 296, 279, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 758,
	0, 0, 0, 730, 1766, 1767, 0, 697, 698, 699,
	700, 701, 702, 703, 907, 684, 1048, 0, 0, 0,
	0, 1050, 915, 0, 1816, 0, 0, 949, 950, 0,
	1046, 929, 0, 0, 0, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 774, 0, 971, 972,
	973, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1826, 991, 0, 0, 0, 0, 0, 0,
	0, 0, 1071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 774, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1030, 1031, 888,
	889, 890, 891, 892, 904, 905, 906, 893, 894, 895,
	0, 0, 1041, 0, 388, 0, 0, 0, 1378, 0,
	1383, 0, 1368, 1325, -2, 0, 1341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1486, 1255, 0, 0, 0, 75, 671, 1747, 1749, 46,
	1722, 71, 72, 119, 1260, 1707, 0, 1456, 0, 1459,
	1525, 1268, 1268, 1268, 1268, 1268, 0, 648, 648, 648,
	1665, 648, 655, 1668, 1670, 1671, 1672, 648, 1674, 648,
	1677, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 1579, 1690, 0, 0,
	0, 0, 0, 1261, 1262, 1264, 1546, 1547, 1548, 1549,
	1550, 1551, 1529, 1269, 1530, 1531, 1533, 1534, 1536, 1537,
	1538, 1539, 1541, 1542, 1543, 1774, 1774, 0, -2, 1755,
	0, 1752, 1334, 1761, 1762, 0, 1438, 1782, 0, 0,
	0, 0, 1730, 1438, 92, 93, 0, 114, 115, 116,
	832, 0, 0, 0, 774, 0, 774, 0, 0, 0,
	0, 0, 774, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 0, 0, 0, 0, 0, 0, 874, 875,
	0, 0, 0, 0, 797, 648, 648, 0, 792, 801,
	778, 780, 781, 782, 784, 0, 810, 563, 0, 0,
	574, 0, 0, 676, 677, 678, 663, 0, 0, 666,
	667, 0, 1450, 1451, 1600, 1600, 1600, 1600, 1600, 1600,
	0, 0, 0, 0, 1600, 1600, 1600, 0, 704, 706,
	708, 709, 649, 651, 652, 621, 635, 0, 636, 0,
	656, 0, 814, 828, 829, 0, 1836, 118, 0, 139,
	0, 310, 0, 306, 0, 0, 0, 0, 168, 151,
	152, 153, 155, 156, 0, 0, 0, 149, 0, 356,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 1087,
	1089, 0, 0, 1365, 1107, 1439, 1181, 671, 0, 296,
	285, 287, 288, 0, 296, 299, 193, 0, 0, 0,
	0, 0, 0, 194, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 0, 0, 732, 694, 695, 696, 939,
	943, -2, 1045, 0, 0, 921, 910, 0, 0, 919,
	920, 916, 0, 1042, 0, 0, 794, 792, 1831, 0,
	0, -2, 951, 952, 975, 0, 977, 0, 1052, 0,
	0, 0, 0, 957, 958, 959, 960, 0, 774, 0,
	0, 0, 0, 0, 0, 980, 981, 982, 983, 1042,
	0, 0, 987, 0, 0, 0, 0, 0, 1059, 0,
	0, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1036,
	993, 994, 995, 996, 997, 998, 999, 1000, 0, 0,
	1003, 884, 885, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	881, 882, 883, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 896, 897, 898, 899, 900, 901, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 0, 1034,
	0, 161, 162, 0, 0, 0, 0, 392, 389, 390,
	0, 386, 0, 385, 0, 0, 0, 1367, 0, 1337,
	1371, 1435, 1436, 1437, 1347, 1348, 0, 1350, 1351, 0,
	1353, 1354, 0, 1373, 0, 0, 78, 1864, 672, 1727,
	0, 1252, 1526, 1460, 1528, 1532, 1527, 1535, 1540, 1560,
	1660, 671, 671, 1666, 1667, 1669, 1673, 1675, 1676, 1678,
	1564, 1561, 1563, 1565, 0, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 0, 1688, 0, 0, 1593, 1594,
	1266, 1265, 104, 0, 104, 1774, 0, 0, 0, 0,
	0, 0, -2, -2, -2, 2158, 2122, 1759, 1776, 0,
	0, 1730, 0, 0, 0, 0, 0, 1738, 91, 833,
	834, 835, 0, 774, 0, 838, 839, 841, 842, 843,
	0, 0, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 0,
	878, 0, 880, 762, 0, 1735, 1735, 794, 794, 0,
	0, 0, 0, 673, 674, 675, 664, 665, 0, 669,
	647, 0, 0, 0, 120, 118, 138, 0, 119, 311,
	312, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	305, 307, 308, 309, 385, 186, 169, 170, 0, 0,
	0, 0, 0, 157, 158, 159, 355, 0, 0, 360,
	0, 0, 0, 0, 140, 141, 0, 143, 139, 0,
	0, 1151, 1864, 1422, 289, 296, 289, 0, 194, 194,
	0, 194, 195, 201, 759, 760, 923, 0, 0, 0,
	0, 917, 0, 945, 1043, 0, 560, 560, 1835, 1816,
	794, 0, 1074, 0, 976, 978, 953, 955, 954, 956,
	0, 0, 963, 964, 1042, 0, 968, 0, 1053, 1054,
	1055, 1056, 984, 0, 0, 0, 0, 0, 1057, 1058,
	0, 0, 1001, 1002, 1032, 1033, 0, 902, 163, 164,
	165, 166, 167, 1078, 0, 0, 1083, 387, 1082, 0,
	379, 394, 395, 0, 1379, 1369, 0, 0, 0, 1256,
	0, 1866, 1860, 1280, 0, 0, 1661, 1662, 1663, 1664,
	0, 0, 0, 0, 1573, 1574, 1575, 1610, 1578, 1685,
	0, 0, 1730, 0, 84, 119, 0, 85, 104, 1366,
	-2, 1753, 0, 0, 1760, 1334, 1778, 0, 103, 1738,
	1783, 1784, 1785, 1786, 1787, 90, 836, 0, 840, 886,
	887, 844, 845, 876, 877, 0, 761, 765, 0, 774,
	0, 774, 774, 772, 773, 798, 799, 800, 779, 783,
	0, 557, 0, 0, 668, 654, 657, 0, 0, 120,
	0, 120, 313, 314, 315, 316, 318, 319, 0, 0,
	0, 388, 132, 0, 0, 171, 0, 0, 0, 0,
	181, 182, 183, 184, 185, 154, 0, 0, 357, 0,
	366, 368, 0, 367, 369, 0, 137, 0, 1364, 1866,
	189, 0, 289, 191, 297, 196, 198, 194, 197, 1072,
	0, 922, 0, 0, 0, 0, 0, 944, 1044, 549,
	550, 0, 794, 0, 1051, 0, 0, 0, 962, 965,
	966, 969, 985, 986, 0, 0, 990, 0, 0, 0,
	1035, 118, 393, 391, 388, 377, 381, 0, 0, 0,
	0, 1400, 0, 2588, 76, 1868, -2, 0, 68, 0,
	1728, 1729, 1723, 1724, 1726, 1567, 1569, 1568, 1570, 0,
	0, 0, 1591, 1592, 1270, 0, 105, 0, 86, 1751,
	1754, 1756, 0, 1777, 1779, 89, 837, 879, 766, 767,
	0, 769, 0, 0, 0, 572, 558, 559, 0, 575,
	0, 118, 0, 0, 79, 320, 321, 322, 323, 392,
	187, 188, 172, 173, 0, 175, 176, 0, 0, 0,
	371, 0, 364, 365, 0, 1106, 1820, 290, 190, 199,
	909, 0, 915, 911, 0, 0, 0, 0, 0, 1835,
	0, 1075, 0, 961, 774, 0, 0, 989, 0, 1061,
	903, 79, 392, 0, 383, 0, 1349, 1352, 1355, 0,
	0, 0, 0, 0, 0, 1867, 1862, 0, 1859, 0,
	1281, 1282, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 1267, 0, 0, 768, 770, 771, 0, 557, 763,
	144, 118, 401, 118, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 0, 0, 0,
	0, 0, 0, 79, 0, 79, 0, 0, 0, 446,
	0, 79, 0, 0, 177, 0, 179, 180, 370, 0,
	142, 1366, 0, 0, 0, 0, 912, 913, 0, 918,
	0, 0, 0, 0, 0, 970, 988, 1060, 0, 1037,
	118, 1079, 0, 378, 0, 379, 1827, 1401, 1402, 0,
	0, 1403, 0, 0, 0, 0, 1865, 0, 0, 1861,
	0, 0, 1725, 1611, 0, 1614, 1263, 1271, 0, 1274,
	0, 0, 0, 1310, 0, 1272, 1775, -2, 0, 573,
	125, 764, 126, 0, 144, 118, 0, 0, 131, 0,
	0, 416, 0, 0, 1837, 0, 0, -2, -2, -2,
	1839, 443, 444, 0, 495, 0, 0, 0, 460, 461,
	0, 447, 0, 462, 324, 0, 118, 174, 178, 372,
	42, 0, 0, 1073, 0, 917, 914, 763, 0, 763,
	0, 967, 1062, 1080, 118, 0, 379, 382, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 1283, 1284, 1612,
	0, 1275, 1276, 1277, 1278, 1279, 0, 0, 0, 0,
	0, 127, 120, 402, 403, 0, 0, 79, 417, 0,
	79, 0, 0, 0, 671, 0, 79, 79, 79, 79,
	0, 79, 79, 0, 448, 79, 79, 44, 0, 1821,
	1822, 291, 292, 293, 295, 0, 0, 946, 0, 948,
	0, 79, 380, 384, 1399, 1407, 1408, 0, 0, 0,
	1415, 0, 0, 1869, 1870, 1863, 1857, 0, 0, 1311,
	0, 145, 0, 0, 79, 0, 79, 414, 0, 79,
	0, 0, 0, 0, 679, 1840, 0, 496, 325, 0,
	0, 0, 0, 0, 0, 0, 327, 118, 43, 0,
	0, 0, 763, 0, 2306, 118, 1409, 0, 0, 1410,
	0, 0, 0, 0, 0, 1404, 0, 0, 1273, 804,
	146, 147, 118, 404, 405, 406, 407, 408, 409, 79,
	0, 412, 0, 79, 0, 79, 426, 427, 428, 79,
	435, 437, 438, 439, 0, 441, 442, 430, 451, 326,
	79, 79, 79, 79, 0, 79, 445, 449, 134, 294,
	926, 0, 947, 1076, 1077, 1081, 0, 0, 0, 0,
	1411, 1412, 1416, 1418, 0, 1405, 1613, 805, 806, 0,
	130, 0, 411, 80, 79, 0, -2, 0, 79, 0,
	423, 0, 429, 0, 440, 0, 328, 0, 0, 0,
	0, 0, 0, 924, 0, 926, 0, 0, 0, 0,
	1417, 1419, 807, 0, 808, 0, 0, 0, 79, 0,
	415, 419, 0, 0, 79, 424, 0, 436, 431, 329,
	452, 0, 79, 454, 457, 450, 927, 925, 0, 0,
	820, 822, 823, 0, 0, 821, 410, 413, 79, 421,
	0, 79, 453, 0, 0, 1413, 1414, 824, 825, 826,
	0, 79, 0, 455, 458, 420, 0, -2, 456, 459,
	422,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 138, 130, 3,
	77, 79, 135, 133, 78, 134, 188, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 81, 764,
	111, 110, 112, 3, 80, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 106, 107,
	108, 109, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 131, 132,
	137, 139, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 58086, 763, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:619
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:625
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:647
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:659
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:706
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:733
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:769
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:785
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:795
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:814
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:828
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:836
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:840
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:844
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:857
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:865
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:900
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:912
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:938
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:964
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Returning:  yyDollar[10].val.(SelectExprs),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1010
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1028
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1051
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1064
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1077
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1106
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1131
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1135
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1140
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.val = yyDollar[2].val.(SelectExprs)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1154
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1161
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1170
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1180
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1211
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1216
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1245
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 125:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1255
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[8].val.(TableName)
			ddl := &DDL{
				Action:      AlterStr,
				Table:       tableName,
				IfNotExists: yyDollar[4].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      yyDollar[5].val.(ColIdent),
					Using:       yyDollar[6].val.(ColIdent),
					Type:        yyDollar[2].val.(string),
					Columns:     yyDollar[10].val.([]*IndexColumn),
					Options:     yyDollar[12].val.([]*IndexOption),
					ifNotExists: yyDollar[4].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[8].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 126:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1284
		{
			viewName := yyDollar[5].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[10].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[6].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[12].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				IfNotExists:               yyDollar[4].val.(int) != 0,
				SpecialCommentMode:        yyDollar[9].val.(bool),
				SubStatementPositionStart: yyDollar[8].val.(int),
				SubStatementPositionEnd:   yyDollar[11].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1305
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1344
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1362
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1386
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1408
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1440
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1455
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1489
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1501
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1514
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1528
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1550
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1560
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1571
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1575
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1579
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1588
		{
			yyVAL.val = []AccountName(nil)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1597
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1615
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1629
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1633
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1637
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1642
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1646
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1662
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1666
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1679
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1699
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1707
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1711
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1719
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1723
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1727
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1731
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1735
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1739
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1756
		{
			yyVAL.val = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1771
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1787
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1803
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1818
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1830
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1843
		{
			yyVAL.val = false
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.val = true
		}
	case 196:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1853
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 197:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1869
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 198:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1884
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 199:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1900
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1916
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 201:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1948
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1960
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1968
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1980
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1996
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2004
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2016
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2028
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2032
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2036
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2048
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2082
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.val = []string(nil)
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2132
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2147
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2169
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2186
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2190
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2194
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2198
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2202
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2206
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2210
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2215
		{
			yyVAL.val = false
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yyVAL.val = true
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2224
		{
			yyVAL.val = false
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yyVAL.val = true
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2235
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2248
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2280
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2297
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2301
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2341
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2345
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2349
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2353
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2363
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2367
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2376
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 328:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2384
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2395
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2399
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2405
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2409
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2413
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2418
		{
			yyVAL.val = ""
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2422
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2427
		{
			yyVAL.val = ""
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2435
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2455
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2477
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2483
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2491
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2523
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2527
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2531
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2535
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2540
		{
			yyVAL.val = &Authentication{}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.val = yyDollar[1].val
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2550
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2558
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2566
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2570
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2574
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2578
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2582
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2586
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2592
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2596
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2600
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2616
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2626
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2630
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2635
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2639
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2644
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2653
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2662
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2666
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2670
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2675
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.val = EventStatus_Enable
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.val = EventStatus_Disable
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2687
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.val = BeforeStr
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.val = AfterStr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.val = InsertStr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2726
		{
			yyVAL.val = UpdateStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.val = DeleteStr
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2735
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2743
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2760
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2770
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2774
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2778
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2782
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2798
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2804
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 420:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2809
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2814
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 422:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2820
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2838
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2844
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2848
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2852
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2856
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2860
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2867
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2913
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2939
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2944
		{
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2951
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2961
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2965
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2969
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2980
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 455:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2984
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 456:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2988
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2999
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 458:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3003
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 459:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3007
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3036
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3040
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3044
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3048
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3054
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3058
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3068
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3078
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3116
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.val = &Resignal{}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3138
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3142
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3146
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3154
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3160
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3176
		{
			yyVAL.val = Exprs(nil)
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3180
		{
			yyVAL.val = Exprs(nil)
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3184
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3200
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3248
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3275
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3305
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3337
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3354
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3367
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3378
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3411
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3434
		{
			yyVAL.val = BoolVal(false)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3438
		{
			yyVAL.val = BoolVal(false)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.val = BoolVal(true)
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3447
		{
			yyVAL.val = ColumnType{}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3455
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3477
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3487
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3498
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3520
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3542
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3553
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3564
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3575
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3598
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3609
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3622
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3634
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3654
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3658
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3662
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3666
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3674
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3682
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3708
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3722
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3729
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3743
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3757
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3766
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3770
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3792
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3804
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3820
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3824
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3828
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3832
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3836
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3860
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3884
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3889
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3915
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3919
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3938
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3943
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3947
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3952
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3956
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3969
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3981
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3987
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3995
		{
			yyVAL.val = BoolVal(false)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.val = BoolVal(false)
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = BoolVal(true)
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4008
		{
			yyVAL.val = BoolVal(false)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4012
		{
			yyVAL.val = BoolVal(true)
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4022
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4036
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4048
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4054
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.val = BoolVal(true)
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4065
		{
			yyVAL.val = ""
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4075
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4079
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4091
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4095
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4101
		{
			yyVAL.val = ""
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4111
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4115
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4124
		{
			yyVAL.val = false
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.val = true
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4133
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4143
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4159
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4169
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4173
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4181
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4185
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4189
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4195
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4199
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4203
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4209
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.val = colKeyPrimary
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.val = colKey
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4223
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.val = colKeyUnique
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4231
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4237
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4243
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4247
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4271
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4275
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4299
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4303
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4315
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4319
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4332
		{
			yyVAL.val = false
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yyVAL.val = true
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4337
		{
			yyVAL.val = ""
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4345
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4348
		{
			yyVAL.val = ""
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4354
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4364
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4374
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			yyVAL.val = false
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.val = true
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4408
		{
			yyVAL.bytes = nil
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4412
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4422
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4426
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4432
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4436
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4440
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4444
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4470
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4476
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4480
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4486
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4490
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4495
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4509
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4515
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4524
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4532
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4546
		{
			yyVAL.val = ""
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.val = ":="
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4568
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4572
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4576
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4580
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4584
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4588
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4605
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4634
		{
			yyVAL.val = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4643
		{
			yyVAL.val = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4661
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4667
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4671
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4677
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4685
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 804:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4691
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4695
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4699
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4703
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4707
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4712
		{
			yyVAL.bytes = []byte(nil)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4726
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4736
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4751
		{
			yyVAL.val = ""
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4755
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4759
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4771
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4777
		{
			yyVAL.val = Restrict
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4781
		{
			yyVAL.val = Cascade
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4785
		{
			yyVAL.val = NoAction
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = SetDefault
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = SetNull
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4798
		{
			yyVAL.val = true
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.val = true
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.val = false
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4811
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4815
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4819
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4837
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4841
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4853
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4865
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4869
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4873
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4877
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4881
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4893
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4901
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4917
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4925
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4929
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4933
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4937
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4941
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4945
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4949
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4953
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4965
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4969
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4973
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4977
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4981
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4985
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4989
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4993
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4997
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5001
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5005
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5009
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5033
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5037
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5053
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5057
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5102
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5106
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5116
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5120
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5131
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5141
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5154
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5161
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5170
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5178
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5188
		{
			yyVAL.val = false
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.val = true
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5197
		{
			yyVAL.val = ""
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5201
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5207
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5216
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5220
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5225
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 924:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5229
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 925:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5238
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5249
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5253
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5258
		{
			yyVAL.val = ""
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5262
		{
			yyVAL.val = ""
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5266
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5271
		{
			yyVAL.val = string("")
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5275
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5287
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5301
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5316
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5336
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5349
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5367
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5373
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5391
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 946:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5410
		{
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(yyDollar[4].val.(string)),
					Using:       yyDollar[5].val.(ColIdent),
					Columns:     yyDollar[7].val.([]*IndexColumn),
					Options:     yyDollar[9].val.([]*IndexOption),
					ifNotExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5429
		{
			idxName := yyDollar[6].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[5].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(idxName),
					Type:        yyDollar[3].val.(string),
					Using:       yyDollar[7].val.(ColIdent),
					Columns:     yyDollar[9].val.([]*IndexColumn),
					Options:     yyDollar[11].val.([]*IndexOption),
					ifNotExists: yyDollar[5].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5455
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5477
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5491
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5505
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5523
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5542
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5552
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5562
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5572
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5582
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5592
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5602
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5612
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5622
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5637
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5653
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5663
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5673
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5689
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5703
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5717
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5731
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5745
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5759
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5772
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5785
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5795
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5805
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5817
		{
			yyVAL.val = &DDL{
				Action:   AlterStr,
				IfExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5833
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5847
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5864
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5874
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5884
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5894
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5904
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5914
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			if len(ddl.TableSpec.Constraints) > 0 {
				ddl.ConstraintAction = AddStr
			}
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5934
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5947
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 988:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5976
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5997
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6018
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6037
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6047
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6059
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yyVAL.val = &DDL{Action: AlterStr, AlterCommentSpec: &AlterCommentSpec{Comment: string(yyDollar[3].bytes)}}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6083
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6091
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6095
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6103
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6115
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6123
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6139
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6147
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6183
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6191
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6195
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6199
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6203
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6207
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6211
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6215
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6219
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6223
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6227
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6231
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6237
		{
			yyVAL.val = true
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6241
		{
			yyVAL.val = false
		}
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6251
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6277
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6281
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6285
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6290
		{
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6292
		{
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6295
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6299
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6305
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6309
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6315
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6319
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6323
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6327
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6331
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6335
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6339
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6343
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6347
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1060:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6351
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6355
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1062:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6359
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6367
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6384
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6388
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6392
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6396
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6400
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6404
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6409
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6413
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6419
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6423
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6429
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1077:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6433
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6439
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6469
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1080:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6495
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6523
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6553
		{
			yyVAL.val = EventName{}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6557
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6563
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6567
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6579
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6603
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6619
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6623
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6629
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6654
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[6].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				IfExists: yyDollar[3].val.(int) != 0,
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6679
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6697
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6714
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6731
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6751
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6771
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6786
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6801
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6820
		{

		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6824
		{
			yyVAL.val = Restrict
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6828
		{
			yyVAL.val = Cascade
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6834
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6847
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6862
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1106:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6868
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6872
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6876
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6889
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6893
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6897
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6901
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6907
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6911
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6918
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6922
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6928
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6932
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6936
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6940
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6946
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6950
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6954
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6958
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6964
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6975
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6986
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6997
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7009
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7021
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7034
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7047
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7058
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7069
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7080
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7091
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7101
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7111
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7124
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7134
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7145
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7155
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7165
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7176
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7188
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7200
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7214
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7227
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7238
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7252
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7264
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7274
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7285
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7298
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7308
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7320
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7331
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7344
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7353
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7364
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7375
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7386
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7397
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7411
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7421
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7431
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7441
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7453
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7459
		{
			yyVAL.val = false
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7463
		{
			yyVAL.val = true
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7469
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7473
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7479
		{
			yyVAL.val = ""
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7483
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7487
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7493
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7497
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7501
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7505
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7511
		{
			yyVAL.val = ""
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7515
		{
			yyVAL.val = SessionStr
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7519
		{
			yyVAL.val = GlobalStr
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7525
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7537
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7550
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7562
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7566
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7572
		{
			yyVAL.val = &Begin{}
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7576
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7582
		{
			yyVAL.val = &Begin{}
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7586
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7590
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7594
		{
			yyVAL.val = &Begin{}
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7599
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7603
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7608
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7612
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7617
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7621
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7627
		{
			yyVAL.val = &Commit{}
		}
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7633
		{
			yyVAL.val = &Rollback{}
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7639
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7645
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7649
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7653
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7657
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7663
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7669
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7673
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7677
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7683
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7691
		{
			yyVAL.val = ""
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7695
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7700
		{
			yyVAL.val = false
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7704
		{
			yyVAL.val = true
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7716
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7736
		{
			setAllowComments(yylex, true)
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7740
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7748
		{
			yyVAL.val = Comments(nil)
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7752
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7758
		{
			yyVAL.val = UnionStr
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7762
		{
			yyVAL.val = UnionAllStr
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7766
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7772
		{
			yyVAL.val = IntersectStr
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7776
		{
			yyVAL.val = IntersectAllStr
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7780
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7786
		{
			yyVAL.val = ExceptStr
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7790
		{
			yyVAL.val = ExceptAllStr
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7794
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7799
		{
			yyVAL.val = QueryOpts{}
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7803
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7814
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7825
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7836
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7847
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7858
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7870
		{
			yyVAL.val = ""
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7874
		{
			yyVAL.val = AllStr
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7878
		{
			yyVAL.val = DistinctStr
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7884
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7892
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7903
		{
			yyVAL.val = &StarExpr{}
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7907
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7911
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7915
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7921
		{
			yyVAL.val = &StarExpr{}
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7925
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7929
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7933
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7939
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7943
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7949
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7954
		{
			yyVAL.val = ColIdent{}
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7957
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7962
		{
			yyVAL.val = Exprs(nil)
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7966
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7971
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7975
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7980
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7984
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7988
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7995
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8018
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8033
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8037
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8041
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8045
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8052
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8060
		{
			yyVAL.val = Window(nil)
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8063
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8069
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8072
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8078
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8118
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8122
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8127
		{
			yyVAL.val = ColIdent{}
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8131
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8135
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8139
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8145
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8149
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8153
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8159
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8163
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8173
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8177
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8192
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8207
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8213
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8219
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8227
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8233
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8237
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8242
		{
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8244
		{
		}
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8248
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8258
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8273
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8277
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8281
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8285
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8291
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8295
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8299
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8303
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8307
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8313
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8317
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8321
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8327
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8331
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8335
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8339
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1354:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8343
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8347
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8353
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8359
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8363
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8369
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8373
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8377
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8382
		{
			yyVAL.val = Expr(nil)
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8386
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8392
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8396
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8401
		{
			yyVAL.val = Columns(nil)
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8405
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8411
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8415
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8421
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8425
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8431
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8435
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8449
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8453
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8457
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8461
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8467
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8469
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8473
		{
			yyVAL.val = JoinCondition{}
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8475
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8479
		{
			yyVAL.val = JoinCondition{}
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8481
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8486
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8490
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8496
		{
			yyVAL.val = JoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8500
		{
			yyVAL.val = JoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8504
		{
			yyVAL.val = JoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8510
		{
			yyVAL.val = StraightJoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8516
		{
			yyVAL.val = LeftJoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8520
		{
			yyVAL.val = LeftJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8524
		{
			yyVAL.val = RightJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8528
		{
			yyVAL.val = RightJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8532
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8536
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8542
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8546
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1399:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8556
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8563
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8568
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8574
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8578
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8582
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1405:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8587
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8594
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8598
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8602
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8606
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8610
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8614
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8618
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8622
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1414:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8626
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8630
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8636
		{
			yyVAL.val = &NullVal{}
		}
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8640
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8646
		{
			yyVAL.val = &NullVal{}
		}
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8650
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8656
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8660
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8666
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8672
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8676
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8682
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8686
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8690
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8694
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8698
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8702
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8708
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8712
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8718
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8723
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8727
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8731
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8735
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8740
		{
			yyVAL.val = Expr(nil)
		}
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8744
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8750
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8754
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8758
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8762
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8766
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8770
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8774
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8778
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8784
		{
			yyVAL.val = ""
		}
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8788
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8794
		{
			yyVAL.val = BoolVal(true)
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8798
		{
			yyVAL.val = BoolVal(false)
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8804
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8808
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8812
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8816
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8820
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8824
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8828
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8832
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8836
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8840
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8846
		{
			yyVAL.val = IsNullStr
		}
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8850
		{
			yyVAL.val = IsNotNullStr
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8854
		{
			yyVAL.val = IsTrueStr
		}
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8858
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8862
		{
			yyVAL.val = IsFalseStr
		}
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8866
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8872
		{
			yyVAL.val = EqualStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8876
		{
			yyVAL.val = LessThanStr
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8880
		{
			yyVAL.val = GreaterThanStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = LessEqualStr
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8888
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8892
		{
			yyVAL.val = NotEqualStr
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8896
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8901
		{
			yyVAL.val = Expr(nil)
		}
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8905
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8911
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8915
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8919
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8925
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8931
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8935
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8940
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8947
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8951
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8957
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8961
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8967
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8971
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8975
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8979
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8983
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8987
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8991
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8995
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8999
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9003
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9007
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9011
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9015
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9019
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9023
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9027
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9031
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9035
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9039
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9043
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9047
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9051
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9055
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9059
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9063
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9067
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9075
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9089
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9093
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9097
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9117
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1526:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9121
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9131
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9135
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9139
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9143
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9147
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9151
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9155
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9159
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9163
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9167
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9171
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9175
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9179
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9183
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9187
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9191
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9195
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9204
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9208
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9212
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9216
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9220
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9224
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9228
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9232
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9236
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9240
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9244
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9255
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9259
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9263
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9267
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9271
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1560:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9275
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1561:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9279
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9283
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1563:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9287
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1564:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9291
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1565:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9295
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9299
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9303
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1568:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9307
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1569:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9311
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1570:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9315
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9319
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1572:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9323
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1573:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9327
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1574:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9331
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1575:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9335
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1576:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9339
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9343
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1578:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9347
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1579:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9351
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9355
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9359
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9364
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9368
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9379
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9383
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9387
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9392
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9396
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9400
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9404
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1591:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9408
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1592:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9412
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9416
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1594:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9420
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9428
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9432
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9436
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9440
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9444
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9457
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9461
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9471
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9475
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9479
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9483
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9487
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9491
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9497
		{
			yyVAL.val = ""
		}
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9501
		{
			yyVAL.val = BooleanModeStr
		}
	case 1612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9505
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1613:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9509
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9513
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9519
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9523
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9527
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9533
		{
			yyVAL.val = Armscii8Str
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9537
		{
			yyVAL.val = AsciiStr
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9541
		{
			yyVAL.val = Big5Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9545
		{
			yyVAL.val = UBinaryStr
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9549
		{
			yyVAL.val = Cp1250Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9553
		{
			yyVAL.val = Cp1251Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9557
		{
			yyVAL.val = Cp1256Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9561
		{
			yyVAL.val = Cp1257Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9565
		{
			yyVAL.val = Cp850Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9569
		{
			yyVAL.val = Cp852Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9573
		{
			yyVAL.val = Cp866Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9577
		{
			yyVAL.val = Cp932Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9581
		{
			yyVAL.val = Dec8Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9585
		{
			yyVAL.val = EucjpmsStr
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9589
		{
			yyVAL.val = EuckrStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9593
		{
			yyVAL.val = Gb18030Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9597
		{
			yyVAL.val = Gb2312Str
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9601
		{
			yyVAL.val = GbkStr
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9605
		{
			yyVAL.val = Geostd8Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9609
		{
			yyVAL.val = GreekStr
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9613
		{
			yyVAL.val = HebrewStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9617
		{
			yyVAL.val = Hp8Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9621
		{
			yyVAL.val = Keybcs2Str
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9625
		{
			yyVAL.val = Koi8rStr
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9629
		{
			yyVAL.val = Koi8uStr
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9633
		{
			yyVAL.val = Latin1Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9637
		{
			yyVAL.val = Latin2Str
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9641
		{
			yyVAL.val = Latin5Str
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9645
		{
			yyVAL.val = Latin7Str
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9649
		{
			yyVAL.val = MacceStr
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9653
		{
			yyVAL.val = MacromanStr
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9657
		{
			yyVAL.val = SjisStr
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9661
		{
			yyVAL.val = Swe7Str
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9665
		{
			yyVAL.val = Tis620Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9669
		{
			yyVAL.val = Ucs2Str
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9673
		{
			yyVAL.val = UjisStr
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9677
		{
			yyVAL.val = Utf16Str
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9681
		{
			yyVAL.val = Utf16leStr
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9685
		{
			yyVAL.val = Utf32Str
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9689
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9693
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9697
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9703
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9707
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9711
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9715
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9719
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9723
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9727
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9731
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9738
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9742
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9746
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9750
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9754
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9758
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9762
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9766
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9770
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9774
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9778
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9782
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9788
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9792
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9797
		{
			yyVAL.val = Expr(nil)
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9801
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9806
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9810
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9816
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9820
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9826
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9831
		{
			yyVAL.val = Expr(nil)
		}
	case 1690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9835
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9841
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9845
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9849
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9853
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9857
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9861
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9865
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9869
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9873
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9877
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9881
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9885
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9889
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9893
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9897
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9901
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9905
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9911
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9919
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9923
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9927
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9931
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9939
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9943
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9947
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9951
		{
			yyVAL.val = &NullVal{}
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9957
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9961
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9965
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9970
		{
			yyVAL.val = Exprs(nil)
		}
	case 1723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9974
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9980
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9984
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9990
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9995
		{
			yyVAL.val = Expr(nil)
		}
	case 1728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9999
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10005
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10010
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10014
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10020
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10024
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10030
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10035
		{
			yyVAL.val = AscScr
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10039
		{
			yyVAL.val = AscScr
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10043
		{
			yyVAL.val = DescScr
		}
	case 1738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10048
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10052
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10056
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10060
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10066
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10070
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10074
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10079
		{
			yyVAL.val = ""
		}
	case 1746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10083
		{
			yyVAL.val = ForUpdateStr
		}
	case 1747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10087
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10091
		{
			yyVAL.val = ForUpdateNowaitStr
		}
	case 1749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10095
		{
			yyVAL.val = ShareModeStr
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10101
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10105
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10125
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10129
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10134
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10141
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10145
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10149
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1758:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10154
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10161
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10165
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10174
		{
			yyVAL.val = Columns(nil)
		}
	case 1764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10178
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10184
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10188
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10194
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10198
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10202
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10206
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10210
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10214
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10218
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10223
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1775:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10227
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10233
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10237
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10243
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10247
		{
			yyVAL.val = ValTuple{}
		}
	case 1780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10253
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10259
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10269
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10273
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10279
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10282
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10286
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10290
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10296
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10300
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10306
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10317
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10330
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10343
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10349
		{
			yyVAL.val = SetScope_Global
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10353
		{
			yyVAL.val = SetScope_Session
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10359
		{
			yyVAL.val = SetScope_Session
		}
	case 1797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10363
		{
			yyVAL.val = SetScope_Persist
		}
	case 1798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10367
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10373
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10377
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10381
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10391
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10398
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10405
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10409
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10413
		{
			yyVAL.val = &Default{}
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10417
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10426
		{
			yyVAL.val = 0
		}
	case 1813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10428
		{
			yyVAL.val = 1
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10431
		{
			yyVAL.val = 0
		}
	case 1815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10433
		{
			yyVAL.val = 1
		}
	case 1816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10436
		{
			yyVAL.val = 0
		}
	case 1817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10438
		{
			yyVAL.val = 1
		}
	case 1818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10441
		{
			yyVAL.val = ""
		}
	case 1819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10443
		{
			yyVAL.val = IgnoreStr
		}
	case 1820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10446
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10448
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10450
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10453
		{
			yyVAL.val = struct{}{}
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10455
		{
			yyVAL.val = struct{}{}
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10459
		{
			yyVAL.val = struct{}{}
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10461
		{
			yyVAL.val = struct{}{}
		}
	case 1827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10464
		{
			yyVAL.val = struct{}{}
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10466
		{
			yyVAL.val = struct{}{}
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10470
		{
			yyVAL.val = UniqueStr
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10472
		{
			yyVAL.val = FulltextStr
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10474
		{
			yyVAL.val = SpatialStr
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10476
		{
			yyVAL.val = VectorStr
		}
	case 1833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10479
		{
			yyVAL.val = ""
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10481
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10484
		{
			yyVAL.val = ColIdent{}
		}
	case 1836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10486
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10490
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10494
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10500
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10504
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10511
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10517
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10521
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10528
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10532
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10536
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10541
		{
			yyVAL.val = string("")
		}
	case 1850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10543
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10546
		{
			yyVAL.val = string("")
		}
	case 1852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10548
		{
			yyVAL.val = IgnoreStr
		}
	case 1853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10550
		{
			yyVAL.val = ReplaceStr
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10553
		{
			yyVAL.val = BoolVal(false)
		}
	case 1855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10555
		{
			yyVAL.val = BoolVal(true)
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10558
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10562
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10567
		{
			yyVAL.val = BoolVal(false)
		}
	case 1859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10571
		{
			yyVAL.val = BoolVal(true)
		}
	case 1860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10576
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10580
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10585
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10589
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10597
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1865:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10601
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10606
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10610
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10615
		{
			yyVAL.val = &Lines{}
		}
	case 1869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10619
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10628
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10639
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10645
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10649
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10655
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10670
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10688
		{
			yyVAL.val = LockRead
		}
	case 1877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10692
		{
			yyVAL.val = LockReadLocal
		}
	case 1878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10696
		{
			yyVAL.val = LockWrite
		}
	case 1879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10700
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10706
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10712
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10723
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10733
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11664
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11673
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
