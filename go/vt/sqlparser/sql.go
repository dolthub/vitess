// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const FLUSH = 57468
const MODIFY = 57469
const CHANGE = 57470
const SCHEMA = 57471
const TABLE = 57472
const INDEX = 57473
const INDEXES = 57474
const VIEW = 57475
const TO = 57476
const IGNORE = 57477
const IF = 57478
const PRIMARY = 57479
const COLUMN = 57480
const SPATIAL = 57481
const FULLTEXT = 57482
const KEY_BLOCK_SIZE = 57483
const CHECK = 57484
const ACTION = 57485
const CASCADE = 57486
const CONSTRAINT = 57487
const FOREIGN = 57488
const NO = 57489
const REFERENCES = 57490
const RESTRICT = 57491
const FIRST = 57492
const AFTER = 57493
const SHOW = 57494
const DESCRIBE = 57495
const EXPLAIN = 57496
const DATE = 57497
const ESCAPE = 57498
const REPAIR = 57499
const OPTIMIZE = 57500
const TRUNCATE = 57501
const FORMAT = 57502
const MAXVALUE = 57503
const REORGANIZE = 57504
const LESS = 57505
const THAN = 57506
const PROCEDURE = 57507
const TRIGGER = 57508
const TRIGGERS = 57509
const FUNCTION = 57510
const STATUS = 57511
const VARIABLES = 57512
const WARNINGS = 57513
const ERRORS = 57514
const KILL = 57515
const CONNECTION = 57516
const SEQUENCE = 57517
const EACH = 57518
const ROW = 57519
const BEFORE = 57520
const FOLLOWS = 57521
const PRECEDES = 57522
const DEFINER = 57523
const INVOKER = 57524
const INOUT = 57525
const OUT = 57526
const DETERMINISTIC = 57527
const CONTAINS = 57528
const READS = 57529
const MODIFIES = 57530
const SQL = 57531
const SECURITY = 57532
const TEMPORARY = 57533
const CLASS_ORIGIN = 57534
const SUBCLASS_ORIGIN = 57535
const MESSAGE_TEXT = 57536
const MYSQL_ERRNO = 57537
const CONSTRAINT_CATALOG = 57538
const CONSTRAINT_SCHEMA = 57539
const CONSTRAINT_NAME = 57540
const CATALOG_NAME = 57541
const SCHEMA_NAME = 57542
const TABLE_NAME = 57543
const COLUMN_NAME = 57544
const CURSOR_NAME = 57545
const SIGNAL = 57546
const RESIGNAL = 57547
const SQLSTATE = 57548
const DECLARE = 57549
const CONDITION = 57550
const CURSOR = 57551
const CONTINUE = 57552
const EXIT = 57553
const UNDO = 57554
const HANDLER = 57555
const FOUND = 57556
const SQLWARNING = 57557
const SQLEXCEPTION = 57558
const USER = 57559
const IDENTIFIED = 57560
const ROLE = 57561
const REUSE = 57562
const GRANT = 57563
const GRANTS = 57564
const REVOKE = 57565
const NONE = 57566
const ATTRIBUTE = 57567
const RANDOM = 57568
const PASSWORD = 57569
const INITIAL = 57570
const AUTHENTICATION = 57571
const SSL = 57572
const X509 = 57573
const CIPHER = 57574
const ISSUER = 57575
const SUBJECT = 57576
const ACCOUNT = 57577
const EXPIRE = 57578
const NEVER = 57579
const DAY = 57580
const OPTION = 57581
const OPTIONAL = 57582
const EXCEPT = 57583
const ADMIN = 57584
const PRIVILEGES = 57585
const MAX_QUERIES_PER_HOUR = 57586
const MAX_UPDATES_PER_HOUR = 57587
const MAX_CONNECTIONS_PER_HOUR = 57588
const MAX_USER_CONNECTIONS = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const BEGIN = 57606
const START = 57607
const TRANSACTION = 57608
const COMMIT = 57609
const ROLLBACK = 57610
const SAVEPOINT = 57611
const WORK = 57612
const RELEASE = 57613
const BIT = 57614
const TINYINT = 57615
const SMALLINT = 57616
const MEDIUMINT = 57617
const INT = 57618
const INTEGER = 57619
const BIGINT = 57620
const INTNUM = 57621
const SERIAL = 57622
const REAL = 57623
const DOUBLE = 57624
const FLOAT_TYPE = 57625
const DECIMAL = 57626
const NUMERIC = 57627
const DEC = 57628
const FIXED = 57629
const PRECISION = 57630
const TIME = 57631
const TIMESTAMP = 57632
const DATETIME = 57633
const YEAR = 57634
const CHAR = 57635
const VARCHAR = 57636
const BOOL = 57637
const CHARACTER = 57638
const VARBINARY = 57639
const NCHAR = 57640
const NVARCHAR = 57641
const NATIONAL = 57642
const VARYING = 57643
const TEXT = 57644
const TINYTEXT = 57645
const MEDIUMTEXT = 57646
const LONGTEXT = 57647
const LONG = 57648
const BLOB = 57649
const TINYBLOB = 57650
const MEDIUMBLOB = 57651
const LONGBLOB = 57652
const JSON = 57653
const ENUM = 57654
const GEOMETRY = 57655
const POINT = 57656
const LINESTRING = 57657
const POLYGON = 57658
const GEOMETRYCOLLECTION = 57659
const MULTIPOINT = 57660
const MULTILINESTRING = 57661
const MULTIPOLYGON = 57662
const LOCAL = 57663
const LOW_PRIORITY = 57664
const NULLX = 57665
const AUTO_INCREMENT = 57666
const APPROXNUM = 57667
const SIGNED = 57668
const UNSIGNED = 57669
const ZEROFILL = 57670
const COLLATION = 57671
const DATABASES = 57672
const SCHEMAS = 57673
const TABLES = 57674
const FULL = 57675
const PROCESSLIST = 57676
const COLUMNS = 57677
const FIELDS = 57678
const ENGINES = 57679
const PLUGINS = 57680
const NAMES = 57681
const CHARSET = 57682
const GLOBAL = 57683
const SESSION = 57684
const ISOLATION = 57685
const LEVEL = 57686
const READ = 57687
const WRITE = 57688
const ONLY = 57689
const REPEATABLE = 57690
const COMMITTED = 57691
const UNCOMMITTED = 57692
const SERIALIZABLE = 57693
const CURRENT_TIMESTAMP = 57694
const DATABASE = 57695
const CURRENT_DATE = 57696
const CURRENT_USER = 57697
const CURRENT_TIME = 57698
const LOCALTIME = 57699
const LOCALTIMESTAMP = 57700
const UTC_DATE = 57701
const UTC_TIME = 57702
const UTC_TIMESTAMP = 57703
const REPLACE = 57704
const CONVERT = 57705
const CAST = 57706
const SUBSTR = 57707
const SUBSTRING = 57708
const TRIM = 57709
const LEADING = 57710
const TRAILING = 57711
const BOTH = 57712
const GROUP_CONCAT = 57713
const SEPARATOR = 57714
const TIMESTAMPADD = 57715
const TIMESTAMPDIFF = 57716
const OVER = 57717
const WINDOW = 57718
const GROUPING = 57719
const CURRENT = 57720
const AVG = 57721
const BIT_AND = 57722
const BIT_OR = 57723
const BIT_XOR = 57724
const COUNT = 57725
const JSON_ARRAYAGG = 57726
const JSON_OBJECTAGG = 57727
const MAX = 57728
const MIN = 57729
const STDDEV_POP = 57730
const STDDEV = 57731
const STD = 57732
const STDDEV_SAMP = 57733
const SUM = 57734
const VAR_POP = 57735
const VARIANCE = 57736
const VAR_SAMP = 57737
const CUME_DIST = 57738
const DENSE_RANK = 57739
const FIRST_VALUE = 57740
const LAG = 57741
const LAST_VALUE = 57742
const LEAD = 57743
const NTH_VALUE = 57744
const NTILE = 57745
const ROW_NUMBER = 57746
const PERCENT_RANK = 57747
const RANK = 57748
const MATCH = 57749
const AGAINST = 57750
const BOOLEAN = 57751
const LANGUAGE = 57752
const WITH = 57753
const QUERY = 57754
const EXPANSION = 57755
const UNUSED = 57756
const ARRAY = 57757
const DESCRIPTION = 57758
const EMPTY = 57759
const JSON_TABLE = 57760
const LATERAL = 57761
const MEMBER = 57762
const RECURSIVE = 57763
const ACTIVE = 57764
const BUCKETS = 57765
const CLONE = 57766
const COMPONENT = 57767
const DEFINITION = 57768
const ENFORCED = 57769
const EXCLUDE = 57770
const GEOMCOLLECTION = 57771
const GET_MASTER_PUBLIC_KEY = 57772
const HISTOGRAM = 57773
const HISTORY = 57774
const INACTIVE = 57775
const INVISIBLE = 57776
const LOCKED = 57777
const MASTER_COMPRESSION_ALGORITHMS = 57778
const MASTER_PUBLIC_KEY_PATH = 57779
const MASTER_TLS_CIPHERSUITES = 57780
const MASTER_ZSTD_COMPRESSION_LEVEL = 57781
const NESTED = 57782
const NETWORK_NAMESPACE = 57783
const NOWAIT = 57784
const NULLS = 57785
const OJ = 57786
const OLD = 57787
const ORDINALITY = 57788
const ORGANIZATION = 57789
const OTHERS = 57790
const PATH = 57791
const PERSIST = 57792
const PERSIST_ONLY = 57793
const PRIVILEGE_CHECKS_USER = 57794
const PROCESS = 57795
const REFERENCE = 57796
const REQUIRE_ROW_FORMAT = 57797
const RESOURCE = 57798
const RESPECT = 57799
const RESTART = 57800
const RETAIN = 57801
const SECONDARY = 57802
const SECONDARY_ENGINE = 57803
const SECONDARY_LOAD = 57804
const SECONDARY_UNLOAD = 57805
const SKIP = 57806
const SRID = 57807
const THREAD_PRIORITY = 57808
const TIES = 57809
const VCPU = 57810
const VISIBLE = 57811
const SYSTEM = 57812
const INFILE = 57813

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 1019,
	-1, 42,
	148, 1083,
	149, 1101,
	-2, 230,
	-1, 48,
	187, 653,
	188, 653,
	-2, 643,
	-1, 500,
	135, 1111,
	-2, 1105,
	-1, 501,
	135, 1112,
	-2, 1106,
	-1, 605,
	98, 1376,
	135, 1376,
	-2, 1067,
	-1, 606,
	98, 1490,
	135, 1490,
	-2, 1068,
	-1, 611,
	98, 1399,
	135, 1399,
	-2, 1069,
	-1, 612,
	98, 1445,
	135, 1445,
	-2, 1070,
	-1, 613,
	98, 1446,
	135, 1446,
	-2, 1071,
	-1, 614,
	98, 1329,
	135, 1329,
	-2, 1075,
	-1, 616,
	98, 1422,
	135, 1422,
	-2, 1077,
	-1, 1106,
	1, 751,
	5, 751,
	12, 751,
	13, 751,
	14, 751,
	15, 751,
	17, 751,
	19, 751,
	30, 751,
	31, 751,
	56, 751,
	57, 751,
	58, 751,
	59, 751,
	60, 751,
	62, 751,
	63, 751,
	66, 751,
	67, 751,
	69, 751,
	70, 751,
	394, 751,
	490, 751,
	-2, 781,
	-1, 1110,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1350,
	135, 1114,
	-2, 1110,
	-1, 1515,
	44, 502,
	-2, 1341,
	-1, 1519,
	68, 502,
	-2, 1291,
	-1, 1522,
	68, 498,
	72, 498,
	-2, 1213,
	-1, 1523,
	68, 499,
	72, 499,
	-2, 1223,
	-1, 1638,
	44, 545,
	155, 547,
	157, 545,
	158, 545,
	-2, 580,
	-1, 1708,
	5, 50,
	-2, 847,
	-1, 2007,
	69, 1267,
	70, 1267,
	135, 1267,
	-2, 684,
	-1, 2030,
	1, 802,
	5, 802,
	12, 802,
	13, 802,
	14, 802,
	15, 802,
	17, 802,
	19, 802,
	30, 802,
	31, 802,
	56, 802,
	57, 802,
	58, 802,
	59, 802,
	60, 802,
	62, 802,
	63, 802,
	66, 802,
	67, 802,
	69, 802,
	70, 802,
	394, 802,
	490, 802,
	-2, 781,
	-1, 2131,
	155, 548,
	-2, 546,
	-1, 2192,
	5, 50,
	-2, 1039,
	-1, 2392,
	41, 1121,
	-2, 1119,
	-1, 2527,
	5, 50,
	-2, 1042,
}

const yyPrivate = 57344

const yyLast = 32669

var yyAct = [...]int{
	563, 78, 2722, 2672, 814, 2544, 2696, 1567, 2686, 2530,
	2674, 2687, 2576, 407, 2509, 2543, 2445, 7, 1949, 2204,
	2569, 2444, 6, 2443, 5, 503, 2591, 2412, 2446, 8,
	2514, 2507, 2574, 2043, 2299, 2339, 2392, 2024, 1776, 1747,
	1565, 1057, 1231, 1141, 1932, 1923, 492, 2394, 630, 1474,
	1797, 1524, 2442, 3, 2092, 506, 2000, 2280, 562, 1468,
	1577, 2251, 2257, 1327, 2235, 1472, 2001, 390, 393, 2044,
	432, 432, 2531, 2125, 2219, 2116, 1931, 519, 485, 78,
	469, 1507, 81, 628, 846, 91, 104, 480, 1516, 1748,
	1857, 1997, 1556, 2009, 508, 2016, 1637, 830, 1661, 1506,
	1505, 1320, 1603, 1447, 1969, 1335, 1375, 1901, 1384, 1276,
	1451, 1249, 1211, 1840, 1495, 625, 1552, 2220, 959, 1458,
	1512, 1352, 1103, 607, 1121, 1102, 1439, 1106, 966, 896,
	1233, 484, 875, 1619, 1075, 624, 488, 603, 604, 979,
	1120, 479, 409, 801, 1540, 610, 410, 596, 599, 874,
	1281, 962, 83, 1112, 813, 1076, 2744, 425, 2740, 419,
	430, 413, 2730, 2712, 2710, 2691, 2667, 2599, 80, 1274,
	477, 2371, 2077, 67, 2229, 626, 402, 2703, 35, 2585,
	35, 2685, 420, 2525, 2655, 2384, 35, 2369, 1230, 85,
	86, 87, 88, 89, 2424, 1868, 2560, 504, 2089, 2584,
	1590, 2372, 994, 993, 1003, 1004, 996, 997, 998, 999,
	1000, 1001, 1002, 995, 1990, 35, 1005, 2487, 2510, 1942,
	35, 2324, 70, 38, 39, 1683, 2184, 1470, 970, 800,
	2236, 2039, 2040, 35, 1618, 70, 38, 39, 2238, 1742,
	79, 2524, 79, 803, 498, 806, 807, 58, 79, 501,
	1590, 834, 835, 76, 2038, 837, 1743, 40, 1492, 1493,
	1280, 1316, 1317, 436, 436, 620, 1785, 952, 1122, 1784,
	1123, 1491, 1786, 1297, 924, 482, 401, 79, 2580, 1277,
	850, 851, 79, 1278, 1279, 400, 932, 1823, 836, 412,
	411, 414, 2580, 404, 2575, 79, 125, 1526, 1617, 125,
	418, 893, 849, 1541, 2171, 125, 1970, 2169, 384, 436,
	1528, 1546, 2577, 1541, 2241, 435, 435, 422, 399, 2471,
	476, 426, 2694, 2697, 2693, 1553, 2577, 125, 70, 38,
	39, 928, 929, 1863, 107, 429, 1891, 2581, 125, 2680,
	2099, 2397, 125, 633, 1532, 1534, 125, 1533, 1972, 1528,
	40, 2581, 2239, 2240, 2242, 2243, 2244, 2115, 2550, 1896,
	125, 435, 1630, 633, 2252, 42, 72, 45, 44, 47,
	2308, 125, 2255, 2607, 2601, 856, 2600, 97, 2491, 2269,
	2276, 2472, 1631, 2370, 1308, 2253, 2254, 78, 78, 1261,
	2258, 2259, 2260, 2261, 2548, 1865, 1578, 48, 75, 74,
	859, 2267, 2481, 864, 46, 2700, 2364, 2596, 866, 2363,
	865, 2362, 578, 2361, 584, 586, 585, 582, 583, 581,
	580, 579, 2360, 908, 110, 415, 416, 417, 423, 1287,
	427, 428, 431, 587, 588, 939, 2358, 99, 940, 863,
	867, 96, 2594, 2595, 385, 2621, 2359, 109, 108, 56,
	57, 845, 2473, 2532, 857, 858, 1867, 1645, 1639, 1640,
	908, 1638, 2206, 1641, 1642, 906, 65, 847, 66, 848,
	850, 851, 2489, 948, 2388, 833, 394, 1974, 2366, 2477,
	2478, 956, 1978, 931, 1973, 2102, 1971, 2090, 2669, 105,
	1572, 1976, 1768, 2093, 2094, 2095, 2096, 2097, 1646, 106,
	1014, 391, 2440, 1016, 1975, 2678, 842, 2483, 2673, 2474,
	73, 111, 52, 53, 60, 2425, 61, 1571, 395, 1977,
	1979, 841, 2676, 2588, 2589, 101, 2683, 102, 2076, 1882,
	1883, 403, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	2117, 1830, 1055, 1555, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 2237, 1074, 1077,
	1077, 1077, 1083, 1077, 1077, 1083, 1077, 1083, 1092, 1093,
	1094, 1095, 1096, 1097, 71, 1107, 1280, 1015, 2385, 2578,
	1531, 77, 2663, 77, 1262, 2523, 125, 71, 1869, 77,
	1624, 1815, 1541, 2578, 1866, 860, 1056, 843, 844, 1278,
	1279, 908, 421, 2549, 945, 907, 1820, 1819, 2482, 918,
	941, 2093, 2094, 2095, 2096, 2097, 1858, 392, 77, 1282,
	2367, 2650, 2488, 77, 2387, 387, 947, 2726, 1816, 954,
	125, 805, 804, 392, 1101, 2101, 77, 392, 2438, 610,
	1644, 98, 2736, 1821, 610, 1808, 2675, 2677, 2281, 2282,
	392, 1809, 1859, 2047, 1284, 1113, 482, 1283, 1140, 1140,
	1140, 388, 1909, 1909, 1140, 1907, 1386, 1139, 2340, 1109,
	2130, 107, 983, 116, 112, 113, 2745, 114, 2742, 1802,
	71, 1920, 2342, 1134, 915, 2731, 2713, 2291, 802, 816,
	2493, 1200, 475, 2292, 1078, 1080, 1082, 1084, 1086, 1088,
	1089, 1091, 1802, 1802, 1477, 1479, 1890, 1125, 125, 118,
	117, 1887, 1126, 904, 1204, 1079, 1081, 1818, 1085, 1087,
	1138, 1090, 1871, 1111, 982, 1870, 1625, 1219, 1217, 861,
	1802, 1116, 1802, 1775, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 913, 1774, 1773, 1860, 1861, 798, 1587, 2156,
	1885, 951, 494, 1586, 1135, 808, 356, 1805, 1718, 2724,
	2341, 119, 2725, 120, 2723, 1715, 1017, 1018, 914, 2295,
	910, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 1801, 109, 108, 2148, 1889, 1888, 1915,
	1907, 1789, 432, 1478, 1912, 1781, 903, 1911, 1914, 1496,
	1678, 1213, 1666, 911, 912, 1199, 1801, 1801, 1651, 432,
	1919, 1330, 1133, 1907, 1916, 1118, 2290, 1140, 1232, 985,
	1908, 1909, 2486, 125, 125, 125, 826, 2066, 995, 1212,
	1005, 1005, 2111, 1487, 1801, 1259, 1801, 2622, 2623, 633,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 94, 2508, 1005, 1235, 2619, 2620, 909, 916,
	917, 919, 920, 921, 922, 923, 2306, 925, 926, 927,
	1926, 930, 2177, 933, 934, 935, 936, 937, 1257, 2296,
	2520, 2519, 2374, 1017, 1018, 1359, 2067, 1452, 1323, 432,
	1017, 1018, 976, 1477, 1479, 978, 1924, 115, 1604, 1250,
	1357, 1358, 1356, 2014, 1817, 1992, 1713, 1236, 1712, 978,
	832, 2013, 1269, 1272, 1131, 868, 2375, 977, 976, 1245,
	1246, 1247, 1248, 1306, 1594, 839, 977, 976, 1290, 78,
	809, 2653, 1214, 1440, 2729, 978, 852, 1206, 2592, 1253,
	2631, 1254, 2630, 1221, 978, 994, 993, 1003, 1004, 996,
	997, 998, 999, 1000, 1001, 1002, 995, 1239, 1240, 1005,
	998, 999, 1000, 1001, 1002, 995, 2664, 1312, 1005, 994,
	993, 1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002,
	995, 1314, 1478, 1005, 436, 436, 1003, 1004, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 1251, 78, 1005, 1264,
	1265, 436, 436, 1267, 831, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 2268, 1350, 1005, 2262, 474, 1321, 1270,
	2737, 1595, 840, 1379, 1380, 1286, 2054, 1353, 633, 973,
	854, 1289, 1285, 436, 977, 976, 435, 435, 2546, 2553,
	1059, 2733, 1846, 977, 976, 125, 2545, 1349, 125, 1056,
	2666, 2643, 978, 435, 435, 1941, 125, 1328, 1329, 977,
	976, 978, 1313, 1354, 1714, 125, 125, 125, 125, 1440,
	1307, 1731, 1288, 1310, 2738, 1318, 79, 978, 2528, 1256,
	94, 436, 436, 436, 2547, 435, 2382, 1355, 1471, 2716,
	2697, 2715, 1418, 1107, 2642, 1442, 1348, 1107, 963, 2381,
	1345, 964, 1425, 1428, 593, 594, 977, 976, 977, 976,
	1441, 2380, 1311, 2593, 2592, 2484, 436, 2379, 2373, 977,
	976, 436, 436, 1393, 978, 93, 978, 1397, 977, 976,
	2228, 482, 2604, 435, 435, 435, 2227, 978, 633, 1845,
	1056, 977, 976, 1341, 1343, 1344, 978, 1235, 1994, 1342,
	1843, 1332, 1482, 1824, 967, 610, 1484, 872, 983, 978,
	899, 2485, 1350, 92, 986, 1663, 1664, 1665, 435, 1376,
	898, 1377, 1467, 435, 435, 1333, 1476, 1787, 1334, 1788,
	871, 125, 1109, 125, 2602, 2559, 633, 1109, 2480, 2479,
	2437, 1109, 2389, 1502, 2357, 1500, 2318, 2265, 2264, 626,
	2263, 1480, 2225, 1200, 125, 1584, 2059, 1841, 1614, 1266,
	982, 1237, 1351, 2629, 2628, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1058, 2490, 2435, 1513, 2406, 1520, 1382, 1489, 1488, 1083,
	1390, 1582, 1583, 1073, 1501, 1494, 1485, 1805, 2400, 1399,
	1400, 2288, 1503, 1510, 2159, 2144, 633, 2140, 958, 2132,
	1410, 2103, 1562, 1563, 1414, 2087, 2086, 1558, 1559, 1560,
	1561, 2085, 1876, 1875, 1608, 1610, 1592, 1591, 1378, 1263,
	1437, 1260, 1542, 1543, 1544, 1545, 482, 1229, 1228, 1554,
	1227, 1226, 1215, 1431, 1209, 1722, 1208, 1207, 1205, 894,
	1648, 828, 1443, 398, 994, 993, 1003, 1004, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 1527, 1199, 1005, 396,
	2331, 2656, 633, 633, 2215, 2649, 958, 1596, 1220, 125,
	1667, 938, 1602, 2566, 958, 2215, 2564, 125, 125, 2215,
	2562, 2399, 125, 125, 2351, 1616, 125, 125, 125, 2215,
	2439, 2331, 2431, 1291, 958, 2350, 1294, 1295, 1296, 1350,
	1298, 1299, 2331, 2347, 1300, 2082, 633, 633, 2331, 958,
	1301, 2331, 2330, 1606, 1302, 1303, 815, 1304, 1305, 2215,
	2214, 1609, 2196, 958, 2398, 1615, 1650, 958, 2074, 2073,
	2070, 2071, 1349, 2060, 1109, 1353, 436, 436, 436, 1622,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 2070, 2069, 1005, 904, 2187, 2150, 1777, 1676,
	958, 1629, 1455, 958, 1632, 1627, 1626, 1647, 1416, 1611,
	1114, 1354, 1744, 1746, 125, 1655, 1107, 1107, 1107, 1107,
	1107, 1501, 2151, 1672, 125, 1777, 125, 125, 435, 435,
	435, 1777, 1471, 125, 1769, 482, 1653, 1654, 1668, 1416,
	958, 1454, 1107, 994, 993, 1003, 1004, 996, 997, 998,
	999, 1000, 1001, 1002, 995, 2151, 1576, 1005, 1137, 1136,
	125, 125, 125, 1750, 1745, 82, 1115, 1481, 1117, 1113,
	1749, 818, 819, 820, 821, 822, 823, 824, 1706, 1238,
	1455, 1779, 1455, 1780, 1418, 125, 1772, 125, 2012, 1998,
	942, 633, 2012, 902, 1325, 633, 1575, 2614, 2012, 1255,
	2186, 1778, 1634, 901, 1416, 610, 902, 2571, 943, 2190,
	1109, 1109, 1109, 1109, 1109, 1764, 1590, 633, 1114, 1676,
	633, 2083, 2072, 1771, 2026, 1730, 1109, 1900, 78, 1791,
	1804, 1806, 1490, 1676, 1736, 1735, 1109, 1268, 1058, 1752,
	1753, 1751, 1755, 1589, 1754, 1324, 1763, 994, 993, 1003,
	1004, 996, 997, 998, 999, 1000, 1001, 1002, 995, 1200,
	957, 1005, 1669, 1670, 1671, 1792, 904, 1326, 953, 1309,
	432, 1682, 1684, 1125, 1115, 1782, 1113, 1275, 1212, 1881,
	1849, 1790, 1694, 1695, 1696, 1697, 1794, 1218, 1216, 1119,
	621, 79, 1874, 1873, 2586, 2563, 1800, 1803, 993, 1003,
	1004, 996, 997, 998, 999, 1000, 1001, 1002, 995, 78,
	2025, 1005, 2405, 2403, 2230, 1833, 1528, 1835, 1836, 1837,
	1838, 2202, 1842, 1338, 1339, 482, 1557, 2053, 2017, 2018,
	2707, 1553, 1844, 482, 1825, 1826, 1795, 1723, 1724, 1725,
	908, 1832, 1573, 1548, 1950, 1547, 1201, 891, 1864, 1566,
	1605, 1839, 79, 1460, 1463, 1464, 1465, 1461, 1878, 1462,
	1466, 1056, 2705, 2017, 2018, 125, 125, 125, 125, 125,
	406, 1877, 2688, 1798, 2081, 2020, 1998, 125, 1847, 1223,
	944, 125, 905, 1884, 900, 125, 1886, 1350, 1662, 1760,
	2023, 125, 1927, 1928, 1761, 1460, 1463, 1464, 1465, 1461,
	1899, 1462, 1466, 2022, 2003, 78, 1058, 1910, 1934, 1921,
	1922, 1423, 1424, 1925, 1905, 633, 1902, 1913, 1918, 1904,
	1349, 1758, 561, 1628, 1757, 1762, 1759, 1464, 1465, 2028,
	1756, 1935, 1936, 436, 2032, 2033, 2034, 468, 489, 490,
	2625, 2583, 1999, 1929, 1652, 1940, 2011, 1336, 436, 2613,
	2193, 1750, 1660, 1659, 2321, 971, 972, 2004, 1749, 2287,
	2218, 2139, 2002, 436, 2557, 2138, 1807, 2058, 2057, 1944,
	1799, 1991, 2049, 2495, 1892, 2498, 633, 2037, 1499, 1981,
	1980, 2031, 1898, 436, 969, 435, 1321, 2027, 2558, 2393,
	2603, 436, 524, 523, 526, 527, 528, 529, 2391, 125,
	435, 525, 530, 2476, 2475, 397, 2006, 1879, 1834, 1880,
	2021, 2051, 617, 960, 2052, 435, 629, 2079, 2080, 2035,
	2376, 2377, 1132, 2029, 2638, 961, 889, 873, 870, 869,
	432, 1934, 829, 2410, 2409, 435, 817, 633, 2188, 2098,
	1562, 2297, 1563, 435, 1613, 2048, 1569, 2050, 1564, 1328,
	1329, 2270, 2041, 2042, 1222, 2615, 2551, 2395, 2271, 1850,
	633, 633, 2084, 2176, 1601, 1951, 125, 2637, 1954, 1955,
	1956, 971, 972, 1959, 2105, 94, 633, 1319, 1938, 1203,
	949, 950, 1658, 2636, 2635, 2354, 855, 486, 2100, 2606,
	1657, 2605, 2555, 633, 2499, 2418, 2414, 487, 82, 2413,
	2061, 2062, 2300, 1777, 1852, 1853, 1854, 2065, 2709, 2708,
	84, 2120, 1897, 2128, 2068, 1895, 1894, 1719, 1716, 1633,
	1982, 1983, 1252, 1984, 1985, 974, 2708, 1986, 2709, 2428,
	2149, 2056, 2063, 1322, 621, 2106, 471, 473, 54, 2152,
	1995, 1996, 2456, 51, 2458, 19, 2457, 18, 2459, 20,
	2129, 2182, 1200, 2046, 633, 2143, 633, 2123, 2122, 1,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 1623, 967, 1005, 2030, 2460, 21, 1292, 633,
	2455, 15, 2454, 14, 2448, 10, 2469, 33, 2250, 2108,
	2468, 32, 2467, 28, 2466, 27, 2465, 26, 2249, 633,
	2256, 633, 2088, 633, 2091, 633, 2463, 23, 2462, 22,
	2464, 24, 2210, 2211, 2212, 2453, 13, 2450, 12, 1862,
	2055, 1750, 2266, 436, 2449, 11, 1210, 2167, 1749, 436,
	2447, 9, 2365, 2221, 812, 1574, 2110, 895, 2556, 2114,
	2208, 78, 2494, 2118, 2119, 436, 2121, 2496, 436, 2390,
	2272, 2189, 436, 436, 2197, 436, 2234, 125, 2233, 2127,
	1856, 1855, 2198, 1707, 890, 1273, 1798, 1903, 1906, 2134,
	2136, 1585, 1643, 2506, 2213, 435, 2209, 1514, 1504, 2127,
	125, 435, 623, 90, 2107, 1448, 1593, 1732, 838, 2246,
	2247, 2248, 364, 2231, 2222, 125, 1511, 435, 1813, 633,
	435, 1792, 2497, 892, 435, 435, 1812, 435, 1391, 1392,
	1822, 1107, 1525, 1811, 1810, 2492, 1814, 1145, 1143, 1402,
	1403, 1404, 1405, 633, 1144, 1142, 1147, 125, 633, 2285,
	2283, 2284, 1415, 1417, 2245, 633, 633, 1146, 2223, 1422,
	368, 1127, 2154, 2538, 2158, 975, 2274, 100, 55, 2289,
	2275, 2003, 1917, 2273, 2003, 2326, 2302, 2303, 2279, 2278,
	95, 2293, 103, 370, 2286, 1013, 482, 2028, 1656, 1783,
	2301, 608, 609, 601, 2224, 1562, 2226, 955, 2294, 2518,
	2048, 2568, 2329, 2587, 965, 2511, 1729, 1072, 1438, 507,
	2298, 1767, 2179, 2180, 2181, 2305, 2513, 1340, 1934, 2353,
	522, 2355, 521, 520, 517, 1109, 518, 2325, 2579, 2002,
	2323, 1600, 2002, 1331, 1741, 987, 2075, 2322, 125, 505,
	496, 1105, 1098, 1612, 2352, 2332, 1459, 1457, 1456, 1224,
	2346, 597, 2019, 2333, 2015, 633, 2328, 1469, 1104, 68,
	2344, 2345, 633, 633, 633, 2343, 853, 2338, 386, 2183,
	2423, 633, 37, 472, 491, 1476, 25, 2334, 2411, 2356,
	17, 862, 16, 633, 1636, 810, 41, 43, 1851, 2277,
	2307, 1570, 2368, 2537, 2671, 876, 2695, 2383, 436, 2378,
	2590, 31, 2127, 2396, 30, 2003, 29, 78, 2461, 2386,
	2470, 125, 2452, 2451, 2658, 2401, 2402, 2404, 2657, 2348,
	2415, 2349, 2127, 4, 946, 69, 34, 619, 2, 2416,
	0, 0, 2408, 0, 0, 0, 78, 0, 0, 0,
	0, 2441, 0, 0, 0, 0, 617, 0, 0, 0,
	435, 617, 1128, 0, 2434, 1607, 0, 0, 0, 2430,
	0, 2429, 0, 2002, 2433, 0, 0, 2436, 2417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 1107,
	125, 0, 0, 0, 0, 482, 633, 482, 0, 0,
	0, 0, 0, 2046, 0, 0, 0, 0, 1993, 2309,
	2310, 2311, 2312, 0, 0, 0, 0, 2316, 2046, 0,
	1635, 2319, 2320, 0, 0, 0, 1649, 2502, 2500, 2504,
	0, 0, 0, 0, 0, 2503, 633, 0, 0, 2533,
	2516, 0, 633, 0, 0, 0, 0, 125, 2501, 125,
	2521, 2517, 0, 0, 2036, 633, 0, 0, 2526, 0,
	0, 0, 0, 0, 0, 78, 0, 1750, 0, 0,
	633, 0, 0, 0, 1749, 1529, 1530, 0, 1535, 1536,
	1537, 1538, 1539, 1109, 1674, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 1679, 1680, 1549, 1550, 1551, 1685,
	1686, 1687, 1688, 1689, 1690, 0, 0, 1693, 0, 0,
	0, 0, 1698, 1699, 1700, 1701, 0, 1703, 1704, 1705,
	2552, 2554, 0, 0, 1708, 1709, 1710, 1711, 0, 0,
	2561, 0, 633, 1717, 2572, 0, 1720, 1721, 0, 0,
	0, 1726, 1727, 2582, 0, 2542, 0, 1733, 0, 1734,
	0, 1202, 1737, 1738, 0, 1739, 1740, 2434, 0, 0,
	0, 0, 2609, 0, 2611, 0, 0, 0, 0, 0,
	0, 633, 2597, 0, 1765, 1766, 0, 2617, 2618, 0,
	0, 0, 0, 436, 78, 2627, 2608, 2610, 2612, 0,
	78, 2046, 2616, 2046, 0, 2641, 2626, 2624, 0, 2634,
	2145, 0, 432, 0, 0, 0, 1950, 2632, 0, 494,
	0, 2647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 2652, 2651, 2648, 78, 0, 0,
	0, 0, 0, 0, 2662, 435, 2668, 2665, 125, 2661,
	0, 2660, 0, 633, 2505, 633, 2659, 0, 0, 2682,
	0, 0, 0, 2681, 78, 2689, 2684, 78, 78, 0,
	0, 1293, 78, 2641, 0, 0, 0, 2698, 0, 2690,
	2639, 2185, 2692, 0, 2702, 432, 0, 0, 125, 2670,
	1058, 0, 78, 0, 2701, 78, 2706, 2641, 2704, 0,
	2199, 2200, 2717, 2719, 2201, 0, 0, 2203, 0, 0,
	2714, 78, 2727, 78, 0, 1058, 2641, 78, 2641, 629,
	0, 0, 0, 633, 0, 0, 0, 2175, 0, 0,
	0, 78, 2732, 0, 78, 0, 2641, 0, 0, 0,
	0, 78, 0, 0, 0, 78, 2641, 0, 629, 2741,
	2641, 0, 0, 0, 0, 1945, 1946, 0, 633, 0,
	633, 2046, 1952, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 1961, 1962, 1963, 0, 1965,
	1966, 1967, 0, 0, 0, 0, 0, 0, 0, 1381,
	0, 1939, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 0, 436, 2174, 1957, 1958, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 1964, 0,
	0, 0, 1968, 0, 994, 993, 1003, 1004, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 633, 617, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 0, 0, 1444, 1445, 435, 0, 0,
	2005, 0, 0, 0, 633, 0, 0, 0, 1827, 1828,
	1829, 1831, 0, 0, 633, 0, 0, 0, 436, 0,
	0, 0, 617, 2679, 0, 0, 968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 629, 0, 0, 629,
	629, 0, 1108, 994, 993, 1003, 1004, 996, 997, 998,
	999, 1000, 1001, 1002, 995, 0, 0, 1005, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 123, 0, 0, 383, 0, 0, 0,
	0, 0, 123, 0, 0, 0, 0, 2720, 1989, 122,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 600, 618, 0, 0, 123,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 494,
	0, 598, 0, 0, 0, 622, 0, 123, 0, 799,
	0, 0, 1988, 0, 0, 0, 0, 0, 123, 0,
	0, 0, 0, 811, 0, 2155, 0, 0, 0, 0,
	357, 0, 0, 2157, 825, 1987, 0, 360, 0, 0,
	0, 0, 0, 2160, 2161, 0, 0, 369, 377, 378,
	2162, 0, 0, 0, 1621, 0, 0, 0, 1621, 0,
	0, 2153, 0, 994, 993, 1003, 1004, 996, 997, 998,
	999, 1000, 1001, 1002, 995, 0, 0, 1005, 0, 0,
	1621, 0, 366, 1621, 0, 367, 0, 0, 375, 376,
	0, 0, 0, 0, 0, 2163, 0, 0, 0, 0,
	0, 0, 0, 629, 0, 0, 2172, 2173, 0, 0,
	2512, 2515, 2178, 463, 0, 1058, 0, 994, 993, 1003,
	1004, 996, 997, 998, 999, 1000, 1001, 1002, 995, 2191,
	2192, 1005, 2194, 0, 2131, 2195, 0, 0, 0, 372,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 0, 0, 1005, 2207, 0, 0, 0, 0,
	373, 0, 0, 0, 1383, 1388, 1389, 0, 2534, 2535,
	0, 1394, 1395, 1396, 0, 1398, 0, 2064, 1401, 0,
	0, 0, 0, 1406, 1407, 1408, 1409, 0, 1411, 1412,
	1413, 0, 0, 0, 0, 0, 1419, 1420, 1421, 0,
	0, 0, 1427, 1430, 0, 1435, 1436, 0, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 1140, 0, 0, 0, 0, 617, 0, 0,
	1446, 0, 1449, 1450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 361, 362, 457,
	382, 0, 0, 123, 363, 365, 0, 359, 381, 380,
	0, 0, 617, 0, 0, 0, 0, 0, 2515, 827,
	0, 0, 0, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2633,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	374, 0, 0, 0, 0, 2313, 2314, 2315, 0, 2317,
	0, 0, 0, 897, 1167, 0, 0, 2164, 2165, 0,
	2166, 0, 0, 2168, 0, 2170, 0, 0, 0, 0,
	0, 989, 0, 992, 0, 0, 2335, 2336, 2337, 1848,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 0, 990, 991,
	988, 0, 0, 2598, 0, 0, 0, 0, 994, 993,
	1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002, 995,
	0, 0, 1005, 0, 1937, 481, 994, 993, 1003, 1004,
	996, 997, 998, 999, 1000, 1001, 1002, 995, 0, 0,
	1005, 0, 2216, 2217, 2718, 0, 0, 0, 0, 0,
	1893, 0, 994, 993, 1003, 1004, 996, 997, 998, 999,
	1000, 1001, 1002, 995, 0, 1154, 1005, 0, 0, 0,
	0, 0, 0, 629, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2419, 2420, 2421, 2422, 629,
	0, 0, 0, 0, 0, 2426, 2427, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 1948, 1168, 0, 437,
	438, 439, 440, 441, 445, 446, 450, 451, 460, 459,
	458, 461, 462, 465, 464, 466, 442, 443, 444, 447,
	448, 449, 452, 453, 456, 454, 455, 0, 0, 0,
	123, 123, 123, 0, 0, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 618, 1100, 0, 1110, 0,
	0, 0, 0, 0, 0, 617, 0, 629, 1675, 2010,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 1692, 0, 0, 0,
	0, 0, 2010, 0, 463, 0, 1702, 0, 0, 2522,
	0, 0, 0, 0, 0, 0, 2527, 0, 0, 0,
	0, 2124, 629, 0, 629, 2126, 629, 0, 2045, 0,
	0, 0, 0, 1728, 1181, 1184, 1185, 1186, 1187, 1188,
	1189, 0, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	0, 1169, 1170, 1171, 1172, 1148, 1152, 1182, 1149, 1155,
	1151, 1153, 1150, 0, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2565, 0, 0, 1673, 0, 0, 0, 0,
	0, 0, 0, 0, 2573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2113, 994, 993, 1003, 1004, 996, 997, 998,
	999, 1000, 1001, 1002, 995, 0, 0, 1005, 0, 0,
	457, 0, 0, 0, 0, 0, 2137, 0, 0, 0,
	0, 2142, 0, 0, 0, 0, 0, 0, 2146, 2147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1183, 123, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 1234, 0, 0, 0, 0, 598, 0,
	0, 1225, 123, 123, 123, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 1242,
	1243, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2205, 0,
	0, 0, 0, 0, 0, 2205, 2205, 2205, 0, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2734, 2735, 123, 0,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 1154, 0, 0,
	0, 0, 1234, 0, 0, 0, 0, 1337, 0, 0,
	437, 438, 439, 440, 441, 445, 446, 450, 451, 460,
	459, 458, 461, 462, 465, 464, 466, 442, 443, 444,
	447, 448, 449, 452, 453, 456, 454, 455, 0, 1168,
	0, 629, 0, 0, 0, 1387, 1387, 1387, 0, 629,
	0, 1387, 1387, 1387, 1387, 1387, 1387, 0, 0, 1387,
	0, 0, 0, 0, 1387, 1387, 1387, 1387, 0, 1387,
	1387, 1387, 0, 0, 0, 0, 0, 1387, 1387, 1387,
	0, 0, 0, 1387, 1387, 0, 1387, 1387, 0, 2327,
	0, 618, 0, 0, 0, 2205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 1387, 1387, 1387, 1387, 0, 123, 0, 0, 0,
	0, 0, 0, 2045, 123, 481, 0, 0, 0, 123,
	123, 0, 1453, 123, 1486, 1234, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 0,
	1234, 0, 0, 0, 0, 0, 1181, 1184, 1185, 1186,
	1187, 1188, 1189, 0, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 0, 1169, 1170, 1171, 1172, 1148, 1152, 1182,
	1149, 1155, 1151, 1153, 1150, 2407, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 2432, 0, 0, 0, 0, 0,
	0, 123, 0, 123, 123, 0, 0, 1568, 0, 0,
	123, 0, 0, 0, 0, 0, 0, 1579, 0, 1580,
	1581, 0, 0, 0, 0, 0, 1588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 1598, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 0, 0, 0, 0,
	0, 0, 123, 1183, 481, 0, 2045, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 35, 36, 70, 38, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 1234, 0, 0,
	0, 76, 0, 0, 0, 40, 62, 63, 0, 0,
	0, 0, 59, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 1387,
	0, 2567, 0, 2570, 0, 0, 0, 1387, 0, 0,
	0, 0, 0, 0, 0, 0, 1387, 1387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1387, 0, 0,
	0, 1387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1387, 0, 2045, 0, 0, 0,
	0, 0, 0, 42, 72, 45, 44, 47, 0, 0,
	0, 618, 123, 123, 123, 123, 123, 0, 0, 2205,
	0, 0, 0, 0, 481, 0, 0, 0, 123, 0,
	0, 629, 481, 0, 0, 48, 75, 74, 123, 0,
	0, 35, 46, 70, 38, 39, 618, 2570, 0, 0,
	35, 0, 70, 38, 39, 58, 64, 2654, 0, 0,
	0, 76, 0, 0, 58, 40, 0, 0, 0, 0,
	76, 0, 0, 0, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 56, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 65, 0, 66, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2471, 0, 0,
	0, 0, 2743, 0, 0, 0, 2471, 0, 0, 0,
	0, 2739, 0, 0, 0, 0, 123, 50, 73, 0,
	52, 53, 60, 0, 61, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 72, 45, 44, 47, 0, 0,
	0, 0, 42, 72, 45, 44, 47, 0, 0, 2472,
	0, 0, 0, 0, 0, 0, 0, 0, 2472, 0,
	0, 0, 0, 0, 0, 48, 75, 74, 0, 0,
	0, 0, 46, 123, 48, 75, 74, 0, 0, 0,
	0, 46, 0, 0, 1387, 0, 0, 0, 35, 1930,
	70, 38, 39, 1387, 0, 1234, 0, 0, 0, 0,
	0, 0, 58, 0, 0, 71, 0, 0, 76, 0,
	0, 0, 40, 0, 0, 0, 0, 56, 57, 0,
	2473, 0, 0, 0, 0, 0, 56, 57, 0, 2473,
	0, 0, 0, 0, 65, 0, 66, 0, 0, 0,
	0, 0, 0, 65, 0, 66, 0, 0, 0, 0,
	79, 0, 0, 0, 77, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2471, 0, 0, 2474, 73, 2728,
	52, 53, 60, 0, 61, 0, 2474, 73, 0, 52,
	53, 60, 0, 61, 0, 35, 0, 70, 38, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 58,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 40,
	42, 72, 45, 44, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 48, 75, 74, 0, 0, 79, 0, 46,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	2078, 2471, 0, 0, 71, 0, 2711, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 2104, 56, 57, 0, 2473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2109, 0,
	0, 65, 0, 66, 77, 0, 0, 42, 72, 45,
	44, 47, 0, 77, 123, 0, 0, 463, 0, 0,
	0, 0, 0, 2472, 0, 0, 0, 0, 0, 495,
	2141, 0, 0, 0, 0, 0, 0, 0, 1796, 48,
	75, 74, 0, 0, 2474, 73, 46, 52, 53, 60,
	35, 61, 70, 38, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 40, 35, 0, 70, 38, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 58,
	0, 56, 57, 0, 2473, 76, 0, 0, 0, 40,
	0, 0, 0, 0, 0, 481, 0, 0, 65, 618,
	66, 0, 79, 2699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2471, 79, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 2474, 73, 457, 52, 53, 60, 0, 61, 0,
	0, 2471, 0, 0, 0, 0, 2640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	0, 0, 42, 72, 45, 44, 47, 0, 0, 0,
	0, 77, 0, 0, 2232, 0, 0, 0, 2472, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 72, 45,
	44, 47, 0, 0, 48, 75, 74, 0, 0, 0,
	0, 46, 0, 2472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	75, 74, 0, 0, 0, 0, 46, 123, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 57, 0, 2473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 65, 0, 66, 0, 0, 0, 0,
	0, 56, 57, 0, 2473, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 481, 0, 481, 0, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2474, 73, 0, 52,
	53, 60, 0, 61, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2474, 73, 0, 52, 53, 60, 0, 61, 0,
	0, 0, 0, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2529, 778, 755, 319, 703, 781, 667, 689, 794,
	692, 695, 736, 650, 716, 248, 687, 651, 0, 671,
	640, 680, 641, 668, 705, 173, 666, 757, 719, 780,
	206, 732, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 779, 711, 0, 788, 209, 0, 728, 789, 307,
	232, 0, 0, 707, 765, 714, 753, 702, 738, 659,
	727, 783, 688, 734, 784, 0, 0, 0, 0, 2536,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	731, 777, 683, 733, 735, 638, 730, 0, 645, 652,
	793, 772, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 706, 715, 747, 699, 338, 259, 275, 295,
	694, 267, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 672, 0, 725, 0, 0, 0, 653, 646, 0,
	0, 704, 0, 0, 0, 658, 637, 673, 749, 0,
	635, 185, 233, 142, 754, 771, 701, 197, 348, 775,
	698, 697, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 746, 289, 685, 636, 758, 669, 681,
	164, 677, 281, 252, 337, 0, 722, 280, 210, 327,
	742, 776, 336, 690, 797, 345, 350, 0, 712, 656,
	304, 174, 0, 131, 0, 266, 169, 202, 700, 737,
	670, 161, 744, 726, 764, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 2539, 2540, 2541, 0, 0,
	0, 0, 342, 696, 292, 291, 691, 193, 752, 729,
	642, 274, 740, 198, 130, 316, 353, 147, 204, 321,
	634, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 682, 741, 751, 272, 294, 323, 149,
	311, 678, 679, 684, 748, 283, 759, 769, 782, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 643,
	0, 309, 340, 355, 151, 665, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 663, 664, 661,
	0, 662, 717, 718, 785, 786, 787, 750, 655, 0,
	766, 767, 0, 0, 0, 0, 0, 756, 773, 774,
	739, 795, 693, 660, 644, 647, 648, 649, 657, 708,
	709, 721, 724, 762, 761, 760, 763, 768, 791, 790,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 129, 138, 208, 796, 273, 180, 341,
	639, 171, 0, 710, 713, 723, 745, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 743, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 770, 778, 755, 319, 703,
	781, 667, 689, 794, 692, 695, 736, 650, 716, 248,
	687, 651, 0, 671, 640, 680, 641, 668, 705, 173,
	666, 757, 719, 780, 206, 732, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 779, 711, 0, 788, 209,
	0, 728, 789, 307, 232, 0, 0, 707, 765, 714,
	753, 702, 738, 659, 727, 783, 688, 734, 784, 0,
	0, 0, 0, 632, 0, 1508, 1509, 0, 0, 0,
	0, 0, 654, 0, 731, 777, 683, 733, 735, 638,
	730, 0, 645, 652, 793, 772, 674, 675, 676, 1793,
	0, 0, 0, 0, 0, 0, 706, 715, 747, 699,
	338, 259, 275, 295, 694, 267, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 725, 0, 0,
	0, 653, 646, 0, 0, 704, 0, 0, 0, 658,
	637, 673, 749, 0, 635, 185, 233, 142, 754, 771,
	701, 197, 348, 775, 698, 697, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 746, 289, 685,
	636, 758, 669, 681, 164, 677, 281, 252, 337, 0,
	722, 280, 210, 327, 742, 776, 336, 690, 797, 345,
	350, 0, 712, 656, 304, 174, 0, 131, 0, 266,
	169, 202, 700, 737, 670, 161, 744, 726, 764, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 696, 292, 291,
	691, 193, 752, 729, 642, 274, 740, 198, 130, 316,
	353, 147, 204, 321, 634, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 682, 741, 751,
	272, 294, 323, 149, 311, 678, 679, 684, 748, 283,
	759, 769, 782, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 643, 0, 309, 340, 355, 151, 665,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 663, 664, 661, 0, 662, 717, 718, 785, 786,
	787, 750, 655, 0, 766, 767, 0, 0, 0, 0,
	0, 756, 773, 774, 739, 795, 693, 660, 644, 647,
	648, 649, 657, 708, 709, 721, 724, 762, 761, 760,
	763, 768, 791, 790, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 129, 138, 208,
	796, 273, 180, 341, 639, 171, 0, 710, 713, 723,
	745, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 743, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 770,
	778, 755, 319, 703, 781, 667, 689, 794, 692, 695,
	736, 650, 716, 248, 687, 651, 0, 671, 640, 680,
	641, 668, 705, 173, 666, 757, 719, 780, 206, 732,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 779,
	711, 0, 788, 209, 0, 728, 789, 307, 232, 0,
	0, 707, 765, 714, 753, 702, 738, 659, 727, 783,
	688, 734, 784, 0, 0, 0, 0, 632, 0, 1508,
	1509, 0, 0, 0, 0, 0, 654, 0, 731, 777,
	683, 733, 735, 638, 730, 0, 645, 652, 793, 772,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	706, 715, 747, 699, 338, 259, 275, 295, 694, 267,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	0, 725, 0, 0, 0, 653, 646, 0, 0, 704,
	0, 0, 0, 658, 637, 673, 749, 0, 635, 185,
	233, 142, 754, 771, 701, 197, 348, 775, 698, 697,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 746, 289, 685, 636, 758, 669, 681, 164, 677,
	281, 252, 337, 0, 722, 280, 210, 327, 742, 776,
	336, 690, 797, 345, 350, 0, 712, 656, 304, 174,
	0, 131, 0, 266, 169, 202, 700, 737, 670, 161,
	744, 726, 764, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 696, 292, 291, 691, 193, 752, 729, 642, 274,
	740, 198, 130, 316, 353, 147, 204, 321, 634, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 682, 741, 751, 272, 294, 323, 149, 311, 678,
	679, 684, 748, 283, 759, 769, 782, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 643, 0, 309,
	340, 355, 151, 665, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 663, 664, 661, 0, 662,
	717, 718, 785, 786, 787, 750, 655, 0, 766, 767,
	0, 0, 0, 0, 0, 756, 773, 774, 739, 795,
	693, 660, 644, 647, 648, 649, 657, 708, 709, 721,
	724, 762, 761, 760, 763, 768, 791, 790, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 129, 138, 208, 796, 273, 180, 341, 639, 171,
	0, 710, 713, 723, 745, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 743, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 770, 778, 2007, 319, 703, 781, 667,
	689, 794, 692, 695, 736, 650, 716, 248, 687, 651,
	0, 671, 640, 680, 641, 668, 705, 173, 666, 757,
	719, 780, 206, 732, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 779, 711, 0, 788, 209, 0, 728,
	789, 307, 232, 0, 0, 707, 765, 714, 753, 702,
	738, 659, 727, 783, 688, 734, 784, 79, 0, 958,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 731, 777, 683, 733, 735, 638, 730, 0,
	645, 652, 793, 772, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 706, 715, 747, 699, 338, 259,
	275, 295, 694, 267, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 725, 0, 0, 0, 653,
	646, 0, 0, 704, 0, 0, 0, 658, 637, 673,
	749, 0, 635, 185, 233, 142, 754, 771, 701, 197,
	348, 775, 698, 697, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 746, 289, 685, 636, 758,
	669, 681, 164, 677, 281, 252, 337, 0, 722, 280,
	210, 327, 742, 776, 336, 690, 797, 345, 350, 0,
	712, 656, 304, 174, 0, 131, 0, 266, 169, 202,
	700, 737, 670, 161, 744, 726, 764, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 696, 292, 291, 691, 193,
	752, 729, 642, 274, 740, 198, 130, 316, 353, 147,
	204, 321, 634, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 682, 741, 751, 272, 294,
	323, 149, 311, 678, 679, 684, 748, 283, 759, 769,
	782, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 643, 0, 309, 340, 355, 151, 665, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 663,
	664, 661, 0, 662, 717, 718, 785, 786, 787, 750,
	655, 0, 766, 767, 0, 0, 0, 0, 0, 756,
	773, 774, 739, 795, 693, 660, 644, 647, 648, 649,
	657, 708, 709, 721, 724, 762, 761, 760, 763, 768,
	791, 790, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 129, 138, 208, 2008, 273,
	180, 341, 639, 171, 0, 710, 713, 723, 745, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	743, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 770, 778, 755,
	319, 703, 781, 667, 689, 794, 692, 695, 736, 650,
	716, 248, 687, 651, 0, 671, 640, 680, 641, 668,
	705, 173, 666, 757, 719, 780, 206, 732, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 779, 711, 0,
	788, 209, 0, 728, 789, 307, 232, 0, 0, 707,
	765, 714, 753, 702, 738, 659, 727, 783, 688, 734,
	784, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 731, 777, 683, 733,
	735, 638, 730, 0, 645, 652, 793, 772, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 706, 715,
	747, 699, 338, 259, 275, 295, 694, 267, 686, 0,
	0, 0, 0, 0, 0, 2304, 0, 672, 0, 725,
	0, 0, 0, 653, 646, 0, 0, 704, 0, 0,
	0, 658, 637, 673, 749, 0, 635, 185, 233, 142,
	754, 771, 701, 197, 348, 775, 698, 697, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 746,
	289, 685, 636, 758, 669, 681, 164, 677, 281, 252,
	337, 0, 722, 280, 210, 327, 742, 776, 336, 690,
	797, 345, 350, 0, 712, 656, 304, 174, 0, 131,
	0, 266, 169, 202, 700, 737, 670, 161, 744, 726,
	764, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 696,
	292, 291, 691, 193, 752, 729, 642, 274, 740, 198,
	130, 316, 353, 147, 204, 321, 634, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 682,
	741, 751, 272, 294, 323, 149, 311, 678, 679, 684,
	748, 283, 759, 769, 782, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 643, 0, 309, 340, 355,
	151, 665, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 663, 664, 661, 0, 662, 717, 718,
	785, 786, 787, 750, 655, 0, 766, 767, 0, 0,
	0, 0, 0, 756, 773, 774, 739, 795, 693, 660,
	644, 647, 648, 649, 657, 708, 709, 721, 724, 762,
	761, 760, 763, 768, 791, 790, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 129,
	138, 208, 796, 273, 180, 341, 639, 171, 0, 710,
	713, 723, 745, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 743, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 770, 778, 755, 319, 703, 781, 667, 689, 794,
	692, 695, 736, 650, 716, 248, 687, 651, 0, 671,
	640, 680, 641, 668, 705, 173, 666, 757, 719, 780,
	206, 732, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 779, 711, 0, 788, 209, 0, 728, 789, 307,
	232, 0, 0, 707, 765, 714, 753, 702, 738, 659,
	727, 783, 688, 734, 784, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	731, 777, 683, 733, 735, 638, 730, 0, 645, 652,
	793, 772, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 706, 715, 747, 699, 338, 259, 275, 295,
	694, 267, 686, 0, 0, 0, 0, 0, 0, 1943,
	0, 672, 0, 725, 0, 0, 0, 653, 646, 0,
	0, 704, 0, 0, 0, 658, 637, 673, 749, 0,
	635, 185, 233, 142, 754, 771, 701, 197, 348, 775,
	698, 697, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 746, 289, 685, 636, 758, 669, 681,
	164, 677, 281, 252, 337, 0, 722, 280, 210, 327,
	742, 776, 336, 690, 797, 345, 350, 0, 712, 656,
	304, 174, 0, 131, 0, 266, 169, 202, 700, 737,
	670, 161, 744, 726, 764, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 696, 292, 291, 691, 193, 752, 729,
	642, 274, 740, 198, 130, 316, 353, 147, 204, 321,
	634, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 682, 741, 751, 272, 294, 323, 149,
	311, 678, 679, 684, 748, 283, 759, 769, 782, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 643,
	0, 309, 340, 355, 151, 665, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 663, 664, 661,
	0, 662, 717, 718, 785, 786, 787, 750, 655, 0,
	766, 767, 0, 0, 0, 0, 0, 756, 773, 774,
	739, 795, 693, 660, 644, 647, 648, 649, 657, 708,
	709, 721, 724, 762, 761, 760, 763, 768, 791, 790,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 129, 138, 208, 796, 273, 180, 341,
	639, 171, 0, 710, 713, 723, 745, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 743, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 770, 778, 755, 319, 703,
	781, 667, 689, 794, 692, 695, 736, 650, 716, 248,
	687, 651, 0, 671, 640, 680, 641, 668, 705, 173,
	666, 757, 719, 780, 206, 732, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 779, 711, 0, 788, 209,
	0, 728, 789, 307, 232, 0, 0, 707, 765, 714,
	753, 702, 738, 659, 727, 783, 688, 734, 784, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 731, 777, 683, 733, 735, 638,
	730, 0, 645, 652, 793, 772, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 706, 715, 747, 699,
	338, 259, 275, 295, 694, 267, 686, 0, 0, 0,
	0, 0, 0, 1933, 0, 672, 0, 725, 0, 0,
	0, 653, 646, 0, 0, 704, 0, 0, 0, 658,
	637, 673, 749, 0, 635, 185, 233, 142, 754, 771,
	701, 197, 348, 775, 698, 697, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 746, 289, 685,
	636, 758, 669, 681, 164, 677, 281, 252, 337, 0,
	722, 280, 210, 327, 742, 776, 336, 690, 797, 345,
	350, 0, 712, 656, 304, 174, 0, 131, 0, 266,
	169, 202, 700, 737, 670, 161, 744, 726, 764, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 696, 292, 291,
	691, 193, 752, 729, 642, 274, 740, 198, 130, 316,
	353, 147, 204, 321, 634, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 682, 741, 751,
	272, 294, 323, 149, 311, 678, 679, 684, 748, 283,
	759, 769, 782, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 643, 0, 309, 340, 355, 151, 665,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 663, 664, 661, 0, 662, 717, 718, 785, 786,
	787, 750, 655, 0, 766, 767, 0, 0, 0, 0,
	0, 756, 773, 774, 739, 795, 693, 660, 644, 647,
	648, 649, 657, 708, 709, 721, 724, 762, 761, 760,
	763, 768, 791, 790, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 129, 138, 208,
	796, 273, 180, 341, 639, 171, 0, 710, 713, 723,
	745, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 743, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 770,
	778, 755, 319, 703, 781, 667, 689, 794, 692, 695,
	736, 650, 716, 248, 687, 651, 0, 671, 640, 680,
	641, 668, 705, 173, 666, 757, 719, 780, 206, 732,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 779,
	711, 0, 788, 209, 0, 728, 789, 307, 232, 0,
	0, 707, 765, 714, 753, 702, 738, 659, 727, 783,
	688, 734, 784, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 731, 777,
	683, 733, 735, 638, 730, 0, 645, 652, 793, 772,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	706, 715, 747, 699, 338, 259, 275, 295, 694, 267,
	686, 0, 0, 0, 0, 0, 0, 1487, 0, 672,
	0, 725, 0, 0, 0, 653, 646, 0, 0, 704,
	0, 0, 0, 658, 637, 673, 749, 0, 635, 185,
	233, 142, 754, 771, 701, 197, 348, 775, 698, 697,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 746, 289, 685, 636, 758, 669, 681, 164, 677,
	281, 252, 337, 0, 722, 280, 210, 327, 742, 776,
	336, 690, 797, 345, 350, 0, 712, 656, 304, 174,
	0, 131, 0, 266, 169, 202, 700, 737, 670, 161,
	744, 726, 764, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 696, 292, 291, 691, 193, 752, 729, 642, 274,
	740, 198, 130, 316, 353, 147, 204, 321, 634, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 682, 741, 751, 272, 294, 323, 149, 311, 678,
	679, 684, 748, 283, 759, 769, 782, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 643, 0, 309,
	340, 355, 151, 665, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 663, 664, 661, 0, 662,
	717, 718, 785, 786, 787, 750, 655, 0, 766, 767,
	0, 0, 0, 0, 0, 756, 773, 774, 739, 795,
	693, 660, 644, 647, 648, 649, 657, 708, 709, 721,
	724, 762, 761, 760, 763, 768, 791, 790, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 129, 138, 208, 796, 273, 180, 341, 639, 171,
	0, 710, 713, 723, 745, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 743, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 770, 778, 755, 319, 703, 781, 667,
	689, 794, 692, 695, 736, 650, 716, 248, 687, 651,
	0, 671, 640, 680, 641, 668, 705, 173, 666, 757,
	719, 780, 206, 732, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 779, 711, 0, 788, 209, 0, 728,
	789, 307, 232, 0, 0, 707, 765, 714, 753, 702,
	738, 659, 727, 783, 688, 734, 784, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 731, 777, 683, 733, 735, 638, 730, 0,
	645, 652, 793, 772, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 706, 715, 747, 699, 338, 259,
	275, 295, 694, 267, 686, 0, 0, 0, 0, 0,
	0, 1347, 0, 672, 0, 725, 0, 0, 0, 653,
	646, 0, 0, 704, 0, 0, 0, 658, 637, 673,
	749, 0, 635, 185, 233, 142, 754, 771, 701, 197,
	348, 775, 698, 697, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 746, 289, 685, 636, 758,
	669, 681, 164, 677, 281, 252, 337, 0, 722, 280,
	210, 327, 742, 776, 336, 690, 797, 345, 350, 0,
	712, 656, 304, 174, 0, 131, 0, 266, 169, 202,
	700, 737, 670, 161, 744, 726, 764, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 696, 292, 291, 691, 193,
	752, 729, 642, 274, 740, 198, 130, 316, 353, 147,
	204, 321, 634, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 682, 741, 751, 272, 294,
	323, 149, 311, 678, 679, 684, 748, 283, 759, 769,
	782, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 643, 0, 309, 340, 355, 151, 665, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 663,
	664, 661, 0, 662, 717, 718, 785, 786, 787, 750,
	655, 0, 766, 767, 0, 0, 0, 0, 0, 756,
	773, 774, 739, 795, 693, 660, 644, 647, 648, 649,
	657, 708, 709, 721, 724, 762, 761, 760, 763, 768,
	791, 790, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 129, 138, 208, 796, 273,
	180, 341, 639, 171, 0, 710, 713, 723, 745, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	743, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 770, 778, 755,
	319, 703, 781, 667, 689, 794, 692, 695, 736, 650,
	716, 248, 687, 651, 0, 671, 640, 680, 641, 668,
	705, 173, 666, 757, 719, 780, 206, 732, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 779, 711, 0,
	788, 209, 0, 728, 789, 307, 232, 0, 0, 707,
	765, 714, 753, 702, 738, 659, 727, 783, 688, 734,
	784, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 731, 777, 683, 733,
	735, 638, 730, 0, 645, 652, 793, 772, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 706, 715,
	747, 699, 338, 259, 275, 295, 694, 267, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 0, 725,
	0, 0, 0, 653, 646, 0, 0, 704, 0, 0,
	0, 658, 637, 673, 749, 0, 635, 185, 233, 142,
	754, 771, 701, 197, 348, 775, 698, 697, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 746,
	289, 685, 636, 758, 669, 681, 164, 677, 281, 252,
	337, 0, 722, 280, 210, 327, 742, 776, 336, 690,
	797, 345, 350, 0, 712, 656, 304, 174, 0, 131,
	0, 266, 169, 202, 700, 737, 670, 161, 744, 726,
	764, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 696,
	292, 291, 691, 193, 752, 729, 642, 274, 740, 198,
	130, 316, 353, 147, 204, 321, 634, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 682,
	741, 751, 272, 294, 323, 149, 311, 678, 679, 684,
	748, 283, 759, 769, 782, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 643, 0, 309, 340, 355,
	151, 665, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 663, 664, 661, 0, 662, 717, 718,
	785, 786, 787, 750, 655, 0, 766, 767, 0, 0,
	0, 0, 0, 756, 773, 774, 739, 795, 693, 660,
	644, 647, 648, 649, 657, 708, 709, 721, 724, 762,
	761, 760, 763, 768, 791, 790, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 129,
	138, 208, 796, 273, 180, 341, 639, 171, 0, 710,
	713, 723, 745, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 743, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 770, 778, 755, 319, 703, 781, 667, 689, 794,
	692, 695, 736, 650, 716, 248, 687, 651, 0, 671,
	640, 680, 641, 668, 705, 173, 666, 757, 719, 780,
	206, 732, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 779, 711, 0, 788, 209, 0, 728, 789, 307,
	232, 0, 0, 707, 765, 714, 753, 702, 738, 659,
	727, 783, 688, 734, 784, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	731, 777, 683, 733, 735, 638, 730, 0, 645, 652,
	793, 772, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 706, 715, 747, 699, 338, 259, 275, 295,
	694, 267, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 672, 0, 725, 0, 0, 0, 653, 646, 0,
	0, 704, 0, 0, 0, 658, 637, 673, 749, 0,
	635, 185, 233, 142, 754, 771, 701, 197, 348, 775,
	698, 697, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 746, 289, 685, 636, 758, 669, 681,
	164, 677, 281, 252, 337, 0, 722, 280, 210, 327,
	742, 776, 336, 690, 797, 345, 350, 0, 712, 656,
	304, 174, 0, 131, 0, 266, 169, 202, 700, 737,
	670, 161, 744, 726, 764, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 696, 292, 291, 691, 193, 752, 729,
	642, 274, 740, 198, 130, 316, 353, 147, 204, 321,
	634, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 682, 741, 751, 272, 294, 323, 149,
	311, 678, 679, 684, 748, 283, 759, 769, 782, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 643,
	0, 309, 340, 355, 151, 665, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 663, 664, 661,
	0, 662, 717, 718, 785, 786, 787, 750, 655, 0,
	766, 767, 0, 0, 0, 0, 0, 756, 773, 774,
	739, 795, 693, 660, 644, 647, 648, 649, 657, 708,
	709, 721, 724, 762, 761, 760, 763, 768, 791, 790,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 129, 138, 208, 796, 273, 180, 341,
	639, 171, 0, 710, 713, 723, 745, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 743, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 770, 778, 755, 319, 703,
	781, 667, 689, 794, 692, 695, 736, 650, 716, 248,
	687, 651, 0, 671, 640, 680, 641, 668, 705, 173,
	666, 757, 719, 780, 206, 732, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 1519, 1523, 0, 788, 209,
	0, 728, 789, 307, 232, 0, 0, 707, 765, 714,
	753, 702, 738, 659, 727, 783, 688, 734, 784, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 731, 777, 683, 733, 735, 638,
	730, 0, 645, 652, 793, 772, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 706, 715, 747, 699,
	338, 259, 275, 295, 694, 267, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 725, 0, 0,
	0, 653, 646, 0, 0, 704, 0, 0, 0, 658,
	637, 673, 749, 0, 635, 185, 233, 142, 754, 771,
	1522, 197, 348, 775, 698, 697, 1517, 0, 1518, 187,
	207, 631, 126, 140, 1515, 1521, 244, 746, 289, 685,
	636, 758, 669, 681, 164, 677, 281, 252, 337, 0,
	722, 280, 210, 327, 742, 776, 336, 690, 797, 345,
	350, 0, 712, 656, 304, 174, 0, 131, 0, 266,
	169, 202, 700, 737, 670, 161, 744, 726, 764, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 696, 292, 291,
	691, 193, 752, 729, 642, 274, 740, 198, 130, 316,
	353, 147, 204, 321, 634, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 682, 741, 751,
	272, 294, 323, 149, 311, 678, 679, 684, 748, 283,
	759, 769, 782, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 643, 0, 309, 340, 355, 151, 665,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 663, 664, 661, 0, 662, 717, 718, 785, 786,
	787, 750, 655, 0, 766, 767, 0, 0, 0, 0,
	0, 756, 773, 774, 739, 795, 693, 660, 644, 647,
	648, 649, 657, 708, 709, 721, 724, 762, 761, 760,
	763, 768, 791, 790, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 129, 138, 208,
	796, 273, 180, 341, 639, 171, 0, 710, 713, 723,
	745, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 743, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 770,
	778, 755, 319, 703, 781, 667, 689, 794, 692, 695,
	736, 650, 716, 248, 687, 651, 0, 671, 640, 680,
	641, 668, 705, 173, 666, 757, 719, 780, 206, 732,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 779,
	711, 0, 788, 209, 0, 728, 789, 307, 232, 0,
	0, 707, 765, 714, 753, 702, 738, 659, 727, 783,
	688, 734, 784, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 731, 777,
	683, 733, 735, 638, 730, 0, 645, 652, 793, 772,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	706, 715, 747, 699, 338, 259, 275, 295, 694, 267,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	0, 725, 0, 0, 0, 653, 646, 0, 0, 704,
	0, 0, 0, 658, 637, 673, 749, 0, 635, 185,
	233, 142, 754, 771, 701, 197, 348, 775, 698, 697,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 746, 289, 685, 636, 758, 669, 681, 164, 677,
	281, 252, 337, 0, 722, 280, 210, 327, 742, 776,
	336, 690, 797, 345, 350, 0, 712, 656, 304, 174,
	0, 131, 0, 266, 169, 202, 700, 737, 670, 161,
	744, 726, 764, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 696, 292, 291, 691, 193, 752, 729, 642, 274,
	740, 198, 130, 316, 353, 147, 204, 321, 634, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 682, 741, 751, 272, 294, 323, 149, 311, 678,
	679, 684, 748, 283, 759, 769, 782, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 643, 0, 309,
	340, 355, 151, 665, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 663, 664, 661, 0, 662,
	717, 718, 785, 786, 787, 750, 655, 0, 766, 767,
	0, 0, 0, 0, 0, 756, 773, 774, 739, 795,
	693, 660, 644, 647, 648, 649, 657, 708, 709, 721,
	724, 762, 761, 760, 763, 768, 791, 790, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 129, 138, 208, 796, 273, 180, 341, 639, 171,
	0, 710, 713, 723, 745, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 743, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 770, 778, 755, 319, 703, 781, 667,
	689, 794, 692, 695, 736, 650, 716, 248, 687, 651,
	0, 671, 640, 680, 641, 668, 705, 173, 666, 757,
	719, 780, 206, 732, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 779, 711, 0, 788, 209, 0, 728,
	789, 307, 232, 0, 0, 707, 765, 714, 753, 702,
	738, 659, 727, 783, 688, 734, 784, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 731, 777, 683, 733, 735, 638, 730, 0,
	645, 652, 793, 772, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 706, 715, 747, 699, 338, 259,
	275, 295, 694, 267, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 725, 0, 0, 0, 653,
	646, 0, 0, 704, 0, 0, 0, 658, 637, 673,
	749, 0, 635, 185, 233, 142, 754, 771, 701, 197,
	348, 775, 698, 697, 269, 0, 313, 187, 207, 631,
	126, 140, 627, 186, 244, 746, 289, 685, 636, 758,
	669, 681, 164, 677, 281, 252, 337, 0, 722, 280,
	210, 327, 742, 776, 336, 690, 797, 345, 350, 0,
	712, 656, 304, 174, 0, 131, 0, 266, 169, 202,
	700, 737, 670, 161, 744, 726, 764, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 696, 292, 291, 691, 193,
	752, 729, 642, 274, 740, 198, 130, 316, 353, 147,
	204, 321, 634, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 682, 741, 751, 272, 294,
	323, 149, 311, 678, 679, 684, 748, 283, 759, 769,
	782, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 643, 0, 309, 340, 355, 151, 665, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 663,
	664, 661, 0, 662, 717, 718, 785, 786, 787, 750,
	655, 0, 766, 767, 0, 0, 0, 0, 0, 756,
	773, 774, 739, 795, 693, 660, 644, 647, 648, 649,
	657, 708, 709, 721, 724, 762, 761, 760, 763, 768,
	791, 790, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 129, 138, 208, 796, 273,
	180, 341, 639, 171, 0, 710, 713, 723, 745, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	743, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 770, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 173,
	499, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 577, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 0, 0, 1497, 0, 79,
	0, 0, 0, 500, 524, 523, 526, 527, 528, 529,
	0, 0, 0, 525, 530, 559, 560, 1498, 0, 0,
	497, 515, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 259, 275, 295, 0, 267, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 591, 0, 514,
	0, 0, 509, 510, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 567, 0,
	0, 197, 348, 0, 0, 589, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 574,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 566,
	0, 280, 210, 327, 0, 0, 336, 0, 457, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 578, 590, 584, 586, 585, 582, 583, 581, 580,
	579, 592, 568, 569, 570, 571, 572, 0, 0, 0,
	575, 0, 587, 588, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 539, 540, 544, 545, 553, 552, 551,
	554, 555, 557, 556, 558, 536, 537, 538, 541, 542,
	543, 546, 547, 550, 548, 549, 573, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 35,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 173, 499, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	577, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 564, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 500, 524, 523, 526, 527,
	528, 529, 0, 0, 0, 525, 530, 559, 560, 0,
	0, 0, 497, 515, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 259, 275, 295, 0, 267, 0, 0,
	0, 0, 0, 512, 513, 0, 0, 0, 0, 591,
	0, 514, 0, 0, 509, 510, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	567, 0, 0, 197, 348, 0, 0, 589, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 574, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 566, 0, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 578, 590, 584, 586, 585, 582, 583,
	581, 580, 579, 592, 568, 569, 570, 571, 572, 0,
	0, 0, 575, 0, 587, 588, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 539, 540, 544, 545, 553,
	552, 551, 554, 555, 557, 556, 558, 536, 537, 538,
	541, 542, 543, 546, 547, 550, 548, 549, 573, 129,
	138, 208, 77, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 502, 0,
	0, 0, 173, 499, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 577, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 564, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 500, 524, 523, 526,
	527, 528, 529, 0, 0, 0, 525, 530, 559, 560,
	0, 0, 0, 497, 515, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 259, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 512, 513, 493, 0, 0, 0,
	591, 0, 514, 0, 0, 509, 510, 511, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 567, 0, 0, 197, 348, 0, 0, 589, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 574, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 566, 0, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 578, 590, 584, 586, 585, 582,
	583, 581, 580, 579, 592, 568, 569, 570, 571, 572,
	0, 0, 0, 575, 0, 587, 588, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 539, 540, 544, 545,
	553, 552, 551, 554, 555, 557, 556, 558, 536, 537,
	538, 541, 542, 543, 546, 547, 550, 548, 549, 573,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 173, 499, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 577, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 564, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 958, 0, 500, 524, 523,
	526, 527, 528, 529, 0, 0, 0, 525, 530, 559,
	560, 0, 0, 0, 497, 515, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 259, 275, 295, 0, 267,
	0, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	0, 591, 0, 514, 0, 0, 509, 510, 511, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 567, 0, 0, 197, 348, 0, 0, 589,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 574, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 566, 0, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 578, 590, 584, 586, 585,
	582, 583, 581, 580, 579, 592, 568, 569, 570, 571,
	572, 0, 0, 0, 575, 0, 587, 588, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 539, 540, 544,
	545, 553, 552, 551, 554, 555, 557, 556, 558, 536,
	537, 538, 541, 542, 543, 546, 547, 550, 548, 549,
	573, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	502, 0, 0, 0, 173, 499, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 577, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 564, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 500, 524,
	523, 526, 527, 528, 529, 0, 0, 0, 525, 530,
	559, 560, 0, 0, 0, 497, 515, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 259, 275, 295, 0,
	267, 0, 0, 0, 0, 0, 512, 513, 1385, 0,
	0, 0, 591, 0, 514, 0, 0, 509, 510, 511,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 567, 0, 0, 197, 348, 0, 0,
	589, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 574, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 566, 0, 280, 210, 327, 0,
	0, 336, 0, 457, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 578, 590, 584, 586,
	585, 582, 583, 581, 580, 579, 592, 568, 569, 570,
	571, 572, 0, 0, 0, 575, 0, 587, 588, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 539, 540,
	544, 545, 553, 552, 551, 554, 555, 557, 556, 558,
	536, 537, 538, 541, 542, 543, 546, 547, 550, 548,
	549, 573, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 173, 499, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 577, 209, 0, 0, 463, 307,
	232, 0, 0, 0, 0, 564, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 500,
	524, 1429, 526, 527, 528, 529, 0, 0, 0, 525,
	530, 559, 560, 0, 0, 0, 497, 515, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 259, 275, 295,
	0, 267, 0, 0, 0, 0, 0, 512, 513, 1385,
	0, 0, 0, 591, 0, 514, 0, 0, 509, 510,
	511, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 567, 0, 0, 197, 348, 0,
	0, 589, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 574, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 566, 0, 280, 210, 327,
	0, 0, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 578, 590, 584,
	586, 585, 582, 583, 581, 580, 579, 592, 568, 569,
	570, 571, 572, 0, 0, 0, 575, 0, 587, 588,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 539,
	540, 544, 545, 553, 552, 551, 554, 555, 557, 556,
	558, 536, 537, 538, 541, 542, 543, 546, 547, 550,
	548, 549, 573, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 173, 499, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 577, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 564, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	500, 524, 1426, 526, 527, 528, 529, 0, 0, 0,
	525, 530, 559, 560, 0, 0, 0, 497, 515, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 259, 275,
	295, 0, 267, 0, 0, 0, 0, 0, 512, 513,
	1385, 0, 0, 0, 591, 0, 514, 0, 0, 509,
	510, 511, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 567, 0, 0, 197, 348,
	0, 0, 589, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 574, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 566, 0, 280, 210,
	327, 0, 0, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 578, 590,
	584, 586, 585, 582, 583, 581, 580, 579, 592, 568,
	569, 570, 571, 572, 0, 0, 0, 575, 0, 587,
	588, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	539, 540, 544, 545, 553, 552, 551, 554, 555, 557,
	556, 558, 536, 537, 538, 541, 542, 543, 546, 547,
	550, 548, 549, 573, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 173, 499, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 577, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 564, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 1271,
	0, 500, 524, 523, 526, 527, 528, 529, 0, 0,
	0, 525, 530, 559, 560, 0, 0, 0, 497, 515,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 259,
	275, 295, 0, 267, 0, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 591, 0, 514, 0, 0,
	509, 510, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 567, 0, 0, 197,
	348, 0, 0, 589, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 574, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 566, 0, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 578,
	590, 584, 586, 585, 582, 583, 581, 580, 579, 592,
	568, 569, 570, 571, 572, 0, 0, 0, 575, 0,
	587, 588, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 539, 540, 544, 545, 553, 552, 551, 554, 555,
	557, 556, 558, 536, 537, 538, 541, 542, 543, 546,
	547, 550, 548, 549, 573, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 173, 499,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 577, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 564, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 500, 524, 523, 526, 527, 528, 529, 0,
	0, 0, 525, 530, 559, 560, 0, 0, 0, 497,
	515, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	259, 275, 295, 0, 267, 0, 0, 0, 0, 0,
	512, 513, 0, 0, 0, 0, 591, 0, 514, 0,
	0, 509, 510, 511, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 567, 0, 0,
	197, 348, 0, 0, 589, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 574, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 566, 0,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	578, 590, 584, 586, 585, 582, 583, 581, 580, 579,
	592, 568, 569, 570, 571, 572, 0, 0, 0, 575,
	0, 587, 588, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 539, 540, 544, 545, 553, 552, 551, 554,
	555, 557, 556, 558, 536, 537, 538, 541, 542, 543,
	546, 547, 550, 548, 549, 573, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 577, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 500, 524, 523, 526, 527, 528, 529,
	0, 0, 0, 525, 530, 559, 560, 0, 0, 0,
	0, 515, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 259, 275, 295, 0, 267, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 591, 0, 514,
	0, 0, 509, 510, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 567, 0,
	0, 197, 348, 0, 0, 589, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 574,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 566,
	0, 280, 210, 327, 0, 0, 336, 0, 457, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 578, 590, 584, 586, 585, 582, 583, 581, 580,
	579, 592, 568, 569, 570, 571, 572, 1432, 1433, 1434,
	575, 0, 587, 588, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 539, 540, 544, 545, 553, 552, 551,
	554, 555, 557, 556, 558, 536, 537, 538, 541, 542,
	543, 546, 547, 550, 548, 549, 573, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 577,
	209, 0, 0, 463, 307, 232, 0, 0, 0, 0,
	564, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 500, 524, 523, 526, 527, 528,
	529, 0, 0, 0, 525, 530, 559, 560, 0, 0,
	0, 0, 515, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 259, 275, 295, 0, 267, 0, 0, 0,
	0, 0, 512, 513, 0, 0, 0, 0, 591, 0,
	514, 0, 0, 509, 510, 511, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 567,
	0, 0, 197, 348, 0, 0, 589, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	574, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	566, 2721, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 578, 590, 584, 586, 585, 582, 583, 581,
	580, 579, 592, 568, 569, 570, 571, 572, 0, 0,
	0, 575, 0, 587, 588, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 539, 540, 544, 545, 553, 552,
	551, 554, 555, 557, 556, 558, 536, 537, 538, 541,
	542, 543, 546, 547, 550, 548, 549, 573, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	577, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 564, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 958, 0, 500, 524, 523, 526, 527,
	528, 529, 0, 0, 0, 525, 530, 559, 560, 0,
	0, 0, 0, 515, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 259, 275, 295, 0, 267, 0, 0,
	0, 0, 0, 512, 513, 0, 0, 0, 0, 591,
	0, 514, 0, 0, 509, 510, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	567, 0, 0, 197, 348, 0, 0, 589, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 574, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 566, 0, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 578, 590, 584, 586, 585, 582, 583,
	581, 580, 579, 592, 568, 569, 570, 571, 572, 0,
	0, 0, 575, 0, 587, 588, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 539, 540, 544, 545, 553,
	552, 551, 554, 555, 557, 556, 558, 536, 537, 538,
	541, 542, 543, 546, 547, 550, 548, 549, 573, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 577, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 564, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 500, 524, 523, 526,
	527, 528, 529, 0, 0, 0, 525, 530, 559, 560,
	0, 0, 0, 0, 515, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 259, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 512, 513, 0, 0, 0, 0,
	591, 0, 514, 0, 0, 509, 510, 511, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 567, 0, 0, 197, 348, 0, 0, 589, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 574, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 566, 0, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 578, 590, 584, 586, 585, 582,
	583, 581, 580, 579, 592, 568, 569, 570, 571, 572,
	0, 0, 0, 575, 0, 587, 588, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 539, 540, 544, 545,
	553, 552, 551, 554, 555, 557, 556, 558, 536, 537,
	538, 541, 542, 543, 546, 547, 550, 548, 549, 573,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 425, 319, 419, 430, 413, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 467, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 420, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 259, 275, 295, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 411, 414, 0, 0, 0,
	185, 233, 142, 0, 0, 418, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 422, 289, 0, 0, 426, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 280, 210, 327, 0,
	429, 336, 0, 457, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 0, 470, 294, 323, 149, 311,
	415, 416, 417, 423, 424, 427, 428, 431, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 270, 421, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 425, 319, 419, 430, 413, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 420,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 259, 275,
	295, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 411, 414, 0,
	0, 0, 185, 233, 142, 0, 0, 418, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 422, 289, 0, 0, 426, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 280, 210,
	327, 0, 429, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 0, 408, 294, 323,
	149, 311, 415, 416, 417, 423, 424, 427, 428, 431,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 438, 439, 440, 441,
	445, 446, 450, 451, 460, 459, 458, 461, 462, 465,
	464, 466, 442, 443, 444, 447, 448, 449, 452, 453,
	456, 454, 455, 0, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 270, 421,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 1475, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1477, 1479, 0, 0, 0, 0, 0,
	0, 124, 0, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 259,
	275, 295, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 1478, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 1475, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1477, 1479, 0, 0, 0, 0,
	0, 0, 124, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	1473, 275, 295, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 1478, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 438, 439,
	440, 441, 445, 446, 450, 451, 460, 459, 458, 461,
	462, 465, 464, 466, 442, 443, 444, 447, 448, 449,
	452, 453, 456, 454, 455, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 980, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 981, 0, 984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 977, 976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 0, 0,
	338, 259, 275, 295, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 280, 210, 327, 0, 0, 336, 0, 457, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 2646, 0, 0, 0, 0, 0, 0,
	173, 2644, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 463, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 259, 275, 295, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 2645, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	438, 439, 440, 441, 445, 446, 450, 451, 460, 459,
	458, 461, 462, 465, 464, 466, 442, 443, 444, 447,
	448, 449, 452, 453, 456, 454, 455, 0, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 259, 275, 295, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 438, 439, 440, 441, 445, 446, 450, 451, 460,
	459, 458, 461, 462, 465, 464, 466, 442, 443, 444,
	447, 448, 449, 452, 453, 456, 454, 455, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 478, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 1770, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 259, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 438, 439, 440, 441, 445, 446, 450, 451,
	460, 459, 458, 461, 462, 465, 464, 466, 442, 443,
	444, 447, 448, 449, 452, 453, 456, 454, 455, 0,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 981, 0, 984,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 259, 275, 295, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 438, 439, 440, 441, 445, 446, 450,
	451, 460, 459, 458, 461, 462, 465, 464, 466, 442,
	443, 444, 447, 448, 449, 452, 453, 456, 454, 455,
	0, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 259, 275, 295, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 280, 210, 327, 0,
	0, 336, 0, 457, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 1258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 463, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 259, 275, 295,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 280, 210, 327,
	0, 0, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 438, 439, 440, 441, 445,
	446, 450, 451, 460, 459, 458, 461, 462, 465, 464,
	466, 442, 443, 444, 447, 448, 449, 452, 453, 456,
	454, 455, 0, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 259, 275,
	295, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 280, 210,
	327, 0, 0, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 438, 439, 440, 441,
	445, 446, 450, 451, 460, 459, 458, 461, 462, 465,
	464, 466, 442, 443, 444, 447, 448, 449, 452, 453,
	456, 454, 455, 0, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 259,
	275, 295, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	463, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 1198, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	259, 275, 295, 0, 267, 0, 994, 993, 1003, 1004,
	996, 997, 998, 999, 1000, 1001, 1002, 995, 0, 0,
	1005, 0, 0, 0, 0, 0, 0, 0, 0, 1140,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 457, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	280, 210, 327, 0, 0, 336, 0, 0, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 35, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 463, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 1470,
	209, 0, 0, 2126, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 259, 275, 295, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 457, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 280, 210, 327, 0, 0, 336, 0, 0,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 0, 0, 0, 0, 0, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	208, 77, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 1130, 463, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 2135, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 0, 1129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 259, 275, 295, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 457,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 280, 210, 327, 0, 0, 336, 0,
	0, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 437,
	438, 439, 440, 441, 445, 446, 450, 451, 460, 459,
	458, 461, 462, 465, 464, 466, 442, 443, 444, 447,
	448, 449, 452, 453, 456, 454, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 463, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 2133, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 259, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	457, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 280, 210, 327, 0, 0, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	437, 438, 439, 440, 441, 445, 446, 450, 451, 460,
	459, 458, 461, 462, 465, 464, 466, 442, 443, 444,
	447, 448, 449, 452, 453, 456, 454, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 0, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 259, 275, 295, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 2112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 280, 210, 327, 0, 0,
	336, 0, 0, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 0, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 259, 275, 295, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 0, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 259, 275, 295,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 280, 210, 327,
	0, 0, 336, 0, 0, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 1099, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 0,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 259, 275,
	295, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 280, 210,
	327, 0, 0, 336, 0, 0, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	595, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	0, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 259,
	275, 295, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 280,
	210, 327, 0, 0, 336, 0, 0, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 0, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	259, 275, 295, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 121, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	280, 210, 327, 0, 0, 336, 0, 0, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 0, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 259, 275, 295, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 280, 210, 327, 0, 0, 336, 0, 0, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 259, 275, 295, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 280, 210, 327, 0, 0, 336, 0, 0,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 259, 275, 295, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 280, 210, 327, 0, 0, 336, 0,
	0, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 259, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 280, 210, 327, 0, 0, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 615, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 611, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 616, 614, 605, 606, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 612, 613, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 0, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 259, 275, 295, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 280, 210, 327, 0, 0,
	336, 0, 0, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 1124,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 0, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 259, 275, 295, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	602, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	615, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 611, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 616, 614, 605, 606, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 35, 0, 70, 38, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 58,
	0, 0, 129, 138, 208, 76, 273, 180, 341, 40,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 612, 613, 270, 79, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 0, 0, 0, 0, 0, 0,
	0, 2471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 72, 45,
	44, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	75, 74, 0, 0, 0, 0, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 57, 0, 2473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2474, 73, 0, 52, 53, 60, 0, 61, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77,
}

var yyPact = [...]int{
	4195, -1000, -322, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1923, -1000, -1000, -1000, -1000, -1000,
	-1000, 1077, 290, -1000, 276, 546, 28950, 628, 2889, 29912,
	-1000, -1000, -1000, 156, 503, 29912, 429, 446, 1267, 1809,
	1251, 31, -65, -74, 101, 18848, 18366, -1000, 1970, 1972,
	-1000, -1000, 559, 36, -1000, -1000, -1000, 21253, 172, -1000,
	-1000, 1910, 1921, 1724, -1000, 13074, 559, 559, 28469, 31836,
	-1000, 1968, 29912, 11629, -1000, 618, 29912, -151, 554, 554,
	468, 554, 554, 627, -1000, 852, -1000, -1000, -1000, -1000,
	29912, 23177, 555, 29431, 555, 555, 555, 555, 555, 555,
	555, 29912, -1000, 711, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 29912, 1249, 1842, 918,
	104, -1000, -1000, -1000, 934, -1000, 334, 319, 430, 264,
	117, 944, 1907, -1000, 1563, 1910, 1910, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 328, 597, 214, 172, 837, -1000,
	1839, 1838, 1126, 1837, 581, 1836, 1619, -38, -1000, 1247,
	29912, -1000, -1000, 1115, 1105, 1658, 1477, 664, 1656, -1000,
	-1000, 355, 553, 1612, 392, 1612, 1612, 1612, 1612, 1612,
	-76, 1612, 1612, 1612, 59, 1612, 135, 1612, 1612, 1612,
	1612, 1612, 1280, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 369, 1464, 1537,
	1654, -1000, 1624, 1899, 623, -1000, -96, 1539, 23658, -1000,
	1563, -1000, -1000, -1000, 1276, 1834, 1043, 15960, 1774, -1000,
	-1000, 969, 1954, -1000, 20291, 704, -1000, 15960, 3232, 1563,
	-1000, -1000, 1563, -1000, -1000, -1000, 650, -1000, -1000, 17884,
	17884, 17884, 17884, 17884, 17884, 17884, 17884, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563,
	1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563,
	1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563, -1000,
	-1000, 1563, -1000, 12593, 1563, 1563, 1563, 1563, 1563, 1563,
	1563, 1563, 1563, 1563, 1563, 1563, 15960, 1563, 1563, 1563,
	1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563,
	1563, 1563, 1563, 27988, 26064, 29912, 1547, 1439, -1000, -1000,
	700, 1560, -93, 31355, -1000, -1000, -1000, -1000, 30393, 25583,
	836, -1000, -1000, -1000, -1000, 1832, -1000, -1000, 697, -1000,
	1923, -1000, -1000, 1429, 524, -1000, 3736, 24599, -1000, -1000,
	-1000, 1618, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29431, 1896,
	583, 1246, 868, 1245, 1244, 1242, 23177, 23177, 554, 1240,
	1559, 596, 1558, 595, 1277, 29912, 1870, 1653, 29912, 1239,
	1238, 1236, 1235, 23177, 23177, -1000, 11145, -1000, -1000, 918,
	-1000, 1157, 15960, 554, 554, 29912, 29912, 29912, 29912, -1000,
	-1000, 918, 918, 918, 918, 908, 1951, 908, -1000, 908,
	-1000, -1000, 15960, -1000, 17884, 22696, 733, -1000, -1000, -1000,
	1229, 317, -1000, -1000, -1000, -1000, -1000, -1000, 1227, 581,
	581, -1000, 1155, 581, 1508, -1000, 834, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 581,
	-1000, 15479, -320, -1000, -1000, 1548, -1000, 256, -1000, -1000,
	491, 491, 151, 23177, 23177, 23177, -1000, 1612, 29431, -1000,
	1612, 1612, 1612, -77, 1612, 1612, -1000, -1000, 1612, -1000,
	-1000, -1000, -1000, -1000, 1612, -1000, -1000, -1000, 1612, 1612,
	-1000, 1612, 1612, -1000, -1000, -1000, -1000, -1000, 23177, 491,
	145, 1540, 491, 23177, 23177, 1724, -1000, -1000, 172, -1000,
	-1000, 29912, -103, 23658, 1539, 1894, 9693, -1000, -1000, -1000,
	1964, 800, 1516, -1000, -1000, 1538, -1000, 1052, 696, 1120,
	1738, -1000, -1000, -1000, 29912, -1000, 15960, 15960, 1080, -1000,
	22215, -1000, -1000, -1000, -1000, 9209, 810, 17884, 1028, 814,
	17884, 17884, 17884, 17884, 17884, 17884, 17884, 17884, 17884, 17884,
	17884, 17884, 17884, 17884, 17884, 1117, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1226, -1000, 172, 1759, 1759, 720,
	720, 720, 720, 720, 720, 720, 24620, 1890, 14036, 14036,
	14036, 1890, 1276, 1276, 14036, 14036, 14036, 14036, 14036, 14036,
	1890, 1890, 14036, 1276, 1276, 1276, 1276, 14036, 14036, 14036,
	14036, 1890, 14036, 14036, 14036, 1890, 1276, 1410, 850, 12593,
	14036, 14036, 14036, 1276, 15960, 15960, 14998, 14517, 16441, 14036,
	14036, 1890, 860, 850, 30393, -1000, -1000, 17403, -1000, -1000,
	-1000, -1000, -1000, 1276, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 29431, 29431, 14036, 14036, 14036, 14036, 797, 29912,
	-1000, 1451, 1679, -1000, -1000, -1000, 1892, 25102, 19810, -1000,
	797, 1440, 26064, 29912, -1000, -1000, 26064, 29912, 8725, 30874,
	1503, -1000, -91, -106, -93, -1000, -1000, 689, -1000, -1000,
	-1000, 12111, -1000, 10177, 1910, 1724, 6305, 10661, -1000, 24599,
	1618, -1000, -48, -1000, -1000, -1000, 1588, -1000, 1588, 281,
	33, 1588, 1588, 1588, 1588, 1588, -11, -11, -11, -11,
	-1, -1000, -1000, -1000, -1000, -1000, 1617, 1615, -1000, 1588,
	1588, 1588, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1603, 257, 1598, 1598, 1598, 1598, 1598, 520, 520,
	-1000, 15960, 1622, -1000, 29912, -1000, 1862, -1000, 321, 1614,
	1467, -1000, 160, 1366, 29912, -1000, 29912, 29912, 23177, 23177,
	23177, 606, -1000, 29912, 1514, -1000, -1000, -1000, -1000, -1000,
	1487, -1000, 1366, -1000, -1000, -1000, -1000, -1000, 850, 1225,
	1224, -1000, -1000, -1000, 933, -1000, -1000, -1000, -1000, 918,
	29912, 29912, 29912, 1881, 918, 850, 744, 1623, 1563, 1276,
	-1000, -1000, 1222, -1000, 1508, 1508, -1000, 1508, 581, 1759,
	1508, -1000, 1379, 1857, 1154, 29912, -1000, 23658, -41, -1000,
	-130, 27507, -1000, -1000, -1000, 27507, -1000, 59, 181, -1000,
	594, -1000, 1376, -1000, -1000, -1000, -1000, 1612, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27507, 105, 143,
	27507, 1487, 1948, 1890, 1276, 318, -1000, -1000, -1000, 1563,
	1337, 693, -1000, 1732, 1043, 1043, 15960, -1000, -1000, -1000,
	10177, 1911, -1000, 1746, 1745, 1671, -1000, -1000, 810, 824,
	-1000, -1000, 1102, -1000, -1000, -1000, -1000, -1000, 687, 1563,
	-1000, 3250, -1000, -1000, -1000, -1000, 1028, 17884, 17884, 17884,
	744, 3250, 3537, 888, 1521, 720, 858, 858, 721, 721,
	721, 721, 721, 905, 905, -1000, -1000, -1000, 1276, -1000,
	-1000, -1000, 14036, 1370, -1000, -1000, 850, 685, 1370, 1370,
	14036, -168, -168, 1276, 1370, 1370, 1370, 1276, 1370, 14036,
	14036, 1370, -168, -168, -168, -168, 1370, 1370, 1370, 1370,
	14036, 1370, 1370, 1370, 14036, -1000, 15960, -1000, 1276, 1370,
	1370, 1370, -1000, 859, 1061, 774, 1947, 1370, 767, 1946,
	1370, 1304, 17884, 17884, 17884, 1370, 1370, 14036, 996, -1000,
	15960, 1276, -1000, 1208, 1506, 1505, 1370, 1276, 1504, 1370,
	1370, 209, 1563, -1000, 10177, 26064, 26064, 26064, 26064, 26064,
	-1000, 1714, 1708, -1000, 1705, 1673, 1709, 23658, 1373, 1276,
	297, 25102, -1000, 1563, -1000, 21734, 660, 615, 614, 604,
	1931, 26064, 1453, -1000, 1453, -1000, 680, -1000, -1000, 30393,
	-93, -97, -1000, -1000, 1503, -1000, 1125, -1000, -1000, 850,
	-1000, 676, 1834, 1890, 1500, 5821, -1000, -1000, -1000, -1000,
	524, -1000, -1000, -1000, 1608, 4756, -1000, 1765, 707, 705,
	1195, 1761, -1000, -1000, 582, -59, -1000, -1000, 1098, -11,
	-11, 1588, 1588, 242, 1588, -1000, -11, -1000, -1000, -1000,
	689, 1818, 689, 689, 689, 689, -11, 1153, 1153, -1000,
	-1000, -1000, -1000, 1095, -1000, 1603, -1000, 1084, -1000, -1000,
	-1000, -1000, -1000, -1000, 992, 1652, 29431, 172, 1876, -1000,
	1936, -1000, -1000, 564, 65, 23177, 158, 368, 179, -1000,
	593, -1000, 590, -1000, -1000, -1000, -1000, -1000, -1000, 29912,
	23177, -1000, -1000, 1931, 1221, 1220, -1000, -1000, -1000, 908,
	918, 1813, -1000, -1000, 17884, 23177, -1000, 340, -1000, -1000,
	-1000, -1000, 797, 622, -1000, -1000, -80, -1000, -1000, 579,
	673, 672, 574, -1000, 76, 23177, -1000, 29431, -1000, 1945,
	1944, 102, 1941, 23177, 1738, -1000, 1498, -1000, 677, 654,
	678, 529, 529, -1000, 818, 529, 780, -1000, 180, -1000,
	9693, 9693, 1730, -1000, -1000, -1000, 29912, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8241, 14036, -1000, 744,
	3250, 3276, -1000, 17884, -1000, 1370, 14036, -168, 7757, -168,
	-168, 1370, -1000, 27026, -1000, -168, -168, -168, -168, -168,
	-168, 1370, 1370, -168, -1000, -1000, -1000, -1000, -168, -168,
	-168, -168, 1370, -168, -168, -168, 1276, 850, -1000, -1000,
	-1000, -1000, 175, 1117, 175, 17884, 17884, -1000, 17884, 17884,
	-1000, -1000, 17884, 3014, 2991, 2937, -212, -1000, 1490, 828,
	-1000, 15960, 1074, -1000, -1000, 17884, 17884, -1000, -1000, -1000,
	-1000, 1650, 10177, 1563, 6789, -1000, 29431, 1459, -1000, 833,
	825, 1679, 1602, 1649, 1637, -1000, -1000, -1000, -1000, 1687,
	-1000, 1674, -1000, -1000, 1582, -1000, -1000, 1495, 1563, 29431,
	17884, 660, -1000, 1563, 1563, 1563, 1923, 15960, 1453, -1000,
	-1000, 731, -1000, -1000, -109, -136, -1000, -1000, -1000, 9693,
	-1000, 6305, -1000, 6305, -1000, 24139, 518, 1768, 519, -1000,
	1195, -1000, -1000, 1195, -1000, -1000, -1000, 1599, -1000, 963,
	-1000, -1000, -1000, -1000, -1000, 17884, 1962, -1000, 1763, -1000,
	1762, 1152, -1000, -1000, 1343, 689, 689, -11, -1000, -1000,
	1588, -1000, 689, -1000, 775, -1000, -1000, -1000, -1000, 689,
	1363, -1000, 1341, 1493, -1000, 1339, 83, 29912, -1000, -1000,
	-1000, 1648, -1000, -1000, -1000, 1315, 1492, -1000, 3736, 1219,
	1214, 1213, -231, 245, -1000, 23177, 93, 160, 411, 1209,
	29912, 23177, -1000, -1000, -1000, -1000, -1000, 918, -1000, 17884,
	3250, 1366, -1000, -1000, -11, 29912, -1000, 23177, 730, 26545,
	23177, 100, 131, -1000, 23177, 23177, 1940, 23177, 1487, 1671,
	318, 3483, 1195, 647, -1000, -1000, 535, -1000, 3052, 1761,
	1207, 26043, 25562, 29431, 1760, 1756, 1205, 29912, 29431, -1000,
	-1000, 25081, 1203, 15960, -1000, 29431, 29431, 671, -1000, -1000,
	-1000, 1426, 13074, -1000, -1000, 1276, -1000, 17884, 3250, -168,
	-1000, -1000, -1000, -1000, 634, -1000, -1000, -168, -1000, -1000,
	1202, -1000, -1000, -1000, -1000, -1000, -1000, -168, -168, -1000,
	-1000, -1000, -1000, -1000, -168, -1000, -1000, -1000, -1000, 1276,
	1588, 1588, -1000, 1588, 1598, -1000, 1588, 12, 1588, 9,
	1276, 1276, 2787, 2708, 1884, 873, 1208, 17884, 17884, 17884,
	1563, -164, -1000, 850, 15960, 1471, 1367, -1000, 1850, 1463,
	1480, -1000, -1000, 13555, 1276, 1743, 1337, -1000, 21253, 1333,
	-1000, 1923, 10177, 15960, 15960, -1000, -1000, 15960, 1593, -1000,
	15960, -1000, -1000, -1000, -1000, 29431, 267, -1000, 15960, 1333,
	849, -1000, 29431, 29431, 29431, 1910, 850, -1000, -1000, -1000,
	-1000, 5821, -1000, 1330, -1000, 1588, 1588, 1755, -1000, 707,
	-1000, -1000, -1000, 29431, -1000, 3250, 42, -1000, -1000, -1000,
	-1000, -1000, -1000, 689, -1000, -1000, -1000, -1000, -1000, -11,
	1148, -11, 1081, -1000, 1075, -1000, -1000, -271, 1586, -1000,
	172, 29912, 149, 564, -1000, 3736, 3736, 3736, 119, 128,
	-1000, 948, -1000, -1000, -1000, 1146, 1144, 1143, 1366, 165,
	945, 134, -1000, 1875, -1000, -1000, -1000, 3250, -73, -1000,
	131, -1000, -1000, -1000, 131, -1000, -1000, 141, 1487, 1487,
	23177, 1487, -1000, -1000, 25081, 500, 3736, 3736, 1622, 707,
	1754, 519, -1000, -1000, -1000, -1000, -1000, -1000, 1199, -1000,
	684, -1000, 561, 500, 25081, 850, 759, 1854, 9693, 1929,
	26064, -1000, -1000, -1000, 3250, -1000, 7273, -1000, 776, -1000,
	-1000, -1000, -1000, -1000, -1000, 298, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 17884, 17884, 17884, 17884, -1000, 1208,
	1208, 1208, 17884, 1276, 1142, 850, 17884, 17884, 1749, -1000,
	1563, -1000, -1000, 1563, 174, -1000, 29431, 1910, -1000, 850,
	850, 850, 29431, 850, 1322, -1000, 1563, 19329, -1000, 23658,
	1319, 1319, 1319, -1000, 621, 24139, 1864, 1864, -1000, 1195,
	-1000, 1313, -1000, -1000, 689, -1000, 689, 1305, 1294, -1000,
	24139, -1000, 1906, -1000, 149, -1000, 1140, 229, 243, -1000,
	215, 206, 204, 202, 198, -1000, -1000, -1000, -1000, 397,
	119, -1000, -67, 1063, 827, 1829, 128, -1000, 1062, 1056,
	1044, 1031, 383, -1000, -1000, -1000, -1000, 169, 160, -1000,
	400, 1138, 1800, 1790, 1874, 1874, 84, 1487, 1393, 1291,
	-1000, -1000, 1196, -1000, -1000, 1585, 1195, 1584, -1000, 1182,
	-1000, -1000, 29431, -1000, 500, 1845, 1844, 1563, -1000, 1925,
	1920, 1453, 13074, -1000, -1000, 1923, 1919, -1000, -1000, 1208,
	1208, 1208, 1208, -1000, -1000, -1000, 86, -1000, -1000, 1208,
	1208, 1960, -1000, 1480, 1563, -1000, 172, -1000, -1000, 1302,
	-1000, 29431, -1000, -1000, 660, -1000, -1000, -1000, 621, -1000,
	1180, 818, 1136, -1000, -1000, -1000, -1000, 492, -1000, -1000,
	-1000, -1000, 1300, -1000, 308, 32239, -1000, -1000, -1000, -1000,
	-1000, -1000, 1808, 1807, 280, -1000, 1135, 1134, -1000, 373,
	1106, 708, -179, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 398, 1179, -1000, 133, -1000, -1000,
	557, 1770, 1773, 1918, -1000, 23177, -1000, -1000, 26064, -1000,
	-1000, 582, 582, 24139, 1622, 24139, -1000, -1000, -1000, 17884,
	-1000, 763, -176, 15960, 15960, 1929, -1000, 789, 15960, -1000,
	-1000, -1000, -1000, 1276, 178, -247, -1000, -1000, 10177, 1480,
	1276, -1000, -1000, -1000, -1000, -1000, 1023, -1000, 29912, 621,
	258, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15960, 15960, 5337, 32239, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 991, -1000, -1000, 1029, 365, 113, -1000,
	1873, -1000, 1582, 984, 1790, 1916, 1764, 1787, -1000, 1131,
	-233, 1453, 1290, 1567, 1286, 3250, 1284, -1000, 29431, -1000,
	29431, -1000, 850, 1478, -1000, 850, 1925, -1000, 1276, 203,
	203, 1475, -1000, 1728, -229, -252, 1469, -1000, -1000, 1566,
	-1000, 621, 326, -1000, 1041, 1039, 216, 176, 3274, -1000,
	-1000, -1000, -1000, -323, -1000, 120, -1000, 118, -1000, -1000,
	-1000, 1130, -1000, 1792, -1000, 1078, -1000, 1915, 1913, -1000,
	136, 1929, 621, 24139, 621, -1000, 763, 1742, 1468, -1000,
	1872, 15960, -176, -1000, -1000, 217, -1000, 762, 250, 743,
	-1000, 1759, -1000, -1000, 1727, -1000, 29431, -1000, 1162, 1161,
	865, -1000, 15960, 32239, 1905, 1904, 1888, 1835, 9693, 4859,
	-1000, -1000, -1000, -1000, -1000, 1040, 997, 20772, 1925, -1000,
	1275, -1000, -1000, 460, 29431, 1563, -1000, -1000, 863, -1000,
	-1000, -1000, -1000, -1000, 29431, -245, 1271, 320, -1000, -1000,
	894, 32239, -1000, 976, -324, 413, 172, 433, 17884, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 80, 1366, -176, 621,
	344, -1000, -1000, 217, -1000, -249, 1646, -1000, -1000, -1000,
	-1000, -1000, -1000, 32239, -1000, -325, 32239, 227, -1000, -1000,
	-1000, 4834, -1000, -1000, -1000, -1000, 173, -1000, -1000, 3250,
	23177, -1000, -1000, 1563, -1000, -254, 1636, 1604, 1939, -1000,
	-326, 4659, -327, 552, 32239, 1014, -1000, 15960, -1000, 433,
	-1000, 1366, 16922, -1000, -1000, 1959, -1000, 1956, 617, 617,
	4552, 862, 32239, -1000, -328, 551, 32239, -1000, 967, -1000,
	1208, 1276, -1000, -1000, -1000, 501, 1011, -1000, -1000, -1000,
	4374, -1000, -332, 32239, -1000, -1000, -1000, -1000, -1000, 544,
	4365, -334, -1000, 542, 32239, -1000,
}

var yyPgo = [...]int{
	0, 2348, 2347, 52, 2346, 173, 2345, 2344, 2343, 23,
	21, 16, 28, 2338, 2070, 2064, 2057, 2055, 2050, 2334,
	5, 2333, 2332, 2048, 2330, 2328, 2046, 2036, 2034, 2032,
	2326, 2324, 2321, 2030, 2026, 15, 2320, 26, 2316, 6,
	132, 149, 2315, 3, 2314, 2313, 10, 2311, 2308, 2024,
	2307, 2306, 2305, 96, 2304, 2022, 2020, 2302, 2016, 1988,
	2301, 2300, 1986, 1984, 1982, 2296, 152, 2294, 2293, 2292,
	228, 98, 136, 2290, 2289, 2288, 102, 76, 2125, 103,
	46, 108, 686, 2286, 30, 59, 170, 2279, 125, 122,
	2278, 141, 2277, 127, 94, 95, 2274, 2272, 147, 2271,
	2269, 2268, 119, 2267, 2266, 2902, 2263, 2262, 148, 2261,
	65, 49, 38, 2260, 2259, 2256, 2255, 2254, 25, 244,
	2253, 2251, 151, 2248, 2246, 77, 2244, 2243, 155, 2242,
	2240, 2237, 121, 41, 2236, 2235, 56, 2231, 58, 66,
	2229, 55, 2228, 126, 2227, 2226, 34, 27, 2225, 82,
	2224, 57, 2223, 128, 219, 1075, 2221, 14, 20, 18,
	2219, 32, 12, 7, 44, 63, 78, 118, 101, 2217,
	19, 37, 110, 93, 91, 39, 2213, 140, 2212, 89,
	138, 123, 124, 137, 2211, 2209, 2208, 1037, 2205, 111,
	84, 2203, 97, 1396, 143, 105, 2202, 86, 2200, 2192,
	2189, 85, 107, 2188, 2187, 48, 249, 197, 1762, 81,
	139, 2185, 40, 2184, 2183, 2181, 2886, 130, 87, 106,
	2180, 104, 43, 51, 2177, 2166, 2165, 2164, 2158, 2157,
	1336, 2156, 2155, 2154, 2153, 144, 114, 2152, 2150, 116,
	92, 2146, 2143, 2142, 2138, 113, 73, 135, 2136, 120,
	115, 117, 2132, 74, 2128, 2126, 50, 45, 2123, 2122,
	2118, 100, 99, 2117, 69, 33, 35, 72, 9, 88,
	83, 2113, 31, 2112, 2, 8, 11, 2111, 2108, 2107,
	2105, 2104, 2101, 2100, 90, 2098, 2096, 64, 2090, 2089,
	2087, 36, 2082, 2078, 2077, 129, 109, 42, 146, 188,
	13, 2075, 2074, 4, 2072, 112, 2066, 60, 2062, 54,
	2059, 2044, 62, 2042, 2040, 61, 2038, 2028, 142, 1710,
	465, 2018, 150, 133, 47, 75, 2012, 1999, 0, 1115,
	153, 134, 1978, 1950,
}

var yyR1 = [...]int{
	0, 327, 327, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 65, 3, 3, 8, 4,
	4, 4, 5, 5, 87, 87, 86, 86, 91, 6,
	6, 7, 7, 9, 9, 69, 69, 10, 11, 11,
	11, 11, 330, 330, 100, 100, 98, 98, 99, 99,
	172, 172, 12, 12, 12, 177, 177, 182, 182, 182,
	185, 185, 185, 185, 163, 164, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 301, 301,
	310, 310, 310, 311, 311, 309, 309, 309, 309, 309,
	313, 313, 314, 314, 312, 312, 312, 312, 316, 316,
	317, 317, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 304, 304, 304, 33,
	33, 33, 33, 34, 34, 34, 34, 34, 34, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	319, 319, 320, 320, 321, 321, 322, 322, 322, 322,
	323, 323, 323, 323, 323, 324, 324, 324, 324, 324,
	324, 324, 325, 325, 326, 326, 2, 282, 282, 283,
	283, 284, 284, 284, 284, 285, 285, 286, 286, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 24,
	204, 204, 303, 303, 303, 303, 297, 297, 297, 299,
	299, 298, 298, 298, 300, 300, 305, 305, 305, 305,
	305, 307, 307, 307, 307, 307, 307, 308, 308, 308,
	306, 306, 47, 47, 48, 48, 48, 152, 152, 152,
	13, 13, 13, 13, 13, 19, 21, 21, 36, 36,
	37, 22, 22, 22, 22, 38, 38, 39, 25, 25,
	25, 25, 25, 25, 45, 45, 45, 44, 44, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 46,
	46, 41, 41, 40, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 26, 26, 26, 26,
	26, 26, 18, 281, 281, 281, 35, 35, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 51, 258, 259,
	259, 259, 259, 259, 259, 259, 259, 246, 246, 247,
	223, 223, 223, 223, 223, 223, 223, 223, 222, 222,
	222, 222, 226, 226, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 225, 225, 225, 225, 225, 225,
	225, 225, 227, 227, 227, 227, 227, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 229, 229, 229, 229, 229, 229, 229, 229,
	245, 245, 230, 230, 239, 239, 240, 240, 240, 237,
	237, 238, 238, 233, 234, 241, 235, 235, 235, 236,
	236, 236, 244, 244, 244, 244, 231, 248, 248, 268,
	268, 267, 267, 266, 266, 266, 257, 257, 263, 263,
	263, 263, 263, 263, 263, 252, 252, 252, 251, 251,
	253, 253, 256, 256, 265, 265, 264, 264, 249, 249,
	249, 269, 269, 269, 269, 269, 250, 250, 250, 250,
	270, 254, 254, 255, 255, 255, 275, 276, 274, 274,
	274, 274, 274, 115, 115, 115, 260, 260, 260, 261,
	261, 261, 262, 262, 262, 279, 279, 278, 278, 49,
	50, 54, 54, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 151, 151, 151,
	202, 202, 273, 271, 271, 272, 272, 15, 15, 52,
	52, 302, 302, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 277, 277, 277, 17, 17, 55, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 83, 191, 191, 190, 190, 189, 189, 189,
	192, 192, 192, 220, 220, 220, 57, 57, 61, 61,
	64, 64, 64, 62, 63, 27, 28, 28, 28, 28,
	29, 203, 203, 59, 59, 60, 60, 60, 60, 75,
	75, 332, 332, 58, 333, 66, 67, 67, 68, 68,
	68, 195, 195, 72, 72, 72, 70, 70, 70, 71,
	71, 77, 77, 81, 81, 81, 81, 80, 80, 80,
	80, 154, 154, 159, 213, 213, 135, 135, 155, 155,
	160, 160, 160, 161, 161, 162, 162, 162, 162, 162,
	157, 157, 156, 156, 158, 123, 123, 211, 211, 211,
	211, 210, 210, 210, 210, 85, 85, 88, 88, 89,
	89, 89, 89, 92, 137, 137, 109, 109, 110, 110,
	110, 110, 110, 121, 121, 171, 171, 170, 170, 173,
	173, 90, 90, 90, 90, 95, 95, 96, 96, 97,
	97, 201, 201, 218, 218, 218, 101, 101, 101, 103,
	102, 102, 102, 102, 104, 104, 106, 107, 107, 105,
	105, 108, 111, 111, 111, 111, 112, 112, 82, 82,
	82, 82, 82, 82, 82, 188, 188, 114, 114, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 131,
	131, 131, 131, 131, 131, 116, 116, 116, 116, 116,
	116, 116, 76, 76, 132, 132, 132, 94, 93, 93,
	79, 79, 78, 78, 133, 133, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 126, 126, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 331,
	331, 128, 127, 127, 127, 127, 127, 127, 73, 73,
	73, 73, 73, 219, 219, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 144, 144,
	74, 74, 142, 142, 143, 145, 145, 141, 141, 141,
	118, 118, 118, 118, 118, 118, 118, 118, 120, 120,
	120, 146, 146, 134, 134, 84, 147, 147, 148, 149,
	149, 150, 150, 153, 165, 165, 165, 166, 166, 166,
	166, 122, 122, 167, 167, 167, 117, 117, 117, 117,
	117, 117, 117, 169, 169, 168, 168, 168, 168, 174,
	174, 136, 136, 139, 139, 138, 140, 175, 175, 179,
	179, 176, 176, 180, 180, 180, 180, 183, 183, 184,
	184, 184, 181, 181, 181, 178, 178, 178, 215, 215,
	215, 186, 186, 196, 196, 193, 193, 194, 194, 187,
	187, 232, 232, 200, 200, 199, 199, 199, 197, 197,
	197, 198, 198, 212, 212, 208, 208, 214, 214, 209,
	209, 216, 216, 217, 217, 280, 280, 242, 242, 290,
	290, 243, 243, 291, 291, 293, 293, 288, 288, 289,
	289, 292, 292, 30, 294, 294, 295, 295, 296, 296,
	296, 296, 31, 32, 32, 32, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	328, 329,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	14, 3, 11, 13, 2, 3, 1, 3, 4, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 4, 4, 15, 11, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	0, 3, 1, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 4, 4, 3,
	3, 2, 4, 5, 2, 3, 4, 2, 2, 3,
	3, 3, 3, 3, 4, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 2, 1, 2, 1, 2, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 4, 5, 7, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 2, 6, 0, 1, 0, 3, 0, 1,
	0, 2, 2, 4, 1, 2, 2, 2, 2, 2,
	0, 2, 1, 3, 3, 1, 3, 0, 1, 2,
	2, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 2, 2, 4, 2, 6, 1, 4,
	6, 3, 2, 0, 3, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 3, 2, 1, 1,
	3, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 6, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 0, 3, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	3, 1, 3, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -327, -1, -3, -8, -9, -10, -11, -12, -14,
	-49, -15, -16, -17, -55, -56, -57, -61, -62, -63,
	-59, -58, -23, -26, -18, -65, -27, -28, -29, -30,
	-31, -32, -33, -34, -4, 6, 7, -69, 9, 10,
	30, -51, 138, -50, 141, 140, 177, 142, 170, 64,
	282, -64, 285, 286, -332, -203, 222, 223, 20, 37,
	287, 289, 31, 32, 191, 239, 241, -5, -87, -6,
	8, 380, 139, 283, 172, 171, 26, 429, -328, 68,
	490, -149, 15, -66, -333, -66, -66, -66, -66, -66,
	-258, -201, 106, 68, 23, -198, 151, 87, 371, 147,
	-204, 235, 237, -196, -197, 199, 209, 44, 158, 157,
	148, 235, 148, 149, 151, 371, 147, 184, 183, 235,
	237, 148, -105, -216, 72, -206, 161, 440, 260, 426,
	247, 196, 282, 296, 298, 290, 325, 313, 427, 441,
	162, 217, 146, 311, 314, 358, 160, 250, 210, 272,
	442, 347, 353, 220, 285, 367, 443, 163, 214, 216,
	215, 204, 221, 36, 173, 309, 256, 302, 225, 199,
	444, 434, 300, 28, 194, 445, 355, 330, 259, 446,
	431, 254, 354, 305, 301, 144, 164, 158, 447, 331,
	335, 448, 359, 240, 449, 450, 451, 150, 246, 294,
	295, 452, 200, 361, 251, 329, 33, 159, 428, 48,
	181, 362, 38, 333, 37, 339, 453, 328, 323, 340,
	454, 455, 456, 457, 264, 262, 263, 265, 327, 293,
	322, 212, 53, 145, 337, 336, 338, 213, 357, 318,
	316, 458, 459, 255, 165, 460, 461, 303, 18, 462,
	463, 365, 176, 257, 258, 42, 464, 465, 466, 110,
	467, 468, 469, 356, 332, 334, 198, 114, 306, 155,
	470, 261, 269, 430, 244, 111, 363, 299, 472, 289,
	180, 175, 366, 278, 473, 223, 474, 475, 476, 167,
	477, 238, 237, 286, 270, 112, 287, 349, 218, 478,
	479, 480, 481, 208, 193, 369, 360, 52, 222, 344,
	482, 273, 292, 157, 224, 483, 248, 283, 43, 7,
	211, 252, 350, 271, 219, 209, 320, 182, 484, 485,
	307, 308, 326, 291, 321, 284, 185, 177, 109, 368,
	345, 432, 235, 315, 312, 188, 319, 486, 151, 487,
	189, 288, 364, 249, 310, 346, 148, 131, 314, 358,
	138, 348, 349, 355, -252, 356, 183, 186, -220, 148,
	-191, 347, 240, 261, 401, 189, 190, 149, 150, 33,
	360, 359, 351, -216, 152, 288, -75, 142, 178, -105,
	-46, 72, 224, -46, 30, 72, 72, 36, 72, 287,
	350, 350, 75, 430, 192, 21, -319, -300, 269, -318,
	-298, 139, 138, 10, 140, 274, 275, 276, 149, 8,
	31, 471, 166, 277, 278, 6, 170, 279, 280, 184,
	9, 281, -303, 74, 72, -206, -207, 397, 398, 399,
	400, 401, 414, 415, 416, 402, 403, 417, 418, 419,
	404, 405, 420, 421, 423, 424, 422, 187, 408, 407,
	406, 409, 410, 51, 412, 411, 413, 21, -319, -300,
	269, 6, -68, 5, -187, 153, 284, -86, 439, -91,
	-218, -216, -207, 74, -3, -166, 17, 16, -72, 54,
	55, -67, -80, 122, -82, -216, -113, 89, -119, 29,
	72, -206, 24, -118, -207, -114, -141, -140, -94, 131,
	132, 133, 120, 121, 128, 90, 134, -126, -124, -125,
	-127, -129, -130, 74, 73, 82, 75, 76, 77, 78,
	83, 397, 398, 399, 400, 401, 414, 415, 416, 402,
	403, 417, 418, 419, 404, 405, 420, 421, 423, 424,
	422, 408, 407, 406, 409, 410, 412, 411, 413, 84,
	85, -208, -138, -328, 58, 59, 178, 147, 381, 382,
	383, 384, 385, 425, 168, 389, 92, 47, 370, 379,
	378, 377, 375, 376, 372, 374, 373, 391, 392, 154,
	371, 126, 380, -187, -187, 11, -98, -99, -105, -108,
	-216, -176, 284, -183, -180, 359, 360, -181, -184, -178,
	-141, 339, 468, 469, 358, 314, 357, -208, -216, -2,
	-5, 6, -105, -259, -247, -250, -209, 163, -270, -208,
	-205, 160, 72, -206, 253, 143, 169, 139, 88, 433,
	23, 25, 243, 342, 397, 91, 131, 398, 399, 400,
	16, 20, 92, 130, 81, 381, 192, 401, 138, 62,
	396, 372, 374, 370, 371, 348, 29, 10, 26, 171,
	203, 22, 124, 140, 95, 96, 97, 174, 274, 275,
	24, 172, 266, 85, 276, 168, 115, 19, 65, 11,
	186, 239, 13, 395, 113, 14, 236, 154, 153, 108,
	201, 149, 60, 8, 134, 27, 105, 56, 402, 403,
	436, 45, 191, 437, 58, 106, 17, 375, 376, 31,
	425, 404, 179, 438, 405, 126, 206, 63, 50, 242,
	89, 83, 34, 86, 66, 87, 15, 202, 61, 393,
	245, 267, 183, 471, 205, 439, 166, 107, 277, 141,
	380, 268, 241, 59, 147, 6, 390, 30, 170, 279,
	408, 407, 406, 409, 207, 57, 383, 384, 410, 280,
	488, 148, 94, 391, 392, 152, 184, 84, 5, 44,
	32, 9, 281, 64, 67, 377, 378, 379, 47, 51,
	412, 411, 413, 93, 12, 394, 429, 187, 149, -105,
	380, -194, 154, -194, 184, 183, -194, -194, 148, 98,
	-52, -105, -302, -297, -303, -193, 154, -208, -193, -193,
	-193, -193, -193, -193, -193, -105, 135, -105, 72, 30,
	-192, 106, 12, 371, 147, 148, 184, 151, -254, 11,
	108, 187, 187, 187, 188, 187, -190, 350, 352, 185,
	353, 354, 12, -83, 106, 19, -328, -166, -166, 72,
	287, 152, -60, -3, -11, -9, -10, -3, 98, 30,
	30, 74, 51, 30, -41, -40, -42, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 30,
	-281, 68, -242, 339, 72, -294, -295, -105, 75, 75,
	66, 66, 69, 152, 69, 66, -320, 270, 68, -320,
	237, 270, 271, 209, 235, 151, -320, -320, 237, -320,
	-320, -320, -320, -320, 350, -320, -320, -320, 272, 273,
	-320, 348, 151, -320, -320, -320, -320, -320, 71, 66,
	69, 261, 66, 11, 66, -66, -7, -5, -328, 21,
	22, 148, 363, 69, -86, -169, -328, -329, 70, -167,
	19, 31, -122, 75, 78, -150, -153, -82, -216, 50,
	-70, 21, 22, 80, 11, -211, 88, 87, 105, -210,
	23, 72, -206, -207, 74, 135, -82, -116, 108, 89,
	106, 107, 91, 117, 116, 127, 120, 121, 122, 123,
	124, 125, 126, 118, 119, 130, 98, 99, 100, 101,
	102, 103, 104, -188, -328, -94, -328, 136, 137, -119,
	-119, -119, -119, -119, -119, -119, -119, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -3, -133, -82, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -144, -82, -328, -331, -128, -328, -331, -128,
	-331, -128, -331, -328, -331, -128, -331, -128, -331, -331,
	-128, -331, -328, -328, -328, -328, -328, -328, -107, 27,
	-105, -85, -88, -89, -90, -109, -93, -328, -105, -94,
	-105, -98, -330, 69, 11, 67, -330, 69, 135, 69,
	-177, -182, 361, 363, 284, -181, -181, -215, -208, 74,
	29, 98, 30, 135, -149, -66, 70, 69, -250, 163,
	160, -222, -226, -228, -227, -229, -224, -225, 311, 314,
	318, 316, 312, 317, 131, 315, 320, 321, 322, 323,
	324, 325, 326, 327, 328, 329, 330, 30, 173, 307,
	308, 309, 310, 331, 332, 333, 334, 335, 336, 337,
	338, 290, 313, 427, 291, 292, 293, 294, 295, 296,
	298, 299, 300, 301, 302, 303, 304, 305, 72, -207,
	-270, 68, -208, 23, 151, 72, 89, 72, 72, 72,
	-306, -305, -297, -300, -194, 72, 69, 152, 69, 152,
	71, -98, 24, 66, -100, -105, 72, 72, 72, 72,
	-299, -297, -300, -217, -216, -205, -192, 74, -82, -194,
	-194, -105, -105, -105, -105, -192, -192, -192, -192, -189,
	11, 108, 11, -189, -189, -82, -119, -297, 373, 122,
	72, 72, 287, 72, -41, -41, 74, -41, 69, 98,
	-41, 70, -133, -280, 489, 69, -296, 23, 363, 364,
	340, -322, 148, 186, 183, -322, -318, 278, -299, -298,
	-297, -320, -321, -208, -320, -320, -320, 350, -320, -320,
	-320, -320, -320, -320, -320, -320, -303, -322, 239, 69,
	-322, -299, -297, -72, -3, -105, 364, 365, -91, 23,
	-168, -209, 9, 108, 69, 18, 69, -165, 25, 26,
	135, -120, 51, 75, 78, -195, 49, -105, -82, -82,
	-131, 83, 89, 84, 85, -210, 81, 122, -217, -209,
	-205, -119, -132, -138, -94, 79, 108, 106, 107, 91,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -219, 72, 74, 72, -118,
	-118, -208, -70, -78, -81, 122, -82, -216, -78, -78,
	-70, -329, -329, -81, -78, -78, -78, -81, -78, -70,
	-70, -78, -329, -329, -329, -329, -78, -78, -78, -78,
	-70, -78, -78, -78, -70, -329, 69, -329, -3, -78,
	-78, -78, -329, -82, -82, -141, 74, -78, -141, 74,
	-78, -119, 386, 387, 388, -78, -78, -70, -142, -143,
	93, -141, -329, -119, -208, -208, -78, -79, -78, -78,
	-78, -172, 110, -105, 30, 69, -101, -103, -102, -104,
	56, 60, 62, 57, 58, 59, 63, -201, -85, -92,
	47, -328, -110, 110, -111, 23, -218, 64, 153, 65,
	-172, 67, -85, -105, -85, -108, -216, 122, -180, -183,
	69, 362, 364, 365, -177, -236, 130, 66, 86, -82,
	-209, -217, -166, -72, -260, -261, -262, -209, 74, 75,
	-247, -248, -249, -250, -263, 163, -269, 155, 157, 44,
	-251, 164, 149, 45, -223, -237, 345, -230, 68, -230,
	-230, 319, 311, 314, 312, -230, -230, -230, -230, -230,
	-235, 314, -235, -235, -235, -235, 312, 68, 68, -230,
	-230, -230, -239, 68, -239, 306, -240, 68, -240, -240,
	-240, -240, -270, -270, -82, -212, 67, -163, -105, 24,
	-47, 196, 169, 68, -301, 69, 29, -307, 236, -105,
	-105, -105, -297, -297, -303, -277, 167, 162, -105, 69,
	69, 72, 72, -255, 11, 108, -192, -216, -216, -105,
	-121, 23, -192, -76, 174, 67, -331, -329, 72, -40,
	-118, 70, -106, 27, 74, -295, -218, 339, 364, -323,
	122, -208, -323, -326, 429, 152, 70, 69, -320, -323,
	257, 239, -323, 11, -70, -329, -54, -53, 143, 140,
	141, 145, 146, -273, 342, 139, 180, -93, -328, -329,
	69, 135, 52, -122, -122, -153, -186, 19, 11, 47,
	47, -71, 57, 83, 84, 85, 135, -328, -132, -119,
	-119, -119, -76, 88, -329, -78, 69, -329, 135, -329,
	-329, -78, -154, 393, -154, -329, -329, -329, -329, -329,
	-329, -78, -78, -329, -154, -154, -154, -154, -329, -329,
	-329, -329, -78, -329, -329, -329, -79, -82, -329, -329,
	-329, -329, 69, 67, 23, 11, 11, -329, 11, 11,
	-329, -329, 11, -119, -119, -119, -329, -329, -78, -145,
	-143, 95, -82, -329, -329, 69, 69, -329, -329, -329,
	-329, -117, 30, 47, -328, -3, -328, -175, -179, -141,
	-205, -88, -89, -89, -88, -89, 56, 56, 56, 61,
	56, 61, 56, -102, -218, -329, -329, -137, 195, -328,
	34, -218, -111, 149, 149, 149, -112, 12, -85, -112,
	-112, 135, -182, -185, 366, 363, 369, 72, 74, 135,
	-167, 69, -262, 98, -250, 68, 72, -256, -207, 45,
	-251, 149, 45, -251, -256, 72, -256, 45, 83, 89,
	-233, -234, -241, -244, -231, 29, 66, 342, 155, 45,
	44, 81, -238, 346, 75, -235, -235, -230, -230, -230,
	319, -230, -235, -236, 30, -236, -236, -236, -236, -235,
	-245, 74, -245, 75, -239, 75, 70, 66, -208, -3,
	23, -48, 8, 9, 10, -282, -283, -284, 72, 108,
	201, 202, -310, 268, -305, 237, 246, 88, 16, 429,
	152, 152, -105, -297, -112, 72, 72, -189, -192, 34,
	-119, -300, 189, 190, -172, 148, -296, 152, 135, 135,
	152, 260, -299, -208, 11, 11, 257, 11, -299, -195,
	69, -202, -251, -279, -249, -250, -278, 156, 163, 164,
	-202, 163, 160, -251, 164, 155, 156, -199, -251, 152,
	23, -202, -202, -257, 98, -202, 110, -209, -209, 53,
	-105, -77, -164, 122, -209, -79, -76, 88, -119, -329,
	-81, -155, -154, 122, -217, -155, -155, -329, -208, -159,
	-328, -154, -155, -155, -154, -154, -154, -329, -329, -154,
	-155, -155, -155, -155, -329, -155, -155, -155, -329, -221,
	131, 311, 173, 309, 302, 329, 316, 344, 307, 345,
	-219, -221, -119, -119, -119, -119, -119, 11, 11, 11,
	426, -149, 97, -82, 94, -119, -119, -174, 66, -175,
	-136, -139, -138, -328, -3, -329, -168, 6, 429, -173,
	-208, -112, 69, 98, 98, -96, -95, 66, 67, -97,
	66, -95, 56, 56, -171, 68, 69, -138, -328, -173,
	-119, -111, -328, -328, -328, -149, -82, -112, 363, 367,
	368, -261, -262, -265, -264, -208, -207, 155, -269, 44,
	-269, -256, -256, 68, 83, -119, 9, 45, 45, 74,
	70, -236, -236, -235, -230, -236, 72, 131, -236, 70,
	69, 70, 69, 70, 69, -115, 445, 89, -105, -163,
	-163, 66, 70, 69, -222, 72, 72, 72, -313, 429,
	242, -311, -309, 248, 249, 250, 251, 252, -300, 247,
	-307, 244, 74, 72, -105, -297, -192, -119, -235, -105,
	-299, 122, 122, -208, -299, 257, -325, 429, -299, -299,
	11, -299, -71, -53, 68, -246, 72, -207, -256, -197,
	155, 72, 72, 72, -207, 72, -207, -208, 45, 45,
	72, -105, -208, -246, 72, -82, -208, -208, 135, -112,
	11, 69, -80, -329, -119, -155, 135, -155, -213, 72,
	-155, -155, -155, -329, -230, -230, -230, -240, -230, 295,
	-230, 295, -329, -329, 19, 19, 19, 19, -329, -119,
	-119, -119, -328, -74, 390, -82, 69, 69, 28, -174,
	69, -329, -329, 47, -329, -329, 69, -149, -179, -82,
	-82, -82, 68, -82, -170, -208, 195, -329, -111, -201,
	-170, -170, -170, -166, 70, 69, -230, -230, 45, -253,
	-251, -170, -125, -236, -235, 74, -235, 75, 75, 445,
	68, -3, -105, -285, -286, -287, 81, 428, 89, 203,
	204, 165, 205, 206, 207, -284, -222, -222, -222, -316,
	-317, -315, 245, 266, 267, 253, -314, -312, 262, 263,
	264, 265, 88, 74, 74, 74, -308, 236, 88, 245,
	16, 23, -288, -190, -325, -325, 239, -299, -77, -246,
	-151, 168, 169, -222, -222, -212, -253, 45, 72, -200,
	152, 23, 152, -151, -246, 30, 140, 27, -209, -146,
	13, -85, -164, -164, 122, -135, 110, -235, 72, -119,
	-119, -119, -119, -329, -329, -329, -119, -329, 74, -119,
	-119, 45, -139, -136, 47, -3, -328, -208, -166, -170,
	70, 69, -138, -110, -218, -329, -329, -329, -267, -266,
	67, 159, 81, -264, -165, -165, -256, 70, -236, -236,
	70, 70, -265, -163, 19, -163, -287, 74, 207, 203,
	207, 207, 207, 207, 208, -304, 81, 243, -315, 254,
	450, 238, 268, 75, 75, 109, 31, 32, -312, 75,
	75, 75, 75, -309, 16, 429, -307, 244, 74, 74,
	-289, 38, -291, 39, -324, 23, -324, 257, 11, 70,
	72, -223, -223, 68, -256, 68, 72, -208, -151, 29,
	29, -328, -147, 14, 16, -112, -80, -149, 16, -329,
	-329, -329, -329, -73, 108, 429, -329, -329, 9, -136,
	-3, 70, -208, -111, -266, 72, -257, 74, 166, 70,
	194, -20, -3, -9, -10, -11, -12, -14, -49, -15,
	-16, -21, -22, -17, -55, -56, -64, -62, -63, -59,
	-58, -25, -23, -26, -18, -27, -28, -29, -33, -34,
	-24, 92, 154, 225, 282, 36, 36, 199, 200, 74,
	74, 29, 255, 134, 29, 75, 134, 396, 244, 74,
	72, 245, -232, 153, -292, 43, -290, -243, 42, 16,
	-297, -85, -265, -212, -265, -119, -271, -272, 110, -157,
	394, -148, -82, -134, -84, -82, -146, -164, -160, 112,
	111, -133, -329, 427, 63, 430, -175, -329, 75, -105,
	-268, -267, 195, -163, -82, -82, 72, -45, -214, 228,
	229, 230, -209, -35, -20, 75, 29, 75, 29, 258,
	245, 23, -171, 75, -291, 16, -293, 40, 41, 74,
	429, -112, 70, 68, 70, -329, 69, -208, -156, -158,
	-208, 69, -147, -329, -161, 91, -162, 109, 396, -123,
	75, 134, -161, 53, 428, 431, 68, -152, 197, 198,
	-36, -37, 93, 94, 226, 227, 231, -222, 69, 490,
	256, 256, 74, 38, 74, 16, 16, 237, -146, -268,
	-265, -268, -272, 47, 69, 23, -84, -157, -162, 114,
	115, 195, 114, 115, -118, 53, -170, -163, 72, 72,
	97, 95, -37, -82, -35, 19, 19, 19, 29, -209,
	97, -20, 74, 74, 29, 242, 21, -300, -147, 70,
	181, -158, -159, 88, -208, 429, 70, -13, -19, -12,
	-9, -10, -11, 282, 92, -35, 94, 490, -46, 75,
	-3, -44, -43, 75, -46, 233, 89, 234, 72, -119,
	259, -157, -268, 182, -162, 430, -275, -276, 66, -163,
	-35, 490, -35, 97, 95, -38, -39, 96, -20, 69,
	232, -300, -328, 431, -276, 66, -275, 66, 10, 9,
	490, 97, 490, 154, -35, 97, 95, -39, -82, -43,
	-119, 179, -274, 167, 162, 165, 30, -274, 97, 92,
	490, 154, -35, 94, -329, -329, 161, 29, 83, 97,
	490, -35, 154, 97, 490, 154,
}

var yyDef = [...]int{
	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 684, 684, 684, 684, 684,
	684, 781, -2, 549, 0, 0, 0, 0, -2, 657,
	658, 659, 663, 664, 679, 681, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 1089, 0, 682, 671, 672, 0, 0, 1570,
	2, 1027, 0, 693, 686, 0, 1089, 1089, 0, 0,
	86, 0, 0, 0, 782, 0, 0, 0, 1087, 1087,
	0, 1087, 1087, 0, 1102, 0, 1084, 1098, 1099, 1100,
	0, 0, 1085, 0, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 0, 606, 799, 1111, 1112, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 0, 0, 0, 650,
	0, 616, 617, 618, 0, 620, 0, 0, 0, 0,
	0, 630, 633, 637, 0, 1027, 1027, 495, 496, 497,
	654, 655, 644, 656, 0, 0, 0, 0, 0, 683,
	305, 307, 0, 327, 0, 330, 333, 1117, 665, 0,
	0, 1142, 1143, 0, 0, 0, 0, 0, 1456, 180,
	244, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	0, 182, 182, 182, 1467, 182, 0, 182, 182, 182,
	182, 182, 243, 232, 233, 234, 235, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 0, 0, 0,
	1456, 684, 0, 688, 0, 1090, 660, 44, 0, 46,
	1043, 783, 784, 785, 0, 1033, 0, 0, 696, 694,
	695, 685, 0, 707, 737, 0, 808, 0, 813, 815,
	-2, -2, 0, 856, 857, 858, 859, 860, 861, 0,
	0, 0, 0, 0, 0, 0, 0, 885, 886, 887,
	888, 889, 890, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 817,
	818, 997, 1056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 988, 0, 959, 959,
	959, 959, 959, 959, 959, 959, 959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 68,
	799, 72, 1519, 0, 1061, -2, -2, 1063, 0, 0,
	0, -2, -2, -2, -2, 1328, -2, 997, 0, 87,
	1019, 684, 88, 0, 369, 370, 0, 1341, 519, 1109,
	1110, 1330, 1105, 1106, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1087, 0,
	587, 0, 588, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 605, 0, 607, 608, 650,
	610, 0, 0, 1087, 1087, 0, 0, 0, 0, 521,
	522, 650, 650, 650, 650, 647, 0, 647, 627, 647,
	645, 646, 0, 632, 0, 0, 0, 640, 641, 666,
	0, 0, 673, 675, 676, 677, 678, 674, 0, 0,
	0, 309, 0, 0, 329, 311, 0, 314, 315, 316,
	317, 318, 319, 320, 321, 322, 323, 324, 325, 0,
	332, 0, 1115, 1118, 670, 1133, 1134, 0, 1144, 1145,
	186, 186, 0, 0, 0, 0, 149, 182, 0, 151,
	182, 182, 182, 0, 182, 182, 158, 159, 182, 161,
	162, 163, 164, 165, 182, 167, 168, 169, 182, 182,
	172, 182, 182, 175, 176, 177, 178, 179, 242, 186,
	0, 0, 186, 0, 0, 693, 41, 51, 0, 689,
	690, 0, 0, 0, 45, 0, 0, 50, 1571, 36,
	0, 0, 1028, 1031, 1032, 1020, 1021, 1024, 0, 0,
	691, 697, 698, 687, 0, 708, 0, 0, 0, 738,
	0, 741, 742, 743, 744, 0, 811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 836, 837, 838,
	839, 840, 841, 814, 0, 828, 0, 0, 0, 877,
	878, 879, 880, 881, 882, 883, 0, 696, 0, 0,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 696, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 989, 0, 942, 951, 0, 943, 952,
	944, 953, 945, 0, 946, 954, 947, 955, 948, 949,
	956, 950, 0, 0, 0, 850, 0, 0, 70, 0,
	798, 0, 745, 747, 748, 749, -2, 0, 802, 848,
	-2, 0, 0, 0, 62, 63, 0, 0, 0, 0,
	73, 75, 0, 0, 1519, 1064, 1065, 469, 1078, 1079,
	1080, 0, 1076, 0, 1027, 693, 536, 0, 371, 0,
	0, 380, 459, 389, 390, 391, 452, 393, 452, 452,
	0, 452, 452, 452, 452, 452, 466, 466, 466, 466,
	466, 435, 436, 437, 438, 439, 0, 0, 412, 452,
	452, 452, 416, 442, 443, 444, 445, 446, 447, 448,
	449, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 454, 454, 456, 456, 456, 456, 456, 0, 0,
	518, 0, 1103, 84, 0, 92, 0, 93, 0, 0,
	98, 260, 246, 97, 0, 231, 0, 0, 0, 0,
	237, 602, 1086, 0, 595, 64, 596, 597, 598, 599,
	600, 239, 601, 800, 1113, 1114, 609, 651, 652, 0,
	0, 613, 614, 615, 523, 621, 622, 623, 629, 650,
	0, 0, 0, 763, 650, 631, 842, 634, 959, 0,
	668, 667, 0, 680, 306, 308, 310, 328, 0, 0,
	331, 334, 0, 0, 0, 0, 1136, 0, 1138, 1140,
	0, 0, 187, 188, 189, 0, 181, 0, 204, 245,
	0, 150, 0, 184, 152, 153, 154, 182, 156, 157,
	160, 166, 170, 171, 173, 174, 241, 0, 0, 0,
	0, 147, 0, 696, 0, 0, 661, 662, 47, 0,
	0, 1045, 1034, 0, 0, 0, 0, 1023, 1025, 1026,
	0, 0, 1008, 0, 0, 699, 692, 38, 809, 810,
	812, 829, 0, 831, 833, 739, 740, 709, 0, 998,
	-2, 819, 820, 844, 845, 846, 0, 0, 0, 0,
	842, 824, 0, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 876, 973, 974, 0, 874,
	875, 884, 0, 0, 852, 703, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 850, 847, 0, 1055, 0, 0,
	0, 0, 924, 0, 0, 859, 1000, 0, 859, 1000,
	0, 0, 0, 0, 0, 0, 0, 0, 995, 992,
	0, 0, 960, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 797, 0, 0, 0, 0, 0, 0,
	786, 0, 0, 789, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 1443, 758, 0, 802, 0, 0, 0,
	806, 0, 806, 67, 806, 69, 0, 801, 1062, 0,
	0, 0, 78, 79, 74, 1066, 0, 1072, 1073, 1074,
	998, 0, 1033, 696, 368, 537, 539, 542, 543, 544,
	372, 374, 375, 376, 0, -2, 510, 1453, 1497, -2,
	502, 1370, -2, -2, 379, 461, 460, 392, 0, 466,
	466, 452, 452, 452, 452, 421, 466, 424, 427, 428,
	469, 0, 469, 469, 469, 469, 466, 0, 0, 413,
	414, 415, 404, 0, 405, 454, 407, 0, 408, 409,
	410, 411, 516, 517, 0, 0, 0, 0, 0, 1088,
	0, 262, 263, 207, 100, 0, 0, 247, 0, 367,
	0, 589, 0, 591, 236, 593, 603, 604, 594, 0,
	0, 611, 612, 806, 0, 0, 624, 648, 649, 647,
	650, 0, 628, 642, 0, 0, 635, 0, 669, 312,
	313, 335, 70, 0, 1116, 1135, 0, 1139, 1141, 0,
	190, 192, 0, 141, 0, 0, 183, 0, 155, 0,
	0, 0, 0, 0, 691, 52, 550, 551, -2, 580,
	1095, 580, 580, 568, 486, 580, 0, 48, 0, 1044,
	0, 0, 0, 1029, 1030, 1022, 0, 1081, 1082, 1009,
	1010, 85, 700, 830, 832, 834, 0, 850, 821, 842,
	825, 0, 822, 0, 816, 0, 0, 718, 0, 718,
	718, 0, 910, 0, 911, 0, 718, 718, 0, 0,
	0, 0, 0, 0, 917, 918, 919, 920, 718, 718,
	718, 718, 0, 718, 718, 718, 0, 855, -2, 921,
	922, 923, 0, 0, 0, 0, 0, 966, 0, 0,
	967, 932, 0, 0, 0, 0, 0, 938, 1019, 0,
	993, 0, 0, 941, 961, 0, 0, 962, 963, 964,
	965, 1049, 0, 0, 0, 1038, 0, 806, 1057, 0,
	0, 746, 777, 779, 0, 774, 787, 788, 790, 0,
	792, 0, 794, 795, 765, 752, 849, 753, 0, 0,
	0, 802, 762, 0, 0, 0, 1019, 0, 806, 60,
	61, 0, 76, 77, 0, 0, 83, 470, 471, 0,
	206, 0, 540, 0, 373, 0, 503, 0, 0, 488,
	502, 498, 499, 502, 493, 503, 494, 0, 381, 0,
	383, 384, 385, 386, 387, 0, 0, 465, 0, 473,
	475, 0, 388, 462, 0, 469, 469, 466, 419, 420,
	452, 425, 469, 429, 0, 430, 431, 432, 433, 469,
	0, 450, 0, 0, 406, 0, 533, 0, 1104, 84,
	84, 0, 264, 265, 266, 0, 208, 209, 0, 0,
	0, 0, 110, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 65, 240, 619, 524, 525, 650, 626, 0,
	843, 636, 638, 639, 466, 0, 1137, 0, 0, 0,
	0, 0, 202, 185, 0, 0, 0, 0, 148, 699,
	0, 0, 502, 0, 569, 570, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	1097, 0, 0, 0, 487, 0, 0, 1047, 1046, 1035,
	37, 806, 0, 710, 999, 0, 823, 0, 826, 718,
	853, 895, 719, 705, 0, 896, 897, 718, 711, 712,
	714, 912, 899, 900, 913, 914, 915, 718, 718, 916,
	904, 903, 902, 905, 718, 908, 907, 909, 891, 0,
	452, 452, 978, 452, 456, 981, 452, 983, 452, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 990, 940, 996, 0, 0, 0, 53, 0, 1049,
	1036, 1051, 1053, 0, 0, 0, 0, -2, 1308, 0,
	769, 1019, 0, 0, 0, 771, 778, 0, 0, 772,
	0, 773, 791, 793, 750, 0, 0, 754, 0, 0,
	-2, 761, 0, 0, 0, 1027, 807, 59, 80, 81,
	82, 538, 541, 0, 504, 452, 452, 0, 508, 500,
	509, 490, 492, 0, 382, 463, 0, 472, 474, 476,
	453, 417, 418, 469, 426, 422, 467, 468, 434, 466,
	0, 466, 0, 457, 0, 520, 534, 0, 0, 90,
	0, 0, 215, 0, 211, 0, 0, 0, 118, 0,
	101, 102, 103, 105, 106, 0, 0, 0, 99, 0,
	249, 0, 252, 253, 590, 592, 625, 764, 1127, 796,
	202, 191, 193, 194, 202, 205, 142, 0, 143, 145,
	0, 144, 85, 552, 0, 577, 0, 0, 1103, 500,
	0, -2, 555, 560, 561, 562, 563, 564, 0, 575,
	0, 557, 0, 577, 0, 572, 0, 0, 0, 1011,
	0, 85, 85, 892, 827, 894, 0, 898, 716, 715,
	893, 901, 906, 925, 975, 466, 979, 980, 982, 984,
	985, 987, 927, 926, 0, 0, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 54,
	0, 1054, -2, 0, 0, 71, 0, 1027, 1058, 1059,
	1060, 775, 0, 780, 0, 767, 0, 802, 759, 0,
	0, 0, 0, 58, 478, 0, 1024, 1024, 489, 502,
	501, 0, 464, 423, 469, 451, 469, 0, 0, 535,
	0, 84, 0, 84, 216, 217, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 210, 212, 213, 214, 136,
	119, 120, 0, 0, 0, 0, 111, 112, 0, 0,
	0, 0, 0, 107, 108, 109, 248, 0, 0, 251,
	0, 0, 1129, 1123, 195, 195, 0, 146, 0, 0,
	554, 578, 0, 380, 380, 0, 502, 0, 571, 0,
	1093, 1094, 0, 566, 577, 0, 0, 0, 1048, 1016,
	0, 806, 0, 701, 706, 1019, 0, 976, 977, 0,
	0, 0, 0, 934, 935, 936, 968, 939, 991, 0,
	0, 0, 1052, 1037, 0, 1041, 0, 770, 57, 0,
	766, 0, 755, 757, 802, 803, 804, 805, 477, 481,
	0, 486, 0, 505, 506, 507, 491, 0, 440, 441,
	455, 458, 0, 91, 0, 0, 218, 219, 220, 221,
	223, 224, 0, 0, 0, 96, 0, 0, 121, 0,
	0, 0, 0, 131, 132, 133, 134, 135, 113, 114,
	115, 116, 117, 104, 0, 0, 250, 0, 255, 256,
	1091, 1131, -2, 0, 139, 0, 140, 203, 0, 553,
	579, 377, 378, 0, 1103, 0, 556, 565, 567, 0,
	574, 0, 730, 0, 0, 1011, 85, 720, 0, 928,
	930, 929, 931, 0, 0, 0, 957, 958, 0, 1040,
	0, 776, 768, 760, 482, 483, 0, 485, 0, 479,
	0, 84, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 0, 0, 0, 0, 225, 226, 227, 228, 137,
	138, 122, 123, 0, 125, 126, 0, 0, 0, 258,
	0, 254, 765, 0, 1123, 0, 1125, 0, 1122, 0,
	196, 806, 0, 0, 0, 573, 0, 583, 0, 42,
	0, 1017, 1018, 1012, 1013, 1015, 1016, 702, 0, 0,
	0, 717, 937, 0, 0, 0, 1050, -2, 484, 0,
	89, 480, 267, 95, 0, 0, 1105, 0, 0, 294,
	295, 296, 1107, 0, 336, 0, 127, 0, 129, 130,
	257, 0, 35, 0, 1130, 0, 1128, 0, 0, 1124,
	0, 1011, 479, 0, 479, 582, 0, 0, 731, 732,
	0, 0, 730, 713, 721, 0, 724, 0, 0, 0,
	735, 0, 722, 969, 0, 972, 0, 84, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 292, 0, 0,
	124, 128, 259, 1092, 1132, 0, 0, 0, 1016, 558,
	0, 576, 584, 0, 0, 0, 1014, 43, 0, 725,
	726, 727, 728, 729, 0, 970, 0, 0, 268, 269,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 1108,
	229, 337, 1126, 1120, 197, 198, 199, 201, 730, 479,
	0, 733, 734, 0, 736, 0, 511, 84, 270, 271,
	272, 273, 274, 0, 276, 0, 0, 0, 288, 289,
	290, 0, 297, 299, 300, 301, 0, 303, 304, 293,
	0, 40, 559, 0, 723, 0, 512, 513, 0, 94,
	0, 0, 0, 0, 0, 0, 285, 0, 291, 0,
	302, 200, 0, 971, 514, 0, 515, 0, 0, 0,
	0, 0, 280, 281, 0, 0, 0, 286, 0, 298,
	0, 0, 526, 528, 529, 0, 0, 527, 275, 277,
	0, 283, 0, 0, 585, 586, 530, 531, 532, 0,
	0, 0, 282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 490,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:478
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:485
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:519
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:525
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:531
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:538
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:544
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:555
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:575
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:584
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:588
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:594
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:598
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:604
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:610
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:614
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:624
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:630
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:642
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:654
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:658
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:670
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:674
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:682
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:687
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:692
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:696
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:702
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:712
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:716
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:721
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:725
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:731
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:735
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:742
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:765
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:775
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:792
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:797
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:812
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:817
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:822
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:826
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:830
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:834
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:842
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:850
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:854
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:858
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:877
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:886
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:895
		{
			yyVAL.tlsOptionItems = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:899
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:903
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:909
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:913
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:919
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:931
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:935
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:940
		{
			yyVAL.accountLimitItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:960
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:964
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:977
		{
			yyVAL.passLockItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:991
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1005
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1017
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1021
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1025
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1029
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1033
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1037
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.str = ""
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1070
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1075
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1079
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1083
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1089
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1094
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1098
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1102
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1106
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1110
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1140
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1204
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1242
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1251
		{
			yyVAL.strs = nil
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1265
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1296
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1304
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantAssumption = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1338
		{
			yyVAL.boolean = false
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.boolean = true
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1347
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1351
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1366
		{
			yyVAL.procedureParams = nil
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1370
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1376
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1390
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1394
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1403
		{
			yyVAL.characteristics = nil
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1413
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1417
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1427
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1431
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1439
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1465
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1498
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1506
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1520
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1534
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1566
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1570
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1574
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1578
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1584
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1588
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1596
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1600
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1604
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1610
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1614
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1618
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1628
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1657
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1665
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1681
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1687
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1691
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1701
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1707
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1713
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1718
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1723
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1729
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1747
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1753
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1757
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1769
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1773
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1798
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1816
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1852
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1868
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1955
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2013
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2029
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2052
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2056
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2061
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2065
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2069
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2093
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = ColumnType{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2225
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2247
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2289
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2293
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2301
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2307
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2311
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2379
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2383
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2387
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2391
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2395
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2399
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2449
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2454
		{
			yyVAL.sqlVal = nil
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2463
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2467
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2475
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2479
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2485
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2493
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2502
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2512
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2529
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2542
		{
			yyVAL.str = ""
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.colKeyOpt = colKey
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2580
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2584
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2589
		{
			yyVAL.indexOptions = nil
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2599
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2609
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2618
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2624
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2628
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2634
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2638
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2646
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2655
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2659
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2663
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = yyDollar[1].str
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = ""
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2715
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2725
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2731
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2735
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2745
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 512:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2749
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 513:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2753
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 514:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2757
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 515:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2761
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2775
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2779
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2785
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2791
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2814
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2820
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2834
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2838
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2847
		{
			yyVAL.boolean = true
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.boolean = true
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.boolean = false
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = yyDollar[1].str
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = string("")
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2925
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2938
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2948
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2955
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2966
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2970
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 558:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2975
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 559:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2979
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2983
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2988
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3003
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3007
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3011
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3018
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3024
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3040
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3049
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3053
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3061
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3068
		{
			yyVAL.columnOrder = nil
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3076
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3081
		{
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3083
		{
		}
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3087
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3097
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3103
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3107
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3113
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3117
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3123
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3127
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3139
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3145
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3153
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3157
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3165
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3173
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3181
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3189
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3197
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3205
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3214
		{

		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3222
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3232
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3248
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3252
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3256
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3260
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3264
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3268
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3272
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3276
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3280
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3284
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3288
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3292
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3296
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3300
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3304
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3308
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3312
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3317
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3326
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3330
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3334
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3338
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3352
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3356
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3361
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3365
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3370
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3374
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3378
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3382
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3392
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3398
		{
			yyVAL.boolean = false
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3402
		{
			yyVAL.boolean = true
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3408
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3412
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3418
		{
			yyVAL.str = ""
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3422
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3432
		{
			yyVAL.showFilter = nil
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3436
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3446
		{
			yyVAL.str = ""
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.str = SessionStr
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.str = GlobalStr
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3460
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3464
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3470
		{
			yyVAL.statement = &Begin{}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3474
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3480
		{
			yyVAL.statement = &Begin{}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3484
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3488
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3494
		{
			yyVAL.statement = &Commit{}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.statement = &Rollback{}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3506
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3516
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3520
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3524
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3535
		{
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3536
		{
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3544
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3550
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3558
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3573
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3578
		{
			setAllowComments(yylex, true)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3582
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3588
		{
			yyVAL.bytes2 = nil
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3592
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.str = UnionStr
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3602
		{
			yyVAL.str = UnionAllStr
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			yyVAL.str = UnionDistinctStr
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3611
		{
			yyVAL.byt = 0
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.byt = 1
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3620
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.str = SQLCacheStr
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3633
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3637
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3641
		{
			yyVAL.str = DistinctStr
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3646
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			yyVAL.str = StraightJoinHint
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3664
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3687
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3697
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3701
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3705
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3721
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3726
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3734
		{
			yyVAL.exprs = nil
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3738
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3743
		{
			yyVAL.over = nil
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.over = yyDollar[1].over
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3752
		{
			yyVAL.frame = nil
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3767
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3809
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3817
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			yyVAL.window = nil
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3835
		{
			yyVAL.window = yyDollar[2].window
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3844
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3850
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3863
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3868
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3876
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3880
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3907
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3921
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3931
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3943
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3949
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3953
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3959
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 757:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3964
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3975
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3979
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 760:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3983
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3987
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3991
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4002
		{
			yyVAL.expr = nil
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4006
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4011
		{
			yyVAL.columns = nil
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4025
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4035
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4048
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4052
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4056
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4068
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4072
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4074
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4078
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4080
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4083
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.empty = struct{}{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4094
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.str = JoinStr
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.str = JoinStr
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4108
		{
			yyVAL.str = JoinStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.str = StraightJoinStr
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4120
		{
			yyVAL.str = LeftJoinStr
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4124
		{
			yyVAL.str = LeftJoinStr
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4128
		{
			yyVAL.str = RightJoinStr
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4132
		{
			yyVAL.str = RightJoinStr
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4138
		{
			yyVAL.str = NaturalJoinStr
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4142
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4152
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4172
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4178
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4183
		{
			yyVAL.indexHints = nil
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4187
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4191
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4195
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4200
		{
			yyVAL.expr = nil
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4204
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4214
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4218
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4222
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4226
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4234
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = ""
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4280
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = IsNullStr
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = IsNotNullStr
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = IsTrueStr
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = IsNotTrueStr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = IsFalseStr
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = IsNotFalseStr
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.str = EqualStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = LessThanStr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = GreaterThanStr
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = LessEqualStr
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = GreaterEqualStr
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = NotEqualStr
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4357
		{
			yyVAL.expr = nil
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4397
		{
			yyVAL.selectExprs = nil
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4408
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4418
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4464
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4496
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4500
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4504
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4508
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4512
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4528
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4542
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4570
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4574
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4596
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4600
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4604
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4612
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4632
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4665
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4669
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4673
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4685
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4689
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4693
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4697
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4708
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4712
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4716
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4724
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4728
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4732
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 928:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4736
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 929:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4740
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 930:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4744
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 931:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4748
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4752
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 933:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4756
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 934:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4760
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4764
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 937:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4776
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 939:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4780
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4784
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4788
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4798
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4802
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4806
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4816
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4827
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4836
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4841
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4845
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4849
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4864
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 957:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4868
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 958:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4883
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4893
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4897
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4905
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4909
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4913
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = ""
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = BooleanModeStr
		}
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4927
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 971:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4931
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4935
		{
			yyVAL.str = QueryExpansionStr
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4951
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4963
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4967
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4971
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4977
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4981
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4989
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4993
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5001
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = nil
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5015
		{
			yyVAL.str = string("")
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5029
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5035
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5040
		{
			yyVAL.expr = nil
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5044
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5054
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5058
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5064
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5092
		{
			yyVAL.expr = &NullVal{}
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5102
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5106
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5111
		{
			yyVAL.exprs = nil
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5115
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5121
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5125
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5136
		{
			yyVAL.expr = nil
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5140
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5151
		{
			yyVAL.orderBy = nil
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5155
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5161
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5165
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5171
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5176
		{
			yyVAL.str = AscScr
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5180
		{
			yyVAL.str = AscScr
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = DescScr
		}
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5189
		{
			yyVAL.limit = nil
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5193
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5197
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5201
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = ""
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5220
		{
			yyVAL.str = ForUpdateStr
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5224
		{
			yyVAL.str = ShareModeStr
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5237
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5241
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5245
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5249
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5254
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5258
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5262
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5268
		{
			yyVAL.columns = nil
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5272
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5282
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5286
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5290
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5295
		{
			yyVAL.assignExprs = nil
		}
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5299
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5309
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5315
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5319
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5325
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5341
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5345
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5351
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5354
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5360
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5364
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5370
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5381
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5394
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5407
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5413
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5417
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5431
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5437
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5441
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5445
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5452
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.expr = &Default{}
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5476
		{
			yyVAL.byt = 0
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
			yyVAL.byt = 1
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5481
		{
			yyVAL.byt = 0
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5483
		{
			yyVAL.byt = 1
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5486
		{
			yyVAL.byt = 0
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5488
		{
			yyVAL.byt = 1
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5491
		{
			yyVAL.str = ""
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = IgnoreStr
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5496
		{
			yyVAL.sqlVal = nil
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5498
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.empty = struct{}{}
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5504
		{
			yyVAL.empty = struct{}{}
		}
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5507
		{
			yyVAL.empty = struct{}{}
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5509
		{
			yyVAL.empty = struct{}{}
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.empty = struct{}{}
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5515
		{
			yyVAL.str = UniqueStr
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5517
		{
			yyVAL.str = FulltextStr
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.str = SpatialStr
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5522
		{
			yyVAL.str = ""
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5524
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5527
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5529
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5533
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5537
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5543
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5547
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5554
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5564
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5571
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5576
		{
			yyVAL.str = string("")
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5581
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5586
		{
			yyVAL.EnclosedBy = nil
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5590
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5595
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5599
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5604
		{
			yyVAL.sqlVal = nil
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5608
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5613
		{
			yyVAL.sqlVal = nil
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5617
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5622
		{
			yyVAL.Fields = nil
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5626
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5631
		{
			yyVAL.Lines = nil
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5635
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5640
		{
			yyVAL.sqlVal = nil
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5644
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5650
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5660
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5666
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5670
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5676
		{
			yyVAL.lockType = LockRead
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5680
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5684
		{
			yyVAL.lockType = LockWrite
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5688
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5694
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5700
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5704
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5708
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6162
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6171
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
