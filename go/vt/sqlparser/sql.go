// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const MAXVALUE = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const TRIGGERS = 57562
const FUNCTION = 57563
const STATUS = 57564
const VARIABLES = 57565
const WARNINGS = 57566
const ERRORS = 57567
const KILL = 57568
const CONNECTION = 57569
const SEQUENCE = 57570
const ENABLE = 57571
const DISABLE = 57572
const EACH = 57573
const ROW = 57574
const BEFORE = 57575
const FOLLOWS = 57576
const PRECEDES = 57577
const DEFINER = 57578
const INVOKER = 57579
const INOUT = 57580
const OUT = 57581
const DETERMINISTIC = 57582
const CONTAINS = 57583
const READS = 57584
const MODIFIES = 57585
const SQL = 57586
const SECURITY = 57587
const TEMPORARY = 57588
const ALGORITHM = 57589
const MERGE = 57590
const TEMPTABLE = 57591
const UNDEFINED = 57592
const EVENT = 57593
const EVENTS = 57594
const SCHEDULE = 57595
const EVERY = 57596
const STARTS = 57597
const ENDS = 57598
const COMPLETION = 57599
const PRESERVE = 57600
const CASCADED = 57601
const INSTANT = 57602
const INPLACE = 57603
const COPY = 57604
const DISCARD = 57605
const IMPORT = 57606
const SHARED = 57607
const EXCLUSIVE = 57608
const WITHOUT = 57609
const VALIDATION = 57610
const COALESCE = 57611
const EXCHANGE = 57612
const REBUILD = 57613
const REMOVE = 57614
const PARTITIONING = 57615
const CLASS_ORIGIN = 57616
const SUBCLASS_ORIGIN = 57617
const MESSAGE_TEXT = 57618
const MYSQL_ERRNO = 57619
const CONSTRAINT_CATALOG = 57620
const CONSTRAINT_SCHEMA = 57621
const CONSTRAINT_NAME = 57622
const CATALOG_NAME = 57623
const SCHEMA_NAME = 57624
const TABLE_NAME = 57625
const COLUMN_NAME = 57626
const CURSOR_NAME = 57627
const SIGNAL = 57628
const RESIGNAL = 57629
const SQLSTATE = 57630
const DECLARE = 57631
const CONDITION = 57632
const CURSOR = 57633
const CONTINUE = 57634
const EXIT = 57635
const UNDO = 57636
const HANDLER = 57637
const FOUND = 57638
const SQLWARNING = 57639
const SQLEXCEPTION = 57640
const FETCH = 57641
const OPEN = 57642
const CLOSE = 57643
const LOOP = 57644
const LEAVE = 57645
const ITERATE = 57646
const REPEAT = 57647
const UNTIL = 57648
const WHILE = 57649
const DO = 57650
const RETURN = 57651
const USER = 57652
const IDENTIFIED = 57653
const ROLE = 57654
const REUSE = 57655
const GRANT = 57656
const GRANTS = 57657
const REVOKE = 57658
const NONE = 57659
const ATTRIBUTE = 57660
const RANDOM = 57661
const PASSWORD = 57662
const INITIAL = 57663
const AUTHENTICATION = 57664
const SSL = 57665
const X509 = 57666
const CIPHER = 57667
const ISSUER = 57668
const SUBJECT = 57669
const ACCOUNT = 57670
const EXPIRE = 57671
const NEVER = 57672
const OPTION = 57673
const OPTIONAL = 57674
const ADMIN = 57675
const PRIVILEGES = 57676
const MAX_QUERIES_PER_HOUR = 57677
const MAX_UPDATES_PER_HOUR = 57678
const MAX_CONNECTIONS_PER_HOUR = 57679
const MAX_USER_CONNECTIONS = 57680
const FLUSH = 57681
const FAILED_LOGIN_ATTEMPTS = 57682
const PASSWORD_LOCK_TIME = 57683
const REQUIRE = 57684
const PROXY = 57685
const ROUTINE = 57686
const TABLESPACE = 57687
const CLIENT = 57688
const SLAVE = 57689
const EXECUTE = 57690
const FILE = 57691
const RELOAD = 57692
const REPLICATION = 57693
const SHUTDOWN = 57694
const SUPER = 57695
const USAGE = 57696
const LOGS = 57697
const ENGINE = 57698
const ERROR = 57699
const GENERAL = 57700
const HOSTS = 57701
const OPTIMIZER_COSTS = 57702
const RELAY = 57703
const SLOW = 57704
const USER_RESOURCES = 57705
const NO_WRITE_TO_BINLOG = 57706
const CHANNEL = 57707
const APPLICATION_PASSWORD_ADMIN = 57708
const AUDIT_ABORT_EXEMPT = 57709
const AUDIT_ADMIN = 57710
const AUTHENTICATION_POLICY_ADMIN = 57711
const BACKUP_ADMIN = 57712
const BINLOG_ADMIN = 57713
const BINLOG_ENCRYPTION_ADMIN = 57714
const CLONE_ADMIN = 57715
const CONNECTION_ADMIN = 57716
const ENCRYPTION_KEY_ADMIN = 57717
const FIREWALL_ADMIN = 57718
const FIREWALL_EXEMPT = 57719
const FIREWALL_USER = 57720
const FLUSH_OPTIMIZER_COSTS = 57721
const FLUSH_STATUS = 57722
const FLUSH_TABLES = 57723
const FLUSH_USER_RESOURCES = 57724
const GROUP_REPLICATION_ADMIN = 57725
const GROUP_REPLICATION_STREAM = 57726
const INNODB_REDO_LOG_ARCHIVE = 57727
const INNODB_REDO_LOG_ENABLE = 57728
const NDB_STORED_USER = 57729
const PASSWORDLESS_USER_ADMIN = 57730
const PERSIST_RO_VARIABLES_ADMIN = 57731
const REPLICATION_APPLIER = 57732
const REPLICATION_SLAVE_ADMIN = 57733
const RESOURCE_GROUP_ADMIN = 57734
const RESOURCE_GROUP_USER = 57735
const ROLE_ADMIN = 57736
const SENSITIVE_VARIABLES_OBSERVER = 57737
const SESSION_VARIABLES_ADMIN = 57738
const SET_USER_ID = 57739
const SHOW_ROUTINE = 57740
const SKIP_QUERY_REWRITE = 57741
const SYSTEM_VARIABLES_ADMIN = 57742
const TABLE_ENCRYPTION_ADMIN = 57743
const TP_CONNECTION_ADMIN = 57744
const VERSION_TOKEN_ADMIN = 57745
const XA_RECOVER_ADMIN = 57746
const REPLICA = 57747
const REPLICAS = 57748
const SOURCE = 57749
const STOP = 57750
const RESET = 57751
const FILTER = 57752
const LOG = 57753
const MASTER = 57754
const SOURCE_HOST = 57755
const SOURCE_USER = 57756
const SOURCE_PASSWORD = 57757
const SOURCE_PORT = 57758
const SOURCE_CONNECT_RETRY = 57759
const SOURCE_RETRY_COUNT = 57760
const SOURCE_AUTO_POSITION = 57761
const REPLICATE_DO_TABLE = 57762
const REPLICATE_IGNORE_TABLE = 57763
const BEGIN = 57764
const START = 57765
const TRANSACTION = 57766
const COMMIT = 57767
const ROLLBACK = 57768
const SAVEPOINT = 57769
const WORK = 57770
const RELEASE = 57771
const CHAIN = 57772
const BIT = 57773
const TINYINT = 57774
const SMALLINT = 57775
const MEDIUMINT = 57776
const INT = 57777
const INTEGER = 57778
const BIGINT = 57779
const INTNUM = 57780
const SERIAL = 57781
const INT1 = 57782
const INT2 = 57783
const INT3 = 57784
const INT4 = 57785
const INT8 = 57786
const REAL = 57787
const DOUBLE = 57788
const FLOAT_TYPE = 57789
const DECIMAL = 57790
const NUMERIC = 57791
const DEC = 57792
const FIXED = 57793
const PRECISION = 57794
const TIME = 57795
const TIMESTAMP = 57796
const DATETIME = 57797
const CHAR = 57798
const VARCHAR = 57799
const BOOL = 57800
const CHARACTER = 57801
const VARBINARY = 57802
const NCHAR = 57803
const NVARCHAR = 57804
const NATIONAL = 57805
const VARYING = 57806
const VARCHARACTER = 57807
const TEXT = 57808
const TINYTEXT = 57809
const MEDIUMTEXT = 57810
const LONGTEXT = 57811
const LONG = 57812
const BLOB = 57813
const TINYBLOB = 57814
const MEDIUMBLOB = 57815
const LONGBLOB = 57816
const JSON = 57817
const ENUM = 57818
const GEOMETRY = 57819
const POINT = 57820
const LINESTRING = 57821
const POLYGON = 57822
const GEOMETRYCOLLECTION = 57823
const MULTIPOINT = 57824
const MULTILINESTRING = 57825
const MULTIPOLYGON = 57826
const LOCAL = 57827
const LOW_PRIORITY = 57828
const SKIP = 57829
const LOCKED = 57830
const NULLX = 57831
const AUTO_INCREMENT = 57832
const APPROXNUM = 57833
const SIGNED = 57834
const UNSIGNED = 57835
const ZEROFILL = 57836
const SRID = 57837
const COLLATION = 57838
const DATABASES = 57839
const SCHEMAS = 57840
const TABLES = 57841
const FULL = 57842
const PROCESSLIST = 57843
const COLUMNS = 57844
const FIELDS = 57845
const ENGINES = 57846
const PLUGINS = 57847
const NAMES = 57848
const CHARSET = 57849
const GLOBAL = 57850
const SESSION = 57851
const ISOLATION = 57852
const LEVEL = 57853
const READ = 57854
const WRITE = 57855
const ONLY = 57856
const REPEATABLE = 57857
const COMMITTED = 57858
const UNCOMMITTED = 57859
const SERIALIZABLE = 57860
const ENCRYPTION = 57861
const CURRENT_TIMESTAMP = 57862
const NOW = 57863
const DATABASE = 57864
const CURRENT_DATE = 57865
const CURRENT_USER = 57866
const CURRENT_TIME = 57867
const LOCALTIME = 57868
const LOCALTIMESTAMP = 57869
const UTC_DATE = 57870
const UTC_TIME = 57871
const UTC_TIMESTAMP = 57872
const REPLACE = 57873
const CONVERT = 57874
const CAST = 57875
const POSITION = 57876
const SUBSTR = 57877
const SUBSTRING = 57878
const TRIM = 57879
const LEADING = 57880
const TRAILING = 57881
const BOTH = 57882
const GROUP_CONCAT = 57883
const SEPARATOR = 57884
const TIMESTAMPADD = 57885
const TIMESTAMPDIFF = 57886
const EXTRACT = 57887
const GET_FORMAT = 57888
const OVER = 57889
const WINDOW = 57890
const GROUPING = 57891
const CURRENT = 57892
const AVG = 57893
const BIT_AND = 57894
const BIT_OR = 57895
const BIT_XOR = 57896
const COUNT = 57897
const JSON_ARRAYAGG = 57898
const JSON_OBJECTAGG = 57899
const MAX = 57900
const MIN = 57901
const STDDEV_POP = 57902
const STDDEV = 57903
const STD = 57904
const STDDEV_SAMP = 57905
const SUM = 57906
const VAR_POP = 57907
const VARIANCE = 57908
const VAR_SAMP = 57909
const CUME_DIST = 57910
const DENSE_RANK = 57911
const FIRST_VALUE = 57912
const LAG = 57913
const LAST_VALUE = 57914
const LEAD = 57915
const NTH_VALUE = 57916
const NTILE = 57917
const ROW_NUMBER = 57918
const PERCENT_RANK = 57919
const RANK = 57920
const DUAL = 57921
const JSON_TABLE = 57922
const PATH = 57923
const AVG_ROW_LENGTH = 57924
const CHECKSUM = 57925
const TABLE_CHECKSUM = 57926
const COMPRESSION = 57927
const DIRECTORY = 57928
const DELAY_KEY_WRITE = 57929
const ENGINE_ATTRIBUTE = 57930
const INSERT_METHOD = 57931
const MAX_ROWS = 57932
const MIN_ROWS = 57933
const PACK_KEYS = 57934
const ROW_FORMAT = 57935
const SECONDARY_ENGINE = 57936
const SECONDARY_ENGINE_ATTRIBUTE = 57937
const STATS_AUTO_RECALC = 57938
const STATS_PERSISTENT = 57939
const STATS_SAMPLE_PAGES = 57940
const STORAGE = 57941
const DISK = 57942
const MEMORY = 57943
const DYNAMIC = 57944
const COMPRESSED = 57945
const REDUNDANT = 57946
const COMPACT = 57947
const LIST = 57948
const HASH = 57949
const PARTITIONS = 57950
const SUBPARTITION = 57951
const SUBPARTITIONS = 57952
const PREPARE = 57953
const DEALLOCATE = 57954
const MATCH = 57955
const AGAINST = 57956
const BOOLEAN = 57957
const LANGUAGE = 57958
const WITH = 57959
const QUERY = 57960
const EXPANSION = 57961
const MICROSECOND = 57962
const SECOND = 57963
const MINUTE = 57964
const HOUR = 57965
const DAY = 57966
const WEEK = 57967
const MONTH = 57968
const QUARTER = 57969
const YEAR = 57970
const SECOND_MICROSECOND = 57971
const MINUTE_MICROSECOND = 57972
const MINUTE_SECOND = 57973
const HOUR_MICROSECOND = 57974
const HOUR_SECOND = 57975
const HOUR_MINUTE = 57976
const DAY_MICROSECOND = 57977
const DAY_SECOND = 57978
const DAY_MINUTE = 57979
const DAY_HOUR = 57980
const YEAR_MONTH = 57981
const NAME = 57982
const SYSTEM = 57983
const ACCESSIBLE = 57984
const ASENSITIVE = 57985
const CUBE = 57986
const DELAYED = 57987
const DISTINCTROW = 57988
const EMPTY = 57989
const FLOAT4 = 57990
const FLOAT8 = 57991
const GET = 57992
const HIGH_PRIORITY = 57993
const INSENSITIVE = 57994
const IO_AFTER_GTIDS = 57995
const IO_BEFORE_GTIDS = 57996
const LINEAR = 57997
const MASTER_BIND = 57998
const MASTER_SSL_VERIFY_SERVER_CERT = 57999
const MIDDLEINT = 58000
const PURGE = 58001
const READ_WRITE = 58002
const RLIKE = 58003
const SENSITIVE = 58004
const SPECIFIC = 58005
const SQL_BIG_RESULT = 58006
const SQL_SMALL_RESULT = 58007
const UNUSED = 58008
const DESCRIPTION = 58009
const LATERAL = 58010
const MEMBER = 58011
const RECURSIVE = 58012
const BUCKETS = 58013
const CLONE = 58014
const COMPONENT = 58015
const DEFINITION = 58016
const ENFORCED = 58017
const NOT_ENFORCED = 58018
const EXCLUDE = 58019
const GEOMCOLLECTION = 58020
const GET_MASTER_PUBLIC_KEY = 58021
const HISTOGRAM = 58022
const HISTORY = 58023
const INACTIVE = 58024
const INVISIBLE = 58025
const MASTER_COMPRESSION_ALGORITHMS = 58026
const MASTER_PUBLIC_KEY_PATH = 58027
const MASTER_TLS_CIPHERSUITES = 58028
const MASTER_ZSTD_COMPRESSION_LEVEL = 58029
const NESTED = 58030
const NETWORK_NAMESPACE = 58031
const NOWAIT = 58032
const NULLS = 58033
const OJ = 58034
const OLD = 58035
const ORDINALITY = 58036
const ORGANIZATION = 58037
const OTHERS = 58038
const PERSIST = 58039
const PERSIST_ONLY = 58040
const PRIVILEGE_CHECKS_USER = 58041
const PROCESS = 58042
const REFERENCE = 58043
const REQUIRE_ROW_FORMAT = 58044
const RESOURCE = 58045
const RESPECT = 58046
const RESTART = 58047
const RETAIN = 58048
const SECONDARY = 58049
const SECONDARY_LOAD = 58050
const SECONDARY_UNLOAD = 58051
const THREAD_PRIORITY = 58052
const TIES = 58053
const VCPU = 58054
const VISIBLE = 58055
const INFILE = 58056
const ACTIVE = 58057
const AGGREGATE = 58058
const ANY = 58059
const ARRAY = 58060
const ASCII = 58061
const AT = 58062
const AUTOEXTEND_SIZE = 58063
const GENERATED = 58064
const ALWAYS = 58065
const STORED = 58066
const VIRTUAL = 58067
const NVAR = 58068
const PASSWORD_LOCK = 58069

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"TABLE_CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	747, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1768,
	200, 1789,
	-2, 331,
	-1, 62,
	241, 1149,
	242, 1149,
	-2, 1138,
	-1, 90,
	270, 331,
	-2, 1774,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 538,
	1, 2468,
	6, 2468,
	7, 2468,
	28, 2468,
	187, 2468,
	747, 2468,
	-2, 1183,
	-1, 551,
	187, 1799,
	-2, 1793,
	-1, 552,
	187, 1800,
	-2, 1794,
	-1, 657,
	1, 679,
	747, 679,
	-2, 677,
	-1, 666,
	1, 1287,
	8, 1287,
	9, 1287,
	10, 1287,
	17, 1287,
	18, 1287,
	19, 1287,
	20, 1287,
	22, 1287,
	24, 1287,
	34, 1287,
	35, 1287,
	64, 1287,
	65, 1287,
	66, 1287,
	67, 1287,
	68, 1287,
	70, 1287,
	71, 1287,
	74, 1287,
	75, 1287,
	77, 1287,
	78, 1287,
	96, 1287,
	519, 1287,
	567, 1287,
	636, 1287,
	747, 1287,
	-2, 1783,
	-1, 671,
	1, 1394,
	8, 1394,
	9, 1394,
	10, 1394,
	17, 1394,
	18, 1394,
	19, 1394,
	20, 1394,
	22, 1394,
	24, 1394,
	34, 1394,
	35, 1394,
	64, 1394,
	65, 1394,
	66, 1394,
	67, 1394,
	68, 1394,
	70, 1394,
	71, 1394,
	74, 1394,
	75, 1394,
	77, 1394,
	78, 1394,
	96, 1394,
	519, 1394,
	567, 1394,
	636, 1394,
	747, 1394,
	-2, 1783,
	-1, 699,
	187, 2166,
	-2, 1408,
	-1, 732,
	187, 2274,
	-2, 1676,
	-1, 733,
	187, 2355,
	-2, 1410,
	-1, 734,
	187, 2186,
	-2, 1411,
	-1, 803,
	187, 2137,
	-2, 1642,
	-1, 806,
	187, 2152,
	-2, 1560,
	-1, 807,
	187, 2155,
	-2, 1560,
	-1, 808,
	187, 2365,
	-2, 1560,
	-1, 810,
	187, 2153,
	-2, 1560,
	-1, 811,
	187, 2366,
	-2, 1560,
	-1, 812,
	187, 2367,
	-2, 1560,
	-1, 871,
	187, 2154,
	-2, 1560,
	-1, 954,
	187, 2254,
	-2, 1560,
	-1, 955,
	187, 2255,
	-2, 1560,
	-1, 1067,
	109, 2481,
	120, 2481,
	187, 2481,
	-2, 1750,
	-1, 1068,
	109, 2611,
	120, 2611,
	187, 2611,
	-2, 1751,
	-1, 1073,
	109, 2508,
	120, 2508,
	187, 2508,
	-2, 1752,
	-1, 1074,
	109, 2559,
	120, 2559,
	187, 2559,
	-2, 1753,
	-1, 1075,
	109, 2560,
	120, 2560,
	187, 2560,
	-2, 1754,
	-1, 1076,
	109, 2409,
	120, 2409,
	187, 2409,
	-2, 1759,
	-1, 1078,
	109, 2536,
	120, 2536,
	187, 2536,
	-2, 1761,
	-1, 1251,
	448, 1162,
	-2, 1166,
	-1, 1253,
	448, 1162,
	-2, 1166,
	-1, 1378,
	1, 679,
	747, 679,
	-2, 677,
	-1, 1380,
	1, 680,
	747, 680,
	-2, 677,
	-1, 1403,
	1, 1288,
	8, 1288,
	9, 1288,
	10, 1288,
	17, 1288,
	18, 1288,
	19, 1288,
	20, 1288,
	22, 1288,
	24, 1288,
	34, 1288,
	35, 1288,
	64, 1288,
	65, 1288,
	66, 1288,
	67, 1288,
	68, 1288,
	70, 1288,
	71, 1288,
	74, 1288,
	75, 1288,
	77, 1288,
	78, 1288,
	96, 1288,
	519, 1288,
	567, 1288,
	636, 1288,
	747, 1288,
	-2, 1783,
	-1, 1414,
	1, 1394,
	8, 1394,
	9, 1394,
	10, 1394,
	17, 1394,
	18, 1394,
	19, 1394,
	20, 1394,
	22, 1394,
	24, 1394,
	34, 1394,
	35, 1394,
	64, 1394,
	65, 1394,
	66, 1394,
	67, 1394,
	68, 1394,
	70, 1394,
	71, 1394,
	74, 1394,
	75, 1394,
	77, 1394,
	78, 1394,
	96, 1394,
	519, 1394,
	567, 1394,
	636, 1394,
	747, 1394,
	-2, 1783,
	-1, 1707,
	1, 679,
	747, 679,
	-2, 677,
	-1, 1709,
	1, 679,
	747, 679,
	-2, 677,
	-1, 2257,
	187, 1803,
	-2, 1654,
	-1, 2259,
	187, 2695,
	-2, 1656,
	-1, 2260,
	187, 2696,
	-2, 1657,
	-1, 2261,
	187, 1802,
	-2, 1798,
	-1, 2410,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2428,
	187, 2278,
	-2, 1755,
	-1, 2435,
	1, 883,
	747, 883,
	-2, 677,
	-1, 2620,
	49, 903,
	206, 906,
	208, 903,
	209, 903,
	210, 903,
	-2, 1010,
	-1, 2693,
	8, 59,
	9, 59,
	10, 59,
	-2, 1440,
	-1, 2710,
	1, 1333,
	8, 1333,
	9, 1333,
	10, 1333,
	17, 1333,
	18, 1333,
	19, 1333,
	20, 1333,
	22, 1333,
	24, 1333,
	34, 1333,
	35, 1333,
	64, 1333,
	65, 1333,
	66, 1333,
	67, 1333,
	68, 1333,
	70, 1333,
	71, 1333,
	74, 1333,
	75, 1333,
	77, 1333,
	78, 1333,
	96, 1333,
	519, 1333,
	567, 1333,
	636, 1333,
	747, 1333,
	-2, 1783,
	-1, 2878,
	212, 1004,
	216, 1004,
	-2, 782,
	-1, 2879,
	212, 1074,
	216, 1074,
	-2, 783,
	-1, 3131,
	1, 1394,
	8, 1394,
	9, 1394,
	10, 1394,
	17, 1394,
	18, 1394,
	19, 1394,
	20, 1394,
	22, 1394,
	24, 1394,
	34, 1394,
	35, 1394,
	64, 1394,
	65, 1394,
	66, 1394,
	67, 1394,
	68, 1394,
	70, 1394,
	71, 1394,
	74, 1394,
	75, 1394,
	77, 1394,
	78, 1394,
	96, 1394,
	519, 1394,
	567, 1394,
	636, 1394,
	747, 1394,
	-2, 1783,
	-1, 3234,
	1, 1707,
	74, 1707,
	747, 1707,
	-2, 1783,
	-1, 3426,
	49, 903,
	206, 906,
	208, 903,
	209, 903,
	210, 903,
	-2, 1010,
	-1, 3439,
	206, 907,
	212, 1004,
	216, 1004,
	-2, 905,
	-1, 3613,
	77, 2049,
	78, 2049,
	187, 2049,
	-2, 1189,
	-1, 3614,
	76, 1718,
	251, 1718,
	-2, 2098,
	-1, 3615,
	76, 1719,
	251, 1719,
	-2, 2661,
	-1, 3845,
	8, 59,
	9, 59,
	10, 59,
	-2, 1714,
	-1, 3990,
	46, 1814,
	-2, 1812,
	-1, 4252,
	8, 59,
	9, 59,
	10, 59,
	-2, 1715,
	-1, 4277,
	314, 426,
	-2, 1869,
	-1, 4278,
	314, 427,
	-2, 1910,
	-1, 4279,
	314, 428,
	-2, 2086,
	-1, 4508,
	104, 412,
	106, 412,
	108, 412,
	-2, 79,
	-1, 4589,
	106, 419,
	107, 419,
	108, 419,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 80496

var yyAct = [...]int{
	745, 44, 4562, 4463, 4531, 4499, 4512, 691, 4284, 1183,
	2895, 1406, 4500, 2894, 2425, 4136, 3, 4244, 3984, 563,
	4465, 4139, 8, 4381, 4129, 4138, 7, 4382, 4137, 6,
	705, 4170, 28, 4283, 3986, 4024, 4140, 9, 651, 4271,
	3693, 3979, 4103, 3558, 3391, 44, 3242, 2348, 487, 4131,
	4270, 2349, 3211, 3808, 2689, 3291, 107, 3765, 2286, 701,
	108, 1413, 3878, 4035, 1627, 4242, 718, 3997, 3633, 3990,
	3985, 2635, 3801, 3528, 3354, 1530, 3766, 1698, 2497, 1742,
	3619, 3800, 3946, 682, 3121, 3404, 3988, 3819, 590, 590,
	542, 545, 3757, 2452, 2962, 647, 2516, 668, 101, 635,
	3611, 3369, 3722, 3716, 2677, 3699, 2232, 4130, 1461, 2875,
	3292, 744, 3243, 2165, 3068, 1408, 3799, 3431, 3603, 1143,
	2882, 1744, 3534, 1212, 2948, 1558, 1741, 2883, 3501, 809,
	3031, 2876, 1559, 3107, 2613, 1384, 2906, 484, 3510, 2157,
	1410, 2694, 105, 2442, 1155, 2588, 1373, 1072, 2972, 1264,
	3110, 2619, 134, 2618, 2818, 710, 3389, 704, 2483, 2841,
	1405, 2548, 2218, 3173, 692, 1747, 1412, 2617, 2158, 2220,
	1151, 2140, 2099, 1265, 2040, 1717, 2571, 2479, 2929, 1442,
	1238, 1608, 1201, 1069, 1604, 2456, 2338, 2263, 1450, 687,
	2680, 1445, 2601, 2104, 1298, 666, 1634, 1276, 3035, 3219,
	1379, 1146, 1607, 1469, 2412, 1065, 2302, 2225, 1066, 675,
	1391, 1383, 662, 708, 1382, 1381, 2458, 663, 3620, 566,
	650, 1159, 565, 1182, 1275, 1257, 2072, 1164, 2073, 2039,
	548, 1170, 1196, 1710, 129, 685, 125, 4589, 4583, 658,
	4570, 4554, 4540, 4508, 4506, 4478, 4475, 4474, 4473, 4458,
	4456, 4364, 4360, 4355, 2873, 100, 4037, 4036, 1147, 3307,
	3536, 2097, 2501, 3776, 1174, 4226, 2535, 3919, 3382, 2534,
	2902, 3771, 3772, 3769, 3770, 2909, 3351, 3352, 1385, 86,
	3636, 94, 1433, 3917, 4530, 1184, 2853, 4578, 4493, 4491,
	99, 2914, 2913, 3775, 4529, 3385, 3920, 97, 4492, 2940,
	1720, 649, 3383, 4298, 4297, 71, 42, 655, 4496, 681,
	672, 4240, 4440, 2647, 47, 4109, 2910, 3932, 2960, 4391,
	1309, 2532, 2842, 3384, 558, 660, 3700, 4132, 2032, 3233,
	122, 4205, 2916, 3794, 2892, 2850, 3702, 3879, 3366, 4239,
	3201, 4108, 2893, 2532, 497, 4532, 4019, 3862, 4334, 3866,
	3239, 3670, 3881, 3526, 3240, 42, 1166, 2219, 1172, 1173,
	3270, 42, 3634, 3874, 3875, 3797, 3798, 2843, 3269, 3090,
	1176, 89, 3089, 4316, 2920, 4058, 2362, 2360, 2359, 2358,
	2361, 2357, 2356, 2355, 2427, 2896, 2369, 4225, 2368, 2367,
	3993, 2366, 2365, 2364, 2363, 2794, 4094, 42, 1142, 2350,
	2362, 2360, 2359, 2358, 2361, 2357, 2356, 2355, 2351, 2352,
	2369, 2353, 2368, 2367, 2354, 2366, 2365, 2364, 2363, 3595,
	89, 1163, 42, 2564, 3254, 3255, 89, 4248, 114, 112,
	113, 537, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	3253, 88, 3511, 3332, 1059, 2854, 1251, 2570, 2912, 3333,
	3334, 661, 2915, 3705, 1158, 2832, 2860, 1154, 2831, 3012,
	2905, 2833, 89, 2103, 4245, 4004, 3239, 1216, 1217, 1351,
	3240, 1220, 2421, 3880, 1483, 1482, 1492, 1493, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1484, 560, 89, 1494, 2101,
	2102, 2852, 2422, 2423, 96, 3703, 3704, 3706, 3707, 3708,
	138, 1609, 136, 1610, 3218, 4318, 1218, 1219, 2143, 2144,
	4248, 1234, 2907, 1235, 1236, 1237, 1236, 1237, 4227, 1245,
	2873, 3556, 148, 144, 145, 2121, 146, 1328, 4243, 4249,
	3827, 557, 89, 556, 2173, 2100, 3820, 3263, 1143, 1221,
	1143, 2918, 3154, 96, 1385, 2718, 2569, 4245, 126, 96,
	644, 1263, 2853, 1258, 2190, 108, 1397, 1398, 1295, 1259,
	2908, 150, 149, 1261, 1336, 2469, 1260, 2454, 2455, 2468,
	3458, 3825, 2459, 2473, 4529, 1207, 659, 2222, 4492, 4490,
	2462, 2461, 3576, 2463, 2864, 96, 1393, 1396, 1397, 1398,
	1394, 4261, 1395, 1400, 153, 3580, 2681, 2682, 3578, 3054,
	2554, 2850, 2553, 1246, 1247, 532, 2459, 555, 2480, 2872,
	96, 639, 4249, 638, 3282, 1393, 1396, 1397, 1398, 1394,
	2857, 1395, 1400, 2078, 535, 4357, 1222, 641, 4358, 1254,
	4359, 640, 639, 3011, 725, 3918, 726, 728, 729, 730,
	731, 2141, 2142, 1349, 727, 2298, 1350, 4577, 1143, 128,
	4530, 4528, 1374, 151, 4527, 152, 1377, 4262, 4493, 132,
	140, 139, 2150, 2646, 4385, 2149, 2148, 3174, 1404, 1409,
	637, 645, 3792, 2955, 1427, 1428, 1143, 2147, 1143, 1143,
	2146, 2145, 1143, 1369, 108, 3977, 1208, 2866, 694, 2992,
	1332, 1333, 1143, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	1503, 1505, 1248, 3784, 1507, 3061, 136, 3059, 3376, 3782,
	4398, 2854, 3060, 3058, 1448, 4397, 137, 141, 3132, 4337,
	2907, 4452, 2860, 4384, 3950, 4198, 3535, 3132, 1401, 3132,
	1311, 3723, 3724, 3725, 3726, 4052, 1522, 3403, 2997, 3717,
	1525, 1526, 1527, 1528, 1529, 4356, 1533, 3720, 2583, 1325,
	3177, 2911, 4200, 4063, 2845, 4062, 2904, 2852, 1302, 3718,
	3719, 108, 3734, 1343, 4060, 3752, 1344, 1376, 2908, 2565,
	2584, 2133, 1473, 3370, 3371, 3372, 3373, 3374, 2959, 2295,
	130, 2373, 131, 2856, 4302, 1311, 2957, 3939, 657, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 3941, 1552, 1553, 1555, 1555, 1555,
	1215, 1560, 1560, 1560, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1419, 2846, 2848, 2849, 2851,
	2864, 2855, 2858, 2859, 2861, 2862, 2863, 2865, 2867, 2868,
	2869, 2870, 2871, 1403, 3635, 147, 2517, 2921, 536, 3882,
	2171, 3701, 1560, 3262, 3936, 2872, 3883, 559, 1335, 3513,
	3405, 672, 672, 4263, 3463, 1311, 2857, 2602, 4054, 1312,
	1319, 1320, 1322, 1323, 1324, 3379, 1326, 1327, 3914, 1329,
	1330, 1331, 2577, 1334, 4107, 1337, 1338, 1339, 1340, 1341,
	3732, 4310, 4246, 3636, 1504, 4095, 4453, 4296, 2172, 3975,
	4586, 3261, 142, 4556, 4333, 3865, 2907, 1370, 4552, 4585,
	2174, 109, 3933, 2961, 4555, 3053, 4471, 1561, 1562, 1554,
	1556, 1557, 4516, 4352, 2891, 1387, 4460, 3060, 3080, 3058,
	1371, 4350, 4351, 2866, 154, 1560, 1560, 1430, 4224, 1430,
	1430, 1436, 4308, 1430, 3885, 115, 1429, 2907, 1434, 1434,
	1262, 1370, 1441, 543, 2908, 1435, 1435, 3864, 1210, 2923,
	109, 1253, 4005, 2903, 3071, 2844, 87, 2079, 3181, 3180,
	3182, 3179, 127, 1255, 3884, 4246, 3186, 1594, 3178, 3175,
	1355, 3533, 3176, 2482, 3184, 3791, 2465, 4383, 3805, 1399,
	3123, 1318, 2103, 2466, 3783, 2908, 3781, 1310, 3183, 2958,
	2845, 4059, 109, 4219, 546, 2296, 2297, 2375, 2376, 2374,
	3512, 3514, 3515, 3516, 1209, 3185, 3187, 1303, 2101, 2102,
	1321, 1399, 1345, 4199, 3938, 4086, 3364, 109, 1388, 2856,
	1233, 4053, 143, 1705, 4025, 3367, 1367, 1466, 1467, 1465,
	1597, 3370, 3371, 3372, 3373, 3374, 1466, 1467, 1465, 4469,
	1399, 4464, 547, 3451, 1316, 3911, 1468, 1168, 1167, 3109,
	1595, 1596, 3117, 3119, 3118, 1468, 1715, 4467, 3111, 3124,
	1725, 1726, 1724, 3123, 3910, 3909, 1072, 3908, 1365, 3907,
	136, 1072, 3905, 1171, 1171, 3906, 2507, 4047, 4048, 136,
	1169, 141, 2846, 2848, 2849, 2851, 2153, 2855, 2858, 2859,
	2861, 2862, 2863, 2865, 2867, 2868, 2869, 2870, 2871, 2511,
	2512, 3935, 4266, 4267, 4328, 3465, 3466, 2506, 1317, 4134,
	1313, 656, 3529, 3530, 1143, 3915, 4043, 2980, 2981, 1230,
	1231, 2105, 3378, 2042, 4306, 107, 1249, 1232, 1229, 108,
	1228, 1227, 1226, 4209, 541, 2154, 3758, 3759, 2032, 544,
	2074, 3188, 1314, 1315, 3502, 4579, 2451, 3503, 3532, 3504,
	4566, 4127, 1158, 590, 3050, 138, 2449, 3464, 4339, 2107,
	4338, 3038, 2106, 1719, 1158, 3038, 3048, 3437, 544, 3047,
	3296, 2518, 4592, 590, 1415, 1417, 4587, 1619, 4571, 4543,
	1361, 1165, 1185, 1743, 1690, 1691, 1692, 1693, 1694, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1360, 1356, 1357, 1358, 1359, 1362, 1363, 1364, 1366,
	4204, 1624, 661, 1700, 3070, 1601, 4077, 1751, 3046, 1612,
	1307, 2844, 1718, 3969, 1613, 3070, 3790, 1723, 3787, 3531,
	3401, 3055, 1451, 1143, 2991, 2987, 2965, 2964, 3112, 2578,
	2138, 1402, 1730, 1728, 1256, 1475, 2500, 2451, 1258, 1162,
	2036, 2036, 2036, 2036, 1259, 2205, 1695, 4476, 1261, 2451,
	2204, 1260, 1424, 1425, 544, 2203, 4361, 544, 2451, 1696,
	1598, 1599, 1161, 4466, 4468, 2529, 123, 3972, 3396, 1386,
	2528, 1175, 1749, 2451, 1418, 1415, 1417, 590, 482, 3452,
	3453, 3454, 2519, 1531, 2067, 3555, 2450, 2451, 3122, 3252,
	123, 2989, 3044, 3038, 2030, 2043, 1416, 3113, 3041, 3773,
	1426, 3040, 3045, 2988, 3436, 140, 139, 118, 1509, 1510,
	2055, 3024, 2131, 2056, 2057, 2058, 2838, 3295, 1415, 1417,
	4564, 89, 2062, 4565, 1508, 4563, 2765, 1732, 2094, 2045,
	1506, 89, 2070, 2735, 2762, 1368, 1306, 2034, 2038, 2712,
	2609, 1551, 689, 2533, 2508, 3037, 2417, 2235, 2114, 1511,
	668, 668, 668, 668, 1623, 121, 1701, 1714, 1706, 1713,
	1704, 1524, 1523, 1721, 1474, 1143, 1293, 1620, 1722, 2159,
	1409, 1198, 2199, 2059, 4217, 2061, 1424, 1425, 1621, 3069,
	108, 2198, 1740, 2162, 1739, 108, 4057, 2450, 2137, 1484,
	3069, 646, 1494, 2112, 3064, 2041, 120, 1250, 1418, 2450,
	2192, 2092, 3067, 2047, 2048, 3044, 3038, 1416, 2450, 2288,
	2287, 3041, 2200, 2427, 3040, 3045, 4076, 3684, 3682, 4075,
	3423, 3422, 2828, 2450, 1426, 2193, 3027, 2176, 2641, 3026,
	3038, 1494, 1508, 3398, 2136, 1158, 2202, 2450, 3039, 2449,
	2076, 2075, 1415, 1417, 3038, 1511, 2069, 4084, 2080, 1158,
	1416, 1511, 3039, 2449, 96, 2085, 2086, 3774, 2109, 2088,
	4329, 4330, 2644, 2642, 2637, 3767, 1143, 2180, 2639, 2256,
	2177, 2289, 2031, 4326, 4327, 2091, 3313, 3311, 96, 3683,
	3841, 108, 3424, 1751, 3020, 3019, 3061, 2113, 2110, 3017,
	3016, 3922, 1411, 3059, 1533, 668, 3046, 2132, 1509, 1510,
	2135, 2291, 3037, 2293, 2819, 2198, 1509, 1510, 1473, 108,
	2151, 2152, 4368, 2835, 2834, 1654, 3028, 3029, 2305, 2307,
	4112, 4111, 2638, 2640, 2643, 2645, 3079, 3078, 3923, 2294,
	2299, 3077, 3076, 3075, 3074, 2324, 2327, 3073, 3312, 2167,
	3072, 2201, 2709, 2340, 1239, 2543, 3021, 2706, 2261, 2264,
	2703, 3018, 2170, 2155, 2166, 2168, 2169, 2228, 4354, 1468,
	668, 2342, 1224, 672, 672, 672, 672, 2178, 2179, 2935,
	2181, 2191, 2370, 2371, 1416, 2836, 1487, 1488, 1489, 1490,
	1491, 1484, 4123, 672, 1494, 2426, 2242, 1214, 1466, 1467,
	1465, 2115, 1620, 4369, 2118, 2119, 2120, 1072, 2122, 2123,
	2255, 3007, 2124, 1621, 681, 3006, 2125, 1468, 3005, 2126,
	662, 2270, 1241, 2127, 2128, 3004, 2129, 2130, 2432, 1466,
	1467, 1465, 2240, 3003, 1641, 3002, 2268, 2269, 2267, 1465,
	4575, 3203, 1751, 4392, 2252, 1151, 3001, 2339, 1468, 725,
	2598, 726, 728, 729, 730, 731, 1468, 1240, 2544, 727,
	2298, 2265, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 1374, 1225, 1494, 4569, 2434, 1466,
	1467, 1465, 1467, 1465, 2597, 1483, 1482, 1492, 1493, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1484, 1213, 1468, 1494,
	1468, 2378, 2308, 2309, 2310, 2311, 2312, 2261, 1466, 1467,
	1465, 2526, 552, 2383, 3733, 2385, 4573, 1655, 672, 4546,
	4513, 4545, 1243, 2090, 2448, 1269, 2336, 1468, 1178, 1177,
	2409, 2963, 2339, 2439, 2778, 4542, 1483, 1482, 1492, 1493,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1484, 4454, 4402,
	1494, 1708, 3727, 2411, 2489, 2490, 2491, 2492, 2493, 2433,
	3144, 2549, 2046, 4272, 2756, 4401, 2755, 4400, 2215, 1252,
	163, 3132, 485, 496, 2241, 4420, 163, 2415, 2217, 2524,
	2525, 163, 2419, 672, 2424, 2418, 1466, 1467, 1465, 2065,
	3793, 632, 632, 2226, 2295, 2438, 2985, 4272, 2436, 4346,
	163, 4345, 2460, 2226, 2216, 1468, 2510, 4580, 3305, 163,
	2494, 3141, 2476, 2477, 2478, 2485, 2486, 2487, 2488, 3802,
	2499, 1462, 163, 2464, 2467, 4560, 4196, 2470, 2471, 2472,
	4301, 3816, 2481, 163, 1157, 2292, 2732, 2733, 2734, 4258,
	1531, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1484, 4434,
	2496, 1494, 4055, 4202, 2214, 163, 632, 4195, 1157, 3663,
	3661, 4124, 89, 2315, 2316, 2317, 4581, 485, 163, 2321,
	3662, 2323, 2326, 2329, 2266, 2334, 2335, 4197, 2502, 4431,
	2504, 2345, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 4020, 2377, 1494, 2379, 2380, 2248,
	2250, 2251, 2384, 4056, 2386, 2387, 3930, 2249, 4433, 3929,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 3117, 3119, 3118, 1531, 1483, 1482, 1492, 1493,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1484, 4430, 3928,
	1494, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 3927, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 3921, 1656, 1657, 1658, 1638, 1637, 1669, 1639,
	1642, 1636, 1640, 1635, 2237, 3743, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 3027, 3691, 2641, 3026, 2238,
	689, 3138, 2239, 3690, 3476, 689, 2405, 2760, 3667, 694,
	103, 2347, 3417, 2244, 2245, 2246, 1483, 1482, 1492, 1493,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1484, 2769, 3416,
	1494, 2644, 2642, 2637, 1478, 3415, 1481, 2639, 3414, 1555,
	2296, 2297, 3356, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	3308, 1479, 1480, 1477, 2934, 2932, 110, 2919, 116, 3117,
	3119, 3118, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 1301, 1300, 1494, 1385, 3588, 3381,
	3380, 1531, 1466, 1467, 1465, 3028, 3029, 2319, 2320, 4272,
	689, 2638, 2640, 2643, 2645, 3519, 3517, 4591, 4590, 4574,
	4557, 1468, 4551, 4480, 3665, 4472, 3518, 3332, 1059, 2568,
	3322, 3323, 3325, 3333, 3334, 3324, 3326, 3327, 4362, 4343,
	2560, 4342, 1060, 1061, 1062, 1670, 1378, 1404, 4289, 4288,
	3328, 3329, 3330, 3331, 1160, 4282, 2757, 1377, 1659, 4281,
	1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1484, 4061, 2545, 1494, 3117, 3119, 3118, 3952, 1466,
	1467, 1465, 689, 3602, 3455, 668, 4390, 2431, 2975, 2541,
	4522, 2551, 2974, 2555, 2698, 2699, 2700, 2540, 1468, 2539,
	2290, 2547, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 2084, 163, 1494, 2233, 2234, 2077,
	1738, 1737, 2691, 1709, 1707, 1466, 1467, 1465, 1296, 554,
	485, 2697, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 1468, 4389, 1494, 2736, 1273, 4386,
	1448, 1448, 4319, 1466, 1467, 1465, 1466, 1467, 1465, 3523,
	2256, 4404, 4315, 2676, 4349, 4299, 4234, 2495, 2610, 3521,
	1272, 4228, 1468, 4126, 1751, 1468, 2575, 2559, 2211, 1466,
	1467, 1465, 4125, 2567, 1466, 1467, 1465, 3205, 2213, 163,
	2083, 4051, 2574, 42, 45, 4285, 2207, 4050, 1468, 2582,
	2692, 2625, 2585, 1468, 4031, 3976, 2209, 71, 2082, 3940,
	3117, 3119, 3118, 93, 2212, 3937, 47, 75, 76, 3904,
	3117, 3119, 3118, 3873, 72, 3872, 3837, 3796, 3795, 3742,
	3741, 3740, 2208, 3739, 3730, 2603, 3729, 88, 3728, 2261,
	2730, 2731, 2606, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 63, 3689, 1494, 2696, 89, 3686,
	672, 2685, 3664, 562, 2210, 3659, 3653, 3651, 3647, 2264,
	3646, 3645, 2612, 3520, 3509, 3500, 3498, 3494, 3493, 3492,
	3420, 163, 2206, 3413, 3412, 3411, 3339, 3153, 3152, 3150,
	3022, 2433, 2930, 2837, 1521, 1520, 1519, 2604, 672, 2566,
	2538, 163, 2087, 668, 1731, 2759, 668, 2711, 689, 689,
	2722, 2720, 2721, 1492, 1493, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1484, 2741, 1342, 1494, 3951, 485, 4091, 689,
	3897, 3815, 2581, 3539, 4444, 3673, 4374, 3539, 689, 3896,
	1072, 3959, 689, 634, 3358, 2737, 3673, 4305, 3673, 4206,
	3673, 4040, 3539, 4039, 3342, 2745, 1751, 3539, 4034, 3973,
	689, 3539, 3944, 3132, 689, 2608, 689, 3539, 3812, 2032,
	3755, 2265, 49, 90, 56, 55, 58, 3814, 1307, 80,
	3341, 96, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 2032, 3754, 1494, 3673, 3672, 3539,
	3538, 3349, 3348, 3345, 3346, 62, 92, 91, 3345, 3344,
	2711, 689, 57, 3340, 2777, 2580, 2579, 2313, 2562, 2313,
	689, 1749, 2194, 689, 2413, 1626, 1625, 77, 1483, 1482,
	1492, 1493, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1484,
	2413, 3604, 1494, 2973, 3623, 2515, 2973, 2886, 2889, 1347,
	590, 102, 3239, 2821, 4524, 2822, 3240, 2823, 2230, 2032,
	2979, 2847, 2881, 2824, 2884, 2885, 2825, 3623, 2313, 4235,
	3598, 2793, 2795, 89, 1346, 2877, 1696, 1305, 2801, 2802,
	2803, 2804, 4105, 2414, 1718, 2416, 2532, 69, 70, 2514,
	3850, 2826, 2829, 1612, 1304, 3132, 2194, 1305, 3539, 2414,
	2194, 2032, 2967, 2194, 2839, 2036, 3623, 3359, 2711, 3347,
	1307, 3151, 2229, 3000, 2420, 78, 672, 79, 2788, 672,
	2786, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1484, 2159, 3014, 1494, 2785, 2711, 2596, 2089,
	84, 2537, 2531, 2231, 2931, 1372, 2134, 2162, 2098, 60,
	2933, 2032, 1729, 1727, 1606, 1375, 2746, 2747, 2748, 2749,
	2750, 2977, 89, 4336, 2690, 4207, 4071, 2922, 2924, 3955,
	3692, 3681, 2925, 2926, 3678, 2927, 2928, 2457, 2484, 2459,
	2956, 3126, 3010, 3009, 2775, 2480, 2874, 2681, 2682, 2688,
	1311, 2509, 2475, 2474, 3139, 2993, 1699, 3142, 1292, 2498,
	3145, 3744, 2971, 2999, 2550, 1205, 1204, 4559, 4558, 82,
	83, 4537, 4535, 4526, 4525, 4501, 4494, 2976, 4488, 4486,
	668, 4436, 4435, 64, 81, 3128, 66, 67, 73, 3807,
	74, 2986, 3803, 3134, 3135, 3136, 3130, 2256, 3032, 3043,
	3604, 2990, 3042, 3049, 3357, 3052, 3108, 3036, 2970, 2969,
	2953, 1751, 3065, 2936, 3063, 2684, 2678, 2108, 3008, 3030,
	3162, 1734, 3146, 1348, 1308, 2189, 2186, 3013, 2184, 2687,
	2188, 2187, 2686, 2185, 3025, 3597, 1455, 1456, 3116, 531,
	2183, 2182, 4324, 4238, 3155, 3212, 1455, 1456, 2719, 4073,
	2727, 2726, 4010, 3788, 3764, 163, 4291, 3676, 3445, 1451,
	4233, 3444, 3338, 3337, 1157, 3189, 3336, 1458, 3191, 3236,
	3241, 2890, 1460, 1459, 668, 1457, 2261, 1458, 1453, 2880,
	3235, 4097, 1460, 1459, 108, 1457, 1483, 1482, 1492, 1493,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1484, 4292, 4100,
	1494, 4232, 3244, 1407, 43, 3991, 533, 534, 3989, 4046,
	4045, 4, 3943, 553, 3133, 2558, 2557, 2081, 3924, 3925,
	3246, 3057, 3056, 3162, 3202, 1443, 3421, 3157, 3149, 4367,
	3780, 3147, 3641, 3456, 3310, 4517, 1444, 2611, 1622, 1290,
	3159, 2751, 1274, 1271, 1270, 3160, 1211, 485, 43, 3163,
	3164, 3962, 3961, 3306, 1157, 163, 106, 1385, 2233, 2234,
	3319, 3842, 1267, 1268, 3386, 632, 632, 2779, 3737, 3237,
	632, 3190, 59, 61, 3735, 3738, 1402, 163, 87, 2503,
	163, 3736, 4408, 1733, 1266, 632, 632, 4236, 4201, 3947,
	1374, 163, 3694, 672, 3680, 485, 485, 485, 485, 2938,
	2303, 2304, 3294, 2156, 3289, 2083, 2082, 1439, 1440, 1353,
	163, 163, 163, 163, 163, 3587, 163, 590, 4407, 3314,
	85, 3248, 4406, 3250, 3251, 3901, 3318, 3375, 2847, 1437,
	1438, 2725, 163, 163, 3249, 2600, 3116, 632, 3586, 2724,
	3298, 3299, 3300, 163, 3301, 3302, 3213, 3214, 3215, 3216,
	3217, 683, 3256, 1431, 1432, 1244, 3288, 4321, 4320, 4230,
	4118, 4101, 4064, 4009, 3360, 3823, 3257, 684, 102, 3822,
	3297, 2494, 3304, 3561, 2973, 2942, 2943, 2944, 4539, 4538,
	676, 4363, 3408, 2998, 2996, 2995, 1157, 672, 3438, 2787,
	2766, 2763, 2729, 2586, 2060, 3388, 1463, 1203, 1202, 632,
	632, 632, 4538, 4539, 1157, 4114, 3377, 3335, 2227, 680,
	679, 4424, 2346, 4153, 65, 3316, 3238, 3317, 104, 1483,
	1482, 1492, 1493, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1484, 4155, 23, 1494, 68, 632, 3355, 4154, 22, 4290,
	632, 632, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 4156, 24, 1494, 4157, 25, 3433,
	163, 163, 4151, 18, 3397, 163, 1, 1157, 3402, 4150,
	17, 3527, 3406, 3407, 4223, 3409, 3394, 3392, 670, 163,
	632, 50, 163, 163, 163, 163, 4149, 16, 2576, 3395,
	3343, 3433, 3434, 2116, 163, 589, 3410, 4152, 19, 4148,
	15, 3715, 163, 4142, 11, 3714, 163, 4177, 39, 3721,
	2625, 4175, 37, 4174, 36, 4178, 40, 3559, 3365, 688,
	690, 3537, 3440, 3441, 3442, 3499, 3368, 3030, 3425, 3447,
	3448, 3467, 3450, 2877, 1696, 3554, 3435, 2954, 3446, 4173,
	32, 4218, 3418, 3419, 4172, 31, 3468, 4171, 30, 3473,
	4085, 3459, 3593, 3461, 4168, 27, 163, 3116, 4167, 26,
	4147, 14, 3731, 485, 3474, 3487, 3477, 3489, 3479, 3481,
	3483, 3485, 4144, 13, 4143, 12, 4141, 10, 1716, 3913,
	3505, 3506, 3507, 1181, 2513, 3490, 3491, 3612, 1297, 4231,
	3525, 4096, 3497, 4098, 3698, 3697, 2947, 2946, 3608, 1157,
	3508, 1157, 108, 1291, 1157, 3522, 3524, 2563, 2096, 3125,
	3033, 1157, 3127, 3034, 3244, 2527, 1157, 1157, 3023, 3562,
	4116, 2159, 3540, 2599, 2139, 163, 2587, 163, 1354, 2435,
	3606, 2440, 3246, 3861, 3632, 2162, 4018, 3631, 3630, 2840,
	1145, 3671, 117, 2542, 1223, 505, 3607, 2437, 2900, 4099,
	1294, 2899, 2917, 2453, 1380, 1419, 3869, 2898, 694, 2897,
	4203, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228,
	3229, 3230, 2901, 1555, 1555, 1555, 1560, 1560, 1560, 1563,
	1564, 1565, 1566, 1560, 1560, 1560, 1631, 1629, 3575, 1630,
	1628, 163, 163, 163, 1633, 1632, 511, 3628, 1614, 4276,
	3601, 3605, 1464, 737, 135, 3652, 3204, 3066, 642, 643,
	3571, 3572, 3573, 124, 3574, 133, 513, 1502, 2723, 1157,
	3577, 2830, 3579, 1070, 1071, 3685, 3610, 1063, 4366, 3624,
	3625, 3626, 3627, 3621, 2714, 4110, 3992, 3116, 4102, 4265,
	1449, 3622, 3637, 3638, 3639, 3994, 3821, 3560, 3629, 2776,
	1550, 2337, 707, 654, 3654, 3618, 3840, 3996, 2247, 3559,
	3655, 3656, 3657, 721, 720, 3643, 3644, 3677, 698, 719,
	3660, 3669, 3650, 716, 717, 2372, 3710, 3711, 3712, 4247,
	3658, 2236, 3585, 3232, 3231, 3745, 3666, 3668, 3234, 3747,
	1476, 3350, 1352, 696, 1423, 1422, 1421, 1420, 1414, 665,
	2406, 3695, 1561, 1562, 2984, 1554, 1556, 1557, 1594, 1595,
	1596, 1392, 1390, 1389, 163, 3688, 1735, 1602, 2683, 2679,
	163, 163, 632, 632, 632, 664, 669, 163, 46, 3674,
	3675, 2728, 1242, 3749, 3709, 1454, 3594, 3713, 3751, 4003,
	111, 678, 677, 686, 3303, 29, 21, 3760, 3761, 20,
	1199, 2616, 2636, 1179, 48, 54, 53, 51, 3433, 52,
	2941, 2505, 4275, 3762, 4462, 1277, 3779, 4479, 3746, 4511,
	38, 35, 34, 33, 4169, 4163, 4162, 4165, 3750, 4164,
	4161, 4166, 4160, 3433, 4159, 3753, 1483, 1482, 1492, 1493,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1484, 3756, 4158,
	1494, 3393, 4176, 4146, 3032, 3043, 3763, 3818, 3042, 4145,
	3785, 4446, 4445, 3036, 5, 98, 95, 41, 119, 1141,
	3200, 2, 0, 3777, 0, 0, 0, 3768, 0, 0,
	0, 0, 0, 3786, 0, 0, 3559, 3559, 0, 0,
	3162, 0, 0, 0, 0, 3809, 3811, 0, 0, 0,
	0, 0, 3810, 0, 3789, 0, 0, 0, 0, 0,
	3847, 0, 0, 3612, 0, 0, 3824, 3826, 668, 0,
	0, 3852, 0, 0, 107, 0, 0, 0, 108, 0,
	0, 0, 0, 3863, 0, 0, 0, 0, 0, 3806,
	0, 3116, 0, 0, 0, 3199, 3844, 0, 0, 0,
	0, 0, 0, 3804, 3244, 0, 0, 0, 0, 0,
	3488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3246, 3565, 3566, 3567, 3568, 3569, 0, 0,
	0, 3893, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 1143, 0, 1494, 0, 0, 3867,
	0, 0, 0, 0, 0, 3899, 0, 0, 0, 108,
	3846, 0, 3860, 0, 0, 0, 0, 0, 0, 0,
	0, 3854, 0, 3891, 3870, 3843, 3894, 0, 0, 0,
	0, 0, 3851, 662, 0, 0, 3855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3898, 0,
	0, 3294, 0, 0, 0, 0, 3116, 1483, 1482, 1492,
	1493, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1484, 3900,
	3294, 1494, 0, 0, 0, 163, 0, 0, 0, 0,
	3877, 3887, 3888, 3596, 3886, 3116, 3889, 3890, 3876, 3198,
	0, 0, 0, 0, 3971, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 3903, 0, 3902, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3912, 3916,
	0, 0, 0, 0, 3926, 0, 0, 0, 0, 3931,
	3934, 672, 0, 1157, 3949, 3945, 3948, 3964, 3942, 3965,
	0, 163, 0, 163, 0, 0, 0, 1157, 3847, 4014,
	3165, 0, 1157, 0, 3953, 3954, 0, 0, 0, 0,
	4013, 0, 0, 3980, 108, 4022, 4023, 0, 0, 0,
	3963, 0, 0, 3956, 3957, 1157, 0, 0, 1157, 1483,
	1482, 1492, 1493, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1484, 3978, 0, 1494, 0, 0, 0, 0, 0, 4011,
	0, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1484, 0, 0, 1494, 0, 0, 3966, 0,
	3968, 0, 3970, 0, 0, 0, 0, 4026, 0, 0,
	0, 4015, 0, 0, 0, 0, 163, 163, 4017, 4008,
	4028, 4042, 1157, 4044, 0, 163, 0, 0, 0, 4012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4029, 0, 0, 0, 3143, 0, 0, 0, 1157,
	0, 0, 0, 0, 4041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4049, 0, 0, 0,
	0, 0, 0, 3116, 1483, 1482, 1492, 1493, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1484, 0, 0, 1494, 0,
	0, 4069, 0, 0, 0, 3612, 0, 0, 0, 4117,
	0, 0, 0, 0, 0, 4122, 4115, 4067, 0, 4079,
	108, 4068, 4066, 3294, 0, 4070, 4072, 0, 0, 3140,
	0, 0, 0, 1143, 0, 1143, 0, 0, 0, 0,
	4082, 4092, 4083, 4135, 4133, 4081, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 4120, 1483, 1482,
	1492, 1493, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1484,
	3137, 0, 1494, 1143, 0, 4113, 0, 3116, 0, 0,
	0, 4215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4078, 0, 0, 0, 0, 0, 0, 0, 1483,
	1482, 1492, 1493, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1484, 0, 4194, 1494, 0, 0, 0, 4208, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 4211, 0, 0, 0, 0,
	4220, 0, 0, 0, 0, 3244, 3809, 0, 0, 3294,
	163, 0, 4214, 3810, 0, 163, 4216, 0, 163, 163,
	163, 4251, 4222, 3246, 0, 0, 4229, 4257, 0, 0,
	0, 0, 0, 4237, 0, 4253, 0, 0, 4250, 0,
	0, 0, 0, 0, 2879, 0, 1143, 4254, 1143, 0,
	2888, 2888, 4260, 4028, 1143, 0, 0, 0, 0, 0,
	0, 0, 3856, 3857, 3858, 3859, 0, 0, 4264, 4212,
	4268, 0, 0, 0, 0, 0, 0, 4280, 0, 0,
	0, 4286, 0, 0, 0, 0, 0, 4295, 4317, 0,
	0, 4303, 0, 0, 0, 0, 0, 3212, 0, 0,
	0, 1157, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 1157, 1157, 0, 0, 0, 0, 632, 4300, 0,
	0, 4325, 4313, 4304, 0, 2742, 0, 0, 0, 4307,
	0, 0, 0, 4312, 163, 632, 1157, 4311, 4322, 3809,
	485, 0, 0, 4314, 0, 3294, 3810, 0, 0, 4323,
	4309, 0, 0, 632, 1483, 1482, 1492, 1493, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1484, 0, 4376, 1494, 4331,
	4347, 0, 590, 0, 4340, 0, 0, 1157, 0, 4388,
	4344, 632, 4373, 1157, 0, 0, 0, 0, 0, 632,
	4375, 0, 0, 0, 4394, 0, 4387, 0, 0, 0,
	4341, 4353, 0, 0, 0, 0, 0, 1143, 0, 0,
	1143, 1157, 1157, 4380, 4379, 0, 1143, 1143, 1143, 1143,
	0, 1143, 1143, 4378, 4412, 1143, 1143, 3559, 0, 4412,
	4395, 4365, 0, 4412, 4422, 0, 0, 0, 1143, 4393,
	4403, 4396, 4399, 4405, 4347, 4377, 4428, 0, 0, 4410,
	4414, 4415, 4416, 0, 0, 4419, 4443, 4409, 3244, 4425,
	3995, 3998, 1143, 0, 0, 1143, 4432, 4439, 1143, 4429,
	4441, 0, 0, 0, 4423, 0, 3246, 3115, 0, 4461,
	2426, 4451, 0, 108, 4470, 4450, 0, 4459, 4449, 0,
	1531, 4448, 0, 1157, 590, 4455, 4447, 0, 4457, 0,
	0, 1157, 1157, 1157, 4482, 4437, 0, 0, 0, 0,
	0, 0, 0, 1143, 0, 0, 0, 1143, 0, 1143,
	0, 4505, 0, 1143, 0, 4412, 163, 4412, 2195, 2196,
	2197, 4514, 163, 0, 1143, 1143, 1143, 1143, 1157, 1143,
	0, 0, 4412, 4412, 4412, 0, 4503, 4412, 0, 0,
	0, 4487, 0, 0, 4489, 0, 0, 4481, 0, 0,
	0, 0, 0, 4485, 0, 0, 4536, 1143, 0, 1143,
	4521, 1143, 4534, 0, 0, 4412, 0, 4412, 4547, 4549,
	4502, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1484, 0, 0, 1494, 0, 1157, 4561, 0,
	0, 1143, 4567, 0, 4544, 0, 0, 1143, 0, 4412,
	0, 0, 0, 0, 0, 1143, 2614, 2615, 0, 0,
	0, 0, 0, 4412, 0, 0, 163, 0, 0, 0,
	0, 1143, 0, 0, 1143, 0, 0, 0, 0, 4412,
	4572, 1157, 0, 0, 1143, 0, 0, 1531, 0, 0,
	1143, 0, 4412, 2314, 0, 0, 0, 0, 4412, 0,
	0, 2318, 0, 0, 0, 0, 0, 4584, 0, 0,
	0, 0, 2713, 0, 0, 3115, 0, 485, 0, 0,
	0, 0, 0, 2888, 2888, 2888, 0, 2888, 2888, 0,
	0, 0, 0, 485, 2381, 2382, 0, 0, 0, 0,
	0, 2388, 2389, 2390, 2391, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2404, 0, 2066, 1483, 1482, 1492, 1493, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1484, 0, 0, 1494, 0, 163,
	0, 526, 0, 3998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 1157, 1157, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 163, 632, 0,
	0, 0, 1157, 1157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 1157, 0, 632, 0, 0, 0, 632, 632,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 163, 0, 0, 0, 4269, 4273, 0,
	0, 0, 0, 0, 0, 0, 4287, 0, 0, 0,
	0, 0, 0, 0, 485, 2888, 0, 0, 0, 0,
	0, 0, 485, 485, 485, 485, 1157, 498, 0, 1157,
	485, 485, 1157, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 1157, 0, 1157, 0, 485, 485, 1157, 163,
	485, 0, 0, 0, 0, 1157, 0, 1157, 1157, 1157,
	1157, 1157, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 0, 3115, 0, 0, 0,
	0, 0, 0, 512, 524, 525, 0, 2224, 0, 0,
	4348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 507, 0, 514, 510, 0, 0, 519, 520, 163,
	0, 0, 0, 0, 1157, 2262, 0, 0, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2322, 0, 0, 0, 2330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 1157,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3015, 0, 4477, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 3051, 0, 0, 0,
	509, 0, 0, 0, 0, 3062, 3115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 0,
	0, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099,
	3100, 3101, 3102, 3103, 3104, 3105, 3106, 0, 3120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 522,
	0, 0, 0, 0, 0, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4548, 0, 0, 0, 0, 0, 0, 4553, 0,
	163, 0, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2552, 1157, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 515,
	502, 503, 0, 529, 0, 0, 0, 504, 506, 0,
	500, 528, 527, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 0, 518, 0,
	2607, 0, 0, 0, 0, 0, 0, 3258, 3259, 3260,
	0, 3264, 3265, 3266, 3267, 3268, 0, 0, 3271, 3272,
	3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 0,
	3283, 3284, 3285, 3286, 3287, 0, 3290, 0, 0, 0,
	0, 2693, 0, 0, 0, 0, 0, 0, 0, 0,
	3115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2710, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1157, 0,
	0, 0, 2675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1385, 0, 2632, 0,
	0, 0, 0, 0, 2656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 2743, 0, 2744, 0, 0, 0, 163,
	163, 0, 0, 0, 0, 0, 2631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2752, 2753,
	2754, 0, 0, 2653, 2758, 3115, 2761, 0, 0, 2764,
	0, 0, 2767, 2768, 0, 0, 0, 2773, 2774, 0,
	0, 0, 0, 2780, 2781, 2782, 0, 0, 2783, 0,
	2784, 0, 0, 0, 3115, 0, 485, 0, 0, 2888,
	2888, 1157, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 3457, 0, 0,
	2789, 2790, 2791, 2792, 0, 0, 2796, 2797, 2798, 2799,
	2800, 0, 0, 0, 0, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 0, 2817, 0,
	0, 0, 3495, 3496, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 2622, 2621, 2634, 2641, 2620, 2633,
	2624, 0, 0, 2657, 0, 0, 71, 0, 0, 0,
	2556, 0, 93, 0, 2663, 47, 2888, 2888, 0, 0,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2644, 2642, 2637, 0, 0, 0, 2639, 0, 485,
	1157, 485, 0, 485, 0, 671, 0, 0, 0, 2655,
	0, 2628, 2627, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4186, 0, 0, 0, 0, 0, 2623,
	0, 1157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2605, 4179, 2629, 2630, 0, 0, 2647,
	0, 2638, 2640, 2643, 2645, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3115, 0, 0, 2701, 2702, 0, 0, 2704,
	2705, 0, 2667, 2707, 2708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3640, 0, 3642, 0, 0, 0,
	0, 0, 3648, 3649, 0, 0, 1144, 2674, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 2660, 0,
	96, 0, 0, 0, 0, 0, 4180, 0, 1180, 0,
	0, 0, 0, 0, 0, 0, 0, 2738, 2739, 2740,
	632, 1197, 0, 0, 62, 92, 91, 0, 485, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 163, 3115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2770, 2771, 2772, 0, 0, 0, 0, 3131, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4191,
	4183, 4184, 4185, 4189, 4190, 4187, 4520, 4188, 0, 4192,
	0, 0, 2649, 0, 78, 0, 79, 0, 3167, 3168,
	3169, 3170, 3171, 3172, 485, 0, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 2659, 0, 0, 1157, 0, 0, 0, 60, 3778,
	0, 0, 0, 0, 2626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 1452,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2650, 2651, 2652, 2654, 0, 2658,
	2661, 2662, 2664, 2665, 2666, 2668, 2669, 2670, 2671, 2672,
	2673, 0, 4193, 4181, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 1157, 0, 157, 0, 2646,
	0, 0, 0, 530, 0, 0, 0, 0, 157, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 2978, 0,
	0, 0, 0, 0, 0, 0, 2982, 2983, 1157, 652,
	695, 0, 0, 0, 0, 0, 1080, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 157, 576, 587, 569, 0, 0, 1200, 0,
	0, 0, 0, 0, 3868, 157, 0, 0, 0, 0,
	0, 0, 0, 2648, 0, 577, 0, 4093, 0, 0,
	0, 0, 0, 0, 0, 632, 0, 1654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 1157, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 706, 0, 0, 0, 1641, 0, 0, 0,
	0, 3166, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3192,
	0, 3193, 3194, 0, 3195, 3196, 0, 0, 3197, 0,
	568, 567, 570, 0, 0, 0, 163, 3542, 3543, 3544,
	575, 0, 0, 0, 3206, 3207, 3208, 3209, 0, 0,
	158, 0, 488, 0, 0, 0, 0, 0, 579, 0,
	0, 158, 0, 583, 0, 0, 3563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3570, 0, 586, 1655,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 3581, 3582, 3583, 3584, 0, 0, 0, 0,
	3589, 0, 653, 4030, 0, 4032, 4033, 0, 0, 1081,
	571, 3599, 3600, 158, 1149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 3609,
	0, 0, 0, 0, 0, 0, 0, 488, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 573, 580,
	2111, 584, 585, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4210, 0,
	0, 0, 0, 1668, 1671, 1672, 1673, 1674, 1675, 1676,
	0, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 0, 1656, 1657, 1658, 1638, 1637,
	1669, 1639, 1642, 1636, 1640, 1635, 0, 0, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 0, 652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1080, 0, 0, 3545, 3546, 3547, 3548,
	3549, 3550, 3551, 3552, 3553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 0, 0, 2675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3590, 3591, 3592,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	2632, 0, 0, 0, 0, 158, 2656, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	488, 0, 0, 3832, 3833, 3834, 0, 3836, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 2631, 0,
	0, 3845, 0, 3848, 3849, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 3853, 2653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	1603, 0, 0, 1736, 0, 3679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3687, 0,
	0, 0, 3892, 0, 0, 0, 0, 0, 0, 549,
	3895, 0, 0, 2049, 2050, 2051, 2052, 2053, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2622, 3427, 2634, 0,
	3426, 2633, 2624, 0, 1079, 2657, 0, 0, 0, 1148,
	0, 653, 0, 0, 0, 0, 2663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 1186, 0, 0, 0, 0, 3958, 0,
	0, 0, 0, 0, 0, 0, 1081, 0, 0, 0,
	0, 2655, 0, 2628, 2627, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2623, 3974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3428, 3429, 0,
	0, 2647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3999, 4000, 4001, 4002, 0, 0, 0, 0, 0,
	0, 4006, 4007, 1603, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4016, 0, 0, 0, 0,
	0, 0, 2175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 0, 2667, 1080, 0, 0, 0, 4027,
	1080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2243,
	0, 0, 0, 0, 3828, 3829, 3830, 3831, 0, 0,
	0, 0, 3835, 0, 0, 0, 3838, 3839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 1712, 550, 0,
	0, 0, 0, 0, 4087, 4088, 4089, 4090, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 157, 0, 0,
	1712, 550, 0, 0, 1746, 0, 4106, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4119, 0, 0, 157, 157, 157,
	157, 157, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 4128, 0, 0, 2649, 0, 0, 0, 0, 2063,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2659, 2408, 0, 2410, 0, 0, 0,
	0, 0, 4213, 0, 0, 0, 2626, 0, 0, 0,
	0, 0, 0, 4221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4241, 0, 0, 0, 0, 4252, 0,
	0, 0, 0, 4255, 4256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2650, 2651, 2652, 2654,
	0, 2658, 2661, 2662, 2664, 2665, 2666, 2668, 2669, 2670,
	2671, 2672, 2673, 0, 0, 158, 0, 0, 1081, 0,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	0, 2646, 0, 3981, 3982, 3983, 0, 157, 157, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 2520, 1746, 157,
	157, 157, 157, 2522, 2523, 0, 0, 0, 0, 0,
	2530, 652, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 4021, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 4038, 0, 0, 158, 4332, 0, 0, 0,
	4335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 695, 0, 157, 0, 2648, 0, 158, 0, 0,
	158, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 488, 488, 488, 0,
	0, 1079, 4065, 0, 0, 0, 0, 0, 0, 0,
	158, 158, 158, 158, 158, 0, 158, 2223, 0, 0,
	4074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 652, 0, 157, 2223, 2223, 2223, 0, 0,
	0, 2223, 0, 2223, 2223, 2223, 0, 2223, 2223, 0,
	0, 0, 1080, 2223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2223, 2223, 2223,
	2223, 0, 4121, 2223, 2223, 2223, 2223, 2223, 0, 0,
	4438, 0, 2223, 2223, 2223, 2223, 2223, 2223, 2223, 2223,
	2223, 2223, 2223, 2223, 0, 0, 0, 0, 157, 157,
	157, 0, 0, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4483,
	4484, 0, 0, 1748, 42, 0, 0, 0, 0, 0,
	0, 0, 4495, 0, 0, 4497, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	158, 158, 0, 0, 0, 653, 0, 2160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 158, 158, 158, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 653, 0, 0, 0, 0, 89,
	4515, 4533, 158, 0, 0, 4186, 653, 0, 2536, 0,
	0, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 4179, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 2546, 157, 157, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 4293, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 2258, 0, 0,
	160, 0, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 653, 0, 158, 4180, 0,
	0, 0, 0, 160, 1153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2341, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1079, 0, 0, 0, 0, 1079, 1615,
	0, 158, 158, 158, 0, 0, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2258, 0, 0, 1149,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4182, 0, 0, 0, 4426, 0, 0, 0, 0,
	0, 4191, 4183, 4184, 4185, 4189, 4190, 4187, 0, 4188,
	0, 4192, 0, 4442, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 84, 0, 0, 0, 1711, 549, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4498, 0, 0, 0, 0, 0, 1711, 549,
	0, 0, 1745, 0, 158, 0, 0, 0, 0, 0,
	158, 158, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4193, 4181, 0, 66, 67, 73,
	157, 74, 0, 0, 0, 0, 4550, 0, 0, 0,
	0, 0, 0, 2820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 157, 0,
	652, 2095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 2939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2164, 0, 0, 160, 0, 0, 159, 0,
	0, 0, 0, 652, 157, 0, 1745, 2966, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 1150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1080,
	1080, 0, 0, 0, 159, 1748, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 486, 159, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2164, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2223, 0, 0, 0, 0, 0, 2223, 2223,
	2223, 2223, 2223, 0, 2164, 158, 2164, 0, 0, 2300,
	0, 0, 0, 0, 0, 0, 2301, 0, 0, 0,
	0, 2164, 2164, 0, 0, 0, 2223, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 653, 0, 0, 71, 0, 0, 3156,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 157, 0, 1079, 157, 2827, 1748, 0, 1080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2164, 0, 0, 1148, 0, 0, 89, 0, 0,
	42, 0, 0, 4186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 4179, 0, 0, 4510, 4513, 4509,
	0, 0, 0, 0, 0, 0, 653, 158, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4186, 1081, 1081, 0, 0, 0, 0, 2258, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 4179, 0, 0, 0, 0, 4588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4180, 0, 0, 0,
	0, 3309, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 486,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	3387, 0, 0, 0, 4180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4182,
	0, 0, 0, 0, 0, 1603, 1603, 0, 0, 4191,
	4183, 4184, 4185, 4189, 4190, 4187, 0, 4188, 0, 4192,
	158, 0, 0, 0, 78, 158, 79, 0, 158, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 2223, 1748, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 157, 488, 0, 0, 0, 60, 157,
	695, 0, 3470, 0, 69, 70, 2223, 4182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4191, 4183, 4184,
	4185, 4189, 4190, 4187, 0, 4188, 0, 4192, 0, 0,
	159, 0, 78, 0, 79, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 486, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 4193, 4181, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	488, 1080, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	4193, 4181, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	160, 2160, 0, 0, 0, 0, 0, 0, 2561, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 2573, 0, 0, 0, 0, 2573, 0, 0,
	160, 160, 160, 160, 160, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	2573, 0, 0, 2573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 2258, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 2695, 0, 157,
	157, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2717, 0, 0, 1079, 1079, 85,
	0, 0, 0, 2164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 3748, 0, 0, 87, 157, 0, 0, 0,
	160, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 160, 160, 160, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 3245, 0, 158, 85, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 1079, 0, 0,
	0, 0, 0, 1080, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 486, 158, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 158, 158, 486, 486, 486, 486, 0, 0,
	0, 160, 160, 160, 0, 0, 2937, 0, 0, 159,
	159, 159, 159, 159, 488, 159, 2945, 2949, 0, 0,
	0, 0, 488, 488, 488, 488, 0, 0, 0, 1153,
	488, 488, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 2968, 0, 0, 0, 0, 488, 488, 0, 158,
	488, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2573, 0, 0, 0, 0, 0, 2994, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2164, 2164, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 653,
	160, 160, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	159, 0, 0, 0, 0, 0, 2161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 159, 159, 159, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3129, 0,
	0, 159, 0, 0, 0, 0, 3129, 3129, 3129, 0,
	0, 0, 0, 0, 0, 0, 3245, 0, 0, 2160,
	2164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 2257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3210, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 0, 0, 0, 0, 652, 157, 0, 0,
	0, 0, 0, 1080, 0, 0, 159, 0, 0, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 4080, 0,
	158, 0, 0, 0, 0, 0, 2164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 159, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 488, 0, 2257, 0, 0, 1150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 3361, 3362,
	3363, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3129, 3129, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4259, 0, 0, 71, 3400, 0, 0,
	0, 160, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 159,
	159, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 3443, 71, 4186, 2695, 0, 0, 3449, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 2695, 0, 2695,
	0, 0, 0, 3469, 4179, 0, 0, 0, 0, 4582,
	2695, 0, 2695, 3478, 2695, 2695, 2695, 2695, 0, 0,
	653, 0, 0, 0, 0, 0, 0, 160, 0, 653,
	158, 0, 0, 89, 0, 0, 3245, 0, 0, 4186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4179, 0, 0, 0, 3129, 4576, 0, 0, 0, 0,
	3541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 0, 0, 3557,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 157, 0, 0, 488, 4180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4180, 0, 0, 0, 0, 0, 0, 0,
	0, 1079, 0, 0, 2164, 0, 0, 0, 0, 2695,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 488,
	0, 488, 0, 488, 0, 0, 69, 70, 0, 4182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4191,
	4183, 4184, 4185, 4189, 4190, 4187, 0, 4188, 0, 4192,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	160, 0, 0, 0, 1080, 160, 0, 0, 160, 0,
	0, 0, 0, 0, 159, 0, 0, 157, 0, 84,
	0, 0, 69, 70, 0, 4182, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 4191, 4183, 4184, 4185, 4189,
	4190, 4187, 159, 4188, 0, 4192, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 2949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	159, 0, 0, 0, 60, 0, 0, 0, 3129, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 4193, 4181, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4193, 4181,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 3813, 42, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	488, 0, 71, 2164, 0, 0, 0, 1080, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3245, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	158, 0, 0, 89, 0, 0, 0, 0, 0, 4186,
	0, 0, 0, 1654, 0, 0, 160, 0, 0, 0,
	0, 1079, 160, 0, 0, 0, 0, 0, 0, 0,
	4179, 0, 0, 0, 0, 4568, 0, 0, 0, 85,
	0, 0, 0, 652, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3129, 0, 0, 3129,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 159, 85, 0, 159, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 49, 90, 56,
	55, 58, 1641, 486, 0, 0, 96, 0, 0, 0,
	0, 0, 4180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 3960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 3967, 0, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 2164, 0, 0, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 69, 70, 0, 4182, 0, 0, 0, 0,
	3245, 0, 0, 0, 0, 4191, 4183, 4184, 4185, 4189,
	4190, 4187, 0, 4188, 0, 4192, 0, 160, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	2161, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 160, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 4193, 4181,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4104, 89, 0, 2257, 0, 0, 0, 4186, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 4179,
	3129, 0, 0, 0, 4541, 0, 0, 0, 0, 1668,
	1671, 1672, 1673, 1674, 1675, 1676, 0, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	0, 1656, 1657, 1658, 1638, 1637, 1669, 1639, 1642, 1636,
	1640, 1635, 0, 0, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 0, 0, 0, 0, 0, 0, 2164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 49, 90, 56, 55,
	58, 0, 1079, 0, 0, 96, 0, 0, 0, 0,
	3129, 4180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 486, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	2164, 0, 0, 0, 0, 0, 0, 159, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 85, 0, 0, 0, 93,
	0, 0, 47, 1670, 0, 0, 0, 0, 159, 0,
	0, 69, 70, 0, 4182, 0, 1659, 0, 0, 0,
	0, 0, 0, 4104, 4191, 4183, 4184, 4185, 4189, 4190,
	4187, 0, 4188, 0, 4192, 0, 159, 0, 0, 78,
	160, 79, 0, 0, 89, 0, 0, 0, 0, 0,
	4186, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 71, 0, 0, 0,
	0, 4179, 93, 60, 0, 47, 4523, 0, 0, 160,
	0, 159, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 0, 2164, 0, 0, 0, 0,
	0, 486, 486, 486, 486, 0, 0, 89, 0, 486,
	486, 0, 486, 4186, 3129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 486, 486, 0, 159, 486,
	0, 0, 2164, 0, 4179, 0, 0, 4193, 4181, 4519,
	66, 67, 73, 0, 74, 1079, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4180, 0, 0, 2164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 69, 70, 0, 4182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4191, 4183, 4184, 4185,
	4189, 4190, 4187, 0, 4188, 0, 4192, 0, 0, 0,
	160, 78, 0, 79, 0, 0, 0, 0, 2161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 69, 70, 0, 4182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4191,
	4183, 4184, 4185, 4189, 4190, 4187, 0, 4188, 0, 4192,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 42, 0, 0, 0, 0, 0, 0, 60, 4193,
	4181, 0, 66, 67, 73, 71, 74, 0, 0, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 159, 0,
	0, 0, 4186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4193, 4181, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 4179, 0, 0, 0, 0, 4518, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4180, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 69, 70, 0, 4182, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 4191, 4183,
	4184, 4185, 4189, 4190, 4187, 0, 4188, 0, 4192, 85,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 486, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 486, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4193, 4181, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 0,
	486, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 0, 486,
	895, 1037, 0, 0, 443, 796, 1041, 882, 905, 1051,
	911, 913, 978, 857, 953, 355, 902, 858, 0, 0,
	849, 700, 850, 883, 258, 699, 1011, 956, 1039, 939,
	971, 981, 257, 243, 946, 945, 1028, 894, 893, 976,
	1024, 1038, 0, 0, 172, 472, 190, 804, 312, 159,
	0, 470, 421, 337, 0, 0, 937, 0, 788, 789,
	922, 980, 869, 967, 1043, 903, 972, 1044, 89, 0,
	0, 0, 0, 725, 551, 726, 728, 729, 730, 731,
	0, 0, 171, 727, 732, 733, 734, 0, 932, 977,
	1056, 848, 697, 714, 853, 803, 4272, 1029, 890, 891,
	262, 0, 0, 0, 0, 0, 0, 0, 935, 952,
	996, 919, 0, 463, 983, 992, 1006, 912, 374, 282,
	0, 0, 0, 0, 711, 712, 0, 0, 0, 486,
	819, 0, 713, 0, 863, 709, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 715, 0,
	0, 0, 868, 846, 888, 998, 847, 845, 338, 860,
	791, 1027, 920, 300, 191, 1033, 918, 817, 986, 864,
	1015, 1049, 906, 309, 862, 195, 859, 865, 904, 351,
	995, 1001, 801, 198, 311, 1012, 884, 897, 722, 0,
	390, 973, 462, 703, 277, 959, 389, 313, 455, 987,
	1035, 461, 907, 437, 471, 476, 270, 940, 234, 418,
	260, 253, 889, 1005, 852, 283, 373, 248, 305, 923,
	979, 885, 240, 990, 966, 1017, 417, 452, 200, 332,
	453, 475, 166, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 1013, 1000, 1019,
	880, 866, 872, 867, 896, 1036, 292, 284, 1020, 1018,
	898, 359, 224, 950, 943, 936, 805, 465, 1052, 256,
	1002, 467, 180, 404, 403, 910, 291, 1003, 181, 170,
	383, 182, 301, 204, 1023, 480, 220, 307, 445, 702,
	276, 350, 975, 360, 197, 378, 327, 329, 326, 330,
	281, 175, 183, 999, 380, 406, 450, 222, 424, 173,
	176, 185, 396, 186, 187, 1042, 320, 265, 269, 285,
	296, 974, 387, 425, 468, 968, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	997, 216, 210, 1031, 1014, 961, 925, 931, 854, 0,
	209, 926, 927, 928, 929, 930, 993, 887, 899, 879,
	969, 878, 280, 985, 723, 724, 245, 794, 1046, 211,
	861, 1045, 347, 354, 346, 1048, 1047, 454, 1032, 962,
	949, 947, 855, 1030, 960, 948, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 951, 423, 318,
	0, 206, 0, 422, 1040, 1058, 434, 226, 873, 1007,
	449, 178, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 989, 1055, 358, 391, 233, 464, 419,
	261, 871, 1059, 818, 806, 807, 810, 954, 955, 808,
	811, 812, 820, 792, 793, 795, 797, 798, 799, 942,
	1034, 856, 802, 1010, 813, 814, 815, 816, 982, 1053,
	790, 241, 739, 832, 833, 834, 740, 835, 836, 741,
	742, 837, 838, 839, 840, 743, 841, 842, 843, 821,
	822, 823, 824, 825, 826, 827, 828, 831, 829, 830,
	0, 938, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 800, 199, 212, 310, 1054, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	1008, 965, 0, 915, 917, 916, 875, 877, 876, 874,
	1057, 344, 1026, 844, 851, 870, 881, 886, 892, 900,
	901, 909, 914, 924, 933, 934, 944, 957, 958, 964,
	988, 991, 1004, 1009, 1016, 1021, 1022, 466, 251, 941,
	963, 994, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 184, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 921, 196, 0, 0, 202,
	0, 203, 205, 908, 201, 1025, 1050, 970, 984, 895,
	1037, 0, 0, 443, 796, 1041, 882, 905, 1051, 911,
	913, 978, 857, 953, 355, 902, 858, 0, 0, 849,
	700, 850, 883, 258, 699, 1011, 956, 1039, 939, 971,
	981, 257, 243, 946, 945, 1028, 894, 893, 976, 1024,
	1038, 0, 0, 172, 472, 190, 804, 312, 0, 0,
	470, 421, 337, 0, 0, 937, 0, 788, 789, 922,
	980, 869, 967, 1043, 903, 972, 1044, 89, 0, 689,
	0, 0, 725, 551, 726, 728, 729, 730, 731, 0,
	0, 171, 727, 732, 733, 734, 0, 932, 977, 1056,
	848, 697, 714, 853, 803, 0, 1029, 890, 891, 262,
	0, 0, 0, 0, 0, 0, 0, 935, 952, 996,
	919, 0, 463, 983, 992, 1006, 912, 374, 282, 0,
	0, 0, 0, 711, 712, 0, 0, 0, 0, 819,
	0, 713, 0, 863, 709, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 715, 0, 0,
	0, 868, 846, 888, 998, 847, 845, 338, 860, 791,
	1027, 920, 300, 191, 1033, 918, 817, 986, 864, 1015,
	1049, 906, 309, 862, 195, 859, 865, 904, 351, 995,
	1001, 801, 198, 311, 1012, 884, 897, 722, 0, 390,
	973, 462, 703, 277, 959, 389, 313, 455, 987, 1035,
	461, 907, 437, 471, 476, 270, 940, 234, 418, 260,
	253, 889, 1005, 852, 283, 373, 248, 305, 923, 979,
	885, 240, 990, 966, 1017, 417, 452, 200, 332, 453,
	475, 166, 271, 409, 272, 436, 263, 235, 376, 214,
	303, 0, 0, 254, 298, 0, 0, 478, 469, 225,
	273, 384, 388, 365, 221, 444, 333, 343, 237, 239,
	238, 215, 410, 451, 228, 242, 1013, 1000, 1019, 880,
	866, 872, 867, 896, 1036, 292, 284, 1020, 1018, 898,
	359, 224, 950, 943, 936, 805, 465, 1052, 256, 1002,
	467, 180, 404, 403, 910, 291, 1003, 181, 170, 383,
	182, 301, 204, 1023, 480, 220, 307, 445, 702, 276,
	350, 975, 360, 197, 378, 327, 329, 326, 330, 281,
	175, 183, 999, 380, 406, 450, 222, 424, 173, 176,
	185, 396, 186, 187, 1042, 320, 265, 269, 285, 296,
	974, 387, 425, 468, 968, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 426, 441, 398,
	279, 319, 321, 428, 433, 429, 430, 427, 432, 431,
	394, 395, 208, 435, 460, 229, 405, 408, 479, 997,
	216, 210, 1031, 1014, 961, 925, 931, 854, 0, 209,
	926, 927, 928, 929, 930, 993, 887, 899, 879, 969,
	878, 280, 985, 723, 724, 245, 794, 1046, 211, 861,
	1045, 347, 354, 346, 1048, 1047, 454, 1032, 962, 949,
	947, 855, 1030, 960, 948, 308, 268, 287, 371, 315,
	372, 288, 341, 340, 342, 317, 951, 423, 318, 0,
	206, 0, 422, 1040, 1058, 434, 226, 873, 1007, 449,
	178, 379, 227, 278, 266, 370, 345, 218, 290, 420,
	306, 314, 989, 1055, 358, 391, 233, 464, 419, 261,
	871, 1059, 818, 806, 807, 810, 954, 955, 808, 811,
	812, 820, 792, 793, 795, 797, 798, 799, 942, 1034,
	856, 802, 1010, 813, 814, 815, 816, 982, 1053, 790,
	241, 739, 832, 833, 834, 740, 835, 836, 741, 742,
	837, 838, 839, 840, 743, 841, 842, 843, 821, 822,
	823, 824, 825, 826, 827, 828, 831, 829, 830, 0,
	938, 367, 207, 219, 448, 232, 252, 250, 267, 302,
	328, 335, 364, 407, 413, 414, 438, 439, 440, 442,
	255, 331, 259, 231, 385, 230, 316, 293, 366, 446,
	447, 375, 247, 800, 199, 212, 310, 1054, 382, 275,
	334, 411, 336, 297, 246, 477, 339, 381, 481, 1008,
	965, 0, 915, 917, 916, 875, 877, 876, 874, 1057,
	344, 1026, 844, 851, 870, 881, 886, 892, 900, 901,
	909, 914, 924, 933, 934, 944, 957, 958, 964, 988,
	991, 1004, 1009, 1016, 1021, 1022, 466, 251, 941, 963,
	994, 213, 223, 236, 249, 264, 0, 274, 286, 289,
	294, 295, 299, 304, 322, 323, 324, 325, 348, 349,
	352, 353, 356, 357, 361, 362, 363, 368, 369, 377,
	184, 386, 397, 399, 400, 401, 402, 412, 415, 416,
	456, 457, 473, 474, 921, 196, 0, 0, 202, 0,
	203, 205, 908, 201, 1025, 1050, 970, 984, 895, 1037,
	0, 0, 443, 796, 1041, 882, 905, 1051, 911, 913,
	978, 857, 953, 355, 902, 858, 0, 0, 849, 700,
	850, 883, 258, 699, 1011, 956, 1039, 939, 971, 981,
	257, 243, 946, 945, 1028, 894, 893, 976, 1024, 1038,
	0, 0, 172, 472, 190, 804, 312, 0, 0, 470,
	421, 337, 0, 0, 937, 0, 788, 789, 922, 980,
	869, 967, 1043, 903, 972, 1044, 89, 0, 0, 0,
	0, 725, 551, 726, 728, 729, 730, 731, 0, 0,
	171, 727, 732, 733, 734, 0, 932, 977, 1056, 848,
	697, 714, 853, 803, 0, 1029, 890, 891, 262, 0,
	0, 0, 0, 0, 0, 0, 935, 952, 996, 919,
	0, 463, 983, 992, 1006, 912, 374, 282, 0, 0,
	0, 0, 711, 712, 2221, 0, 0, 0, 819, 0,
	713, 0, 863, 709, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 715, 0, 0, 0,
	868, 846, 888, 998, 847, 845, 338, 860, 791, 1027,
	920, 300, 191, 1033, 918, 817, 986, 864, 1015, 1049,
	906, 309, 862, 195, 859, 865, 904, 351, 995, 1001,
	801, 198, 311, 1012, 884, 897, 722, 0, 390, 973,
	462, 703, 277, 959, 389, 313, 455, 987, 1035, 461,
	907, 437, 471, 476, 270, 940, 234, 418, 260, 253,
	889, 1005, 852, 283, 373, 248, 305, 923, 979, 885,
	240, 990, 966, 1017, 417, 452, 200, 332, 453, 475,
	166, 271, 409, 272, 436, 263, 235, 376, 214, 303,
	0, 0, 254, 298, 0, 0, 478, 469, 225, 273,
	384, 388, 365, 221, 444, 333, 343, 237, 239, 238,
	215, 410, 451, 228, 242, 1013, 1000, 1019, 880, 866,
	872, 867, 896, 1036, 292, 284, 1020, 1018, 898, 359,
	224, 950, 943, 936, 805, 465, 1052, 256, 1002, 467,
	180, 404, 403, 910, 291, 1003, 181, 170, 383, 182,
	301, 204, 1023, 480, 220, 307, 445, 702, 276, 350,
	975, 360, 197, 378, 327, 329, 326, 330, 281, 175,
	183, 999, 380, 406, 450, 222, 424, 173, 176, 185,
	396, 186, 187, 1042, 320, 265, 269, 285, 296, 974,
	387, 425, 468, 968, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 426, 441, 398, 279,
	319, 321, 428, 433, 429, 430, 427, 432, 431, 394,
	395, 208, 435, 460, 229, 405, 408, 479, 997, 216,
	210, 1031, 1014, 961, 925, 931, 854, 0, 209, 926,
	927, 928, 929, 930, 993, 887, 899, 879, 969, 878,
	280, 985, 723, 724, 245, 794, 1046, 211, 861, 1045,
	347, 354, 346, 1048, 1047, 454, 1032, 962, 949, 947,
	855, 1030, 960, 948, 308, 268, 287, 371, 315, 372,
	288, 341, 340, 342, 317, 951, 423, 318, 0, 206,
	0, 422, 1040, 1058, 434, 226, 873, 1007, 449, 178,
	379, 227, 278, 266, 370, 345, 218, 290, 420, 306,
	314, 989, 1055, 358, 391, 233, 464, 419, 261, 871,
	1059, 818, 806, 807, 810, 954, 955, 808, 811, 812,
	820, 792, 793, 795, 797, 798, 799, 942, 1034, 856,
	802, 1010, 813, 814, 815, 816, 982, 1053, 790, 241,
	739, 832, 833, 834, 740, 835, 836, 741, 742, 837,
	838, 839, 840, 743, 841, 842, 843, 821, 822, 823,
	824, 825, 826, 827, 828, 831, 829, 830, 0, 938,
	367, 207, 219, 448, 232, 252, 250, 267, 302, 328,
	335, 364, 407, 413, 414, 438, 439, 440, 442, 255,
	331, 259, 231, 385, 230, 316, 293, 366, 446, 447,
	375, 247, 800, 199, 212, 310, 1054, 382, 275, 334,
	411, 336, 297, 246, 477, 339, 381, 481, 1008, 965,
	0, 915, 917, 916, 875, 877, 876, 874, 1057, 344,
	1026, 844, 851, 870, 881, 886, 892, 900, 901, 909,
	914, 924, 933, 934, 944, 957, 958, 964, 988, 991,
	1004, 1009, 1016, 1021, 1022, 466, 251, 941, 963, 994,
	213, 223, 236, 249, 264, 0, 274, 286, 289, 294,
	295, 299, 304, 322, 323, 324, 325, 348, 349, 352,
	353, 356, 357, 361, 362, 363, 368, 369, 377, 184,
	386, 397, 399, 400, 401, 402, 412, 415, 416, 456,
	457, 473, 474, 921, 196, 0, 0, 202, 0, 203,
	205, 908, 201, 1025, 1050, 970, 984, 895, 1037, 0,
	0, 443, 796, 1041, 882, 905, 1051, 911, 913, 978,
	857, 953, 355, 902, 858, 0, 0, 849, 700, 850,
	883, 258, 699, 1011, 956, 1039, 939, 971, 981, 257,
	243, 946, 945, 1028, 894, 893, 976, 1024, 1038, 0,
	0, 172, 472, 190, 804, 312, 0, 0, 470, 421,
	337, 0, 0, 937, 0, 788, 789, 922, 980, 869,
	967, 1043, 903, 972, 1044, 89, 0, 0, 0, 0,
	725, 551, 726, 728, 729, 730, 731, 0, 0, 171,
	727, 732, 733, 734, 0, 932, 977, 1056, 848, 697,
	714, 853, 803, 0, 1029, 890, 891, 262, 0, 0,
	0, 0, 0, 0, 0, 935, 952, 996, 919, 0,
	463, 983, 992, 1006, 912, 374, 282, 0, 0, 0,
	0, 711, 712, 693, 0, 0, 0, 819, 0, 713,
	0, 863, 709, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 715, 0, 0, 0, 868,
	846, 888, 998, 847, 845, 338, 860, 791, 1027, 920,
	300, 191, 1033, 918, 817, 986, 864, 1015, 1049, 906,
	309, 862, 195, 859, 865, 904, 351, 995, 1001, 801,
	198, 311, 1012, 884, 897, 722, 0, 390, 973, 462,
	703, 277, 959, 389, 313, 455, 987, 1035, 461, 907,
	437, 471, 476, 270, 940, 234, 418, 260, 253, 889,
	1005, 852, 283, 373, 248, 305, 923, 979, 885, 240,
	990, 966, 1017, 417, 452, 200, 332, 453, 475, 166,
	271, 409, 272, 436, 263, 235, 376, 214, 303, 0,
	0, 254, 298, 0, 0, 478, 469, 225, 273, 384,
	388, 365, 221, 444, 333, 343, 237, 239, 238, 215,
	410, 451, 228, 242, 1013, 1000, 1019, 880, 866, 872,
	867, 896, 1036, 292, 284, 1020, 1018, 898, 359, 224,
	950, 943, 936, 805, 465, 1052, 256, 1002, 467, 180,
	404, 403, 910, 291, 1003, 181, 170, 383, 182, 301,
	204, 1023, 480, 220, 307, 445, 702, 276, 350, 975,
	360, 197, 378, 327, 329, 326, 330, 281, 175, 183,
	999, 380, 406, 450, 222, 424, 173, 176, 185, 396,
	186, 187, 1042, 320, 265, 269, 285, 296, 974, 387,
	425, 468, 968, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 426, 441, 398, 279, 319,
	321, 428, 433, 429, 430, 427, 432, 431, 394, 395,
	208, 435, 460, 229, 405, 408, 479, 997, 216, 210,
	1031, 1014, 961, 925, 931, 854, 0, 209, 926, 927,
	928, 929, 930, 993, 887, 899, 879, 969, 878, 280,
	985, 723, 724, 245, 794, 1046, 211, 861, 1045, 347,
	354, 346, 1048, 1047, 454, 1032, 962, 949, 947, 855,
	1030, 960, 948, 308, 268, 287, 371, 315, 372, 288,
	341, 340, 342, 317, 951, 423, 318, 0, 206, 0,
	422, 1040, 1058, 434, 226, 873, 1007, 449, 178, 379,
	227, 278, 266, 370, 345, 218, 290, 420, 306, 314,
	989, 1055, 358, 391, 233, 464, 419, 261, 871, 1059,
	818, 806, 807, 810, 954, 955, 808, 811, 812, 820,
	792, 793, 795, 797, 798, 799, 942, 1034, 856, 802,
	1010, 813, 814, 815, 816, 982, 1053, 790, 241, 739,
	832, 833, 834, 740, 835, 836, 741, 742, 837, 838,
	839, 840, 743, 841, 842, 843, 821, 822, 823, 824,
	825, 826, 827, 828, 831, 829, 830, 0, 938, 367,
	207, 219, 448, 232, 252, 250, 267, 302, 328, 335,
	364, 407, 413, 414, 438, 439, 440, 442, 255, 331,
	259, 231, 385, 230, 316, 293, 366, 446, 447, 375,
	247, 800, 199, 212, 310, 1054, 382, 275, 334, 411,
	336, 297, 246, 477, 339, 381, 481, 1008, 965, 0,
	915, 917, 916, 875, 877, 876, 874, 1057, 344, 1026,
	844, 851, 870, 881, 886, 892, 900, 901, 909, 914,
	924, 933, 934, 944, 957, 958, 964, 988, 991, 1004,
	1009, 1016, 1021, 1022, 466, 251, 941, 963, 994, 213,
	223, 236, 249, 264, 0, 274, 286, 289, 294, 295,
	299, 304, 322, 323, 324, 325, 348, 349, 352, 353,
	356, 357, 361, 362, 363, 368, 369, 377, 184, 386,
	397, 399, 400, 401, 402, 412, 415, 416, 456, 457,
	473, 474, 921, 196, 0, 0, 202, 0, 203, 205,
	908, 201, 1025, 1050, 970, 984, 895, 1037, 0, 0,
	443, 796, 1041, 882, 905, 1051, 911, 913, 978, 857,
	953, 355, 902, 858, 0, 0, 849, 700, 850, 883,
	258, 699, 1011, 956, 1039, 939, 971, 981, 257, 243,
	946, 945, 1028, 894, 893, 976, 1024, 1038, 0, 0,
	172, 472, 190, 804, 312, 0, 0, 470, 421, 337,
	0, 0, 937, 0, 788, 789, 922, 980, 869, 967,
	1043, 903, 2428, 1044, 89, 0, 0, 0, 0, 2430,
	551, 726, 728, 729, 730, 731, 0, 0, 171, 727,
	732, 733, 734, 2429, 932, 977, 1056, 848, 697, 714,
	853, 803, 0, 1029, 890, 891, 262, 0, 0, 0,
	0, 0, 0, 0, 935, 952, 996, 919, 0, 463,
	983, 992, 1006, 912, 374, 282, 0, 0, 0, 0,
	711, 712, 0, 0, 0, 0, 819, 0, 713, 0,
	863, 709, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 715, 0, 0, 0, 868, 846,
	888, 998, 847, 845, 338, 860, 791, 1027, 920, 300,
	191, 1033, 918, 817, 986, 864, 1015, 1049, 906, 309,
	862, 195, 859, 865, 904, 351, 995, 1001, 801, 198,
	311, 1012, 884, 897, 722, 0, 390, 973, 462, 703,
	277, 959, 389, 313, 455, 987, 1035, 461, 907, 437,
	471, 476, 270, 940, 234, 418, 260, 253, 889, 1005,
	852, 283, 373, 248, 305, 923, 979, 885, 240, 990,
	966, 1017, 417, 452, 200, 332, 453, 475, 166, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 1013, 1000, 1019, 880, 866, 872, 867,
	896, 1036, 292, 284, 1020, 1018, 898, 359, 224, 950,
	943, 936, 805, 465, 1052, 256, 1002, 467, 180, 404,
	403, 910, 291, 1003, 181, 170, 383, 182, 301, 204,
	1023, 480, 220, 307, 445, 702, 276, 350, 975, 360,
	197, 378, 327, 329, 326, 330, 281, 175, 183, 999,
	380, 406, 450, 222, 424, 173, 176, 185, 396, 186,
	187, 1042, 320, 265, 269, 285, 296, 974, 387, 425,
	468, 968, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 997, 216, 210, 1031,
	1014, 961, 925, 931, 854, 0, 209, 926, 927, 928,
	929, 930, 993, 887, 899, 879, 969, 878, 280, 985,
	723, 724, 245, 794, 1046, 211, 861, 1045, 347, 354,
	346, 1048, 1047, 454, 1032, 962, 949, 947, 855, 1030,
	960, 948, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 317, 951, 423, 318, 0, 206, 0, 422,
	1040, 1058, 434, 226, 873, 1007, 449, 178, 379, 227,
	278, 266, 370, 345, 218, 290, 420, 306, 314, 989,
	1055, 358, 391, 233, 464, 419, 261, 871, 1059, 818,
	806, 807, 810, 954, 955, 808, 811, 812, 820, 792,
	793, 795, 797, 798, 799, 942, 1034, 856, 802, 1010,
	813, 814, 815, 816, 982, 1053, 790, 241, 739, 832,
	833, 834, 740, 835, 836, 741, 742, 837, 838, 839,
	840, 743, 841, 842, 843, 821, 822, 823, 824, 825,
	826, 827, 828, 831, 829, 830, 0, 938, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	800, 199, 212, 310, 1054, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 1008, 965, 0, 915,
	917, 916, 875, 877, 876, 874, 1057, 344, 1026, 844,
	851, 870, 881, 886, 892, 900, 901, 909, 914, 924,
	933, 934, 944, 957, 958, 964, 988, 991, 1004, 1009,
	1016, 1021, 1022, 466, 251, 941, 963, 994, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 368, 369, 377, 184, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 921, 196, 0, 0, 202, 0, 203, 205, 908,
	201, 1025, 1050, 970, 984, 895, 1037, 0, 0, 443,
	796, 1041, 882, 905, 1051, 911, 913, 978, 857, 953,
	355, 902, 858, 0, 0, 849, 700, 850, 883, 258,
	699, 1011, 956, 1039, 939, 971, 981, 257, 243, 946,
	945, 1028, 894, 893, 976, 1024, 1038, 0, 0, 172,
	472, 190, 804, 312, 0, 0, 470, 421, 337, 0,
	0, 937, 0, 788, 789, 922, 980, 869, 967, 1043,
	903, 972, 1044, 89, 0, 0, 0, 0, 2328, 551,
	726, 728, 729, 730, 731, 0, 0, 171, 727, 732,
	733, 734, 0, 932, 977, 1056, 848, 697, 714, 853,
	803, 0, 1029, 890, 891, 262, 0, 0, 0, 0,
	0, 0, 0, 935, 952, 996, 919, 0, 463, 983,
	992, 1006, 912, 374, 282, 0, 0, 0, 0, 711,
	712, 2221, 0, 0, 0, 819, 0, 713, 0, 863,
	709, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 715, 0, 0, 0, 868, 846, 888,
	998, 847, 845, 338, 860, 791, 1027, 920, 300, 191,
	1033, 918, 817, 986, 864, 1015, 1049, 906, 309, 862,
	195, 859, 865, 904, 351, 995, 1001, 801, 198, 311,
	1012, 884, 897, 722, 0, 390, 973, 462, 703, 277,
	959, 389, 313, 455, 987, 1035, 461, 907, 437, 471,
	476, 270, 940, 234, 418, 260, 253, 889, 1005, 852,
	283, 373, 248, 305, 923, 979, 885, 240, 990, 966,
	1017, 417, 452, 200, 332, 453, 475, 166, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 1013, 1000, 1019, 880, 866, 872, 867, 896,
	1036, 292, 284, 1020, 1018, 898, 359, 224, 950, 943,
	936, 805, 465, 1052, 256, 1002, 467, 180, 404, 403,
	910, 291, 1003, 181, 170, 383, 182, 301, 204, 1023,
	480, 220, 307, 445, 702, 276, 350, 975, 360, 197,
	378, 327, 329, 326, 330, 281, 175, 183, 999, 380,
	406, 450, 222, 424, 173, 176, 185, 396, 186, 187,
	1042, 320, 265, 269, 285, 296, 974, 387, 425, 468,
	968, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	460, 229, 405, 408, 479, 997, 216, 210, 1031, 1014,
	961, 925, 931, 854, 0, 209, 926, 927, 928, 929,
	930, 993, 887, 899, 879, 969, 878, 280, 985, 723,
	724, 245, 794, 1046, 211, 861, 1045, 347, 354, 346,
	1048, 1047, 454, 1032, 962, 949, 947, 855, 1030, 960,
	948, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 951, 423, 318, 0, 206, 0, 422, 1040,
	1058, 434, 226, 873, 1007, 449, 178, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 989, 1055,
	358, 391, 233, 464, 419, 261, 871, 1059, 818, 806,
	807, 810, 954, 955, 808, 811, 812, 820, 792, 793,
	795, 797, 798, 799, 942, 1034, 856, 802, 1010, 813,
	814, 815, 816, 982, 1053, 790, 241, 739, 832, 833,
	834, 740, 835, 836, 741, 742, 837, 838, 839, 840,
	743, 841, 842, 843, 821, 822, 823, 824, 825, 826,
	827, 828, 831, 829, 830, 0, 938, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 800,
	199, 212, 310, 1054, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 1008, 965, 0, 915, 917,
	916, 875, 877, 876, 874, 1057, 344, 1026, 844, 851,
	870, 881, 886, 892, 900, 901, 909, 914, 924, 933,
	934, 944, 957, 958, 964, 988, 991, 1004, 1009, 1016,
	1021, 1022, 466, 251, 941, 963, 994, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 184, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	921, 196, 0, 0, 202, 0, 203, 205, 908, 201,
	1025, 1050, 970, 984, 895, 1037, 0, 0, 443, 796,
	1041, 882, 905, 1051, 911, 913, 978, 857, 953, 355,
	902, 858, 0, 0, 849, 700, 850, 883, 258, 699,
	1011, 956, 1039, 939, 971, 981, 257, 243, 946, 945,
	1028, 894, 893, 976, 1024, 1038, 0, 0, 172, 472,
	190, 804, 312, 0, 0, 470, 421, 337, 0, 0,
	937, 0, 788, 789, 922, 980, 869, 967, 1043, 903,
	972, 1044, 89, 0, 0, 0, 0, 2325, 551, 726,
	728, 729, 730, 731, 0, 0, 171, 727, 732, 733,
	734, 0, 932, 977, 1056, 848, 697, 714, 853, 803,
	0, 1029, 890, 891, 262, 0, 0, 0, 0, 0,
	0, 0, 935, 952, 996, 919, 0, 463, 983, 992,
	1006, 912, 374, 282, 0, 0, 0, 0, 711, 712,
	2221, 0, 0, 0, 819, 0, 713, 0, 863, 709,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 715, 0, 0, 0, 868, 846, 888, 998,
	847, 845, 338, 860, 791, 1027, 920, 300, 191, 1033,
	918, 817, 986, 864, 1015, 1049, 906, 309, 862, 195,
	859, 865, 904, 351, 995, 1001, 801, 198, 311, 1012,
	884, 897, 722, 0, 390, 973, 462, 703, 277, 959,
	389, 313, 455, 987, 1035, 461, 907, 437, 471, 476,
	270, 940, 234, 418, 260, 253, 889, 1005, 852, 283,
	373, 248, 305, 923, 979, 885, 240, 990, 966, 1017,
	417, 452, 200, 332, 453, 475, 166, 271, 409, 272,
	436, 263, 235, 376, 214, 303, 0, 0, 254, 298,
	0, 0, 478, 469, 225, 273, 384, 388, 365, 221,
	444, 333, 343, 237, 239, 238, 215, 410, 451, 228,
	242, 1013, 1000, 1019, 880, 866, 872, 867, 896, 1036,
	292, 284, 1020, 1018, 898, 359, 224, 950, 943, 936,
	805, 465, 1052, 256, 1002, 467, 180, 404, 403, 910,
	291, 1003, 181, 170, 383, 182, 301, 204, 1023, 480,
	220, 307, 445, 702, 276, 350, 975, 360, 197, 378,
	327, 329, 326, 330, 281, 175, 183, 999, 380, 406,
	450, 222, 424, 173, 176, 185, 396, 186, 187, 1042,
	320, 265, 269, 285, 296, 974, 387, 425, 468, 968,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 426, 441, 398, 279, 319, 321, 428, 433,
	429, 430, 427, 432, 431, 394, 395, 208, 435, 460,
	229, 405, 408, 479, 997, 216, 210, 1031, 1014, 961,
	925, 931, 854, 0, 209, 926, 927, 928, 929, 930,
	993, 887, 899, 879, 969, 878, 280, 985, 723, 724,
	245, 794, 1046, 211, 861, 1045, 347, 354, 346, 1048,
	1047, 454, 1032, 962, 949, 947, 855, 1030, 960, 948,
	308, 268, 287, 371, 315, 372, 288, 341, 340, 342,
	317, 951, 423, 318, 0, 206, 0, 422, 1040, 1058,
	434, 226, 873, 1007, 449, 178, 379, 227, 278, 266,
	370, 345, 218, 290, 420, 306, 314, 989, 1055, 358,
	391, 233, 464, 419, 261, 871, 1059, 818, 806, 807,
	810, 954, 955, 808, 811, 812, 820, 792, 793, 795,
	797, 798, 799, 942, 1034, 856, 802, 1010, 813, 814,
	815, 816, 982, 1053, 790, 241, 739, 832, 833, 834,
	740, 835, 836, 741, 742, 837, 838, 839, 840, 743,
	841, 842, 843, 821, 822, 823, 824, 825, 826, 827,
	828, 831, 829, 830, 0, 938, 367, 207, 219, 448,
	232, 252, 250, 267, 302, 328, 335, 364, 407, 413,
	414, 438, 439, 440, 442, 255, 331, 259, 231, 385,
	230, 316, 293, 366, 446, 447, 375, 247, 800, 199,
	212, 310, 1054, 382, 275, 334, 411, 336, 297, 246,
	477, 339, 381, 481, 1008, 965, 0, 915, 917, 916,
	875, 877, 876, 874, 1057, 344, 1026, 844, 851, 870,
	881, 886, 892, 900, 901, 909, 914, 924, 933, 934,
	944, 957, 958, 964, 988, 991, 1004, 1009, 1016, 1021,
	1022, 466, 251, 941, 963, 994, 213, 223, 236, 249,
	264, 0, 274, 286, 289, 294, 295, 299, 304, 322,
	323, 324, 325, 348, 349, 352, 353, 356, 357, 361,
	362, 363, 368, 369, 377, 184, 386, 397, 399, 400,
	401, 402, 412, 415, 416, 456, 457, 473, 474, 921,
	196, 0, 0, 202, 0, 203, 205, 908, 201, 1025,
	1050, 970, 984, 895, 1037, 0, 42, 443, 796, 1041,
	882, 905, 1051, 911, 913, 978, 857, 953, 355, 902,
	858, 0, 0, 849, 700, 850, 883, 258, 699, 1011,
	956, 1039, 939, 971, 981, 257, 243, 946, 945, 1028,
	894, 893, 976, 1024, 1038, 0, 0, 172, 472, 190,
	804, 312, 0, 0, 470, 421, 337, 0, 0, 937,
	0, 788, 789, 922, 980, 869, 967, 1043, 903, 972,
	1044, 89, 0, 0, 0, 0, 725, 551, 726, 728,
	729, 730, 731, 0, 0, 171, 727, 732, 733, 734,
	0, 932, 977, 1056, 848, 697, 714, 853, 803, 0,
	1029, 890, 891, 262, 0, 0, 0, 0, 0, 0,
	0, 935, 952, 996, 919, 0, 463, 983, 992, 1006,
	912, 374, 282, 0, 0, 0, 0, 711, 712, 0,
	0, 0, 0, 819, 0, 713, 0, 863, 709, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 715, 0, 0, 0, 868, 846, 888, 998, 847,
	845, 338, 860, 791, 1534, 920, 300, 191, 1033, 918,
	817, 986, 864, 1015, 1049, 906, 309, 862, 195, 859,
	865, 904, 351, 995, 1001, 801, 198, 311, 1012, 884,
	897, 722, 0, 390, 973, 462, 703, 277, 959, 389,
	313, 455, 987, 1035, 461, 907, 437, 471, 476, 270,
	940, 234, 418, 260, 253, 889, 1005, 852, 283, 373,
	248, 305, 923, 979, 885, 240, 990, 966, 1017, 417,
	452, 200, 332, 453, 475, 166, 271, 409, 272, 436,
	263, 235, 376, 214, 303, 0, 0, 254, 298, 0,
	0, 478, 469, 225, 273, 384, 388, 365, 221, 444,
	333, 343, 237, 239, 238, 215, 410, 451, 228, 242,
	1013, 1000, 1019, 880, 866, 872, 867, 896, 1036, 292,
	284, 1020, 1018, 898, 359, 224, 950, 943, 936, 805,
	465, 1052, 256, 1002, 467, 180, 404, 403, 910, 291,
	1003, 181, 170, 383, 182, 301, 204, 1023, 480, 220,
	307, 445, 702, 276, 350, 975, 360, 197, 378, 327,
	329, 326, 330, 281, 175, 183, 999, 380, 406, 450,
	222, 424, 173, 176, 185, 396, 186, 187, 1042, 320,
	265, 269, 285, 296, 974, 387, 425, 468, 968, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 426, 441, 398, 279, 319, 321, 428, 433, 429,
	430, 427, 432, 431, 394, 395, 208, 435, 460, 229,
	405, 408, 479, 997, 216, 210, 1031, 1014, 961, 925,
	931, 854, 0, 209, 926, 927, 928, 929, 930, 993,
	887, 899, 879, 969, 878, 280, 985, 723, 724, 245,
	794, 1046, 211, 861, 1045, 347, 354, 346, 1048, 1047,
	454, 1032, 962, 949, 947, 855, 1030, 960, 948, 308,
	268, 287, 371, 315, 372, 288, 341, 340, 342, 317,
	951, 423, 318, 0, 206, 0, 422, 1040, 1058, 434,
	226, 873, 1007, 449, 178, 379, 227, 278, 266, 370,
	345, 218, 290, 420, 306, 314, 989, 1055, 358, 391,
	233, 464, 419, 261, 871, 1059, 818, 806, 807, 810,
	954, 955, 808, 811, 812, 820, 792, 793, 795, 797,
	798, 799, 942, 1034, 856, 802, 1010, 813, 814, 815,
	816, 982, 1053, 790, 241, 739, 832, 833, 834, 740,
	835, 836, 741, 742, 837, 838, 839, 840, 743, 841,
	842, 843, 821, 822, 823, 824, 825, 826, 827, 828,
	831, 829, 830, 0, 938, 367, 207, 219, 448, 232,
	252, 250, 267, 302, 328, 335, 364, 407, 413, 414,
	438, 439, 440, 442, 255, 331, 259, 231, 385, 230,
	316, 293, 366, 446, 447, 375, 247, 800, 199, 212,
	310, 1532, 382, 275, 334, 411, 336, 297, 246, 477,
	339, 381, 481, 1008, 965, 0, 915, 917, 916, 875,
	877, 876, 874, 1057, 344, 1026, 844, 851, 870, 881,
	886, 892, 900, 901, 909, 914, 924, 933, 934, 944,
	957, 958, 964, 988, 991, 1004, 1009, 1016, 1021, 1022,
	466, 251, 941, 963, 994, 213, 223, 236, 249, 264,
	0, 274, 286, 289, 294, 295, 299, 304, 322, 323,
	324, 325, 348, 349, 352, 353, 356, 357, 361, 362,
	363, 368, 369, 377, 184, 386, 397, 399, 400, 401,
	402, 412, 415, 416, 456, 457, 473, 474, 921, 196,
	0, 0, 202, 0, 203, 205, 908, 201, 1025, 1050,
	970, 984, 895, 1037, 0, 0, 443, 796, 1041, 882,
	905, 1051, 911, 913, 978, 857, 953, 355, 902, 858,
	0, 0, 849, 700, 850, 883, 258, 699, 1011, 956,
	1039, 939, 971, 981, 257, 243, 946, 945, 1028, 894,
	893, 976, 1024, 1038, 0, 0, 172, 472, 190, 804,
	312, 0, 0, 470, 421, 337, 0, 0, 937, 0,
	788, 789, 922, 980, 869, 967, 1043, 903, 972, 1044,
	89, 0, 2093, 0, 0, 725, 551, 726, 728, 729,
	730, 731, 0, 0, 171, 727, 732, 733, 734, 0,
	932, 977, 1056, 848, 697, 714, 853, 803, 0, 1029,
	890, 891, 262, 0, 0, 0, 0, 0, 0, 0,
	935, 952, 996, 919, 0, 463, 983, 992, 1006, 912,
	374, 282, 0, 0, 0, 0, 711, 712, 0, 0,
	0, 0, 819, 0, 713, 0, 863, 709, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	715, 0, 0, 0, 868, 846, 888, 998, 847, 845,
	338, 860, 791, 1027, 920, 300, 191, 1033, 918, 817,
	986, 864, 1015, 1049, 906, 309, 862, 195, 859, 865,
	904, 351, 995, 1001, 801, 198, 311, 1012, 884, 897,
	722, 0, 390, 973, 462, 703, 277, 959, 389, 313,
	455, 987, 1035, 461, 907, 437, 471, 476, 270, 940,
	234, 418, 260, 253, 889, 1005, 852, 283, 373, 248,
	305, 923, 979, 885, 240, 990, 966, 1017, 417, 452,
	200, 332, 453, 475, 166, 271, 409, 272, 436, 263,
	235, 376, 214, 303, 0, 0, 254, 298, 0, 0,
	478, 469, 225, 273, 384, 388, 365, 221, 444, 333,
	343, 237, 239, 238, 215, 410, 451, 228, 242, 1013,
	1000, 1019, 880, 866, 872, 867, 896, 1036, 292, 284,
	1020, 1018, 898, 359, 224, 950, 943, 936, 805, 465,
	1052, 256, 1002, 467, 180, 404, 403, 910, 291, 1003,
	181, 170, 383, 182, 301, 204, 1023, 480, 220, 307,
	445, 702, 276, 350, 975, 360, 197, 378, 327, 329,
	326, 330, 281, 175, 183, 999, 380, 406, 450, 222,
	424, 173, 176, 185, 396, 186, 187, 1042, 320, 265,
	269, 285, 296, 974, 387, 425, 468, 968, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	426, 441, 398, 279, 319, 321, 428, 433, 429, 430,
	427, 432, 431, 394, 395, 208, 435, 460, 229, 405,
	408, 479, 997, 216, 210, 1031, 1014, 961, 925, 931,
	854, 0, 209, 926, 927, 928, 929, 930, 993, 887,
	899, 879, 969, 878, 280, 985, 723, 724, 245, 794,
	1046, 211, 861, 1045, 347, 354, 346, 1048, 1047, 454,
	1032, 962, 949, 947, 855, 1030, 960, 948, 308, 268,
	287, 371, 315, 372, 288, 341, 340, 342, 317, 951,
	423, 318, 0, 206, 0, 422, 1040, 1058, 434, 226,
	873, 1007, 449, 178, 379, 227, 278, 266, 370, 345,
	218, 290, 420, 306, 314, 989, 1055, 358, 391, 233,
	464, 419, 261, 871, 1059, 818, 806, 807, 810, 954,
	955, 808, 811, 812, 820, 792, 793, 795, 797, 798,
	799, 942, 1034, 856, 802, 1010, 813, 814, 815, 816,
	982, 1053, 790, 241, 739, 832, 833, 834, 740, 835,
	836, 741, 742, 837, 838, 839, 840, 743, 841, 842,
	843, 821, 822, 823, 824, 825, 826, 827, 828, 831,
	829, 830, 0, 938, 367, 207, 219, 448, 232, 252,
	250, 267, 302, 328, 335, 364, 407, 413, 414, 438,
	439, 440, 442, 255, 331, 259, 231, 385, 230, 316,
	293, 366, 446, 447, 375, 247, 800, 199, 212, 310,
	1054, 382, 275, 334, 411, 336, 297, 246, 477, 339,
	381, 481, 1008, 965, 0, 915, 917, 916, 875, 877,
	876, 874, 1057, 344, 1026, 844, 851, 870, 881, 886,
	892, 900, 901, 909, 914, 924, 933, 934, 944, 957,
	958, 964, 988, 991, 1004, 1009, 1016, 1021, 1022, 466,
	251, 941, 963, 994, 213, 223, 236, 249, 264, 0,
	274, 286, 289, 294, 295, 299, 304, 322, 323, 324,
	325, 348, 349, 352, 353, 356, 357, 361, 362, 363,
	368, 369, 377, 184, 386, 397, 399, 400, 401, 402,
	412, 415, 416, 456, 457, 473, 474, 921, 196, 0,
	0, 202, 0, 203, 205, 908, 201, 1025, 1050, 970,
	984, 895, 1037, 0, 0, 443, 796, 1041, 882, 905,
	1051, 911, 913, 978, 857, 953, 355, 902, 858, 0,
	0, 849, 700, 850, 883, 258, 699, 1011, 956, 1039,
	939, 971, 981, 257, 243, 946, 945, 1028, 894, 893,
	976, 1024, 1038, 0, 0, 172, 472, 190, 804, 312,
	0, 0, 470, 421, 337, 0, 0, 937, 0, 788,
	789, 922, 980, 869, 967, 1043, 903, 972, 1044, 89,
	0, 0, 0, 0, 725, 551, 726, 728, 729, 730,
	731, 0, 0, 171, 727, 732, 733, 734, 0, 932,
	977, 1056, 848, 697, 714, 853, 803, 0, 1029, 890,
	891, 262, 0, 0, 0, 0, 0, 0, 0, 935,
	952, 996, 919, 0, 463, 983, 992, 1006, 912, 374,
	282, 0, 0, 0, 0, 711, 712, 0, 0, 0,
	0, 819, 0, 713, 0, 863, 709, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 715,
	0, 0, 0, 868, 846, 888, 998, 847, 845, 338,
	860, 791, 1027, 920, 300, 191, 1033, 918, 817, 986,
	864, 1015, 1049, 906, 309, 862, 195, 859, 865, 904,
	351, 995, 1001, 801, 198, 311, 1012, 884, 897, 722,
	0, 390, 973, 462, 703, 277, 959, 389, 313, 455,
	987, 1035, 461, 907, 437, 471, 476, 270, 940, 234,
	418, 260, 253, 889, 1005, 852, 283, 373, 248, 305,
	923, 979, 885, 240, 990, 966, 1017, 417, 452, 200,
	332, 453, 475, 166, 271, 409, 272, 436, 263, 235,
	376, 214, 303, 0, 0, 254, 298, 0, 0, 478,
	469, 225, 273, 384, 388, 365, 221, 444, 333, 343,
	237, 239, 238, 215, 410, 451, 228, 242, 1013, 1000,
	1019, 880, 866, 872, 867, 896, 1036, 292, 284, 1020,
	1018, 898, 359, 224, 950, 943, 936, 805, 465, 1052,
	256, 1002, 467, 180, 404, 403, 910, 291, 1003, 181,
	170, 383, 182, 301, 204, 1023, 480, 220, 307, 445,
	702, 276, 350, 975, 360, 197, 378, 327, 329, 326,
	330, 281, 175, 183, 999, 380, 406, 450, 222, 424,
	173, 176, 185, 396, 186, 187, 1042, 320, 265, 269,
	285, 296, 974, 387, 425, 468, 968, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 426,
	441, 398, 279, 319, 321, 428, 433, 429, 430, 427,
	432, 431, 394, 395, 208, 435, 460, 229, 405, 408,
	479, 997, 216, 210, 1031, 1014, 961, 925, 931, 854,
	0, 209, 926, 927, 928, 929, 930, 993, 887, 899,
	879, 969, 878, 280, 985, 723, 724, 245, 794, 1046,
	211, 861, 1045, 347, 354, 346, 1048, 1047, 454, 1032,
	962, 949, 947, 855, 1030, 960, 948, 308, 268, 287,
	371, 315, 372, 288, 341, 340, 342, 317, 951, 423,
	318, 0, 206, 0, 422, 1040, 1058, 434, 226, 873,
	1007, 449, 178, 379, 227, 278, 266, 370, 345, 218,
	290, 420, 306, 314, 989, 1055, 358, 391, 233, 464,
	419, 261, 871, 1059, 818, 806, 807, 810, 954, 955,
	808, 811, 812, 820, 792, 793, 795, 797, 798, 799,
	942, 1034, 856, 802, 1010, 813, 814, 815, 816, 982,
	1053, 790, 241, 739, 832, 833, 834, 740, 835, 836,
	741, 742, 837, 838, 839, 840, 743, 841, 842, 843,
	821, 822, 823, 824, 825, 826, 827, 828, 831, 829,
	830, 0, 938, 367, 207, 219, 448, 232, 252, 250,
	267, 302, 328, 335, 364, 407, 413, 414, 438, 439,
	440, 442, 255, 331, 259, 231, 385, 230, 316, 293,
	366, 446, 447, 375, 247, 800, 199, 212, 310, 1054,
	382, 275, 334, 411, 336, 297, 246, 477, 339, 381,
	481, 1008, 965, 0, 915, 917, 916, 875, 877, 876,
	874, 1057, 344, 1026, 844, 851, 870, 881, 886, 892,
	900, 901, 909, 914, 924, 933, 934, 944, 957, 958,
	964, 988, 991, 1004, 1009, 1016, 1021, 1022, 466, 251,
	941, 963, 994, 213, 223, 236, 249, 264, 0, 274,
	286, 289, 294, 295, 299, 304, 322, 323, 324, 325,
	348, 349, 352, 353, 356, 357, 361, 362, 363, 368,
	369, 377, 184, 386, 397, 399, 400, 401, 402, 412,
	415, 416, 456, 457, 473, 474, 921, 196, 0, 0,
	202, 0, 203, 205, 908, 201, 1025, 1050, 970, 984,
	895, 1037, 0, 0, 443, 796, 1041, 882, 905, 1051,
	911, 913, 978, 857, 953, 355, 902, 858, 0, 0,
	849, 1099, 850, 883, 258, 1097, 1011, 956, 1039, 939,
	971, 981, 257, 243, 946, 945, 1028, 894, 893, 976,
	1024, 1038, 0, 0, 172, 472, 190, 804, 312, 0,
	0, 470, 421, 337, 0, 0, 937, 0, 788, 789,
	922, 980, 869, 967, 1043, 903, 972, 1044, 89, 0,
	0, 0, 0, 725, 551, 726, 728, 729, 730, 731,
	0, 0, 171, 727, 732, 733, 734, 0, 932, 977,
	1056, 848, 1116, 714, 853, 803, 0, 1029, 890, 891,
	262, 0, 0, 0, 0, 0, 0, 0, 935, 952,
	996, 919, 0, 463, 983, 992, 1006, 912, 374, 282,
	0, 0, 0, 0, 711, 712, 0, 0, 0, 0,
	819, 0, 713, 0, 863, 709, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 715, 0,
	0, 0, 868, 846, 888, 998, 847, 845, 338, 860,
	791, 1027, 920, 300, 191, 1033, 918, 817, 986, 864,
	1015, 1049, 906, 309, 862, 195, 859, 865, 904, 351,
	995, 1001, 801, 198, 311, 1012, 884, 897, 722, 0,
	390, 973, 462, 703, 277, 959, 389, 313, 455, 987,
	1035, 461, 907, 437, 471, 476, 270, 940, 234, 418,
	260, 253, 889, 1005, 852, 283, 373, 248, 305, 923,
	979, 885, 240, 990, 966, 1017, 417, 452, 200, 332,
	453, 475, 166, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 1013, 1000, 1019,
	880, 866, 872, 867, 896, 1036, 292, 284, 1020, 1018,
	898, 359, 224, 950, 943, 936, 805, 465, 1052, 256,
	1002, 467, 180, 404, 403, 910, 291, 1003, 181, 170,
	383, 182, 301, 204, 1023, 480, 220, 307, 445, 702,
	276, 350, 975, 360, 197, 378, 327, 329, 326, 330,
	281, 175, 183, 999, 380, 406, 450, 222, 424, 173,
	176, 185, 396, 186, 187, 1042, 320, 265, 269, 285,
	296, 974, 387, 425, 468, 968, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	997, 216, 210, 1031, 1014, 961, 925, 931, 854, 0,
	209, 926, 927, 928, 929, 930, 993, 887, 899, 879,
	969, 878, 280, 985, 723, 724, 245, 794, 1046, 211,
	861, 1045, 347, 354, 346, 1048, 1047, 454, 1032, 962,
	949, 947, 855, 1030, 960, 948, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 951, 423, 318,
	0, 206, 0, 422, 1040, 1058, 434, 226, 873, 1007,
	449, 178, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 989, 1055, 358, 391, 233, 464, 419,
	261, 871, 1059, 818, 806, 807, 810, 954, 955, 808,
	811, 812, 820, 792, 793, 795, 797, 798, 799, 942,
	1034, 856, 802, 1010, 813, 814, 815, 816, 982, 1053,
	790, 241, 739, 832, 833, 834, 740, 835, 836, 741,
	742, 837, 838, 839, 840, 743, 841, 842, 843, 821,
	822, 823, 824, 825, 826, 827, 828, 831, 829, 830,
	0, 938, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 800, 199, 212, 310, 1054, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	1008, 965, 0, 915, 917, 916, 875, 877, 876, 874,
	1057, 344, 1026, 844, 851, 870, 881, 886, 892, 900,
	901, 909, 914, 924, 933, 934, 944, 957, 958, 964,
	988, 991, 1004, 1009, 1016, 1021, 1022, 466, 251, 941,
	963, 994, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 184, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 921, 196, 0, 0, 202,
	0, 203, 205, 908, 201, 1025, 1050, 970, 984, 895,
	1037, 0, 0, 443, 796, 1041, 882, 905, 1051, 911,
	913, 978, 857, 953, 355, 902, 858, 0, 0, 849,
	1099, 850, 883, 258, 1097, 1011, 956, 1039, 939, 971,
	981, 257, 243, 946, 945, 1028, 894, 893, 976, 1024,
	1038, 0, 0, 172, 472, 190, 804, 312, 0, 0,
	470, 421, 337, 0, 0, 937, 0, 788, 789, 922,
	980, 869, 967, 1043, 903, 972, 1044, 89, 0, 0,
	0, 0, 725, 551, 726, 728, 729, 730, 731, 0,
	0, 171, 727, 732, 733, 734, 0, 932, 977, 1056,
	848, 1116, 714, 853, 803, 0, 1029, 890, 891, 262,
	0, 0, 0, 0, 0, 0, 0, 935, 952, 996,
	919, 0, 463, 983, 992, 1006, 912, 374, 282, 0,
	0, 0, 0, 711, 712, 0, 0, 0, 0, 819,
	0, 713, 0, 863, 709, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 715, 0, 0,
	0, 868, 846, 888, 998, 847, 845, 338, 860, 791,
	1027, 920, 300, 191, 1033, 918, 817, 986, 864, 1015,
	1049, 906, 309, 862, 195, 859, 865, 904, 351, 995,
	1001, 801, 198, 311, 1012, 884, 897, 722, 0, 390,
	973, 462, 703, 277, 4427, 389, 313, 455, 987, 1035,
	461, 907, 437, 471, 476, 270, 940, 234, 418, 260,
	253, 889, 1005, 852, 283, 373, 248, 305, 923, 979,
	885, 240, 990, 966, 1017, 417, 452, 200, 332, 453,
	475, 166, 271, 409, 272, 436, 263, 235, 376, 214,
	303, 0, 0, 254, 298, 0, 0, 478, 469, 225,
	273, 384, 388, 365, 221, 444, 333, 343, 237, 239,
	238, 215, 410, 451, 228, 242, 1013, 1000, 1019, 880,
	866, 872, 867, 896, 1036, 292, 284, 1020, 1018, 898,
	359, 224, 950, 943, 936, 805, 465, 1052, 256, 1002,
	467, 180, 404, 403, 910, 291, 1003, 181, 170, 383,
	182, 301, 204, 1023, 480, 220, 307, 445, 702, 276,
	350, 975, 360, 197, 378, 327, 329, 326, 330, 281,
	175, 183, 999, 380, 406, 450, 222, 424, 173, 176,
	185, 396, 186, 187, 1042, 320, 265, 269, 285, 296,
	974, 387, 425, 468, 968, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 426, 441, 398,
	279, 319, 321, 428, 433, 429, 430, 427, 432, 431,
	394, 395, 208, 435, 460, 229, 405, 408, 479, 997,
	216, 210, 1031, 1014, 961, 925, 931, 854, 0, 209,
	926, 927, 928, 929, 930, 993, 887, 899, 879, 969,
	878, 280, 985, 723, 724, 245, 794, 1046, 211, 861,
	1045, 347, 354, 346, 1048, 1047, 454, 1032, 962, 949,
	947, 855, 1030, 960, 948, 308, 268, 287, 371, 315,
	372, 288, 341, 340, 342, 317, 951, 423, 318, 0,
	206, 0, 422, 1040, 1058, 434, 226, 873, 1007, 449,
	178, 379, 227, 278, 266, 370, 345, 218, 290, 420,
	306, 314, 989, 1055, 358, 391, 233, 464, 419, 261,
	871, 1059, 818, 806, 807, 810, 954, 955, 808, 811,
	812, 820, 792, 793, 795, 797, 798, 799, 942, 1034,
	856, 802, 1010, 813, 814, 815, 816, 982, 1053, 790,
	241, 739, 832, 833, 834, 740, 835, 836, 741, 742,
	837, 838, 839, 840, 743, 841, 842, 843, 821, 822,
	823, 824, 825, 826, 827, 828, 831, 829, 830, 0,
	938, 367, 207, 219, 448, 232, 252, 250, 267, 302,
	328, 335, 364, 407, 413, 414, 438, 439, 440, 442,
	255, 331, 259, 231, 385, 230, 316, 293, 366, 446,
	447, 375, 247, 800, 199, 212, 310, 1054, 382, 275,
	334, 411, 336, 297, 246, 477, 339, 381, 481, 1008,
	965, 0, 915, 917, 916, 875, 877, 876, 874, 1057,
	344, 1026, 844, 851, 870, 881, 886, 892, 900, 901,
	909, 914, 924, 933, 934, 944, 957, 958, 964, 988,
	991, 1004, 1009, 1016, 1021, 1022, 466, 251, 941, 963,
	994, 213, 223, 236, 249, 264, 0, 274, 286, 289,
	294, 295, 299, 304, 322, 323, 324, 325, 348, 349,
	352, 353, 356, 357, 361, 362, 363, 368, 369, 377,
	184, 386, 397, 399, 400, 401, 402, 412, 415, 416,
	456, 457, 473, 474, 921, 196, 0, 0, 202, 0,
	203, 205, 908, 201, 1025, 1050, 970, 984, 895, 1037,
	0, 0, 443, 796, 1041, 882, 905, 1051, 911, 913,
	978, 857, 953, 355, 902, 858, 0, 0, 849, 1099,
	850, 883, 258, 1097, 1011, 956, 1039, 939, 971, 981,
	257, 243, 946, 945, 1028, 894, 893, 976, 1024, 1038,
	0, 0, 172, 472, 190, 804, 312, 0, 0, 470,
	421, 337, 0, 0, 937, 0, 788, 789, 922, 980,
	869, 967, 1043, 903, 972, 1044, 89, 0, 0, 0,
	0, 725, 551, 726, 728, 729, 730, 731, 0, 0,
	171, 727, 732, 733, 734, 0, 932, 977, 1056, 848,
	1116, 714, 853, 803, 0, 1029, 890, 891, 262, 0,
	0, 0, 0, 0, 0, 0, 935, 952, 996, 919,
	0, 463, 983, 992, 1006, 912, 374, 282, 0, 0,
	0, 0, 711, 712, 0, 0, 0, 0, 819, 0,
	713, 0, 863, 709, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 715, 0, 0, 0,
	868, 846, 888, 998, 847, 845, 338, 860, 791, 1027,
	920, 300, 191, 1033, 918, 817, 986, 864, 1015, 1049,
	906, 309, 862, 195, 859, 865, 904, 351, 995, 1001,
	801, 198, 311, 1012, 884, 897, 722, 0, 390, 973,
	462, 703, 277, 959, 389, 313, 455, 987, 1035, 461,
	907, 437, 471, 476, 270, 940, 234, 418, 260, 253,
	889, 1005, 852, 283, 373, 248, 305, 923, 979, 885,
	240, 990, 966, 1017, 417, 452, 200, 332, 453, 475,
	166, 271, 409, 272, 436, 263, 235, 376, 214, 303,
	0, 0, 254, 298, 0, 0, 478, 469, 225, 273,
	384, 388, 365, 221, 444, 333, 343, 237, 239, 238,
	215, 410, 451, 228, 242, 1013, 1000, 1019, 880, 866,
	872, 867, 896, 1036, 292, 284, 1020, 1018, 898, 359,
	224, 950, 943, 936, 805, 465, 1052, 256, 1002, 467,
	180, 404, 403, 910, 291, 1003, 181, 170, 383, 182,
	301, 204, 1023, 480, 220, 307, 445, 702, 276, 350,
	975, 360, 197, 378, 327, 329, 326, 330, 281, 175,
	183, 999, 380, 406, 450, 222, 424, 173, 176, 185,
	396, 186, 187, 1042, 320, 265, 269, 285, 296, 974,
	387, 425, 468, 968, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 426, 441, 398, 279,
	319, 321, 428, 433, 429, 430, 427, 432, 431, 394,
	395, 208, 435, 460, 229, 405, 408, 479, 997, 216,
	210, 1031, 1014, 961, 925, 931, 854, 0, 209, 926,
	927, 928, 929, 930, 993, 887, 899, 879, 969, 878,
	280, 985, 723, 724, 245, 794, 1046, 211, 861, 1045,
	347, 354, 346, 1048, 1047, 454, 1032, 962, 949, 947,
	855, 1030, 960, 948, 308, 268, 287, 371, 315, 372,
	288, 341, 340, 342, 317, 951, 423, 318, 0, 206,
	0, 422, 1040, 1058, 434, 226, 873, 1007, 449, 178,
	379, 227, 278, 266, 370, 345, 218, 290, 420, 306,
	314, 989, 1055, 358, 391, 233, 464, 419, 261, 871,
	1059, 818, 806, 807, 810, 954, 955, 808, 811, 812,
	820, 792, 793, 795, 797, 798, 799, 2331, 2332, 2333,
	802, 1010, 813, 814, 815, 816, 982, 1053, 790, 241,
	739, 832, 833, 834, 740, 835, 836, 741, 742, 837,
	838, 839, 840, 743, 841, 842, 843, 821, 822, 823,
	824, 825, 826, 827, 828, 831, 829, 830, 0, 938,
	367, 207, 219, 448, 232, 252, 250, 267, 302, 328,
	335, 364, 407, 413, 414, 438, 439, 440, 442, 255,
	331, 259, 231, 385, 230, 316, 293, 366, 446, 447,
	375, 247, 800, 199, 212, 310, 1054, 382, 275, 334,
	411, 336, 297, 246, 477, 339, 381, 481, 1008, 965,
	0, 915, 917, 916, 875, 877, 876, 874, 1057, 344,
	1026, 844, 851, 870, 881, 886, 892, 900, 901, 909,
	914, 924, 933, 934, 944, 957, 958, 964, 988, 991,
	1004, 1009, 1016, 1021, 1022, 466, 251, 941, 963, 994,
	213, 223, 236, 249, 264, 0, 274, 286, 289, 294,
	295, 299, 304, 322, 323, 324, 325, 348, 349, 352,
	353, 356, 357, 361, 362, 363, 368, 369, 377, 184,
	386, 397, 399, 400, 401, 402, 412, 415, 416, 456,
	457, 473, 474, 921, 196, 0, 0, 202, 0, 203,
	205, 908, 201, 1025, 1050, 970, 984, 1821, 2000, 0,
	3613, 443, 1855, 2004, 1804, 1834, 2022, 1840, 1843, 1924,
	1770, 1893, 355, 1831, 1771, 1754, 1809, 1758, 1822, 1759,
	1806, 258, 1802, 1965, 1896, 2002, 1875, 1917, 1927, 257,
	243, 1885, 1884, 1990, 1820, 1819, 1922, 1979, 2001, 1874,
	0, 172, 472, 190, 3614, 312, 1976, 491, 3615, 421,
	337, 494, 493, 1870, 1985, 1891, 1954, 1853, 1926, 1786,
	1909, 2006, 1832, 1918, 2007, 89, 0, 689, 0, 0,
	0, 1156, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1914, 1998, 1825, 492, 1865, 1923, 2027, 1757, 1910,
	0, 1762, 1773, 2021, 1991, 1816, 1817, 262, 0, 0,
	0, 0, 0, 0, 0, 1868, 1892, 1944, 1850, 0,
	463, 1929, 1939, 1957, 1842, 374, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 1907, 0, 0,
	0, 1778, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 1785,
	1755, 1813, 1946, 1756, 1753, 338, 1774, 1959, 3617, 1851,
	300, 191, 1995, 1849, 1848, 1933, 1779, 1969, 2019, 1835,
	309, 1777, 195, 1772, 1780, 1833, 351, 1943, 1951, 177,
	198, 311, 1966, 1807, 1824, 244, 2163, 390, 1919, 462,
	490, 277, 1900, 389, 313, 455, 1934, 1997, 461, 1836,
	437, 471, 476, 270, 1876, 234, 418, 260, 253, 1815,
	1956, 1761, 283, 373, 248, 305, 1854, 1925, 1808, 240,
	1937, 1908, 1971, 417, 452, 200, 332, 453, 475, 166,
	271, 409, 272, 436, 263, 235, 376, 214, 303, 0,
	0, 254, 298, 0, 0, 478, 469, 225, 273, 384,
	388, 365, 221, 444, 333, 343, 237, 239, 238, 215,
	410, 451, 228, 242, 1967, 1950, 1973, 1801, 1781, 1792,
	1782, 1823, 1999, 292, 284, 1974, 1972, 1826, 359, 224,
	1889, 1882, 1869, 1947, 465, 2023, 256, 1952, 467, 180,
	404, 403, 1839, 291, 1953, 181, 170, 383, 182, 301,
	204, 1978, 480, 220, 307, 445, 489, 276, 350, 1921,
	360, 197, 378, 327, 329, 326, 330, 281, 175, 183,
	1949, 380, 406, 450, 222, 424, 173, 176, 185, 396,
	186, 187, 2005, 320, 265, 269, 285, 296, 1920, 387,
	425, 468, 1911, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 426, 441, 398, 279, 319,
	321, 428, 433, 429, 430, 427, 432, 431, 394, 395,
	208, 435, 460, 229, 405, 408, 479, 1945, 216, 210,
	1993, 1968, 1902, 1857, 1863, 1763, 0, 209, 1858, 1859,
	1860, 1861, 1862, 1941, 1812, 1828, 1800, 1915, 1799, 280,
	1932, 458, 459, 245, 1775, 2013, 211, 1776, 2012, 347,
	354, 346, 2016, 2014, 454, 1994, 1903, 1888, 1886, 1768,
	1992, 1901, 1887, 308, 268, 287, 371, 315, 372, 288,
	341, 340, 342, 317, 1890, 423, 318, 0, 206, 0,
	422, 2003, 2029, 434, 226, 1794, 1960, 449, 178, 379,
	227, 278, 266, 370, 345, 218, 290, 420, 306, 314,
	1936, 2026, 358, 391, 233, 464, 419, 261, 1790, 0,
	1793, 1788, 1791, 1789, 1894, 1895, 2008, 2009, 2010, 1948,
	1783, 0, 0, 1986, 1987, 0, 1881, 1996, 1769, 0,
	1964, 188, 189, 174, 179, 1928, 2024, 1841, 241, 164,
	1765, 1766, 1767, 165, 1871, 1872, 167, 168, 1982, 1981,
	1980, 1983, 169, 2017, 2015, 2018, 1784, 1805, 1827, 1877,
	1878, 1880, 1912, 1913, 1958, 1931, 1940, 1814, 1873, 367,
	207, 219, 448, 232, 252, 250, 267, 302, 328, 335,
	364, 407, 413, 414, 438, 439, 440, 442, 255, 331,
	259, 231, 385, 230, 316, 293, 366, 446, 447, 375,
	247, 1899, 199, 212, 310, 3616, 382, 275, 334, 411,
	336, 297, 246, 477, 339, 381, 481, 1961, 1906, 0,
	1845, 1847, 1846, 1796, 1798, 1797, 1795, 2028, 344, 1988,
	1752, 1760, 1787, 1803, 1810, 1818, 1829, 1830, 1838, 1844,
	1856, 1866, 1867, 1883, 1897, 1898, 1905, 1935, 1938, 1955,
	1963, 1970, 1975, 1977, 466, 251, 1879, 1904, 1942, 213,
	223, 236, 249, 264, 0, 274, 286, 289, 294, 295,
	299, 304, 322, 323, 324, 325, 348, 349, 352, 353,
	356, 357, 361, 362, 363, 368, 369, 377, 184, 386,
	397, 399, 400, 401, 402, 412, 415, 416, 456, 457,
	473, 474, 1852, 196, 0, 0, 202, 0, 203, 205,
	1837, 201, 1984, 2020, 1916, 1930, 1821, 2000, 0, 1962,
	443, 1855, 2004, 1804, 1834, 2022, 1840, 1843, 1924, 1770,
	1893, 355, 1831, 1771, 1754, 1809, 1758, 1822, 1759, 1806,
	258, 1802, 1965, 1896, 2002, 1875, 1917, 1927, 257, 243,
	1885, 1884, 1990, 1820, 1819, 1922, 1979, 2001, 1874, 0,
	172, 472, 190, 2011, 312, 1976, 491, 470, 421, 337,
	494, 493, 1870, 1985, 1891, 1954, 1853, 1926, 1786, 1909,
	2006, 1832, 1918, 2007, 0, 0, 0, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1914, 1998, 1825, 492, 1865, 1923, 2027, 1757, 1910, 0,
	1762, 1773, 2021, 1991, 1816, 1817, 262, 0, 0, 0,
	0, 0, 0, 0, 1868, 1892, 1944, 1850, 0, 463,
	1929, 1939, 1957, 1842, 374, 282, 0, 0, 0, 0,
	0, 0, 3148, 0, 1811, 0, 1907, 0, 0, 0,
	1778, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 1785, 1755,
	1813, 1946, 1756, 1753, 338, 1774, 1959, 1989, 1851, 300,
	191, 1995, 1849, 1848, 1933, 1779, 1969, 2019, 1835, 309,
	1777, 195, 1772, 1780, 1833, 351, 1943, 1951, 177, 198,
	311, 1966, 1807, 1824, 244, 0, 390, 1919, 462, 2260,
	277, 1900, 389, 313, 455, 1934, 1997, 461, 1836, 437,
	471, 476, 270, 1876, 234, 418, 260, 253, 1815, 1956,
	1761, 283, 373, 248, 305, 1854, 1925, 1808, 240, 1937,
	1908, 1971, 417, 452, 200, 332, 453, 475, 166, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 1967, 1950, 1973, 1801, 1781, 1792, 1782,
	1823, 1999, 292, 284, 1974, 1972, 1826, 359, 224, 1889,
	1882, 1869, 1947, 465, 2023, 256, 1952, 467, 180, 404,
	403, 1839, 291, 1953, 181, 170, 383, 182, 301, 204,
	1978, 480, 220, 307, 445, 2259, 276, 350, 1921, 360,
	197, 378, 327, 329, 326, 330, 281, 175, 183, 1949,
	380, 406, 450, 222, 424, 173, 176, 185, 396, 186,
	187, 2005, 320, 265, 269, 285, 296, 1920, 387, 425,
	468, 1911, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 1945, 216, 210, 1993,
	1968, 1902, 1857, 1863, 1763, 0, 209, 1858, 1859, 1860,
	1861, 1862, 1941, 1812, 1828, 1800, 1915, 1799, 280, 1932,
	458, 459, 245, 1775, 2013, 211, 1776, 2012, 347, 354,
	346, 2016, 2014, 454, 1994, 1903, 1888, 1886, 1768, 1992,
	1901, 1887, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 317, 1890, 423, 318, 0, 206, 0, 422,
	2003, 2029, 434, 226, 1794, 1960, 449, 178, 379, 227,
	278, 266, 370, 345, 218, 290, 420, 306, 314, 1936,
	2026, 358, 391, 233, 464, 419, 261, 1790, 0, 1793,
	1788, 1791, 1789, 1894, 1895, 2008, 2009, 2010, 1948, 1783,
	0, 0, 1986, 1987, 0, 1881, 1996, 1769, 0, 1964,
	188, 189, 174, 179, 1928, 2024, 1841, 241, 164, 1765,
	1766, 1767, 165, 1871, 1872, 167, 168, 1982, 1981, 1980,
	1983, 169, 2017, 2015, 2018, 1784, 1805, 1827, 1877, 1878,
	1880, 1912, 1913, 1958, 1931, 1940, 1814, 1873, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	1899, 199, 212, 310, 2025, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 1961, 1906, 0, 1845,
	1847, 1846, 1796, 1798, 1797, 1795, 2028, 344, 1988, 1752,
	1760, 1787, 1803, 1810, 1818, 1829, 1830, 1838, 1844, 1856,
	1866, 1867, 1883, 1897, 1898, 1905, 1935, 1938, 1955, 1963,
	1970, 1975, 1977, 466, 251, 1879, 1904, 1942, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 368, 369, 377, 184, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 1852, 196, 0, 0, 202, 0, 203, 205, 1837,
	201, 1984, 2020, 1916, 1930, 1821, 2000, 0, 1962, 443,
	1855, 2004, 1804, 1834, 2022, 1840, 1843, 1924, 1770, 1893,
	355, 1831, 1771, 1754, 1809, 1758, 1822, 1759, 1806, 258,
	1802, 1965, 1896, 2002, 1875, 1917, 1927, 257, 243, 1885,
	1884, 1990, 1820, 1819, 1922, 1979, 2001, 1874, 0, 172,
	472, 190, 2011, 312, 1976, 491, 470, 421, 337, 494,
	493, 1870, 1985, 1891, 1954, 1853, 1926, 1786, 1909, 2006,
	1832, 1918, 2007, 0, 0, 0, 0, 0, 0, 1156,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1914,
	1998, 1825, 492, 1865, 1923, 2027, 1757, 1910, 0, 1762,
	1773, 2021, 1991, 1816, 1817, 262, 0, 0, 0, 0,
	0, 0, 0, 1868, 1892, 1944, 1850, 0, 463, 1929,
	1939, 1957, 1842, 374, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 1907, 0, 0, 0, 1778,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 1785, 1755, 1813,
	1946, 1756, 1753, 338, 1774, 1959, 1989, 1851, 300, 191,
	1995, 1849, 1848, 1933, 1779, 1969, 2019, 1835, 309, 1777,
	195, 1772, 1780, 1833, 351, 1943, 1951, 177, 198, 311,
	1966, 1807, 1824, 244, 2163, 390, 1919, 462, 490, 277,
	1900, 389, 313, 455, 1934, 1997, 461, 1836, 437, 471,
	476, 270, 1876, 234, 418, 260, 253, 1815, 1956, 1761,
	283, 373, 248, 305, 1854, 1925, 1808, 240, 1937, 1908,
	1971, 417, 452, 200, 332, 453, 475, 166, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 1967, 1950, 1973, 1801, 1781, 1792, 1782, 1823,
	1999, 292, 284, 1974, 1972, 1826, 359, 224, 1889, 1882,
	1869, 1947, 465, 2023, 256, 1952, 467, 180, 404, 403,
	1839, 291, 1953, 181, 170, 383, 182, 301, 204, 1978,
	480, 220, 307, 445, 489, 276, 350, 1921, 360, 197,
	378, 327, 329, 326, 330, 281, 175, 183, 1949, 380,
	406, 450, 222, 424, 173, 176, 185, 396, 186, 187,
	2005, 320, 265, 269, 285, 296, 1920, 387, 425, 468,
	1911, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	460, 229, 405, 408, 479, 1945, 216, 210, 1993, 1968,
	1902, 1857, 1863, 1763, 0, 209, 1858, 1859, 1860, 1861,
	1862, 1941, 1812, 1828, 1800, 1915, 1799, 280, 1932, 458,
	459, 245, 1775, 2013, 211, 1776, 2012, 347, 354, 346,
	2016, 2014, 454, 1994, 1903, 1888, 1886, 1768, 1992, 1901,
	1887, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 1890, 423, 318, 0, 206, 0, 422, 2003,
	2029, 434, 226, 1794, 1960, 449, 178, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 1936, 2026,
	358, 391, 233, 464, 419, 261, 1790, 0, 1793, 1788,
	1791, 1789, 1894, 1895, 2008, 2009, 2010, 1948, 1783, 0,
	0, 1986, 1987, 0, 1881, 1996, 1769, 0, 1964, 188,
	189, 174, 179, 1928, 2024, 1841, 241, 164, 1765, 1766,
	1767, 165, 1871, 1872, 167, 168, 1982, 1981, 1980, 1983,
	169, 2017, 2015, 2018, 1784, 1805, 1827, 1877, 1878, 1880,
	1912, 1913, 1958, 1931, 1940, 1814, 1873, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 1899,
	199, 212, 310, 2025, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 1961, 1906, 0, 1845, 1847,
	1846, 1796, 1798, 1797, 1795, 2028, 344, 1988, 1752, 1760,
	1787, 1803, 1810, 1818, 1829, 1830, 1838, 1844, 1856, 1866,
	1867, 1883, 1897, 1898, 1905, 1935, 1938, 1955, 1963, 1970,
	1975, 1977, 466, 251, 1879, 1904, 1942, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 184, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	1852, 196, 0, 0, 202, 0, 203, 205, 1837, 201,
	1984, 2020, 1916, 1930, 1821, 2000, 0, 1962, 443, 1855,
	2004, 1804, 1834, 2022, 1840, 1843, 1924, 1770, 1893, 355,
	1831, 1771, 1754, 1809, 1758, 1822, 1759, 1806, 258, 1802,
	1965, 1896, 2002, 1875, 1917, 1927, 257, 243, 1885, 1884,
	1990, 1820, 1819, 1922, 1979, 2001, 1874, 0, 172, 472,
	190, 2011, 312, 1976, 491, 470, 421, 337, 494, 493,
	1870, 1985, 1891, 1954, 1853, 1926, 1786, 1909, 2006, 1832,
	1918, 2007, 0, 0, 0, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1914, 1998,
	1825, 492, 1865, 1923, 2027, 1757, 1910, 0, 1762, 1773,
	2021, 1991, 1816, 1817, 262, 0, 0, 0, 0, 0,
	0, 0, 1868, 1892, 1944, 1850, 0, 463, 1929, 1939,
	1957, 1842, 374, 282, 0, 0, 0, 0, 0, 0,
	2254, 0, 1811, 0, 1907, 0, 0, 0, 1778, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 1785, 1755, 1813, 1946,
	1756, 1753, 338, 1774, 1959, 1989, 1851, 300, 191, 1995,
	1849, 1848, 1933, 1779, 1969, 2019, 1835, 309, 1777, 195,
	1772, 1780, 1833, 351, 1943, 1951, 177, 198, 311, 1966,
	1807, 1824, 244, 0, 390, 1919, 462, 2260, 277, 1900,
	389, 313, 455, 1934, 1997, 461, 1836, 437, 471, 476,
	270, 1876, 234, 418, 260, 253, 1815, 1956, 1761, 283,
	373, 248, 305, 1854, 1925, 1808, 240, 1937, 1908, 1971,
	417, 452, 200, 332, 453, 475, 166, 271, 409, 272,
	436, 263, 235, 376, 214, 303, 0, 0, 254, 298,
	0, 0, 478, 469, 225, 273, 384, 388, 365, 221,
	444, 333, 343, 237, 239, 238, 215, 410, 451, 228,
	242, 1967, 1950, 1973, 1801, 1781, 1792, 1782, 1823, 1999,
	292, 284, 1974, 1972, 1826, 359, 224, 1889, 1882, 1869,
	1947, 465, 2023, 256, 1952, 467, 180, 404, 403, 1839,
	291, 1953, 181, 170, 383, 182, 301, 204, 1978, 480,
	220, 307, 445, 2259, 276, 350, 1921, 360, 197, 378,
	327, 329, 326, 330, 281, 175, 183, 1949, 380, 406,
	450, 222, 424, 173, 176, 185, 396, 186, 187, 2005,
	320, 265, 269, 285, 296, 1920, 387, 425, 468, 1911,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 426, 441, 398, 279, 319, 321, 428, 433,
	429, 430, 427, 432, 431, 394, 395, 208, 435, 460,
	229, 405, 408, 479, 1945, 216, 210, 1993, 1968, 1902,
	1857, 1863, 1763, 0, 209, 1858, 1859, 1860, 1861, 1862,
	1941, 1812, 1828, 1800, 1915, 1799, 280, 1932, 458, 459,
	245, 1775, 2013, 211, 1776, 2012, 347, 354, 346, 2016,
	2014, 454, 1994, 1903, 1888, 1886, 1768, 1992, 1901, 1887,
	308, 268, 287, 371, 315, 372, 288, 341, 340, 342,
	317, 1890, 423, 318, 0, 206, 0, 422, 2003, 2029,
	434, 226, 1794, 1960, 449, 178, 379, 227, 278, 266,
	370, 345, 218, 290, 420, 306, 314, 1936, 2026, 358,
	391, 233, 464, 419, 261, 1790, 0, 1793, 1788, 1791,
	1789, 1894, 1895, 2008, 2009, 2010, 1948, 1783, 0, 0,
	1986, 1987, 0, 1881, 1996, 1769, 0, 1964, 188, 189,
	174, 179, 1928, 2024, 1841, 241, 164, 1765, 1766, 1767,
	165, 1871, 1872, 167, 168, 1982, 1981, 1980, 1983, 169,
	2017, 2015, 2018, 1784, 1805, 1827, 1877, 1878, 1880, 1912,
	1913, 1958, 1931, 1940, 1814, 1873, 367, 207, 219, 448,
	232, 252, 250, 267, 302, 328, 335, 364, 407, 413,
	414, 438, 439, 440, 442, 255, 331, 259, 231, 385,
	230, 316, 293, 366, 446, 447, 375, 247, 1899, 199,
	212, 310, 2025, 382, 275, 334, 411, 336, 297, 246,
	477, 339, 381, 481, 1961, 1906, 0, 1845, 1847, 1846,
	1796, 1798, 1797, 1795, 2028, 344, 1988, 1752, 1760, 1787,
	1803, 1810, 1818, 1829, 1830, 1838, 1844, 1856, 1866, 1867,
	1883, 1897, 1898, 1905, 1935, 1938, 1955, 1963, 1970, 1975,
	1977, 466, 251, 1879, 1904, 1942, 213, 223, 236, 249,
	264, 0, 274, 286, 289, 294, 295, 299, 304, 322,
	323, 324, 325, 348, 349, 352, 353, 356, 357, 361,
	362, 363, 368, 369, 377, 184, 386, 397, 399, 400,
	401, 402, 412, 415, 416, 456, 457, 473, 474, 1852,
	196, 0, 0, 202, 0, 203, 205, 1837, 201, 1984,
	2020, 1916, 1930, 1821, 2000, 0, 1962, 443, 1855, 2004,
	1804, 1834, 2022, 1840, 1843, 1924, 1770, 1893, 355, 1831,
	1771, 1754, 1809, 1758, 1822, 1759, 1806, 258, 1802, 1965,
	1896, 2002, 1875, 1917, 1927, 257, 243, 1885, 1884, 1990,
	1820, 1819, 1922, 1979, 2001, 1874, 0, 172, 472, 190,
	2011, 312, 1976, 491, 470, 421, 337, 494, 493, 1870,
	1985, 1891, 1954, 1853, 1926, 1786, 1909, 2006, 1832, 1918,
	2007, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1914, 1998, 1825,
	492, 1865, 1923, 2027, 1757, 1910, 0, 1762, 1773, 2021,
	1991, 1816, 1817, 262, 0, 0, 0, 0, 0, 0,
	0, 1868, 1892, 1944, 1850, 0, 463, 1929, 1939, 1957,
	1842, 374, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1907, 0, 0, 0, 1778, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 1785, 1755, 1813, 1946, 1756,
	1753, 338, 1774, 1959, 1989, 1851, 300, 191, 1995, 1849,
	1848, 1933, 1779, 1969, 2019, 1835, 309, 1777, 195, 1772,
	1780, 1833, 351, 1943, 1951, 177, 198, 311, 1966, 1807,
	1824, 244, 0, 390, 1919, 462, 2260, 277, 1900, 389,
	313, 455, 1934, 1997, 461, 1836, 437, 471, 476, 270,
	1876, 234, 418, 260, 253, 1815, 1956, 1761, 283, 373,
	248, 305, 1854, 1925, 1808, 240, 1937, 1908, 1971, 417,
	452, 200, 332, 453, 475, 166, 271, 409, 272, 436,
	263, 235, 376, 214, 303, 0, 0, 254, 298, 0,
	0, 478, 469, 225, 273, 384, 388, 365, 221, 444,
	333, 343, 237, 239, 238, 215, 410, 451, 228, 242,
	1967, 1950, 1973, 1801, 1781, 1792, 1782, 1823, 1999, 292,
	284, 1974, 1972, 1826, 359, 224, 1889, 1882, 1869, 1947,
	465, 2023, 256, 1952, 467, 180, 404, 403, 1839, 291,
	1953, 181, 170, 383, 182, 301, 204, 1978, 480, 220,
	307, 445, 2259, 276, 350, 1921, 360, 197, 378, 327,
	329, 326, 330, 281, 175, 183, 1949, 380, 406, 450,
	222, 424, 173, 176, 185, 396, 186, 187, 2005, 320,
	265, 269, 285, 296, 1920, 387, 425, 468, 1911, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 426, 441, 398, 279, 319, 321, 428, 433, 429,
	430, 427, 432, 431, 394, 395, 208, 435, 460, 229,
	405, 408, 479, 1945, 216, 210, 1993, 1968, 1902, 1857,
	1863, 1763, 0, 209, 1858, 1859, 1860, 1861, 1862, 1941,
	1812, 1828, 1800, 1915, 1799, 280, 1932, 458, 459, 245,
	1775, 2013, 211, 1776, 2012, 347, 354, 346, 2016, 2014,
	454, 1994, 1903, 1888, 1886, 1768, 1992, 1901, 1887, 308,
	268, 287, 371, 315, 372, 288, 341, 340, 342, 317,
	1890, 423, 318, 0, 206, 0, 422, 2003, 2029, 434,
	226, 1794, 1960, 449, 178, 379, 227, 278, 266, 370,
	345, 218, 290, 420, 306, 314, 1936, 2026, 358, 391,
	233, 464, 419, 261, 1790, 0, 1793, 1788, 1791, 1789,
	1894, 1895, 2008, 2009, 2010, 1948, 1783, 0, 0, 1986,
	1987, 0, 1881, 1996, 1769, 0, 1964, 188, 189, 174,
	179, 1928, 2024, 1841, 241, 164, 1765, 1766, 1767, 165,
	1871, 1872, 167, 168, 1982, 1981, 1980, 1983, 169, 2017,
	2015, 2018, 1784, 1805, 1827, 1877, 1878, 1880, 1912, 1913,
	1958, 1931, 1940, 1814, 1873, 367, 207, 219, 448, 232,
	252, 250, 267, 302, 328, 335, 364, 407, 413, 414,
	438, 439, 440, 442, 255, 331, 259, 231, 385, 230,
	316, 293, 366, 446, 447, 375, 247, 1899, 199, 212,
	310, 2025, 382, 275, 334, 411, 336, 297, 246, 477,
	339, 381, 481, 1961, 1906, 0, 1845, 1847, 1846, 1796,
	1798, 1797, 1795, 2028, 344, 1988, 1752, 1760, 1787, 1803,
	1810, 1818, 1829, 1830, 1838, 1844, 1856, 1866, 1867, 1883,
	1897, 1898, 1905, 1935, 1938, 1955, 1963, 1970, 1975, 1977,
	466, 251, 1879, 1904, 1942, 213, 223, 236, 249, 264,
	0, 274, 286, 289, 294, 295, 299, 304, 322, 323,
	324, 325, 348, 349, 352, 353, 356, 357, 361, 362,
	363, 368, 369, 377, 184, 386, 397, 399, 400, 401,
	402, 412, 415, 416, 456, 457, 473, 474, 1852, 196,
	0, 0, 202, 0, 203, 205, 1837, 201, 1984, 2020,
	1916, 1930, 895, 1037, 0, 0, 443, 1104, 1041, 882,
	905, 1051, 911, 913, 978, 857, 953, 355, 902, 858,
	0, 0, 849, 1099, 850, 883, 258, 1097, 1011, 956,
	1039, 939, 971, 981, 257, 243, 946, 945, 1028, 894,
	893, 976, 1024, 1038, 0, 0, 172, 472, 190, 1137,
	312, 0, 491, 470, 421, 337, 494, 493, 937, 0,
	1111, 1124, 922, 980, 869, 967, 1043, 903, 972, 1044,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1119, 1133, 1100, 492,
	932, 977, 1056, 848, 1116, 0, 853, 1088, 0, 1029,
	890, 891, 262, 0, 0, 0, 0, 0, 0, 0,
	935, 952, 996, 919, 0, 463, 983, 992, 1006, 912,
	374, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 0, 0, 0, 863, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1105, 0, 0, 0, 868, 846, 888, 998, 847, 845,
	338, 860, 1126, 1027, 920, 300, 191, 1033, 918, 1103,
	986, 864, 1015, 1049, 906, 309, 862, 195, 859, 865,
	904, 351, 995, 1001, 177, 198, 311, 1012, 884, 897,
	244, 3247, 390, 973, 462, 2344, 277, 959, 389, 313,
	455, 987, 1035, 461, 907, 437, 471, 476, 270, 940,
	234, 418, 260, 253, 889, 1005, 852, 283, 373, 248,
	305, 923, 979, 885, 240, 990, 966, 1017, 417, 452,
	200, 332, 453, 475, 166, 271, 409, 272, 436, 263,
	235, 376, 214, 303, 0, 0, 254, 298, 0, 0,
	478, 469, 225, 273, 384, 388, 365, 221, 444, 333,
	343, 237, 239, 238, 215, 410, 451, 228, 242, 1013,
	1000, 1019, 880, 866, 872, 867, 896, 1036, 292, 284,
	1020, 1018, 898, 359, 224, 950, 943, 936, 1122, 465,
	1052, 256, 1002, 467, 180, 404, 403, 910, 291, 1003,
	181, 170, 383, 182, 301, 204, 1023, 480, 220, 307,
	445, 2343, 276, 350, 975, 360, 197, 378, 327, 329,
	326, 330, 281, 175, 183, 999, 380, 406, 450, 222,
	424, 173, 176, 185, 396, 186, 187, 1042, 320, 265,
	269, 285, 296, 974, 387, 425, 468, 968, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	426, 441, 398, 279, 319, 321, 428, 433, 429, 430,
	427, 432, 431, 394, 395, 208, 435, 460, 229, 405,
	408, 479, 997, 216, 210, 1031, 1014, 961, 925, 931,
	854, 0, 209, 926, 927, 928, 929, 930, 993, 887,
	899, 879, 969, 878, 280, 985, 458, 459, 245, 1089,
	1046, 211, 861, 1045, 347, 354, 346, 1048, 1047, 454,
	1032, 962, 949, 947, 855, 1030, 960, 948, 308, 268,
	287, 371, 315, 372, 288, 341, 340, 342, 317, 951,
	423, 318, 0, 206, 0, 422, 1040, 1058, 434, 226,
	873, 1007, 449, 178, 379, 227, 278, 266, 370, 345,
	218, 290, 420, 306, 314, 989, 1055, 358, 391, 233,
	464, 419, 261, 1094, 0, 1096, 1092, 1095, 1093, 1112,
	1113, 1134, 1135, 1136, 1123, 1090, 192, 193, 1131, 1132,
	194, 942, 1034, 856, 0, 1010, 188, 189, 174, 179,
	982, 1053, 1102, 241, 164, 1085, 1086, 1087, 165, 1106,
	1107, 167, 168, 1129, 1128, 1127, 1130, 169, 1139, 1138,
	1140, 1091, 1098, 1101, 1108, 1109, 1110, 1117, 1118, 1125,
	1120, 1121, 0, 938, 367, 207, 219, 448, 232, 252,
	250, 267, 302, 328, 335, 364, 407, 413, 414, 438,
	439, 440, 442, 255, 331, 259, 231, 385, 230, 316,
	293, 366, 446, 447, 375, 247, 1114, 199, 212, 310,
	1054, 382, 275, 334, 411, 336, 297, 246, 477, 339,
	381, 481, 1008, 965, 0, 915, 917, 916, 875, 877,
	876, 874, 1057, 344, 1026, 844, 851, 870, 881, 886,
	892, 900, 901, 909, 914, 924, 933, 934, 944, 957,
	958, 964, 988, 991, 1004, 1009, 1016, 1021, 1022, 466,
	251, 941, 963, 994, 213, 223, 236, 249, 264, 0,
	274, 286, 289, 294, 295, 299, 304, 322, 323, 324,
	325, 348, 349, 352, 353, 356, 357, 361, 362, 363,
	368, 369, 377, 184, 386, 397, 399, 400, 401, 402,
	412, 415, 416, 456, 457, 473, 474, 921, 196, 0,
	0, 202, 0, 203, 205, 908, 201, 1025, 1050, 970,
	984, 1821, 2000, 0, 1962, 443, 1855, 2004, 1804, 1834,
	2022, 1840, 1843, 1924, 1770, 1893, 355, 1831, 1771, 1754,
	1809, 1758, 1822, 1759, 1806, 258, 1802, 1965, 1896, 2002,
	1875, 1917, 1927, 257, 243, 1885, 1884, 1990, 1820, 1819,
	1922, 1979, 2001, 1874, 0, 172, 472, 190, 2011, 312,
	1976, 491, 470, 421, 337, 494, 493, 1870, 1985, 1891,
	1954, 1853, 1926, 1786, 1909, 2006, 1832, 1918, 2007, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1914, 1998, 1825, 492, 1865,
	1923, 2027, 1757, 1910, 0, 1762, 1773, 2021, 1991, 1816,
	1817, 262, 0, 0, 0, 0, 0, 0, 0, 1868,
	1892, 1944, 1850, 0, 463, 1929, 1939, 1957, 1842, 374,
	282, 0, 0, 0, 0, 0, 0, 2828, 0, 1811,
	0, 1907, 0, 0, 0, 1778, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 1785, 1755, 1813, 1946, 1756, 1753, 338,
	1774, 1959, 1989, 1851, 300, 191, 1995, 1849, 1848, 1933,
	1779, 1969, 2019, 1835, 309, 1777, 195, 1772, 1780, 1833,
	351, 1943, 1951, 177, 198, 311, 1966, 1807, 1824, 244,
	0, 390, 1919, 462, 490, 277, 1900, 389, 313, 455,
	1934, 1997, 461, 1836, 437, 471, 476, 270, 1876, 234,
	418, 260, 253, 1815, 1956, 1761, 283, 373, 248, 305,
	1854, 1925, 1808, 240, 1937, 1908, 1971, 417, 452, 200,
	332, 453, 475, 0, 271, 409, 272, 436, 263, 235,
	376, 214, 303, 0, 0, 254, 298, 0, 0, 478,
	469, 225, 273, 384, 388, 365, 221, 444, 333, 343,
	237, 239, 238, 215, 410, 451, 228, 242, 1967, 1950,
	1973, 1801, 1781, 1792, 1782, 1823, 1999, 292, 284, 1974,
	1972, 1826, 359, 224, 1889, 1882, 1869, 1947, 465, 2023,
	256, 1952, 467, 180, 404, 403, 1839, 291, 1953, 181,
	170, 383, 182, 301, 204, 1978, 480, 220, 307, 445,
	489, 276, 350, 1921, 360, 197, 378, 327, 329, 326,
	330, 281, 175, 183, 1949, 380, 406, 450, 222, 424,
	173, 176, 185, 396, 186, 187, 2005, 320, 265, 269,
	285, 296, 1920, 387, 425, 468, 1911, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 426,
	441, 398, 279, 319, 321, 428, 433, 429, 430, 427,
	432, 431, 394, 395, 208, 435, 460, 229, 405, 408,
	479, 1945, 216, 210, 1993, 1968, 1902, 1857, 1863, 1763,
	0, 209, 1858, 1859, 1860, 1861, 1862, 1941, 1812, 1828,
	1800, 1915, 1799, 280, 1932, 458, 459, 245, 1775, 2013,
	211, 1776, 2012, 347, 354, 346, 2016, 2014, 454, 1994,
	1903, 1888, 1886, 1768, 1992, 1901, 1887, 308, 268, 287,
	371, 315, 372, 288, 341, 340, 342, 317, 1890, 423,
	318, 0, 206, 0, 422, 2003, 2029, 434, 226, 1794,
	1960, 449, 178, 379, 227, 278, 266, 370, 345, 218,
	290, 420, 306, 314, 1936, 2026, 358, 391, 233, 464,
	419, 261, 1790, 0, 1793, 1788, 1791, 1789, 1894, 1895,
	2008, 2009, 2010, 1948, 1783, 0, 0, 1986, 1987, 0,
	1881, 1996, 1769, 0, 1964, 188, 189, 174, 179, 1928,
	2024, 1841, 241, 0, 1765, 1766, 1767, 0, 1871, 1872,
	0, 0, 1982, 1981, 1980, 1983, 0, 2017, 2015, 2018,
	1784, 1805, 1827, 1877, 1878, 1880, 1912, 1913, 1958, 1931,
	1940, 1814, 1873, 367, 207, 219, 448, 232, 252, 250,
	267, 302, 328, 335, 364, 407, 413, 414, 438, 439,
	440, 442, 255, 331, 259, 231, 385, 230, 316, 293,
	366, 446, 447, 375, 247, 1899, 199, 212, 310, 2025,
	382, 275, 334, 411, 336, 297, 246, 477, 339, 381,
	481, 1961, 1906, 0, 1845, 1847, 1846, 1796, 1798, 1797,
	1795, 2028, 344, 1988, 1752, 1760, 1787, 1803, 1810, 1818,
	1829, 1830, 1838, 1844, 1856, 1866, 1867, 1883, 1897, 1898,
	1905, 1935, 1938, 1955, 1963, 1970, 1975, 1977, 466, 251,
	1879, 1904, 1942, 213, 223, 236, 249, 264, 0, 274,
	286, 289, 294, 295, 299, 304, 322, 323, 324, 325,
	348, 349, 352, 353, 356, 357, 361, 362, 363, 368,
	369, 377, 184, 386, 397, 399, 400, 401, 402, 412,
	415, 416, 456, 457, 473, 474, 1852, 196, 0, 0,
	202, 0, 203, 205, 1837, 201, 1984, 2020, 1916, 1930,
	895, 1037, 0, 0, 443, 1104, 1041, 882, 905, 1051,
	911, 913, 978, 857, 953, 355, 902, 858, 0, 0,
	849, 1099, 850, 883, 258, 1097, 1011, 956, 1039, 939,
	971, 981, 257, 243, 946, 945, 1028, 894, 893, 976,
	1024, 1038, 0, 0, 172, 472, 190, 1137, 312, 0,
	491, 470, 421, 337, 494, 493, 937, 0, 1111, 1124,
	922, 980, 869, 967, 1043, 903, 972, 1044, 0, 0,
	0, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1119, 1133, 1100, 492, 932, 977,
	1056, 848, 1116, 0, 853, 1088, 0, 1029, 890, 891,
	262, 0, 0, 0, 0, 0, 0, 0, 935, 952,
	996, 919, 0, 463, 983, 992, 1006, 912, 374, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1115, 0, 0, 0, 863, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1105, 0,
	0, 0, 868, 846, 888, 998, 847, 845, 338, 860,
	1126, 1027, 920, 300, 191, 1033, 918, 1103, 986, 864,
	1015, 1049, 906, 309, 862, 195, 859, 865, 904, 351,
	995, 1001, 177, 198, 311, 1012, 884, 897, 244, 0,
	390, 973, 462, 2344, 277, 959, 389, 313, 455, 987,
	1035, 461, 907, 437, 471, 476, 270, 940, 234, 418,
	260, 253, 889, 1005, 852, 283, 373, 248, 305, 923,
	979, 885, 240, 990, 966, 1017, 417, 452, 200, 332,
	453, 475, 166, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 1013, 1000, 1019,
	880, 866, 872, 867, 896, 1036, 292, 284, 1020, 1018,
	898, 359, 224, 950, 943, 936, 1122, 465, 1052, 256,
	1002, 467, 180, 404, 403, 910, 291, 1003, 181, 170,
	383, 182, 301, 204, 1023, 480, 220, 307, 445, 2343,
	276, 350, 975, 360, 197, 378, 327, 329, 326, 330,
	281, 175, 183, 999, 380, 406, 450, 222, 424, 173,
	176, 185, 396, 186, 187, 1042, 320, 265, 269, 285,
	296, 974, 387, 425, 468, 968, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	997, 216, 210, 1031, 1014, 961, 925, 931, 854, 0,
	209, 926, 927, 928, 929, 930, 993, 887, 899, 879,
	969, 878, 280, 985, 458, 459, 245, 1089, 1046, 211,
	861, 1045, 347, 354, 346, 1048, 1047, 454, 1032, 962,
	949, 947, 855, 1030, 960, 948, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 951, 423, 318,
	0, 206, 0, 422, 1040, 1058, 434, 226, 873, 1007,
	449, 178, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 989, 1055, 358, 391, 233, 464, 419,
	261, 1094, 0, 1096, 1092, 1095, 1093, 1112, 1113, 1134,
	1135, 1136, 1123, 1090, 192, 193, 1131, 1132, 194, 942,
	1034, 856, 0, 1010, 188, 189, 174, 179, 982, 1053,
	1102, 241, 164, 1085, 1086, 1087, 165, 1106, 1107, 167,
	168, 1129, 1128, 1127, 1130, 169, 1139, 1138, 1140, 1091,
	1098, 1101, 1108, 1109, 1110, 1117, 1118, 1125, 1120, 1121,
	0, 938, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 1114, 199, 212, 310, 1054, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	1008, 965, 0, 915, 917, 916, 875, 877, 876, 874,
	1057, 344, 1026, 844, 851, 870, 881, 886, 892, 900,
	901, 909, 914, 924, 933, 934, 944, 957, 958, 964,
	988, 991, 1004, 1009, 1016, 1021, 1022, 466, 251, 941,
	963, 994, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 184, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 921, 196, 0, 0, 202,
	0, 203, 205, 908, 201, 1025, 1050, 970, 984, 1821,
	2000, 0, 1962, 443, 1855, 2004, 1804, 1834, 2022, 1840,
	1843, 1924, 1770, 1893, 355, 1831, 1771, 1754, 1809, 1758,
	1822, 1759, 1806, 258, 1802, 1965, 1896, 2002, 1875, 1917,
	1927, 257, 243, 1885, 1884, 1990, 1820, 1819, 1922, 1979,
	2001, 1874, 0, 172, 472, 190, 2011, 312, 1976, 491,
	470, 421, 337, 494, 493, 1870, 1985, 1891, 1954, 1853,
	1926, 1786, 1909, 2006, 1832, 1918, 2007, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1914, 1998, 1825, 492, 1865, 1923, 2027,
	1757, 1910, 0, 1762, 1773, 2021, 1991, 1816, 1817, 262,
	0, 0, 0, 0, 0, 0, 0, 1868, 1892, 1944,
	1850, 0, 463, 1929, 1939, 1957, 1842, 374, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 1907,
	0, 0, 0, 1778, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 1785, 1755, 1813, 1946, 1756, 1753, 338, 1774, 1959,
	1989, 1851, 300, 191, 1995, 1849, 1848, 1933, 1779, 1969,
	2019, 1835, 309, 1777, 195, 1772, 1780, 1833, 351, 1943,
	1951, 177, 198, 311, 1966, 1807, 1824, 244, 0, 390,
	1919, 462, 490, 277, 1900, 389, 313, 455, 1934, 1997,
	461, 1836, 437, 471, 476, 270, 1876, 234, 418, 260,
	253, 1815, 1956, 1761, 283, 373, 248, 305, 1854, 1925,
	1808, 240, 1937, 1908, 1971, 417, 452, 200, 332, 453,
	475, 0, 271, 409, 272, 436, 263, 235, 376, 214,
	303, 0, 0, 254, 298, 0, 0, 478, 469, 225,
	273, 384, 388, 365, 221, 444, 333, 343, 237, 239,
	238, 215, 410, 451, 228, 242, 1967, 1950, 1973, 1801,
	1781, 1792, 1782, 1823, 1999, 292, 284, 1974, 1972, 1826,
	359, 224, 1889, 1882, 1869, 1947, 465, 2023, 256, 1952,
	467, 180, 404, 403, 1839, 291, 1953, 181, 170, 383,
	182, 301, 204, 1978, 480, 220, 307, 445, 489, 276,
	350, 1921, 360, 197, 378, 327, 329, 326, 330, 281,
	175, 183, 1949, 380, 406, 450, 222, 424, 173, 176,
	185, 396, 186, 187, 2005, 320, 265, 269, 285, 296,
	1920, 387, 425, 468, 1911, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 426, 441, 398,
	279, 319, 321, 428, 433, 429, 430, 427, 432, 431,
	394, 395, 208, 435, 460, 229, 405, 408, 479, 1945,
	216, 210, 1993, 1968, 1902, 1857, 1863, 1763, 0, 209,
	1858, 1859, 1860, 1861, 1862, 1941, 1812, 1828, 1800, 1915,
	1799, 280, 1932, 458, 459, 245, 1775, 2013, 211, 1776,
	2012, 347, 354, 346, 2016, 2014, 454, 1994, 1903, 1888,
	1886, 1768, 1992, 1901, 1887, 308, 268, 287, 371, 315,
	372, 288, 341, 340, 342, 317, 1890, 423, 318, 0,
	206, 0, 422, 2003, 2029, 434, 226, 1794, 1960, 449,
	178, 379, 227, 278, 266, 370, 345, 218, 290, 420,
	306, 314, 1936, 2026, 358, 391, 233, 464, 419, 261,
	1790, 0, 1793, 1788, 1791, 1789, 1894, 1895, 2008, 2009,
	2010, 1948, 1783, 0, 0, 1986, 1987, 0, 1881, 1996,
	1769, 0, 1964, 188, 189, 174, 179, 1928, 2024, 1841,
	241, 0, 1765, 1766, 1767, 0, 1871, 1872, 0, 0,
	1982, 1981, 1980, 1983, 0, 2017, 2015, 2018, 1784, 1805,
	1827, 1877, 1878, 1880, 1912, 1913, 1958, 1931, 1940, 1814,
	1873, 367, 207, 219, 448, 232, 252, 250, 267, 302,
	328, 335, 364, 407, 413, 414, 438, 439, 440, 442,
	255, 331, 259, 231, 385, 230, 316, 293, 366, 446,
	447, 375, 247, 1899, 199, 212, 310, 2025, 382, 275,
	334, 411, 336, 297, 246, 477, 339, 381, 481, 1961,
	1906, 0, 1845, 1847, 1846, 1796, 1798, 1797, 1795, 2028,
	344, 1988, 1752, 1760, 1787, 1803, 1810, 1818, 1829, 1830,
	1838, 1844, 1856, 1866, 1867, 1883, 1897, 1898, 1905, 1935,
	1938, 1955, 1963, 1970, 1975, 1977, 466, 251, 1879, 1904,
	1942, 213, 223, 236, 249, 264, 0, 274, 286, 289,
	294, 295, 299, 304, 322, 323, 324, 325, 348, 349,
	352, 353, 356, 357, 361, 362, 363, 368, 369, 377,
	184, 386, 397, 399, 400, 401, 402, 412, 415, 416,
	456, 457, 473, 474, 1852, 196, 0, 0, 202, 0,
	203, 205, 1837, 201, 1984, 2020, 1916, 1930, 895, 1037,
	0, 0, 443, 1104, 1041, 882, 905, 1051, 911, 913,
	978, 857, 953, 355, 902, 858, 0, 0, 849, 1099,
	850, 883, 258, 1097, 1011, 956, 1039, 939, 971, 981,
	257, 243, 946, 945, 1028, 894, 893, 976, 1024, 1038,
	0, 0, 172, 472, 190, 1137, 312, 0, 0, 470,
	421, 337, 0, 0, 937, 0, 1111, 1124, 922, 980,
	869, 967, 1043, 903, 972, 1044, 0, 0, 0, 0,
	0, 0, 551, 0, 1446, 0, 0, 1447, 0, 0,
	171, 0, 1119, 1133, 1100, 0, 932, 977, 1056, 848,
	1116, 0, 853, 1088, 0, 1029, 890, 891, 262, 0,
	0, 0, 0, 0, 0, 0, 935, 952, 996, 919,
	0, 463, 983, 992, 1006, 912, 374, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 0,
	0, 0, 863, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1105, 0, 0, 0,
	868, 846, 888, 998, 847, 845, 338, 860, 1126, 1027,
	920, 300, 191, 1033, 918, 1103, 986, 864, 1015, 1049,
	906, 309, 862, 195, 859, 865, 904, 351, 995, 1001,
	177, 198, 311, 1012, 884, 897, 244, 0, 390, 973,
	462, 1083, 277, 959, 389, 313, 455, 987, 1035, 461,
	907, 437, 471, 476, 270, 940, 234, 418, 260, 253,
	889, 1005, 852, 283, 373, 248, 305, 923, 979, 885,
	240, 990, 966, 1017, 417, 452, 200, 332, 453, 475,
	166, 271, 409, 272, 436, 263, 235, 376, 214, 303,
	0, 0, 254, 298, 0, 0, 478, 469, 225, 273,
	384, 388, 365, 221, 444, 333, 343, 237, 239, 238,
	215, 410, 451, 228, 242, 1013, 1000, 1019, 880, 866,
	872, 867, 896, 1036, 292, 284, 1020, 1018, 898, 359,
	224, 950, 943, 936, 1122, 465, 1052, 256, 1002, 467,
	180, 404, 403, 910, 291, 1003, 181, 170, 383, 182,
	301, 204, 1023, 480, 220, 307, 445, 1082, 276, 350,
	975, 360, 197, 378, 327, 329, 326, 330, 281, 175,
	183, 999, 380, 406, 450, 222, 424, 173, 176, 185,
	396, 186, 187, 1042, 320, 265, 269, 285, 296, 974,
	387, 425, 468, 968, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 426, 441, 398, 279,
	319, 321, 428, 433, 429, 430, 427, 432, 431, 394,
	395, 208, 435, 460, 229, 405, 408, 479, 997, 216,
	210, 1031, 1014, 961, 925, 931, 854, 0, 209, 926,
	927, 928, 929, 930, 993, 887, 899, 879, 969, 878,
	280, 985, 458, 459, 245, 1089, 1046, 211, 861, 1045,
	347, 354, 346, 1048, 1047, 454, 1032, 962, 949, 947,
	855, 1030, 960, 948, 308, 268, 287, 371, 315, 372,
	288, 341, 340, 342, 317, 951, 423, 318, 0, 206,
	0, 422, 1040, 1058, 434, 226, 873, 1007, 449, 178,
	379, 227, 278, 266, 370, 345, 218, 290, 420, 306,
	314, 989, 1055, 358, 391, 233, 464, 419, 261, 1094,
	0, 1096, 1092, 1095, 1093, 1112, 1113, 1134, 1135, 1136,
	1123, 1090, 192, 193, 1131, 1132, 194, 942, 1034, 856,
	0, 1010, 188, 189, 174, 179, 982, 1053, 1102, 241,
	164, 1085, 1086, 1087, 165, 1106, 1107, 167, 168, 1129,
	1128, 1127, 1130, 169, 1139, 1138, 1140, 1091, 1098, 1101,
	1108, 1109, 1110, 1117, 1118, 1125, 1120, 1121, 0, 938,
	367, 207, 219, 448, 232, 252, 250, 267, 302, 328,
	335, 364, 407, 413, 414, 438, 439, 440, 442, 255,
	331, 259, 231, 385, 230, 316, 293, 366, 446, 447,
	375, 247, 1114, 199, 212, 310, 1054, 382, 275, 334,
	411, 336, 297, 246, 477, 339, 381, 481, 1008, 965,
	0, 915, 917, 916, 875, 877, 876, 874, 1057, 344,
	1026, 844, 851, 870, 881, 886, 892, 900, 901, 909,
	914, 924, 933, 934, 944, 957, 958, 964, 988, 991,
	1004, 1009, 1016, 1021, 1022, 466, 251, 941, 963, 994,
	213, 223, 236, 249, 264, 0, 274, 286, 289, 294,
	295, 299, 304, 322, 323, 324, 325, 348, 349, 352,
	353, 356, 357, 361, 362, 363, 368, 369, 377, 184,
	386, 397, 399, 400, 401, 402, 412, 415, 416, 456,
	457, 473, 474, 921, 196, 0, 0, 202, 0, 203,
	205, 908, 201, 1025, 1050, 970, 984, 895, 1037, 0,
	0, 443, 1104, 1041, 882, 905, 1051, 911, 913, 978,
	857, 953, 355, 902, 858, 0, 0, 849, 1099, 850,
	883, 258, 1097, 1011, 956, 1039, 939, 971, 981, 257,
	243, 946, 945, 1028, 894, 893, 976, 1024, 1038, 0,
	0, 172, 472, 190, 1137, 312, 0, 0, 470, 421,
	337, 0, 0, 937, 0, 1111, 1124, 922, 980, 869,
	967, 1043, 903, 972, 1044, 0, 0, 0, 0, 0,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1119, 1133, 1100, 0, 932, 977, 1056, 848, 1116,
	0, 853, 1088, 0, 1029, 890, 891, 262, 0, 0,
	0, 0, 0, 0, 0, 935, 952, 996, 919, 0,
	463, 983, 992, 1006, 912, 374, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 0,
	0, 863, 1084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1105, 0, 0, 0, 868,
	846, 888, 998, 847, 845, 338, 860, 1126, 1027, 920,
	300, 191, 1033, 918, 1103, 986, 864, 1015, 1049, 906,
	309, 862, 195, 859, 865, 904, 351, 995, 1001, 177,
	198, 311, 1012, 884, 897, 244, 0, 390, 973, 462,
	1083, 277, 959, 389, 313, 455, 987, 1035, 461, 907,
	437, 471, 476, 270, 940, 234, 418, 260, 253, 889,
	1005, 852, 283, 373, 248, 305, 923, 979, 885, 240,
	990, 966, 1017, 417, 452, 200, 332, 453, 475, 166,
	271, 409, 272, 436, 263, 235, 376, 214, 303, 0,
	0, 254, 298, 0, 0, 478, 469, 225, 273, 384,
	388, 365, 221, 444, 333, 343, 237, 239, 238, 215,
	410, 451, 228, 242, 1013, 1000, 1019, 880, 866, 872,
	867, 896, 1036, 292, 284, 1020, 1018, 898, 359, 224,
	950, 943, 936, 1122, 465, 1052, 256, 1002, 467, 180,
	404, 403, 910, 291, 1003, 181, 170, 383, 182, 301,
	204, 1023, 480, 220, 307, 445, 1082, 276, 350, 975,
	360, 197, 378, 327, 329, 326, 330, 281, 175, 183,
	999, 380, 406, 450, 222, 424, 173, 176, 185, 396,
	186, 187, 1042, 320, 265, 269, 285, 296, 974, 387,
	425, 468, 968, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 426, 441, 398, 279, 319,
	321, 428, 433, 429, 430, 427, 432, 431, 394, 395,
	208, 435, 460, 229, 405, 408, 479, 997, 216, 210,
	1031, 1014, 961, 925, 931, 854, 0, 209, 926, 927,
	928, 929, 930, 993, 887, 899, 879, 969, 878, 280,
	985, 458, 459, 245, 1089, 1046, 211, 861, 1045, 347,
	354, 346, 1048, 1047, 454, 1032, 962, 949, 947, 855,
	1030, 960, 948, 308, 268, 287, 371, 315, 372, 288,
	341, 340, 342, 317, 951, 423, 318, 0, 206, 0,
	422, 1040, 1058, 434, 226, 873, 1007, 449, 178, 379,
	227, 278, 266, 370, 345, 218, 290, 420, 306, 314,
	989, 1055, 358, 391, 233, 464, 419, 261, 1094, 0,
	1096, 1092, 1095, 1093, 1112, 1113, 1134, 1135, 1136, 1123,
	1090, 192, 193, 1131, 1132, 194, 942, 1034, 856, 0,
	1010, 188, 189, 174, 179, 982, 1053, 1102, 241, 164,
	1085, 1086, 1087, 165, 1106, 1107, 167, 168, 1129, 1128,
	1127, 1130, 169, 1139, 1138, 1140, 1091, 1098, 1101, 1108,
	1109, 1110, 1117, 1118, 1125, 1120, 1121, 0, 938, 367,
	207, 219, 448, 232, 252, 250, 267, 302, 328, 335,
	364, 407, 413, 414, 438, 439, 440, 442, 255, 331,
	259, 231, 385, 230, 316, 293, 366, 446, 447, 375,
	247, 1114, 199, 212, 310, 1054, 382, 275, 334, 411,
	336, 297, 246, 477, 339, 381, 481, 1008, 965, 0,
	915, 917, 916, 875, 877, 876, 874, 1057, 344, 1026,
	844, 851, 870, 881, 886, 892, 900, 901, 909, 914,
	924, 933, 934, 944, 957, 958, 964, 988, 991, 1004,
	1009, 1016, 1021, 1022, 466, 251, 941, 963, 994, 213,
	223, 236, 249, 264, 0, 274, 286, 289, 294, 295,
	299, 304, 322, 323, 324, 325, 348, 349, 352, 353,
	356, 357, 361, 362, 363, 368, 369, 377, 184, 386,
	397, 399, 400, 401, 402, 412, 415, 416, 456, 457,
	473, 474, 921, 196, 0, 0, 202, 0, 203, 205,
	908, 201, 1025, 1050, 970, 984, 895, 1037, 0, 0,
	443, 1104, 1041, 882, 905, 1051, 911, 913, 978, 857,
	953, 355, 902, 858, 0, 0, 849, 1099, 850, 883,
	258, 1097, 1011, 956, 1039, 939, 971, 981, 257, 243,
	946, 945, 1028, 894, 893, 976, 1024, 1038, 0, 0,
	172, 472, 190, 1137, 312, 0, 0, 470, 421, 337,
	0, 0, 937, 0, 1111, 1124, 922, 980, 869, 967,
	1043, 903, 972, 1044, 0, 0, 0, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1119, 1133, 1100, 0, 932, 977, 1056, 848, 1116, 0,
	853, 1088, 0, 1029, 890, 891, 262, 0, 0, 0,
	0, 0, 0, 0, 935, 952, 996, 919, 0, 463,
	983, 992, 1006, 912, 374, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	863, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1105, 0, 0, 0, 868, 846,
	888, 998, 847, 845, 338, 860, 1126, 1027, 920, 300,
	191, 1033, 918, 1103, 986, 864, 1015, 1049, 906, 309,
	862, 195, 859, 865, 904, 351, 995, 1001, 177, 198,
	311, 1012, 884, 897, 244, 0, 390, 973, 462, 1083,
	277, 959, 389, 313, 455, 987, 1035, 461, 907, 437,
	471, 476, 270, 940, 234, 418, 260, 253, 889, 1005,
	852, 283, 373, 248, 305, 923, 979, 885, 240, 990,
	966, 1017, 417, 452, 200, 332, 453, 475, 166, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 1013, 1000, 1019, 880, 866, 872, 867,
	896, 1036, 292, 284, 1020, 1018, 898, 359, 224, 950,
	943, 936, 1122, 465, 1052, 256, 1002, 467, 180, 404,
	403, 910, 291, 1003, 181, 170, 383, 182, 301, 204,
	1023, 480, 220, 307, 445, 1082, 276, 350, 975, 360,
	197, 378, 327, 329, 326, 330, 281, 175, 183, 999,
	380, 406, 450, 222, 424, 173, 176, 185, 396, 186,
	187, 1042, 320, 265, 269, 285, 296, 974, 387, 425,
	468, 968, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 997, 216, 210, 1031,
	1014, 961, 925, 931, 854, 0, 209, 926, 927, 928,
	929, 930, 993, 887, 899, 879, 969, 878, 280, 985,
	458, 459, 245, 1089, 1046, 211, 1077, 1045, 347, 354,
	346, 1048, 1047, 454, 1032, 962, 949, 947, 855, 1030,
	960, 948, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 1073, 951, 423, 318, 0, 206, 0, 422,
	1040, 1058, 434, 226, 873, 1007, 449, 178, 379, 227,
	278, 266, 370, 1078, 1076, 1067, 1068, 306, 314, 989,
	1055, 358, 391, 233, 464, 419, 261, 1094, 0, 1096,
	1092, 1095, 1093, 1112, 1113, 1134, 1135, 1136, 1123, 1090,
	192, 193, 1131, 1132, 194, 942, 1034, 856, 0, 1010,
	188, 189, 174, 179, 982, 1053, 1102, 241, 164, 1085,
	1086, 1087, 165, 1106, 1107, 167, 168, 1129, 1128, 1127,
	1130, 169, 1139, 1138, 1140, 1091, 1098, 1101, 1108, 1109,
	1110, 1117, 1118, 1125, 1120, 1121, 0, 938, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	1114, 199, 212, 310, 1054, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 1008, 965, 0, 915,
	917, 916, 875, 877, 876, 874, 1057, 344, 1026, 844,
	851, 870, 881, 886, 892, 900, 901, 909, 914, 924,
	933, 934, 944, 957, 958, 964, 988, 991, 1004, 1009,
	1016, 1021, 1022, 466, 251, 941, 963, 994, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 1074, 1075, 377, 184, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 921, 196, 0, 0, 202, 0, 203, 205, 908,
	201, 1025, 1050, 970, 984, 895, 1037, 0, 0, 443,
	1104, 1041, 882, 905, 1051, 911, 913, 978, 857, 953,
	355, 902, 858, 0, 0, 849, 1099, 850, 883, 258,
	1097, 1011, 956, 1039, 939, 971, 981, 257, 243, 946,
	945, 1028, 894, 893, 976, 1024, 1038, 0, 0, 172,
	472, 190, 1137, 312, 0, 0, 470, 421, 337, 0,
	0, 937, 0, 1111, 1124, 922, 980, 869, 967, 1043,
	903, 972, 1044, 0, 0, 0, 0, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1119,
	1133, 1100, 0, 932, 977, 1056, 848, 1116, 0, 853,
	1088, 0, 1029, 890, 891, 262, 0, 0, 0, 0,
	0, 0, 0, 935, 952, 996, 919, 0, 463, 983,
	992, 1006, 912, 374, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1115, 0, 0, 0, 863,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1105, 0, 0, 0, 868, 846, 888,
	998, 847, 845, 338, 860, 1126, 1027, 920, 300, 191,
	1033, 918, 1103, 986, 864, 1015, 1049, 906, 309, 862,
	195, 859, 865, 904, 351, 995, 1001, 177, 198, 311,
	1012, 884, 897, 244, 0, 390, 973, 462, 1083, 277,
	959, 389, 313, 455, 987, 1035, 461, 907, 437, 471,
	476, 270, 940, 234, 418, 260, 253, 889, 1005, 852,
	283, 373, 248, 305, 923, 979, 885, 240, 990, 966,
	1017, 417, 452, 200, 332, 453, 475, 166, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 1013, 1000, 1019, 880, 866, 872, 867, 896,
	1036, 292, 284, 1020, 1018, 898, 359, 224, 950, 943,
	936, 1122, 465, 1052, 256, 1002, 467, 180, 404, 403,
	910, 291, 1003, 181, 170, 383, 182, 301, 204, 1023,
	480, 220, 307, 445, 1082, 276, 350, 975, 360, 197,
	378, 327, 329, 326, 330, 281, 175, 183, 999, 380,
	406, 450, 222, 424, 173, 176, 185, 396, 186, 187,
	1042, 320, 265, 269, 285, 296, 974, 387, 425, 468,
	968, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	1611, 229, 405, 408, 479, 997, 216, 210, 1031, 1014,
	961, 925, 931, 854, 0, 209, 926, 927, 928, 929,
	930, 993, 887, 899, 879, 969, 878, 280, 985, 458,
	459, 245, 1089, 1046, 211, 861, 1045, 347, 354, 346,
	1048, 1047, 454, 1032, 962, 949, 947, 855, 1030, 960,
	948, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 951, 423, 318, 0, 206, 0, 422, 1040,
	1058, 434, 226, 873, 1007, 449, 178, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 989, 1055,
	358, 391, 233, 464, 419, 261, 1094, 0, 1096, 1092,
	1095, 1093, 1112, 1113, 1134, 1135, 1136, 1123, 1090, 192,
	193, 1131, 1132, 194, 942, 1034, 856, 0, 1010, 188,
	189, 174, 179, 982, 1053, 1102, 241, 164, 1085, 1086,
	1087, 165, 1106, 1107, 167, 168, 1129, 1128, 1127, 1130,
	169, 1139, 1138, 1140, 1091, 1098, 1101, 1108, 1109, 1110,
	1117, 1118, 1125, 1120, 1121, 0, 938, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 1114,
	199, 212, 310, 1054, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 1008, 965, 0, 915, 917,
	916, 875, 877, 876, 874, 1057, 344, 1026, 844, 851,
	870, 881, 886, 892, 900, 901, 909, 914, 924, 933,
	934, 944, 957, 958, 964, 988, 991, 1004, 1009, 1016,
	1021, 1022, 466, 251, 941, 963, 994, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 184, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	921, 196, 0, 0, 202, 0, 203, 205, 908, 201,
	1025, 1050, 970, 984, 895, 1037, 0, 0, 443, 1104,
	1041, 882, 905, 1051, 911, 913, 978, 857, 953, 355,
	902, 858, 0, 0, 849, 1099, 850, 883, 258, 1097,
	1011, 956, 1039, 939, 971, 981, 257, 243, 946, 945,
	1028, 894, 893, 976, 1024, 1038, 0, 0, 172, 472,
	190, 1137, 312, 0, 0, 470, 421, 337, 0, 0,
	937, 0, 1111, 1124, 922, 980, 869, 967, 1043, 903,
	972, 1044, 0, 0, 0, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1119, 1133,
	1100, 0, 932, 977, 1056, 848, 1116, 0, 853, 1088,
	0, 1029, 890, 891, 262, 0, 0, 0, 0, 0,
	0, 0, 935, 952, 996, 919, 0, 463, 983, 992,
	1006, 912, 374, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 0, 0, 863, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1105, 0, 0, 0, 868, 846, 888, 998,
	847, 845, 338, 860, 1126, 1027, 920, 300, 191, 1033,
	918, 1103, 986, 864, 1015, 1049, 906, 309, 862, 195,
	859, 865, 904, 351, 995, 1001, 177, 198, 311, 1012,
	884, 897, 244, 0, 390, 973, 462, 1083, 277, 959,
	389, 313, 455, 987, 1035, 461, 907, 437, 471, 476,
	270, 940, 234, 418, 260, 253, 889, 1005, 852, 283,
	373, 248, 305, 923, 979, 885, 240, 990, 966, 1017,
	417, 452, 200, 332, 453, 475, 166, 271, 409, 272,
	436, 263, 235, 376, 214, 303, 0, 0, 254, 298,
	0, 0, 478, 469, 225, 273, 384, 388, 365, 221,
	444, 333, 343, 237, 239, 238, 215, 410, 451, 228,
	242, 1013, 1000, 1019, 880, 866, 872, 867, 896, 1036,
	292, 284, 1020, 1018, 898, 359, 224, 950, 943, 936,
	1122, 465, 1052, 256, 1002, 467, 180, 404, 403, 910,
	291, 1003, 181, 170, 383, 182, 301, 204, 1023, 480,
	220, 307, 445, 1082, 276, 350, 975, 360, 197, 378,
	327, 329, 326, 330, 281, 175, 183, 999, 380, 406,
	450, 222, 424, 173, 176, 185, 396, 186, 187, 1042,
	320, 265, 269, 285, 296, 974, 387, 425, 468, 968,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 426, 441, 398, 279, 319, 321, 428, 433,
	429, 430, 427, 432, 431, 394, 395, 208, 435, 1064,
	229, 405, 408, 479, 997, 216, 210, 1031, 1014, 961,
	925, 931, 854, 0, 209, 926, 927, 928, 929, 930,
	993, 887, 899, 879, 969, 878, 280, 985, 458, 459,
	245, 1089, 1046, 211, 1077, 1045, 347, 354, 346, 1048,
	1047, 454, 1032, 962, 949, 947, 855, 1030, 960, 948,
	308, 268, 287, 371, 315, 372, 288, 341, 340, 342,
	1073, 951, 423, 318, 0, 206, 0, 422, 1040, 1058,
	434, 226, 873, 1007, 449, 178, 379, 227, 278, 266,
	370, 1078, 1076, 1067, 1068, 306, 314, 989, 1055, 358,
	391, 233, 464, 419, 261, 1094, 0, 1096, 1092, 1095,
	1093, 1112, 1113, 1134, 1135, 1136, 1123, 1090, 192, 193,
	1131, 1132, 194, 942, 1034, 856, 0, 1010, 188, 189,
	174, 179, 982, 1053, 1102, 241, 164, 1085, 1086, 1087,
	165, 1106, 1107, 167, 168, 1129, 1128, 1127, 1130, 169,
	1139, 1138, 1140, 1091, 1098, 1101, 1108, 1109, 1110, 1117,
	1118, 1125, 1120, 1121, 0, 938, 367, 207, 219, 448,
	232, 252, 250, 267, 302, 328, 335, 364, 407, 413,
	414, 438, 439, 440, 442, 255, 331, 259, 231, 385,
	230, 316, 293, 366, 446, 447, 375, 247, 1114, 199,
	212, 310, 1054, 382, 275, 334, 411, 336, 297, 246,
	477, 339, 381, 481, 1008, 965, 0, 915, 917, 916,
	875, 877, 876, 874, 1057, 344, 1026, 844, 851, 870,
	881, 886, 892, 900, 901, 909, 914, 924, 933, 934,
	944, 957, 958, 964, 988, 991, 1004, 1009, 1016, 1021,
	1022, 466, 251, 941, 963, 994, 213, 223, 236, 249,
	264, 0, 274, 286, 289, 294, 295, 299, 304, 322,
	323, 324, 325, 348, 349, 352, 353, 356, 357, 361,
	362, 363, 1074, 1075, 377, 184, 386, 397, 399, 400,
	401, 402, 412, 415, 416, 456, 457, 473, 474, 921,
	196, 0, 0, 202, 0, 203, 205, 908, 201, 1025,
	1050, 970, 984, 1821, 2000, 0, 1962, 443, 1855, 2004,
	1804, 1834, 2022, 1840, 1843, 1924, 1770, 1893, 355, 1831,
	1771, 1754, 1809, 1758, 1822, 1759, 1806, 258, 1802, 1965,
	1896, 2002, 1875, 1917, 1927, 257, 243, 1885, 1884, 1990,
	1820, 1819, 1922, 1979, 2001, 1874, 0, 0, 472, 0,
	2011, 312, 1976, 0, 470, 421, 337, 0, 0, 1870,
	1985, 1891, 1954, 1853, 1926, 1786, 1909, 2006, 1832, 1918,
	2007, 0, 0, 0, 0, 0, 3109, 3114, 0, 3117,
	3119, 3118, 0, 0, 0, 3111, 0, 1914, 1998, 1825,
	0, 1865, 1923, 2027, 1757, 1910, 0, 1762, 1773, 2021,
	1991, 1816, 1817, 262, 0, 0, 0, 0, 0, 0,
	0, 1868, 1892, 1944, 1850, 0, 463, 1929, 1939, 1957,
	1842, 374, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1907, 0, 0, 0, 1778, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 1785, 1755, 1813, 1946, 1756,
	1753, 338, 1774, 1959, 1989, 1851, 300, 0, 1995, 1849,
	1848, 1933, 1779, 1969, 2019, 1835, 309, 1777, 195, 1772,
	1780, 1833, 351, 1943, 1951, 0, 198, 311, 1966, 1807,
	1824, 244, 0, 390, 1919, 462, 0, 277, 1900, 389,
	313, 455, 1934, 1997, 461, 1836, 437, 471, 476, 270,
	1876, 234, 418, 260, 253, 1815, 1956, 1761, 283, 373,
	248, 305, 1854, 1925, 1808, 240, 1937, 1908, 1971, 417,
	452, 200, 332, 453, 475, 3112, 271, 409, 272, 436,
	263, 235, 376, 214, 303, 0, 0, 254, 298, 0,
	0, 478, 469, 225, 273, 384, 388, 365, 221, 444,
	333, 343, 237, 239, 238, 215, 410, 451, 228, 242,
	1967, 1950, 1973, 1801, 1781, 1792, 1782, 1823, 1999, 292,
	284, 1974, 1972, 1826, 359, 224, 1889, 1882, 1869, 1947,
	465, 2023, 256, 1952, 467, 0, 404, 403, 1839, 291,
	1953, 0, 0, 383, 3113, 301, 204, 1978, 480, 220,
	307, 445, 0, 276, 350, 1921, 360, 197, 378, 327,
	329, 326, 330, 281, 0, 0, 1949, 380, 406, 450,
	222, 424, 0, 0, 0, 396, 0, 0, 2005, 320,
	265, 269, 285, 296, 1920, 387, 425, 468, 1911, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 426, 441, 398, 279, 319, 321, 428, 433, 429,
	430, 427, 432, 431, 394, 395, 208, 435, 460, 229,
	405, 408, 479, 1945, 216, 210, 1993, 1968, 1902, 1857,
	1863, 1763, 0, 209, 1858, 1859, 1860, 1861, 1862, 1941,
	1812, 1828, 1800, 1915, 1799, 280, 1932, 458, 459, 245,
	1775, 2013, 211, 1776, 2012, 347, 354, 346, 2016, 2014,
	454, 1994, 1903, 1888, 1886, 1768, 1992, 1901, 1887, 308,
	268, 287, 371, 315, 372, 288, 341, 340, 342, 317,
	1890, 423, 318, 0, 206, 0, 422, 2003, 2029, 434,
	226, 1794, 1960, 449, 0, 379, 227, 278, 266, 370,
	345, 218, 290, 420, 306, 314, 1936, 2026, 358, 391,
	233, 464, 419, 261, 1790, 0, 1793, 1788, 1791, 1789,
	1894, 1895, 2008, 2009, 2010, 1948, 1783, 0, 0, 1986,
	1987, 0, 1881, 1996, 1769, 0, 1964, 0, 0, 0,
	0, 1928, 2024, 1841, 241, 0, 1765, 1766, 1767, 0,
	1871, 1872, 0, 0, 1982, 1981, 1980, 1983, 0, 2017,
	2015, 2018, 1784, 1805, 1827, 1877, 1878, 1880, 1912, 1913,
	1958, 1931, 1940, 1814, 1873, 367, 207, 219, 448, 232,
	252, 250, 267, 302, 328, 335, 364, 407, 413, 414,
	438, 439, 440, 442, 255, 331, 259, 231, 385, 230,
	316, 293, 366, 446, 447, 375, 247, 1899, 199, 212,
	310, 2025, 382, 275, 334, 411, 336, 297, 246, 477,
	339, 381, 481, 1961, 1906, 0, 1845, 1847, 1846, 1796,
	1798, 1797, 1795, 2028, 344, 1988, 1752, 1760, 1787, 1803,
	1810, 1818, 1829, 1830, 1838, 1844, 1856, 1866, 1867, 1883,
	1897, 1898, 1905, 1935, 1938, 1955, 1963, 1970, 1975, 1977,
	466, 251, 1879, 1904, 1942, 213, 223, 236, 249, 264,
	0, 274, 286, 289, 294, 295, 299, 304, 322, 323,
	324, 325, 348, 349, 352, 353, 356, 357, 361, 362,
	363, 368, 369, 377, 0, 386, 397, 399, 400, 401,
	402, 412, 415, 416, 456, 457, 473, 474, 1852, 196,
	0, 0, 202, 0, 203, 205, 1837, 201, 1984, 2020,
	1916, 1930, 1821, 2000, 0, 1962, 443, 1855, 2004, 1804,
	1834, 2022, 1840, 1843, 1924, 1770, 1893, 355, 1831, 1771,
	1754, 1809, 1758, 1822, 1759, 1806, 258, 1802, 1965, 1896,
	2002, 1875, 1917, 1927, 257, 243, 1885, 1884, 1990, 1820,
	1819, 1922, 1979, 2001, 1874, 0, 0, 472, 0, 2011,
	312, 1976, 0, 470, 421, 337, 0, 0, 1870, 1985,
	1891, 1954, 1853, 1926, 1786, 1909, 2006, 1832, 1918, 2007,
	0, 0, 0, 0, 0, 3871, 3114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1914, 1998, 1825, 0,
	1865, 1923, 2027, 1757, 1910, 0, 1762, 1773, 2021, 1991,
	1816, 1817, 262, 0, 0, 0, 0, 0, 0, 0,
	1868, 1892, 1944, 1850, 0, 463, 1929, 1939, 1957, 1842,
	374, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 1907, 0, 0, 0, 1778, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 1785, 1755, 1813, 1946, 1756, 1753,
	338, 1774, 1959, 1989, 1851, 300, 0, 1995, 1849, 1848,
	1933, 1779, 1969, 2019, 1835, 309, 1777, 195, 1772, 1780,
	1833, 351, 1943, 1951, 0, 198, 311, 1966, 1807, 1824,
	244, 0, 390, 1919, 462, 0, 277, 1900, 389, 313,
	455, 1934, 1997, 461, 1836, 437, 471, 476, 270, 1876,
	234, 418, 260, 253, 1815, 1956, 1761, 283, 373, 248,
	305, 1854, 1925, 1808, 240, 1937, 1908, 1971, 417, 452,
	200, 332, 453, 475, 0, 271, 409, 272, 436, 263,
	235, 376, 214, 303, 0, 0, 254, 298, 0, 0,
	478, 469, 225, 273, 384, 388, 365, 221, 444, 333,
	343, 237, 239, 238, 215, 410, 451, 228, 242, 1967,
	1950, 1973, 1801, 1781, 1792, 1782, 1823, 1999, 292, 284,
	1974, 1972, 1826, 359, 224, 1889, 1882, 1869, 1947, 465,
	2023, 256, 1952, 467, 0, 404, 403, 1839, 291, 1953,
	0, 0, 383, 0, 301, 204, 1978, 480, 220, 307,
	445, 0, 276, 350, 1921, 360, 197, 378, 327, 329,
	326, 330, 281, 0, 0, 1949, 380, 406, 450, 222,
	424, 0, 0, 0, 396, 0, 0, 2005, 320, 265,
	269, 285, 296, 1920, 387, 425, 468, 1911, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	426, 441, 398, 279, 319, 321, 428, 433, 429, 430,
	427, 432, 431, 394, 395, 208, 435, 460, 229, 405,
	408, 479, 1945, 216, 210, 1993, 1968, 1902, 1857, 1863,
	1763, 0, 209, 1858, 1859, 1860, 1861, 1862, 1941, 1812,
	1828, 1800, 1915, 1799, 280, 1932, 458, 459, 245, 1775,
	2013, 211, 1776, 2012, 347, 354, 346, 2016, 2014, 454,
	1994, 1903, 1888, 1886, 1768, 1992, 1901, 1887, 308, 268,
	287, 371, 315, 372, 288, 341, 340, 342, 317, 1890,
	423, 318, 0, 206, 0, 422, 2003, 2029, 434, 226,
	1794, 1960, 449, 0, 379, 227, 278, 266, 370, 345,
	218, 290, 420, 306, 314, 1936, 2026, 358, 391, 233,
	464, 419, 261, 1790, 0, 1793, 1788, 1791, 1789, 1894,
	1895, 2008, 2009, 2010, 1948, 1783, 0, 0, 1986, 1987,
	0, 1881, 1996, 1769, 0, 1964, 0, 0, 0, 0,
	1928, 2024, 1841, 241, 0, 1765, 1766, 1767, 0, 1871,
	1872, 0, 0, 1982, 1981, 1980, 1983, 0, 2017, 2015,
	2018, 1784, 1805, 1827, 1877, 1878, 1880, 1912, 1913, 1958,
	1931, 1940, 1814, 1873, 367, 207, 219, 448, 232, 252,
	250, 267, 302, 328, 335, 364, 407, 413, 414, 438,
	439, 440, 442, 255, 331, 259, 231, 385, 230, 316,
	293, 366, 446, 447, 375, 247, 1899, 199, 212, 310,
	2025, 382, 275, 334, 411, 336, 297, 246, 477, 339,
	381, 481, 1961, 1906, 0, 1845, 1847, 1846, 1796, 1798,
	1797, 1795, 2028, 344, 1988, 1752, 1760, 1787, 1803, 1810,
	1818, 1829, 1830, 1838, 1844, 1856, 1866, 1867, 1883, 1897,
	1898, 1905, 1935, 1938, 1955, 1963, 1970, 1975, 1977, 466,
	251, 1879, 1904, 1942, 213, 223, 236, 249, 264, 0,
	274, 286, 289, 294, 295, 299, 304, 322, 323, 324,
	325, 348, 349, 352, 353, 356, 357, 361, 362, 363,
	368, 369, 377, 0, 386, 397, 399, 400, 401, 402,
	412, 415, 416, 456, 457, 473, 474, 1852, 196, 0,
	0, 202, 0, 203, 205, 1837, 201, 1984, 2020, 1916,
	1930, 1821, 2000, 0, 1962, 443, 1855, 2004, 1804, 1834,
	2022, 1840, 1843, 1924, 1770, 1893, 355, 1831, 1771, 1754,
	1809, 1758, 1822, 1759, 1806, 258, 1802, 1965, 1896, 2002,
	1875, 1917, 1927, 257, 243, 1885, 1884, 1990, 1820, 1819,
	1922, 1979, 2001, 1874, 0, 0, 472, 0, 2011, 312,
	1976, 0, 470, 421, 337, 0, 0, 1870, 1985, 1891,
	1954, 1853, 1926, 1786, 1909, 2006, 1832, 1918, 2007, 0,
	0, 0, 0, 0, 0, 1156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1914, 1998, 1825, 0, 1865,
	1923, 2027, 1757, 1910, 0, 1762, 1773, 2021, 1991, 1816,
	1817, 262, 0, 0, 0, 0, 0, 0, 0, 1868,
	1892, 1944, 1850, 0, 463, 1929, 1939, 1957, 1842, 374,
	282, 0, 0, 0, 0, 0, 0, 3817, 0, 1811,
	0, 1907, 0, 0, 0, 1778, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 1785, 1755, 1813, 1946, 1756, 1753, 338,
	1774, 1959, 1989, 1851, 300, 0, 1995, 1849, 1848, 1933,
	1779, 1969, 2019, 1835, 309, 1777, 195, 1772, 1780, 1833,
	351, 1943, 1951, 0, 198, 311, 1966, 1807, 1824, 244,
	0, 390, 1919, 462, 0, 277, 1900, 389, 313, 455,
	1934, 1997, 461, 1836, 437, 471, 476, 270, 1876, 234,
	418, 260, 253, 1815, 1956, 1761, 283, 373, 248, 305,
	1854, 1925, 1808, 240, 1937, 1908, 1971, 417, 452, 200,
	332, 453, 475, 0, 271, 409, 272, 436, 263, 235,
	376, 214, 303, 0, 0, 254, 298, 0, 0, 478,
	469, 225, 273, 384, 388, 365, 221, 444, 333, 343,
	237, 239, 238, 215, 410, 451, 228, 242, 1967, 1950,
	1973, 1801, 1781, 1792, 1782, 1823, 1999, 292, 284, 1974,
	1972, 1826, 359, 224, 1889, 1882, 1869, 1947, 465, 2023,
	256, 1952, 467, 0, 404, 403, 1839, 291, 1953, 0,
	0, 383, 0, 301, 204, 1978, 480, 220, 307, 445,
	0, 276, 350, 1921, 360, 197, 378, 327, 329, 326,
	330, 281, 0, 0, 1949, 380, 406, 450, 222, 424,
	0, 0, 0, 396, 0, 0, 2005, 320, 265, 269,
	285, 296, 1920, 387, 425, 468, 1911, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 426,
	441, 398, 279, 319, 321, 428, 433, 429, 430, 427,
	432, 431, 394, 395, 208, 435, 460, 229, 405, 408,
	479, 1945, 216, 210, 1993, 1968, 1902, 1857, 1863, 1763,
	0, 209, 1858, 1859, 1860, 1861, 1862, 1941, 1812, 1828,
	1800, 1915, 1799, 280, 1932, 458, 459, 245, 1775, 2013,
	211, 1776, 2012, 347, 354, 346, 2016, 2014, 454, 1994,
	1903, 1888, 1886, 1768, 1992, 1901, 1887, 308, 268, 287,
	371, 315, 372, 288, 341, 340, 342, 317, 1890, 423,
	318, 0, 206, 0, 422, 2003, 2029, 434, 226, 1794,
	1960, 449, 0, 379, 227, 278, 266, 370, 345, 218,
	290, 420, 306, 314, 1936, 2026, 358, 391, 233, 464,
	419, 261, 1790, 0, 1793, 1788, 1791, 1789, 1894, 1895,
	2008, 2009, 2010, 1948, 1783, 0, 0, 1986, 1987, 0,
	1881, 1996, 1769, 0, 1964, 0, 0, 0, 0, 1928,
	2024, 1841, 241, 0, 1765, 1766, 1767, 0, 1871, 1872,
	0, 0, 1982, 1981, 1980, 1983, 0, 2017, 2015, 2018,
	1784, 1805, 1827, 1877, 1878, 1880, 1912, 1913, 1958, 1931,
	1940, 1814, 1873, 367, 207, 219, 448, 232, 252, 250,
	267, 302, 328, 335, 364, 407, 413, 414, 438, 439,
	440, 442, 255, 331, 259, 231, 385, 230, 316, 293,
	366, 446, 447, 375, 247, 1899, 199, 212, 310, 2025,
	382, 275, 334, 411, 336, 297, 246, 477, 339, 381,
	481, 1961, 1906, 0, 1845, 1847, 1846, 1796, 1798, 1797,
	1795, 2028, 344, 1988, 1752, 1760, 1787, 1803, 1810, 1818,
	1829, 1830, 1838, 1844, 1856, 1866, 1867, 1883, 1897, 1898,
	1905, 1935, 1938, 1955, 1963, 1970, 1975, 1977, 466, 251,
	1879, 1904, 1942, 213, 223, 236, 249, 264, 0, 274,
	286, 289, 294, 295, 299, 304, 322, 323, 324, 325,
	348, 349, 352, 353, 356, 357, 361, 362, 363, 368,
	369, 377, 0, 386, 397, 399, 400, 401, 402, 412,
	415, 416, 456, 457, 473, 474, 1852, 196, 0, 0,
	202, 0, 203, 205, 1837, 201, 1984, 2020, 1916, 1930,
	1821, 2000, 0, 1962, 443, 1855, 2004, 1804, 1834, 2022,
	1840, 1843, 1924, 1770, 1893, 355, 1831, 1771, 1754, 1809,
	1758, 1822, 1759, 1806, 258, 1802, 1965, 1896, 2002, 1875,
	1917, 1927, 257, 243, 1885, 1884, 1990, 1820, 1819, 1922,
	1979, 2001, 1874, 0, 0, 472, 0, 2011, 312, 1976,
	0, 470, 421, 337, 0, 0, 1870, 1985, 1891, 1954,
	1853, 1926, 1786, 1909, 2006, 1832, 1918, 2007, 0, 0,
	0, 0, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1914, 1998, 1825, 0, 1865, 1923,
	2027, 1757, 1910, 0, 1762, 1773, 2021, 1991, 1816, 1817,
	262, 0, 0, 0, 0, 0, 0, 0, 1868, 1892,
	1944, 1850, 0, 463, 1929, 1939, 1957, 1842, 374, 282,
	0, 0, 0, 0, 0, 0, 3161, 0, 1811, 0,
	1907, 0, 0, 0, 1778, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 1785, 1755, 1813, 1946, 1756, 1753, 338, 1774,
	1959, 1989, 1851, 300, 0, 1995, 1849, 1848, 1933, 1779,
	1969, 2019, 1835, 309, 1777, 195, 1772, 1780, 1833, 351,
	1943, 1951, 0, 198, 311, 1966, 1807, 1824, 244, 0,
	390, 1919, 462, 0, 277, 1900, 389, 313, 455, 1934,
	1997, 461, 1836, 437, 471, 476, 270, 1876, 234, 418,
	260, 253, 1815, 1956, 1761, 283, 373, 248, 305, 1854,
	1925, 1808, 240, 1937, 1908, 1971, 417, 452, 200, 332,
	453, 475, 0, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 1967, 1950, 1973,
	1801, 1781, 1792, 1782, 1823, 1999, 292, 284, 1974, 1972,
	1826, 359, 224, 1889, 1882, 1869, 1947, 465, 2023, 256,
	1952, 467, 0, 404, 403, 1839, 291, 1953, 0, 0,
	383, 0, 301, 204, 1978, 480, 220, 307, 445, 0,
	276, 350, 1921, 360, 197, 378, 327, 329, 326, 330,
	281, 0, 0, 1949, 380, 406, 450, 222, 424, 0,
	0, 0, 396, 0, 0, 2005, 320, 265, 269, 285,
	296, 1920, 387, 425, 468, 1911, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	1945, 216, 210, 1993, 1968, 1902, 1857, 1863, 1763, 0,
	209, 1858, 1859, 1860, 1861, 1862, 1941, 1812, 1828, 1800,
	1915, 1799, 280, 1932, 458, 459, 245, 1775, 2013, 211,
	1776, 2012, 347, 354, 346, 2016, 2014, 454, 1994, 1903,
	1888, 1886, 1768, 1992, 1901, 1887, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 1890, 423, 318,
	0, 206, 0, 422, 2003, 2029, 434, 226, 1794, 1960,
	449, 0, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 1936, 2026, 358, 391, 233, 464, 419,
	261, 1790, 0, 1793, 1788, 1791, 1789, 1894, 1895, 2008,
	2009, 2010, 1948, 1783, 0, 0, 1986, 1987, 0, 1881,
	1996, 1769, 0, 1964, 0, 0, 0, 0, 1928, 2024,
	1841, 241, 0, 1765, 1766, 1767, 0, 1871, 1872, 0,
	0, 1982, 1981, 1980, 1983, 0, 2017, 2015, 2018, 1784,
	1805, 1827, 1877, 1878, 1880, 1912, 1913, 1958, 1931, 1940,
	1814, 1873, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 1899, 199, 212, 310, 2025, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	1961, 1906, 0, 1845, 1847, 1846, 1796, 1798, 1797, 1795,
	2028, 344, 1988, 1752, 1760, 1787, 1803, 1810, 1818, 1829,
	1830, 1838, 1844, 1856, 1866, 1867, 1883, 1897, 1898, 1905,
	1935, 1938, 1955, 1963, 1970, 1975, 1977, 466, 251, 1879,
	1904, 1942, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 0, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 1852, 196, 0, 0, 202,
	0, 203, 205, 1837, 201, 1984, 2020, 1916, 1930, 1821,
	2000, 0, 1962, 443, 1855, 2004, 1804, 1834, 2022, 1840,
	1843, 1924, 1770, 1893, 355, 1831, 1771, 1754, 1809, 1758,
	1822, 1759, 1806, 258, 1802, 1965, 1896, 2002, 1875, 1917,
	1927, 257, 243, 1885, 1884, 1990, 1820, 1819, 1922, 1979,
	2001, 1874, 0, 0, 472, 0, 2011, 312, 1976, 0,
	470, 421, 337, 0, 0, 1870, 1985, 1891, 1954, 1853,
	1926, 1786, 1909, 2006, 1832, 1918, 2007, 0, 0, 0,
	0, 0, 0, 1156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1914, 1998, 1825, 0, 1865, 1923, 2027,
	1757, 1910, 0, 1762, 1773, 2021, 1991, 1816, 1817, 262,
	0, 0, 0, 0, 0, 0, 0, 1868, 1892, 1944,
	1850, 0, 463, 1929, 1939, 1957, 1842, 374, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 1907,
	0, 0, 0, 1778, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 1785, 1755, 1813, 1946, 1756, 1753, 338, 1774, 1959,
	1989, 1851, 300, 0, 1995, 1849, 1848, 1933, 1779, 1969,
	2019, 1835, 309, 1777, 195, 1772, 1780, 1833, 351, 1943,
	1951, 0, 198, 311, 1966, 1807, 1824, 244, 0, 390,
	1919, 462, 0, 277, 1900, 389, 313, 455, 1934, 1997,
	461, 1836, 437, 471, 476, 270, 1876, 234, 418, 260,
	253, 1815, 1956, 1761, 283, 373, 248, 305, 1854, 1925,
	1808, 240, 1937, 1908, 1971, 417, 452, 200, 332, 453,
	475, 0, 271, 409, 272, 436, 263, 235, 376, 214,
	303, 0, 0, 254, 298, 0, 0, 478, 469, 225,
	273, 384, 388, 365, 221, 444, 333, 343, 237, 239,
	238, 215, 410, 451, 228, 242, 1967, 1950, 1973, 1801,
	1781, 1792, 1782, 1823, 1999, 292, 284, 1974, 1972, 1826,
	359, 224, 1889, 1882, 1869, 1947, 465, 2023, 256, 1952,
	467, 0, 404, 403, 1839, 291, 1953, 0, 0, 383,
	0, 301, 204, 1978, 480, 220, 307, 445, 0, 276,
	350, 1921, 360, 197, 378, 327, 329, 326, 330, 281,
	0, 0, 1949, 380, 406, 450, 222, 424, 0, 0,
	0, 396, 0, 0, 2005, 320, 265, 269, 285, 296,
	1920, 387, 425, 468, 1911, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 426, 441, 398,
	279, 319, 321, 428, 433, 429, 430, 427, 432, 431,
	394, 395, 208, 435, 460, 229, 405, 408, 479, 1945,
	216, 210, 1993, 1968, 1902, 1857, 1863, 1763, 0, 209,
	1858, 1859, 1860, 1861, 1862, 1941, 1812, 1828, 1800, 1915,
	1799, 280, 1932, 458, 459, 245, 1775, 2013, 211, 1776,
	2012, 347, 354, 346, 2016, 2014, 454, 1994, 1903, 1888,
	1886, 1768, 1992, 1901, 1887, 308, 268, 287, 371, 315,
	372, 288, 341, 340, 342, 317, 1890, 423, 318, 0,
	206, 0, 422, 2003, 2029, 434, 226, 1794, 1960, 449,
	2306, 379, 227, 278, 266, 370, 345, 218, 290, 420,
	306, 314, 1936, 2026, 358, 391, 233, 464, 419, 261,
	1790, 0, 1793, 1788, 1791, 1789, 1894, 1895, 2008, 2009,
	2010, 1948, 1783, 0, 0, 1986, 1987, 0, 1881, 1996,
	1769, 0, 1964, 0, 0, 0, 0, 1928, 2024, 1841,
	241, 0, 1765, 1766, 1767, 0, 1871, 1872, 0, 0,
	1982, 1981, 1980, 1983, 0, 2017, 2015, 2018, 1784, 1805,
	1827, 1877, 1878, 1880, 1912, 1913, 1958, 1931, 1940, 1814,
	1873, 367, 207, 219, 448, 232, 252, 250, 267, 302,
	328, 335, 364, 407, 413, 414, 438, 439, 440, 442,
	255, 331, 259, 231, 385, 230, 316, 293, 366, 446,
	447, 375, 247, 1899, 199, 212, 310, 2025, 382, 275,
	334, 411, 336, 297, 246, 477, 339, 381, 481, 1961,
	1906, 0, 1845, 1847, 1846, 1796, 1798, 1797, 1795, 2028,
	344, 1988, 1752, 1760, 1787, 1803, 1810, 1818, 1829, 1830,
	1838, 1844, 1856, 1866, 1867, 1883, 1897, 1898, 1905, 1935,
	1938, 1955, 1963, 1970, 1975, 1977, 466, 251, 1879, 1904,
	1942, 213, 223, 236, 249, 264, 0, 274, 286, 289,
	294, 295, 299, 304, 322, 323, 324, 325, 348, 349,
	352, 353, 356, 357, 361, 362, 363, 368, 369, 377,
	0, 386, 397, 399, 400, 401, 402, 412, 415, 416,
	456, 457, 473, 474, 1852, 196, 0, 0, 202, 0,
	203, 205, 1837, 201, 1984, 2020, 1916, 1930, 1821, 2000,
	0, 1962, 443, 1855, 2004, 1804, 1834, 2022, 1840, 1843,
	1924, 1770, 1893, 355, 1831, 1771, 1754, 1809, 1758, 1822,
	1759, 1806, 258, 1802, 1965, 1896, 2002, 1875, 1917, 1927,
	257, 243, 1885, 1884, 1990, 1820, 1819, 1922, 1979, 2001,
	1874, 0, 0, 472, 0, 2011, 312, 1976, 0, 470,
	421, 337, 0, 0, 1870, 1985, 1891, 1954, 1853, 1926,
	1786, 1909, 2006, 1832, 1918, 2007, 0, 0, 0, 0,
	0, 0, 1156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1914, 1998, 1825, 0, 1865, 1923, 2027, 1757,
	1910, 0, 1762, 1773, 2021, 1991, 1816, 1817, 262, 0,
	0, 0, 0, 0, 0, 0, 1868, 1892, 1944, 1850,
	0, 463, 1929, 1939, 1957, 1842, 374, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 1907, 0,
	0, 0, 1778, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	1785, 1755, 1813, 1946, 1756, 1753, 338, 1774, 1959, 1989,
	1851, 300, 0, 1995, 1849, 1848, 1933, 1779, 1969, 2019,
	1835, 309, 1777, 195, 1772, 1780, 1833, 351, 1943, 1951,
	0, 198, 311, 1966, 1807, 1824, 244, 0, 390, 1919,
	462, 0, 277, 1900, 389, 313, 455, 1934, 1997, 461,
	1836, 437, 471, 476, 270, 1876, 234, 418, 260, 253,
	1815, 1956, 1761, 283, 373, 248, 305, 1854, 1925, 1808,
	240, 1937, 1908, 1971, 417, 452, 200, 332, 453, 475,
	0, 271, 409, 272, 436, 263, 235, 376, 214, 303,
	0, 0, 254, 298, 0, 0, 478, 469, 225, 273,
	384, 388, 365, 221, 444, 333, 343, 237, 239, 238,
	215, 410, 451, 228, 242, 1967, 1950, 1973, 1801, 1781,
	1792, 1782, 1823, 1999, 292, 284, 1974, 1972, 1826, 359,
	224, 1889, 1882, 1869, 1947, 465, 2023, 256, 1952, 467,
	0, 404, 403, 1839, 291, 1953, 0, 0, 383, 0,
	301, 204, 1978, 480, 220, 307, 445, 0, 276, 350,
	1921, 360, 197, 378, 327, 329, 326, 330, 281, 0,
	0, 1949, 380, 406, 450, 222, 424, 0, 0, 0,
	396, 0, 0, 2005, 320, 265, 269, 285, 296, 1920,
	387, 425, 468, 1911, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 426, 441, 398, 279,
	319, 321, 428, 433, 429, 430, 427, 432, 431, 394,
	395, 208, 435, 460, 229, 405, 408, 479, 1945, 216,
	210, 1993, 1968, 1902, 1857, 1863, 1763, 0, 209, 1858,
	1859, 1860, 1861, 1862, 1941, 1812, 1828, 1800, 1915, 1799,
	280, 1932, 458, 459, 245, 1775, 2013, 211, 1776, 2012,
	347, 354, 346, 2016, 2014, 454, 1994, 1903, 1888, 1886,
	1768, 1992, 1901, 1887, 308, 268, 287, 371, 315, 372,
	288, 341, 340, 342, 317, 1890, 423, 318, 0, 206,
	0, 422, 2003, 2029, 434, 226, 1794, 1960, 449, 0,
	379, 227, 278, 266, 370, 345, 218, 290, 420, 306,
	314, 1936, 2026, 358, 391, 233, 464, 419, 261, 1790,
	0, 1793, 1788, 1791, 1789, 1894, 1895, 2008, 2009, 2010,
	1948, 1783, 0, 0, 1986, 1987, 0, 1881, 1996, 1769,
	0, 1964, 0, 0, 0, 0, 1928, 2024, 1841, 241,
	0, 1765, 1766, 1767, 0, 1871, 1872, 0, 0, 1982,
	1981, 1980, 1983, 0, 2017, 2015, 2018, 1784, 1805, 1827,
	1877, 1878, 1880, 1912, 1913, 1958, 1931, 1940, 1814, 1873,
	367, 207, 219, 448, 232, 252, 250, 267, 302, 328,
	335, 364, 407, 413, 414, 438, 439, 440, 442, 255,
	331, 259, 231, 385, 230, 316, 293, 366, 446, 447,
	375, 247, 1899, 199, 212, 310, 2025, 382, 275, 334,
	411, 336, 297, 246, 477, 339, 381, 481, 1961, 1906,
	0, 1845, 1847, 1846, 1796, 1798, 1797, 1795, 2028, 344,
	1988, 1752, 1760, 1787, 1803, 1810, 1818, 1829, 1830, 1838,
	1844, 1856, 1866, 1867, 1883, 1897, 1898, 1905, 1935, 1938,
	1955, 1963, 1970, 1975, 1977, 466, 251, 1879, 1904, 1942,
	213, 223, 236, 249, 264, 0, 274, 286, 289, 294,
	295, 299, 304, 322, 323, 324, 325, 3987, 349, 352,
	353, 356, 357, 361, 362, 363, 368, 369, 377, 0,
	386, 397, 399, 400, 401, 402, 412, 415, 416, 456,
	457, 473, 474, 1852, 196, 0, 0, 202, 0, 203,
	205, 1837, 201, 1984, 2020, 1916, 1930, 1821, 2000, 0,
	1962, 443, 1855, 2004, 1804, 1834, 2022, 1840, 1843, 1924,
	1770, 1893, 355, 1831, 1771, 1754, 1809, 1758, 1822, 1759,
	1806, 258, 1802, 1965, 1896, 2002, 1875, 1917, 1927, 257,
	243, 1885, 1884, 1990, 1820, 1819, 1922, 1979, 2001, 1874,
	0, 0, 472, 0, 2011, 312, 1976, 0, 470, 421,
	337, 0, 0, 1870, 1985, 1891, 1954, 1853, 1926, 1786,
	1909, 2006, 1832, 1918, 2007, 0, 0, 0, 0, 0,
	0, 1156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1914, 1998, 1825, 0, 1865, 1923, 2027, 1757, 1910,
	0, 1762, 1773, 2021, 1991, 1816, 1817, 262, 0, 0,
	0, 0, 0, 0, 0, 1868, 1892, 1944, 1850, 0,
	463, 1929, 1939, 1957, 1842, 374, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 1907, 0, 0,
	0, 1778, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 1785,
	1755, 1813, 1946, 1756, 1753, 338, 1774, 1959, 1989, 1851,
	300, 0, 1995, 1849, 1848, 1933, 1779, 1969, 2019, 1835,
	309, 1777, 195, 1772, 1780, 1833, 351, 1943, 1951, 0,
	198, 311, 1966, 1807, 1824, 244, 0, 390, 1919, 462,
	0, 277, 1900, 389, 313, 455, 1934, 1997, 461, 1836,
	437, 471, 476, 270, 1876, 234, 418, 260, 253, 1815,
	1956, 1761, 283, 373, 248, 305, 1854, 1925, 1808, 240,
	1937, 1908, 1971, 417, 452, 200, 332, 453, 475, 0,
	271, 409, 272, 436, 263, 235, 376, 214, 303, 0,
	0, 254, 298, 0, 0, 478, 469, 225, 273, 384,
	388, 365, 221, 444, 333, 343, 237, 239, 238, 215,
	410, 451, 228, 242, 1967, 1950, 1973, 1801, 1781, 1792,
	1782, 1823, 1999, 292, 284, 1974, 1972, 1826, 359, 224,
	1889, 1882, 1869, 1947, 465, 2023, 256, 1952, 467, 0,
	404, 403, 1839, 291, 1953, 0, 0, 383, 0, 301,
	204, 1978, 480, 220, 307, 445, 0, 276, 350, 1921,
	360, 197, 378, 327, 329, 326, 330, 281, 0, 0,
	1949, 380, 406, 450, 222, 424, 0, 0, 0, 396,
	0, 0, 2005, 320, 265, 269, 285, 296, 1920, 387,
	425, 468, 1911, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 426, 441, 398, 279, 319,
	321, 428, 433, 429, 430, 427, 432, 431, 394, 395,
	208, 435, 460, 229, 405, 408, 479, 1945, 216, 210,
	1993, 1968, 1902, 1857, 1863, 1763, 0, 209, 1858, 1859,
	1860, 1861, 1862, 1941, 1812, 1828, 1800, 1915, 1799, 280,
	1932, 458, 459, 245, 1775, 2013, 211, 1776, 2012, 347,
	354, 346, 2016, 2014, 454, 1994, 1903, 1888, 1886, 1768,
	1992, 1901, 1887, 308, 268, 287, 371, 315, 372, 288,
	341, 340, 342, 317, 1890, 423, 318, 0, 206, 0,
	422, 2003, 2029, 434, 226, 1794, 1960, 449, 0, 379,
	227, 278, 266, 370, 345, 218, 290, 420, 306, 314,
	1936, 2026, 358, 391, 233, 464, 419, 261, 1790, 0,
	1793, 1788, 1791, 1789, 1894, 1895, 2008, 2009, 2010, 1948,
	1783, 0, 0, 1986, 1987, 0, 1881, 1996, 1769, 0,
	1964, 0, 0, 0, 0, 1928, 2024, 1841, 241, 0,
	1765, 1766, 1767, 0, 1871, 1872, 0, 0, 1982, 1981,
	1980, 1983, 0, 2017, 2015, 2018, 1784, 1805, 1827, 1877,
	1878, 1880, 1912, 1913, 1958, 1931, 1940, 1814, 1873, 367,
	207, 219, 448, 232, 252, 250, 267, 302, 328, 335,
	364, 407, 413, 414, 438, 439, 440, 442, 255, 331,
	259, 231, 385, 230, 316, 293, 366, 446, 447, 375,
	247, 1899, 199, 212, 310, 2025, 382, 275, 334, 411,
	336, 297, 246, 477, 339, 381, 481, 1961, 1906, 0,
	1845, 1847, 1846, 1796, 1798, 1797, 1795, 2028, 344, 1988,
	1752, 1760, 1787, 1803, 1810, 1818, 1829, 1830, 1838, 1844,
	1856, 1866, 1867, 1883, 1897, 1898, 1905, 1935, 1938, 1955,
	1963, 1970, 1975, 1977, 466, 251, 1879, 1904, 1942, 213,
	223, 236, 249, 264, 0, 274, 286, 289, 294, 295,
	299, 304, 322, 323, 324, 325, 348, 349, 352, 353,
	356, 357, 361, 362, 363, 368, 369, 377, 0, 386,
	397, 399, 400, 401, 402, 412, 415, 416, 456, 457,
	473, 474, 1852, 196, 0, 0, 202, 0, 203, 205,
	1837, 201, 1984, 2020, 1916, 1930, 1821, 2000, 0, 1962,
	443, 1855, 2004, 1804, 1834, 2022, 1840, 1843, 1924, 1770,
	1893, 355, 1831, 1771, 1754, 1809, 1758, 1822, 1759, 1806,
	258, 1802, 1965, 1896, 2002, 1875, 1917, 1927, 257, 243,
	1885, 1884, 1990, 1820, 1819, 1922, 1979, 2001, 1874, 0,
	0, 472, 0, 2011, 312, 1976, 0, 470, 421, 337,
	0, 0, 1870, 1985, 1891, 1954, 1853, 1926, 1786, 1909,
	2006, 1832, 1918, 2007, 0, 0, 0, 0, 0, 0,
	4274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1914, 1998, 1825, 0, 1865, 1923, 2027, 1757, 1910, 0,
	1762, 1773, 2021, 1991, 1816, 1817, 262, 0, 0, 0,
	0, 0, 0, 0, 1868, 1892, 1944, 1850, 0, 463,
	1929, 1939, 1957, 1842, 374, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 1907, 0, 0, 0,
	1778, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 1785, 1755,
	1813, 1946, 1756, 1753, 338, 1774, 1959, 1989, 1851, 300,
	0, 1995, 1849, 1848, 1933, 1779, 1969, 2019, 1835, 309,
	1777, 195, 1772, 1780, 1833, 351, 1943, 1951, 0, 198,
	311, 1966, 1807, 1824, 244, 0, 390, 1919, 462, 0,
	277, 1900, 389, 313, 455, 1934, 1997, 461, 1836, 437,
	471, 476, 270, 1876, 234, 418, 260, 253, 1815, 1956,
	1761, 283, 373, 248, 305, 1854, 1925, 1808, 240, 1937,
	1908, 1971, 417, 452, 200, 332, 453, 475, 0, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 1967, 1950, 1973, 1801, 1781, 1792, 4277,
	4278, 4279, 292, 284, 1974, 1972, 1826, 359, 224, 1889,
	1882, 1869, 1947, 465, 2023, 256, 1952, 467, 0, 404,
	403, 1839, 291, 1953, 0, 0, 383, 0, 301, 204,
	1978, 480, 220, 307, 445, 0, 276, 350, 1921, 360,
	197, 378, 327, 329, 326, 330, 281, 0, 0, 1949,
	380, 406, 450, 222, 424, 0, 0, 0, 396, 0,
	0, 2005, 320, 265, 269, 285, 296, 1920, 387, 425,
	468, 1911, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 1945, 216, 210, 1993,
	1968, 1902, 1857, 1863, 1763, 0, 209, 1858, 1859, 1860,
	1861, 1862, 1941, 1812, 1828, 1800, 1915, 1799, 280, 1932,
	458, 459, 245, 1775, 2013, 211, 1776, 2012, 347, 354,
	346, 2016, 2014, 454, 1994, 1903, 1888, 1886, 1768, 1992,
	1901, 1887, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 317, 1890, 423, 318, 0, 206, 0, 422,
	2003, 2029, 434, 226, 1794, 1960, 449, 0, 379, 227,
	278, 266, 370, 345, 218, 290, 420, 306, 314, 1936,
	2026, 358, 391, 233, 464, 419, 261, 1790, 0, 1793,
	1788, 1791, 1789, 1894, 1895, 2008, 2009, 2010, 1948, 1783,
	0, 0, 1986, 1987, 0, 1881, 1996, 1769, 0, 1964,
	0, 0, 0, 0, 1928, 2024, 1841, 241, 0, 1765,
	1766, 1767, 0, 1871, 1872, 0, 0, 1982, 1981, 1980,
	1983, 0, 2017, 2015, 2018, 1784, 1805, 1827, 1877, 1878,
	1880, 1912, 1913, 1958, 1931, 1940, 1814, 1873, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	1899, 199, 212, 310, 2025, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 1961, 1906, 0, 1845,
	1847, 1846, 1796, 1798, 1797, 1795, 2028, 344, 1988, 1752,
	1760, 1787, 1803, 1810, 1818, 1829, 1830, 1838, 1844, 1856,
	1866, 1867, 1883, 1897, 1898, 1905, 1935, 1938, 1955, 1963,
	1970, 1975, 1977, 466, 251, 1879, 1904, 1942, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 368, 369, 377, 0, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 1852, 196, 0, 0, 202, 0, 203, 205, 1837,
	201, 1984, 2020, 1916, 1930, 1821, 2000, 0, 1962, 443,
	1855, 2004, 1804, 1834, 2022, 1840, 1843, 1924, 1770, 1893,
	355, 1831, 1771, 1754, 1809, 1758, 1822, 1759, 1806, 258,
	1802, 1965, 1896, 2002, 1875, 1917, 1927, 257, 243, 1885,
	1884, 1990, 1820, 1819, 1922, 1979, 2001, 1874, 0, 0,
	472, 0, 2011, 312, 1976, 0, 470, 421, 337, 0,
	0, 1870, 1985, 1891, 1954, 1853, 1926, 1786, 1909, 2006,
	1832, 1918, 2007, 0, 0, 0, 0, 0, 0, 3114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1914,
	1998, 1825, 0, 1865, 1923, 2027, 1757, 1910, 0, 1762,
	1773, 2021, 1991, 1816, 1817, 262, 0, 0, 0, 0,
	0, 0, 0, 1868, 1892, 1944, 1850, 0, 463, 1929,
	1939, 1957, 1842, 374, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 1907, 0, 0, 0, 1778,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 1785, 1755, 1813,
	1946, 1756, 1753, 338, 1774, 1959, 1989, 1851, 300, 0,
	1995, 1849, 1848, 1933, 1779, 1969, 2019, 1835, 309, 1777,
	195, 1772, 1780, 1833, 351, 1943, 1951, 0, 198, 311,
	1966, 1807, 1824, 244, 0, 390, 1919, 462, 0, 277,
	1900, 389, 313, 455, 1934, 1997, 461, 1836, 437, 471,
	476, 270, 1876, 234, 418, 260, 253, 1815, 1956, 1761,
	283, 373, 248, 305, 1854, 1925, 1808, 240, 1937, 1908,
	1971, 417, 452, 200, 332, 453, 475, 0, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 1967, 1950, 1973, 1801, 1781, 1792, 1782, 1823,
	1999, 292, 284, 1974, 1972, 1826, 359, 224, 1889, 1882,
	1869, 1947, 465, 2023, 256, 1952, 467, 0, 404, 403,
	1839, 291, 1953, 0, 0, 383, 0, 301, 204, 1978,
	480, 220, 307, 445, 0, 276, 350, 1921, 360, 197,
	378, 327, 329, 326, 330, 281, 0, 0, 1949, 380,
	406, 450, 222, 424, 0, 0, 0, 396, 0, 0,
	2005, 320, 265, 269, 285, 296, 1920, 387, 425, 468,
	1911, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	460, 229, 405, 408, 479, 1945, 216, 210, 1993, 1968,
	1902, 1857, 1863, 1763, 0, 209, 1858, 1859, 1860, 1861,
	1862, 1941, 1812, 1828, 1800, 1915, 1799, 280, 1932, 458,
	459, 245, 1775, 2013, 211, 1776, 2012, 347, 354, 346,
	2016, 2014, 454, 1994, 1903, 1888, 1886, 1768, 1992, 1901,
	1887, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 1890, 423, 318, 0, 206, 0, 422, 2003,
	2029, 434, 226, 1794, 1960, 449, 0, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 1936, 2026,
	358, 391, 233, 464, 419, 261, 1790, 0, 1793, 1788,
	1791, 1789, 1894, 1895, 2008, 2009, 2010, 1948, 1783, 0,
	0, 1986, 1987, 0, 1881, 1996, 1769, 0, 1964, 0,
	0, 0, 0, 1928, 2024, 1841, 241, 0, 1765, 1766,
	1767, 0, 1871, 1872, 0, 0, 1982, 1981, 1980, 1983,
	0, 2017, 2015, 2018, 1784, 1805, 1827, 1877, 1878, 1880,
	1912, 1913, 1958, 1931, 1940, 1814, 1873, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 1899,
	199, 212, 310, 2025, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 1961, 1906, 0, 1845, 1847,
	1846, 1796, 1798, 1797, 1795, 2028, 344, 1988, 1752, 1760,
	1787, 1803, 1810, 1818, 1829, 1830, 1838, 1844, 1856, 1866,
	1867, 1883, 1897, 1898, 1905, 1935, 1938, 1955, 1963, 1970,
	1975, 1977, 466, 251, 1879, 1904, 1942, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 0, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	1852, 196, 0, 0, 202, 0, 203, 205, 1837, 201,
	1984, 2020, 1916, 1930, 582, 443, 576, 587, 569, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 633,
	0, 0, 0, 0, 0, 258, 0, 0, 577, 0,
	0, 0, 0, 257, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 0, 0, 312,
	0, 0, 470, 421, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 630, 631, 0, 725, 0, 726,
	728, 729, 730, 731, 0, 0, 0, 727, 2298, 3320,
	3321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 0, 0, 374,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 3315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 0, 568, 567, 570, 0, 0, 0, 338,
	0, 0, 0, 575, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 195, 0, 0, 0,
	351, 579, 0, 0, 198, 311, 583, 0, 0, 244,
	0, 390, 2295, 462, 0, 277, 0, 389, 313, 455,
	0, 586, 461, 0, 437, 471, 476, 270, 0, 234,
	418, 260, 253, 0, 0, 0, 283, 373, 248, 305,
	0, 0, 0, 240, 0, 0, 0, 417, 452, 200,
	332, 453, 475, 571, 271, 409, 272, 436, 263, 235,
	376, 214, 303, 0, 0, 254, 298, 0, 0, 478,
	469, 225, 273, 384, 388, 365, 221, 444, 333, 343,
	237, 239, 238, 215, 410, 451, 228, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 284, 0,
	0, 0, 359, 224, 0, 0, 0, 0, 465, 0,
	256, 0, 467, 0, 404, 403, 574, 291, 0, 0,
	0, 383, 0, 301, 204, 0, 480, 220, 307, 445,
	0, 276, 350, 0, 360, 197, 378, 327, 329, 326,
	330, 281, 0, 0, 0, 636, 406, 450, 222, 424,
	572, 573, 580, 581, 584, 585, 588, 320, 265, 269,
	285, 296, 0, 387, 425, 468, 0, 217, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 392, 393, 426,
	441, 398, 279, 319, 321, 428, 433, 429, 430, 427,
	432, 431, 394, 395, 208, 435, 460, 229, 405, 408,
	479, 0, 216, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 458, 459, 245, 2296, 2297,
	211, 0, 0, 347, 354, 346, 0, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 268, 287,
	371, 315, 372, 288, 341, 340, 342, 317, 0, 423,
	318, 0, 206, 0, 422, 0, 0, 434, 226, 0,
	0, 449, 0, 379, 227, 278, 266, 370, 345, 218,
	290, 420, 306, 314, 0, 0, 358, 391, 233, 464,
	419, 261, 0, 0, 0, 3332, 1059, 0, 3322, 3323,
	3325, 3333, 3334, 3324, 3326, 3327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3328, 3329,
	3330, 3331, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 207, 219, 448, 232, 252, 250,
	267, 302, 328, 335, 364, 407, 413, 414, 438, 439,
	440, 442, 255, 331, 259, 231, 385, 230, 316, 293,
	366, 446, 447, 375, 247, 0, 199, 212, 310, 0,
	382, 275, 334, 411, 336, 297, 246, 477, 339, 381,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 466, 251,
	0, 0, 0, 213, 223, 236, 249, 264, 0, 274,
	286, 289, 294, 295, 299, 304, 322, 323, 324, 325,
	348, 349, 352, 353, 356, 357, 361, 362, 363, 368,
	369, 377, 578, 386, 397, 399, 400, 401, 402, 412,
	415, 416, 456, 457, 473, 474, 0, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 582, 443, 576, 587,
	569, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 561, 0, 0, 0, 0, 0, 258, 0, 0,
	577, 0, 0, 0, 0, 257, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 0,
	0, 312, 0, 0, 470, 421, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 0,
	0, 374, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 570, 0, 0,
	0, 338, 0, 0, 0, 575, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 195, 0,
	0, 0, 351, 579, 0, 0, 198, 311, 583, 0,
	0, 244, 0, 390, 0, 462, 0, 277, 0, 389,
	313, 455, 0, 586, 461, 0, 437, 471, 476, 270,
	0, 234, 418, 260, 253, 0, 0, 0, 283, 373,
	248, 305, 0, 0, 0, 240, 0, 0, 0, 417,
	452, 200, 332, 453, 475, 571, 271, 409, 272, 436,
	263, 235, 376, 214, 303, 0, 0, 254, 298, 0,
	0, 478, 469, 225, 273, 384, 388, 365, 221, 444,
	333, 343, 237, 239, 238, 215, 410, 451, 228, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	284, 0, 0, 0, 359, 224, 0, 0, 0, 0,
	465, 0, 256, 0, 467, 0, 404, 403, 574, 291,
	0, 0, 0, 383, 0, 301, 204, 0, 480, 220,
	307, 445, 0, 276, 350, 0, 360, 197, 378, 327,
	329, 326, 330, 281, 0, 0, 0, 564, 406, 450,
	222, 424, 572, 573, 580, 581, 584, 585, 588, 320,
	265, 269, 285, 296, 0, 387, 425, 468, 0, 217,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 392,
	393, 426, 441, 398, 279, 319, 321, 428, 433, 429,
	430, 427, 432, 431, 394, 395, 208, 435, 460, 229,
	405, 408, 479, 0, 216, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 458, 459, 245,
	0, 0, 211, 0, 0, 347, 354, 346, 0, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	268, 287, 371, 315, 372, 288, 341, 340, 342, 317,
	0, 423, 318, 0, 206, 0, 422, 0, 0, 434,
	226, 0, 0, 449, 0, 379, 227, 278, 266, 370,
	345, 218, 290, 420, 306, 314, 0, 0, 358, 391,
	233, 464, 419, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 207, 219, 448, 232,
	252, 250, 267, 302, 328, 335, 364, 407, 413, 414,
	438, 439, 440, 442, 255, 331, 259, 231, 385, 230,
	316, 293, 366, 446, 447, 375, 247, 0, 199, 212,
	310, 0, 382, 275, 334, 411, 336, 297, 246, 477,
	339, 381, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 251, 0, 0, 0, 213, 223, 236, 249, 264,
	0, 274, 286, 289, 294, 295, 299, 304, 322, 323,
	324, 325, 348, 349, 352, 353, 356, 357, 361, 362,
	363, 368, 369, 377, 578, 386, 397, 399, 400, 401,
	402, 412, 415, 416, 456, 457, 473, 474, 443, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 257, 243, 0, 0,
	0, 0, 0, 0, 0, 2447, 2451, 0, 172, 472,
	190, 0, 312, 0, 491, 470, 421, 337, 494, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1156, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 0,
	0, 0, 374, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 2450, 300, 191, 0,
	0, 0, 2443, 0, 2444, 2446, 2445, 309, 1158, 195,
	0, 2441, 2449, 351, 0, 0, 177, 198, 311, 0,
	0, 0, 244, 1152, 390, 0, 462, 490, 277, 0,
	389, 313, 455, 0, 0, 461, 0, 437, 471, 476,
	270, 0, 234, 418, 260, 253, 0, 0, 0, 283,
	373, 248, 305, 0, 0, 0, 240, 0, 0, 0,
	417, 452, 200, 332, 453, 475, 166, 271, 409, 272,
	436, 263, 235, 376, 214, 303, 0, 0, 254, 298,
	0, 0, 478, 469, 225, 273, 384, 388, 365, 221,
	444, 333, 343, 237, 239, 238, 215, 410, 451, 228,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 284, 0, 0, 0, 359, 224, 0, 0, 0,
	0, 465, 0, 256, 0, 467, 180, 404, 403, 0,
	291, 0, 181, 170, 383, 182, 301, 204, 0, 480,
	220, 307, 445, 489, 276, 350, 0, 360, 197, 378,
	327, 329, 326, 330, 281, 175, 183, 0, 380, 406,
	450, 222, 424, 173, 176, 185, 396, 186, 187, 0,
	320, 265, 269, 285, 296, 0, 387, 425, 468, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 426, 441, 398, 279, 319, 321, 428, 433,
	429, 430, 427, 432, 431, 394, 395, 208, 435, 460,
	229, 405, 408, 479, 0, 216, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 458, 459,
	245, 0, 0, 211, 0, 0, 347, 354, 346, 0,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 268, 287, 371, 315, 372, 288, 341, 340, 342,
	317, 0, 423, 318, 0, 206, 0, 422, 0, 0,
	434, 226, 0, 0, 449, 178, 379, 227, 278, 266,
	370, 345, 218, 290, 420, 306, 314, 0, 0, 358,
	391, 233, 464, 419, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 241, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 207, 219, 448,
	232, 252, 250, 267, 302, 328, 335, 364, 407, 413,
	414, 438, 439, 440, 442, 255, 331, 259, 231, 385,
	230, 316, 293, 366, 446, 447, 375, 247, 0, 199,
	212, 310, 0, 382, 275, 334, 411, 336, 297, 246,
	477, 339, 381, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 251, 0, 0, 0, 213, 223, 236, 249,
	264, 0, 274, 286, 289, 294, 295, 299, 304, 322,
	323, 324, 325, 348, 349, 352, 353, 356, 357, 361,
	362, 363, 368, 369, 377, 184, 386, 397, 399, 400,
	401, 402, 412, 415, 416, 456, 457, 473, 474, 443,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	355, 0, 0, 0, 0, 1470, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 257, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	472, 190, 0, 312, 0, 491, 470, 421, 337, 494,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 1471,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 492, 0, 1466, 1467, 1465, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 1468, 0, 0, 0, 0, 463, 0,
	0, 0, 0, 374, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 300, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	195, 0, 0, 0, 351, 0, 0, 177, 198, 311,
	0, 0, 0, 244, 0, 390, 0, 462, 490, 277,
	0, 389, 313, 455, 0, 0, 461, 0, 437, 471,
	476, 270, 0, 234, 418, 260, 253, 0, 0, 0,
	283, 373, 248, 305, 0, 0, 0, 240, 0, 0,
	0, 417, 452, 200, 332, 453, 475, 166, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 284, 0, 0, 0, 359, 224, 0, 0,
	0, 0, 465, 0, 256, 0, 467, 180, 404, 403,
	0, 291, 0, 181, 170, 383, 182, 301, 204, 0,
	480, 220, 307, 445, 489, 276, 350, 0, 360, 197,
	378, 327, 329, 326, 330, 281, 175, 183, 0, 380,
	406, 450, 222, 424, 173, 176, 185, 396, 186, 187,
	0, 320, 265, 269, 285, 296, 0, 387, 425, 468,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	460, 229, 405, 408, 479, 0, 216, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 458,
	459, 245, 0, 0, 211, 0, 0, 347, 354, 346,
	0, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 0, 423, 318, 0, 206, 0, 422, 0,
	0, 434, 226, 0, 0, 449, 178, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 0, 0,
	358, 391, 233, 464, 419, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 241, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 0,
	199, 212, 310, 0, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 251, 0, 0, 0, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 184, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	443, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 257, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 472, 190, 0, 312, 0, 491, 470, 421, 337,
	494, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 0, 374, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 300,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	1158, 195, 0, 1154, 0, 351, 0, 0, 177, 198,
	311, 0, 0, 0, 244, 1152, 390, 0, 462, 490,
	277, 0, 389, 313, 455, 0, 0, 461, 0, 437,
	471, 476, 270, 0, 234, 418, 260, 253, 0, 0,
	0, 283, 373, 248, 305, 0, 0, 0, 240, 0,
	0, 0, 417, 452, 200, 332, 453, 475, 166, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 284, 0, 0, 0, 359, 224, 0,
	0, 0, 0, 465, 0, 256, 0, 467, 180, 404,
	403, 0, 291, 0, 181, 170, 383, 182, 301, 204,
	0, 480, 220, 307, 445, 489, 276, 350, 0, 360,
	197, 378, 327, 329, 326, 330, 281, 175, 183, 0,
	380, 406, 450, 222, 424, 173, 176, 185, 396, 186,
	187, 0, 320, 265, 269, 285, 296, 0, 387, 425,
	468, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 0, 216, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	458, 459, 245, 0, 0, 211, 0, 0, 347, 354,
	346, 0, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 317, 0, 423, 318, 0, 206, 0, 422,
	0, 0, 434, 226, 0, 0, 449, 178, 379, 227,
	278, 266, 370, 345, 218, 290, 420, 306, 314, 0,
	0, 358, 391, 233, 464, 419, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 241, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	0, 199, 212, 310, 0, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 251, 0, 0, 0, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 368, 369, 377, 184, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 0, 196, 42, 443, 202, 0, 203, 205, 0,
	201, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 257, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 472, 190, 88, 312, 0,
	0, 470, 421, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 673, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 0, 0, 374, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 96, 0, 300, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 195, 0, 0, 0, 351,
	0, 0, 177, 198, 311, 0, 0, 0, 244, 0,
	390, 0, 462, 0, 277, 0, 389, 313, 455, 0,
	0, 461, 0, 437, 471, 476, 270, 0, 234, 418,
	260, 253, 0, 0, 0, 283, 373, 248, 305, 0,
	0, 0, 240, 0, 0, 0, 417, 452, 200, 332,
	453, 475, 166, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 284, 0, 0,
	0, 359, 224, 0, 0, 0, 0, 465, 0, 256,
	0, 467, 180, 404, 403, 0, 291, 0, 181, 170,
	383, 182, 301, 204, 0, 480, 220, 307, 445, 161,
	276, 350, 0, 360, 197, 378, 327, 329, 326, 330,
	281, 175, 183, 0, 380, 406, 450, 222, 424, 173,
	176, 185, 396, 186, 187, 0, 320, 265, 269, 285,
	296, 0, 387, 425, 468, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	0, 216, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 458, 459, 245, 0, 0, 211,
	0, 0, 347, 354, 346, 0, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 0, 423, 318,
	0, 206, 0, 422, 0, 0, 434, 226, 0, 0,
	449, 178, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 0, 0, 358, 391, 233, 464, 419,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 241, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 0, 199, 212, 310, 109, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 251, 667,
	0, 0, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 184, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 443, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 257, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 472, 190, 0, 312,
	0, 491, 470, 421, 337, 494, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 0, 0, 374,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 300, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 3472, 195, 0, 0, 3471,
	351, 0, 0, 177, 198, 311, 0, 0, 0, 244,
	0, 390, 0, 462, 490, 277, 0, 389, 313, 455,
	0, 0, 461, 0, 437, 471, 476, 270, 0, 234,
	418, 260, 253, 0, 0, 0, 283, 373, 248, 305,
	0, 0, 0, 240, 0, 0, 0, 417, 452, 200,
	332, 453, 475, 166, 271, 409, 272, 436, 263, 235,
	376, 214, 303, 0, 0, 254, 298, 0, 0, 478,
	469, 225, 273, 384, 388, 365, 221, 444, 333, 343,
	237, 239, 238, 215, 410, 451, 228, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 284, 0,
	0, 0, 359, 224, 0, 0, 0, 0, 465, 0,
	256, 0, 467, 180, 404, 403, 0, 291, 0, 181,
	170, 383, 182, 301, 204, 0, 480, 220, 307, 445,
	489, 276, 350, 0, 360, 197, 378, 327, 329, 326,
	330, 281, 175, 183, 0, 380, 406, 450, 222, 424,
	173, 176, 185, 396, 186, 187, 0, 320, 265, 269,
	285, 296, 0, 387, 425, 468, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 426,
	441, 398, 279, 319, 321, 428, 433, 429, 430, 427,
	432, 431, 394, 395, 208, 435, 460, 229, 405, 408,
	479, 0, 216, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 458, 459, 245, 0, 0,
	211, 0, 0, 347, 354, 346, 0, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 268, 287,
	371, 315, 372, 288, 341, 340, 342, 317, 0, 423,
	318, 0, 206, 0, 422, 0, 0, 434, 226, 0,
	0, 449, 178, 379, 227, 278, 266, 370, 345, 218,
	290, 420, 306, 314, 0, 0, 358, 391, 233, 464,
	419, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 241, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 207, 219, 448, 232, 252, 250,
	267, 302, 328, 335, 364, 407, 413, 414, 438, 439,
	440, 442, 255, 331, 259, 231, 385, 230, 316, 293,
	366, 446, 447, 375, 247, 0, 199, 212, 310, 0,
	382, 275, 334, 411, 336, 297, 246, 477, 339, 381,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 466, 251,
	0, 0, 0, 213, 223, 236, 249, 264, 0, 274,
	286, 289, 294, 295, 299, 304, 322, 323, 324, 325,
	348, 349, 352, 353, 356, 357, 361, 362, 363, 368,
	369, 377, 184, 386, 397, 399, 400, 401, 402, 412,
	415, 416, 456, 457, 473, 474, 443, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 257, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 472, 190, 0,
	312, 0, 491, 470, 421, 337, 494, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3439, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 0, 0,
	374, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 300, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 1158, 195, 0, 0,
	2449, 351, 0, 0, 177, 198, 311, 0, 0, 0,
	244, 0, 390, 0, 462, 490, 277, 0, 389, 313,
	455, 0, 0, 461, 0, 437, 471, 476, 270, 0,
	234, 418, 260, 253, 0, 0, 0, 283, 373, 248,
	305, 0, 0, 0, 240, 0, 0, 0, 417, 452,
	200, 332, 453, 475, 166, 271, 409, 272, 436, 263,
	235, 376, 214, 303, 0, 0, 254, 298, 0, 0,
	478, 469, 225, 273, 384, 388, 365, 221, 444, 333,
	343, 237, 239, 238, 215, 410, 451, 228, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 284,
	0, 0, 0, 359, 224, 0, 0, 0, 0, 465,
	0, 256, 0, 467, 180, 404, 403, 0, 291, 0,
	181, 170, 383, 182, 301, 204, 0, 480, 220, 307,
	445, 489, 276, 350, 0, 360, 197, 378, 327, 329,
	326, 330, 281, 175, 183, 0, 380, 406, 450, 222,
	424, 173, 176, 185, 396, 186, 187, 0, 320, 265,
	269, 285, 296, 0, 387, 425, 468, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	426, 441, 398, 279, 319, 321, 428, 433, 429, 430,
	427, 432, 431, 394, 395, 208, 435, 460, 229, 405,
	408, 479, 0, 216, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 458, 459, 245, 0,
	0, 211, 0, 0, 347, 354, 346, 0, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 268,
	287, 371, 315, 372, 288, 341, 340, 342, 317, 0,
	423, 318, 0, 206, 0, 422, 0, 0, 434, 226,
	0, 0, 449, 178, 379, 227, 278, 266, 370, 345,
	218, 290, 420, 306, 314, 0, 0, 358, 391, 233,
	464, 419, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 241, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 207, 219, 448, 232, 252,
	250, 267, 302, 328, 335, 364, 407, 413, 414, 438,
	439, 440, 442, 255, 331, 259, 231, 385, 230, 316,
	293, 366, 446, 447, 375, 247, 0, 199, 212, 310,
	0, 382, 275, 334, 411, 336, 297, 246, 477, 339,
	381, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	251, 0, 0, 0, 213, 223, 236, 249, 264, 0,
	274, 286, 289, 294, 295, 299, 304, 322, 323, 324,
	325, 348, 349, 352, 353, 356, 357, 361, 362, 363,
	368, 369, 377, 184, 386, 397, 399, 400, 401, 402,
	412, 415, 416, 456, 457, 473, 474, 443, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 257, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 472, 190,
	0, 312, 0, 0, 470, 421, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 673, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 0,
	0, 374, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 300, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 195, 0,
	0, 0, 351, 0, 0, 177, 198, 311, 0, 0,
	0, 244, 0, 390, 0, 462, 0, 277, 0, 389,
	313, 455, 0, 0, 461, 0, 437, 471, 476, 270,
	0, 234, 418, 260, 253, 0, 0, 0, 283, 373,
	248, 305, 0, 0, 0, 240, 0, 0, 0, 417,
	452, 200, 332, 453, 475, 166, 271, 409, 272, 436,
	263, 235, 376, 214, 303, 0, 0, 254, 298, 0,
	0, 478, 469, 225, 273, 384, 388, 365, 221, 444,
	333, 343, 237, 239, 238, 215, 410, 451, 228, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	284, 0, 0, 0, 359, 224, 0, 0, 0, 0,
	465, 0, 256, 0, 467, 180, 404, 403, 0, 291,
	0, 181, 170, 383, 182, 301, 204, 0, 480, 220,
	307, 445, 161, 276, 350, 0, 360, 197, 378, 327,
	329, 326, 330, 281, 175, 183, 0, 380, 406, 450,
	222, 424, 173, 176, 185, 396, 186, 187, 0, 320,
	265, 269, 285, 296, 0, 387, 425, 468, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 426, 441, 398, 279, 319, 321, 428, 433, 429,
	430, 427, 432, 431, 394, 395, 208, 435, 460, 229,
	405, 408, 479, 0, 216, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 458, 459, 245,
	0, 0, 211, 0, 0, 347, 354, 346, 0, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	268, 287, 371, 315, 372, 288, 341, 340, 342, 317,
	0, 423, 318, 0, 206, 0, 422, 0, 0, 434,
	226, 0, 0, 449, 178, 379, 227, 278, 266, 370,
	345, 218, 290, 420, 306, 314, 0, 0, 358, 391,
	233, 464, 419, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 241, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3158, 674, 367, 207, 219, 448, 232,
	252, 250, 267, 302, 328, 335, 364, 407, 413, 414,
	438, 439, 440, 442, 255, 331, 259, 231, 385, 230,
	316, 293, 366, 446, 447, 375, 247, 0, 199, 212,
	310, 0, 382, 275, 334, 411, 336, 297, 246, 477,
	339, 381, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 251, 667, 0, 0, 213, 223, 236, 249, 264,
	0, 274, 286, 289, 294, 295, 299, 304, 322, 323,
	324, 325, 348, 349, 352, 353, 356, 357, 361, 362,
	363, 368, 369, 377, 184, 386, 397, 399, 400, 401,
	402, 412, 415, 416, 456, 457, 473, 474, 443, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 257, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 472,
	190, 0, 312, 0, 491, 470, 421, 337, 494, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2878, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 0,
	0, 0, 374, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 300, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 1158, 195,
	0, 0, 2449, 351, 0, 0, 177, 198, 311, 0,
	0, 0, 244, 0, 390, 0, 462, 490, 277, 0,
	389, 313, 455, 0, 0, 461, 0, 437, 471, 476,
	270, 0, 234, 418, 260, 253, 0, 0, 0, 283,
	373, 248, 305, 0, 0, 0, 240, 0, 0, 0,
	417, 452, 200, 332, 453, 475, 166, 271, 409, 272,
	436, 263, 235, 376, 214, 303, 0, 0, 254, 298,
	0, 0, 478, 469, 225, 273, 384, 388, 365, 221,
	444, 333, 343, 237, 239, 238, 215, 410, 451, 228,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 284, 0, 0, 0, 359, 224, 0, 0, 0,
	0, 465, 0, 256, 0, 467, 180, 404, 403, 0,
	291, 0, 181, 170, 383, 182, 301, 204, 0, 480,
	220, 307, 445, 489, 276, 350, 0, 360, 197, 378,
	327, 329, 326, 330, 281, 175, 183, 0, 380, 406,
	450, 222, 424, 173, 176, 185, 396, 186, 187, 0,
	320, 265, 269, 285, 296, 0, 387, 425, 468, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 426, 441, 398, 279, 319, 321, 428, 433,
	429, 430, 427, 432, 431, 394, 395, 208, 435, 460,
	229, 405, 408, 479, 0, 216, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 458, 459,
	245, 0, 0, 211, 0, 0, 347, 354, 346, 0,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 268, 287, 371, 315, 372, 288, 341, 340, 342,
	317, 0, 423, 318, 0, 206, 0, 422, 0, 0,
	434, 226, 0, 0, 449, 178, 379, 227, 278, 266,
	370, 345, 218, 290, 420, 306, 314, 0, 0, 358,
	391, 233, 464, 419, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 241, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 207, 219, 448,
	232, 252, 250, 267, 302, 328, 335, 364, 407, 413,
	414, 438, 439, 440, 442, 255, 331, 259, 231, 385,
	230, 316, 293, 366, 446, 447, 375, 247, 0, 199,
	212, 310, 0, 382, 275, 334, 411, 336, 297, 246,
	477, 339, 381, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 251, 0, 0, 0, 213, 223, 236, 249,
	264, 0, 274, 286, 289, 294, 295, 299, 304, 322,
	323, 324, 325, 348, 349, 352, 353, 356, 357, 361,
	362, 363, 368, 369, 377, 184, 386, 397, 399, 400,
	401, 402, 412, 415, 416, 456, 457, 473, 474, 443,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 257, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	472, 190, 0, 312, 0, 491, 470, 421, 337, 494,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 1471,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 0, 0, 374, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 300, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	195, 0, 0, 0, 351, 0, 0, 177, 198, 311,
	0, 0, 0, 244, 2253, 390, 0, 462, 490, 277,
	0, 389, 313, 455, 0, 0, 461, 0, 437, 471,
	476, 270, 0, 234, 418, 260, 253, 0, 0, 0,
	283, 373, 248, 305, 0, 0, 0, 240, 0, 0,
	0, 417, 452, 200, 332, 453, 475, 166, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 284, 0, 0, 0, 359, 224, 0, 0,
	0, 0, 465, 0, 256, 0, 467, 180, 404, 403,
	0, 291, 0, 181, 170, 383, 182, 301, 204, 0,
	480, 220, 307, 445, 489, 276, 350, 0, 360, 197,
	378, 327, 329, 326, 330, 281, 175, 183, 0, 380,
	406, 450, 222, 424, 173, 176, 185, 396, 186, 187,
	0, 320, 265, 269, 285, 296, 0, 387, 425, 468,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	460, 229, 405, 408, 479, 0, 216, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 458,
	459, 245, 0, 0, 211, 0, 0, 347, 354, 346,
	0, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 0, 423, 318, 0, 206, 0, 422, 0,
	0, 434, 226, 0, 0, 449, 178, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 0, 0,
	358, 391, 233, 464, 419, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 241, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 0,
	199, 212, 310, 0, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 251, 0, 0, 0, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 184, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	443, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 257, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 472, 190, 0, 312, 0, 0, 470, 421, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	673, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 0, 374, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 300,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 195, 0, 0, 0, 351, 0, 0, 177, 198,
	311, 0, 0, 0, 244, 0, 390, 0, 462, 0,
	277, 0, 389, 313, 455, 0, 0, 461, 0, 437,
	471, 476, 270, 0, 234, 418, 260, 253, 0, 0,
	0, 283, 373, 248, 305, 0, 0, 0, 240, 0,
	0, 0, 417, 452, 200, 332, 453, 475, 166, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 284, 0, 0, 0, 359, 224, 0,
	0, 0, 0, 465, 0, 256, 0, 467, 180, 404,
	403, 0, 291, 0, 181, 170, 383, 182, 301, 204,
	0, 480, 220, 307, 445, 161, 276, 350, 0, 360,
	197, 378, 327, 329, 326, 330, 281, 175, 183, 0,
	380, 406, 450, 222, 424, 173, 176, 185, 396, 186,
	187, 0, 320, 265, 269, 285, 296, 0, 387, 425,
	468, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 0, 216, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	458, 459, 245, 0, 0, 211, 0, 0, 347, 354,
	346, 0, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 317, 0, 423, 318, 0, 206, 0, 422,
	0, 0, 434, 226, 0, 0, 449, 178, 379, 227,
	278, 266, 370, 345, 218, 290, 420, 306, 314, 0,
	0, 358, 391, 233, 464, 419, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 241, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 674, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	0, 199, 212, 310, 0, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 251, 667, 0, 0, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 368, 369, 377, 184, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 443, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 257,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 472, 190, 0, 312, 0, 491, 470, 421,
	337, 494, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3430, 0, 0, 0, 0,
	0, 3432, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 0, 0, 0, 0, 374, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	300, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 195, 0, 0, 0, 351, 0, 0, 177,
	198, 311, 0, 0, 0, 244, 0, 390, 0, 462,
	490, 277, 0, 389, 313, 455, 0, 0, 461, 0,
	437, 471, 476, 270, 0, 234, 418, 260, 253, 0,
	0, 0, 283, 373, 248, 305, 0, 0, 0, 240,
	0, 0, 0, 417, 452, 200, 332, 453, 475, 166,
	271, 409, 272, 436, 263, 235, 376, 214, 303, 0,
	0, 254, 298, 0, 0, 478, 469, 225, 273, 384,
	388, 365, 221, 444, 333, 343, 237, 239, 238, 215,
	410, 451, 228, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 284, 0, 0, 0, 359, 224,
	0, 0, 0, 0, 465, 0, 256, 0, 467, 180,
	404, 403, 0, 291, 0, 181, 170, 383, 182, 301,
	204, 0, 480, 220, 307, 445, 489, 276, 350, 0,
	360, 197, 378, 327, 329, 326, 330, 281, 175, 183,
	0, 380, 406, 450, 222, 424, 173, 176, 185, 396,
	186, 187, 0, 320, 265, 269, 285, 296, 0, 387,
	425, 468, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 426, 441, 398, 279, 319,
	321, 428, 433, 429, 430, 427, 432, 431, 394, 395,
	208, 435, 460, 229, 405, 408, 479, 0, 216, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 458, 459, 245, 0, 0, 211, 0, 0, 347,
	354, 346, 0, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 268, 287, 371, 315, 372, 288,
	341, 340, 342, 317, 0, 423, 318, 0, 206, 0,
	422, 0, 0, 434, 226, 0, 0, 449, 178, 379,
	227, 278, 266, 370, 345, 218, 290, 420, 306, 314,
	0, 0, 358, 391, 233, 464, 419, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 241, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	207, 219, 448, 232, 252, 250, 267, 302, 328, 335,
	364, 407, 413, 414, 438, 439, 440, 442, 255, 331,
	259, 231, 385, 230, 316, 293, 366, 446, 447, 375,
	247, 0, 199, 212, 310, 0, 382, 275, 334, 411,
	336, 297, 246, 477, 339, 381, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 251, 0, 0, 0, 213,
	223, 236, 249, 264, 0, 274, 286, 289, 294, 295,
	299, 304, 322, 323, 324, 325, 348, 349, 352, 353,
	356, 357, 361, 362, 363, 368, 369, 377, 184, 386,
	397, 399, 400, 401, 402, 412, 415, 416, 456, 457,
	473, 474, 443, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	257, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 472, 190, 0, 312, 0, 491, 470,
	421, 337, 494, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 2035, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 0, 0, 0, 0, 374, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 300, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 195, 0, 0, 0, 351, 0, 0,
	177, 198, 311, 0, 0, 0, 244, 0, 390, 0,
	462, 490, 277, 0, 389, 313, 455, 0, 0, 461,
	0, 437, 471, 476, 270, 0, 234, 418, 260, 253,
	0, 0, 0, 283, 373, 248, 305, 0, 0, 0,
	240, 0, 0, 0, 417, 452, 200, 332, 453, 475,
	166, 271, 409, 272, 436, 263, 235, 376, 214, 303,
	0, 0, 254, 298, 0, 0, 478, 469, 225, 273,
	384, 388, 365, 221, 444, 333, 343, 237, 239, 238,
	215, 410, 451, 228, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 284, 0, 0, 0, 359,
	224, 0, 0, 0, 0, 465, 0, 256, 0, 467,
	180, 404, 403, 0, 291, 0, 181, 170, 383, 182,
	301, 204, 0, 480, 220, 307, 445, 489, 276, 350,
	0, 360, 197, 378, 327, 329, 326, 330, 281, 175,
	183, 0, 380, 406, 450, 222, 424, 173, 176, 185,
	396, 186, 187, 0, 320, 265, 269, 285, 296, 0,
	387, 425, 468, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 426, 441, 398, 279,
	319, 321, 428, 433, 429, 430, 427, 432, 431, 394,
	395, 208, 435, 460, 229, 405, 408, 479, 0, 216,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 458, 459, 245, 0, 0, 211, 0, 0,
	347, 354, 346, 0, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 268, 287, 371, 315, 372,
	288, 341, 340, 342, 317, 0, 423, 318, 0, 206,
	0, 422, 0, 0, 434, 226, 0, 0, 449, 178,
	379, 227, 278, 266, 370, 345, 218, 290, 420, 306,
	314, 0, 0, 358, 391, 233, 464, 419, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 241,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 207, 219, 448, 232, 252, 250, 267, 302, 328,
	335, 364, 407, 413, 414, 438, 439, 440, 442, 255,
	331, 259, 231, 385, 230, 316, 293, 366, 446, 447,
	375, 247, 0, 199, 212, 310, 0, 382, 275, 334,
	411, 336, 297, 246, 477, 339, 381, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 251, 0, 0, 0,
	213, 223, 236, 249, 264, 0, 274, 286, 289, 294,
	295, 299, 304, 322, 323, 324, 325, 348, 349, 352,
	353, 356, 357, 361, 362, 363, 368, 369, 377, 184,
	386, 397, 399, 400, 401, 402, 412, 415, 416, 456,
	457, 473, 474, 443, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 257, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 472, 190, 0, 312, 0, 491,
	470, 421, 337, 494, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2033, 2035, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 0, 0, 0, 0, 374, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 300, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 195, 0, 0, 0, 351, 0,
	0, 177, 198, 311, 0, 0, 0, 244, 0, 390,
	0, 462, 490, 277, 0, 389, 313, 455, 0, 0,
	461, 0, 437, 471, 476, 270, 0, 234, 418, 260,
	253, 0, 0, 0, 283, 373, 248, 305, 0, 0,
	0, 240, 0, 0, 0, 417, 452, 200, 332, 453,
	475, 166, 271, 409, 272, 436, 263, 235, 376, 214,
	303, 0, 0, 254, 298, 0, 0, 478, 469, 225,
	273, 384, 388, 365, 221, 444, 333, 343, 237, 239,
	238, 215, 410, 451, 228, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 284, 0, 0, 0,
	359, 224, 0, 0, 0, 0, 465, 0, 256, 0,
	467, 180, 404, 403, 0, 291, 0, 181, 170, 383,
	182, 301, 204, 0, 480, 220, 307, 445, 489, 276,
	350, 0, 360, 197, 378, 327, 329, 326, 330, 281,
	175, 183, 0, 380, 406, 450, 222, 424, 173, 176,
	185, 396, 186, 187, 0, 320, 265, 269, 285, 296,
	0, 387, 425, 468, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 426, 441, 398,
	279, 319, 321, 428, 433, 429, 430, 427, 432, 431,
	394, 395, 208, 435, 460, 229, 405, 408, 479, 0,
	216, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 458, 459, 245, 0, 0, 211, 0,
	0, 347, 354, 346, 0, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 268, 287, 371, 315,
	372, 288, 341, 340, 342, 317, 0, 423, 318, 0,
	206, 0, 422, 0, 0, 434, 226, 0, 0, 449,
	178, 379, 227, 278, 266, 370, 345, 218, 290, 420,
	306, 314, 0, 0, 358, 391, 233, 464, 419, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	241, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 207, 219, 448, 232, 252, 250, 267, 302,
	328, 335, 364, 407, 413, 414, 438, 439, 440, 442,
	255, 331, 259, 231, 385, 230, 316, 293, 366, 446,
	447, 375, 247, 0, 199, 212, 310, 0, 382, 275,
	334, 411, 336, 297, 246, 477, 339, 381, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 251, 0, 0,
	0, 213, 223, 236, 249, 264, 0, 274, 286, 289,
	294, 295, 299, 304, 322, 323, 324, 325, 348, 349,
	352, 353, 356, 357, 361, 362, 363, 368, 369, 377,
	184, 386, 397, 399, 400, 401, 402, 412, 415, 416,
	456, 457, 473, 474, 443, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 257, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 472, 190, 0, 312, 0,
	491, 470, 421, 337, 494, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 0, 0, 374, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 300, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 1158, 195, 0, 0, 0, 351,
	0, 0, 177, 198, 311, 0, 0, 0, 244, 0,
	390, 0, 462, 490, 277, 0, 389, 313, 455, 0,
	0, 461, 0, 437, 471, 476, 270, 0, 234, 418,
	260, 253, 0, 0, 0, 283, 373, 248, 305, 0,
	0, 0, 240, 0, 0, 0, 417, 452, 200, 332,
	453, 475, 166, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 284, 0, 0,
	0, 359, 224, 0, 0, 0, 0, 465, 0, 256,
	0, 467, 180, 404, 403, 0, 291, 0, 181, 170,
	383, 182, 301, 204, 0, 480, 220, 307, 445, 489,
	276, 350, 0, 360, 197, 378, 327, 329, 326, 330,
	281, 175, 183, 0, 380, 406, 450, 222, 424, 173,
	176, 185, 396, 186, 187, 0, 320, 265, 269, 285,
	296, 0, 387, 425, 468, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	0, 216, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 458, 459, 245, 0, 0, 211,
	0, 0, 347, 354, 346, 0, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 0, 423, 318,
	0, 206, 0, 422, 0, 0, 434, 226, 0, 0,
	449, 178, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 0, 0, 358, 391, 233, 464, 419,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 241, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 0, 199, 212, 310, 0, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 251, 0,
	0, 0, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 184, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 443, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 257, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 472, 190, 0, 312,
	0, 491, 470, 421, 337, 494, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3293, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 0, 0, 374,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 300, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 195, 0, 0, 0,
	351, 0, 0, 177, 198, 311, 0, 0, 0, 244,
	0, 390, 0, 462, 490, 277, 0, 389, 313, 455,
	0, 0, 461, 0, 437, 471, 476, 270, 0, 234,
	418, 260, 253, 0, 0, 0, 283, 373, 248, 305,
	0, 0, 0, 240, 0, 0, 0, 417, 452, 200,
	332, 453, 475, 166, 271, 409, 272, 436, 263, 235,
	376, 214, 303, 0, 0, 254, 298, 0, 0, 478,
	469, 225, 273, 384, 388, 365, 221, 444, 333, 343,
	237, 239, 238, 215, 410, 451, 228, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 284, 0,
	0, 0, 359, 224, 0, 0, 0, 0, 465, 0,
	256, 0, 467, 180, 404, 403, 0, 291, 0, 181,
	170, 383, 182, 301, 204, 0, 480, 220, 307, 445,
	489, 276, 350, 0, 360, 197, 378, 327, 329, 326,
	330, 281, 175, 183, 0, 380, 406, 450, 222, 424,
	173, 176, 185, 396, 186, 187, 0, 320, 265, 269,
	285, 296, 0, 387, 425, 468, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 426,
	441, 398, 279, 319, 321, 428, 433, 429, 430, 427,
	432, 431, 394, 395, 208, 435, 460, 229, 405, 408,
	479, 0, 216, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 458, 459, 245, 0, 0,
	211, 0, 0, 347, 354, 346, 0, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 268, 287,
	371, 315, 372, 288, 341, 340, 342, 317, 0, 423,
	318, 0, 206, 0, 422, 0, 0, 434, 226, 0,
	0, 449, 178, 379, 227, 278, 266, 370, 345, 218,
	290, 420, 306, 314, 0, 0, 358, 391, 233, 464,
	419, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 241, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 207, 219, 448, 232, 252, 250,
	267, 302, 328, 335, 364, 407, 413, 414, 438, 439,
	440, 442, 255, 331, 259, 231, 385, 230, 316, 293,
	366, 446, 447, 375, 247, 0, 199, 212, 310, 0,
	382, 275, 334, 411, 336, 297, 246, 477, 339, 381,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 466, 251,
	0, 0, 0, 213, 223, 236, 249, 264, 0, 274,
	286, 289, 294, 295, 299, 304, 322, 323, 324, 325,
	348, 349, 352, 353, 356, 357, 361, 362, 363, 368,
	369, 377, 184, 386, 397, 399, 400, 401, 402, 412,
	415, 416, 456, 457, 473, 474, 443, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 257, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 472, 190, 0,
	312, 0, 491, 470, 421, 337, 494, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 0, 0,
	374, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 300, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 195, 0, 0,
	0, 351, 0, 0, 177, 198, 311, 0, 0, 0,
	244, 0, 390, 0, 462, 490, 277, 0, 389, 313,
	455, 0, 0, 461, 0, 437, 471, 476, 270, 0,
	234, 418, 260, 253, 0, 0, 0, 283, 373, 248,
	305, 0, 0, 0, 240, 0, 0, 0, 417, 452,
	200, 332, 453, 475, 166, 271, 409, 272, 436, 263,
	235, 376, 214, 303, 0, 0, 254, 298, 0, 0,
	478, 469, 225, 273, 384, 388, 365, 221, 444, 333,
	343, 237, 239, 238, 215, 410, 451, 228, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 284,
	0, 0, 0, 359, 224, 0, 0, 0, 0, 465,
	0, 256, 0, 467, 180, 404, 403, 0, 291, 0,
	181, 170, 383, 182, 301, 204, 0, 480, 220, 307,
	445, 489, 276, 350, 0, 360, 197, 378, 327, 329,
	326, 330, 281, 175, 183, 0, 380, 406, 450, 222,
	424, 173, 176, 185, 396, 186, 187, 0, 320, 265,
	269, 285, 296, 0, 387, 425, 468, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	426, 441, 398, 279, 319, 321, 428, 433, 429, 430,
	427, 432, 431, 394, 395, 208, 435, 460, 229, 405,
	408, 479, 0, 216, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 458, 459, 245, 0,
	0, 211, 0, 0, 347, 354, 346, 0, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 268,
	287, 371, 315, 372, 288, 341, 340, 342, 317, 0,
	423, 318, 0, 206, 0, 422, 0, 0, 434, 226,
	0, 0, 449, 178, 379, 227, 278, 266, 370, 345,
	218, 290, 420, 306, 314, 0, 0, 358, 391, 233,
	464, 419, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 241, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 207, 219, 448, 232, 252,
	250, 267, 302, 328, 335, 364, 407, 413, 414, 438,
	439, 440, 442, 255, 331, 259, 231, 385, 230, 316,
	293, 366, 446, 447, 375, 247, 0, 199, 212, 310,
	0, 382, 275, 334, 411, 336, 297, 246, 477, 339,
	381, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	251, 0, 0, 0, 213, 223, 236, 249, 264, 0,
	274, 286, 289, 294, 295, 299, 304, 322, 323, 324,
	325, 348, 349, 352, 353, 356, 357, 361, 362, 363,
	368, 369, 377, 184, 386, 397, 399, 400, 401, 402,
	412, 415, 416, 456, 457, 473, 474, 443, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 257, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 472, 190,
	0, 312, 0, 491, 470, 421, 337, 494, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3432, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 0,
	0, 374, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 300, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 195, 0,
	0, 0, 351, 0, 0, 177, 198, 311, 0, 0,
	0, 244, 0, 390, 0, 462, 490, 277, 0, 389,
	313, 455, 0, 0, 461, 0, 437, 471, 476, 270,
	0, 234, 418, 260, 253, 0, 0, 0, 283, 373,
	248, 305, 0, 0, 0, 240, 0, 0, 0, 417,
	452, 200, 332, 453, 475, 166, 271, 409, 272, 436,
	263, 235, 376, 214, 303, 0, 0, 254, 298, 0,
	0, 478, 469, 225, 273, 384, 388, 365, 221, 444,
	333, 343, 237, 239, 238, 215, 410, 451, 228, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	284, 0, 0, 0, 359, 224, 0, 0, 0, 0,
	465, 0, 256, 0, 467, 180, 404, 403, 0, 291,
	0, 181, 170, 383, 182, 301, 204, 0, 480, 220,
	307, 445, 489, 276, 350, 0, 360, 197, 378, 327,
	329, 326, 330, 281, 175, 183, 0, 380, 406, 450,
	222, 424, 173, 176, 185, 396, 186, 187, 0, 320,
	265, 269, 285, 296, 0, 387, 425, 468, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 426, 441, 398, 279, 319, 321, 428, 433, 429,
	430, 427, 432, 431, 394, 395, 208, 435, 460, 229,
	405, 408, 479, 0, 216, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 458, 459, 245,
	0, 0, 211, 0, 0, 347, 354, 346, 0, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	268, 287, 371, 315, 372, 288, 341, 340, 342, 317,
	0, 423, 318, 0, 206, 0, 422, 0, 0, 434,
	226, 0, 0, 449, 178, 379, 227, 278, 266, 370,
	345, 218, 290, 420, 306, 314, 0, 0, 358, 391,
	233, 464, 419, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 241, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 207, 219, 448, 232,
	252, 250, 267, 302, 328, 335, 364, 407, 413, 414,
	438, 439, 440, 442, 255, 331, 259, 231, 385, 230,
	316, 293, 366, 446, 447, 375, 247, 0, 199, 212,
	310, 0, 382, 275, 334, 411, 336, 297, 246, 477,
	339, 381, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 251, 0, 0, 0, 213, 223, 236, 249, 264,
	0, 274, 286, 289, 294, 295, 299, 304, 322, 323,
	324, 325, 348, 349, 352, 353, 356, 357, 361, 362,
	363, 368, 369, 377, 184, 386, 397, 399, 400, 401,
	402, 412, 415, 416, 456, 457, 473, 474, 443, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 257, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 472,
	190, 0, 312, 0, 491, 470, 421, 337, 494, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 0,
	0, 0, 374, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 300, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 195,
	0, 0, 0, 351, 0, 0, 177, 198, 311, 0,
	0, 0, 244, 0, 390, 0, 462, 490, 277, 0,
	389, 313, 455, 0, 0, 461, 0, 437, 471, 476,
	270, 0, 234, 418, 260, 253, 0, 0, 0, 283,
	373, 248, 305, 0, 0, 0, 240, 0, 0, 0,
	417, 452, 200, 332, 453, 475, 166, 271, 409, 272,
	436, 263, 235, 376, 214, 303, 0, 0, 254, 298,
	0, 0, 478, 469, 225, 273, 384, 388, 365, 221,
	444, 333, 343, 237, 239, 238, 215, 410, 451, 228,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 284, 0, 0, 0, 359, 224, 0, 0, 0,
	0, 465, 0, 256, 0, 467, 180, 404, 403, 0,
	291, 0, 181, 170, 383, 182, 301, 204, 0, 480,
	220, 307, 445, 489, 276, 350, 0, 360, 197, 378,
	327, 329, 326, 330, 281, 175, 183, 0, 380, 406,
	450, 222, 424, 173, 176, 185, 396, 186, 187, 0,
	320, 265, 269, 285, 296, 0, 387, 425, 468, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 426, 441, 398, 279, 319, 321, 428, 433,
	429, 430, 427, 432, 431, 394, 395, 208, 435, 460,
	229, 405, 408, 479, 0, 216, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 458, 459,
	245, 0, 0, 211, 0, 0, 347, 354, 346, 0,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 268, 287, 371, 315, 372, 288, 341, 340, 342,
	317, 0, 423, 318, 0, 206, 0, 422, 0, 0,
	434, 226, 0, 0, 449, 178, 379, 227, 278, 266,
	370, 345, 218, 290, 420, 306, 314, 0, 0, 358,
	391, 233, 464, 419, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 241, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 207, 219, 448,
	232, 252, 250, 267, 302, 328, 335, 364, 407, 413,
	414, 438, 439, 440, 442, 255, 331, 259, 231, 385,
	230, 316, 293, 366, 446, 447, 375, 247, 0, 199,
	212, 310, 0, 382, 275, 334, 411, 336, 297, 246,
	477, 339, 381, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 251, 0, 0, 0, 213, 223, 236, 249,
	264, 0, 274, 286, 289, 294, 295, 299, 304, 322,
	323, 324, 325, 348, 349, 352, 353, 356, 357, 361,
	362, 363, 368, 369, 377, 184, 386, 397, 399, 400,
	401, 402, 412, 415, 416, 456, 457, 473, 474, 443,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 257, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	472, 190, 0, 312, 0, 491, 470, 421, 337, 494,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 0, 0, 374, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 300, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	195, 0, 0, 0, 351, 0, 0, 177, 198, 311,
	0, 0, 0, 244, 0, 390, 0, 462, 490, 277,
	0, 389, 313, 455, 0, 0, 461, 0, 437, 471,
	476, 270, 0, 234, 418, 260, 253, 0, 0, 0,
	283, 373, 248, 305, 0, 0, 0, 240, 0, 0,
	0, 417, 452, 200, 332, 453, 475, 166, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 284, 0, 0, 0, 359, 224, 0, 0,
	0, 0, 465, 0, 256, 0, 467, 180, 404, 403,
	0, 291, 0, 181, 170, 383, 182, 301, 204, 0,
	480, 220, 307, 445, 489, 276, 350, 0, 360, 197,
	378, 327, 329, 326, 330, 281, 175, 183, 0, 380,
	406, 450, 222, 424, 173, 176, 185, 396, 186, 187,
	0, 320, 265, 269, 285, 296, 0, 387, 425, 468,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	460, 229, 405, 408, 479, 0, 216, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 458,
	459, 245, 0, 0, 211, 0, 0, 347, 354, 346,
	0, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 0, 423, 318, 0, 206, 0, 422, 0,
	0, 434, 226, 0, 0, 449, 178, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 0, 0,
	358, 391, 233, 464, 419, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 241, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 0,
	199, 212, 310, 0, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 251, 0, 0, 0, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 184, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	443, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 257, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 472, 190, 0, 312, 0, 491, 470, 421, 337,
	494, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 0, 374, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 300,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 195, 0, 0, 0, 351, 0, 0, 177, 198,
	311, 0, 0, 0, 244, 0, 390, 0, 462, 490,
	277, 0, 389, 313, 455, 0, 0, 461, 0, 437,
	471, 476, 270, 0, 234, 418, 260, 253, 0, 0,
	0, 283, 373, 248, 305, 0, 0, 0, 240, 0,
	0, 0, 417, 452, 200, 332, 453, 475, 166, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 284, 0, 0, 0, 359, 224, 0,
	0, 0, 0, 465, 0, 256, 0, 467, 180, 404,
	403, 0, 291, 0, 181, 170, 383, 182, 301, 204,
	0, 480, 220, 307, 445, 489, 276, 350, 0, 360,
	197, 378, 327, 329, 326, 330, 281, 175, 183, 0,
	380, 406, 450, 222, 424, 173, 176, 185, 396, 186,
	187, 0, 320, 265, 269, 285, 296, 0, 387, 425,
	468, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 0, 216, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	458, 459, 245, 0, 0, 211, 0, 0, 347, 354,
	346, 0, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 317, 0, 423, 318, 0, 206, 0, 422,
	0, 0, 434, 226, 0, 0, 449, 178, 379, 227,
	278, 266, 370, 345, 218, 290, 420, 306, 314, 0,
	0, 358, 391, 233, 464, 419, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 241, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	0, 199, 212, 310, 0, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 251, 0, 0, 0, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 368, 369, 377, 184, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 443, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 257,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 472, 190, 0, 312, 0, 0, 470, 421,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 0, 0, 0, 0, 374, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 0, 338, 0, 0, 0, 0,
	300, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 195, 0, 0, 0, 351, 0, 0, 177,
	198, 311, 0, 0, 0, 244, 0, 390, 0, 462,
	541, 538, 0, 389, 313, 455, 0, 0, 461, 0,
	437, 471, 476, 270, 0, 234, 418, 260, 253, 0,
	0, 0, 283, 373, 248, 305, 0, 0, 0, 240,
	0, 0, 0, 417, 452, 200, 332, 453, 475, 166,
	271, 409, 272, 436, 263, 235, 376, 214, 303, 0,
	0, 254, 298, 0, 0, 478, 469, 225, 273, 384,
	388, 365, 221, 444, 333, 343, 237, 239, 238, 215,
	410, 451, 228, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 284, 0, 0, 0, 359, 224,
	0, 0, 0, 0, 465, 0, 256, 0, 467, 180,
	404, 403, 0, 291, 0, 181, 170, 383, 182, 301,
	204, 0, 480, 220, 307, 445, 161, 276, 350, 0,
	360, 197, 378, 327, 329, 326, 330, 281, 175, 183,
	0, 380, 406, 450, 222, 424, 173, 176, 185, 396,
	186, 187, 0, 320, 265, 269, 285, 296, 0, 387,
	425, 468, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 426, 441, 398, 279, 319,
	321, 428, 433, 429, 430, 427, 432, 431, 394, 395,
	208, 435, 460, 229, 405, 408, 479, 0, 216, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 458, 459, 245, 0, 0, 211, 0, 0, 347,
	354, 346, 0, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 268, 287, 371, 315, 372, 288,
	341, 340, 342, 317, 0, 423, 318, 0, 206, 0,
	422, 0, 0, 434, 226, 0, 0, 449, 178, 379,
	227, 278, 266, 370, 345, 218, 290, 420, 306, 314,
	0, 0, 358, 391, 233, 464, 419, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 241, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	207, 219, 448, 232, 252, 250, 267, 302, 328, 335,
	364, 407, 413, 414, 438, 439, 440, 442, 255, 331,
	259, 231, 385, 230, 316, 293, 366, 446, 447, 375,
	247, 0, 199, 212, 310, 0, 382, 275, 334, 411,
	336, 297, 246, 477, 339, 381, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 251, 0, 0, 0, 213,
	223, 236, 249, 264, 0, 274, 286, 289, 294, 295,
	299, 304, 322, 323, 324, 325, 348, 349, 352, 353,
	356, 357, 361, 362, 363, 368, 369, 377, 184, 386,
	397, 399, 400, 401, 402, 412, 415, 416, 456, 457,
	473, 474, 443, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	257, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 472, 190, 0, 312, 0, 491, 470,
	421, 337, 494, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 0, 0, 0, 0, 374, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 300, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 195, 0, 0, 0, 351, 0, 0,
	177, 198, 311, 0, 0, 0, 244, 0, 390, 0,
	462, 490, 277, 0, 389, 313, 455, 0, 0, 461,
	0, 437, 471, 476, 270, 0, 234, 418, 260, 253,
	0, 0, 0, 283, 373, 248, 305, 0, 0, 0,
	240, 0, 0, 0, 417, 452, 200, 332, 453, 475,
	166, 271, 409, 272, 436, 263, 235, 376, 214, 303,
	0, 0, 254, 298, 0, 0, 478, 469, 225, 273,
	384, 388, 365, 221, 444, 333, 343, 237, 239, 238,
	215, 410, 451, 228, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 284, 0, 0, 0, 359,
	224, 0, 0, 0, 0, 465, 0, 256, 0, 467,
	180, 404, 403, 0, 291, 0, 181, 170, 383, 182,
	301, 204, 0, 480, 220, 307, 445, 489, 276, 350,
	0, 360, 197, 378, 327, 329, 326, 330, 281, 175,
	183, 0, 380, 406, 450, 222, 424, 173, 176, 185,
	396, 186, 187, 0, 320, 265, 269, 285, 296, 0,
	387, 425, 468, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 426, 441, 398, 279,
	319, 321, 428, 433, 429, 430, 427, 432, 431, 394,
	395, 208, 435, 460, 229, 405, 408, 479, 0, 216,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 458, 459, 245, 0, 0, 211, 0, 0,
	347, 354, 346, 0, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 268, 287, 371, 315, 372,
	288, 341, 340, 342, 317, 0, 423, 318, 0, 206,
	0, 422, 0, 0, 434, 226, 0, 0, 449, 178,
	379, 227, 278, 266, 370, 345, 218, 290, 420, 306,
	314, 0, 0, 358, 391, 233, 464, 419, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 241,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 207, 219, 448, 232, 252, 250, 267, 302, 328,
	335, 364, 407, 413, 414, 438, 439, 440, 442, 255,
	331, 259, 231, 385, 230, 316, 293, 366, 446, 447,
	375, 247, 0, 199, 212, 310, 0, 382, 275, 334,
	411, 336, 297, 246, 477, 339, 381, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 251, 0, 0, 0,
	213, 223, 236, 249, 264, 0, 274, 286, 289, 294,
	295, 299, 304, 322, 323, 324, 325, 348, 349, 352,
	353, 356, 357, 361, 362, 363, 368, 369, 377, 184,
	386, 397, 399, 400, 401, 402, 412, 415, 416, 456,
	457, 473, 474, 443, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 257, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 472, 190, 0, 312, 0, 0,
	470, 421, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 0, 0, 0, 0, 374, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 300, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 195, 0, 0, 0, 351, 0,
	0, 177, 198, 311, 0, 0, 0, 244, 0, 390,
	0, 462, 2521, 277, 0, 389, 313, 455, 0, 0,
	461, 0, 437, 471, 476, 270, 0, 234, 418, 260,
	253, 0, 0, 0, 283, 373, 248, 305, 0, 0,
	0, 240, 0, 0, 0, 417, 452, 200, 332, 453,
	475, 166, 271, 409, 272, 436, 263, 235, 376, 214,
	303, 0, 0, 254, 298, 0, 0, 478, 469, 225,
	273, 384, 388, 365, 221, 444, 333, 343, 237, 239,
	238, 215, 410, 451, 228, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 284, 0, 0, 0,
	359, 224, 0, 0, 0, 0, 465, 0, 256, 0,
	467, 180, 404, 403, 0, 291, 0, 181, 170, 383,
	182, 301, 204, 0, 480, 220, 307, 445, 161, 276,
	350, 0, 360, 197, 378, 327, 329, 326, 330, 281,
	175, 183, 0, 380, 406, 450, 222, 424, 173, 176,
	185, 396, 186, 187, 0, 320, 265, 269, 285, 296,
	0, 387, 425, 468, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 426, 441, 398,
	279, 319, 321, 428, 433, 429, 430, 427, 432, 431,
	394, 395, 208, 435, 460, 229, 405, 408, 479, 0,
	216, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 458, 459, 245, 0, 0, 211, 0,
	0, 347, 354, 346, 0, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 268, 287, 371, 315,
	372, 288, 341, 340, 342, 317, 0, 423, 318, 0,
	206, 0, 422, 0, 0, 434, 226, 0, 0, 449,
	178, 379, 227, 278, 266, 370, 345, 218, 290, 420,
	306, 314, 0, 0, 358, 391, 233, 464, 419, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	241, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 207, 219, 448, 232, 252, 250, 267, 302,
	328, 335, 364, 407, 413, 414, 438, 439, 440, 442,
	255, 331, 259, 231, 385, 230, 316, 293, 366, 446,
	447, 375, 247, 0, 199, 212, 310, 0, 382, 275,
	334, 411, 336, 297, 246, 477, 339, 381, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 251, 0, 0,
	0, 213, 223, 236, 249, 264, 0, 274, 286, 289,
	294, 295, 299, 304, 322, 323, 324, 325, 348, 349,
	352, 353, 356, 357, 361, 362, 363, 368, 369, 377,
	184, 386, 397, 399, 400, 401, 402, 412, 415, 416,
	456, 457, 473, 474, 443, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 257, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 472, 190, 0, 312, 0,
	0, 470, 421, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 2407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 0, 0, 374, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 300, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 195, 0, 0, 0, 351,
	0, 0, 177, 198, 311, 0, 0, 0, 244, 0,
	390, 0, 462, 0, 277, 0, 389, 313, 455, 0,
	0, 461, 0, 437, 471, 476, 270, 0, 234, 418,
	260, 253, 0, 0, 0, 283, 373, 248, 305, 0,
	0, 0, 240, 0, 0, 0, 417, 452, 200, 332,
	453, 475, 166, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 284, 0, 0,
	0, 359, 224, 0, 0, 0, 0, 465, 0, 256,
	0, 467, 180, 404, 403, 0, 291, 0, 181, 170,
	383, 182, 301, 204, 0, 480, 220, 307, 445, 161,
	276, 350, 0, 360, 197, 378, 327, 329, 326, 330,
	281, 175, 183, 0, 380, 406, 450, 222, 424, 173,
	176, 185, 396, 186, 187, 0, 320, 265, 269, 285,
	296, 0, 387, 425, 468, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	0, 216, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 458, 459, 245, 0, 0, 211,
	0, 0, 347, 354, 346, 0, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 0, 423, 318,
	0, 206, 0, 422, 0, 0, 434, 226, 0, 0,
	449, 178, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 0, 0, 358, 391, 233, 464, 419,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 241, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 0, 199, 212, 310, 0, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 251, 0,
	0, 0, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 184, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 0, 196, 0, 0, 202,
	0, 203, 205, 443, 201, 0, 0, 1600, 0, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 257, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 472, 190, 0, 312, 0, 0,
	470, 421, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 0, 0, 0, 0, 374, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 300, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 195, 0, 0, 0, 351, 0,
	0, 177, 198, 311, 0, 0, 0, 244, 0, 390,
	0, 462, 0, 277, 0, 389, 313, 455, 0, 0,
	461, 0, 437, 471, 476, 270, 0, 234, 418, 260,
	253, 0, 0, 0, 283, 373, 248, 305, 0, 0,
	0, 240, 0, 0, 0, 417, 452, 200, 332, 453,
	475, 166, 271, 409, 272, 436, 263, 235, 376, 214,
	303, 0, 0, 254, 298, 0, 0, 478, 469, 225,
	273, 384, 388, 365, 221, 444, 333, 343, 237, 239,
	238, 215, 410, 451, 228, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 284, 0, 0, 0,
	359, 224, 0, 0, 0, 0, 465, 0, 256, 0,
	467, 180, 404, 403, 0, 291, 0, 181, 170, 383,
	182, 301, 204, 0, 480, 220, 307, 445, 161, 276,
	350, 0, 360, 197, 378, 327, 329, 326, 330, 281,
	175, 183, 0, 380, 406, 450, 222, 424, 173, 176,
	185, 396, 186, 187, 0, 320, 265, 269, 285, 296,
	0, 387, 425, 468, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 426, 441, 398,
	279, 319, 321, 428, 433, 429, 430, 427, 432, 431,
	394, 395, 208, 435, 460, 229, 405, 408, 479, 0,
	216, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 458, 459, 245, 0, 0, 211, 0,
	0, 347, 354, 346, 0, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 268, 287, 371, 315,
	372, 288, 341, 340, 342, 317, 0, 423, 318, 0,
	206, 0, 422, 0, 0, 434, 226, 0, 0, 449,
	178, 379, 227, 278, 266, 370, 345, 218, 290, 420,
	306, 314, 0, 0, 358, 391, 233, 464, 419, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	241, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 207, 219, 448, 232, 252, 250, 267, 302,
	328, 335, 364, 407, 413, 414, 438, 439, 440, 442,
	255, 331, 259, 231, 385, 230, 316, 293, 366, 446,
	447, 375, 247, 0, 199, 212, 310, 0, 382, 275,
	334, 411, 336, 297, 246, 477, 339, 381, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 251, 0, 0,
	0, 213, 223, 236, 249, 264, 0, 274, 286, 289,
	294, 295, 299, 304, 322, 323, 324, 325, 348, 349,
	352, 353, 356, 357, 361, 362, 363, 368, 369, 377,
	184, 386, 397, 399, 400, 401, 402, 412, 415, 416,
	456, 457, 473, 474, 443, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 257, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 472, 190, 0, 312, 0,
	0, 470, 421, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 0, 0, 374, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 155, 0, 300, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 195, 0, 0, 0, 351,
	0, 0, 177, 198, 311, 0, 0, 0, 244, 0,
	390, 0, 462, 0, 277, 0, 389, 313, 455, 0,
	0, 461, 0, 437, 471, 476, 270, 0, 234, 418,
	260, 253, 0, 0, 0, 283, 373, 248, 305, 0,
	0, 0, 240, 0, 0, 0, 417, 452, 200, 332,
	453, 475, 166, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 284, 0, 0,
	0, 359, 224, 0, 0, 0, 0, 465, 0, 256,
	0, 467, 180, 404, 403, 0, 291, 0, 181, 170,
	383, 182, 301, 204, 0, 480, 220, 307, 445, 161,
	276, 350, 0, 360, 197, 378, 327, 329, 326, 330,
	281, 175, 183, 0, 380, 406, 450, 222, 424, 173,
	176, 185, 396, 186, 187, 0, 320, 265, 269, 285,
	296, 0, 387, 425, 468, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	0, 216, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 458, 459, 245, 0, 0, 211,
	0, 0, 347, 354, 346, 0, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 0, 423, 318,
	0, 206, 0, 422, 0, 0, 434, 226, 0, 0,
	449, 178, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 0, 0, 358, 391, 233, 464, 419,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 241, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 0, 199, 212, 310, 0, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 251, 0,
	0, 0, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 184, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 443, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 257, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 472, 190, 0, 312,
	0, 0, 470, 421, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 0, 0, 374,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 300, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 195, 0, 0, 0,
	351, 0, 0, 177, 198, 311, 0, 0, 0, 244,
	0, 390, 0, 462, 0, 277, 0, 389, 313, 455,
	0, 0, 461, 0, 437, 471, 476, 270, 0, 234,
	418, 260, 253, 0, 0, 0, 283, 373, 248, 305,
	0, 0, 0, 240, 0, 0, 0, 417, 452, 200,
	332, 453, 475, 166, 271, 409, 272, 436, 263, 235,
	376, 214, 303, 0, 0, 254, 298, 0, 0, 478,
	469, 225, 273, 384, 388, 365, 221, 444, 333, 343,
	237, 239, 238, 215, 410, 451, 228, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 284, 0,
	0, 0, 359, 224, 0, 0, 0, 0, 465, 0,
	256, 0, 467, 180, 404, 403, 0, 291, 0, 181,
	170, 383, 182, 301, 204, 0, 480, 220, 307, 445,
	161, 276, 350, 0, 360, 197, 378, 327, 329, 326,
	330, 281, 175, 183, 0, 380, 406, 450, 222, 424,
	173, 176, 185, 396, 186, 187, 0, 320, 265, 269,
	285, 296, 0, 387, 425, 468, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 426,
	441, 398, 279, 319, 321, 428, 433, 429, 430, 427,
	432, 431, 394, 395, 208, 435, 460, 229, 405, 408,
	479, 0, 216, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 458, 459, 245, 0, 0,
	211, 0, 0, 347, 354, 346, 0, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 268, 287,
	371, 315, 372, 288, 341, 340, 342, 317, 0, 423,
	318, 0, 206, 0, 422, 0, 0, 434, 226, 0,
	0, 449, 178, 379, 227, 278, 266, 370, 345, 218,
	290, 420, 306, 314, 0, 0, 358, 391, 233, 464,
	419, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 241, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 207, 219, 448, 232, 252, 250,
	267, 302, 328, 335, 364, 407, 413, 414, 438, 439,
	440, 442, 255, 331, 259, 231, 385, 230, 316, 293,
	366, 446, 447, 375, 247, 0, 199, 212, 310, 0,
	382, 275, 334, 411, 336, 297, 246, 477, 339, 381,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 466, 251,
	0, 0, 0, 213, 223, 236, 249, 264, 0, 274,
	286, 289, 294, 295, 299, 304, 322, 323, 324, 325,
	348, 349, 352, 353, 356, 357, 361, 362, 363, 368,
	369, 377, 184, 386, 397, 399, 400, 401, 402, 412,
	415, 416, 456, 457, 473, 474, 443, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 257, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 0, 0,
	312, 0, 0, 470, 421, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 0, 0,
	374, 282, 1483, 1482, 1492, 1493, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1484, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 195, 0, 0,
	0, 351, 0, 0, 0, 198, 311, 0, 0, 0,
	244, 0, 390, 0, 462, 0, 277, 0, 389, 313,
	455, 0, 0, 461, 0, 437, 471, 476, 270, 0,
	234, 418, 260, 253, 0, 0, 0, 283, 373, 248,
	305, 0, 0, 0, 240, 0, 0, 0, 417, 452,
	200, 332, 453, 475, 0, 271, 409, 272, 436, 263,
	235, 376, 214, 303, 0, 0, 254, 298, 0, 0,
	478, 469, 225, 273, 384, 388, 365, 221, 444, 333,
	343, 237, 239, 238, 215, 410, 451, 228, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 284,
	0, 0, 0, 359, 224, 0, 0, 0, 0, 465,
	0, 256, 0, 467, 0, 404, 403, 0, 291, 0,
	0, 0, 383, 0, 301, 204, 0, 480, 220, 307,
	445, 0, 276, 350, 0, 360, 197, 378, 327, 329,
	326, 330, 281, 0, 0, 0, 380, 406, 450, 222,
	424, 0, 0, 0, 396, 0, 0, 0, 320, 265,
	269, 285, 296, 0, 387, 425, 468, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	426, 441, 398, 279, 319, 321, 428, 433, 429, 430,
	427, 432, 431, 394, 395, 208, 435, 460, 229, 405,
	408, 479, 0, 216, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 458, 459, 245, 0,
	0, 211, 0, 0, 347, 354, 346, 0, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 268,
	287, 371, 315, 372, 288, 341, 340, 342, 317, 0,
	423, 318, 0, 206, 0, 422, 0, 0, 434, 226,
	0, 0, 449, 0, 379, 227, 278, 266, 370, 345,
	218, 290, 420, 306, 314, 0, 0, 358, 391, 233,
	464, 419, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 207, 219, 448, 232, 252,
	250, 267, 302, 328, 335, 364, 407, 413, 414, 438,
	439, 440, 442, 255, 331, 259, 231, 385, 230, 316,
	293, 366, 446, 447, 375, 247, 0, 199, 212, 310,
	0, 382, 275, 334, 411, 336, 297, 246, 477, 339,
	381, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	251, 0, 0, 0, 213, 223, 236, 249, 264, 0,
	274, 286, 289, 294, 295, 299, 304, 322, 323, 324,
	325, 348, 349, 352, 353, 356, 357, 361, 362, 363,
	368, 369, 377, 0, 386, 397, 399, 400, 401, 402,
	412, 415, 416, 456, 457, 473, 474, 443, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 257, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 0,
	0, 312, 0, 0, 470, 421, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 1156, 726, 728,
	729, 730, 731, 0, 0, 0, 727, 2298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 0,
	0, 374, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 195, 0,
	0, 0, 351, 0, 0, 0, 198, 311, 0, 0,
	0, 722, 0, 390, 0, 462, 0, 277, 0, 389,
	313, 455, 0, 0, 461, 0, 437, 471, 476, 270,
	0, 234, 418, 260, 253, 0, 0, 0, 283, 373,
	248, 305, 0, 0, 0, 240, 0, 0, 0, 417,
	452, 200, 332, 453, 475, 0, 271, 409, 272, 436,
	263, 235, 376, 214, 303, 0, 0, 254, 298, 0,
	0, 478, 469, 225, 273, 384, 388, 365, 221, 444,
	333, 343, 237, 239, 238, 215, 410, 451, 228, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	284, 0, 0, 0, 359, 224, 0, 0, 0, 0,
	465, 0, 256, 0, 467, 0, 404, 403, 0, 291,
	0, 0, 0, 383, 0, 301, 204, 0, 480, 220,
	307, 445, 0, 276, 350, 0, 360, 197, 378, 327,
	329, 326, 330, 281, 0, 0, 0, 380, 406, 450,
	222, 424, 0, 0, 0, 396, 0, 0, 0, 320,
	265, 269, 285, 296, 0, 387, 425, 468, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 426, 441, 398, 279, 319, 321, 428, 433, 429,
	430, 427, 432, 431, 394, 395, 208, 435, 460, 229,
	405, 408, 479, 0, 216, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 723, 724, 245,
	0, 0, 211, 0, 0, 347, 354, 346, 0, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	268, 287, 371, 315, 372, 288, 341, 340, 342, 317,
	0, 423, 318, 0, 206, 0, 422, 0, 0, 434,
	226, 0, 0, 449, 0, 379, 227, 278, 266, 370,
	345, 218, 290, 420, 306, 314, 0, 0, 358, 391,
	233, 464, 419, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 207, 219, 448, 232,
	252, 250, 267, 302, 328, 335, 364, 407, 413, 414,
	438, 439, 440, 442, 255, 331, 259, 231, 385, 230,
	316, 293, 366, 446, 447, 375, 247, 0, 199, 212,
	310, 0, 382, 275, 334, 411, 336, 297, 246, 477,
	339, 381, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 251, 0, 0, 0, 213, 223, 236, 249, 264,
	0, 274, 286, 289, 294, 295, 299, 304, 322, 323,
	324, 325, 348, 349, 352, 353, 356, 357, 361, 362,
	363, 368, 369, 377, 0, 386, 397, 399, 400, 401,
	402, 412, 415, 416, 456, 457, 473, 474, 443, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 257, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	0, 0, 312, 0, 0, 470, 421, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 0,
	0, 0, 374, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 195,
	0, 0, 0, 351, 0, 0, 0, 198, 311, 0,
	0, 0, 244, 0, 390, 0, 462, 0, 277, 0,
	389, 313, 455, 0, 0, 461, 0, 437, 471, 476,
	270, 0, 234, 418, 260, 253, 0, 0, 0, 283,
	373, 248, 305, 0, 0, 0, 240, 0, 0, 0,
	417, 452, 200, 332, 453, 475, 166, 271, 409, 272,
	436, 263, 235, 376, 214, 303, 0, 0, 254, 298,
	0, 0, 478, 469, 225, 273, 384, 388, 365, 221,
	444, 333, 343, 237, 239, 238, 215, 410, 451, 228,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 284, 0, 0, 0, 359, 224, 0, 0, 0,
	0, 465, 0, 256, 0, 467, 0, 404, 403, 0,
	291, 0, 0, 0, 383, 0, 301, 204, 0, 480,
	220, 307, 445, 0, 276, 350, 0, 360, 197, 378,
	327, 329, 326, 330, 281, 0, 0, 0, 380, 406,
	450, 222, 424, 0, 0, 0, 396, 0, 0, 0,
	320, 265, 269, 285, 296, 0, 387, 425, 468, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 426, 441, 398, 279, 319, 321, 428, 433,
	429, 430, 427, 432, 431, 394, 395, 208, 435, 460,
	229, 405, 408, 479, 0, 216, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 458, 459,
	245, 0, 0, 211, 0, 0, 347, 354, 346, 0,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 268, 287, 371, 315, 372, 288, 341, 340, 342,
	317, 0, 423, 318, 0, 206, 0, 422, 0, 0,
	434, 226, 0, 0, 449, 0, 379, 227, 278, 266,
	370, 345, 218, 290, 420, 306, 314, 0, 0, 358,
	391, 233, 464, 419, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 207, 219, 448,
	232, 252, 250, 267, 302, 328, 335, 364, 407, 413,
	414, 438, 439, 440, 442, 255, 331, 259, 231, 385,
	230, 316, 293, 366, 446, 447, 375, 247, 0, 199,
	212, 310, 0, 382, 275, 334, 411, 336, 297, 246,
	477, 339, 381, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 251, 0, 0, 648, 213, 223, 236, 249,
	264, 0, 274, 286, 289, 294, 295, 299, 304, 322,
	323, 324, 325, 348, 349, 352, 353, 356, 357, 361,
	362, 363, 368, 369, 377, 0, 386, 397, 399, 400,
	401, 402, 412, 415, 416, 456, 457, 473, 474, 443,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 257, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 0, 0, 312, 0, 0, 470, 421, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 0, 0, 374, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	195, 0, 0, 0, 351, 0, 0, 0, 198, 311,
	0, 0, 0, 244, 0, 390, 0, 462, 0, 277,
	0, 389, 313, 455, 0, 0, 461, 0, 437, 471,
	476, 270, 0, 234, 418, 260, 253, 0, 0, 0,
	283, 373, 248, 305, 0, 0, 0, 240, 0, 0,
	0, 417, 452, 200, 332, 453, 475, 166, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 284, 0, 0, 0, 359, 224, 0, 0,
	0, 0, 465, 0, 256, 0, 467, 0, 404, 403,
	0, 291, 0, 0, 0, 383, 0, 301, 204, 0,
	480, 220, 307, 445, 0, 276, 350, 0, 360, 197,
	378, 327, 329, 326, 330, 281, 0, 0, 0, 380,
	406, 450, 222, 424, 0, 0, 0, 396, 0, 0,
	0, 320, 265, 269, 285, 296, 0, 387, 425, 468,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	460, 229, 405, 408, 479, 0, 216, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 458,
	459, 245, 0, 0, 211, 0, 0, 347, 354, 346,
	0, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 0, 423, 318, 0, 206, 0, 422, 0,
	0, 434, 226, 0, 0, 449, 0, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 0, 0,
	358, 391, 233, 464, 419, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 0,
	199, 212, 310, 0, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 251, 0, 0, 0, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 0, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	443, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 355, 0, 0, 4372, 0, 0, 0, 0, 0,
	258, 4370, 0, 0, 0, 0, 0, 0, 257, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 312, 0, 0, 470, 421, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 0, 374, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 195, 0, 0, 0, 351, 0, 0, 0, 198,
	311, 0, 0, 0, 244, 0, 390, 0, 462, 0,
	277, 0, 389, 313, 455, 0, 0, 461, 0, 437,
	471, 476, 270, 0, 234, 418, 260, 253, 0, 0,
	0, 283, 373, 248, 305, 0, 0, 0, 240, 0,
	0, 0, 417, 452, 200, 332, 453, 475, 0, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 284, 0, 0, 0, 359, 224, 0,
	0, 0, 0, 465, 0, 256, 0, 467, 0, 404,
	403, 0, 291, 0, 4371, 0, 383, 0, 301, 204,
	0, 480, 220, 307, 445, 0, 276, 350, 0, 360,
	197, 378, 327, 329, 326, 330, 281, 0, 0, 0,
	380, 406, 450, 222, 424, 0, 0, 0, 396, 0,
	0, 0, 320, 265, 269, 285, 296, 0, 387, 425,
	468, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 0, 216, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	458, 459, 245, 0, 0, 211, 0, 0, 347, 354,
	346, 0, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 317, 0, 423, 318, 0, 206, 0, 422,
	0, 0, 434, 226, 0, 0, 449, 0, 379, 227,
	278, 266, 370, 345, 218, 290, 420, 306, 314, 0,
	0, 358, 391, 233, 464, 419, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	0, 199, 212, 310, 0, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 251, 0, 0, 0, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 368, 369, 377, 0, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 443, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 257,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 0, 0, 312, 0, 0, 470, 421,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2950, 0,
	463, 0, 0, 0, 0, 374, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 195, 0, 0, 0, 351, 0, 0, 0,
	198, 311, 0, 0, 0, 244, 0, 390, 0, 462,
	0, 277, 0, 389, 313, 455, 0, 0, 461, 0,
	437, 471, 476, 270, 0, 234, 418, 260, 253, 0,
	0, 0, 283, 373, 248, 305, 2951, 2952, 0, 240,
	0, 0, 0, 417, 452, 200, 332, 453, 475, 0,
	271, 409, 272, 436, 263, 235, 376, 214, 303, 0,
	0, 254, 298, 0, 0, 478, 469, 225, 273, 384,
	388, 365, 221, 444, 333, 343, 237, 239, 238, 215,
	410, 451, 228, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 284, 0, 0, 0, 359, 224,
	0, 0, 0, 0, 465, 0, 256, 0, 467, 0,
	404, 403, 0, 291, 0, 0, 0, 383, 0, 301,
	204, 0, 480, 220, 307, 445, 0, 276, 350, 0,
	360, 197, 378, 327, 329, 326, 330, 281, 0, 0,
	0, 380, 406, 450, 222, 424, 0, 0, 0, 396,
	0, 0, 0, 320, 265, 269, 285, 296, 0, 387,
	425, 468, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 426, 441, 398, 279, 319,
	321, 428, 433, 429, 430, 427, 432, 431, 394, 395,
	208, 435, 460, 229, 405, 408, 479, 0, 216, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 458, 459, 245, 0, 0, 211, 0, 0, 347,
	354, 346, 0, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 268, 287, 371, 315, 372, 288,
	341, 340, 342, 317, 0, 423, 318, 0, 206, 0,
	422, 0, 0, 434, 226, 0, 0, 449, 0, 379,
	227, 278, 266, 370, 345, 218, 290, 420, 306, 314,
	0, 0, 358, 391, 233, 464, 419, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	207, 219, 448, 232, 252, 250, 267, 302, 328, 335,
	364, 407, 413, 414, 438, 439, 440, 442, 255, 331,
	259, 231, 385, 230, 316, 293, 366, 446, 447, 375,
	247, 0, 199, 212, 310, 0, 382, 275, 334, 411,
	336, 297, 246, 477, 339, 381, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 251, 0, 0, 0, 213,
	223, 236, 249, 264, 0, 274, 286, 289, 294, 295,
	299, 304, 322, 323, 324, 325, 348, 349, 352, 353,
	356, 357, 361, 362, 363, 368, 369, 377, 0, 386,
	397, 399, 400, 401, 402, 412, 415, 416, 456, 457,
	473, 474, 443, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 1617, 0, 0, 0, 0, 0, 0,
	257, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 312, 0, 0, 470,
	421, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 1156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 0, 0, 0, 0, 374, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 195, 0, 0, 0, 351, 0, 0,
	0, 198, 311, 0, 0, 0, 244, 0, 390, 0,
	462, 0, 277, 0, 389, 313, 455, 0, 0, 461,
	0, 437, 471, 476, 270, 0, 234, 418, 260, 253,
	0, 0, 0, 283, 373, 248, 305, 0, 0, 0,
	240, 0, 0, 0, 417, 452, 200, 332, 453, 475,
	0, 271, 409, 272, 436, 263, 235, 376, 214, 303,
	0, 0, 254, 298, 0, 0, 478, 469, 225, 273,
	384, 388, 365, 221, 444, 333, 343, 237, 239, 238,
	215, 410, 451, 228, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 284, 0, 0, 0, 359,
	224, 0, 0, 0, 0, 465, 0, 256, 0, 467,
	0, 404, 403, 0, 291, 0, 0, 0, 383, 0,
	301, 204, 0, 480, 220, 307, 445, 0, 276, 350,
	0, 360, 197, 378, 327, 329, 326, 330, 281, 0,
	0, 0, 380, 406, 450, 222, 424, 0, 0, 0,
	396, 0, 0, 0, 320, 265, 269, 285, 296, 0,
	387, 425, 468, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 426, 441, 398, 279,
	319, 321, 428, 433, 429, 430, 427, 432, 431, 394,
	395, 208, 435, 460, 229, 405, 408, 479, 0, 216,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 458, 459, 245, 0, 0, 211, 0, 0,
	347, 354, 346, 0, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 268, 287, 371, 315, 372,
	288, 341, 340, 342, 317, 0, 423, 318, 0, 206,
	0, 422, 0, 0, 434, 226, 0, 0, 449, 0,
	379, 227, 278, 266, 370, 345, 218, 290, 420, 306,
	314, 0, 0, 358, 391, 233, 464, 419, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 207, 219, 448, 232, 252, 250, 267, 302, 328,
	335, 364, 407, 413, 414, 438, 439, 440, 442, 255,
	331, 259, 231, 385, 230, 316, 293, 366, 446, 447,
	375, 247, 0, 199, 212, 310, 0, 382, 275, 334,
	411, 336, 297, 246, 477, 339, 381, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 251, 0, 0, 0,
	213, 223, 236, 249, 264, 0, 274, 286, 289, 294,
	295, 299, 304, 322, 323, 324, 325, 348, 349, 352,
	353, 356, 357, 361, 362, 363, 368, 369, 377, 0,
	386, 397, 399, 400, 401, 402, 412, 415, 416, 456,
	457, 473, 474, 443, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 257, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 2451, 0, 0, 472, 0, 0, 312, 0, 0,
	470, 421, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 0, 0, 0, 0, 374, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 2450, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 195, 0, 0, 0, 351, 0,
	0, 0, 198, 311, 0, 0, 0, 244, 0, 390,
	0, 462, 0, 277, 0, 389, 313, 455, 0, 0,
	461, 0, 437, 471, 476, 270, 0, 234, 418, 260,
	253, 0, 0, 0, 283, 373, 248, 305, 0, 0,
	0, 240, 0, 0, 0, 417, 452, 200, 332, 453,
	475, 0, 271, 409, 272, 436, 263, 235, 376, 214,
	303, 0, 0, 254, 298, 0, 0, 478, 469, 225,
	273, 384, 388, 365, 221, 444, 333, 343, 237, 239,
	238, 215, 410, 451, 228, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 284, 0, 0, 0,
	359, 224, 0, 0, 0, 0, 465, 0, 256, 0,
	467, 0, 404, 403, 0, 291, 0, 0, 0, 383,
	0, 301, 204, 0, 480, 220, 307, 445, 0, 276,
	350, 0, 360, 197, 378, 327, 329, 326, 330, 281,
	0, 0, 0, 380, 406, 450, 222, 424, 0, 0,
	0, 396, 0, 0, 0, 320, 265, 269, 285, 296,
	0, 387, 425, 468, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 426, 441, 398,
	279, 319, 321, 428, 433, 429, 430, 427, 432, 431,
	394, 395, 208, 435, 460, 229, 405, 408, 479, 0,
	216, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 458, 459, 245, 0, 0, 211, 0,
	0, 347, 354, 346, 0, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 268, 287, 371, 315,
	372, 288, 341, 340, 342, 317, 0, 423, 318, 0,
	206, 0, 422, 0, 0, 434, 226, 0, 0, 449,
	0, 379, 227, 278, 266, 370, 345, 218, 290, 420,
	306, 314, 0, 0, 358, 391, 233, 464, 419, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 207, 219, 448, 232, 252, 250, 267, 302,
	328, 335, 364, 407, 413, 414, 438, 439, 440, 442,
	255, 331, 259, 231, 385, 230, 316, 293, 366, 446,
	447, 375, 247, 0, 199, 212, 310, 0, 382, 275,
	334, 411, 336, 297, 246, 477, 339, 381, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 251, 0, 0,
	0, 213, 223, 236, 249, 264, 0, 274, 286, 289,
	294, 295, 299, 304, 322, 323, 324, 325, 348, 349,
	352, 353, 356, 357, 361, 362, 363, 368, 369, 377,
	0, 386, 397, 399, 400, 401, 402, 412, 415, 416,
	456, 457, 473, 474, 443, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 257, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 0, 0, 312, 0,
	0, 470, 421, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 0, 0, 374, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 195, 0, 0, 0, 351,
	0, 0, 0, 198, 311, 0, 0, 0, 244, 0,
	390, 0, 462, 0, 277, 0, 389, 313, 455, 0,
	0, 461, 0, 437, 471, 476, 270, 0, 234, 418,
	260, 253, 0, 0, 0, 283, 373, 248, 305, 0,
	0, 0, 240, 0, 0, 0, 417, 452, 200, 332,
	453, 475, 0, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 284, 0, 0,
	0, 359, 224, 0, 0, 0, 0, 465, 0, 256,
	0, 467, 0, 404, 403, 0, 291, 0, 0, 0,
	383, 0, 301, 204, 0, 480, 220, 307, 445, 0,
	276, 350, 0, 360, 197, 378, 327, 329, 326, 330,
	281, 0, 0, 0, 380, 406, 450, 222, 424, 0,
	0, 0, 396, 0, 0, 0, 320, 265, 269, 285,
	296, 0, 387, 425, 468, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	0, 216, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 458, 459, 245, 0, 0, 211,
	0, 0, 347, 354, 346, 0, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 0, 423, 318,
	0, 206, 0, 422, 0, 0, 434, 226, 0, 0,
	449, 0, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 0, 0, 358, 391, 233, 464, 419,
	261, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 0, 199, 212, 310, 0, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 251, 0,
	0, 0, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 0, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 443, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 257, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 0, 0, 312,
	0, 0, 470, 421, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 0, 0, 374,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 195, 0, 0, 0,
	351, 0, 0, 0, 198, 311, 0, 0, 0, 244,
	0, 390, 0, 462, 0, 277, 0, 389, 313, 455,
	0, 0, 461, 0, 437, 471, 476, 270, 0, 234,
	418, 260, 253, 0, 0, 0, 283, 373, 248, 305,
	0, 0, 0, 240, 0, 0, 0, 417, 452, 200,
	332, 453, 475, 0, 271, 409, 272, 436, 263, 235,
	376, 214, 303, 0, 0, 254, 298, 0, 0, 478,
	469, 225, 273, 384, 388, 365, 221, 444, 333, 343,
	237, 239, 238, 215, 410, 451, 228, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 284, 0,
	0, 0, 359, 224, 0, 0, 0, 0, 465, 0,
	256, 0, 467, 0, 404, 403, 0, 291, 0, 0,
	0, 383, 0, 301, 204, 0, 480, 220, 307, 445,
	0, 276, 350, 0, 360, 197, 378, 327, 329, 326,
	330, 281, 0, 0, 0, 380, 406, 450, 222, 424,
	0, 0, 0, 396, 0, 0, 0, 320, 265, 269,
	285, 296, 0, 387, 425, 468, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 426,
	441, 398, 279, 319, 321, 428, 433, 429, 430, 427,
	432, 431, 394, 395, 208, 435, 460, 229, 405, 408,
	479, 0, 216, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 458, 459, 245, 0, 0,
	211, 0, 0, 347, 354, 346, 0, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 268, 287,
	371, 315, 372, 288, 341, 340, 342, 317, 0, 423,
	318, 0, 206, 0, 422, 0, 0, 434, 226, 0,
	0, 449, 0, 379, 227, 278, 266, 370, 345, 218,
	290, 420, 306, 314, 0, 0, 358, 391, 233, 464,
	419, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 207, 219, 448, 232, 252, 250,
	267, 302, 328, 335, 364, 407, 413, 414, 438, 439,
	440, 442, 255, 331, 259, 231, 385, 230, 316, 293,
	366, 446, 447, 375, 247, 0, 199, 212, 310, 0,
	382, 275, 334, 411, 336, 297, 246, 477, 339, 381,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 466, 251,
	0, 0, 0, 213, 223, 236, 249, 264, 0, 274,
	286, 289, 294, 295, 299, 304, 322, 323, 324, 325,
	348, 349, 352, 353, 356, 357, 361, 362, 363, 368,
	369, 377, 0, 386, 397, 399, 400, 401, 402, 412,
	415, 416, 456, 457, 473, 474, 443, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 355, 0, 0,
	3486, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 257, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 0, 0,
	312, 0, 0, 470, 421, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 0, 0,
	374, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 195, 0, 0,
	0, 351, 0, 0, 0, 198, 311, 0, 0, 0,
	244, 0, 390, 0, 462, 0, 277, 0, 389, 313,
	455, 0, 0, 461, 0, 437, 471, 476, 270, 0,
	234, 418, 260, 253, 0, 0, 0, 283, 373, 248,
	305, 0, 0, 0, 240, 0, 0, 0, 417, 452,
	200, 332, 453, 475, 0, 271, 409, 272, 436, 263,
	235, 376, 214, 303, 0, 0, 254, 298, 0, 0,
	478, 469, 225, 273, 384, 388, 365, 221, 444, 333,
	343, 237, 239, 238, 215, 410, 451, 228, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 284,
	0, 0, 0, 359, 224, 0, 0, 0, 0, 465,
	0, 256, 0, 467, 0, 404, 403, 0, 291, 0,
	0, 0, 383, 0, 301, 204, 0, 480, 220, 307,
	445, 0, 276, 350, 0, 360, 197, 378, 327, 329,
	326, 330, 281, 0, 0, 0, 380, 406, 450, 222,
	424, 0, 0, 0, 396, 0, 0, 0, 320, 265,
	269, 285, 296, 0, 387, 425, 468, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	426, 441, 398, 279, 319, 321, 428, 433, 429, 430,
	427, 432, 431, 394, 395, 208, 435, 460, 229, 405,
	408, 479, 0, 216, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 458, 459, 245, 0,
	0, 211, 0, 0, 347, 354, 346, 0, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 268,
	287, 371, 315, 372, 288, 341, 340, 342, 317, 0,
	423, 318, 0, 206, 0, 422, 0, 0, 434, 226,
	0, 0, 449, 0, 379, 227, 278, 266, 370, 345,
	218, 290, 420, 306, 314, 0, 0, 358, 391, 233,
	464, 419, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 207, 219, 448, 232, 252,
	250, 267, 302, 328, 335, 364, 407, 413, 414, 438,
	439, 440, 442, 255, 331, 259, 231, 385, 230, 316,
	293, 366, 446, 447, 375, 247, 0, 199, 212, 310,
	0, 382, 275, 334, 411, 336, 297, 246, 477, 339,
	381, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	251, 0, 0, 0, 213, 223, 236, 249, 264, 0,
	274, 286, 289, 294, 295, 299, 304, 322, 323, 324,
	325, 348, 349, 352, 353, 356, 357, 361, 362, 363,
	368, 369, 377, 0, 386, 397, 399, 400, 401, 402,
	412, 415, 416, 456, 457, 473, 474, 443, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 355, 0,
	0, 3484, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 257, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 0,
	0, 312, 0, 0, 470, 421, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 0,
	0, 374, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 195, 0,
	0, 0, 351, 0, 0, 0, 198, 311, 0, 0,
	0, 244, 0, 390, 0, 462, 0, 277, 0, 389,
	313, 455, 0, 0, 461, 0, 437, 471, 476, 270,
	0, 234, 418, 260, 253, 0, 0, 0, 283, 373,
	248, 305, 0, 0, 0, 240, 0, 0, 0, 417,
	452, 200, 332, 453, 475, 0, 271, 409, 272, 436,
	263, 235, 376, 214, 303, 0, 0, 254, 298, 0,
	0, 478, 469, 225, 273, 384, 388, 365, 221, 444,
	333, 343, 237, 239, 238, 215, 410, 451, 228, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	284, 0, 0, 0, 359, 224, 0, 0, 0, 0,
	465, 0, 256, 0, 467, 0, 404, 403, 0, 291,
	0, 0, 0, 383, 0, 301, 204, 0, 480, 220,
	307, 445, 0, 276, 350, 0, 360, 197, 378, 327,
	329, 326, 330, 281, 0, 0, 0, 380, 406, 450,
	222, 424, 0, 0, 0, 396, 0, 0, 0, 320,
	265, 269, 285, 296, 0, 387, 425, 468, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 426, 441, 398, 279, 319, 321, 428, 433, 429,
	430, 427, 432, 431, 394, 395, 208, 435, 460, 229,
	405, 408, 479, 0, 216, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 458, 459, 245,
	0, 0, 211, 0, 0, 347, 354, 346, 0, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	268, 287, 371, 315, 372, 288, 341, 340, 342, 317,
	0, 423, 318, 0, 206, 0, 422, 0, 0, 434,
	226, 0, 0, 449, 0, 379, 227, 278, 266, 370,
	345, 218, 290, 420, 306, 314, 0, 0, 358, 391,
	233, 464, 419, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 207, 219, 448, 232,
	252, 250, 267, 302, 328, 335, 364, 407, 413, 414,
	438, 439, 440, 442, 255, 331, 259, 231, 385, 230,
	316, 293, 366, 446, 447, 375, 247, 0, 199, 212,
	310, 0, 382, 275, 334, 411, 336, 297, 246, 477,
	339, 381, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 251, 0, 0, 0, 213, 223, 236, 249, 264,
	0, 274, 286, 289, 294, 295, 299, 304, 322, 323,
	324, 325, 348, 349, 352, 353, 356, 357, 361, 362,
	363, 368, 369, 377, 0, 386, 397, 399, 400, 401,
	402, 412, 415, 416, 456, 457, 473, 474, 443, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 355,
	0, 0, 3482, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 257, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	0, 0, 312, 0, 0, 470, 421, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 0,
	0, 0, 374, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 195,
	0, 0, 0, 351, 0, 0, 0, 198, 311, 0,
	0, 0, 244, 0, 390, 0, 462, 0, 277, 0,
	389, 313, 455, 0, 0, 461, 0, 437, 471, 476,
	270, 0, 234, 418, 260, 253, 0, 0, 0, 283,
	373, 248, 305, 0, 0, 0, 240, 0, 0, 0,
	417, 452, 200, 332, 453, 475, 0, 271, 409, 272,
	436, 263, 235, 376, 214, 303, 0, 0, 254, 298,
	0, 0, 478, 469, 225, 273, 384, 388, 365, 221,
	444, 333, 343, 237, 239, 238, 215, 410, 451, 228,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 284, 0, 0, 0, 359, 224, 0, 0, 0,
	0, 465, 0, 256, 0, 467, 0, 404, 403, 0,
	291, 0, 0, 0, 383, 0, 301, 204, 0, 480,
	220, 307, 445, 0, 276, 350, 0, 360, 197, 378,
	327, 329, 326, 330, 281, 0, 0, 0, 380, 406,
	450, 222, 424, 0, 0, 0, 396, 0, 0, 0,
	320, 265, 269, 285, 296, 0, 387, 425, 468, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 426, 441, 398, 279, 319, 321, 428, 433,
	429, 430, 427, 432, 431, 394, 395, 208, 435, 460,
	229, 405, 408, 479, 0, 216, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 458, 459,
	245, 0, 0, 211, 0, 0, 347, 354, 346, 0,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 268, 287, 371, 315, 372, 288, 341, 340, 342,
	317, 0, 423, 318, 0, 206, 0, 422, 0, 0,
	434, 226, 0, 0, 449, 0, 379, 227, 278, 266,
	370, 345, 218, 290, 420, 306, 314, 0, 0, 358,
	391, 233, 464, 419, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 207, 219, 448,
	232, 252, 250, 267, 302, 328, 335, 364, 407, 413,
	414, 438, 439, 440, 442, 255, 331, 259, 231, 385,
	230, 316, 293, 366, 446, 447, 375, 247, 0, 199,
	212, 310, 0, 382, 275, 334, 411, 336, 297, 246,
	477, 339, 381, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 251, 0, 0, 0, 213, 223, 236, 249,
	264, 0, 274, 286, 289, 294, 295, 299, 304, 322,
	323, 324, 325, 348, 349, 352, 353, 356, 357, 361,
	362, 363, 368, 369, 377, 0, 386, 397, 399, 400,
	401, 402, 412, 415, 416, 456, 457, 473, 474, 443,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	355, 0, 0, 3480, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 257, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 0, 0, 312, 0, 0, 470, 421, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 0, 0, 374, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	195, 0, 0, 0, 351, 0, 0, 0, 198, 311,
	0, 0, 0, 244, 0, 390, 0, 462, 0, 277,
	0, 389, 313, 455, 0, 0, 461, 0, 437, 471,
	476, 270, 0, 234, 418, 260, 253, 0, 0, 0,
	283, 373, 248, 305, 0, 0, 0, 240, 0, 0,
	0, 417, 452, 200, 332, 453, 475, 0, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 284, 0, 0, 0, 359, 224, 0, 0,
	0, 0, 465, 0, 256, 0, 467, 0, 404, 403,
	0, 291, 0, 0, 0, 383, 0, 301, 204, 0,
	480, 220, 307, 445, 0, 276, 350, 0, 360, 197,
	378, 327, 329, 326, 330, 281, 0, 0, 0, 380,
	406, 450, 222, 424, 0, 0, 0, 396, 0, 0,
	0, 320, 265, 269, 285, 296, 0, 387, 425, 468,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	460, 229, 405, 408, 479, 0, 216, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 458,
	459, 245, 0, 0, 211, 0, 0, 347, 354, 346,
	0, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 0, 423, 318, 0, 206, 0, 422, 0,
	0, 434, 226, 0, 0, 449, 0, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 0, 0,
	358, 391, 233, 464, 419, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 0,
	199, 212, 310, 0, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 251, 0, 0, 0, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 0, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	443, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 355, 0, 0, 3475, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 257, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 312, 0, 0, 470, 421, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 0, 374, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 195, 0, 0, 0, 351, 0, 0, 0, 198,
	311, 0, 0, 0, 244, 0, 390, 0, 462, 0,
	277, 0, 389, 313, 455, 0, 0, 461, 0, 437,
	471, 476, 270, 0, 234, 418, 260, 253, 0, 0,
	0, 283, 373, 248, 305, 0, 0, 0, 240, 0,
	0, 0, 417, 452, 200, 332, 453, 475, 0, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 284, 0, 0, 0, 359, 224, 0,
	0, 0, 0, 465, 0, 256, 0, 467, 0, 404,
	403, 0, 291, 0, 0, 0, 383, 0, 301, 204,
	0, 480, 220, 307, 445, 0, 276, 350, 0, 360,
	197, 378, 327, 329, 326, 330, 281, 0, 0, 0,
	380, 406, 450, 222, 424, 0, 0, 0, 396, 0,
	0, 0, 320, 265, 269, 285, 296, 0, 387, 425,
	468, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 0, 216, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	458, 459, 245, 0, 0, 211, 0, 0, 347, 354,
	346, 0, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 317, 0, 423, 318, 0, 206, 0, 422,
	0, 0, 434, 226, 0, 0, 449, 0, 379, 227,
	278, 266, 370, 345, 218, 290, 420, 306, 314, 0,
	0, 358, 391, 233, 464, 419, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	0, 199, 212, 310, 0, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 251, 0, 0, 0, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 368, 369, 377, 0, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 443, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 355, 0, 0, 3462, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 257,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 0, 0, 312, 0, 0, 470, 421,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 0, 0, 0, 0, 374, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 195, 0, 0, 0, 351, 0, 0, 0,
	198, 311, 0, 0, 0, 244, 0, 390, 0, 462,
	0, 277, 0, 389, 313, 455, 0, 0, 461, 0,
	437, 471, 476, 270, 0, 234, 418, 260, 253, 0,
	0, 0, 283, 373, 248, 305, 0, 0, 0, 240,
	0, 0, 0, 417, 452, 200, 332, 453, 475, 0,
	271, 409, 272, 436, 263, 235, 376, 214, 303, 0,
	0, 254, 298, 0, 0, 478, 469, 225, 273, 384,
	388, 365, 221, 444, 333, 343, 237, 239, 238, 215,
	410, 451, 228, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 284, 0, 0, 0, 359, 224,
	0, 0, 0, 0, 465, 0, 256, 0, 467, 0,
	404, 403, 0, 291, 0, 0, 0, 383, 0, 301,
	204, 0, 480, 220, 307, 445, 0, 276, 350, 0,
	360, 197, 378, 327, 329, 326, 330, 281, 0, 0,
	0, 380, 406, 450, 222, 424, 0, 0, 0, 396,
	0, 0, 0, 320, 265, 269, 285, 296, 0, 387,
	425, 468, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 426, 441, 398, 279, 319,
	321, 428, 433, 429, 430, 427, 432, 431, 394, 395,
	208, 435, 460, 229, 405, 408, 479, 0, 216, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 458, 459, 245, 0, 0, 211, 0, 0, 347,
	354, 346, 0, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 268, 287, 371, 315, 372, 288,
	341, 340, 342, 317, 0, 423, 318, 0, 206, 0,
	422, 0, 0, 434, 226, 0, 0, 449, 0, 379,
	227, 278, 266, 370, 345, 218, 290, 420, 306, 314,
	0, 0, 358, 391, 233, 464, 419, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	207, 219, 448, 232, 252, 250, 267, 302, 328, 335,
	364, 407, 413, 414, 438, 439, 440, 442, 255, 331,
	259, 231, 385, 230, 316, 293, 366, 446, 447, 375,
	247, 0, 199, 212, 310, 0, 382, 275, 334, 411,
	336, 297, 246, 477, 339, 381, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 251, 0, 0, 0, 213,
	223, 236, 249, 264, 0, 274, 286, 289, 294, 295,
	299, 304, 322, 323, 324, 325, 348, 349, 352, 353,
	356, 357, 361, 362, 363, 368, 369, 377, 0, 386,
	397, 399, 400, 401, 402, 412, 415, 416, 456, 457,
	473, 474, 443, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 355, 0, 0, 3460, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	257, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 312, 0, 0, 470,
	421, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 0, 0, 0, 0, 374, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 195, 0, 0, 0, 351, 0, 0,
	0, 198, 311, 0, 0, 0, 244, 0, 390, 0,
	462, 0, 277, 0, 389, 313, 455, 0, 0, 461,
	0, 437, 471, 476, 270, 0, 234, 418, 260, 253,
	0, 0, 0, 283, 373, 248, 305, 0, 0, 0,
	240, 0, 0, 0, 417, 452, 200, 332, 453, 475,
	0, 271, 409, 272, 436, 263, 235, 376, 214, 303,
	0, 0, 254, 298, 0, 0, 478, 469, 225, 273,
	384, 388, 365, 221, 444, 333, 343, 237, 239, 238,
	215, 410, 451, 228, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 284, 0, 0, 0, 359,
	224, 0, 0, 0, 0, 465, 0, 256, 0, 467,
	0, 404, 403, 0, 291, 0, 0, 0, 383, 0,
	301, 204, 0, 480, 220, 307, 445, 0, 276, 350,
	0, 360, 197, 378, 327, 329, 326, 330, 281, 0,
	0, 0, 380, 406, 450, 222, 424, 0, 0, 0,
	396, 0, 0, 0, 320, 265, 269, 285, 296, 0,
	387, 425, 468, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 426, 441, 398, 279,
	319, 321, 428, 433, 429, 430, 427, 432, 431, 394,
	395, 208, 435, 460, 229, 405, 408, 479, 0, 216,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 458, 459, 245, 0, 0, 211, 0, 0,
	347, 354, 346, 0, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 268, 287, 371, 315, 372,
	288, 341, 340, 342, 317, 0, 423, 318, 0, 206,
	0, 422, 0, 0, 434, 226, 0, 0, 449, 0,
	379, 227, 278, 266, 370, 345, 218, 290, 420, 306,
	314, 0, 0, 358, 391, 233, 464, 419, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 207, 219, 448, 232, 252, 250, 267, 302, 328,
	335, 364, 407, 413, 414, 438, 439, 440, 442, 255,
	331, 259, 231, 385, 230, 316, 293, 366, 446, 447,
	375, 247, 0, 199, 212, 310, 0, 382, 275, 334,
	411, 336, 297, 246, 477, 339, 381, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 251, 0, 0, 0,
	213, 223, 236, 249, 264, 0, 274, 286, 289, 294,
	295, 299, 304, 322, 323, 324, 325, 348, 349, 352,
	353, 356, 357, 361, 362, 363, 368, 369, 377, 0,
	386, 397, 399, 400, 401, 402, 412, 415, 416, 456,
	457, 473, 474, 443, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 257, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 0, 0, 312, 0, 0,
	470, 421, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 0, 0, 0, 0, 374, 282, 0,
	0, 0, 0, 0, 0, 3399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 195, 0, 0, 0, 351, 0,
	0, 0, 198, 311, 0, 0, 0, 244, 0, 390,
	0, 462, 0, 277, 0, 389, 313, 455, 0, 0,
	461, 0, 437, 471, 476, 270, 0, 234, 418, 260,
	253, 0, 0, 0, 283, 373, 248, 305, 0, 0,
	0, 240, 0, 0, 0, 417, 452, 200, 332, 453,
	475, 0, 271, 409, 272, 436, 263, 235, 376, 214,
	303, 0, 0, 254, 298, 0, 0, 478, 469, 225,
	273, 384, 388, 365, 221, 444, 333, 343, 237, 239,
	238, 215, 410, 451, 228, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 284, 0, 0, 0,
	359, 224, 0, 0, 0, 0, 465, 0, 256, 0,
	467, 0, 404, 403, 0, 291, 0, 0, 0, 383,
	0, 301, 204, 0, 480, 220, 307, 445, 0, 276,
	350, 0, 360, 197, 378, 327, 329, 326, 330, 281,
	0, 0, 0, 380, 406, 450, 222, 424, 0, 0,
	0, 396, 0, 0, 0, 320, 265, 269, 285, 296,
	0, 387, 425, 468, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 426, 441, 398,
	279, 319, 321, 428, 433, 429, 430, 427, 432, 431,
	394, 395, 208, 435, 460, 229, 405, 408, 479, 0,
	216, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 458, 459, 245, 0, 0, 211, 0,
	0, 347, 354, 346, 0, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 268, 287, 371, 315,
	372, 288, 341, 340, 342, 317, 0, 423, 318, 0,
	206, 0, 422, 0, 0, 434, 226, 0, 0, 449,
	0, 379, 227, 278, 266, 370, 345, 218, 290, 420,
	306, 314, 0, 0, 358, 391, 233, 464, 419, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 207, 219, 448, 232, 252, 250, 267, 302,
	328, 335, 364, 407, 413, 414, 438, 439, 440, 442,
	255, 331, 259, 231, 385, 230, 316, 293, 366, 446,
	447, 375, 247, 0, 199, 212, 310, 0, 382, 275,
	334, 411, 336, 297, 246, 477, 339, 381, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 251, 0, 0,
	0, 213, 223, 236, 249, 264, 0, 274, 286, 289,
	294, 295, 299, 304, 322, 323, 324, 325, 348, 349,
	352, 353, 356, 357, 361, 362, 363, 368, 369, 377,
	0, 386, 397, 399, 400, 401, 402, 412, 415, 416,
	456, 457, 473, 474, 443, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 257, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 0, 0, 312, 0,
	0, 470, 421, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3390, 0,
	0, 0, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 0, 0, 374, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 195, 0, 0, 0, 351,
	0, 0, 0, 198, 311, 0, 0, 0, 244, 0,
	390, 0, 462, 0, 277, 0, 389, 313, 455, 0,
	0, 461, 0, 437, 471, 476, 270, 0, 234, 418,
	260, 253, 0, 0, 0, 283, 373, 248, 305, 0,
	0, 0, 240, 0, 0, 0, 417, 452, 200, 332,
	453, 475, 0, 271, 409, 272, 436, 263, 235, 376,
	214, 303, 0, 0, 254, 298, 0, 0, 478, 469,
	225, 273, 384, 388, 365, 221, 444, 333, 343, 237,
	239, 238, 215, 410, 451, 228, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 284, 0, 0,
	0, 359, 224, 0, 0, 0, 0, 465, 0, 256,
	0, 467, 0, 404, 403, 0, 291, 0, 0, 0,
	383, 0, 301, 204, 0, 480, 220, 307, 445, 0,
	276, 350, 0, 360, 197, 378, 327, 329, 326, 330,
	281, 0, 0, 0, 380, 406, 450, 222, 424, 0,
	0, 0, 396, 0, 0, 0, 320, 265, 269, 285,
	296, 0, 387, 425, 468, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 426, 441,
	398, 279, 319, 321, 428, 433, 429, 430, 427, 432,
	431, 394, 395, 208, 435, 460, 229, 405, 408, 479,
	0, 216, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 458, 459, 245, 0, 0, 211,
	0, 0, 347, 354, 346, 0, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 268, 287, 371,
	315, 372, 288, 341, 340, 342, 317, 0, 423, 318,
	0, 206, 0, 422, 0, 0, 434, 226, 0, 0,
	449, 0, 379, 227, 278, 266, 370, 345, 218, 290,
	420, 306, 314, 0, 0, 358, 391, 233, 464, 419,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 207, 219, 448, 232, 252, 250, 267,
	302, 328, 335, 364, 407, 413, 414, 438, 439, 440,
	442, 255, 331, 259, 231, 385, 230, 316, 293, 366,
	446, 447, 375, 247, 0, 199, 212, 310, 0, 382,
	275, 334, 411, 336, 297, 246, 477, 339, 381, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 251, 0,
	0, 0, 213, 223, 236, 249, 264, 0, 274, 286,
	289, 294, 295, 299, 304, 322, 323, 324, 325, 348,
	349, 352, 353, 356, 357, 361, 362, 363, 368, 369,
	377, 0, 386, 397, 399, 400, 401, 402, 412, 415,
	416, 456, 457, 473, 474, 443, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 257, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 0, 0, 312,
	0, 0, 470, 421, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 1156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 0, 0, 374,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 195, 0, 0, 0,
	351, 0, 0, 0, 198, 311, 0, 0, 0, 244,
	0, 390, 0, 462, 0, 277, 0, 389, 313, 455,
	0, 0, 461, 0, 437, 471, 476, 270, 0, 234,
	418, 260, 253, 0, 0, 0, 283, 373, 248, 305,
	0, 0, 0, 240, 0, 0, 0, 417, 452, 200,
	332, 453, 475, 0, 271, 409, 272, 436, 263, 235,
	376, 214, 303, 0, 0, 254, 298, 0, 0, 478,
	469, 225, 273, 384, 388, 365, 221, 444, 333, 343,
	237, 239, 238, 215, 410, 451, 228, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 284, 0,
	0, 0, 359, 224, 0, 0, 0, 0, 465, 0,
	256, 0, 467, 0, 404, 403, 0, 291, 0, 0,
	0, 383, 0, 301, 204, 0, 480, 220, 307, 445,
	0, 276, 350, 0, 360, 197, 378, 327, 329, 326,
	330, 281, 0, 0, 0, 380, 406, 450, 222, 424,
	0, 0, 0, 396, 0, 0, 0, 320, 265, 269,
	285, 296, 0, 387, 425, 468, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 426,
	441, 398, 279, 319, 321, 428, 433, 429, 430, 427,
	432, 431, 394, 395, 208, 435, 460, 229, 405, 408,
	479, 0, 216, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 458, 459, 245, 0, 0,
	211, 0, 0, 347, 354, 346, 0, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 268, 287,
	371, 315, 372, 288, 341, 340, 342, 317, 0, 423,
	318, 0, 206, 0, 422, 0, 0, 434, 226, 0,
	0, 449, 0, 379, 227, 278, 266, 370, 345, 218,
	290, 420, 306, 314, 0, 0, 358, 391, 233, 464,
	419, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 207, 219, 448, 232, 252, 250,
	267, 302, 328, 335, 364, 407, 413, 414, 438, 439,
	440, 442, 255, 331, 259, 231, 385, 230, 316, 293,
	366, 446, 447, 375, 247, 0, 199, 212, 310, 0,
	382, 275, 334, 411, 336, 297, 246, 477, 339, 381,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 466, 251,
	0, 0, 0, 213, 223, 236, 249, 264, 0, 274,
	286, 289, 294, 295, 299, 304, 322, 323, 324, 325,
	348, 349, 352, 353, 356, 357, 361, 362, 363, 368,
	369, 377, 0, 386, 397, 399, 400, 401, 402, 412,
	415, 416, 456, 457, 473, 474, 443, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 257, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 0, 0,
	312, 0, 0, 470, 421, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 0, 0,
	374, 282, 0, 0, 0, 0, 0, 0, 2572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 195, 0, 0,
	0, 351, 0, 0, 0, 198, 311, 0, 0, 0,
	244, 0, 390, 0, 462, 0, 277, 0, 389, 313,
	455, 0, 0, 461, 0, 437, 471, 476, 270, 0,
	234, 418, 260, 253, 0, 0, 0, 283, 373, 248,
	305, 0, 0, 0, 240, 0, 0, 0, 417, 452,
	200, 332, 453, 475, 0, 271, 409, 272, 436, 263,
	235, 376, 214, 303, 0, 0, 254, 298, 0, 0,
	478, 469, 225, 273, 384, 388, 365, 221, 444, 333,
	343, 237, 239, 238, 215, 410, 451, 228, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 284,
	0, 0, 0, 359, 224, 0, 0, 0, 0, 465,
	0, 256, 0, 467, 0, 404, 403, 0, 291, 0,
	0, 0, 383, 0, 301, 204, 0, 480, 220, 307,
	445, 0, 276, 350, 0, 360, 197, 378, 327, 329,
	326, 330, 281, 0, 0, 0, 380, 406, 450, 222,
	424, 0, 0, 0, 396, 0, 0, 0, 320, 265,
	269, 285, 296, 0, 387, 425, 468, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	426, 441, 398, 279, 319, 321, 428, 433, 429, 430,
	427, 432, 431, 394, 395, 208, 435, 460, 229, 405,
	408, 479, 0, 216, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 458, 459, 245, 0,
	0, 211, 0, 0, 347, 354, 346, 0, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 268,
	287, 371, 315, 372, 288, 341, 340, 342, 317, 0,
	423, 318, 0, 206, 0, 422, 0, 0, 434, 226,
	0, 0, 449, 0, 379, 227, 278, 266, 370, 345,
	218, 290, 420, 306, 314, 0, 0, 358, 391, 233,
	464, 419, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 207, 219, 448, 232, 252,
	250, 267, 302, 328, 335, 364, 407, 413, 414, 438,
	439, 440, 442, 255, 331, 259, 231, 385, 230, 316,
	293, 366, 446, 447, 375, 247, 0, 199, 212, 310,
	0, 382, 275, 334, 411, 336, 297, 246, 477, 339,
	381, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	251, 0, 0, 0, 213, 223, 236, 249, 264, 0,
	274, 286, 289, 294, 295, 299, 304, 322, 323, 324,
	325, 348, 349, 352, 353, 356, 357, 361, 362, 363,
	368, 369, 377, 0, 386, 397, 399, 400, 401, 402,
	412, 415, 416, 456, 457, 473, 474, 443, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 2716, 2715, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 0,
	0, 312, 0, 0, 470, 421, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 0,
	0, 374, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 195, 0,
	0, 0, 351, 0, 0, 0, 198, 311, 0, 0,
	0, 244, 0, 390, 0, 462, 0, 277, 0, 389,
	313, 455, 0, 0, 461, 0, 437, 471, 476, 270,
	0, 234, 418, 260, 253, 0, 0, 0, 283, 373,
	248, 305, 0, 0, 0, 240, 0, 0, 0, 417,
	452, 200, 332, 453, 475, 0, 271, 409, 272, 436,
	263, 235, 376, 214, 303, 0, 0, 254, 298, 0,
	0, 478, 469, 225, 273, 384, 388, 365, 221, 444,
	333, 343, 237, 239, 238, 215, 410, 451, 228, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	284, 0, 0, 0, 359, 224, 0, 0, 0, 0,
	465, 0, 256, 0, 467, 0, 404, 403, 0, 291,
	0, 0, 0, 383, 0, 301, 204, 0, 480, 220,
	307, 445, 0, 276, 350, 0, 360, 197, 378, 327,
	329, 326, 330, 281, 0, 0, 0, 380, 406, 450,
	222, 424, 0, 0, 0, 396, 0, 0, 0, 320,
	265, 269, 285, 296, 0, 387, 425, 468, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 426, 441, 398, 279, 319, 321, 428, 433, 429,
	430, 427, 432, 431, 394, 395, 208, 435, 460, 229,
	405, 408, 479, 0, 216, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 458, 459, 245,
	0, 0, 211, 0, 0, 347, 354, 346, 0, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	268, 287, 371, 315, 372, 288, 341, 340, 342, 317,
	0, 423, 318, 0, 206, 0, 422, 0, 0, 434,
	226, 0, 0, 449, 0, 379, 227, 278, 266, 370,
	345, 218, 290, 420, 306, 314, 0, 0, 358, 391,
	233, 464, 419, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 207, 219, 448, 232,
	252, 250, 267, 302, 328, 335, 364, 407, 413, 414,
	438, 439, 440, 442, 255, 331, 259, 231, 385, 230,
	316, 293, 366, 446, 447, 375, 247, 0, 199, 212,
	310, 0, 382, 275, 334, 411, 336, 297, 246, 477,
	339, 381, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 251, 0, 0, 0, 213, 223, 236, 249, 264,
	0, 274, 286, 289, 294, 295, 299, 304, 322, 323,
	324, 325, 348, 349, 352, 353, 356, 357, 361, 362,
	363, 368, 369, 377, 0, 386, 397, 399, 400, 401,
	402, 412, 415, 416, 456, 457, 473, 474, 443, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 257, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	0, 0, 312, 0, 0, 470, 421, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 0,
	0, 0, 374, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 195,
	0, 0, 0, 351, 0, 0, 0, 198, 311, 0,
	0, 0, 244, 0, 390, 0, 462, 0, 277, 0,
	389, 313, 455, 0, 0, 461, 0, 437, 471, 476,
	270, 0, 234, 418, 260, 253, 0, 0, 0, 283,
	373, 248, 305, 0, 0, 0, 240, 0, 0, 0,
	417, 452, 200, 332, 453, 475, 0, 271, 409, 272,
	436, 263, 235, 376, 214, 303, 0, 0, 254, 298,
	0, 0, 478, 469, 225, 273, 384, 388, 365, 221,
	444, 333, 343, 237, 239, 238, 215, 410, 451, 228,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 284, 0, 0, 0, 359, 224, 0, 0, 0,
	0, 465, 0, 256, 0, 467, 0, 404, 403, 0,
	291, 0, 0, 0, 383, 0, 301, 204, 0, 480,
	220, 307, 445, 0, 276, 350, 0, 360, 197, 378,
	327, 329, 326, 330, 281, 0, 0, 0, 380, 406,
	450, 222, 424, 0, 0, 0, 396, 0, 0, 0,
	320, 265, 269, 285, 296, 0, 387, 425, 468, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 426, 441, 398, 279, 319, 321, 428, 433,
	429, 430, 427, 432, 431, 394, 395, 208, 435, 460,
	229, 405, 408, 479, 0, 216, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 458, 459,
	245, 0, 0, 211, 0, 0, 347, 354, 346, 0,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 268, 287, 371, 315, 372, 288, 341, 340, 342,
	317, 0, 423, 318, 0, 206, 0, 422, 0, 0,
	434, 226, 0, 0, 449, 0, 379, 227, 278, 266,
	370, 345, 218, 290, 420, 306, 314, 0, 0, 358,
	391, 233, 464, 419, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 207, 219, 448,
	232, 252, 250, 267, 302, 328, 335, 364, 407, 413,
	414, 438, 439, 440, 442, 255, 331, 259, 231, 385,
	230, 316, 293, 366, 446, 447, 375, 247, 0, 199,
	212, 310, 0, 382, 275, 334, 411, 336, 297, 246,
	477, 339, 381, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 251, 0, 0, 0, 213, 223, 236, 249,
	264, 0, 274, 286, 289, 294, 295, 299, 304, 322,
	323, 324, 325, 348, 349, 352, 353, 356, 357, 361,
	362, 363, 368, 369, 377, 0, 386, 397, 399, 400,
	401, 402, 412, 415, 416, 456, 457, 473, 474, 443,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 257, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 0, 0, 312, 0, 0, 470, 421, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2887,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 0, 0, 374, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	195, 0, 0, 0, 351, 0, 0, 0, 198, 311,
	0, 0, 0, 244, 0, 390, 0, 462, 0, 277,
	0, 389, 313, 455, 0, 0, 461, 0, 437, 471,
	476, 270, 0, 234, 418, 260, 253, 0, 0, 0,
	283, 373, 248, 305, 0, 0, 0, 240, 0, 0,
	0, 417, 452, 200, 332, 453, 475, 0, 271, 409,
	272, 436, 263, 235, 376, 214, 303, 0, 0, 254,
	298, 0, 0, 478, 469, 225, 273, 384, 388, 365,
	221, 444, 333, 343, 237, 239, 238, 215, 410, 451,
	228, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 284, 0, 0, 0, 359, 224, 0, 0,
	0, 0, 465, 0, 256, 0, 467, 0, 404, 403,
	0, 291, 0, 0, 0, 383, 0, 301, 204, 0,
	480, 220, 307, 445, 0, 276, 350, 0, 360, 197,
	378, 327, 329, 326, 330, 281, 0, 0, 0, 380,
	406, 450, 222, 424, 0, 0, 0, 396, 0, 0,
	0, 320, 265, 269, 285, 296, 0, 387, 425, 468,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 426, 441, 398, 279, 319, 321, 428,
	433, 429, 430, 427, 432, 431, 394, 395, 208, 435,
	460, 229, 405, 408, 479, 0, 216, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 458,
	459, 245, 0, 0, 211, 0, 0, 347, 354, 346,
	0, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 268, 287, 371, 315, 372, 288, 341, 340,
	342, 317, 0, 423, 318, 0, 206, 0, 422, 0,
	0, 434, 226, 0, 0, 449, 0, 379, 227, 278,
	266, 370, 345, 218, 290, 420, 306, 314, 0, 0,
	358, 391, 233, 464, 419, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 207, 219,
	448, 232, 252, 250, 267, 302, 328, 335, 364, 407,
	413, 414, 438, 439, 440, 442, 255, 331, 259, 231,
	385, 230, 316, 293, 366, 446, 447, 375, 247, 0,
	199, 212, 310, 0, 382, 275, 334, 411, 336, 297,
	246, 477, 339, 381, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 251, 0, 0, 0, 213, 223, 236,
	249, 264, 0, 274, 286, 289, 294, 295, 299, 304,
	322, 323, 324, 325, 348, 349, 352, 353, 356, 357,
	361, 362, 363, 368, 369, 377, 0, 386, 397, 399,
	400, 401, 402, 412, 415, 416, 456, 457, 473, 474,
	443, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 257, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 312, 0, 0, 470, 421, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 0, 374, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 195, 0, 0, 0, 351, 0, 0, 0, 198,
	311, 0, 0, 0, 244, 0, 390, 0, 462, 0,
	277, 0, 389, 313, 455, 0, 0, 461, 0, 437,
	471, 476, 270, 0, 234, 418, 260, 253, 0, 0,
	0, 283, 373, 248, 305, 0, 0, 0, 240, 0,
	0, 0, 417, 452, 200, 332, 453, 475, 0, 271,
	409, 272, 436, 263, 235, 376, 214, 303, 0, 0,
	254, 298, 0, 0, 478, 469, 225, 273, 384, 388,
	365, 221, 444, 333, 343, 237, 239, 238, 215, 410,
	451, 228, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 284, 0, 0, 0, 359, 224, 0,
	0, 0, 0, 465, 0, 256, 0, 467, 0, 404,
	403, 0, 291, 0, 0, 0, 383, 0, 301, 204,
	0, 480, 220, 307, 445, 0, 276, 350, 0, 360,
	197, 378, 327, 329, 326, 330, 281, 0, 0, 0,
	380, 406, 450, 222, 424, 0, 0, 0, 396, 0,
	0, 0, 320, 265, 269, 285, 296, 0, 387, 425,
	468, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 426, 441, 398, 279, 319, 321,
	428, 433, 429, 430, 427, 432, 431, 394, 395, 208,
	435, 460, 229, 405, 408, 479, 0, 216, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	458, 459, 245, 0, 0, 211, 0, 0, 347, 354,
	346, 0, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 268, 287, 371, 315, 372, 288, 341,
	340, 342, 317, 0, 423, 318, 0, 206, 0, 422,
	0, 0, 434, 226, 0, 0, 449, 0, 379, 227,
	278, 266, 370, 345, 218, 290, 420, 306, 314, 0,
	0, 358, 391, 233, 464, 419, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 207,
	219, 448, 232, 252, 250, 267, 302, 328, 335, 364,
	407, 413, 414, 438, 439, 440, 442, 255, 331, 259,
	231, 385, 230, 316, 293, 366, 446, 447, 375, 247,
	0, 199, 212, 310, 0, 382, 275, 334, 411, 336,
	297, 246, 477, 339, 381, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 251, 0, 0, 0, 213, 223,
	236, 249, 264, 0, 274, 286, 289, 294, 295, 299,
	304, 322, 323, 324, 325, 348, 349, 352, 353, 356,
	357, 361, 362, 363, 368, 369, 377, 0, 386, 397,
	399, 400, 401, 402, 412, 415, 416, 456, 457, 473,
	474, 443, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 257,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 0, 0, 312, 0, 0, 470, 421,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 0, 0, 0, 0, 374, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 195, 0, 0, 0, 351, 0, 0, 0,
	198, 311, 0, 0, 0, 244, 0, 390, 0, 462,
	0, 277, 0, 389, 313, 455, 0, 0, 461, 0,
	437, 471, 476, 270, 0, 234, 418, 260, 253, 0,
	0, 0, 283, 373, 248, 305, 0, 0, 0, 240,
	0, 0, 0, 417, 452, 200, 332, 453, 475, 0,
	271, 409, 272, 436, 263, 235, 376, 214, 303, 0,
	0, 254, 298, 0, 0, 478, 469, 225, 273, 384,
	388, 365, 221, 444, 333, 343, 237, 239, 238, 215,
	410, 451, 228, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 284, 0, 0, 0, 359, 224,
	0, 0, 0, 0, 465, 0, 256, 0, 467, 0,
	404, 403, 0, 291, 0, 0, 0, 383, 0, 301,
	204, 0, 480, 220, 307, 445, 0, 276, 350, 0,
	360, 197, 378, 327, 329, 326, 330, 281, 0, 0,
	0, 380, 406, 450, 222, 424, 0, 0, 0, 396,
	0, 0, 0, 320, 265, 269, 285, 296, 0, 387,
	425, 468, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 426, 441, 398, 279, 319,
	321, 428, 433, 429, 430, 427, 432, 431, 394, 395,
	208, 435, 460, 229, 405, 408, 479, 0, 216, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 458, 459, 245, 0, 0, 211, 0, 0, 347,
	354, 346, 0, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 268, 287, 371, 315, 372, 288,
	341, 340, 342, 317, 0, 423, 318, 0, 206, 0,
	422, 0, 0, 434, 226, 0, 0, 449, 0, 379,
	227, 278, 266, 370, 345, 218, 290, 420, 306, 314,
	0, 0, 358, 391, 233, 464, 419, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	207, 219, 448, 232, 252, 250, 267, 302, 328, 335,
	364, 407, 413, 414, 438, 439, 440, 442, 255, 331,
	259, 231, 385, 230, 316, 293, 366, 446, 447, 375,
	247, 0, 199, 212, 310, 0, 382, 275, 334, 411,
	336, 297, 246, 477, 339, 381, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 251, 0, 0, 0, 213,
	223, 236, 249, 264, 0, 274, 286, 289, 294, 295,
	299, 304, 322, 323, 324, 325, 348, 349, 352, 353,
	356, 357, 361, 362, 363, 368, 369, 377, 0, 386,
	397, 399, 400, 401, 402, 412, 415, 416, 456, 457,
	473, 474, 443, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	257, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 312, 0, 0, 470,
	421, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 0, 0, 0, 0, 374, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 195, 0, 0, 0, 351, 0, 0,
	0, 198, 311, 0, 0, 0, 244, 0, 390, 0,
	462, 0, 277, 0, 389, 313, 455, 0, 0, 461,
	0, 437, 471, 476, 270, 0, 234, 418, 260, 253,
	0, 0, 0, 283, 373, 248, 305, 0, 0, 0,
	240, 0, 0, 0, 417, 452, 200, 332, 453, 475,
	0, 271, 409, 272, 436, 263, 235, 376, 214, 303,
	0, 0, 254, 298, 0, 0, 478, 469, 225, 273,
	384, 388, 365, 221, 444, 333, 343, 237, 239, 238,
	215, 410, 451, 228, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 284, 0, 0, 0, 359,
	224, 0, 0, 0, 0, 465, 0, 256, 0, 467,
	0, 404, 403, 0, 291, 0, 0, 0, 383, 0,
	301, 204, 0, 480, 220, 307, 445, 0, 276, 350,
	0, 360, 197, 378, 327, 329, 326, 330, 281, 0,
	0, 0, 380, 406, 450, 222, 424, 0, 0, 0,
	396, 0, 0, 0, 320, 265, 269, 285, 296, 0,
	387, 425, 468, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 426, 441, 398, 279,
	319, 321, 428, 433, 429, 430, 427, 432, 431, 394,
	395, 208, 435, 460, 229, 405, 408, 479, 0, 216,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 458, 459, 245, 0, 0, 211, 0, 0,
	347, 354, 346, 0, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 268, 287, 371, 315, 372,
	288, 341, 340, 342, 317, 0, 423, 318, 0, 206,
	0, 422, 0, 0, 434, 226, 0, 0, 449, 0,
	379, 227, 278, 266, 370, 345, 218, 290, 420, 306,
	314, 0, 0, 358, 391, 233, 464, 419, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 207, 219, 448, 232, 252, 250, 267, 302, 328,
	335, 364, 407, 413, 414, 438, 439, 440, 442, 255,
	331, 259, 231, 385, 230, 316, 293, 366, 446, 447,
	375, 247, 0, 199, 212, 310, 0, 382, 275, 334,
	411, 336, 297, 246, 477, 339, 381, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 251, 0, 0, 0,
	213, 223, 236, 249, 264, 0, 274, 286, 289, 294,
	295, 299, 304, 322, 323, 324, 325, 348, 349, 352,
	353, 356, 357, 361, 362, 363, 368, 369, 377, 0,
	386, 397, 399, 400, 401, 402, 412, 415, 416, 456,
	457, 473, 474, 42, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 71, 0, 0, 4186, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4179, 0, 0, 0, 0,
	4507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4179,
	0, 0, 0, 0, 4504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 71, 57, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 62,
	92, 91, 89, 0, 0, 0, 57, 71, 4186, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 4179,
	4182, 0, 0, 0, 4421, 0, 0, 0, 0, 0,
	4191, 4183, 4184, 4185, 4189, 4190, 4187, 0, 4188, 0,
	4192, 0, 0, 0, 0, 78, 0, 79, 89, 0,
	0, 0, 0, 0, 4186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 69, 70, 0, 4182, 4179, 0, 0, 0, 60,
	0, 0, 0, 0, 4191, 4183, 4184, 4185, 4189, 4190,
	4187, 0, 4188, 0, 4192, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4180, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 4193, 4181, 0, 66, 67, 73, 0,
	74, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 4193, 4181, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4191, 4183, 4184, 4185, 4189, 4190,
	4187, 0, 4188, 0, 4192, 0, 0, 0, 42, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 84, 0, 0, 69, 70, 0,
	4182, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	4191, 4183, 4184, 4185, 4189, 4190, 4187, 4418, 4188, 0,
	4192, 0, 42, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 89, 0, 0, 71, 0, 0, 4186,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	4179, 0, 59, 61, 0, 4413, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 4193, 4181, 0,
	66, 67, 73, 0, 74, 0, 0, 89, 0, 0,
	0, 0, 0, 4186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 4179, 0, 59, 61, 0, 4411,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4193, 4181, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4180, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 71, 57, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 62, 92, 91, 89, 0, 0,
	0, 57, 71, 4186, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 4179, 4182, 59, 61, 0, 4294,
	0, 0, 87, 0, 0, 4191, 4183, 4184, 4185, 4189,
	4190, 4187, 0, 4188, 0, 4192, 0, 0, 0, 0,
	78, 0, 79, 89, 0, 0, 0, 0, 0, 4186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 84, 69, 70, 0, 4182,
	4179, 0, 59, 61, 60, 0, 0, 0, 87, 4191,
	4183, 4184, 4185, 4189, 4190, 4187, 0, 4188, 0, 4192,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4180, 0, 0, 84,
	85, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 4193, 4181,
	0, 66, 67, 73, 0, 74, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 4193, 4181, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4191,
	4183, 4184, 4185, 4189, 4190, 4187, 0, 4188, 0, 4192,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 69, 70, 0, 4182, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 4191, 4183, 4184, 4185, 4189,
	4190, 4187, 0, 4188, 0, 4192, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 4193, 4181, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4193, 4181,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	2292, -1000, -492, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2998, -1000, 2998, 386, -1000, 415, -1000, 1319, 451,
	-1000, -1000, -1000, -1000, -1000, 723, 324, 58122, 1119, 55230,
	78310, -286, 4644, 77589, 158, -1000, 158, 421, 54509, 891,
	990, 76868, 2822, 2157, 161, 15, 13, 240, 39365, 38633,
	300, 189, 207, 203, 167, 1288, -1000, 61006, 890, -1000,
	247, -1000, -1000, -1000, -1000, -1000, 46578, 3020, 3051, 3020,
	-1000, 2979, 2996, -1000, -1000, 2979, 2341, 2341, -1000, 61006,
	14249, -1000, -1000, -1000, -1000, -1000, 31246, -1000, 1295, -1000,
	58843, 41528, 2998, -1000, 1102, 1077, -129, 1006, 1006, 840,
	1006, 1006, -456, 1112, -1000, 854, 1650, -1000, -1000, -1000,
	-1000, 1649, 58843, 66053, 1007, 75426, 1007, 1007, 1007, 1007,
	1007, 1007, 1007, 1007, 53788, 58843, -1000, 1224, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 58843, 3032, 3031, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2641, 2640, 53067, 604, 2862,
	1610, 269, 1610, -1000, -1000, 1586, -1000, 921, 920, 919,
	917, 908, 916, -7, 1568, 1635, 2981, -1000, 2596, 2979,
	2979, 1568, -1000, 915, -1000, -1000, -1000, -1000, -1000, -1000,
	1302, -1000, -1000, 1700, 1700, 547, 1071, 350, 933, 344,
	2906, 1646, 2860, 2859, 2199, 2858, 926, 2855, 2632, -1000,
	1219, -1000, -1000, 54, -1000, 2156, 58843, -1000, -1000, 2021,
	2020, 684, 2530, 1173, 2700, -1000, -1000, 654, 809, 2624,
	709, 2624, 2624, 2624, 399, 2624, 2624, 9, 2624, 2624,
	2624, 325, 2624, 362, 2624, 2624, 2624, 2624, 2624, -1000,
	2355, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 689, 2510, 2543, 2699, 217, -1000, -62,
	-1000, 2933, 857, -1000, -1000, -1000, 309, 1295, 61727, 2578,
	-1000, 2596, -1000, -1000, 2588, 2596, -1000, 2074, 1110, 1007,
	778, -1000, 551, -1000, -1000, -1000, 2898, 2596, 42252, -1000,
	-1000, 1410, -1000, 2596, 2596, 1295, 2977, 1295, 1295, 2953,
	2931, 1295, 2851, 28290, 18683, 2770, 1762, -1000, -1000, -1000,
	-1000, 1295, 3030, -1000, 40807, 1217, -1000, 18683, 1964, 2596,
	2596, -1000, 1183, 1285, -1000, 1160, 1202, -1000, -1000, 19422,
	19422, 19422, 19422, 19422, 19422, 19422, -1000, -1000, -1000, -1000,
	-1000, -1000, 2325, 2324, 2323, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2596, 1215, 1214, -1000, 2596,
	2596, 2596, 2596, 2596, -1000, 17205, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2596, 2596,
	2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, 2596, 2596, 18683, 2596, 2596, 2596, 2596, 2596, -1000,
	2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, 2596, 2596, 2596, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2596, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2596, 2596, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2596,
	1038, 1038, 57401, 2587, -28, 30507, -1000, -1000, -1000, -1000,
	29029, 63890, 1523, -1000, -1000, -1000, -1000, 2854, -1000, -1000,
	1207, 1202, 1183, 1177, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2998, 344, -1000, 2458, -1000, -1000, 10259, 10259,
	10259, 10259, 10259, 10259, 49462, -1000, -1000, -1000, 2630, 2979,
	-1000, 75426, 58843, 845, 2152, 1681, 2151, 76868, 76868, 1006,
	-1000, 822, 66053, 66053, -360, 1006, 841, 66053, 823, 2586,
	1070, 2585, 1069, 2335, 58843, 2904, 2697, 58843, 2149, 2148,
	76868, 76868, 66053, 66053, 76868, -1000, -1000, -1000, 27551, -1000,
	1320, 2584, 48741, 48020, 52346, 52346, -1000, -1000, -1000, 912,
	-1000, 1610, -1000, 11511, 18683, 1006, 1006, 58843, 58843, 58843,
	58843, 58843, -1000, 58843, -1000, -1000, 1610, -1000, -1000, 1610,
	1610, 1610, 1568, 3028, 1568, -1000, -1000, -1000, 1610, 77589,
	77589, 18683, -1000, 19422, 65332, 1352, -1000, -1000, 1610, -1000,
	77589, 953, 953, 953, -1000, 2147, 541, -1000, -1000, -1000,
	-1000, -1000, 350, -1000, -1000, -1000, 2829, 2928, 2927, 2142,
	926, 926, -1000, 2331, 926, 2572, -1000, 1644, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	926, 2906, 17944, 75426, -472, -1000, -1000, 2581, -1000, 507,
	-1000, -1000, 952, 2693, 952, 6000, 66053, 66053, 66053, -1000,
	2624, 75426, -1000, 2624, 2624, 2624, 7, 2624, 2624, -1000,
	-1000, 2624, -1000, -1000, -1000, 2624, -1000, -1000, 2624, -1000,
	-1000, -1000, 2624, 2624, -1000, 2624, 2624, -1000, -1000, -1000,
	-1000, -1000, 66053, 952, 438, 2579, 952, 66053, 66053, 1067,
	202, -24, -1000, -1000, -1000, 307, 306, 303, 292, -1000,
	-1000, -1000, -1000, 291, 288, -1000, -1000, 58843, 58843, 913,
	-1000, 2578, 61727, 2925, 23117, 890, -1000, 18683, 2874, -1000,
	2874, -1000, -1000, -1000, 392, -1000, 58843, 66053, 76868, 46578,
	46578, 46578, 46578, -1000, 2727, 2726, -1000, 2714, 2712, 2711,
	490, 61727, -1000, 2898, 386, 2455, 2341, 2341, 551, 42252,
	-1000, 2596, -1000, 61727, 1243, 1095, 1090, 1085, 2829, -1000,
	-1000, -1000, -1000, -1000, 2290, 2272, 1782, 13510, 19422, -1000,
	-1000, -1000, -1000, -1000, 3020, 3020, -1000, -1000, -1000, -1000,
	-1000, -1000, 1737, 3044, 1478, 2545, -1000, -1000, -1000, 2576,
	-1000, 2197, 1200, 1945, 1727, -1000, -1000, -1000, -1000, -1000,
	-1000, 14249, -1000, 58843, -1000, 18683, 18683, 18683, 1837, -1000,
	45857, -1000, -1000, -1000, 23856, 1483, 19422, 1816, 1549, 19422,
	19422, 19422, 19422, 19422, 19422, 19422, 19422, 19422, 19422, 19422,
	19422, 19422, 19422, 19422, 1368, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2128, -1000, 344, 36419, 13510, 36419, 553,
	553, 75426, 1329, 1329, 1329, 1329, 1329, 1329, 59564, -1000,
	-1000, -1000, 2924, 34941, 36419, 2924, 2924, 2924, 2924, 2924,
	2452, 1612, 61006, 17205, 46578, 13510, 13510, 13510, 2341, 18683,
	18683, 13510, 19422, 13510, 16466, 15727, 20900, 13510, 13510, 2924,
	1573, 1612, 26812, 13510, -1000, 2341, -1000, -1000, -1000, -1000,
	1957, -1000, -1000, -240, -240, -240, 555, 13510, 13510, 13510,
	13510, 2341, 2341, 13510, 13510, 13510, 13510, 13510, 2341, 2341,
	2341, 2341, 13510, 13510, 13510, 13510, 13510, 13510, 13510, 13510,
	13510, 13510, 13510, 13510, -1000, -1000, -1000, 1952, 56672, 46578,
	58843, 2534, 2518, -1000, -1000, 1199, 29768, 2547, -1000, -58,
	-40, -28, -1000, -1000, 1311, -1000, -1000, -1000, -1000, 14988,
	-1000, -1000, -1000, 24595, 2979, -1000, 40086, -1000, 56, -1000,
	-1000, -1000, 2611, -1000, 2613, 105, 530, 2613, 86, 82,
	2613, 2613, 2613, -1000, -1000, -1000, -1000, 97, -1000, -1000,
	-1000, -1000, -1000, 2627, 2626, -1000, 2611, 2611, 2611, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2619, 532, 2612, 2612, 2612, 2612, 2612,
	-1000, -1000, -1000, -1000, -1000, 982, -1000, -1000, -1000, 18683,
	2851, 2760, 2634, 2596, 1074, -458, 841, 2874, 2900, 2874,
	885, -1000, 1197, 2625, 76868, 874, 2522, -1000, 536, 2411,
	1117, 55951, -1000, -1000, -1000, -1000, -1000, 58843, 58843, 66053,
	66053, 66053, 1091, -1000, 58843, 2575, -1000, -1000, -1000, -1000,
	-1000, 2519, -1000, 2411, -1000, -1000, 1196, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-430, -433, 58843, -1000, -1000, -1000, -1000, -1000, -1000, 2574,
	-1000, 2574, -1000, -1000, -1000, 2329, 1612, 2127, 2125, 2906,
	-1000, -1000, -1000, -1000, 1569, -1000, -1000, -1000, -1000, 1610,
	58843, 2906, -1000, -1000, -1000, 1612, 1564, 2639, 2596, 2341,
	-1000, -1000, -1000, 154, -1000, 151, -1000, -1000, -1000, 2121,
	-1000, 19422, 2828, 2827, -1000, 2572, 2572, -1000, 2572, 926,
	60285, 2572, -1000, -1000, 2450, -1000, 219, 2328, 58843, -1000,
	61727, 42, -1000, -85, 73984, -1000, -1000, -1000, 952, 73984,
	-1000, 325, 266, -1000, 1066, -1000, 2448, -1000, -1000, -1000,
	-1000, 2624, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 73984, 398, 437, 73984, 2519, 3027, 261, 2571,
	-1000, 1605, 1571, -1000, -1000, -1000, -1000, -1000, -1000, 2961,
	-1000, 251, 251, 2326, 19422, -1000, 2596, 2398, -1000, 1193,
	-1000, -1000, -1000, -1000, -1000, -1000, 2596, -1000, -1000, -1000,
	-1000, 2853, 1523, 1523, 1523, 5293, 536, 2692, 2623, 2691,
	522, -1000, -1000, -1000, -1000, 2718, -1000, 2715, 2635, -1000,
	-1000, -1000, 2598, 61727, 46578, -1000, -1000, -1000, 2341, 75426,
	1132, -1000, 61727, 2596, 2596, 2596, 19422, 19422, 1471, -1000,
	19422, 19422, 1468, -1000, 19422, 19422, 1463, -1000, 2341, 2570,
	-1000, -1000, 1612, 1192, 4535, -1000, 74705, 39, 2738, 28290,
	28290, 18683, -1000, -1000, -1000, 24595, 2965, -1000, 2746, 2745,
	3026, -1000, -1000, -1000, 1483, 1614, 1570, -1000, -1000, 1774,
	-1000, -1000, -1000, -1000, -1000, 1186, 2596, -1000, -1000, -1000,
	-1000, -1000, 4393, -1000, -1000, -1000, -1000, 1816, 19422, 19422,
	19422, 1564, 4393, 4166, 2293, 2224, 1329, 1482, 1482, 1290,
	1290, 1290, 1290, 1290, 1739, 1739, -1000, -1000, -1000, -1000,
	2341, -1000, 2443, -1000, -1000, 2325, 2324, 2323, -1000, -1000,
	-1000, -1000, 13510, -1000, -1000, -1000, -1000, -1000, 13510, 13510,
	13510, 13510, 13510, 18683, -1000, 2443, 2443, 2443, -1000, 1719,
	2138, 2340, 1918, 2443, 1358, 3025, 2443, 1350, 3024, 2443,
	2042, 19422, 19422, 19422, 2443, 2443, 13510, 1658, -1000, 18683,
	2341, 1304, 2341, 1183, 1177, 2443, -1000, 2341, 2569, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2553, 3023, 2551, -1000, -1000, -1000, -1000, 2443, 2341, 2443,
	2443, -171, -171, 2341, 2443, 2341, 2443, 2443, -171, -171,
	-171, -171, 2443, 2443, 2443, 2443, 2443, 2443, 2443, 2443,
	2443, 2443, 2443, 2443, -1000, 2341, 1422, 58843, -1000, 2529,
	1422, 2492, 46578, -1000, -1000, 46578, 77589, 26073, -1000, 29029,
	-28, -76, -1000, -1000, 2547, -1000, -1000, 1472, -1000, -1000,
	2322, 1612, -1000, 1169, 2851, 245, -1000, -1000, -1000, -1000,
	2620, 45136, -1000, 2779, 1248, 1248, 1248, 64611, 76147, 2771,
	-1000, -1000, 242, 28, -1000, -1000, -1000, 2003, -1000, 290,
	496, 2613, -1000, -1000, -1000, 2613, 2613, -1000, 2613, 2613,
	-1000, -1000, -1000, -1000, 2321, 2321, -1000, -1000, -1000, -1000,
	2001, -1000, 2619, -1000, 2000, -1000, -1000, -1000, -1000, 242,
	242, 242, 242, 242, -1000, 1531, -1000, 2689, 75426, 2921,
	58843, -361, -1000, -1000, -1000, 3012, -1000, -1000, 75426, 63169,
	2686, -1000, -1000, 312, 66053, 455, 679, 297, -1000, 1661,
	-1000, -1000, 1064, -1000, 1063, -1000, -1000, -1000, -1000, -1000,
	-1000, 58843, 66053, 75426, 2685, 2684, -1000, 52346, -1000, -1000,
	-1000, -1000, 3007, 2120, 2116, -1000, 1568, 1610, -1000, 19422,
	66053, -1000, 904, -1000, -1000, -1000, 4393, 19422, 19422, -1000,
	-1000, -1000, -1000, 1730, -1000, -1000, -1000, -1000, -42, -1000,
	-1000, 1062, 1156, 1144, 73984, 1061, -1000, 337, 66053, -1000,
	75426, -1000, 3019, 3018, 388, 3017, 66053, 2546, -1000, 1567,
	1556, 1554, 1546, 1539, 1536, 1532, 202, 2617, 2616, -1000,
	249, -1000, -72, -1000, -1000, 4393, -1000, -1000, 23117, 36419,
	-1000, 1523, 1448, -1000, 1443, 2319, 1274, 1833, -1000, -1000,
	1263, 1126, 984, 1523, 988, 457, 1058, 2835, 2834, 585,
	583, -1000, 1523, 988, 1227, 697, -1000, 1458, 1455, 1452,
	1451, 1450, 1449, 1445, 1444, 656, -1000, -1000, 1523, 1523,
	1523, 1523, 1523, 1523, 1523, 1523, -233, -236, 1523, 1523,
	1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
	1523, 1523, 1523, 1523, 31985, 1523, -1000, 1135, 817, -1000,
	-1000, 18683, 2615, -1000, 18683, -1000, -1000, -1000, -1000, -1000,
	75426, 2598, 551, -1000, 2396, -1000, -1000, 1132, 75426, 75426,
	75426, 3981, 1828, 2596, 3940, 1638, 2596, 3866, 1587, 2596,
	2898, 13510, 22378, 2318, 2544, 2317, 2316, -1000, 35, 2733,
	-1000, -1000, -1000, 58843, -1000, -1000, -1000, -1000, 3007, 44415,
	14249, -1000, -1000, -1000, -1000, 34202, 13510, -1000, 1564, 4393,
	3751, -1000, 19422, -1000, -1000, 2341, 2443, 2443, 2443, 2443,
	2443, 1612, -1000, -1000, -1000, 524, 1368, 524, -1000, 1368,
	19422, -1000, 19422, 19422, -1000, 19422, 19422, -1000, -1000, 19422,
	3773, 3629, 3554, -293, -1000, 2541, 1563, -1000, 18683, 2192,
	-1000, -1000, -1000, -1000, -1000, 19422, 19422, 19422, 19422, -1000,
	-1000, -1000, -1000, -1000, 73263, -1000, -171, -171, -171, -171,
	-171, -1000, -1000, -1000, -1000, -171, -171, -171, -171, -171,
	-171, -171, -171, -171, -171, -171, -171, -1000, 295, 2596,
	-1000, 25334, 3007, 46578, 2536, 2536, -1000, 1142, -1000, -1000,
	-1000, -91, -111, -1000, -1000, -1000, -1000, -1000, 36419, -1000,
	-1000, -1000, 511, 2995, 1523, 1523, 1523, 395, 1523, 1523,
	1523, 1523, 1523, -237, -245, 1523, 1523, 1523, 1523, 1523,
	1523, 1523, 1523, 1523, 1523, 1523, 171, 1523, 1523, 1523,
	1523, 1523, 31985, 1523, 50183, 1151, 970, -1000, -1000, -1000,
	76147, 76147, 76147, -1000, 76147, 76147, -1000, -1000, -1000, -1000,
	50904, -1000, -1000, 1746, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2596, -483, 1996, 58843, -1000, 2850, 1435, 38636,
	3043, -1000, 2766, -1000, 2763, 2762, 2315, -1000, -1000, 2445,
	2412, 2386, -1000, 2613, -1000, -1000, -1000, -1000, -1000, 2441,
	-1000, 2436, 2542, -1000, 2434, -418, 58843, -1000, -1000, 2596,
	1988, 2680, -1000, -1000, -1000, -1000, 2376, 2540, -1000, 10259,
	75426, 75426, 75426, 774, -298, 719, -1000, 66053, 367, 536,
	814, 2028, -391, 2885, 58843, 66053, -1000, -1000, -1000, 72542,
	72542, -1000, -1000, 18683, -1000, -1000, 2906, -1000, 4393, 2411,
	-1000, -1000, 4393, 4393, 1422, 1109, -1000, 66053, 1339, 71821,
	1057, 66053, 387, 244, -1000, 66053, 66053, 3016, 66053, 2519,
	261, 2314, 2313, 2312, 1984, 1981, 1975, 1958, -1000, 58843,
	58843, 2309, 2841, -1000, -1000, 1379, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6595, 1833, 1420, 1414, 1411, 1404,
	-1000, 47299, 76147, 1136, 991, -1000, -1000, 2596, -1000, 43694,
	50904, 50904, 50904, 75426, 2761, 2758, 75426, 50904, 50904, 75426,
	50904, 1040, 2112, 2849, 1523, 92, -1000, -1000, -1000, 71100,
	-1000, 70379, 851, 51625, 50904, 75426, 58843, 42973, -1000, -1000,
	-1000, -1000, 69658, 1950, 75426, 75426, 68937, 68216, 67495, 66774,
	-1000, 998, 18683, 998, 1868, 1868, 2308, 2307, 2306, 1523,
	1523, 1868, 2305, 37897, 2304, 957, 998, 998, 998, 1868,
	2303, 409, 2044, 2302, 2246, 2236, 998, -1000, -265, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2596, 894, 1056, 901, -13, 1612, 75426, 1612, 2432, -1000,
	-1000, 1286, 75426, -1000, 2370, 2370, 2370, 19422, 19422, 19422,
	19422, 19422, 19422, 19422, 19422, 19422, 61727, -1000, -1000, 1138,
	0, 75426, -1000, 34, -1000, -1000, -1000, 3005, -1000, 2533,
	-1000, -1000, -1000, 2341, -1000, 19422, 4393, -1000, -171, -171,
	-171, -171, -171, 2341, 2611, 2611, 2611, -1000, 2611, 2612,
	111, -1000, -1000, -1000, 2611, 143, 2611, 140, -1000, 2341,
	2341, 2341, 2114, 3408, 2964, 2941, 2084, 2114, 19422, 19422,
	19422, 2596, -142, -1000, 1612, 18683, 2708, 2503, 2114, 2114,
	-1000, -1000, 2111, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2676, 2676, 25334, 2898, -1000, 21639, -1000, 890, -1000,
	-1000, 75426, 2539, -1000, 1523, 1298, 1523, 1523, 2998, 2536,
	-1000, -1000, 1328, -1000, -1000, -1000, -1000, 239, 998, 998,
	998, 1523, 2848, 1523, 1868, 1868, 2300, 2299, 2297, 1523,
	1523, 1868, 2296, 37897, 2295, 957, 998, 998, 998, 1868,
	2294, 409, -1000, 1808, 2291, 2101, 2005, 998, -1000, -267,
	2596, 2430, -1000, 2611, 2611, 2757, 1248, -1000, -1000, -1000,
	-1000, -1000, -1000, 2608, -1000, -1000, 19422, 2916, -1000, 2605,
	1376, -1000, -1000, -1000, -1000, 553, 2288, -1000, -1000, 19422,
	-1000, -1000, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, 2596, 2596, 2596, 2596, -96, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2284, -1000, 1949, -1000, 1942,
	-1000, -1000, -1000, 2604, -1000, 2914, -1000, 58843, 236, 63169,
	-1000, 10259, 10259, 10259, -13, 400, 377, -1000, 1683, -1000,
	-1000, -1000, 2267, 2265, 2263, 2411, 580, 1645, 423, -1000,
	2903, 2897, 2262, 2260, 2259, 2258, 1921, -1000, -1000, 2636,
	75426, 2531, -1000, 1612, 1610, 34, 58843, 244, -1000, -1000,
	-1000, 66053, 244, -1000, -1000, 432, 2519, 2519, 66053, 2519,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2427, 2402,
	-1000, -1000, -1000, -1000, -1000, -1000, 1277, 1239, 349, 348,
	51625, 946, 10259, 10259, 2634, 1248, -1000, 2754, 1383, -1000,
	-1000, -1000, -1000, -1000, -1000, 50904, 2528, -421, -423, 1305,
	-439, -1000, -1000, -1000, -1000, 51625, 1523, 1368, 2846, 652,
	345, 650, 339, -1000, -1000, -1000, -1000, 946, 1216, 1055,
	-1000, 2753, 50904, 1053, 641, 308, -1000, 1724, -303, 2528,
	-1000, 2528, -1000, 2528, -1000, 2528, -1000, -1000, 1612, -1000,
	-1000, -1000, -1000, -1000, -1000, 2257, 2256, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -254, 37897, 1759, -1000,
	2668, 76868, -1000, 731, 2665, 1598, 553, 2400, -1000, 75426,
	-1000, -1000, -1000, -1000, -1000, 4393, 4393, 2410, 4393, 4393,
	2364, 4393, 4393, 1784, -1000, 33463, 2596, -1000, -5, -1000,
	3000, 2994, -1000, -1000, 4393, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 489, 448, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19422, 19422, 19422, 19422, -1000,
	2114, 2114, 2114, 19422, 2341, 2255, 1612, 19422, 19422, -1000,
	-1000, 1398, -1000, -1000, 2879, -1000, 2477, 61727, 2341, 2507,
	2398, 2341, 411, -1000, -1000, -1000, 61006, 46578, 2523, -1000,
	2596, 2396, 2998, 25334, 18683, 18683, 18683, 18683, 2979, -1000,
	-280, -1000, 456, 299, -1000, -1000, -1000, -1000, -1000, -1000,
	1368, 1523, 32724, -1000, -1000, -1000, -1000, -1000, 2254, 2252,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-256, 37897, 262, 50183, 2878, 2878, 76147, 76147, 75426, 2114,
	2596, 75426, -1000, -1000, -1000, -1000, -1000, 2114, -1000, -1000,
	2371, 2362, 50183, 344, -1000, -391, 2951, -1000, 236, -1000,
	2248, 839, 846, -1000, 836, 834, 832, 831, 811, -1000,
	-1000, -1000, -1000, 2665, 808, 400, -1000, -65, 1908, 1447,
	2833, 377, -1000, 1894, 1885, 1855, 1852, 431, -1000, -1000,
	-1000, -1000, 296, 536, -1000, 793, 2244, 706, 2238, -1000,
	-1000, 474, -1000, -1000, 2821, 2394, -1000, -5, -1000, 2911,
	244, 2911, 374, 2519, -1000, -1000, 2358, -1000, -1000, 2106,
	-1000, -1000, 2603, 76147, 76147, 2374, -1000, 75426, -1000, -1000,
	-1000, -1000, -1000, 2869, 2868, -1000, -1000, 946, 1368, -1000,
	1368, -1000, -1000, -1000, -1000, -1000, 50904, 75426, 50904, 1050,
	50904, -1000, -1000, 2596, 1108, -1000, -1000, -1000, -1000, 2392,
	-1000, 592, 2234, 319, -1000, -1000, 1135, 734, -1000, -1000,
	-1000, -264, -1000, -1000, 19422, 19422, 19422, -1000, 35680, 2815,
	2811, -177, 18683, 18683, -1000, -1000, -1000, -1000, 2114, 2114,
	2114, 2114, -1000, -1000, -1000, 346, -1000, -1000, 2114, 2114,
	2998, 2992, 2752, -1000, 2598, -1000, -1000, 2507, 411, -1000,
	890, -1000, 12771, -1000, 2979, -1000, 1612, 1612, 1612, 1612,
	-1000, -282, 1840, 19422, 2596, 2596, 788, -1000, 1368, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2392, 262, -1000, 37897,
	1523, 2233, 1523, 1523, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2390, -487, 19422, 2385, -1000, -1000, -1000, 2383, -1000,
	-1000, 896, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2819,
	2818, 852, 894, -1000, 2226, 2220, -1000, 702, 1849, 1240,
	-194, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 683, 2100, -1000, 416, -1000, -1000, 414, -1000,
	-1000, 2991, -391, 19422, -1000, 2815, -1000, 66053, 2911, -1000,
	-1000, -1000, -1000, 242, 242, 50183, 2634, 2600, -1000, 1383,
	2744, 19422, -1000, -1000, 1317, 1314, -1000, -1000, 1043, 50904,
	-1000, 1383, 58843, 37897, -1000, -1000, -1000, -1000, 894, 1355,
	771, 2114, 2114, 2114, 2361, -1000, 6013, 315, -1000, 2783,
	2802, 2990, -1000, 75426, -1000, 1612, 2515, -1000, 1612, -1000,
	-1000, -1000, -1000, 2341, 270, -322, -1000, -1000, 1437, 18683,
	3041, -1000, -1000, -1000, 411, -1000, -1000, -1000, 2596, 2989,
	-1000, 2114, 75426, 19422, 2596, 1513, -1000, -1000, -1000, -1000,
	1807, -1000, 2211, 2202, 963, -1000, -1000, -1000, 2114, -1000,
	262, -309, 344, 888, 79817, -1000, -1000, -1000, -1000, 1759,
	-1000, -1000, -1000, -1000, 1803, -1000, -1000, 1823, 692, 413,
	-1000, 2910, -1000, -1000, 1799, 4393, 1036, -305, -1000, 2381,
	2599, 50183, -1000, 928, 4393, 1523, 1368, 50904, -1000, 2374,
	27, -1000, 79817, 1759, 1228, 748, 1598, -1000, -1000, -1000,
	2341, 35680, 358, -448, -3, 2200, 2811, 2988, 2806, 2764,
	-1000, 2195, 2502, -1000, 2909, 18683, -1000, 2732, -296, -327,
	2341, 426, 426, 2501, 25334, 2341, -1000, 1383, -394, -1000,
	2370, 2114, 75426, 1785, -1000, -1000, -1000, 58843, -487, -1000,
	262, -1000, 379, -1000, 879, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12032,
	18683, 168, 37158, 2087, 2083, 79817, 2225, 79817, 18683, 2077,
	2076, 2790, 19422, 79761, 590, -339, -1000, -340, -1000, -1000,
	-1000, 2194, -1000, 2598, 1776, 453, 262, 50183, 2379, 918,
	1368, -1000, -1000, -1000, 675, -1000, 584, 553, -1000, 1598,
	-1000, 2898, -1000, -1000, 2191, -227, -1000, 2596, -16, -1000,
	2181, -1000, 2987, 2986, -1000, 75426, 2596, -1000, -1000, 2731,
	-1000, -1000, -1000, 343, -1000, 1387, 883, 1374, -1000, 553,
	-1000, 2500, -1000, 2374, 298, -1000, -1000, 2370, -1000, 2597,
	-1000, 369, 978, 976, -309, -1000, 2069, 2067, -1000, 2015,
	1723, -1000, 18683, 2169, 642, 629, 1521, -1000, -1000, -1000,
	-1000, -1000, -1000, -494, -1000, 304, -495, 969, -1000, -1000,
	2066, -1000, 3015, 4393, -1000, -496, -1000, -1000, -1000, -1000,
	2845, 1509, 62448, -1000, 2368, 262, 2596, -1000, -1000, -1000,
	-1000, -264, -1000, 1355, 61727, 631, 2178, 35680, 2596, -1000,
	2174, 2115, -1000, -1000, -317, 1574, -1000, -1000, -1000, -1000,
	-1000, -240, -1000, 2596, 788, -1000, 75426, -1000, 365, 360,
	-1000, -1000, -1000, -1000, 1689, 1676, 79817, -1000, 2166, 79817,
	2948, 2944, 2908, 34, 36419, 79611, 79557, 79817, 79817, 18683,
	79292, 79817, 1709, -1000, 79236, 79817, -1000, 25334, -1000, -1000,
	-1000, -1000, 3053, 2411, 262, -1000, 20161, 79817, -1000, 1355,
	-1000, 1876, 1846, 2658, 2657, 553, -1000, 2361, 35680, -1000,
	-1000, -325, 343, -1000, 19422, 2596, 2366, -1000, -1000, 280,
	1675, 79817, -1000, -497, 79817, -498, 862, 344, 987, 1311,
	-1000, 615, -1000, 2053, -499, -500, -501, 960, 18683, -502,
	2051, -1000, -1000, 2500, 66053, -1000, 2114, 2341, -1000, -1000,
	2655, 553, -1000, 2654, 553, -87, -88, 2652, -1000, 2361,
	-330, -1000, 2114, 19422, 2651, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 79086, 61006, -1000, -503, 79032, -504, 8231, -1000,
	-1000, -1000, 7483, -1000, -1000, -1000, -1000, 627, -1000, -1000,
	2852, -1000, -1000, 11280, 10931, 5471, 79817, 2092, 10858, 2487,
	-1000, -1000, 2411, -1000, -1000, -1000, 282, 2650, -368, 2649,
	278, 275, -1000, -1000, -92, -1000, -1000, -284, 2114, 2648,
	2647, 3014, -1000, -505, -1000, -1000, 10596, 1662, 79817, 1004,
	79817, 1643, -1000, 18683, -1000, 987, -1000, 19422, 2050, 607,
	18683, -506, 610, 597, 2048, 274, -372, 2644, 2643, -1000,
	-1000, -1000, 1771, -284, -1000, 3039, -1000, 3037, 1146, 1146,
	10207, 1604, -1000, -1000, -507, 1003, 79817, -1000, 1641, -1000,
	4393, -1000, 2047, 1562, 9697, -1000, -1000, -1000, 271, -379,
	-1000, -1000, -1000, -1000, -1000, 962, 1804, -1000, -1000, -1000,
	9641, -1000, -509, 79817, -1000, 605, 594, -1000, -1000, -1000,
	-1000, -1000, 1001, 8299, -510, 2046, 2045, -1000, 997, 79817,
	-1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3571, 3569, 3568, 15, 3567, 279, 290, 281, 11,
	2861, 3566, 297, 3565, 282, 3564, 28, 25, 21, 36,
	3562, 3226, 3224, 3222, 3210, 31, 3561, 8, 3559, 3553,
	3208, 3552, 3549, 3204, 3534, 3532, 3531, 3530, 3529, 3527,
	3526, 3525, 3524, 3197, 3194, 3189, 3165, 3523, 3522, 3521,
	3163, 3161, 3157, 3520, 33, 50, 39, 3519, 6, 3517,
	197, 224, 3515, 3, 3514, 3512, 20, 196, 3511, 3510,
	71, 3153, 3509, 3507, 3506, 3505, 3504, 3503, 153, 3502,
	3501, 3149, 3500, 3147, 3499, 3136, 3119, 3112, 3107, 3104,
	225, 3496, 3087, 3081, 3063, 3495, 2789, 228, 446, 226,
	3494, 128, 2040, 3493, 206, 3492, 209, 3491, 3490, 3489,
	431, 3486, 161, 3485, 357, 162, 164, 169, 577, 3482,
	67, 160, 301, 3481, 7, 3478, 115, 3476, 217, 3475,
	220, 2853, 195, 213, 190, 3469, 3468, 182, 3467, 3466,
	3463, 210, 3462, 3461, 233, 5535, 3454, 3450, 184, 3449,
	140, 3448, 173, 3447, 3446, 3445, 3444, 230, 121, 84,
	166, 148, 3443, 157, 3442, 3441, 3440, 3438, 3434, 3433,
	100, 59, 3418, 3431, 149, 191, 3429, 53, 47, 51,
	3425, 3424, 66, 3423, 3419, 125, 3414, 3413, 129, 3408,
	187, 75, 3407, 3406, 3405, 3403, 111, 80, 3402, 30,
	3401, 186, 3400, 3399, 3397, 3396, 3395, 98, 3390, 92,
	3389, 188, 199, 504, 3388, 3386, 42, 52, 3385, 65,
	17, 74, 108, 40, 106, 83, 179, 168, 139, 146,
	44, 156, 54, 154, 141, 3384, 229, 174, 207, 118,
	46, 3378, 3377, 202, 3374, 112, 208, 183, 181, 205,
	3373, 3371, 3368, 239, 3367, 180, 536, 3366, 123, 285,
	227, 3365, 235, 152, 3363, 3359, 3358, 3357, 114, 61,
	130, 3354, 35, 234, 231, 236, 49, 113, 3353, 1742,
	6152, 7572, 7961, 48, 77, 131, 6677, 34, 203, 3352,
	78, 3350, 3349, 3348, 5869, 165, 38, 58, 155, 3346,
	163, 64, 93, 3345, 3344, 3340, 3339, 3337, 3336, 216,
	185, 3322, 3310, 72, 3309, 3307, 43, 13, 14, 10,
	3306, 135, 215, 214, 211, 3304, 200, 63, 3303, 3302,
	177, 158, 3301, 3300, 3299, 3298, 178, 117, 201, 3297,
	198, 136, 127, 3295, 120, 3294, 3293, 109, 2382, 134,
	3292, 3290, 133, 138, 3289, 3288, 3287, 3286, 68, 3284,
	3283, 4, 3281, 110, 55, 62, 107, 24, 159, 3279,
	3278, 192, 3276, 3274, 145, 171, 3273, 143, 144, 57,
	3270, 76, 151, 3268, 167, 2, 5, 12, 3265, 3263,
	3260, 3258, 3257, 3253, 3247, 3246, 124, 3245, 3244, 105,
	87, 86, 3243, 69, 3241, 3239, 3238, 194, 172, 79,
	219, 126, 19, 3234, 3233, 9, 3229, 175, 3228, 96,
	3212, 122, 3200, 3191, 73, 104, 41, 101, 3187, 3176,
	102, 3168, 3159, 103, 3155, 3151, 222, 2373, 3145, 320,
	3143, 193, 176, 82, 85, 3138, 81, 116, 3131, 94,
	3128, 18, 70, 3124, 23, 27, 150, 3116, 0, 3062,
	204, 3089, 132, 3084, 3068, 218, 3066,
}

var yyR1 = [...]int{
	0, 457, 457, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 241, 241, 95, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 124, 124, 8, 8,
	123, 123, 123, 238, 238, 238, 238, 235, 235, 125,
	125, 122, 122, 130, 16, 16, 16, 108, 108, 17,
	18, 18, 18, 18, 460, 460, 139, 139, 137, 137,
	138, 138, 233, 233, 19, 19, 19, 243, 243, 248,
	248, 248, 251, 251, 251, 251, 221, 222, 223, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 448, 448, 448, 449, 449, 449,
	449, 449, 276, 276, 276, 276, 413, 413, 428, 428,
	428, 429, 429, 427, 427, 427, 427, 427, 431, 431,
	432, 432, 430, 430, 430, 430, 434, 434, 435, 435,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 416, 416, 416, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 437, 437, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 439, 439, 440, 440, 441, 441, 441, 441,
	442, 442, 442, 442, 442, 443, 443, 443, 443, 443,
	443, 443, 444, 444, 445, 445, 3, 2, 394, 394,
	395, 395, 396, 396, 396, 396, 397, 397, 398, 398,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	31, 31, 31, 31, 31, 31, 275, 275, 271, 271,
	271, 273, 273, 274, 274, 274, 415, 415, 415, 409,
	409, 409, 411, 411, 410, 410, 410, 412, 412, 417,
	417, 417, 417, 417, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 420, 420, 420, 418, 418, 158,
	158, 421, 421, 426, 426, 422, 422, 423, 423, 425,
	425, 425, 424, 424, 424, 424, 313, 313, 177, 177,
	68, 68, 69, 69, 69, 210, 210, 210, 20, 20,
	20, 20, 20, 20, 26, 26, 28, 28, 28, 28,
	55, 55, 56, 29, 29, 29, 29, 57, 57, 58,
	32, 32, 32, 32, 32, 32, 65, 65, 65, 64,
	64, 63, 63, 63, 63, 63, 63, 34, 35, 36,
	461, 461, 461, 59, 59, 37, 37, 37, 40, 40,
	40, 41, 41, 41, 38, 39, 42, 30, 30, 30,
	30, 66, 66, 61, 61, 60, 60, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 33,
	33, 33, 33, 33, 33, 25, 393, 393, 393, 54,
	54, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 76, 76, 350, 351, 351, 351,
	351, 351, 351, 337, 337, 338, 338, 338, 338, 338,
	338, 327, 327, 327, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 301, 301, 301, 301, 305, 305, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 304, 304, 304, 304, 304, 304, 304, 304,
	306, 306, 306, 306, 306, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 308, 308, 308, 308, 308, 308, 308, 308, 336,
	336, 310, 310, 309, 309, 309, 330, 330, 331, 331,
	331, 328, 328, 328, 329, 329, 314, 314, 314, 314,
	314, 314, 315, 332, 316, 316, 317, 317, 317, 317,
	317, 317, 318, 318, 319, 319, 319, 321, 321, 326,
	326, 325, 325, 325, 325, 325, 325, 322, 322, 322,
	322, 322, 322, 323, 323, 323, 324, 335, 335, 335,
	335, 335, 311, 46, 46, 52, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	371, 371, 376, 376, 265, 265, 266, 266, 53, 53,
	53, 53, 53, 164, 164, 372, 372, 374, 374, 374,
	374, 374, 374, 374, 373, 373, 375, 375, 339, 339,
	367, 367, 366, 366, 365, 365, 365, 365, 365, 365,
	365, 348, 348, 349, 349, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 343, 343, 343, 342, 342, 344,
	344, 347, 347, 347, 364, 364, 363, 363, 340, 340,
	340, 377, 377, 377, 377, 377, 100, 100, 341, 341,
	341, 378, 345, 345, 346, 346, 346, 386, 387, 385,
	385, 385, 385, 385, 165, 165, 165, 369, 369, 369,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 101,
	101, 101, 320, 320, 352, 352, 352, 352, 352, 456,
	456, 456, 353, 353, 353, 353, 353, 353, 447, 447,
	446, 446, 446, 354, 354, 355, 355, 355, 356, 356,
	358, 358, 272, 272, 359, 359, 360, 360, 357, 357,
	357, 361, 361, 390, 390, 390, 389, 389, 71, 71,
	71, 71, 73, 73, 72, 72, 80, 80, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 70, 70, 285, 285, 75, 209, 209, 209,
	270, 270, 383, 383, 384, 384, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 380, 380, 379,
	379, 381, 381, 74, 74, 74, 74, 159, 159, 22,
	22, 77, 77, 414, 414, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 388, 388, 388, 24, 24,
	81, 82, 82, 82, 284, 284, 284, 284, 85, 85,
	85, 85, 236, 236, 237, 237, 86, 86, 86, 86,
	87, 87, 87, 87, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 119, 257, 257,
	256, 256, 255, 255, 255, 258, 258, 258, 258, 299,
	299, 299, 84, 84, 84, 96, 96, 91, 91, 94,
	94, 94, 97, 97, 98, 98, 99, 99, 92, 93,
	43, 44, 44, 44, 44, 45, 89, 89, 89, 90,
	90, 90, 90, 110, 110, 463, 463, 463, 88, 464,
	102, 103, 103, 105, 105, 105, 106, 106, 106, 107,
	107, 107, 262, 262, 262, 262, 262, 262, 262, 104,
	104, 104, 113, 113, 117, 117, 117, 117, 116, 116,
	116, 116, 212, 212, 217, 291, 291, 193, 193, 213,
	213, 218, 218, 218, 219, 219, 220, 220, 220, 220,
	220, 215, 215, 214, 214, 216, 180, 180, 180, 180,
	178, 178, 178, 178, 178, 178, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 176, 176, 289, 289, 289, 289, 288, 288, 288,
	121, 121, 126, 126, 128, 128, 128, 128, 128, 128,
	128, 128, 131, 195, 195, 465, 465, 149, 149, 150,
	150, 150, 150, 151, 151, 151, 151, 151, 153, 153,
	153, 154, 154, 154, 154, 154, 154, 155, 156, 156,
	152, 152, 152, 174, 174, 231, 231, 232, 232, 230,
	230, 234, 234, 127, 127, 129, 129, 129, 129, 134,
	134, 135, 135, 136, 136, 296, 296, 140, 140, 140,
	142, 141, 141, 141, 141, 141, 141, 143, 143, 450,
	451, 451, 452, 452, 452, 452, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 454, 454, 455, 455,
	144, 144, 146, 147, 147, 145, 145, 145, 145, 145,
	145, 157, 157, 148, 160, 160, 160, 160, 161, 161,
	118, 118, 118, 118, 118, 118, 118, 118, 254, 254,
	163, 163, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 189, 189, 189, 189, 189, 189, 166, 166,
	166, 166, 166, 166, 166, 112, 112, 190, 190, 190,
	133, 132, 132, 115, 115, 114, 114, 191, 191, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 183, 183, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 188, 188, 188, 188, 188,
	462, 462, 185, 185, 184, 184, 184, 184, 184, 184,
	109, 109, 109, 109, 109, 297, 297, 297, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	67, 67, 202, 202, 111, 111, 200, 200, 201, 203,
	203, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 173, 173, 173,
	204, 204, 192, 192, 120, 205, 205, 206, 207, 207,
	208, 208, 211, 224, 224, 224, 225, 225, 225, 225,
	175, 175, 175, 226, 226, 226, 226, 168, 168, 167,
	167, 167, 169, 169, 169, 169, 170, 170, 466, 466,
	229, 229, 228, 228, 227, 227, 227, 227, 227, 227,
	239, 239, 194, 194, 197, 197, 196, 198, 240, 240,
	245, 245, 245, 245, 242, 242, 246, 246, 246, 246,
	249, 249, 250, 250, 250, 247, 247, 247, 247, 244,
	244, 244, 293, 293, 293, 293, 252, 252, 261, 261,
	259, 259, 260, 260, 253, 253, 312, 312, 312, 267,
	267, 268, 268, 269, 269, 263, 263, 263, 263, 264,
	264, 290, 290, 286, 286, 292, 292, 287, 287, 294,
	294, 295, 295, 295, 295, 391, 391, 392, 392, 392,
	333, 333, 402, 402, 334, 334, 403, 403, 405, 405,
	400, 400, 401, 401, 404, 404, 47, 406, 406, 407,
	407, 408, 408, 408, 408, 48, 49, 49, 49, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 283, 283, 283, 283, 283,
	283, 280, 280, 280, 280, 280, 280, 281, 281, 281,
	458, 459,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 3, 6, 6,
	5, 5, 5, 5, 4, 3, 5, 1, 3, 1,
	3, 3, 5, 0, 5, 0, 3, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 8, 4, 7,
	1, 2, 5, 7, 10, 8, 11, 1, 2, 5,
	5, 5, 5, 6, 5, 7, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 2, 2, 5,
	0, 1, 2, 1, 3, 5, 7, 8, 7, 9,
	10, 7, 9, 10, 2, 2, 2, 2, 4, 2,
	4, 2, 3, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 4, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 5, 5, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 6, 8, 3, 6,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 3, 2, 3, 3,
	2, 3, 3, 2, 3, 4, 2, 2, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 2, 3, 3, 2,
	2, 4, 3, 1, 0, 1, 3, 3, 3, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 5, 5, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 3, 3,
	0, 3, 0, 3, 1, 1, 0, 1, 5, 4,
	2, 2, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 3, 5, 5, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 3, 3, 1,
	1, 0, 1, 1, 1, 3, 5, 3, 3, 3,
	5, 3, 2, 2, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 3, 3, 3, 3, 2,
	1, 11, 12, 12, 13, 13, 0, 1, 3, 2,
	1, 5, 1, 1, 0, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 2, 3,
	3, 3, 3, 4, 5, 3, 3, 4, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 4, 4, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 0, 6, 1, 4, 5, 5, 6,
	0, 1, 0, 3, 1, 1, 0, 2, 0, 8,
	9, 0, 2, 0, 1, 2, 0, 2, 1, 1,
	1, 1, 4, 3, 6, 5, 1, 3, 5, 4,
	8, 10, 9, 2, 2, 3, 3, 4, 4, 4,
	4, 3, 3, 3, 3, 6, 5, 4, 4, 5,
	5, 8, 4, 5, 7, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 3, 3, 3, 4, 5,
	5, 3, 7, 6, 5, 2, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 5, 1, 1, 1, 1, 5, 0, 1, 2,
	0, 1, 0, 1, 1, 2, 5, 3, 4, 4,
	4, 4, 4, 4, 3, 7, 6, 8, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 3, 1,
	3, 8, 8, 8, 11, 12, 15, 0, 3, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 8, 5, 1, 1, 1, 1, 1, 4, 4,
	4, 4, 1, 3, 1, 1, 2, 2, 4, 4,
	3, 3, 3, 3, 3, 4, 3, 5, 5, 5,
	4, 4, 4, 4, 3, 2, 2, 6, 2, 4,
	3, 3, 4, 4, 5, 8, 6, 3, 4, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 4, 2, 4, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 3, 2, 0,
	1, 1, 2, 4, 1, 0, 1, 2, 1, 2,
	4, 4, 0, 1, 0, 3, 0, 2, 4, 4,
	2, 3, 4, 4, 5, 3, 3, 4, 3, 1,
	1, 1, 1, 0, 3, 1, 1, 1, 3, 0,
	2, 0, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 0, 2, 2, 2, 2, 2, 2, 0,
	1, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 2, 6, 0, 1, 0, 3, 0,
	1, 0, 2, 2, 4, 1, 2, 2, 2, 2,
	2, 0, 2, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 2, 2, 1, 1, 1,
	1, 3, 1, 1, 1, 4, 5, 1, 2, 3,
	1, 1, 2, 2, 4, 0, 1, 2, 6, 1,
	3, 2, 4, 1, 1, 1, 1, 1, 5, 5,
	8, 5, 5, 8, 5, 5, 8, 2, 2, 2,
	3, 4, 4, 0, 1, 3, 1, 0, 3, 1,
	3, 1, 3, 4, 6, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 3, 2, 2, 2, 12,
	1, 3, 3, 3, 6, 7, 2, 3, 3, 4,
	4, 5, 5, 8, 8, 3, 3, 4, 3, 4,
	1, 3, 3, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 1, 1, 5, 6, 6, 6, 5,
	5, 5, 6, 5, 5, 6, 5, 5, 5, 5,
	6, 5, 5, 5, 4, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 4, 6, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 4, 4, 2, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 6, 3, 4, 2, 2, 2,
	0, 2, 1, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 2, 1, 2, 1,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 5, 1, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 1, 0, 2, 4, 4, 1, 4, 1,
	3, 4, 1, 4, 3, 6, 2, 3, 1, 1,
	0, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 5, 1, 3, 2, 3, 3, 1, 1, 3,
	3, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 4, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -457, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -71, -22, -23, -24, -81, -85, -86, -87, -83,
	-84, -91, -92, -93, -89, -88, -30, -33, -25, -95,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -131, -458, 12, -125, 34, -76, 190,
	-448, -73, -72, -74, -75, 193, 192, 230, 194, 630,
	367, 631, 223, 72, 441, -94, 444, 445, -463, 305,
	306, 25, 42, 446, 448, 35, 36, 245, 333, 335,
	197, 442, 427, 428, 358, 678, -6, 636, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	747, -207, 20, -102, -464, -207, -10, -9, -4, 636,
	-102, -108, 14, 15, 13, 550, -102, -350, 28, -3,
	117, 76, -8, 11, -264, -275, 97, 541, 198, -273,
	329, 331, 208, -261, -263, -271, 255, 265, 49, 210,
	209, 266, 199, 329, 199, 200, 202, 541, 198, 238,
	237, 329, 331, 270, 630, 199, -145, -294, -280, -282,
	-281, 347, 82, -279, 570, 574, 270, 577, 578, 583,
	337, 90, 52, 367, 564, 359, 368, 220, 519, 565,
	330, 336, 339, 360, 719, 369, 371, 372, 562, 563,
	54, 202, 552, 553, 556, 213, 734, 352, 221, 633,
	266, 742, 737, 739, 341, 740, 509, 601, 441, 458,
	450, 477, 634, 690, 278, 300, 449, 384, 526, 602,
	344, 293, 365, 691, 320, 288, 515, 521, 303, 444,
	624, 622, 604, 535, 246, 276, 692, 297, 299, 298,
	260, 569, 304, 41, 226, 474, 643, 631, 255, 693,
	606, 686, 605, 249, 282, 619, 327, 40, 32, 621,
	248, 538, 108, 275, 694, 375, 523, 607, 495, 376,
	244, 271, 273, 289, 696, 638, 348, 232, 522, 429,
	470, 358, 127, 253, 315, 377, 697, 496, 500, 698,
	527, 334, 314, 626, 699, 700, 378, 642, 283, 701,
	201, 340, 608, 279, 702, 256, 529, 345, 494, 211,
	635, 222, 56, 235, 530, 498, 625, 504, 507, 430,
	374, 431, 703, 704, 705, 706, 356, 354, 609, 355,
	357, 620, 267, 295, 639, 610, 641, 61, 196, 645,
	502, 501, 503, 296, 659, 525, 482, 480, 707, 708,
	349, 217, 709, 710, 481, 23, 711, 712, 533, 319,
	351, 713, 714, 715, 611, 292, 627, 600, 716, 717,
	524, 497, 499, 254, 126, 630, 277, 718, 353, 520,
	362, 646, 637, 338, 290, 623, 720, 380, 291, 234,
	228, 534, 424, 425, 439, 440, 370, 721, 428, 722,
	723, 724, 725, 332, 331, 445, 363, 612, 446, 272,
	301, 640, 726, 613, 614, 727, 728, 264, 247, 537,
	528, 60, 511, 506, 366, 381, 426, 436, 432, 434,
	435, 438, 437, 433, 514, 442, 274, 241, 615, 616,
	617, 427, 618, 12, 294, 346, 628, 629, 603, 518,
	364, 302, 265, 268, 485, 236, 729, 730, 472, 473,
	443, 239, 230, 121, 536, 325, 685, 329, 382, 287,
	59, 242, 53, 731, 732, 269, 243, 644, 286, 447,
	343, 647, 199, 82, -284, -279, -282, -283, -280, 347,
	231, 58, 95, 63, 62, 82, -279, 630, 143, 478,
	526, 190, 516, 517, 523, -343, 524, 237, 424, 366,
	240, -299, 199, -257, 239, 515, 334, 353, 574, 243,
	244, 271, 425, 431, 200, 201, 37, 528, 527, 519,
	-294, -96, 447, -96, -96, 203, 447, -110, 232, 194,
	-145, 231, -66, 82, 307, -66, 34, 82, -157, -286,
	-294, 82, -279, 41, 82, 446, 518, 518, 84, 637,
	246, 26, -437, -412, 362, -436, -410, 191, 190, 15,
	192, 270, 367, 368, 333, 200, 13, 35, 719, 218,
	369, 370, 11, 223, 371, 372, 238, 14, 373, -438,
	-415, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	81, 82, -279, 26, -437, -412, 362, 370, 424, 443,
	424, 424, -266, -265, 383, 504, 143, -124, 689, -122,
	-130, -296, -294, -280, -195, -465, 251, 541, -253, 329,
	-273, 204, -126, -128, -129, -149, -132, 687, -458, -127,
	-450, -145, -133, 82, 599, -106, 10, -105, -107, 9,
	8, -106, -225, 22, 21, -262, -103, -225, -459, 78,
	-459, -124, -116, 134, -118, -294, -162, 100, -172, 33,
	29, -171, 347, 231, -163, -199, -280, -198, -133, 143,
	-298, 132, 133, 140, 101, 186, -183, -181, -182, -184,
	-186, -187, 226, 472, 473, 81, 83, 91, 84, 85,
	86, 87, 92, 93, 94, -286, -282, -278, -281, 570,
	574, 577, 578, 583, -196, -458, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 66, 67,
	568, 198, 551, 552, 475, 553, 13, 554, 555, 556,
	632, 220, 560, 103, 55, 324, 542, 543, 547, -188,
	544, 548, 549, 562, 563, 564, 565, 205, 541, 138,
	550, 587, 588, 589, 590, 591, 592, 593, 594, 596,
	597, 595, 571, 572, 573, 575, 576, 579, 580, 581,
	582, 584, 585, 586, 661, 195, 191, 194, 99, 28,
	30, 662, 252, 102, 456, 490, 559, 21, 25, 214,
	197, 478, 212, 142, 207, 215, 309, 311, 190, 70,
	663, 539, 310, 516, 657, 654, 656, 655, 469, 467,
	308, 664, 15, 31, 224, 259, 665, 465, 192, 250,
	106, 107, 666, 46, 45, 8, 312, 225, 318, 466,
	667, 668, 24, 73, 216, 16, 210, 240, 741, 669,
	333, 18, 125, 19, 670, 651, 653, 652, 204, 119,
	200, 733, 68, 257, 671, 454, 459, 460, 461, 462,
	463, 455, 96, 672, 673, 116, 323, 64, 599, 37,
	245, 687, 557, 322, 674, 43, 42, 489, 493, 488,
	321, 505, 117, 22, 545, 546, 35, 675, 676, 233,
	492, 453, 487, 688, 677, 649, 262, 71, 383, 468,
	745, 38, 74, 229, 379, 350, 47, 97, 20, 258,
	69, 39, 566, 122, 746, 471, 206, 237, 678, 531,
	261, 679, 123, 464, 689, 218, 118, 448, 193, 361,
	306, 219, 328, 335, 680, 251, 124, 517, 648, 681,
	561, 34, 223, 305, 452, 208, 682, 263, 317, 307,
	316, 683, 684, 342, 48, 743, 660, 199, 44, 105,
	491, 451, 486, 203, 558, 238, 313, 9, 49, 36,
	512, 14, 373, 72, 75, 479, 476, 484, 483, 209,
	744, 17, 326, 567, 636, 532, 98, 658, 513, 540,
	-102, -102, -102, -242, 443, -249, -246, 527, 528, -247,
	-250, -244, -199, 504, 716, 717, 526, 478, 525, -286,
	-294, -280, 347, 231, 143, 571, 572, 573, 103, 475,
	551, 587, 542, 544, 539, 543, 541, 33, 588, 29,
	94, 589, 568, 205, 13, 186, 575, 576, 590, 591,
	592, 66, 545, 546, 632, 138, 100, 593, 594, 92,
	596, 597, 324, 550, 67, 595, 198, 581, 580, 579,
	582, 554, 555, 93, 547, 548, 549, 55, 585, 584,
	586, -2, -6, -458, -145, -351, -338, -341, -286, -280,
	-282, -283, 227, -281, 215, -378, 82, -279, 212, -207,
	-102, 200, 202, 550, -260, 205, -260, 238, 237, 270,
	-274, 263, -260, -260, 720, 199, -273, 109, 109, -77,
	-145, -414, -409, -415, -259, 205, -286, -259, -259, -259,
	-259, -259, -259, -259, -259, 82, -284, -145, 187, -82,
	-145, -137, 16, 16, 75, 75, 82, -284, 82, 430,
	374, 34, -258, 117, 17, 541, 198, 199, 237, 238,
	202, 270, -258, -345, 16, 119, 241, 241, 241, 241,
	241, 242, 241, -256, 518, 520, 521, 522, -255, 16,
	119, 17, -119, 117, 24, -458, -225, -225, -255, 241,
	135, -98, 99, -98, 82, 446, 203, -90, -4, -18,
	-16, -17, -110, -9, -174, -152, 28, 6, 7, 109,
	34, 34, 81, 59, 34, -61, -60, -62, 293, 294,
	295, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	34, -393, 76, 187, -333, 504, 82, -406, -407, -145,
	84, 84, 74, 353, 74, 77, 203, 77, 74, -439,
	363, 76, -439, 331, 363, 364, 265, 329, 202, -439,
	-439, 331, -439, -439, -439, 350, -439, -439, 518, -439,
	-439, -439, 365, 366, -439, 516, 202, -439, -439, -439,
	-439, -439, 79, 74, 77, 353, 74, 16, 74, 426,
	429, 531, -164, 26, -370, 143, 375, 376, 377, 378,
	374, 353, 379, 380, 381, 241, 382, 199, 518, 374,
	-6, -122, 77, -229, -458, 77, -196, -458, 82, -326,
	-325, -322, -323, -324, -321, 33, 199, -259, 270, -140,
	-142, -141, -143, 64, 68, 70, 65, 66, 67, 519,
	71, -269, 28, -132, -458, -121, -9, -131, -126, -458,
	-150, 122, -160, -269, -151, 72, 204, 73, 28, -152,
	-153, -154, -155, -156, 6, 7, 54, -458, -458, -7,
	-8, 26, 27, -14, -7, -12, -14, 26, 27, 26,
	27, -7, -226, 24, 35, -175, 84, 87, -199, -208,
	-211, -118, -294, 58, -113, 26, 27, 65, 57, 63,
	62, -222, 89, 16, -289, 99, 97, 98, 116, -288,
	28, 82, 81, -284, 187, -118, -166, 119, 100, 117,
	118, 102, 129, 128, 139, 132, 133, 134, 135, 136,
	137, 138, 130, 131, 142, 109, 110, 111, 112, 113,
	114, 115, -254, -458, -133, -458, 187, -458, 187, 188,
	189, 187, -172, -172, -172, -172, -172, -172, -172, 81,
	81, 81, -458, 187, 187, -458, -458, -458, -458, -458,
	-191, -118, 636, -458, 199, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-202, -118, -458, -458, -462, -458, -462, -462, -185, -462,
	-458, -185, -185, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -185, -185, -185, -458, -253, -253,
	16, -137, -138, -145, -148, -294, 77, -243, -248, 529,
	531, 443, -247, -247, -293, -286, 81, 33, 143, -349,
	109, 120, 34, 187, -207, 78, 77, -301, -305, -307,
	-306, -308, -303, -304, -67, 482, 480, 476, 475, 478,
	481, 143, 479, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 34, 226, 472, 473, 474, 647,
	496, 497, 498, 499, 500, 501, 502, 503, 450, 477,
	634, 451, 452, 453, 454, 455, 456, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	-301, -301, -301, -301, -301, -285, -378, 82, -284, 76,
	-225, -262, -286, -145, -275, 208, -273, 82, 100, 82,
	-144, -286, -294, -157, -260, 264, -418, -417, -409, -412,
	660, -260, -274, -409, 269, 267, 268, 77, 203, 77,
	203, 79, -137, 29, 74, -139, -145, 82, 82, -144,
	-157, -411, -409, -412, -158, -286, -294, -295, -294, -277,
	-282, -283, 661, 195, 26, 191, 194, 99, 28, 30,
	662, 252, 102, 456, 143, 571, 572, 573, 490, 559,
	21, 25, 214, 103, 197, 475, 478, 212, 142, 207,
	215, 309, 311, 551, 587, 190, 70, 663, 542, 544,
	539, 543, 310, 541, 516, 657, 654, 656, 655, 469,
	467, 308, 33, 664, 15, 588, 31, 224, 259, 27,
	665, 136, 465, 192, 598, 250, 106, 107, 666, 46,
	45, 8, 29, 312, 225, 94, 318, 589, 466, 667,
	668, 24, 73, 216, 16, 210, 240, 741, 669, 333,
	18, 568, 125, 19, 670, 651, 653, 652, 205, 204,
	119, 200, 733, 68, 257, 13, 671, 454, 459, 460,
	461, 462, 463, 455, 186, 96, 672, 673, 116, 323,
	64, 575, 576, 599, 50, 37, 245, 590, 591, 687,
	592, 557, 322, 674, 43, 42, 489, 493, 488, 321,
	505, 66, 117, 22, 545, 546, 35, 675, 676, 632,
	233, 492, 453, 487, 688, 677, 649, 138, 262, 71,
	100, 383, 593, 594, 92, 468, 745, 38, 74, 229,
	379, 350, 47, 97, 20, 258, 69, 39, 566, 122,
	746, 596, 471, 206, 237, 678, 531, 261, 679, 123,
	597, 464, 689, 218, 118, 448, 193, 324, 550, 361,
	306, 219, 328, 335, 67, 680, 251, 124, 595, 198,
	517, 648, 11, 681, 561, 34, 223, 305, 452, 208,
	682, 263, 317, 307, 316, 683, 57, 684, 342, 48,
	581, 580, 579, 582, 743, 65, 554, 555, 660, 199,
	44, 105, 491, 451, 486, 203, 558, 238, 93, 313,
	9, 49, 36, 512, 14, 373, 72, 75, 547, 548,
	549, 55, 479, 476, 484, 585, 483, 584, 586, 209,
	744, 104, 17, 326, 567, 636, 532, 98, 658, 513,
	14, 192, 77, 81, -237, 82, -284, 81, -237, -236,
	-237, -236, 241, -258, 81, -298, -118, -260, -260, -145,
	-145, -145, -145, -145, -145, -258, -258, -258, -258, -255,
	16, -255, -258, -294, -294, -118, -172, -409, 543, 134,
	-258, -294, -99, -97, 217, -97, -99, 82, 82, 446,
	-90, 38, 28, 28, 82, -61, -61, 81, -61, 77,
	109, -61, -174, 78, -191, -286, -391, 733, 77, -408,
	28, 531, 532, 505, -441, 199, 240, 237, 74, -441,
	-436, 370, -411, -410, -409, -439, -440, -286, -439, -439,
	-439, 518, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -415, -441, 333, 77, -441, -411, -409, 203, -373,
	-375, 439, 440, 532, 533, 374, 374, 374, 374, 374,
	374, -137, -137, 203, 252, -130, 28, -228, -227, -287,
	-280, -282, -283, 227, -286, -277, -465, -326, -323, -322,
	-324, 478, 526, 142, 538, -145, -409, -158, -128, -128,
	-126, -128, 64, 64, 64, 69, 64, 69, 69, 64,
	64, -141, -296, -269, 77, -459, -459, -459, -9, -458,
	-296, -160, -269, 200, 200, 200, 102, 16, 52, 26,
	102, 16, 52, 26, 102, 16, 52, 26, -115, -114,
	-117, 134, -118, -294, -172, -238, 96, 14, 119, 77,
	23, 77, -224, 30, 31, 187, -173, 59, 84, 87,
	-238, 77, -116, -145, -118, -118, -118, -189, 92, 100,
	93, 94, -288, 227, 134, -295, -287, -282, -280, 347,
	231, -277, -172, -190, -196, -133, 88, 119, 117, 118,
	102, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -297, 82, 81, 143,
	82, -287, -114, -287, -171, 226, 472, 473, 92, -171,
	-286, -286, -104, 26, 27, -287, 519, -287, -104, -104,
	-104, -104, -104, 77, -459, -114, -114, -114, -459, -118,
	-118, -114, -172, -114, -199, 81, -114, -199, 81, -114,
	-172, 557, 558, 559, -114, -114, -104, -200, -201, 104,
	-199, -280, -283, 347, 231, -114, -459, 84, -178, -179,
	639, 648, 649, 651, 654, 647, 646, 645, 643, 642,
	641, 644, 640, 658, 657, 656, 655, 653, 652, 650,
	-178, -178, -180, 226, 474, 472, 473, -114, -115, -114,
	-114, -459, -459, -117, -114, -117, -114, -114, -459, -459,
	-459, -459, -114, -114, -114, -114, -114, -114, -114, -114,
	-114, -114, -114, -114, -459, 84, -147, 96, -145, -121,
	-145, -137, -460, 16, 75, -460, 77, 187, -246, -249,
	77, 530, 532, 533, -243, -318, -319, 142, 74, 95,
	81, -118, -287, -295, -225, -369, -338, -339, -340, -341,
	-362, 215, -377, 206, 208, 210, 209, 49, -342, 216,
	200, 50, -302, -328, 511, 512, -310, 76, -309, 76,
	-67, 476, 475, 478, -309, 476, 483, -309, 483, 483,
	-309, -309, -309, 476, 76, 76, -310, -310, -310, -330,
	76, -330, 471, -331, 76, -331, -331, -331, -331, -302,
	-302, -302, -302, -302, -378, -118, -226, -290, 75, -229,
	202, 720, -326, 29, -326, -68, 252, 221, 187, 76,
	-158, 255, 256, -413, 77, 33, -419, 330, 84, 205,
	-145, 231, -145, -145, -409, -409, -415, -388, 219, 214,
	-145, 77, 77, 187, 699, 699, -145, 77, 81, 82,
	82, -174, -346, 16, 119, -258, -145, -174, -112, 227,
	75, -462, -459, 448, 449, 82, -172, 38, 38, -60,
	-171, -286, 78, -392, 204, 550, 81, -407, -296, 504,
	532, -442, 134, -286, -441, -442, -445, 636, 203, 78,
	77, -439, -442, 350, 333, -442, 16, -372, -374, 432,
	433, 434, 435, 436, 437, 438, 77, 109, 109, -376,
	24, -371, 636, -371, 81, -172, -132, -459, 77, 187,
	-196, 34, -348, -349, -348, -348, -80, -384, -78, -382,
	195, 192, 191, 266, 197, -321, 551, 249, 248, 282,
	283, 73, 35, 196, 193, -70, -79, 230, 288, 234,
	289, 194, 229, 290, 228, 291, 636, 286, 740, 509,
	601, 602, 603, 90, 604, 246, 41, 200, 606, 538,
	375, 607, 608, 211, 609, 610, 611, 339, 612, 613,
	614, 615, 616, 617, 364, 9, -419, -425, 74, -135,
	-134, 74, 75, -136, 74, -134, 64, 64, 64, -232,
	76, -296, -126, -459, -234, -286, -160, -296, -458, -458,
	-458, -172, -172, 119, -172, -172, 119, -172, -172, 119,
	-459, 77, 187, 77, -235, 40, 39, -286, 506, 60,
	-175, -175, -211, -252, 24, 16, 55, 55, -123, 16,
	-222, -222, 92, 93, 94, 187, -458, -190, -172, -172,
	-172, -112, 99, -459, -459, -115, -114, -114, -114, -114,
	-114, -118, -459, -459, -459, 77, 75, 28, -459, 75,
	119, -459, 16, 16, -459, 16, 16, -459, -459, 16,
	-172, -172, -172, -459, -459, -114, -203, -201, 106, -118,
	-459, -459, -459, -459, -459, 77, 77, 16, 77, -459,
	-459, -459, -459, -212, 566, -212, -459, -459, -459, -459,
	-459, -212, -212, -212, -212, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -233, 122,
	-145, 34, -233, 75, -121, -121, -148, -294, 134, -248,
	-251, 534, 531, 537, 82, 81, 143, 81, 187, -226,
	-354, -368, 77, 122, 740, 509, 601, -321, 602, 603,
	90, 604, 246, 41, 200, 606, 538, 375, 607, 608,
	211, 609, 610, 611, 339, 612, 442, 613, 614, 615,
	616, 617, 364, 9, 76, -347, -285, -377, 82, -279,
	50, -342, -344, -342, -342, -342, -347, 82, -279, -347,
	50, 702, 92, 100, -317, -319, 143, -314, -315, -332,
	-335, -311, 28, 741, 514, 218, -341, 478, 526, 33,
	74, 509, 206, 50, 49, 210, 90, -329, 513, 84,
	84, 577, -309, 483, -309, -309, -309, -309, -309, -336,
	81, -336, 84, -330, 84, 78, 74, -286, 28, -145,
	660, -69, 13, 14, 15, -286, -394, -395, -396, -286,
	119, 257, 258, 74, -428, 361, -417, 331, 340, 99,
	21, 636, -449, 100, 203, 203, -145, -409, -286, 74,
	74, -237, -161, 17, 82, 82, -255, -258, -172, -412,
	243, 244, -172, -172, -146, 96, -408, 203, 187, 187,
	-442, 203, 352, -411, -286, 16, 16, 350, 16, -411,
	77, 109, 109, 109, 109, 109, 109, 109, -375, 76,
	76, 384, 531, -227, -287, -348, 82, 81, 143, 82,
	81, 143, 81, -383, 77, -384, 195, 192, 282, 283,
	-382, -270, -342, -390, -389, -340, -341, 122, 207, 215,
	215, 212, -270, -342, 206, 216, 122, 215, 212, -270,
	200, -348, -270, 478, 142, 203, 37, 37, 364, 122,
	364, 122, -348, -270, 207, -342, -267, 215, -268, 203,
	28, 287, 122, 122, 122, 122, 122, 122, 122, 122,
	292, -348, -348, -348, -348, -348, -348, -348, -348, 605,
	605, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, -352, -446, 81,
	-456, 90, 270, 339, 82, -279, -277, 84, 86, 85,
	-348, -159, 193, 276, 272, -118, 76, -118, -230, -286,
	-232, -459, 77, -160, -230, -230, -230, 99, 203, -458,
	99, 203, -458, 99, 203, -458, -269, -117, 134, -295,
	81, 77, 81, 81, 507, 61, -145, -161, 598, -121,
	-116, 134, -287, -115, -112, 99, -172, -459, -459, -459,
	-459, -459, -459, -300, 143, 475, 478, 226, 474, 467,
	465, 464, 466, 494, 480, 511, 472, 512, 647, -297,
	-300, -297, -172, -172, -172, -172, -172, -172, 16, 16,
	16, 633, -207, 108, -118, 105, -172, -172, -172, -172,
	-286, -217, -458, -212, -212, -212, -212, -212, -213, -212,
	-213, -213, -213, -213, -213, -213, -213, -213, -213, -213,
	-213, -168, -169, 34, -167, -9, -458, -170, -466, 55,
	59, -458, -240, -245, -199, -280, -283, 227, -161, -121,
	-161, -161, 187, 531, 535, 536, -368, 21, -348, -348,
	-348, 526, 478, 142, -348, -348, -348, -348, -348, 605,
	605, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, 443, -348, -348, -348, -348, -348, -352, -446,
	-348, -364, -363, 82, -284, 206, 49, -377, -347, -347,
	-347, -347, -347, -100, -285, 92, -458, 742, 84, -145,
	34, 82, 143, 81, -171, 133, -298, -163, -182, -458,
	93, 94, 542, 543, 547, 544, 548, 549, 562, 563,
	564, 565, 539, 545, 546, 14, 50, 50, 50, 81,
	78, 78, 78, -309, 78, 77, 78, 77, 78, 77,
	-165, 694, 695, -145, -221, -229, 84, 74, 78, 77,
	-301, -286, -286, -286, 272, -431, 636, 336, -429, -427,
	342, 343, 344, 345, 346, -412, 341, -419, 338, 81,
	82, 81, 659, 693, 714, 686, 29, -145, -409, -231,
	76, -230, -231, -118, -174, -233, 199, -411, 134, 134,
	-286, 203, -411, 350, -444, 636, -411, -411, 16, -411,
	-374, 81, 81, 81, 84, 84, 84, 84, -137, -137,
	81, 35, 82, 81, 143, -78, 195, 192, 282, 283,
	76, -337, 82, -284, -347, -263, 208, 206, -458, 82,
	-285, -285, -285, -286, 50, 50, -234, -285, -285, -286,
	-285, 33, 279, 280, 281, 82, 34, -348, 478, -234,
	26, -234, 26, 33, 336, 284, 285, -337, -285, -286,
	-145, 216, 212, -285, -234, 26, 84, -234, -286, -234,
	26, -234, 26, -234, 26, -234, 26, -352, -118, -352,
	-456, -456, 81, 81, 81, -348, -348, -456, 81, -446,
	81, -101, 217, 220, 222, -352, -352, -352, -456, 81,
	-353, 33, 621, 470, 622, 623, 624, 82, 92, 81,
	81, 33, -456, 33, -456, -352, 618, -458, -424, 248,
	249, 203, 277, 100, -421, 739, 273, -230, 78, 77,
	-150, -286, -459, -459, -459, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -296, 187, 521, -286, -316, -317,
	-204, 18, -222, -459, -172, -213, -213, -213, -213, -213,
	-459, -310, -310, -310, -310, -331, 471, -310, 455, -310,
	455, -459, -459, -459, -459, 24, 24, 24, 24, -459,
	-172, -172, -172, -458, -111, 561, -118, 77, 77, -459,
	-459, -291, 82, -239, 74, -239, -240, -269, -9, -459,
	-228, -170, -458, 11, 55, 59, 636, 199, -194, -197,
	-465, -234, -161, 77, -349, -349, -349, -349, -207, -161,
	-355, -356, -359, -358, 123, 625, 674, -352, -352, -352,
	-348, 34, -348, -456, -456, 81, 81, 81, -348, -348,
	-456, 81, -446, 81, -101, -352, -352, -352, -456, 81,
	-353, 82, 92, 81, 81, 33, -456, 33, -456, -352,
	618, -458, 78, 77, -310, -310, 50, -344, 76, -172,
	28, 76, 82, 143, 81, -171, 81, -172, -188, 81,
	84, 84, 76, -223, 28, -449, -145, -397, -398, -399,
	90, 635, 100, 259, 260, 217, 261, 262, 263, -396,
	-301, -301, -301, -421, -434, -435, -433, 339, 359, 360,
	347, -432, -430, 354, 355, 356, 357, 99, 81, 81,
	81, -420, 330, 99, 339, 21, 28, 21, 28, 81,
	81, 81, 81, 84, 75, -230, -258, -316, -145, -444,
	-411, -444, 333, -411, 78, 78, -337, -209, 220, 221,
	-301, -301, -290, -344, 50, -379, -381, 122, -285, 694,
	695, 694, 695, 34, 192, 732, 702, -337, -348, -297,
	34, 364, 364, 364, 364, -209, -268, 203, 50, -285,
	203, 364, 364, 96, 636, 81, 81, 619, 620, -447,
	-446, -313, 90, 74, -158, 277, -425, 74, -177, -171,
	-182, -171, 78, -286, 77, 77, 77, 134, -458, -400,
	-256, -205, 19, 21, -316, 82, -316, 82, -172, -172,
	-172, -172, -459, -459, -459, -172, -459, 81, -172, -172,
	-193, 122, 32, -239, -296, -459, -170, -458, -459, -459,
	77, -196, -458, -459, -207, -245, -118, -118, -118, -118,
	-225, -360, 627, -458, 521, 626, 50, -297, -348, -320,
	-446, 81, 81, 81, 619, 620, -447, -366, -365, 75,
	211, 90, 607, 614, 732, 702, -363, -224, -224, -347,
	-347, -230, -459, -458, -230, -459, 78, 78, -364, -9,
	-221, 24, -222, -399, 81, 263, 259, 263, 263, 263,
	263, 264, -425, -416, 90, 337, -433, 348, 700, 332,
	361, 84, 84, 121, 35, 36, -430, 84, 84, 84,
	84, -427, 21, 636, -419, 338, 81, 81, 338, 81,
	81, 330, -449, 41, 78, -400, -443, 28, -444, -443,
	350, 78, 82, -302, -302, 76, -347, -347, -459, 77,
	-286, 33, 33, -209, -297, -297, -285, -286, -285, 203,
	-285, -458, 199, 77, -459, 327, 81, 366, -159, -426,
	-179, -172, -172, -172, -451, -452, -287, 707, -401, 43,
	-403, 44, -215, 567, -206, -118, -192, -120, -118, -459,
	-459, -459, -459, -109, 119, 636, -459, -459, -207, 21,
	50, -232, -170, -9, -458, -197, -459, -225, -357, 628,
	84, -172, -458, -458, -272, 266, -297, -459, -365, -446,
	-348, 81, -348, -348, 78, -327, 744, 743, -172, 78,
	78, -221, -223, 250, -223, 41, 41, 255, 256, -424,
	81, 81, 33, 349, 186, 33, 84, 186, 569, 338,
	81, 82, 339, 339, 21, -172, -401, -409, -443, -364,
	-290, 76, -381, 55, -172, 142, 142, 203, -285, -379,
	-145, -446, -221, -424, 132, -422, 274, -459, -459, -459,
	-459, 77, -301, 24, 81, 600, -404, 48, -402, -334,
	47, 21, -214, -216, -286, 77, -459, 634, 71, 637,
	-218, 124, 123, -191, 14, -9, -380, -458, 21, -459,
	-230, -172, -458, 109, 84, 81, 81, 218, -459, -367,
	-366, -276, 636, -9, 251, -27, -4, -16, -17, -18,
	-19, -21, -71, -22, -23, -28, -29, -24, -81, -85,
	-86, -87, -83, -94, -92, -93, -89, -88, -32, -34,
	-35, -37, -40, -41, -38, -39, -36, -30, -33, -42,
	-25, -43, -44, -45, -50, -51, -31, -52, -46, 103,
	205, 442, 308, 319, 320, 321, 82, 324, 326, 322,
	323, 318, 328, 441, -313, 84, 33, 84, 33, 351,
	339, 28, 84, -312, 204, 636, 78, 76, -364, 235,
	-348, -297, -285, -459, -70, -27, -313, 186, -423, 275,
	-177, -459, -452, -453, 600, 29, 713, 521, 81, -403,
	21, -405, 45, 46, 81, 77, 28, -120, 61, 635,
	638, -459, -219, 102, -220, 121, 569, -176, 84, 186,
	-219, -240, -459, -379, -358, -459, -459, -230, 84, -145,
	-327, 212, 278, 504, -221, -210, 253, 254, -221, -118,
	-55, -56, 104, -118, 82, -65, -292, 311, 312, 313,
	-287, 82, 82, -54, -27, 80, -54, -118, 82, 82,
	-461, 16, 58, -172, 108, -54, 327, 643, 643, 81,
	-232, 84, 331, -367, -364, 78, 236, -297, 287, -221,
	327, -171, -177, -426, -269, 81, 600, -458, 521, 81,
	21, 21, -216, -217, 61, -220, 126, 127, 251, 126,
	127, -171, -459, 626, 50, -459, 76, 350, 212, 212,
	-276, -221, 82, 82, -55, 108, 106, -56, -118, 105,
	309, 310, 314, -301, 77, 747, 441, 321, 324, 326,
	747, 327, 82, 16, 747, -221, -241, 34, 43, 124,
	33, 336, 26, -412, 78, -367, -458, -221, -179, -426,
	-296, -454, -455, 376, 92, 33, 81, -451, -458, 81,
	81, 636, 99, -178, -458, -272, -230, 350, 350, -223,
	108, 106, 103, -54, 105, -54, 24, 24, 24, -316,
	-287, 108, -27, 108, -54, -54, -54, -118, 325, -54,
	96, 108, -27, -240, 8, -367, -172, 233, -27, -455,
	92, 33, -454, 92, 33, 74, 74, -171, -459, -451,
	637, -220, -172, -458, 78, -20, -26, -19, -25, -16,
	-17, -18, 441, 636, 103, -54, 747, -54, 747, -66,
	84, -9, -64, -63, 84, -66, 316, 100, 317, 82,
	-318, 321, 82, 747, 747, 747, 327, -118, 747, -59,
	82, -221, -412, -459, -459, -221, 74, -171, 74, -171,
	666, 376, 666, 376, 74, -459, 638, -459, -172, -386,
	-387, 74, -221, -54, 108, -124, 747, 108, 747, 108,
	106, -57, -58, 107, -27, 77, 315, 33, 108, 108,
	325, -54, 108, 108, 77, 74, 74, 376, 376, 666,
	376, -361, 629, -459, -387, 74, -386, 74, 15, 14,
	747, 108, 103, 205, -54, 108, 106, -58, -118, -63,
	-172, 82, 321, -118, 747, 324, 326, 82, 74, 74,
	84, -361, -385, 219, 214, 217, 34, -385, 108, 103,
	747, 205, -54, 105, 82, 108, 108, 376, 666, 213,
	33, 92, 108, 747, -54, 324, 326, 205, 108, 747,
	82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1688, 1189, 1688, 0, 1189, 0, 1189, 0, -2,
	133, 908, 909, 910, 911, 0, 0, 0, 0, 0,
	0, 0, -2, 1154, 1155, 1158, 1155, 1155, 1183, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 64, 0, 1295, 2710,
	-2, 1185, 1186, 1187, -2, -2, 0, 53, 0, 60,
	2, 1696, 0, 1202, 1191, 1696, 0, 0, 49, 0,
	0, 1189, 1189, 1189, 87, 88, 0, 119, 0, 121,
	0, 0, 1688, 1189, 0, 0, 0, 1772, 1772, 333,
	1772, 1772, 1787, 0, 1790, 331, 0, 1769, 1785, 1786,
	1788, 0, 0, 0, 1770, 0, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 0, 0, 1069, 1385, 1387, 1388,
	1389, 1390, 1799, 1800, 2701, 2702, 2703, 2704, 2705, 2706,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2707, 2708, 2709, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 0, 0, 0, 1074, 1075, 1076, 1077, 2695,
	2696, 2697, 2698, 2699, 2700, 1086, 1087, 0, 0, 0,
	1145, 0, 1145, 1105, 1106, 0, 1108, 0, 0, 0,
	0, 0, 0, 0, 1142, 1120, 1123, 1127, 0, 1696,
	1696, 1142, 1133, 0, 774, 775, 776, 1150, 1151, 1139,
	1152, 1157, 1156, 1164, 1164, 0, 1156, 79, -2, 0,
	1323, 0, 457, 459, 0, 480, 0, 483, 486, 1391,
	0, -2, -2, 1810, 1170, 0, 0, 1835, 1836, 0,
	0, 0, 0, 0, 2571, 231, 347, 272, 272, 272,
	272, 272, 272, 272, 0, 272, 272, 0, 272, 272,
	272, 2587, 272, 0, 272, 272, 272, 272, 272, 230,
	346, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	336, 337, 338, 0, 0, 0, 2571, 0, 730, 1159,
	731, 733, 0, 727, 724, 725, 0, 80, 0, 67,
	81, 1720, 1345, 1346, 1292, 0, 1296, -2, 0, 1770,
	0, 1775, 69, 1282, 1283, 1284, -2, 0, 0, 1290,
	1291, -2, 1441, 1799, 0, 0, 1196, 0, 0, 1193,
	1199, 0, 1703, 0, 0, 117, 1190, 47, 48, 2711,
	59, 0, 0, 1218, 1273, 0, 1400, 2270, 1406, -2,
	2183, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 2128,
	0, 0, 0, 0, 0, 2225, 1479, 1480, 1481, 1482,
	1483, 1484, 2435, 2649, 2650, 1666, 1670, 1671, 1672, 1673,
	1674, 1675, -2, -2, -2, 1651, 1652, 0, 1664, 2701,
	2702, 2704, 2705, 2706, 1737, 0, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 2251, 2314,
	2202, 2319, 2147, 2707, 2139, 2708, 2216, 2343, 2344, 2709,
	2259, 2680, 0, -2, 2368, 2307, -2, -2, -2, 1547,
	-2, -2, -2, 2691, 2692, 2677, 2682, 2209, 2157, 2267,
	2308, 2148, 2169, 2188, 2237, 2238, 2240, 2272, 2273, 2291,
	2300, 2318, 2129, 2130, 2131, 2232, 2233, 2340, 2339, 2338,
	2341, 2374, 2372, 2375, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2132, 2133, 2134, 2135, 2136,
	2138, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2149, 2150,
	2151, -2, 2156, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2167, 2168, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2184, 2185, 2187, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2203, 2204, 2205, 2206, 2207, 2208, 2210, 2211,
	2212, 2213, 2214, 2215, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2226, 2227, 2228, 2229, 2230, 2231, 2234, 2235,
	2236, 2239, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 2252, 2253, -2, -2, 2256, 2257, 2258, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2268, 2269, 2271, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2301, 2302, 2303, 2304, 2305, 2306, 2309,
	2310, 2311, 2312, 2313, 2315, 2316, 2317, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2342, 2345, 2346, 2347, 2348,
	2349, 2350, 2351, 2352, 2353, 2354, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2369, 2370, 2371, 2373, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 0,
	1774, 1774, 0, 104, 2651, 0, 1744, -2, -2, 1746,
	0, 0, 0, -2, -2, -2, -2, 2140, -2, 1651,
	0, 0, 0, 0, 2128, 2129, 2130, 2131, 2137, 2139,
	2147, 2148, 2152, 2153, 2154, 2155, 2157, 2166, 2169, 2183,
	2186, 2188, 2202, 2209, 2216, 2225, 2232, 2233, 2237, 2238,
	2240, 2251, 2254, 2255, 2259, 2267, 2270, 2272, 2273, 2274,
	2291, 2300, 2307, 2308, 2314, 2318, 2319, 2338, 2339, 2340,
	2341, 2343, 2344, 2355, 2365, 2366, 2367, 2368, 2372, 2374,
	2375, 120, 1688, 0, 122, 0, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 800, 1793, 1794, 0, 1696,
	1202, 0, 0, 331, 0, 0, 0, 0, 0, 1772,
	326, 0, 0, 0, 0, 1772, 333, 0, 0, 1049,
	0, 1050, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1092, 1093, 1068, 0, 1070,
	98, 1073, 0, 0, 0, 0, 1090, 1091, 1094, 0,
	1136, 1145, 1096, 0, 0, 1772, 1772, 0, 0, 0,
	0, 0, 1104, 0, 802, 803, 1145, 1110, 1111, 1145,
	1145, 1145, 1142, 0, 1142, 1117, 1140, 1141, 1145, 0,
	0, 0, 1122, 0, 0, 0, 1130, 1131, 1145, 1135,
	0, -2, 1162, -2, 1171, 0, 0, 1176, 1179, 1180,
	1181, 1182, 79, 1178, 1188, 1324, 0, 0, 0, 0,
	0, 0, 461, 0, 0, 482, 463, 0, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	0, 1323, 0, 0, 1805, 1811, 1175, 1826, 1827, 0,
	1837, 1838, 276, 0, 276, 0, 0, 0, 0, 198,
	272, 0, 200, 272, 272, 272, 0, 272, 272, 207,
	208, 272, 210, 211, 212, 272, 214, 215, 272, 217,
	218, 219, 272, 272, 222, 272, 272, 225, 226, 227,
	228, 229, 345, 276, 0, 0, 276, 0, 0, 0,
	0, 0, 732, 734, 705, 0, 0, 0, 0, 710,
	711, 712, 713, 0, 0, 716, 717, 0, 0, 0,
	65, 66, 0, 0, 0, 1295, 1293, 0, -2, 913,
	-2, 681, 682, 683, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 1350, 0, 0, 0,
	0, 0, 1784, -2, 0, 0, 0, 0, 1280, 0,
	1297, 0, 1299, 0, -2, 0, 0, 0, 1784, 1303,
	1304, 1305, 1306, 1307, 0, 0, 0, 1443, 0, 57,
	58, 1197, 1198, 54, 62, 63, 55, 1194, 1195, 1200,
	1201, 56, 73, 0, 0, 1697, 1700, 1701, 1702, 1689,
	1690, 1693, 0, 0, 73, 1203, 1204, 1205, 1206, 1207,
	1208, 0, 1192, 0, 1219, 0, 0, 0, 0, 1274,
	0, 1277, 1278, 1279, 0, 1404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1407, 0, 1421, 0, 0, 0, 0, 0,
	0, 0, 1472, 1473, 1474, 1475, 1476, 1477, 0, 1667,
	1668, 1669, 1209, 0, 0, 1209, 1209, 1209, 1209, 1209,
	0, 1447, 2381, 0, 2346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1209,
	0, 1643, 0, 0, 1544, 0, 1545, 1546, 1548, 1562,
	0, 1549, 1550, 0, 0, 0, 0, 0, 1443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 1558, 1559, 0, 0, 0,
	0, 0, 0, 98, 100, 1385, 0, 105, 107, 0,
	0, 2651, 1747, 1748, 672, 1762, 1763, 1764, 1765, 0,
	763, 764, 1760, 0, 1696, 817, 0, 554, 651, 572,
	573, 574, 641, 576, 643, 0, 643, 643, 1640, 1641,
	643, 643, 643, 618, 619, 620, 621, 622, 624, 625,
	626, 627, 628, 0, 0, 600, 641, 641, 641, 604,
	631, 632, 633, 634, 635, 636, 637, 638, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 646, 646, 648, 648, 648, 648, 648,
	554, 554, 554, 554, 554, 0, 799, 1004, 1005, 0,
	1703, 117, 1791, 1720, 0, 0, 333, -2, 0, -2,
	0, 1380, 0, 0, 0, 0, 146, 367, 349, 131,
	0, 0, 327, 332, 328, 329, 330, 0, 0, 0,
	0, 340, 1065, 1771, 0, 1057, 96, 1058, 1059, 1060,
	1061, 1062, 342, 1063, 1064, 369, 0, 1386, 1801, 1802,
	1803, 1804, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	0, 0, 0, 1078, 1080, 1084, 1085, 1079, 1081, 1088,
	1082, 1089, 1134, 1095, 1146, 0, 1148, 0, 0, 1323,
	1100, 1101, 1102, 1103, 804, 1109, 1112, 1113, 1119, 1145,
	0, 1323, 1118, 1143, 1144, 1121, 1435, 1124, 1560, 0,
	1132, 1153, 1168, 0, 1163, 0, 1169, 1173, 1172, 0,
	1177, 0, 0, 0, 1184, 458, 460, 462, 481, 0,
	0, 484, 485, 487, 0, 1392, 1807, 0, 0, 1829,
	0, 1831, 1833, 0, 0, 277, 278, 279, 276, 0,
	232, 0, 294, 348, 0, 199, 0, 274, 201, 202,
	203, 272, 205, 206, 209, 213, 216, 220, 221, 223,
	224, 344, 0, 0, 0, 0, 196, 0, 0, 729,
	744, 0, 0, 1160, 1161, 706, 707, 708, 709, 722,
	715, 720, 720, 0, 0, 82, 0, 0, 1722, 1725,
	1726, 1727, 1728, 1729, 1797, 1798, 0, 912, 684, 685,
	686, 0, 761, 761, 761, 677, 0, 379, 1341, 1343,
	0, 1338, 1348, 1349, 1351, 0, 1353, 0, 0, 1356,
	1357, 1358, 1327, 0, 0, 1289, 1440, 1442, 0, 0,
	1394, 1301, 0, 0, 0, 0, 0, 0, 0, 1317,
	0, 0, 0, 1318, 0, 0, 0, 1319, 0, 1444,
	1445, 1214, 1215, 0, 0, 45, 0, 1704, 0, 0,
	0, 0, 1692, 1694, 1695, 0, 0, 1677, 0, 0,
	70, 117, 117, 50, 1401, 1402, 1403, 1405, 1422, 0,
	1424, 1426, 1275, 1276, 1220, 0, 1653, -2, 1655, -2,
	-2, -2, 1412, 1413, 1437, 1438, 1439, 0, 0, 0,
	0, 1435, 1417, 0, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1471, 1575, 1576, 1577,
	0, 1662, 0, 1663, 1469, 0, 0, 0, 1676, 1470,
	1658, 1478, 1443, 1210, 1211, 1660, 1661, 1659, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 1453, 1666, 0, 1453, 1666, 0,
	0, 2241, 2353, 2133, 0, 0, 0, 1649, 1646, 0,
	0, 0, 0, 2695, 2696, 0, 1561, 0, 0, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	0, 0, 0, 1246, 1247, 1248, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1555, 0, 102, 0, 1384, 0,
	-2, 0, 0, 94, 95, 0, 0, 0, 1745, 0,
	0, 0, 110, 111, 106, 1749, 673, 0, -2, 1756,
	1666, 1758, 1653, 0, 1703, -2, 539, 540, 541, 542,
	0, 781, 790, 0, 0, 779, 0, 781, 781, 0,
	777, 778, 545, 654, 652, 653, 575, 0, 605, 0,
	643, 643, 1640, 1641, 607, 643, 643, 610, 643, 643,
	613, 616, 617, 623, 0, 0, 601, 602, 603, 592,
	0, 593, 646, 595, 0, 596, 597, 598, 599, 546,
	547, 548, 549, 550, 798, 0, 296, 0, 0, 0,
	0, 0, 126, 1773, 127, 0, 390, 391, 0, 298,
	0, 334, 335, 148, 0, 0, 350, 0, 137, 0,
	534, 535, 0, 1051, 0, 1053, 339, 1055, 1066, 1067,
	1056, 0, 0, 0, 0, 0, 99, 0, 1147, 1097,
	1098, 1099, 1398, 0, 0, 1114, 1142, 1145, 1137, 0,
	0, 1125, 0, 1167, 1165, 1174, 1320, 0, 0, 464,
	465, 466, 488, 0, 1808, 1809, 1806, 1828, 0, 1832,
	1834, 0, 280, 282, 0, 0, 190, 0, 0, 273,
	0, 204, 0, 0, 0, 0, 0, 728, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 714,
	0, 718, 0, 719, 703, 704, 83, 1721, 0, 0,
	1294, 761, 0, 762, 0, 0, 1012, 915, 916, 1014,
	-2, 1010, 1010, 761, 1010, 0, 0, 0, 0, 0,
	0, 953, 761, 1010, 1779, 0, 966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1002, 1003, 761, 761,
	761, 761, 761, 761, 761, 761, 0, 0, 761, 761,
	761, 761, 761, 761, 761, 761, 761, 761, 761, 761,
	761, 761, 761, 761, 0, 761, 1006, 1047, 0, 1335,
	1342, 0, 0, 1336, 0, 1337, 1352, 1354, 1355, 1285,
	0, 1327, 1281, -2, 0, 1331, 1300, 1394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 74, 2448, 0, 77, 0, 0,
	1698, 1699, 1691, 0, 1766, 1767, 1678, 1679, 1398, 0,
	0, 1212, 1423, 1425, 1427, 0, 1443, 1414, 1435, 1418,
	0, 1415, 0, 1409, 1517, 0, 0, 0, 0, 0,
	0, 1448, 1515, 1516, 1518, 0, 0, 0, 1522, 0,
	0, 1526, 0, 0, 1568, 0, 0, 1569, 1531, 0,
	0, 0, 0, 0, 1537, 1688, 0, 1647, 0, 0,
	1540, 1541, 1542, 1543, 1563, 0, 0, 0, 0, 1564,
	1565, 1566, 1567, 1504, 0, 1505, 0, 0, 0, 0,
	0, 1511, 1512, 1513, 1514, 1229, 1229, 1229, 1229, 1229,
	1229, 1229, 1229, 1229, 1229, 1229, 1229, 1556, 0, 0,
	1383, 0, 1398, 0, 1398, 1398, 101, 0, 1393, 108,
	109, 0, 0, 115, 674, 675, 676, 1757, 0, 297,
	536, 818, 677, 0, 761, 761, 761, 0, 761, 761,
	761, 761, 761, 0, 0, 761, 761, 761, 761, 761,
	761, 761, 761, 761, 761, 761, 0, 761, 761, 761,
	761, 761, 0, 761, 0, 0, 0, 789, -2, -2,
	781, 781, 781, 780, 781, 781, 772, 782, 783, 773,
	796, 555, 556, 0, 558, 559, 560, 561, 562, 563,
	564, 565, 0, 0, 0, 0, 570, 0, 0, 0,
	0, 663, 0, 698, 700, 0, 0, 571, 655, 0,
	0, 0, 606, 643, 614, 608, 609, 611, 612, 0,
	639, 0, 0, 594, 0, 814, 0, 1792, 116, 1720,
	0, 0, 392, 393, 394, 1381, 0, 299, 300, 0,
	0, 0, 0, 0, 158, 0, 368, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 97, 343, 370, 0,
	0, 1083, 1107, 0, 805, 806, 1323, 1116, 1436, 1126,
	1128, 1129, 1321, 1322, 102, 0, 1830, 0, 0, 0,
	0, 0, 0, 292, 275, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 1723, 1724, 0, 690, 691, 692, 693,
	694, 695, 696, 914, 677, 1013, 0, 0, 0, 0,
	1015, 0, 781, 0, 0, 923, 924, 0, 1011, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 945, 946, 947, 0,
	948, 0, 0, 0, 0, 0, 0, 0, 1780, 1781,
	1782, 965, 0, 0, 0, 0, 0, 0, 0, 0,
	1036, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 997, 998, 864,
	865, 866, 867, 868, 880, 881, 882, 869, 870, 871,
	0, 382, 0, 0, 0, 1339, 0, 1344, 0, 1329,
	1286, -2, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1446, 1216, 0,
	0, 0, 75, 664, 1705, 1706, 46, 1680, 71, 72,
	117, 1221, 1665, 0, 1416, 0, 1419, 1485, 1229, 1229,
	1229, 1229, 1229, 0, 641, 641, 641, 1625, 641, 648,
	1628, 1630, 1631, 1632, 641, 1634, 641, 1637, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 1539, 1650, 0, 0, 0, 0, 0,
	1222, 1223, 1225, 1506, 1507, 1508, 1509, 1510, 1489, 1230,
	1490, 1491, 1493, 1494, 1496, 1497, 1498, 1499, 1501, 1502,
	1503, 1730, 1730, 0, -2, 1712, 0, 1709, 1295, 1718,
	1719, 0, 1398, 1738, 0, 0, 0, 0, 1688, 1398,
	92, 93, 0, 112, 113, 114, 819, 890, 0, 0,
	0, 761, 0, 761, 0, 0, 0, 0, 0, 761,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 844, 0, 0, 0, 0, 0, 854, 855,
	0, 0, 784, 641, 641, 0, 779, 788, 765, 767,
	768, 769, 771, 0, 797, 557, 0, 0, 568, 0,
	0, 669, 670, 671, 656, 0, 0, 659, 660, 0,
	1410, 1411, 1560, 1560, 1560, 1560, 1560, 1560, 0, 0,
	0, 0, 1560, 1560, 1560, 0, 697, 699, 701, 702,
	642, 644, 645, 615, 629, 0, 630, 0, 649, 0,
	801, 815, 816, 0, 118, 0, 137, 0, 306, 0,
	302, 0, 0, 0, 0, 166, 0, 149, 150, 151,
	153, 154, 0, 0, 0, 147, 0, 352, 0, 355,
	356, 357, 0, 0, 0, 0, 0, 1052, 1054, 0,
	0, 1326, 1072, 1399, 1145, 664, 0, 292, 281, 283,
	284, 0, 292, 295, 191, 0, 192, 194, 0, 193,
	736, 737, 738, 739, 740, 741, 742, 743, 0, 0,
	723, 721, 687, 688, 689, 917, -2, 1010, 0, 0,
	0, 1007, 0, 0, 1791, 779, 1787, 0, 0, -2,
	925, 926, 949, 950, 951, 0, 1017, 0, 0, 0,
	0, 931, 932, 933, 934, 0, 761, 0, 0, 0,
	0, 0, 0, 954, 955, 956, 957, 1007, 0, 0,
	961, 0, 0, 0, 0, 0, 1024, 0, 0, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 967, 968, 969,
	970, 971, 972, 973, 974, 0, 0, 977, 978, 979,
	980, 981, 859, 860, 861, 982, 983, 984, 985, 986,
	987, 872, 873, 874, 875, 876, 877, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 0, 0, 386, 383,
	384, 0, 380, 0, 379, 0, 0, 0, 1328, 0,
	1298, 1332, 1395, 1396, 1397, 1308, 1309, 0, 1311, 1312,
	0, 1314, 1315, 0, 1334, 0, 0, 78, 1820, 665,
	1685, 0, 1213, 1486, 1420, 1488, 1492, 1487, 1495, 1500,
	1520, 1620, 664, 664, 1626, 1627, 1629, 1633, 1635, 1636,
	1638, 1524, 1521, 1523, 1525, 0, 0, 0, 0, 1532,
	0, 0, 0, 0, 0, 0, 1648, 0, 0, 1553,
	1554, 1227, 1226, 84, 0, 85, 1730, 0, 0, 0,
	0, 0, 0, -2, -2, -2, 2112, 2076, 1716, 1732,
	0, 0, 1688, 0, 0, 0, 0, 0, 1696, 91,
	896, 885, 0, 0, 894, 895, 891, 820, 821, 822,
	0, 761, 0, 825, 826, 828, 829, 830, 0, 0,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	0, 0, 749, 0, 1693, 1693, 781, 781, 0, 0,
	0, 0, 666, 667, 668, 657, 658, 0, 662, 640,
	0, 0, 0, 0, 116, 136, 0, 117, 307, 308,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 301,
	303, 304, 305, 379, 184, 167, 168, 0, 0, 0,
	0, 159, 160, 0, 0, 0, 0, 0, 155, 156,
	157, 351, 0, 0, 354, 0, 0, 0, 0, 138,
	139, 0, 141, 137, 0, 0, 1115, 1820, 1382, 285,
	292, 285, 0, 195, 746, 747, 0, 919, 1008, 0,
	554, 554, 0, 781, 781, 0, 1039, 0, 952, 927,
	929, 928, 930, 0, 0, 937, 938, 1007, 0, 942,
	0, 1018, 1019, 1020, 1021, 958, 0, 0, 0, 0,
	0, 1022, 1023, 0, 0, 975, 976, 999, 1000, 0,
	878, 1043, 0, 0, 1048, 381, 1047, 0, 373, 388,
	389, 0, 1340, 1330, 0, 0, 0, 1217, 0, 1822,
	1816, 1241, 0, 0, 1621, 1622, 1623, 1624, 0, 0,
	0, 0, 1533, 1534, 1535, 1570, 1538, 1645, 0, 0,
	1688, 0, 0, 86, 1327, -2, 1710, 0, 0, 1717,
	1295, 1734, 0, 103, 1696, 1739, 1740, 1741, 1742, 1743,
	90, 898, 0, 0, 0, 0, 892, 823, 0, 827,
	862, 863, 831, 832, 856, 857, 0, 748, 752, 0,
	761, 0, 761, 761, 759, 760, 785, 786, 787, 766,
	770, 0, 551, 0, 0, 661, 647, 650, 0, 116,
	118, 0, 118, 309, 310, 311, 312, 314, 315, 0,
	0, 0, 382, 130, 0, 0, 169, 0, 0, 0,
	0, 179, 180, 181, 182, 183, 161, 162, 163, 164,
	165, 152, 0, 0, 353, 0, 360, 362, 0, 361,
	363, 0, 135, 0, 1325, 1822, 187, 0, 285, 189,
	293, 918, 1009, 543, 544, 0, 1791, 0, 1016, 0,
	0, 0, 936, 939, 940, 943, 959, 960, 0, 0,
	964, 0, 0, 0, 1001, 116, 387, 385, 382, 371,
	375, 0, 0, 0, 0, 1360, 0, 2539, 76, 1824,
	-2, 0, 68, 0, 1686, 1687, 1681, 1682, 1684, 1527,
	1529, 1528, 1530, 0, 0, 0, 1551, 1552, 1231, 0,
	0, 1708, 1711, 1713, 0, 1733, 1735, 89, 1037, 0,
	897, 0, 0, 0, 0, 0, 824, 858, 753, 754,
	0, 756, 0, 0, 0, 566, 552, 553, 0, 569,
	750, 142, 0, 0, 79, 316, 317, 318, 319, 386,
	185, 186, 170, 171, 0, 173, 174, 0, 0, 0,
	365, 0, 358, 359, 0, 1071, 1776, 286, 188, 0,
	0, 0, 1040, 0, 935, 761, 0, 0, 963, 0,
	1026, 879, 79, 386, 0, 377, 0, 1310, 1313, 1316,
	0, 0, 0, 0, 0, 0, 1816, 0, 1818, 0,
	1815, 0, 1242, 1243, 0, 0, 1536, 0, 0, 0,
	0, 0, 0, 1228, 0, 0, 884, 0, 890, 886,
	0, 0, 0, 0, 755, 757, 758, 0, 551, 123,
	751, 124, 0, 116, 395, 116, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	0, 0, 0, 0, 0, 79, 0, 79, 0, 0,
	0, 440, 0, 79, 0, 0, 175, 0, 177, 178,
	364, 0, 140, 1327, 0, 0, 750, 0, 0, 0,
	0, 944, 962, 1025, 0, 116, 1044, 0, 372, 0,
	373, 1783, 1361, 1362, 0, 0, 1363, 0, 0, 1823,
	0, 1821, 0, 0, 1817, 0, 0, 1683, 1571, 0,
	1574, 1224, 1232, 0, 1235, 0, 0, 0, 1271, 0,
	1233, 1731, -2, 0, 0, 887, 888, 0, 893, 0,
	567, 0, 0, 0, 142, 116, 0, 0, 129, 0,
	0, 410, 0, 0, 1793, 0, 0, -2, -2, -2,
	1795, 437, 438, 0, 489, 0, 0, 0, 454, 455,
	0, 441, 0, 456, 320, 0, 116, 172, 176, 366,
	42, 0, 0, 920, 0, 750, 0, 941, 1027, 1045,
	116, 0, 373, 376, 0, 1366, 0, 0, 0, 1825,
	0, 0, 1244, 1245, 1572, 0, 1236, 1237, 1238, 1239,
	1240, 0, 1038, 0, 892, 889, 0, 143, 0, 0,
	125, 118, 396, 397, 0, 0, 79, 411, 0, 79,
	0, 0, 0, 664, 0, 79, 79, 79, 79, 0,
	79, 79, 0, 442, 79, 79, 44, 0, 1777, 1778,
	287, 288, 289, 291, 750, 922, 0, 79, 374, 378,
	1359, 1367, 1368, 0, 0, 0, 1375, 0, 0, 1819,
	1813, 0, 0, 1272, 0, 0, 0, 144, 145, 79,
	0, 79, 408, 0, 79, 0, 0, 0, 0, 672,
	1796, 0, 490, 321, 0, 0, 0, 0, 0, 0,
	0, 323, 116, 43, 0, 921, 0, 2260, 116, 1369,
	0, 0, 1370, 0, 0, 0, 0, 0, 1364, 0,
	0, 1234, 0, 0, 791, 116, 398, 399, 400, 401,
	402, 403, 79, 0, 406, 0, 79, 0, 79, 420,
	421, 422, 79, 429, 431, 432, 433, 0, 435, 436,
	424, 445, 322, 79, 79, 79, 79, 0, 79, 439,
	443, 132, 290, 1041, 1042, 1046, 0, 0, 0, 0,
	1371, 1372, 1376, 1378, 0, 1365, 1573, 901, 0, 792,
	793, 0, 128, 0, 405, 80, 79, 0, -2, 0,
	79, 0, 417, 0, 423, 0, 434, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1377,
	1379, 899, 0, 901, 794, 0, 795, 0, 0, 0,
	79, 0, 409, 413, 0, 0, 79, 418, 0, 430,
	425, 325, 446, 0, 79, 448, 451, 444, 0, 0,
	902, 900, 807, 809, 810, 0, 0, 808, 404, 407,
	79, 415, 0, 79, 447, 0, 0, 1373, 1374, 811,
	812, 813, 0, 79, 0, 449, 452, 414, 0, -2,
	450, 453, 416,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 747,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:540
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:547
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:591
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:596
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:600
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:606
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:628
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:640
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:671
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:687
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:727
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:734
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:750
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:754
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:762
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:772
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:776
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:786
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:789
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:795
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:817
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:821
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:834
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:838
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:846
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:852
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:861
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:865
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:881
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:893
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:918
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:943
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:988
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1006
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1029
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1042
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1055
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1075
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1080
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1084
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1094
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1100
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1109
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1113
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1119
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1123
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1130
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1149
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1153
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1163
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1180
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1185
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1190
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1214
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1224
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1251
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1271
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1292
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1310
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1328
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1352
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1374
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1421
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1455
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1467
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1480
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1494
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1498
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1507
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1516
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1537
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1545
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1549
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1554
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1563
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1581
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1608
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1636
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1640
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1645
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1669
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1673
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1685
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1705
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1709
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1713
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1722
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1726
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1737
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1753
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1769
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1784
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1796
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1810
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				Privileges:     allPriv,
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1824
		{
			yyVAL.val = &RevokePrivilege{
				Privileges:     yyDollar[2].val.([]Privilege),
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1837
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1847
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1857
		{
			yyVAL.val = &RevokeRole{
				Roles: yyDollar[2].val.([]AccountName),
				From:  yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1868
		{
			yyVAL.val = &RevokeProxy{
				On:   yyDollar[4].val.(AccountName),
				From: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1893
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1897
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1901
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1905
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2019
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2065
		{
			yyVAL.val = []string(nil)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2069
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2079
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2084
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2123
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2131
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2135
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2139
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2143
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2147
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2152
		{
			yyVAL.val = false
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2156
		{
			yyVAL.val = true
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2161
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2165
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2172
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2185
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2197
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2217
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2234
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2244
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2254
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2286
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2300
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2304
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2313
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2317
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2321
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2355
		{
			yyVAL.val = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2364
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2392
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2400
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2414
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2420
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2464
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2468
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2472
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2478
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2490
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2494
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2498
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2502
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2506
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2510
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2514
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2520
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2528
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2558
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2563
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2567
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2572
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2581
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2585
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2590
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2594
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2598
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2603
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.val = EventStatus_Enable
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.val = EventStatus_Disable
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2615
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.val = BeforeStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.val = AfterStr
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.val = InsertStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.val = UpdateStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.val = DeleteStr
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2667
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2671
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2688
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2692
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2698
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2702
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2706
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2710
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2720
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2726
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2732
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 414:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2737
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2742
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2748
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2760
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2766
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2772
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2776
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2780
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2784
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2788
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2795
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2841
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2867
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2872
		{
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2889
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2893
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2897
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2908
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 449:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2912
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 450:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2916
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2927
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2931
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2935
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2946
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2958
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2964
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2968
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2976
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2996
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3016
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3020
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3024
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3032
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3048
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.val = &Resignal{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3066
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3070
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3078
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3082
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3088
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3104
		{
			yyVAL.val = Exprs(nil)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			yyVAL.val = Exprs(nil)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3176
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3203
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3233
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3257
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3271
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3306
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3317
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3328
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3362
		{
			yyVAL.val = BoolVal(false)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3366
		{
			yyVAL.val = BoolVal(false)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3370
		{
			yyVAL.val = BoolVal(true)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3375
		{
			yyVAL.val = ColumnType{}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3379
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3383
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3394
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3405
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3415
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3437
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3448
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3470
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3481
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3492
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3503
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3526
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3562
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3568
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3578
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3586
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3594
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3618
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3622
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3636
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3643
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3650
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3664
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3685
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3702
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3706
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3720
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3724
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3732
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3740
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3748
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3752
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3756
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3780
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3792
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3812
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3817
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3862
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3867
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3880
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3884
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3889
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3893
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3911
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3919
		{
			yyVAL.val = BoolVal(false)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.val = BoolVal(false)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.val = BoolVal(true)
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3932
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3942
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3964
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3968
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3972
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3978
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3989
		{
			yyVAL.val = ""
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3999
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4007
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4015
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4019
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4025
		{
			yyVAL.val = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4048
		{
			yyVAL.val = false
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.val = true
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4057
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4079
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4093
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4097
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4101
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4105
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4109
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4113
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4119
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4123
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4127
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4133
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4139
		{
			yyVAL.val = colKeyPrimary
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4143
		{
			yyVAL.val = colKey
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4147
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.val = colKeyUnique
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4167
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4171
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4195
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4203
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4211
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4215
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4227
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4243
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4248
		{
			yyVAL.val = false
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4250
		{
			yyVAL.val = true
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4253
		{
			yyVAL.val = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4255
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = ""
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4270
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4290
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4299
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.val = false
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.val = true
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4330
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4340
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4344
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4352
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4356
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4376
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4380
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4386
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4390
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4395
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4415
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4424
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4432
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4446
		{
			yyVAL.val = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.val = ":="
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4472
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4488
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4497
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4501
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4534
		{
			yyVAL.val = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4543
		{
			yyVAL.val = ""
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4567
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4581
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 791:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4591
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4595
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 793:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4599
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 794:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4603
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 795:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4607
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4612
		{
			yyVAL.bytes = []byte(nil)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4622
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4626
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4630
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4636
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4651
		{
			yyVAL.val = ""
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4665
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4671
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.val = Restrict
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.val = Cascade
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4685
		{
			yyVAL.val = NoAction
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4689
		{
			yyVAL.val = SetDefault
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4693
		{
			yyVAL.val = SetNull
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4698
		{
			yyVAL.val = true
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.val = true
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.val = false
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4711
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4715
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4725
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4729
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4733
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4737
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4741
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4745
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4749
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4753
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4757
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4769
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4773
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4781
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4785
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4809
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4813
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4817
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4861
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4869
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4873
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4877
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4883
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4901
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4934
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4944
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4952
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4956
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4960
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4964
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4985
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4989
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5002
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5009
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5018
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5026
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5036
		{
			yyVAL.val = false
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.val = true
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5045
		{
			yyVAL.val = ""
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5049
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5064
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5068
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5073
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 899:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5077
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 900:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5086
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5097
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5101
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5106
		{
			yyVAL.val = ""
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.val = ""
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5114
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5119
		{
			yyVAL.val = string("")
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5123
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5135
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5149
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5164
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5184
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5203
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5209
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5224
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5240
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 921:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5257
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 922:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5281
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5303
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5317
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5331
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5349
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5368
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5378
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5388
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5398
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5408
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5418
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5428
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5438
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5448
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5463
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5479
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5489
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5499
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5515
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5529
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5543
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5557
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5571
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5585
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5598
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5611
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5621
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5631
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5643
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5657
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5671
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5688
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5698
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5708
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5728
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5738
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5755
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5768
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5783
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5797
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5818
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5839
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5858
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5868
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5880
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5884
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5888
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5892
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5896
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5900
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5904
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5908
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5912
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5916
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5920
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5924
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5928
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5932
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5936
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5940
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5944
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5948
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5952
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5956
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5960
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5964
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5968
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5972
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5976
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5980
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5984
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5988
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5992
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5996
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6000
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6004
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6008
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6012
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6016
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6022
		{
			yyVAL.val = true
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6026
		{
			yyVAL.val = false
		}
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6036
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
			}
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6056
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6060
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6064
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6069
		{
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6071
		{
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6074
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6078
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6084
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6088
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6094
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6098
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6102
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6106
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6110
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6114
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6118
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6122
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6126
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1025:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6130
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6134
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6138
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6142
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6146
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6183
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6188
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6192
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6198
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6202
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1041:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6208
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6212
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1043:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6218
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1044:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6248
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1045:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6274
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1046:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6302
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6332
		{
			yyVAL.val = EventName{}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6336
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6342
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6346
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6358
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6382
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6398
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6402
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6408
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6426
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6446
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6464
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6481
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6498
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6518
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6538
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6553
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6568
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6587
		{

		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6591
		{
			yyVAL.val = Restrict
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6595
		{
			yyVAL.val = Cascade
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6601
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6614
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6629
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1071:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6635
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6639
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6643
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6655
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6659
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6663
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6667
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6673
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6677
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6684
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6688
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6694
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6698
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6702
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6706
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6712
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6716
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6720
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6724
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6730
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6741
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6752
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6763
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6775
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6787
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6800
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6813
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6824
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6835
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6846
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6857
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6867
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6877
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6890
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6900
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6911
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6921
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6931
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6942
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6954
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1115:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6966
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1116:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6980
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6993
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7004
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7018
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7030
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7040
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7051
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7064
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7074
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7086
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7097
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7110
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7119
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7130
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7141
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7152
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7163
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7177
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7187
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7197
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7207
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7219
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7225
		{
			yyVAL.val = false
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7229
		{
			yyVAL.val = true
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7235
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7239
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7245
		{
			yyVAL.val = ""
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7249
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7253
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7259
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7263
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7267
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7271
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7277
		{
			yyVAL.val = ""
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7281
		{
			yyVAL.val = SessionStr
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7285
		{
			yyVAL.val = GlobalStr
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7291
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7303
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7316
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7328
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7332
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7338
		{
			yyVAL.val = &Begin{}
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7342
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7348
		{
			yyVAL.val = &Begin{}
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7352
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7356
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7361
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7365
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7370
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7374
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7379
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7383
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7389
		{
			yyVAL.val = &Commit{}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7395
		{
			yyVAL.val = &Rollback{}
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7401
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7407
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7411
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7415
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7419
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7425
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7431
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Statement: tryCastStatement(yyDollar[3].val)}
		}
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7435
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7439
		{
			yyVAL.val = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].val.(SelectStatement)}
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7445
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7453
		{
			yyVAL.val = ""
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7457
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7469
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7489
		{
			setAllowComments(yylex, true)
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7493
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7501
		{
			yyVAL.val = Comments(nil)
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7505
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7511
		{
			yyVAL.val = UnionStr
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7515
		{
			yyVAL.val = UnionAllStr
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7519
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7525
		{
			yyVAL.val = IntersectStr
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7529
		{
			yyVAL.val = IntersectAllStr
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7533
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7539
		{
			yyVAL.val = ExceptStr
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7543
		{
			yyVAL.val = ExceptAllStr
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7547
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7552
		{
			yyVAL.val = QueryOpts{}
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7556
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7567
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7578
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7589
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7600
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7611
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7623
		{
			yyVAL.val = ""
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7627
		{
			yyVAL.val = AllStr
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7631
		{
			yyVAL.val = DistinctStr
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7637
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7645
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7656
		{
			yyVAL.val = &StarExpr{}
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7660
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7664
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7668
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7674
		{
			yyVAL.val = &StarExpr{}
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7678
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7682
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7686
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7692
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7696
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7702
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7707
		{
			yyVAL.val = ColIdent{}
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7710
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7715
		{
			yyVAL.val = Exprs(nil)
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7719
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7724
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7728
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7733
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7737
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7741
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7748
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7771
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7786
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7790
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7794
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7798
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7805
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7813
		{
			yyVAL.val = Window(nil)
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7816
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7822
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7825
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7831
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7871
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7875
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7880
		{
			yyVAL.val = ColIdent{}
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7884
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7888
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7892
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7898
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7902
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7906
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7912
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7916
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7926
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7930
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7945
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7960
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7966
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7972
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7980
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7986
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7990
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7995
		{
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7997
		{
		}
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8001
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8011
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8026
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8030
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8034
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8038
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8044
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8048
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8052
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8056
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8060
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8066
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8070
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1310:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8074
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8080
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8084
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1313:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8088
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8092
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8096
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8100
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8106
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8112
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8116
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8122
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8126
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8130
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8135
		{
			yyVAL.val = Expr(nil)
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8139
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8145
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8149
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8154
		{
			yyVAL.val = Columns(nil)
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8158
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8164
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8168
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8174
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8178
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8184
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8188
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8202
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8206
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8210
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8214
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8220
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8222
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8226
		{
			yyVAL.val = JoinCondition{}
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8228
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8232
		{
			yyVAL.val = JoinCondition{}
		}
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8234
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8239
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8245
		{
			yyVAL.val = JoinStr
		}
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8249
		{
			yyVAL.val = JoinStr
		}
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8253
		{
			yyVAL.val = JoinStr
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8259
		{
			yyVAL.val = StraightJoinStr
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8265
		{
			yyVAL.val = LeftJoinStr
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8269
		{
			yyVAL.val = LeftJoinStr
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8273
		{
			yyVAL.val = RightJoinStr
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8277
		{
			yyVAL.val = RightJoinStr
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8281
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8285
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8291
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8295
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1359:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8305
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8312
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8317
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8323
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8327
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8331
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1365:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8336
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8343
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8347
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8351
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8355
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8359
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8363
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8367
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8371
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8375
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8379
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8385
		{
			yyVAL.val = &NullVal{}
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8389
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8395
		{
			yyVAL.val = &NullVal{}
		}
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8399
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8405
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8409
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8415
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8421
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8425
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8431
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8435
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8439
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8443
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8447
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8451
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8457
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8461
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8467
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8472
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8476
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8480
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8484
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8489
		{
			yyVAL.val = Expr(nil)
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8493
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8499
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8503
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8507
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8511
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8515
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8519
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8523
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8527
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8533
		{
			yyVAL.val = ""
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8537
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8543
		{
			yyVAL.val = BoolVal(true)
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8547
		{
			yyVAL.val = BoolVal(false)
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8553
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8557
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8561
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8565
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8569
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8573
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8577
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8581
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8585
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8589
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8595
		{
			yyVAL.val = IsNullStr
		}
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8599
		{
			yyVAL.val = IsNotNullStr
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8603
		{
			yyVAL.val = IsTrueStr
		}
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8607
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8611
		{
			yyVAL.val = IsFalseStr
		}
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8615
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8621
		{
			yyVAL.val = EqualStr
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8625
		{
			yyVAL.val = LessThanStr
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8629
		{
			yyVAL.val = GreaterThanStr
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8633
		{
			yyVAL.val = LessEqualStr
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8637
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8641
		{
			yyVAL.val = NotEqualStr
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8645
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8650
		{
			yyVAL.val = Expr(nil)
		}
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8654
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8660
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8664
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8668
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8674
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8680
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8684
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8689
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8696
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8700
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8706
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8710
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8716
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8720
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8724
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8728
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8732
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8736
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8740
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8744
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8748
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8752
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8756
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8760
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8764
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8768
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8772
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8776
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8780
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8784
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8788
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8792
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8796
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8800
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8804
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8808
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8812
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8816
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8824
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8838
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8842
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8846
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1485:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8866
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8870
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1487:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8880
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1488:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8888
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8892
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8896
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1492:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8900
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1493:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8904
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8908
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1495:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8912
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1496:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8916
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8920
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1498:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8924
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1499:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8928
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1500:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8932
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1501:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8936
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8940
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8944
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8953
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8957
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8961
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8965
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8969
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8973
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1510:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8977
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8981
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8985
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8989
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8993
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9004
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9008
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9012
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1518:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9016
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9020
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1520:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9024
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1521:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9028
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9032
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1523:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9036
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1524:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9040
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9044
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9048
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1527:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9052
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1528:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9056
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1529:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9060
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1530:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9064
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9068
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1532:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9072
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1533:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9076
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1534:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9080
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1535:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9084
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1536:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9088
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9092
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1538:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9096
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9100
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9104
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9108
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9113
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9117
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9128
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9132
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9136
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9141
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9145
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9149
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9153
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1551:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9157
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1552:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9161
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1553:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9165
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1554:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9169
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9177
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9181
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9185
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9189
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9193
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9206
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9210
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9220
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9224
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9228
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9232
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9236
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9240
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9246
		{
			yyVAL.val = ""
		}
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9250
		{
			yyVAL.val = BooleanModeStr
		}
	case 1572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9254
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1573:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9258
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9262
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9268
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9272
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9276
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9282
		{
			yyVAL.val = Armscii8Str
		}
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9286
		{
			yyVAL.val = AsciiStr
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9290
		{
			yyVAL.val = Big5Str
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9294
		{
			yyVAL.val = UBinaryStr
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9298
		{
			yyVAL.val = Cp1250Str
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9302
		{
			yyVAL.val = Cp1251Str
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9306
		{
			yyVAL.val = Cp1256Str
		}
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9310
		{
			yyVAL.val = Cp1257Str
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9314
		{
			yyVAL.val = Cp850Str
		}
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9318
		{
			yyVAL.val = Cp852Str
		}
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9322
		{
			yyVAL.val = Cp866Str
		}
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9326
		{
			yyVAL.val = Cp932Str
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9330
		{
			yyVAL.val = Dec8Str
		}
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9334
		{
			yyVAL.val = EucjpmsStr
		}
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9338
		{
			yyVAL.val = EuckrStr
		}
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9342
		{
			yyVAL.val = Gb18030Str
		}
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9346
		{
			yyVAL.val = Gb2312Str
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9350
		{
			yyVAL.val = GbkStr
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9354
		{
			yyVAL.val = Geostd8Str
		}
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9358
		{
			yyVAL.val = GreekStr
		}
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9362
		{
			yyVAL.val = HebrewStr
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9366
		{
			yyVAL.val = Hp8Str
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9370
		{
			yyVAL.val = Keybcs2Str
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9374
		{
			yyVAL.val = Koi8rStr
		}
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9378
		{
			yyVAL.val = Koi8uStr
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9382
		{
			yyVAL.val = Latin1Str
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9386
		{
			yyVAL.val = Latin2Str
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9390
		{
			yyVAL.val = Latin5Str
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9394
		{
			yyVAL.val = Latin7Str
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9398
		{
			yyVAL.val = MacceStr
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9402
		{
			yyVAL.val = MacromanStr
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9406
		{
			yyVAL.val = SjisStr
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9410
		{
			yyVAL.val = Swe7Str
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9414
		{
			yyVAL.val = Tis620Str
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9418
		{
			yyVAL.val = Ucs2Str
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9422
		{
			yyVAL.val = UjisStr
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9426
		{
			yyVAL.val = Utf16Str
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9430
		{
			yyVAL.val = Utf16leStr
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9434
		{
			yyVAL.val = Utf32Str
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9438
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9442
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9446
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9452
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9456
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9460
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9464
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9468
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9472
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9476
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9480
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9487
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9491
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9495
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9499
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9503
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9507
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9511
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9515
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9519
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9523
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9527
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9531
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9537
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9541
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9546
		{
			yyVAL.val = Expr(nil)
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9550
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9555
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9559
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9565
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9569
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1648:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9575
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9580
		{
			yyVAL.val = Expr(nil)
		}
	case 1650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9584
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9590
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9594
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9598
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9602
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9606
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9610
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9614
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9618
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9622
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9626
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9630
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9634
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9638
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9642
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1665:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9646
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9652
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9656
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9660
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9664
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9668
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9672
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9676
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9680
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9684
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9688
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9692
		{
			yyVAL.val = &NullVal{}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9698
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9702
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9706
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9711
		{
			yyVAL.val = Exprs(nil)
		}
	case 1681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9715
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9721
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9725
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9731
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9736
		{
			yyVAL.val = Expr(nil)
		}
	case 1686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9740
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9746
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9751
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9755
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9761
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9765
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9771
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9776
		{
			yyVAL.val = AscScr
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9780
		{
			yyVAL.val = AscScr
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9784
		{
			yyVAL.val = DescScr
		}
	case 1696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9789
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9793
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9797
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9801
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9807
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9811
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9815
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9820
		{
			yyVAL.val = ""
		}
	case 1704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9824
		{
			yyVAL.val = ForUpdateStr
		}
	case 1705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9828
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9832
		{
			yyVAL.val = ShareModeStr
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9838
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9842
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9862
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9866
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9871
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9878
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9882
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9886
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1715:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9891
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9898
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9902
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9911
		{
			yyVAL.val = Columns(nil)
		}
	case 1721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9921
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9925
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9931
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9939
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9943
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9947
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9951
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9956
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9960
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9966
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9970
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9976
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9980
		{
			yyVAL.val = ValTuple{}
		}
	case 1736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9986
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9992
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10002
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10006
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10012
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10015
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10019
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10023
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10029
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10033
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10039
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10050
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10063
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10076
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10082
		{
			yyVAL.val = SetScope_Global
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10086
		{
			yyVAL.val = SetScope_Session
		}
	case 1752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10092
		{
			yyVAL.val = SetScope_Session
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10096
		{
			yyVAL.val = SetScope_Persist
		}
	case 1754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10100
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10106
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10110
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10114
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10124
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10131
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10138
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10142
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10146
		{
			yyVAL.val = &Default{}
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10150
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10159
		{
			yyVAL.val = 0
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10161
		{
			yyVAL.val = 1
		}
	case 1770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10164
		{
			yyVAL.val = 0
		}
	case 1771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10166
		{
			yyVAL.val = 1
		}
	case 1772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10169
		{
			yyVAL.val = 0
		}
	case 1773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10171
		{
			yyVAL.val = 1
		}
	case 1774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10174
		{
			yyVAL.val = ""
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10176
		{
			yyVAL.val = IgnoreStr
		}
	case 1776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10179
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10181
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10183
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10186
		{
			yyVAL.val = struct{}{}
		}
	case 1780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10188
		{
			yyVAL.val = struct{}{}
		}
	case 1781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10192
		{
			yyVAL.val = struct{}{}
		}
	case 1782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10194
		{
			yyVAL.val = struct{}{}
		}
	case 1783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10197
		{
			yyVAL.val = struct{}{}
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10199
		{
			yyVAL.val = struct{}{}
		}
	case 1785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10203
		{
			yyVAL.val = UniqueStr
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10205
		{
			yyVAL.val = FulltextStr
		}
	case 1787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10207
		{
			yyVAL.val = SpatialStr
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10209
		{
			yyVAL.val = VectorStr
		}
	case 1789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10212
		{
			yyVAL.val = ""
		}
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10214
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10217
		{
			yyVAL.val = ColIdent{}
		}
	case 1792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10219
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10223
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10227
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10233
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10237
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10244
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10250
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10254
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10261
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10265
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10269
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10274
		{
			yyVAL.val = string("")
		}
	case 1806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10276
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10279
		{
			yyVAL.val = string("")
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10281
		{
			yyVAL.val = IgnoreStr
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10283
		{
			yyVAL.val = ReplaceStr
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10286
		{
			yyVAL.val = BoolVal(false)
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10288
		{
			yyVAL.val = BoolVal(true)
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10291
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10295
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10300
		{
			yyVAL.val = BoolVal(false)
		}
	case 1815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10304
		{
			yyVAL.val = BoolVal(true)
		}
	case 1816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10309
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10313
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10318
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10322
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10330
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10334
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10339
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10343
		{
			yyVAL.val = &Lines{StartingBy: yyDollar[2].val.(*SQLVal), TerminatedBy: yyDollar[3].val.(*SQLVal)}
		}
	case 1824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10348
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10352
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10358
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10364
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10368
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10374
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10389
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10407
		{
			yyVAL.val = LockRead
		}
	case 1832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10411
		{
			yyVAL.val = LockReadLocal
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10415
		{
			yyVAL.val = LockWrite
		}
	case 1834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10419
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10425
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10431
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10442
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10452
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11375
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11384
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
