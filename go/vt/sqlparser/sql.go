// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const PLAN = 57556
const MAXVALUE = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const TRIGGERS = 57563
const FUNCTION = 57564
const STATUS = 57565
const VARIABLES = 57566
const WARNINGS = 57567
const ERRORS = 57568
const KILL = 57569
const CONNECTION = 57570
const SEQUENCE = 57571
const ENABLE = 57572
const DISABLE = 57573
const EACH = 57574
const ROW = 57575
const BEFORE = 57576
const FOLLOWS = 57577
const PRECEDES = 57578
const DEFINER = 57579
const INVOKER = 57580
const INOUT = 57581
const OUT = 57582
const DETERMINISTIC = 57583
const CONTAINS = 57584
const READS = 57585
const MODIFIES = 57586
const SQL = 57587
const SECURITY = 57588
const TEMPORARY = 57589
const ALGORITHM = 57590
const MERGE = 57591
const TEMPTABLE = 57592
const UNDEFINED = 57593
const EVENT = 57594
const EVENTS = 57595
const SCHEDULE = 57596
const EVERY = 57597
const STARTS = 57598
const ENDS = 57599
const COMPLETION = 57600
const PRESERVE = 57601
const CASCADED = 57602
const INSTANT = 57603
const INPLACE = 57604
const COPY = 57605
const DISCARD = 57606
const IMPORT = 57607
const SHARED = 57608
const EXCLUSIVE = 57609
const WITHOUT = 57610
const VALIDATION = 57611
const COALESCE = 57612
const EXCHANGE = 57613
const REBUILD = 57614
const REMOVE = 57615
const PARTITIONING = 57616
const CLASS_ORIGIN = 57617
const SUBCLASS_ORIGIN = 57618
const MESSAGE_TEXT = 57619
const MYSQL_ERRNO = 57620
const CONSTRAINT_CATALOG = 57621
const CONSTRAINT_SCHEMA = 57622
const CONSTRAINT_NAME = 57623
const CATALOG_NAME = 57624
const SCHEMA_NAME = 57625
const TABLE_NAME = 57626
const COLUMN_NAME = 57627
const CURSOR_NAME = 57628
const SIGNAL = 57629
const RESIGNAL = 57630
const SQLSTATE = 57631
const DECLARE = 57632
const CONDITION = 57633
const CURSOR = 57634
const CONTINUE = 57635
const EXIT = 57636
const UNDO = 57637
const HANDLER = 57638
const FOUND = 57639
const SQLWARNING = 57640
const SQLEXCEPTION = 57641
const FETCH = 57642
const OPEN = 57643
const CLOSE = 57644
const LOOP = 57645
const LEAVE = 57646
const ITERATE = 57647
const REPEAT = 57648
const UNTIL = 57649
const WHILE = 57650
const DO = 57651
const RETURN = 57652
const USER = 57653
const IDENTIFIED = 57654
const ROLE = 57655
const REUSE = 57656
const GRANT = 57657
const GRANTS = 57658
const REVOKE = 57659
const NONE = 57660
const ATTRIBUTE = 57661
const RANDOM = 57662
const PASSWORD = 57663
const INITIAL = 57664
const AUTHENTICATION = 57665
const SSL = 57666
const X509 = 57667
const CIPHER = 57668
const ISSUER = 57669
const SUBJECT = 57670
const ACCOUNT = 57671
const EXPIRE = 57672
const NEVER = 57673
const OPTION = 57674
const OPTIONAL = 57675
const ADMIN = 57676
const PRIVILEGES = 57677
const MAX_QUERIES_PER_HOUR = 57678
const MAX_UPDATES_PER_HOUR = 57679
const MAX_CONNECTIONS_PER_HOUR = 57680
const MAX_USER_CONNECTIONS = 57681
const FLUSH = 57682
const FAILED_LOGIN_ATTEMPTS = 57683
const PASSWORD_LOCK_TIME = 57684
const REQUIRE = 57685
const PROXY = 57686
const ROUTINE = 57687
const TABLESPACE = 57688
const CLIENT = 57689
const SLAVE = 57690
const EXECUTE = 57691
const FILE = 57692
const RELOAD = 57693
const REPLICATION = 57694
const SHUTDOWN = 57695
const SUPER = 57696
const USAGE = 57697
const LOGS = 57698
const ENGINE = 57699
const ERROR = 57700
const GENERAL = 57701
const HOSTS = 57702
const OPTIMIZER_COSTS = 57703
const RELAY = 57704
const SLOW = 57705
const USER_RESOURCES = 57706
const NO_WRITE_TO_BINLOG = 57707
const CHANNEL = 57708
const UNKNOWN = 57709
const APPLICATION_PASSWORD_ADMIN = 57710
const AUDIT_ABORT_EXEMPT = 57711
const AUDIT_ADMIN = 57712
const AUTHENTICATION_POLICY_ADMIN = 57713
const BACKUP_ADMIN = 57714
const BINLOG_ADMIN = 57715
const BINLOG_ENCRYPTION_ADMIN = 57716
const CLONE_ADMIN = 57717
const CONNECTION_ADMIN = 57718
const ENCRYPTION_KEY_ADMIN = 57719
const FIREWALL_ADMIN = 57720
const FIREWALL_EXEMPT = 57721
const FIREWALL_USER = 57722
const FLUSH_OPTIMIZER_COSTS = 57723
const FLUSH_STATUS = 57724
const FLUSH_TABLES = 57725
const FLUSH_USER_RESOURCES = 57726
const GROUP_REPLICATION_ADMIN = 57727
const GROUP_REPLICATION_STREAM = 57728
const INNODB_REDO_LOG_ARCHIVE = 57729
const INNODB_REDO_LOG_ENABLE = 57730
const NDB_STORED_USER = 57731
const PASSWORDLESS_USER_ADMIN = 57732
const PERSIST_RO_VARIABLES_ADMIN = 57733
const REPLICATION_APPLIER = 57734
const REPLICATION_SLAVE_ADMIN = 57735
const RESOURCE_GROUP_ADMIN = 57736
const RESOURCE_GROUP_USER = 57737
const ROLE_ADMIN = 57738
const SENSITIVE_VARIABLES_OBSERVER = 57739
const SESSION_VARIABLES_ADMIN = 57740
const SET_USER_ID = 57741
const SHOW_ROUTINE = 57742
const SKIP_QUERY_REWRITE = 57743
const SYSTEM_VARIABLES_ADMIN = 57744
const TABLE_ENCRYPTION_ADMIN = 57745
const TP_CONNECTION_ADMIN = 57746
const VERSION_TOKEN_ADMIN = 57747
const XA_RECOVER_ADMIN = 57748
const REPLICA = 57749
const REPLICAS = 57750
const SOURCE = 57751
const STOP = 57752
const RESET = 57753
const FILTER = 57754
const LOG = 57755
const MASTER = 57756
const SOURCE_HOST = 57757
const SOURCE_SSL = 57758
const SOURCE_USER = 57759
const SOURCE_PASSWORD = 57760
const SOURCE_PORT = 57761
const SOURCE_CONNECT_RETRY = 57762
const SOURCE_RETRY_COUNT = 57763
const SOURCE_AUTO_POSITION = 57764
const REPLICATE_DO_TABLE = 57765
const REPLICATE_IGNORE_TABLE = 57766
const IO_THREAD = 57767
const SQL_THREAD = 57768
const BEGIN = 57769
const START = 57770
const TRANSACTION = 57771
const COMMIT = 57772
const ROLLBACK = 57773
const SAVEPOINT = 57774
const WORK = 57775
const RELEASE = 57776
const CHAIN = 57777
const CONSISTENT = 57778
const SNAPSHOT = 57779
const BIT = 57780
const TINYINT = 57781
const SMALLINT = 57782
const MEDIUMINT = 57783
const INT = 57784
const INTEGER = 57785
const BIGINT = 57786
const INTNUM = 57787
const SERIAL = 57788
const INT1 = 57789
const INT2 = 57790
const INT3 = 57791
const INT4 = 57792
const INT8 = 57793
const REAL = 57794
const DOUBLE = 57795
const FLOAT_TYPE = 57796
const DECIMAL = 57797
const NUMERIC = 57798
const DEC = 57799
const FIXED = 57800
const PRECISION = 57801
const TIME = 57802
const TIMESTAMP = 57803
const DATETIME = 57804
const CHAR = 57805
const VARCHAR = 57806
const BOOL = 57807
const CHARACTER = 57808
const VARBINARY = 57809
const NCHAR = 57810
const NVARCHAR = 57811
const NATIONAL = 57812
const VARYING = 57813
const VARCHARACTER = 57814
const TEXT = 57815
const TINYTEXT = 57816
const MEDIUMTEXT = 57817
const LONGTEXT = 57818
const LONG = 57819
const BLOB = 57820
const TINYBLOB = 57821
const MEDIUMBLOB = 57822
const LONGBLOB = 57823
const JSON = 57824
const ENUM = 57825
const GEOMETRY = 57826
const POINT = 57827
const LINESTRING = 57828
const POLYGON = 57829
const GEOMETRYCOLLECTION = 57830
const MULTIPOINT = 57831
const MULTILINESTRING = 57832
const MULTIPOLYGON = 57833
const LOCAL = 57834
const LOW_PRIORITY = 57835
const SKIP = 57836
const LOCKED = 57837
const NULLX = 57838
const AUTO_INCREMENT = 57839
const APPROXNUM = 57840
const SIGNED = 57841
const UNSIGNED = 57842
const ZEROFILL = 57843
const SRID = 57844
const COLLATION = 57845
const DATABASES = 57846
const SCHEMAS = 57847
const TABLES = 57848
const FULL = 57849
const PROCESSLIST = 57850
const COLUMNS = 57851
const FIELDS = 57852
const ENGINES = 57853
const PLUGINS = 57854
const NAMES = 57855
const CHARSET = 57856
const GLOBAL = 57857
const SESSION = 57858
const ISOLATION = 57859
const LEVEL = 57860
const READ = 57861
const WRITE = 57862
const ONLY = 57863
const REPEATABLE = 57864
const COMMITTED = 57865
const UNCOMMITTED = 57866
const SERIALIZABLE = 57867
const ENCRYPTION = 57868
const CURRENT_TIMESTAMP = 57869
const NOW = 57870
const DATABASE = 57871
const CURRENT_DATE = 57872
const CURRENT_USER = 57873
const CURRENT_TIME = 57874
const LOCALTIME = 57875
const LOCALTIMESTAMP = 57876
const UTC_DATE = 57877
const UTC_TIME = 57878
const UTC_TIMESTAMP = 57879
const REPLACE = 57880
const CONVERT = 57881
const CAST = 57882
const POSITION = 57883
const SUBSTR = 57884
const SUBSTRING = 57885
const TRIM = 57886
const LEADING = 57887
const TRAILING = 57888
const BOTH = 57889
const GROUP_CONCAT = 57890
const SEPARATOR = 57891
const TIMESTAMPADD = 57892
const TIMESTAMPDIFF = 57893
const EXTRACT = 57894
const GET_FORMAT = 57895
const OVER = 57896
const WINDOW = 57897
const GROUPING = 57898
const CURRENT = 57899
const AVG = 57900
const BIT_AND = 57901
const BIT_OR = 57902
const BIT_XOR = 57903
const COUNT = 57904
const JSON_ARRAYAGG = 57905
const JSON_OBJECTAGG = 57906
const MAX = 57907
const MIN = 57908
const STDDEV_POP = 57909
const STDDEV = 57910
const STD = 57911
const STDDEV_SAMP = 57912
const SUM = 57913
const VAR_POP = 57914
const VARIANCE = 57915
const VAR_SAMP = 57916
const CUME_DIST = 57917
const DENSE_RANK = 57918
const FIRST_VALUE = 57919
const LAG = 57920
const LAST_VALUE = 57921
const LEAD = 57922
const NTH_VALUE = 57923
const NTILE = 57924
const ROW_NUMBER = 57925
const PERCENT_RANK = 57926
const RANK = 57927
const DUAL = 57928
const JSON_TABLE = 57929
const PATH = 57930
const AVG_ROW_LENGTH = 57931
const CHECKSUM = 57932
const COMPACT = 57933
const COMPRESSED = 57934
const COMPRESSION = 57935
const DISK = 57936
const DIRECTORY = 57937
const DELAY_KEY_WRITE = 57938
const DYNAMIC = 57939
const ENGINE_ATTRIBUTE = 57940
const ENCRYPTED = 57941
const ENCRYPTION_KEY_ID = 57942
const HASH = 57943
const INSERT_METHOD = 57944
const ITEF_QUOTES = 57945
const LIST = 57946
const MIN_ROWS = 57947
const MAX_ROWS = 57948
const PACK_KEYS = 57949
const MEMORY = 57950
const PAGE_CHECKSUM = 57951
const PAGE_COMPRESSED = 57952
const PAGE_COMPRESSION_LEVEL = 57953
const PARTITIONS = 57954
const REDUNDANT = 57955
const ROW_FORMAT = 57956
const SECONDARY_ENGINE = 57957
const SECONDARY_ENGINE_ATTRIBUTE = 57958
const STATS_AUTO_RECALC = 57959
const STATS_PERSISTENT = 57960
const STATS_SAMPLE_PAGES = 57961
const STORAGE = 57962
const SUBPARTITION = 57963
const SUBPARTITIONS = 57964
const TABLE_CHECKSUM = 57965
const TRANSACTIONAL = 57966
const VERSIONING = 57967
const YES = 57968
const PREPARE = 57969
const DEALLOCATE = 57970
const MATCH = 57971
const AGAINST = 57972
const BOOLEAN = 57973
const LANGUAGE = 57974
const WITH = 57975
const QUERY = 57976
const EXPANSION = 57977
const MICROSECOND = 57978
const SECOND = 57979
const MINUTE = 57980
const HOUR = 57981
const DAY = 57982
const WEEK = 57983
const MONTH = 57984
const QUARTER = 57985
const YEAR = 57986
const SECOND_MICROSECOND = 57987
const MINUTE_MICROSECOND = 57988
const MINUTE_SECOND = 57989
const HOUR_MICROSECOND = 57990
const HOUR_SECOND = 57991
const HOUR_MINUTE = 57992
const DAY_MICROSECOND = 57993
const DAY_SECOND = 57994
const DAY_MINUTE = 57995
const DAY_HOUR = 57996
const YEAR_MONTH = 57997
const NAME = 57998
const SYSTEM = 57999
const ACCESSIBLE = 58000
const ASENSITIVE = 58001
const CUBE = 58002
const DELAYED = 58003
const DISTINCTROW = 58004
const EMPTY = 58005
const FLOAT4 = 58006
const FLOAT8 = 58007
const GET = 58008
const HIGH_PRIORITY = 58009
const INSENSITIVE = 58010
const IO_AFTER_GTIDS = 58011
const IO_BEFORE_GTIDS = 58012
const LINEAR = 58013
const MASTER_BIND = 58014
const MASTER_SSL_VERIFY_SERVER_CERT = 58015
const MIDDLEINT = 58016
const PURGE = 58017
const READ_WRITE = 58018
const RLIKE = 58019
const SENSITIVE = 58020
const SPECIFIC = 58021
const SQL_BIG_RESULT = 58022
const SQL_SMALL_RESULT = 58023
const UNUSED = 58024
const DESCRIPTION = 58025
const LATERAL = 58026
const MEMBER = 58027
const RECURSIVE = 58028
const BUCKETS = 58029
const CLONE = 58030
const COMPONENT = 58031
const DEFINITION = 58032
const ENFORCED = 58033
const NOT_ENFORCED = 58034
const EXCLUDE = 58035
const GEOMCOLLECTION = 58036
const GET_MASTER_PUBLIC_KEY = 58037
const HISTOGRAM = 58038
const HISTORY = 58039
const INACTIVE = 58040
const INVISIBLE = 58041
const MASTER_COMPRESSION_ALGORITHMS = 58042
const MASTER_PUBLIC_KEY_PATH = 58043
const MASTER_TLS_CIPHERSUITES = 58044
const MASTER_ZSTD_COMPRESSION_LEVEL = 58045
const NESTED = 58046
const NETWORK_NAMESPACE = 58047
const NOWAIT = 58048
const NULLS = 58049
const OJ = 58050
const OLD = 58051
const ORDINALITY = 58052
const ORGANIZATION = 58053
const OTHERS = 58054
const PERSIST = 58055
const PERSIST_ONLY = 58056
const PRIVILEGE_CHECKS_USER = 58057
const PROCESS = 58058
const REFERENCE = 58059
const REQUIRE_ROW_FORMAT = 58060
const RESOURCE = 58061
const RESPECT = 58062
const RESTART = 58063
const RETAIN = 58064
const SECONDARY = 58065
const SECONDARY_LOAD = 58066
const SECONDARY_UNLOAD = 58067
const THREAD_PRIORITY = 58068
const TIES = 58069
const VCPU = 58070
const VISIBLE = 58071
const INFILE = 58072
const ACTIVE = 58073
const AGGREGATE = 58074
const ANY = 58075
const ARRAY = 58076
const ASCII = 58077
const AT = 58078
const AUTOEXTEND_SIZE = 58079
const GENERATED = 58080
const ALWAYS = 58081
const STORED = 58082
const VIRTUAL = 58083
const NVAR = 58084
const PASSWORD_LOCK = 58085

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	763, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1808,
	200, 1829,
	-2, 333,
	-1, 62,
	242, 1182,
	243, 1182,
	-2, 1171,
	-1, 90,
	271, 333,
	-2, 1814,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 545,
	1, 2510,
	6, 2510,
	7, 2510,
	28, 2510,
	187, 2510,
	763, 2510,
	-2, 1217,
	-1, 558,
	187, 1839,
	-2, 1833,
	-1, 559,
	187, 1840,
	-2, 1834,
	-1, 663,
	1, 683,
	763, 683,
	-2, 681,
	-1, 672,
	1, 1323,
	8, 1323,
	9, 1323,
	10, 1323,
	17, 1323,
	18, 1323,
	19, 1323,
	20, 1323,
	22, 1323,
	24, 1323,
	34, 1323,
	35, 1323,
	64, 1323,
	65, 1323,
	66, 1323,
	67, 1323,
	68, 1323,
	70, 1323,
	71, 1323,
	74, 1323,
	75, 1323,
	77, 1323,
	78, 1323,
	96, 1323,
	526, 1323,
	574, 1323,
	652, 1323,
	763, 1323,
	-2, 1823,
	-1, 677,
	1, 1431,
	8, 1431,
	9, 1431,
	10, 1431,
	17, 1431,
	18, 1431,
	19, 1431,
	20, 1431,
	22, 1431,
	24, 1431,
	34, 1431,
	35, 1431,
	64, 1431,
	65, 1431,
	66, 1431,
	67, 1431,
	68, 1431,
	70, 1431,
	71, 1431,
	74, 1431,
	75, 1431,
	77, 1431,
	78, 1431,
	96, 1431,
	526, 1431,
	574, 1431,
	652, 1431,
	763, 1431,
	-2, 1823,
	-1, 705,
	187, 2207,
	-2, 1445,
	-1, 738,
	187, 2315,
	-2, 1715,
	-1, 739,
	187, 2396,
	-2, 1447,
	-1, 740,
	187, 2227,
	-2, 1448,
	-1, 809,
	187, 2178,
	-2, 1679,
	-1, 812,
	187, 2193,
	-2, 1597,
	-1, 813,
	187, 2196,
	-2, 1597,
	-1, 814,
	187, 2406,
	-2, 1597,
	-1, 816,
	187, 2194,
	-2, 1597,
	-1, 817,
	187, 2407,
	-2, 1597,
	-1, 818,
	187, 2408,
	-2, 1597,
	-1, 877,
	187, 2195,
	-2, 1597,
	-1, 960,
	187, 2295,
	-2, 1597,
	-1, 961,
	187, 2296,
	-2, 1597,
	-1, 1073,
	109, 2523,
	120, 2523,
	187, 2523,
	-2, 1790,
	-1, 1074,
	109, 2654,
	120, 2654,
	187, 2654,
	-2, 1791,
	-1, 1079,
	109, 2551,
	120, 2551,
	187, 2551,
	-2, 1792,
	-1, 1080,
	109, 2602,
	120, 2602,
	187, 2602,
	-2, 1793,
	-1, 1081,
	109, 2603,
	120, 2603,
	187, 2603,
	-2, 1794,
	-1, 1082,
	109, 2450,
	120, 2450,
	187, 2450,
	-2, 1799,
	-1, 1084,
	109, 2579,
	120, 2579,
	187, 2579,
	-2, 1801,
	-1, 1256,
	453, 1196,
	-2, 1200,
	-1, 1258,
	453, 1196,
	-2, 1200,
	-1, 1383,
	1, 683,
	763, 683,
	-2, 681,
	-1, 1385,
	1, 684,
	763, 684,
	-2, 681,
	-1, 1408,
	1, 1324,
	8, 1324,
	9, 1324,
	10, 1324,
	17, 1324,
	18, 1324,
	19, 1324,
	20, 1324,
	22, 1324,
	24, 1324,
	34, 1324,
	35, 1324,
	64, 1324,
	65, 1324,
	66, 1324,
	67, 1324,
	68, 1324,
	70, 1324,
	71, 1324,
	74, 1324,
	75, 1324,
	77, 1324,
	78, 1324,
	96, 1324,
	526, 1324,
	574, 1324,
	652, 1324,
	763, 1324,
	-2, 1823,
	-1, 1419,
	1, 1431,
	8, 1431,
	9, 1431,
	10, 1431,
	17, 1431,
	18, 1431,
	19, 1431,
	20, 1431,
	22, 1431,
	24, 1431,
	34, 1431,
	35, 1431,
	64, 1431,
	65, 1431,
	66, 1431,
	67, 1431,
	68, 1431,
	70, 1431,
	71, 1431,
	74, 1431,
	75, 1431,
	77, 1431,
	78, 1431,
	96, 1431,
	526, 1431,
	574, 1431,
	652, 1431,
	763, 1431,
	-2, 1823,
	-1, 1713,
	1, 683,
	763, 683,
	-2, 681,
	-1, 1715,
	1, 683,
	763, 683,
	-2, 681,
	-1, 2273,
	187, 1843,
	-2, 1691,
	-1, 2276,
	187, 2742,
	-2, 1694,
	-1, 2277,
	187, 2743,
	-2, 1695,
	-1, 2278,
	187, 1842,
	-2, 1838,
	-1, 2428,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2446,
	187, 2319,
	-2, 1795,
	-1, 2453,
	1, 904,
	763, 904,
	-2, 681,
	-1, 2642,
	49, 925,
	206, 928,
	208, 925,
	209, 925,
	210, 925,
	-2, 1042,
	-1, 2724,
	8, 59,
	9, 59,
	10, 59,
	-2, 1477,
	-1, 2741,
	1, 1369,
	8, 1369,
	9, 1369,
	10, 1369,
	17, 1369,
	18, 1369,
	19, 1369,
	20, 1369,
	22, 1369,
	24, 1369,
	34, 1369,
	35, 1369,
	64, 1369,
	65, 1369,
	66, 1369,
	67, 1369,
	68, 1369,
	70, 1369,
	71, 1369,
	74, 1369,
	75, 1369,
	77, 1369,
	78, 1369,
	96, 1369,
	526, 1369,
	574, 1369,
	652, 1369,
	763, 1369,
	-2, 1823,
	-1, 2918,
	212, 1036,
	216, 1036,
	-2, 792,
	-1, 2919,
	212, 1106,
	216, 1106,
	-2, 793,
	-1, 3189,
	1, 1431,
	8, 1431,
	9, 1431,
	10, 1431,
	17, 1431,
	18, 1431,
	19, 1431,
	20, 1431,
	22, 1431,
	24, 1431,
	34, 1431,
	35, 1431,
	64, 1431,
	65, 1431,
	66, 1431,
	67, 1431,
	68, 1431,
	70, 1431,
	71, 1431,
	74, 1431,
	75, 1431,
	77, 1431,
	78, 1431,
	96, 1431,
	526, 1431,
	574, 1431,
	652, 1431,
	763, 1431,
	-2, 1823,
	-1, 3293,
	1, 1746,
	74, 1746,
	763, 1746,
	-2, 1823,
	-1, 3495,
	49, 925,
	206, 928,
	208, 925,
	209, 925,
	210, 925,
	-2, 1042,
	-1, 3515,
	206, 929,
	212, 1036,
	216, 1036,
	-2, 927,
	-1, 3706,
	77, 2090,
	78, 2090,
	187, 2090,
	-2, 1225,
	-1, 3707,
	76, 1757,
	252, 1757,
	-2, 2139,
	-1, 3708,
	76, 1758,
	252, 1758,
	-2, 2708,
	-1, 3950,
	8, 59,
	9, 59,
	10, 59,
	-2, 1753,
	-1, 4096,
	46, 1854,
	-2, 1852,
	-1, 4357,
	8, 59,
	9, 59,
	10, 59,
	-2, 1754,
	-1, 4376,
	315, 430,
	-2, 1910,
	-1, 4377,
	315, 431,
	-2, 1951,
	-1, 4378,
	315, 432,
	-2, 2127,
	-1, 4610,
	104, 416,
	106, 416,
	108, 416,
	-2, 79,
	-1, 4691,
	106, 423,
	107, 423,
	108, 423,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 83077

var yyAct = [...]int{
	751, 44, 4664, 4565, 4627, 4614, 4602, 4383, 697, 4601,
	570, 2935, 4567, 1189, 2443, 4237, 8, 4236, 7, 4349,
	4382, 4234, 3, 1411, 4090, 3301, 4483, 4235, 6, 4484,
	4268, 28, 2934, 3788, 4238, 9, 4370, 711, 3651, 4085,
	4369, 4055, 1633, 4229, 4209, 44, 3457, 3269, 2366, 2720,
	707, 4227, 3358, 1418, 2367, 4133, 656, 724, 3913, 3977,
	4103, 4347, 1704, 4092, 4091, 3906, 108, 3502, 107, 2657,
	3866, 1536, 3042, 3865, 2515, 4094, 3621, 3704, 493, 4040,
	101, 688, 549, 552, 3712, 3179, 2470, 3924, 3900, 3857,
	3470, 2916, 597, 3002, 2534, 3435, 652, 674, 3811, 3794,
	3359, 2248, 2708, 3115, 2181, 2915, 3421, 1466, 4228, 2303,
	3302, 1413, 1747, 3899, 750, 3696, 1749, 3616, 2922, 1149,
	2988, 3507, 490, 2923, 105, 1564, 2946, 2474, 3627, 3583,
	3595, 1746, 1217, 3015, 2172, 815, 1161, 3078, 1267, 1415,
	2460, 134, 2633, 1389, 2639, 3162, 2871, 2640, 3574, 2501,
	1565, 1206, 2606, 3455, 1078, 2849, 2725, 1378, 1266, 3177,
	716, 710, 3231, 1752, 1410, 2564, 2234, 698, 2637, 2173,
	2236, 2151, 2872, 1417, 2110, 2045, 2969, 2497, 1723, 1075,
	1243, 2356, 1447, 1614, 2280, 2711, 2874, 693, 1610, 1455,
	672, 1300, 1278, 1450, 2115, 2163, 2588, 3277, 2085, 1384,
	1157, 3082, 1152, 1165, 1071, 1640, 1474, 2430, 668, 681,
	2319, 2241, 1396, 669, 1388, 1613, 1387, 1201, 1386, 573,
	655, 1277, 3713, 572, 1262, 2077, 1072, 2078, 2044, 2476,
	640, 555, 1170, 1716, 129, 125, 1176, 664, 4691, 4685,
	691, 4672, 3278, 4656, 4642, 4610, 4608, 4580, 1153, 4577,
	4576, 4575, 4560, 4558, 4464, 4460, 1188, 4455, 100, 4135,
	4134, 3374, 3629, 3876, 2108, 2519, 1180, 3448, 4331, 2551,
	2550, 3871, 3872, 4018, 3869, 3870, 86, 2942, 3418, 3419,
	3505, 1438, 2949, 4635, 3503, 4597, 4595, 94, 4680, 4016,
	4634, 4596, 97, 3875, 3451, 3357, 3128, 2980, 2954, 2953,
	1726, 3449, 4019, 4397, 99, 714, 4396, 42, 42, 687,
	42, 661, 3978, 4600, 4345, 71, 654, 4544, 2669, 3795,
	4215, 4026, 3450, 2950, 47, 666, 3000, 3980, 2548, 3797,
	3292, 565, 42, 704, 2037, 2548, 122, 1352, 1311, 2956,
	4495, 2932, 4230, 4303, 3894, 3178, 4344, 3259, 4214, 2933,
	3576, 3298, 3298, 504, 88, 3299, 3299, 3766, 3563, 4628,
	569, 1172, 4050, 1178, 1179, 3763, 42, 3612, 3851, 4404,
	1182, 3973, 89, 89, 3897, 89, 3855, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 3974, 3232, 3328, 3898, 3327,
	3138, 2445, 2936, 3137, 4201, 1148, 4419, 89, 2960, 4156,
	4330, 4099, 678, 2368, 2380, 2378, 2377, 2376, 2379, 2375,
	2374, 2373, 2369, 2370, 2387, 2371, 2386, 2385, 2372, 2384,
	2383, 2382, 2381, 2380, 2378, 2377, 2376, 2379, 2375, 2374,
	2373, 89, 3596, 2387, 2825, 2386, 2385, 3688, 2384, 2383,
	2382, 2381, 1169, 114, 112, 113, 3800, 544, 3979, 4353,
	2863, 1353, 1256, 2862, 2587, 2952, 2864, 2581, 2238, 2955,
	3312, 1164, 3313, 3314, 1160, 4110, 1615, 2945, 1616, 3235,
	2440, 2441, 2111, 2235, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 4350, 2622, 1499, 3798,
	3799, 3801, 3802, 3803, 567, 96, 96, 2439, 96, 4353,
	2947, 4421, 148, 2114, 145, 4332, 146, 3399, 1065, 2154,
	2155, 1241, 1242, 3400, 3401, 3649, 3321, 4348, 2132, 667,
	96, 1330, 564, 1221, 1222, 563, 1250, 1225, 2958, 2112,
	2113, 3212, 2189, 3932, 2749, 1239, 4350, 1240, 1241, 1242,
	1338, 3925, 150, 149, 3930, 89, 2472, 2473, 2948, 649,
	2586, 4354, 1297, 2487, 96, 731, 2486, 732, 734, 735,
	736, 737, 3101, 1223, 1224, 733, 2315, 1212, 4360, 700,
	137, 136, 138, 3534, 2491, 153, 2477, 1398, 1401, 1402,
	1403, 1399, 3673, 1400, 1405, 3669, 2480, 2479, 4634, 2481,
	4596, 4594, 3671, 2618, 2498, 2206, 1226, 1402, 1403, 2156,
	2570, 4354, 2569, 2391, 2477, 539, 562, 643, 1251, 1252,
	644, 1398, 1401, 1402, 1403, 1399, 542, 1400, 1405, 3346,
	126, 2712, 2713, 1355, 1356, 2152, 2153, 646, 645, 644,
	2083, 1259, 3476, 3057, 151, 4361, 152, 1350, 4679, 4635,
	1351, 4633, 1227, 4632, 4457, 665, 4597, 4458, 2162, 4459,
	2161, 1347, 1213, 1149, 597, 1360, 4017, 1379, 2160, 2159,
	4487, 2158, 1382, 2157, 2607, 2610, 2608, 2609, 2611, 2612,
	2613, 2614, 642, 1374, 1409, 1414, 650, 1334, 1335, 4083,
	1432, 1433, 1149, 4319, 1149, 1149, 3035, 3442, 1149, 3892,
	2995, 4500, 3884, 3190, 3108, 3106, 108, 3882, 1149, 3107,
	2312, 3105, 3617, 3618, 3619, 3620, 1508, 1510, 4499, 1253,
	1512, 1372, 4437, 4296, 3239, 3238, 3240, 3237, 4044, 4486,
	3190, 128, 3244, 3474, 3236, 3233, 1406, 1453, 3234, 3190,
	3242, 132, 140, 139, 2947, 3469, 4554, 3039, 1327, 1304,
	4298, 4161, 1527, 3628, 3241, 1313, 1531, 1532, 1533, 1534,
	1535, 4150, 1539, 3841, 1370, 2143, 4160, 3823, 2144, 3040,
	1313, 3243, 3245, 1478, 4158, 2951, 3812, 2600, 4456, 4401,
	2944, 1265, 2999, 108, 3815, 2997, 1381, 4035, 3575, 136,
	4033, 2535, 2948, 4030, 3504, 3821, 3813, 3814, 4013, 137,
	141, 3846, 4413, 4395, 4081, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	2582, 1558, 1559, 1561, 1561, 1561, 1424, 1566, 1566, 1566,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 3505, 147, 130, 3981, 131, 2393, 2394, 2392, 3320,
	3539, 1337, 3445, 663, 1408, 543, 1366, 4362, 4688, 4658,
	4687, 4657, 3982, 1220, 4654, 2187, 3598, 4573, 1566, 1313,
	3796, 3436, 3437, 3438, 3439, 3440, 4452, 1365, 1361, 1362,
	1363, 1364, 1367, 1368, 1369, 1371, 1392, 4618, 2961, 4562,
	566, 4450, 4451, 3471, 4152, 3100, 3246, 3319, 550, 2165,
	2594, 142, 553, 3127, 1314, 1321, 1322, 1324, 1325, 1326,
	4202, 1328, 1329, 2188, 1331, 1332, 1333, 4213, 1336, 1375,
	1339, 1340, 1341, 1342, 1343, 2190, 2947, 3107, 3105, 4403,
	3527, 4351, 4555, 1567, 1568, 1215, 3854, 2947, 109, 109,
	154, 109, 4027, 2313, 2314, 3984, 2114, 3001, 4411, 3118,
	554, 1566, 1566, 1560, 1562, 1563, 1441, 2931, 3910, 1435,
	1376, 1435, 1435, 109, 1375, 1435, 1440, 1440, 4329, 678,
	678, 3891, 2112, 2113, 2948, 3983, 1434, 115, 1439, 1439,
	2963, 4351, 1446, 1264, 1258, 2948, 2500, 3853, 4111, 2084,
	1260, 1346, 1214, 1600, 4485, 1320, 2943, 87, 3883, 3601,
	3599, 2483, 1509, 3626, 2998, 3597, 1323, 3881, 2484, 1305,
	3399, 1065, 4157, 3389, 3390, 3392, 3400, 3401, 3391, 3393,
	3394, 3600, 4297, 1312, 3181, 2145, 4014, 1373, 4032, 1404,
	4324, 4029, 143, 3395, 3396, 3397, 3398, 4193, 3431, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 3164, 1404, 1393, 3172,
	3174, 3173, 1238, 3182, 4056, 3166, 1603, 3181, 4151, 1318,
	4010, 127, 731, 1404, 732, 734, 735, 736, 737, 1471,
	1472, 1470, 733, 2315, 3433, 1721, 1601, 1602, 4009, 4008,
	3436, 3437, 3438, 3439, 3440, 4007, 1174, 1173, 1473, 1471,
	1472, 1470, 4432, 4571, 1711, 4566, 1731, 1732, 1730, 1078,
	4006, 4004, 3541, 3542, 1078, 1177, 4005, 136, 1473, 2525,
	3444, 4569, 1177, 551, 4145, 4146, 2529, 2530, 2168, 1175,
	4365, 4366, 4232, 1319, 551, 1315, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 4141, 1456,
	1149, 2524, 136, 662, 3622, 3623, 3023, 3024, 1235, 1236,
	2047, 1254, 1480, 141, 3540, 2116, 1237, 1316, 1317, 1234,
	1233, 108, 1232, 107, 1231, 4409, 4313, 1263, 2169, 548,
	3584, 3858, 3859, 3585, 2037, 3586, 551, 3528, 3529, 3530,
	1725, 3625, 4225, 597, 2079, 2469, 4681, 4439, 1696, 1697,
	1698, 1699, 1700, 3085, 2118, 4438, 1164, 2117, 4668, 1748,
	1537, 3097, 597, 138, 3363, 1164, 1407, 2312, 3085, 2467,
	1607, 1625, 3513, 3095, 4694, 2536, 3094, 1420, 1422, 1630,
	4689, 4673, 4645, 1171, 559, 1429, 1430, 2469, 2548, 641,
	4302, 3117, 667, 4184, 1309, 4075, 3167, 1706, 3890, 3887,
	3624, 1618, 1701, 3467, 3102, 3034, 1619, 1423, 3030, 3005,
	1420, 1422, 3004, 1149, 2595, 2149, 1149, 3093, 1557, 1736,
	2041, 2041, 2041, 2041, 1734, 1261, 2518, 1168, 2087, 2221,
	2089, 2220, 1756, 1431, 2086, 2469, 2219, 108, 123, 2091,
	2088, 1724, 163, 1167, 491, 503, 1729, 1702, 163, 2469,
	4078, 1420, 1422, 163, 1604, 1605, 4322, 2469, 1754, 3084,
	4578, 3462, 1391, 639, 1190, 3168, 123, 1181, 488, 3180,
	2796, 3008, 163, 597, 3873, 3648, 3007, 3311, 3117, 551,
	4461, 163, 4155, 118, 89, 2035, 1514, 1515, 4568, 4570,
	3032, 3031, 651, 2869, 163, 2468, 2537, 2793, 2445, 2048,
	2469, 3091, 3085, 89, 4183, 163, 1163, 3088, 2142, 1421,
	3087, 3092, 2072, 695, 2060, 3043, 2105, 2061, 2062, 2063,
	1308, 3362, 3512, 140, 139, 4182, 2067, 163, 639, 2050,
	1163, 121, 1513, 2039, 2043, 1511, 2075, 2468, 4666, 491,
	163, 4667, 1421, 4665, 3085, 674, 674, 674, 674, 1164,
	1255, 2766, 3086, 2467, 1712, 1710, 1719, 1707, 1720, 2743,
	1149, 2629, 1429, 1430, 1727, 1414, 3116, 2215, 2064, 1728,
	2066, 1738, 120, 2125, 2549, 2526, 2435, 2251, 1745, 1744,
	1516, 108, 1629, 1421, 1423, 2468, 108, 1530, 2214, 2046,
	2123, 3091, 3085, 2174, 1626, 1513, 1529, 3088, 1528, 2468,
	3087, 3092, 2103, 2052, 2053, 1627, 3085, 2468, 2178, 1479,
	1431, 1164, 2209, 2208, 3086, 2467, 1295, 1203, 2305, 2304,
	2313, 2314, 1516, 2218, 1499, 2216, 96, 2859, 1420, 1422,
	3779, 3777, 3874, 1489, 2081, 2080, 1499, 3464, 2074, 2090,
	4191, 4468, 1514, 1515, 2096, 2097, 4433, 4434, 2099, 3867,
	2468, 2120, 4021, 3116, 96, 2192, 3946, 3111, 2196, 2740,
	2193, 1149, 3070, 2036, 2102, 3114, 3108, 3491, 3490, 1514,
	1515, 1244, 1516, 3106, 2164, 2167, 4430, 4431, 1416, 2124,
	2306, 2121, 108, 3380, 3378, 4218, 4217, 3093, 1478, 4022,
	1539, 674, 3778, 2272, 3084, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 1473, 1756, 1499,
	2641, 108, 2850, 2214, 3126, 2311, 2316, 3125, 3124, 2166,
	2737, 3165, 4469, 3066, 3065, 2308, 3123, 2310, 3122, 3492,
	3063, 3062, 2071, 2183, 2278, 2866, 2865, 3121, 2342, 2345,
	3120, 3119, 2322, 2217, 2325, 3379, 2358, 2281, 2170, 2287,
	2186, 2559, 2184, 2182, 2185, 2734, 674, 2244, 2194, 2195,
	1421, 2197, 1626, 1229, 2285, 2286, 2284, 1219, 2207, 2388,
	2389, 1246, 4175, 1627, 1245, 3053, 3052, 3073, 1470, 2663,
	3072, 3051, 2444, 3050, 2258, 3067, 3049, 2360, 1471, 1472,
	1470, 3048, 3064, 2271, 2565, 1473, 4675, 2867, 3047, 687,
	1078, 2126, 668, 3046, 2129, 2130, 2131, 1473, 2133, 2134,
	2975, 2617, 2135, 2666, 2664, 2659, 2136, 2616, 2101, 2137,
	2661, 2256, 1271, 2138, 2139, 1184, 2140, 2141, 2051, 1471,
	1472, 1470, 2268, 1497, 1498, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 2450, 3261, 1499, 2249, 2250, 1473, 1183,
	678, 678, 678, 678, 2560, 2070, 2357, 2357, 1756, 2809,
	1379, 1157, 2452, 4648, 4615, 4647, 1230, 1218, 3074, 3075,
	678, 1248, 4671, 163, 2660, 2662, 2665, 2667, 1492, 1493,
	1494, 1495, 1496, 1489, 2278, 4644, 1499, 4556, 4504, 491,
	3003, 2396, 2326, 2327, 2328, 2329, 2330, 1714, 4496, 3822,
	2401, 2544, 2403, 1537, 3816, 2406, 2466, 1257, 2429, 2457,
	2264, 2266, 2267, 1471, 1472, 1470, 2354, 2240, 2265, 4522,
	2427, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 1472,
	1470, 1499, 1473, 2507, 2508, 2509, 2510, 2511, 2282, 3028,
	2494, 2495, 2496, 2451, 2763, 2764, 2765, 1473, 163, 1488,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 2242, 4682, 1499, 103, 2279, 2433, 2437, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2442, 2456, 2454, 677, 2528, 2512, 2436,
	3372, 1537, 2503, 2504, 2505, 2506, 678, 2478, 2542, 2543,
	3190, 1471, 1472, 1470, 3907, 3073, 1467, 2663, 3072, 4506,
	110, 2787, 116, 2786, 4660, 4538, 4294, 2517, 2499, 3893,
	1473, 4683, 2482, 2485, 3202, 639, 2488, 2489, 2490, 3172,
	3174, 3173, 2340, 1471, 1472, 1470, 2348, 4400, 163, 2514,
	2545, 2666, 2664, 2659, 156, 1471, 1472, 1470, 2661, 1471,
	1472, 1470, 1473, 4309, 2257, 547, 4677, 4153, 4300, 163,
	4624, 678, 4535, 2520, 1473, 2522, 4693, 4295, 1473, 2788,
	1471, 1472, 1470, 2242, 4537, 700, 1066, 1067, 1068, 2260,
	2261, 2262, 1471, 1472, 1470, 491, 89, 4293, 1166, 1473,
	4449, 4371, 4222, 4503, 695, 4502, 3074, 3075, 2283, 4051,
	2423, 1473, 2660, 2662, 2665, 2667, 4020, 1150, 4154, 1488,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 4534, 695, 1499, 3905, 1471, 1472, 1470, 2365, 1186,
	3904, 2800, 4371, 1471, 1472, 1470, 2309, 3760, 1471, 1472,
	1470, 3263, 1202, 4371, 1473, 4446, 2227, 4445, 1537, 3903,
	2223, 2231, 1473, 3902, 2337, 2338, 2229, 1473, 2094, 3832,
	2225, 2233, 2093, 3786, 3785, 2333, 2334, 2335, 3755, 3753,
	2253, 2339, 3552, 2341, 2344, 2347, 3758, 2352, 2353, 3754,
	3604, 3602, 2228, 2363, 3199, 3486, 2224, 2232, 3172, 3174,
	3173, 3603, 3485, 695, 3484, 2254, 3483, 2395, 2255, 2397,
	2398, 3482, 3423, 3375, 2402, 2974, 2404, 2405, 3609, 2972,
	2959, 1303, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 1561, 4494, 1302, 3172, 3174, 3173,
	3447, 3446, 2226, 1390, 2449, 695, 2222, 2230, 4692, 4384,
	4676, 1149, 4659, 1488, 1487, 1497, 1498, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1489, 4653, 2087, 1499, 2089, 3172,
	3174, 3173, 2086, 4582, 4574, 4462, 4443, 4442, 2088, 1488,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 4388, 1383, 1499, 3607, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 3921, 4387, 1499,
	4381, 4380, 2577, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 2513, 4159, 1499, 4058, 2585, 3695,
	3531, 3018, 1409, 3017, 2571, 2556, 2555, 2307, 2095, 2082,
	1743, 1742, 1715, 1382, 1713, 3172, 3174, 3173, 1298, 561,
	4493, 4492, 1275, 4491, 3196, 4488, 4418, 2561, 1488, 1487,
	1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489,
	4398, 674, 1499, 2557, 1274, 4339, 4333, 1483, 4224, 1486,
	2729, 2730, 2731, 4223, 2567, 2563, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 4149, 1484, 1485, 1482, 4148, 4129, 4082,
	4034, 4031, 4003, 3972, 3971, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 3942, 3896, 1499,
	3895, 2604, 3831, 3830, 3829, 3828, 2722, 3819, 3818, 3817,
	3784, 3781, 3756, 2767, 3751, 2728, 3742, 3738, 3733, 2603,
	3732, 3731, 3605, 1453, 1453, 3594, 3582, 2707, 3578, 2572,
	3571, 3570, 3920, 2576, 3569, 3489, 89, 2630, 3481, 3480,
	3479, 2584, 3406, 163, 3211, 3210, 3208, 3068, 2970, 2868,
	1526, 1525, 1163, 1524, 2591, 2272, 2624, 2592, 2583, 2554,
	2098, 2790, 2723, 2742, 695, 1205, 4198, 695, 3632, 4546,
	1756, 3768, 4476, 3768, 4408, 2647, 3632, 695, 2599, 4065,
	695, 2602, 1737, 1488, 1487, 1497, 1498, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1489, 1344, 2278, 1499, 3768, 4310,
	2621, 695, 2626, 2623, 2431, 2761, 2762, 3768, 4138, 3632,
	4137, 3632, 4132, 4079, 695, 3632, 4038, 3298, 2638, 3190,
	695, 3299, 2716, 2628, 695, 3632, 3917, 3681, 2037, 3849,
	2727, 2037, 3848, 3768, 3767, 491, 3632, 3631, 89, 2281,
	1301, 4057, 1163, 163, 3416, 3415, 3412, 3413, 3412, 3411,
	2742, 695, 3996, 639, 639, 2451, 2597, 2596, 639, 2331,
	2579, 3995, 2431, 2432, 3425, 2434, 2573, 163, 2331, 695,
	3409, 674, 639, 639, 674, 2210, 695, 2753, 163, 2751,
	2752, 2533, 491, 491, 491, 491, 1632, 1631, 3697, 3016,
	3016, 3716, 2246, 3408, 2772, 3407, 102, 163, 163, 163,
	163, 163, 2854, 163, 2037, 2852, 3919, 2146, 2147, 2768,
	1307, 2598, 1309, 1306, 4626, 1078, 1307, 678, 3716, 163,
	163, 2432, 2331, 2037, 639, 2532, 2776, 4340, 4211, 3955,
	163, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 2625, 3190, 1499, 2245, 3632, 2210, 2210,
	3716, 2210, 3426, 2742, 1756, 3414, 678, 1488, 1487, 1497,
	1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 1309,
	1163, 1499, 3209, 3045, 2438, 2819, 2817, 2808, 2816, 2742,
	1754, 2615, 2601, 639, 639, 639, 2100, 2553, 1163, 2548,
	2547, 2247, 1377, 2109, 2037, 1735, 2732, 2733, 1733, 1612,
	2735, 2736, 1380, 4436, 2738, 2739, 2721, 4311, 4178, 4061,
	3787, 2926, 2929, 3776, 3773, 2475, 2502, 3022, 2477, 639,
	597, 3184, 3056, 3055, 2853, 2498, 2921, 2914, 2924, 2925,
	2282, 2712, 2713, 4663, 1313, 2855, 1702, 2878, 2856, 2527,
	2917, 2493, 2492, 1705, 1294, 2516, 3833, 163, 163, 2566,
	1210, 1209, 163, 4662, 1163, 4639, 2041, 1618, 4637, 2769,
	2770, 2771, 2860, 2857, 4631, 4630, 163, 639, 4603, 163,
	163, 163, 163, 4598, 4592, 2870, 4590, 4540, 4539, 3912,
	3908, 163, 2824, 2826, 3697, 1724, 3424, 3013, 3012, 163,
	2833, 2834, 2835, 163, 2993, 2976, 2715, 2709, 2148, 2119,
	1739, 3010, 1310, 1460, 1461, 538, 2205, 2202, 2200, 2719,
	2971, 2204, 2203, 2201, 2718, 2717, 2199, 2198, 2973, 4428,
	4343, 3213, 2750, 2801, 2802, 2803, 4390, 1460, 1461, 4180,
	133, 2758, 2174, 3060, 1463, 1458, 3020, 2757, 4116, 1465,
	1464, 3888, 1462, 163, 3864, 3771, 1456, 2178, 2962, 2964,
	491, 2996, 3521, 2965, 2966, 3520, 2967, 2968, 1463, 3405,
	4206, 3404, 3403, 1465, 1464, 2930, 1462, 3036, 4391, 3014,
	2920, 4338, 540, 541, 4337, 3197, 678, 4097, 3200, 678,
	4335, 3203, 4095, 3019, 4334, 4144, 1163, 144, 1163, 1412,
	43, 1163, 4, 4143, 4037, 560, 2575, 2574, 1163, 2092,
	3029, 674, 3104, 1163, 1163, 1163, 3079, 3090, 3186, 3083,
	4023, 4024, 3188, 163, 3103, 163, 3192, 3193, 3194, 3058,
	3112, 3089, 3096, 4467, 3099, 3076, 3880, 3054, 3033, 3727,
	2782, 3532, 3163, 3110, 43, 3204, 3038, 106, 3059, 3041,
	2777, 2778, 2779, 2780, 2781, 3071, 1448, 2272, 3171, 3377,
	2631, 1628, 1292, 1276, 1273, 1272, 2810, 1449, 1216, 4619,
	4068, 4067, 1756, 3691, 1390, 3947, 3270, 3452, 2806, 3826,
	3220, 2249, 2250, 2521, 1269, 1270, 3827, 3824, 1349, 163,
	163, 163, 1407, 4341, 3825, 4299, 4041, 3789, 2278, 3775,
	3295, 3300, 2978, 2320, 2321, 674, 1268, 2171, 2094, 2093,
	1444, 1445, 1442, 1443, 1436, 1437, 1358, 1163, 4510, 4509,
	4508, 108, 4000, 3294, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 2756, 3260, 1499, 2620,
	3303, 1249, 4425, 3215, 2755, 689, 4424, 3247, 4423, 3021,
	3249, 4422, 3191, 4207, 4170, 1609, 4162, 3207, 3025, 3026,
	4115, 3928, 3077, 3205, 690, 102, 3927, 3654, 3016, 2982,
	2983, 2984, 4641, 4640, 4640, 3217, 4463, 3296, 3844, 3218,
	3475, 3305, 3473, 3220, 3221, 3222, 3472, 3044, 2818, 2797,
	2794, 2760, 2065, 3373, 1468, 1208, 1207, 4641, 4220, 3402,
	3386, 3248, 2243, 682, 686, 685, 4526, 4251, 65, 4253,
	23, 3297, 163, 4252, 22, 4254, 24, 104, 163, 163,
	639, 639, 639, 163, 163, 4255, 25, 3361, 4249, 18,
	1379, 4248, 17, 4247, 16, 4250, 19, 3307, 68, 3309,
	3310, 3680, 4246, 15, 4240, 11, 4275, 39, 4389, 3354,
	3381, 4273, 37, 4272, 36, 1709, 1, 3385, 3441, 4276,
	40, 597, 4271, 32, 4328, 3171, 676, 2878, 50, 3308,
	4270, 31, 3371, 4269, 30, 2593, 3365, 3366, 3367, 1741,
	3368, 3369, 3427, 4266, 27, 3279, 3280, 3281, 3282, 3283,
	3284, 3285, 3286, 3287, 3288, 3289, 3315, 4265, 26, 4245,
	14, 4242, 13, 2512, 4241, 12, 3353, 3364, 2127, 2054,
	2055, 2056, 2057, 2058, 596, 2059, 678, 4239, 10, 3810,
	3271, 3272, 3273, 3274, 3275, 3276, 3809, 3615, 3434, 2994,
	4323, 4192, 3820, 2706, 1722, 3514, 4012, 1187, 2531, 1299,
	4336, 4096, 4204, 4203, 3443, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 3224, 3793, 1499,
	3383, 3384, 3792, 2987, 2986, 1293, 2580, 2107, 3454, 3080,
	3081, 3006, 3069, 4168, 2619, 3250, 2150, 3251, 3252, 2605,
	3253, 3254, 1359, 2453, 3255, 2458, 3850, 3422, 3501, 4049,
	3500, 3509, 3499, 1151, 117, 2558, 1228, 512, 2455, 2940,
	3264, 3265, 3266, 3267, 3432, 4205, 1296, 2939, 2957, 2471,
	678, 1385, 3463, 3968, 2938, 2937, 3468, 3458, 4301, 2941,
	1637, 3183, 1635, 3509, 3185, 1636, 3477, 3614, 3460, 3516,
	3517, 3518, 1634, 3461, 1639, 3510, 3523, 3524, 1638, 3526,
	518, 1620, 4375, 3410, 3694, 1469, 744, 135, 3478, 3113,
	647, 648, 124, 3544, 520, 1507, 3549, 3487, 3488, 1609,
	1609, 2754, 2861, 1076, 2647, 3494, 3493, 1077, 1069, 3076,
	700, 4466, 3511, 1702, 2745, 4216, 4098, 2917, 2191, 4208,
	4364, 3630, 3543, 3581, 1454, 4100, 3926, 3653, 2807, 1556,
	2355, 713, 660, 3711, 3652, 3945, 4102, 2263, 727, 3171,
	3522, 726, 725, 722, 723, 2390, 4352, 2252, 3291, 3290,
	3686, 3647, 3293, 3535, 1481, 3537, 3417, 1357, 3262, 702,
	1428, 1427, 163, 1426, 1425, 3564, 3550, 3566, 3553, 1419,
	3555, 3557, 3559, 3561, 671, 2424, 3027, 1397, 1395, 1394,
	1740, 3579, 1608, 3587, 3588, 3589, 3705, 2714, 2710, 670,
	163, 675, 46, 2759, 3679, 2259, 1247, 3611, 1459, 3687,
	4109, 111, 684, 683, 692, 3370, 29, 108, 3699, 3701,
	21, 20, 1204, 2636, 2658, 1185, 3655, 48, 1424, 3633,
	3303, 54, 53, 51, 52, 2981, 1163, 2523, 4374, 4564,
	1279, 4581, 4613, 1354, 163, 38, 163, 3700, 35, 34,
	1163, 33, 4267, 4261, 4260, 1163, 4263, 3765, 4262, 2174,
	3664, 3665, 3666, 4259, 3667, 4264, 4258, 4257, 4256, 4274,
	3670, 3305, 3672, 4244, 2178, 4243, 4548, 4547, 5, 98,
	95, 41, 639, 639, 119, 1147, 2, 3668, 3721, 0,
	1561, 1561, 1561, 1566, 1566, 1566, 1569, 1570, 1571, 1572,
	1566, 1566, 1566, 0, 0, 0, 0, 3698, 1488, 1487,
	1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489,
	0, 0, 1499, 3741, 3658, 3659, 3660, 3661, 3662, 0,
	3703, 0, 0, 3780, 0, 3715, 0, 0, 0, 3171,
	0, 2426, 3722, 2428, 163, 163, 3717, 3718, 3719, 3720,
	1163, 0, 0, 163, 0, 0, 0, 3714, 0, 0,
	0, 0, 3723, 3724, 3725, 0, 3743, 0, 0, 0,
	0, 3805, 3806, 3807, 0, 3459, 3752, 1163, 3736, 0,
	0, 3739, 3772, 3744, 3745, 3746, 0, 0, 3769, 3770,
	0, 0, 0, 0, 3652, 2791, 0, 0, 3762, 0,
	3836, 0, 3852, 3834, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 0, 3790, 1499, 1567,
	1568, 0, 0, 0, 0, 1600, 1601, 1602, 0, 3638,
	3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3783, 0,
	1560, 1562, 1563, 0, 0, 0, 0, 3804, 0, 0,
	3847, 3860, 3861, 0, 3838, 0, 0, 3657, 0, 3840,
	3808, 0, 0, 0, 2538, 0, 0, 0, 0, 3509,
	2540, 2541, 0, 0, 0, 1609, 2546, 0, 0, 0,
	0, 0, 0, 0, 0, 3862, 0, 0, 0, 3565,
	3683, 3684, 3685, 3835, 3509, 0, 0, 0, 0, 3839,
	0, 0, 0, 0, 3842, 3843, 0, 3845, 0, 0,
	0, 0, 0, 3868, 0, 0, 0, 0, 0, 3079,
	3090, 0, 3083, 0, 0, 0, 0, 0, 3856, 0,
	3863, 0, 0, 3885, 3089, 0, 0, 0, 0, 0,
	3889, 0, 0, 3879, 0, 0, 0, 0, 3886, 0,
	3923, 0, 0, 3877, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 163, 0, 0, 163, 163,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 3914,
	3916, 0, 0, 0, 0, 0, 3915, 0, 0, 0,
	0, 0, 0, 0, 2919, 0, 0, 0, 3652, 3652,
	2928, 2928, 0, 3952, 3929, 3931, 3705, 3774, 0, 0,
	0, 674, 3220, 0, 3957, 0, 0, 0, 0, 3171,
	3782, 0, 3689, 0, 0, 0, 0, 108, 0, 107,
	3911, 0, 0, 3901, 0, 0, 0, 0, 0, 0,
	0, 3909, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 163, 3303, 0, 0, 3949, 0, 0,
	0, 1163, 1163, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 3992, 3678, 0, 0,
	3951, 0, 163, 639, 1163, 0, 0, 0, 491, 1149,
	0, 0, 0, 0, 0, 3305, 3959, 0, 0, 0,
	0, 639, 0, 3965, 0, 0, 0, 0, 0, 0,
	108, 0, 3998, 0, 0, 3948, 0, 3969, 0, 0,
	3990, 0, 668, 3993, 0, 0, 1163, 3960, 3956, 0,
	639, 3361, 1163, 3171, 1163, 0, 3966, 1163, 0, 0,
	3997, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3361, 2364, 0, 0, 4053, 4054, 0, 0, 0, 0,
	0, 0, 0, 1163, 1163, 0, 0, 0, 0, 3985,
	3171, 3986, 3987, 0, 2552, 0, 3976, 3988, 3989, 3975,
	0, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 4002, 4077, 1499, 3999, 0, 0, 0,
	4001, 0, 2562, 0, 0, 0, 0, 0, 0, 4015,
	0, 4011, 4025, 0, 0, 4045, 4046, 4028, 4048, 0,
	4043, 0, 0, 0, 4039, 0, 4036, 0, 0, 0,
	4042, 0, 0, 0, 0, 0, 0, 0, 3170, 0,
	0, 0, 0, 0, 0, 0, 1301, 4059, 4060, 0,
	0, 0, 0, 3952, 4120, 0, 1163, 0, 694, 696,
	0, 0, 0, 0, 1163, 1163, 1163, 4069, 0, 4062,
	4063, 4086, 0, 0, 0, 108, 4047, 4119, 4072, 0,
	4074, 0, 4076, 0, 0, 0, 0, 0, 4070, 163,
	4071, 0, 0, 0, 0, 163, 0, 4084, 0, 4117,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3933, 3934, 3935, 3936, 678, 0, 0, 0,
	3940, 0, 0, 0, 3943, 3944, 4114, 0, 0, 0,
	0, 4118, 0, 4140, 0, 4142, 4126, 0, 0, 0,
	4121, 4123, 0, 0, 0, 0, 0, 0, 0, 0,
	4169, 0, 0, 0, 0, 0, 4174, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 4127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4124, 0, 0,
	0, 0, 0, 3171, 0, 0, 0, 0, 4147, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4172, 0, 0, 0, 1163, 4139, 0, 0, 0, 0,
	0, 0, 0, 0, 4176, 4164, 0, 0, 0, 0,
	4167, 3705, 4166, 0, 3361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4199, 4179, 4177, 0, 0,
	0, 1149, 108, 1149, 4221, 3170, 0, 3690, 0, 491,
	4233, 4186, 0, 0, 4165, 2928, 2928, 2928, 0, 2928,
	2928, 4190, 108, 0, 4231, 491, 0, 4185, 4188, 0,
	0, 0, 0, 0, 0, 0, 3961, 3962, 3963, 3964,
	163, 0, 0, 0, 3171, 0, 4052, 4219, 4189, 0,
	1149, 0, 0, 0, 0, 0, 0, 4320, 1488, 1487,
	1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489,
	0, 163, 1499, 4292, 0, 0, 0, 0, 0, 0,
	0, 4308, 0, 0, 0, 1163, 1163, 1163, 0, 0,
	0, 4312, 639, 0, 0, 0, 0, 0, 4305, 163,
	639, 3361, 0, 4304, 3914, 0, 4356, 1163, 1163, 0,
	0, 3915, 4325, 4087, 4088, 4089, 4321, 4318, 3303, 0,
	0, 0, 2851, 4327, 0, 639, 0, 1163, 0, 639,
	0, 0, 4342, 0, 0, 0, 4316, 0, 0, 639,
	4355, 0, 4359, 0, 1149, 0, 1149, 0, 4126, 0,
	163, 163, 1149, 4315, 0, 0, 0, 0, 0, 3305,
	0, 0, 0, 0, 0, 0, 4385, 0, 0, 0,
	0, 0, 4394, 491, 2928, 0, 0, 0, 0, 0,
	0, 491, 491, 491, 491, 1163, 4136, 0, 1163, 491,
	491, 1163, 491, 4420, 0, 0, 0, 0, 4363, 0,
	4367, 1163, 3270, 1163, 4379, 491, 491, 1163, 163, 491,
	0, 4399, 0, 0, 1163, 2979, 1163, 1163, 1163, 1163,
	1163, 1163, 4406, 0, 4407, 4416, 0, 0, 4429, 0,
	0, 4163, 0, 4414, 3361, 3914, 0, 0, 0, 3170,
	4417, 0, 3915, 4415, 3009, 4426, 4101, 4104, 4173, 4427,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4181, 0, 0, 4474, 4435, 4447, 4440, 0, 4444,
	4478, 0, 4473, 0, 0, 597, 1537, 0, 4453, 1163,
	0, 0, 4490, 0, 4410, 1163, 0, 4412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1457, 0, 163,
	0, 0, 0, 0, 1163, 4489, 4475, 1149, 0, 0,
	1149, 0, 0, 0, 0, 4481, 1149, 1149, 1149, 1149,
	4477, 1149, 1149, 4514, 0, 1149, 1149, 4505, 4514, 4480,
	4507, 4441, 4514, 4524, 4482, 4501, 4528, 4516, 4517, 4518,
	1149, 4447, 4521, 4498, 4497, 0, 3652, 4532, 0, 0,
	0, 0, 4511, 4525, 0, 157, 0, 0, 0, 0,
	0, 537, 4465, 0, 1149, 3303, 157, 1149, 0, 557,
	1149, 4536, 0, 4533, 0, 4543, 4545, 4553, 4512, 4552,
	4479, 4561, 0, 2444, 4557, 657, 4572, 4559, 4529, 4551,
	1163, 108, 4550, 4563, 157, 1163, 4549, 4584, 4541, 0,
	597, 0, 0, 0, 0, 0, 3305, 657, 701, 0,
	0, 0, 0, 0, 1086, 1149, 0, 0, 157, 1149,
	0, 1149, 0, 0, 4607, 1149, 4514, 0, 4514, 3170,
	0, 0, 4616, 0, 1537, 4605, 1149, 1149, 1149, 1149,
	157, 1149, 0, 4514, 4514, 4514, 4591, 0, 4514, 4593,
	0, 3214, 0, 157, 0, 0, 0, 0, 0, 4623,
	0, 0, 0, 0, 0, 0, 0, 0, 4636, 1149,
	0, 1149, 4638, 1149, 0, 0, 4514, 0, 4514, 4649,
	0, 4651, 0, 0, 4392, 0, 0, 0, 0, 0,
	0, 4583, 0, 4646, 4661, 0, 0, 0, 0, 4589,
	0, 0, 0, 1149, 4669, 0, 0, 0, 0, 1149,
	4514, 0, 0, 0, 4604, 3258, 0, 1149, 0, 163,
	0, 1163, 0, 0, 4514, 0, 0, 0, 0, 4674,
	4104, 0, 3257, 1149, 0, 0, 1149, 0, 0, 0,
	4514, 0, 0, 0, 0, 0, 1149, 0, 0, 0,
	0, 1163, 1149, 4514, 0, 0, 4686, 163, 0, 4514,
	0, 0, 639, 3256, 3567, 3568, 0, 639, 639, 0,
	639, 0, 3577, 0, 0, 3580, 0, 0, 0, 0,
	0, 0, 3590, 3591, 3592, 3593, 0, 0, 0, 2912,
	3606, 3608, 3610, 0, 0, 0, 4368, 4372, 0, 0,
	0, 491, 0, 0, 0, 4386, 0, 3613, 0, 0,
	0, 0, 0, 1390, 0, 0, 491, 0, 0, 0,
	0, 2884, 0, 0, 0, 0, 491, 1488, 1487, 1497,
	1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 0,
	0, 1499, 3376, 491, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 0, 2873, 1499, 2744,
	0, 0, 0, 0, 0, 0, 0, 0, 4527, 0,
	2881, 0, 4530, 3420, 0, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 0, 0, 1499,
	4448, 0, 0, 0, 0, 0, 0, 0, 0, 3223,
	0, 3453, 2641, 0, 0, 0, 0, 0, 0, 3170,
	1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1489, 4586, 0, 1499, 0, 0, 1163, 1488, 1487,
	1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489,
	0, 0, 1499, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 1609, 3729, 3730, 0, 0, 0, 0,
	0, 0, 3737, 0, 0, 3740, 0, 0, 0, 0,
	0, 0, 3747, 3748, 3749, 3750, 0, 0, 4519, 0,
	2885, 3757, 3759, 3761, 0, 0, 157, 3764, 0, 0,
	0, 2894, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 163, 0, 0, 0, 0,
	3546, 0, 2705, 4652, 0, 0, 3201, 0, 0, 0,
	0, 0, 0, 3170, 0, 0, 0, 2883, 2906, 0,
	0, 0, 0, 0, 0, 0, 1390, 0, 2654, 4579,
	0, 0, 0, 0, 2678, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 0, 0, 1499,
	3170, 157, 0, 491, 0, 3198, 2928, 2928, 1163, 0,
	0, 1163, 0, 0, 0, 0, 2653, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2675, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2901, 0, 0, 0, 0, 2641, 0, 0, 0, 0,
	0, 0, 0, 0, 4650, 0, 0, 0, 0, 639,
	0, 4655, 0, 0, 0, 2910, 0, 0, 0, 0,
	0, 657, 0, 0, 0, 0, 2891, 0, 2928, 2928,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 1163, 491, 0, 491, 0, 1086, 0, 0,
	0, 0, 0, 0, 2644, 2643, 2656, 2663, 2642, 2655,
	2646, 0, 0, 2679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2688, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 3195, 0, 2903, 0, 0,
	0, 2666, 2664, 2659, 0, 0, 0, 0, 2661, 0,
	0, 0, 0, 0, 0, 2773, 0, 0, 0, 0,
	2677, 2699, 2650, 2649, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 0, 0, 1499, 0,
	2645, 0, 0, 3170, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 2651, 2652, 1499, 0,
	2669, 0, 2660, 2662, 2665, 2667, 2876, 1488, 1487, 1497,
	1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3791, 2211, 2212, 2213, 2888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 2695, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 3837,
	0, 0, 0, 0, 0, 0, 0, 0, 2703, 0,
	491, 0, 0, 163, 3170, 0, 0, 0, 0, 2685,
	0, 0, 0, 0, 0, 0, 0, 0, 2877, 2879,
	0, 0, 2882, 0, 1163, 2887, 0, 2892, 2889, 2890,
	0, 2893, 2886, 0, 2896, 2895, 2897, 0, 2898, 2899,
	2900, 0, 0, 2902, 2904, 2905, 2907, 2908, 2909, 0,
	0, 0, 2880, 2911, 0, 0, 0, 0, 0, 0,
	0, 0, 2913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2332, 0,
	0, 0, 0, 0, 0, 0, 2336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2399,
	2400, 0, 0, 1163, 0, 0, 0, 2407, 2408, 2409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2422, 0, 0, 0, 2671,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2648, 0, 0, 0, 0, 1611, 0, 0, 1086,
	0, 0, 0, 0, 1086, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 2672, 2673, 0, 0, 2676, 0, 0, 2681, 0,
	2686, 2683, 2684, 0, 2687, 2680, 0, 2690, 2689, 2691,
	0, 2692, 2693, 2694, 0, 1163, 2696, 2697, 2698, 2700,
	2701, 2702, 0, 0, 0, 2674, 2704, 0, 0, 0,
	0, 0, 0, 0, 0, 2668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 1718, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 1718, 557, 0, 639, 1751, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 1163, 0, 0, 0, 0,
	157, 157, 157, 157, 157, 0, 157, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 2069, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 2670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	589, 0, 583, 594, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 0, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 157, 0, 0, 0, 657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 1751, 157, 157, 157, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 657, 2912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 0, 0, 0, 0, 0, 2884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 157, 0, 0, 575,
	574, 577, 0, 0, 0, 4187, 0, 1753, 0, 582,
	0, 0, 0, 0, 0, 0, 2568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 2881, 0,
	0, 0, 590, 0, 0, 0, 0, 0, 0, 0,
	2239, 0, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 157, 2239,
	2239, 2239, 0, 0, 0, 2239, 0, 2239, 2239, 2239,
	578, 2239, 2239, 0, 0, 0, 1086, 2239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2239, 2239, 2239, 2239, 0, 0, 2239, 2239, 2239,
	2239, 2239, 2239, 0, 2627, 0, 2239, 2239, 2239, 2239,
	2239, 2239, 2239, 2239, 2239, 2239, 2239, 2239, 0, 0,
	0, 0, 157, 157, 157, 0, 0, 0, 2885, 0,
	1086, 0, 0, 581, 0, 2632, 0, 0, 0, 2894,
	0, 0, 4358, 0, 0, 0, 2724, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2741, 579, 580, 587,
	2122, 591, 592, 595, 0, 2883, 2906, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 2774,
	0, 2775, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 157, 157, 0, 0, 0, 157, 157, 0, 0,
	0, 0, 0, 0, 0, 2783, 2784, 2785, 2901, 0,
	0, 2789, 0, 2792, 0, 0, 2795, 0, 0, 2798,
	2799, 0, 0, 0, 2804, 2805, 0, 0, 0, 0,
	2811, 2812, 2813, 2910, 0, 2814, 0, 2815, 0, 0,
	0, 0, 0, 0, 2891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	712, 0, 0, 0, 0, 0, 0, 2820, 2821, 2822,
	2823, 0, 0, 2827, 2828, 2829, 2830, 2831, 2832, 0,
	0, 0, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 0, 2848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2903, 0, 0, 158, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 0, 0, 2705, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 0, 0, 0, 1087, 1390, 0,
	2654, 158, 1155, 0, 2876, 0, 2678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2888, 0, 494, 158, 0, 2653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 0, 2877, 2879, 0, 0,
	2882, 0, 0, 2887, 0, 2892, 2889, 2890, 0, 2893,
	2886, 0, 2896, 2895, 2897, 157, 2898, 2899, 2900, 0,
	0, 2902, 2904, 2905, 2907, 2908, 2909, 0, 0, 0,
	2880, 2911, 0, 0, 0, 0, 0, 0, 0, 0,
	2913, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2644, 3496, 2656, 0,
	3495, 2655, 2646, 0, 0, 2679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2677, 2699, 2650, 2649, 0, 3189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2875, 0, 0, 0, 3497, 3498,
	0, 0, 2669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3225, 3226,
	3227, 3228, 3229, 3230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 157, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	0, 0, 0, 0, 0, 2695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1086, 1086, 0, 0, 0, 0, 1753,
	2703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2685, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 158,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2239, 0, 0,
	0, 0, 0, 0, 2239, 2239, 2239, 2239, 2239, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4277, 0, 158, 4612, 4615, 4611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 157, 0,
	2682, 157, 2858, 1753, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 2648, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 658, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	1087, 533, 0, 2672, 2673, 0, 0, 2676, 0, 0,
	2681, 494, 2686, 2683, 2684, 0, 2687, 2680, 0, 2690,
	2689, 2691, 0, 2692, 2693, 2694, 157, 0, 2696, 2697,
	2698, 2700, 2701, 2702, 0, 0, 0, 2674, 2704, 0,
	0, 0, 0, 0, 0, 0, 0, 2668, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4289, 4281,
	4282, 4283, 4287, 4288, 4285, 0, 4286, 0, 4290, 0,
	0, 0, 0, 78, 0, 79, 0, 505, 0, 0,
	0, 0, 0, 0, 3635, 3636, 3637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 42, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 3656, 0, 0, 71, 0, 0, 0,
	0, 2670, 93, 3663, 508, 47, 0, 0, 0, 0,
	0, 0, 0, 519, 531, 532, 0, 0, 0, 3674,
	3675, 3676, 3677, 0, 0, 0, 0, 3682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3692, 3693,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 514, 4284, 521, 517, 0, 0, 526, 527,
	0, 0, 0, 0, 0, 4291, 4279, 3702, 66, 67,
	73, 0, 74, 0, 4277, 0, 0, 0, 0, 4690,
	0, 0, 0, 743, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2239, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 157, 701,
	0, 0, 0, 0, 0, 2239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 495, 0, 0, 0, 0, 0, 523,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 524, 0,
	96, 659, 0, 0, 0, 0, 4278, 0, 0, 0,
	160, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 160, 1159, 0, 0, 0, 0,
	1086, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 158,
	0, 0, 1087, 0, 0, 0, 0, 1087, 495, 160,
	515, 529, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 69, 70, 0,
	4280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4289, 4281, 4282, 4283, 4287, 4288, 4285, 0, 4286, 506,
	4290, 0, 0, 157, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 158,
	84, 0, 0, 0, 157, 0, 522, 509, 510, 60,
	536, 0, 0, 0, 511, 513, 0, 507, 535, 534,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 494, 494,
	494, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 158, 158, 158, 158, 0, 158,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 157, 0, 0, 4291, 4279, 0,
	66, 67, 73, 0, 74, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3937, 3938, 3939, 0, 3941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 3950, 0, 3953, 3954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3958, 0, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	0, 0, 0, 158, 158, 0, 0, 0, 658, 0,
	2175, 0, 0, 0, 0, 0, 3991, 0, 0, 0,
	0, 0, 158, 0, 3994, 158, 158, 158, 158, 0,
	0, 0, 657, 0, 0, 0, 0, 658, 0, 0,
	0, 0, 160, 0, 0, 158, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 494, 4064, 0, 0,
	2274, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 4080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 158, 0, 42, 0, 4105, 4106, 4107, 4108, 0,
	0, 0, 0, 0, 0, 4112, 4113, 71, 0, 2359,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 4122,
	0, 0, 0, 0, 0, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 158, 158, 158, 89, 0,
	0, 0, 0, 1087, 4284, 0, 0, 0, 0, 0,
	0, 0, 157, 42, 495, 0, 0, 0, 0, 0,
	2274, 0, 0, 1155, 0, 4277, 0, 71, 0, 0,
	4684, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 4171, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 4284, 0, 0, 0, 0, 4194,
	4195, 4196, 4197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4277, 0, 0, 0, 0,
	4678, 4212, 49, 90, 56, 55, 58, 0, 158, 0,
	0, 96, 0, 0, 158, 158, 0, 4278, 0, 158,
	158, 0, 556, 0, 0, 0, 0, 0, 4226, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4306, 4307, 0, 1085, 0, 0,
	0, 0, 1154, 0, 0, 0, 0, 0, 4317, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 4326,
	0, 96, 0, 0, 0, 0, 1191, 4278, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 4346, 0,
	0, 0, 0, 4357, 0, 62, 92, 91, 69, 70,
	0, 4280, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 4289, 4281, 4282, 4283, 4287, 4288, 4285, 0, 4286,
	0, 4290, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 742, 0, 0, 0, 0, 657, 0,
	60, 0, 0, 0, 0, 0, 0, 657, 157, 0,
	0, 0, 0, 0, 1086, 0, 4402, 0, 69, 70,
	4405, 4280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4289, 4281, 4282, 4283, 4287, 4288, 4285, 0, 4286,
	0, 4290, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 159, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 4291, 4279,
	60, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	159, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2634, 2635, 0, 0, 0,
	0, 0, 0, 0, 159, 1156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 4291, 4279,
	0, 66, 67, 73, 0, 74, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 4542, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 658, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 495, 495, 495, 0, 0, 0, 0, 4585,
	0, 0, 4587, 4588, 0, 0, 160, 160, 160, 160,
	160, 0, 160, 0, 0, 4599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 158, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1087, 1087, 0, 0,
	0, 0, 2274, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 160, 0, 0,
	0, 659, 0, 2176, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 160, 160,
	160, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 492, 495,
	0, 0, 0, 2275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 157, 0, 0, 158, 0, 0, 0,
	0, 158, 0, 0, 158, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 3061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	494, 3098, 659, 0, 160, 0, 0, 0, 0, 0,
	3109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3129, 3130, 3131, 3132,
	3133, 3134, 3135, 3136, 0, 0, 3139, 3140, 3141, 3142,
	3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152,
	3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 158,
	3175, 3176, 0, 0, 0, 0, 0, 0, 160, 160,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 2275, 494, 0, 1159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 492, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4284, 0,
	0, 160, 0, 0, 0, 0, 0, 160, 160, 0,
	0, 0, 160, 160, 0, 1086, 0, 0, 0, 4277,
	0, 0, 0, 0, 4670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3316, 3317, 3318, 0, 3322, 3323, 3324, 3325, 3326,
	0, 0, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336,
	3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 0,
	3347, 3348, 3349, 3350, 3351, 3352, 0, 3355, 3356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 2274, 0, 0, 1085, 1621, 0,
	0, 0, 0, 657, 0, 158, 49, 90, 56, 55,
	58, 158, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 1717, 556, 0, 0, 0, 0,
	0, 0, 0, 3304, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 556, 0, 0,
	1750, 0, 69, 70, 0, 4280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4289, 4281, 4282, 4283, 4287,
	4288, 4285, 0, 4286, 0, 4290, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 3533, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 494, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 3572, 3573, 0, 0, 0, 0, 0,
	0, 160, 159, 0, 0, 0, 2106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 2128, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 4291, 4279, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2180, 0, 0, 0, 492, 0, 158, 158, 0, 0,
	0, 0, 159, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 159, 494, 494, 494,
	494, 0, 0, 0, 0, 494, 494, 1755, 494, 0,
	0, 492, 492, 492, 492, 0, 0, 0, 0, 0,
	0, 494, 494, 0, 158, 494, 159, 159, 159, 159,
	159, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 160, 3726, 0, 3728, 0, 0,
	0, 0, 659, 3734, 3735, 0, 0, 0, 0, 0,
	2180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2275, 0, 0, 0, 0,
	0, 0, 2180, 0, 2180, 0, 0, 2317, 0, 0,
	0, 0, 0, 0, 2318, 0, 0, 0, 0, 2180,
	2324, 2180, 0, 0, 0, 658, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 159, 159, 0, 0,
	0, 0, 0, 2177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1085, 0, 159, 0, 0, 159, 159,
	159, 159, 0, 3304, 0, 0, 2175, 0, 0, 0,
	2180, 42, 0, 1154, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3878, 160,
	0, 0, 0, 0, 160, 0, 0, 160, 0, 0,
	0, 0, 159, 0, 0, 0, 89, 0, 0, 492,
	0, 0, 4284, 2273, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 4277, 0, 71, 0, 0, 4643, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 4284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 4277, 0, 0, 0, 495, 4625, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4278, 0, 0, 159, 159,
	159, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 494, 2273, 0, 0, 1156, 0, 0, 0,
	0, 0, 494, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3967, 0, 0, 0, 71, 0, 494,
	0, 0, 2176, 93, 0, 0, 47, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 69, 70, 89, 4280,
	57, 0, 0, 0, 4284, 0, 0, 0, 0, 4289,
	4281, 4282, 4283, 4287, 4288, 4285, 0, 4286, 0, 4290,
	0, 159, 0, 0, 78, 4277, 79, 159, 159, 0,
	0, 0, 159, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 2275, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 160, 4280,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 4289,
	4281, 4282, 4283, 4287, 4288, 4285, 0, 4286, 0, 4290,
	0, 658, 0, 0, 78, 0, 79, 0, 0, 0,
	658, 158, 49, 90, 56, 55, 58, 3304, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4278, 0, 84,
	0, 0, 0, 0, 0, 0, 4291, 4279, 60, 66,
	67, 73, 0, 74, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 2578, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 2590, 0, 494, 0,
	0, 2590, 0, 0, 0, 4128, 0, 4130, 4131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4291, 4279, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 69, 70,
	0, 4280, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 4289, 4281, 4282, 4283, 4287, 4288, 4285, 4622, 4286,
	0, 4290, 0, 0, 495, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 2726, 494, 0, 494,
	60, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2748, 0, 0, 1085, 1085, 0, 0,
	0, 0, 2180, 0, 0, 0, 0, 0, 160, 0,
	0, 159, 0, 0, 0, 42, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 93, 0, 0, 47, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 4291, 4279,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 160,
	160, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4314, 0,
	89, 0, 495, 159, 0, 0, 4284, 0, 0, 0,
	495, 495, 495, 495, 0, 0, 59, 61, 495, 495,
	0, 495, 87, 0, 0, 0, 0, 4277, 0, 0,
	0, 0, 4621, 0, 495, 495, 0, 160, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 1085, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 659, 4278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2273, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 494, 0, 2977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2985, 2989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 2176,
	3011, 3304, 0, 0, 0, 0, 158, 0, 0, 0,
	69, 70, 0, 4280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4289, 4281, 4282, 4283, 4287, 4288, 4285,
	0, 4286, 0, 4290, 0, 0, 0, 0, 78, 0,
	79, 0, 2590, 0, 0, 0, 0, 0, 3037, 0,
	2590, 0, 0, 2590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 0, 2180,
	2180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 159, 0, 0, 159, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4291, 4279, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 3187, 0, 0, 0, 0, 0, 0, 0,
	3187, 3187, 3187, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 159, 0, 2180, 0, 0, 0, 658, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	495, 0, 47, 0, 0, 0, 0, 2180, 0, 0,
	0, 159, 0, 0, 0, 495, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3304, 0,
	0, 0, 495, 0, 89, 0, 0, 0, 0, 0,
	4284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3268, 0, 0, 0,
	0, 4277, 0, 0, 0, 0, 4620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2177, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 62, 92, 91, 659, 0, 0, 0, 57, 0,
	0, 0, 0, 659, 160, 0, 0, 2273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 3428, 3429, 3430, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3187, 3187, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3466, 69, 70, 0, 4280, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 4289, 4281, 4282,
	4283, 4287, 4288, 4285, 0, 4286, 0, 4290, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 3519, 0, 0, 2726, 0, 60, 3525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2726, 0, 2726,
	0, 0, 0, 3545, 0, 0, 0, 0, 0, 0,
	2726, 0, 2726, 3554, 2726, 2726, 2726, 2726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	495, 0, 495, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 42, 0, 4291, 4279, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 3187, 71, 0, 0, 0,
	0, 3634, 93, 0, 0, 47, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 4617, 0,
	0, 0, 0, 4284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1085, 0, 0, 2180, 0, 0, 0,
	0, 2726, 492, 0, 0, 0, 0, 0, 0, 0,
	492, 492, 492, 492, 0, 495, 0, 0, 492, 492,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 160, 0, 492, 492, 0, 159, 492, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 71, 0,
	96, 0, 0, 0, 93, 0, 4278, 47, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4284, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 2989, 0, 0,
	0, 0, 495, 0, 0, 0, 4277, 0, 495, 0,
	0, 4609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4280, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	4289, 4281, 4282, 4283, 4287, 4288, 4285, 0, 4286, 0,
	4290, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2177,
	84, 0, 71, 49, 90, 56, 55, 58, 93, 60,
	0, 47, 96, 0, 0, 0, 0, 0, 4278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 4284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4277, 0, 0, 0, 0, 4606, 0, 4291, 4279, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 3918, 0, 0, 0, 0, 0, 69,
	70, 0, 4280, 0, 0, 0, 0, 0, 159, 2180,
	0, 0, 4289, 4281, 4282, 4283, 4287, 4288, 4285, 0,
	4286, 0, 4290, 0, 0, 0, 0, 78, 0, 79,
	0, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 49, 90, 56,
	55, 58, 84, 0, 0, 0, 96, 0, 0, 0,
	0, 60, 4278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1085, 0, 0,
	62, 92, 91, 42, 0, 0, 0, 57, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 93, 0, 492, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 3187, 0, 0, 3187, 0, 4291,
	4279, 0, 66, 67, 73, 0, 74, 0, 89, 0,
	0, 1660, 0, 0, 4284, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4280, 59, 61, 659,
	0, 0, 0, 87, 0, 4277, 4289, 4281, 4282, 4283,
	4287, 4288, 4285, 0, 4286, 0, 4290, 0, 0, 0,
	0, 78, 0, 79, 4454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 4066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4278, 0, 0,
	0, 0, 0, 0, 2180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 62, 92, 91, 0, 0,
	0, 0, 57, 4291, 4279, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 1661, 0, 87, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4280, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 4289, 4281, 4282, 4283, 4287, 4288, 4285, 4520, 4286,
	0, 4290, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 3187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 492, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 4291, 4279,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 2180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 1677, 1678, 1679, 1680, 1681,
	1682, 1085, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 0, 1662, 1663, 1664, 1644,
	1643, 1675, 1645, 1648, 1642, 1646, 1641, 0, 0, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2180, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 85, 1676, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1665, 2180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 2180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1085, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2180, 901, 1043, 0, 0, 448, 802, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 706, 856, 889, 259, 705, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 492, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1049, 909, 978, 1050,
	89, 0, 0, 0, 0, 731, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 0,
	938, 983, 1062, 854, 703, 720, 859, 809, 4371, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 0, 0,
	0, 0, 825, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1033, 926, 301, 191, 1039, 924, 823,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1018, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 811,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	877, 1065, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 948, 1040,
	862, 808, 1016, 819, 820, 821, 822, 988, 1059, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 901, 1043, 0,
	0, 448, 802, 1047, 888, 911, 1057, 917, 919, 984,
	863, 959, 357, 908, 864, 0, 0, 855, 706, 856,
	889, 259, 705, 1017, 962, 1045, 945, 977, 987, 258,
	244, 952, 951, 1034, 900, 899, 982, 1030, 1044, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1049, 909, 978, 1050, 89, 0, 695, 0, 0,
	731, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 0, 938, 983, 1062, 854, 703,
	720, 859, 809, 0, 1035, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1012, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 0, 0, 0, 0, 825, 0, 719,
	0, 869, 715, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 721, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 797, 1033, 926,
	301, 191, 1039, 924, 823, 992, 870, 1021, 1055, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 807,
	198, 313, 1018, 890, 903, 728, 0, 392, 979, 467,
	709, 278, 0, 965, 391, 315, 460, 993, 1041, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1011, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1023, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1019, 1006, 1025, 886, 872,
	878, 873, 902, 1042, 293, 285, 1026, 1024, 904, 361,
	224, 956, 949, 942, 811, 471, 1058, 257, 1008, 473,
	180, 406, 405, 916, 292, 1009, 181, 170, 385, 182,
	302, 204, 1029, 486, 220, 309, 450, 708, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1048, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1037, 1020, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 729, 730,
	246, 800, 1052, 211, 867, 1051, 349, 356, 348, 1054,
	1053, 459, 1038, 968, 955, 953, 861, 1036, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1046, 1064,
	439, 226, 879, 1013, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1061, 360,
	393, 233, 469, 421, 262, 877, 1065, 824, 812, 813,
	816, 960, 961, 814, 817, 818, 826, 798, 799, 801,
	803, 804, 805, 948, 1040, 862, 808, 1016, 819, 820,
	821, 822, 988, 1059, 796, 242, 745, 838, 839, 840,
	746, 841, 842, 747, 748, 843, 844, 845, 846, 749,
	847, 848, 849, 827, 828, 829, 830, 831, 832, 833,
	834, 837, 835, 836, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 806, 199, 212,
	312, 1060, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1014, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1063, 346, 1032, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1010, 1015, 1022, 1027, 1028,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1031, 1056,
	976, 990, 901, 1043, 0, 0, 448, 802, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 706, 856, 889, 259, 705, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1049, 909, 978, 1050,
	89, 0, 0, 0, 0, 731, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 0,
	938, 983, 1062, 854, 703, 720, 859, 809, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 2237, 0,
	0, 0, 825, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1033, 926, 301, 191, 1039, 924, 823,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1018, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 811,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	877, 1065, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 948, 1040,
	862, 808, 1016, 819, 820, 821, 822, 988, 1059, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 901, 1043, 0,
	0, 448, 802, 1047, 888, 911, 1057, 917, 919, 984,
	863, 959, 357, 908, 864, 0, 0, 855, 706, 856,
	889, 259, 705, 1017, 962, 1045, 945, 977, 987, 258,
	244, 952, 951, 1034, 900, 899, 982, 1030, 1044, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1049, 909, 978, 1050, 89, 0, 0, 0, 0,
	731, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 0, 938, 983, 1062, 854, 703,
	720, 859, 809, 0, 1035, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1012, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 699, 0, 0, 0, 825, 0, 719,
	0, 869, 715, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 721, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 797, 1033, 926,
	301, 191, 1039, 924, 823, 992, 870, 1021, 1055, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 807,
	198, 313, 1018, 890, 903, 728, 0, 392, 979, 467,
	709, 278, 0, 965, 391, 315, 460, 993, 1041, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1011, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1023, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1019, 1006, 1025, 886, 872,
	878, 873, 902, 1042, 293, 285, 1026, 1024, 904, 361,
	224, 956, 949, 942, 811, 471, 1058, 257, 1008, 473,
	180, 406, 405, 916, 292, 1009, 181, 170, 385, 182,
	302, 204, 1029, 486, 220, 309, 450, 708, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1048, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1037, 1020, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 729, 730,
	246, 800, 1052, 211, 867, 1051, 349, 356, 348, 1054,
	1053, 459, 1038, 968, 955, 953, 861, 1036, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1046, 1064,
	439, 226, 879, 1013, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1061, 360,
	393, 233, 469, 421, 262, 877, 1065, 824, 812, 813,
	816, 960, 961, 814, 817, 818, 826, 798, 799, 801,
	803, 804, 805, 948, 1040, 862, 808, 1016, 819, 820,
	821, 822, 988, 1059, 796, 242, 745, 838, 839, 840,
	746, 841, 842, 747, 748, 843, 844, 845, 846, 749,
	847, 848, 849, 827, 828, 829, 830, 831, 832, 833,
	834, 837, 835, 836, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 806, 199, 212,
	312, 1060, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1014, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1063, 346, 1032, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1010, 1015, 1022, 1027, 1028,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1031, 1056,
	976, 990, 901, 1043, 0, 0, 448, 802, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 706, 856, 889, 259, 705, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1049, 909, 2446, 1050,
	89, 0, 0, 0, 0, 2448, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 2447,
	938, 983, 1062, 854, 703, 720, 859, 809, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 0, 0,
	0, 0, 825, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1033, 926, 301, 191, 1039, 924, 823,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1018, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 811,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	877, 1065, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 948, 1040,
	862, 808, 1016, 819, 820, 821, 822, 988, 1059, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 901, 1043, 0,
	0, 448, 802, 1047, 888, 911, 1057, 917, 919, 984,
	863, 959, 357, 908, 864, 0, 0, 855, 706, 856,
	889, 259, 705, 1017, 962, 1045, 945, 977, 987, 258,
	244, 952, 951, 1034, 900, 899, 982, 1030, 1044, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1049, 909, 978, 1050, 89, 0, 0, 0, 0,
	2346, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 0, 938, 983, 1062, 854, 703,
	720, 859, 809, 0, 1035, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1012, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 2237, 0, 0, 0, 825, 0, 719,
	0, 869, 715, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 721, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 797, 1033, 926,
	301, 191, 1039, 924, 823, 992, 870, 1021, 1055, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 807,
	198, 313, 1018, 890, 903, 728, 0, 392, 979, 467,
	709, 278, 0, 965, 391, 315, 460, 993, 1041, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1011, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1023, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1019, 1006, 1025, 886, 872,
	878, 873, 902, 1042, 293, 285, 1026, 1024, 904, 361,
	224, 956, 949, 942, 811, 471, 1058, 257, 1008, 473,
	180, 406, 405, 916, 292, 1009, 181, 170, 385, 182,
	302, 204, 1029, 486, 220, 309, 450, 708, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1048, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1037, 1020, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 729, 730,
	246, 800, 1052, 211, 867, 1051, 349, 356, 348, 1054,
	1053, 459, 1038, 968, 955, 953, 861, 1036, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1046, 1064,
	439, 226, 879, 1013, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1061, 360,
	393, 233, 469, 421, 262, 877, 1065, 824, 812, 813,
	816, 960, 961, 814, 817, 818, 826, 798, 799, 801,
	803, 804, 805, 948, 1040, 862, 808, 1016, 819, 820,
	821, 822, 988, 1059, 796, 242, 745, 838, 839, 840,
	746, 841, 842, 747, 748, 843, 844, 845, 846, 749,
	847, 848, 849, 827, 828, 829, 830, 831, 832, 833,
	834, 837, 835, 836, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 806, 199, 212,
	312, 1060, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1014, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1063, 346, 1032, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1010, 1015, 1022, 1027, 1028,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1031, 1056,
	976, 990, 901, 1043, 0, 0, 448, 802, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 706, 856, 889, 259, 705, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1049, 909, 978, 1050,
	89, 0, 0, 0, 0, 2343, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 0,
	938, 983, 1062, 854, 703, 720, 859, 809, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 2237, 0,
	0, 0, 825, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1033, 926, 301, 191, 1039, 924, 823,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1018, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 811,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	877, 1065, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 948, 1040,
	862, 808, 1016, 819, 820, 821, 822, 988, 1059, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 901, 1043, 0,
	42, 448, 802, 1047, 888, 911, 1057, 917, 919, 984,
	863, 959, 357, 908, 864, 0, 0, 855, 706, 856,
	889, 259, 705, 1017, 962, 1045, 945, 977, 987, 258,
	244, 952, 951, 1034, 900, 899, 982, 1030, 1044, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1049, 909, 978, 1050, 89, 0, 0, 0, 0,
	731, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 0, 938, 983, 1062, 854, 703,
	720, 859, 809, 0, 1035, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1012, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 0, 0, 0, 0, 825, 0, 719,
	0, 869, 715, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 721, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 797, 1540, 926,
	301, 191, 1039, 924, 823, 992, 870, 1021, 1055, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 807,
	198, 313, 1018, 890, 903, 728, 0, 392, 979, 467,
	709, 278, 0, 965, 391, 315, 460, 993, 1041, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1011, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1023, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1019, 1006, 1025, 886, 872,
	878, 873, 902, 1042, 293, 285, 1026, 1024, 904, 361,
	224, 956, 949, 942, 811, 471, 1058, 257, 1008, 473,
	180, 406, 405, 916, 292, 1009, 181, 170, 385, 182,
	302, 204, 1029, 486, 220, 309, 450, 708, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1048, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1037, 1020, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 729, 730,
	246, 800, 1052, 211, 867, 1051, 349, 356, 348, 1054,
	1053, 459, 1038, 968, 955, 953, 861, 1036, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1046, 1064,
	439, 226, 879, 1013, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1061, 360,
	393, 233, 469, 421, 262, 877, 1065, 824, 812, 813,
	816, 960, 961, 814, 817, 818, 826, 798, 799, 801,
	803, 804, 805, 948, 1040, 862, 808, 1016, 819, 820,
	821, 822, 988, 1059, 796, 242, 745, 838, 839, 840,
	746, 841, 842, 747, 748, 843, 844, 845, 846, 749,
	847, 848, 849, 827, 828, 829, 830, 831, 832, 833,
	834, 837, 835, 836, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 806, 199, 212,
	312, 1538, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1014, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1063, 346, 1032, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1010, 1015, 1022, 1027, 1028,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1031, 1056,
	976, 990, 901, 1043, 0, 0, 448, 802, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 706, 856, 889, 259, 705, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1049, 909, 978, 1050,
	89, 0, 2104, 0, 0, 731, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 0,
	938, 983, 1062, 854, 703, 720, 859, 809, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 0, 0,
	0, 0, 825, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1033, 926, 301, 191, 1039, 924, 823,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1018, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 811,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	877, 1065, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 948, 1040,
	862, 808, 1016, 819, 820, 821, 822, 988, 1059, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 901, 1043, 0,
	0, 448, 802, 1047, 888, 911, 1057, 917, 919, 984,
	863, 959, 357, 908, 864, 0, 0, 855, 706, 856,
	889, 259, 705, 1017, 962, 1045, 945, 977, 987, 258,
	244, 952, 951, 1034, 900, 899, 982, 1030, 1044, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1049, 909, 978, 1050, 89, 0, 0, 0, 0,
	731, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 0, 938, 983, 1062, 854, 703,
	720, 859, 809, 0, 1035, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1012, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 0, 0, 0, 0, 825, 0, 719,
	0, 869, 715, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 721, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 797, 1033, 926,
	301, 191, 1039, 924, 823, 992, 870, 1021, 1055, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 807,
	198, 313, 1018, 890, 903, 728, 0, 392, 979, 467,
	709, 278, 0, 965, 391, 315, 460, 993, 1041, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1011, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1023, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1019, 1006, 1025, 886, 872,
	878, 873, 902, 1042, 293, 285, 1026, 1024, 904, 361,
	224, 956, 949, 942, 811, 471, 1058, 257, 1008, 473,
	180, 406, 405, 916, 292, 1009, 181, 170, 385, 182,
	302, 204, 1029, 486, 220, 309, 450, 708, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1048, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1037, 1020, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 729, 730,
	246, 800, 1052, 211, 867, 1051, 349, 356, 348, 1054,
	1053, 459, 1038, 968, 955, 953, 861, 1036, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1046, 1064,
	439, 226, 879, 1013, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1061, 360,
	393, 233, 469, 421, 262, 877, 1065, 824, 812, 813,
	816, 960, 961, 814, 817, 818, 826, 798, 799, 801,
	803, 804, 805, 948, 1040, 862, 808, 1016, 819, 820,
	821, 822, 988, 1059, 796, 242, 745, 838, 839, 840,
	746, 841, 842, 747, 748, 843, 844, 845, 846, 749,
	847, 848, 849, 827, 828, 829, 830, 831, 832, 833,
	834, 837, 835, 836, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 806, 199, 212,
	312, 1060, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1014, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1063, 346, 1032, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1010, 1015, 1022, 1027, 1028,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1031, 1056,
	976, 990, 901, 1043, 0, 0, 448, 802, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 1105, 856, 889, 259, 1103, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1049, 909, 978, 1050,
	89, 0, 0, 0, 0, 731, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 0,
	938, 983, 1062, 854, 1122, 720, 859, 809, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 0, 0,
	0, 0, 825, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1033, 926, 301, 191, 1039, 924, 823,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1018, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 811,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	877, 1065, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 948, 1040,
	862, 808, 1016, 819, 820, 821, 822, 988, 1059, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 901, 1043, 0,
	0, 448, 802, 1047, 888, 911, 1057, 917, 919, 984,
	863, 959, 357, 908, 864, 0, 0, 855, 1105, 856,
	889, 259, 1103, 1017, 962, 1045, 945, 977, 987, 258,
	244, 952, 951, 1034, 900, 899, 982, 1030, 1044, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1049, 909, 978, 1050, 89, 0, 0, 0, 0,
	731, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 0, 938, 983, 1062, 854, 1122,
	720, 859, 809, 0, 1035, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1012, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 0, 0, 0, 0, 825, 0, 719,
	0, 869, 715, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 721, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 797, 1033, 926,
	301, 191, 1039, 924, 823, 992, 870, 1021, 1055, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 807,
	198, 313, 1018, 890, 903, 728, 0, 392, 979, 467,
	709, 278, 0, 4531, 391, 315, 460, 993, 1041, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1011, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1023, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1019, 1006, 1025, 886, 872,
	878, 873, 902, 1042, 293, 285, 1026, 1024, 904, 361,
	224, 956, 949, 942, 811, 471, 1058, 257, 1008, 473,
	180, 406, 405, 916, 292, 1009, 181, 170, 385, 182,
	302, 204, 1029, 486, 220, 309, 450, 708, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1048, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1037, 1020, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 729, 730,
	246, 800, 1052, 211, 867, 1051, 349, 356, 348, 1054,
	1053, 459, 1038, 968, 955, 953, 861, 1036, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1046, 1064,
	439, 226, 879, 1013, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1061, 360,
	393, 233, 469, 421, 262, 877, 1065, 824, 812, 813,
	816, 960, 961, 814, 817, 818, 826, 798, 799, 801,
	803, 804, 805, 948, 1040, 862, 808, 1016, 819, 820,
	821, 822, 988, 1059, 796, 242, 745, 838, 839, 840,
	746, 841, 842, 747, 748, 843, 844, 845, 846, 749,
	847, 848, 849, 827, 828, 829, 830, 831, 832, 833,
	834, 837, 835, 836, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 806, 199, 212,
	312, 1060, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1014, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1063, 346, 1032, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1010, 1015, 1022, 1027, 1028,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1031, 1056,
	976, 990, 901, 1043, 0, 0, 448, 802, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 1105, 856, 889, 259, 1103, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1049, 909, 978, 1050,
	89, 0, 0, 0, 0, 731, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 0,
	938, 983, 1062, 854, 1122, 720, 859, 809, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 0, 0,
	0, 0, 825, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1033, 926, 301, 191, 1039, 924, 823,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1018, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 811,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	877, 1065, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 2349, 2350,
	2351, 808, 1016, 819, 820, 821, 822, 988, 1059, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 1826, 2005, 0,
	3706, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 172, 478, 190, 3707, 314, 1981, 498, 3708, 423,
	339, 501, 500, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 89, 0, 695, 0, 0,
	0, 1162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1919, 2003, 1830, 499, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 3710, 1856,
	301, 191, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 177,
	198, 313, 1971, 1812, 1829, 245, 2179, 392, 1924, 467,
	497, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	180, 406, 405, 1844, 292, 1958, 181, 170, 385, 182,
	302, 204, 1983, 486, 220, 309, 450, 496, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1954, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 192, 193,
	1991, 1992, 194, 1886, 2001, 1774, 0, 1969, 188, 189,
	174, 179, 1933, 2029, 1846, 242, 164, 1770, 1771, 1772,
	165, 1876, 1877, 167, 168, 1987, 1986, 1985, 1988, 169,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 3709, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 1826, 2005, 0, 1967, 448, 1860, 2009, 1809,
	1839, 2027, 1845, 1848, 1929, 1775, 1898, 357, 1836, 1776,
	1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970, 1901,
	2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995, 1825,
	1824, 1927, 1984, 2006, 1879, 0, 172, 478, 190, 2016,
	314, 1981, 498, 476, 423, 339, 501, 500, 1875, 1990,
	1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1919, 2003, 1830, 499,
	1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026, 1996,
	1821, 1822, 263, 0, 0, 0, 0, 0, 0, 0,
	1873, 1897, 1949, 1855, 0, 468, 1934, 1944, 1962, 1847,
	376, 283, 0, 0, 0, 0, 0, 0, 3206, 0,
	1816, 0, 1912, 0, 0, 0, 1783, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761, 1758,
	340, 1779, 1964, 1994, 1856, 301, 191, 2000, 1854, 1853,
	1938, 1784, 1974, 2024, 1840, 311, 1782, 195, 1777, 1785,
	1838, 353, 1948, 1956, 177, 198, 313, 1971, 1812, 1829,
	245, 0, 392, 1924, 467, 2277, 278, 0, 1905, 391,
	315, 460, 1939, 2002, 466, 1841, 442, 477, 482, 271,
	1881, 234, 420, 261, 254, 1820, 1961, 1766, 284, 375,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828, 2004, 293,
	285, 1979, 1977, 1831, 361, 224, 1894, 1887, 1874, 1952,
	471, 2028, 257, 1957, 473, 180, 406, 405, 1844, 292,
	1958, 181, 170, 385, 182, 302, 204, 1983, 486, 220,
	309, 450, 2276, 277, 352, 1926, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1954, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 2010, 322,
	266, 270, 286, 297, 1925, 389, 427, 474, 1916, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1950, 216, 237,
	428, 210, 1998, 1973, 1907, 1862, 1868, 1768, 0, 209,
	1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920,
	1804, 281, 1937, 463, 464, 246, 1780, 2018, 211, 1781,
	2017, 349, 356, 348, 2021, 2019, 459, 1999, 1908, 1893,
	1891, 1773, 1997, 1906, 1892, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1895, 425, 320, 0,
	206, 0, 424, 2008, 2034, 439, 226, 1799, 1965, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1941, 2031, 360, 393, 233, 469, 421, 262,
	1795, 0, 1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014,
	2015, 1953, 1788, 192, 193, 1991, 1992, 194, 1886, 2001,
	1774, 0, 1969, 188, 189, 174, 179, 1933, 2029, 1846,
	242, 164, 1770, 1771, 1772, 165, 1876, 1877, 167, 168,
	1987, 1986, 1985, 1988, 169, 2022, 2020, 2023, 1789, 1810,
	1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819,
	1878, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1904, 199, 212, 312, 2030, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1966, 1911,
	0, 1850, 1852, 1851, 1801, 1803, 1802, 1800, 2033, 346,
	1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843,
	1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943,
	1960, 1968, 1975, 1980, 1982, 472, 252, 1884, 1909, 1947,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1857, 196, 0, 0, 202, 0, 203,
	205, 1842, 201, 1989, 2025, 1921, 1935, 1826, 2005, 0,
	1967, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 172, 478, 190, 2016, 314, 1981, 498, 476, 423,
	339, 501, 500, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 1162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1919, 2003, 1830, 499, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 1994, 1856,
	301, 191, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 177,
	198, 313, 1971, 1812, 1829, 245, 2179, 392, 1924, 467,
	497, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	180, 406, 405, 1844, 292, 1958, 181, 170, 385, 182,
	302, 204, 1983, 486, 220, 309, 450, 496, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1954, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 192, 193,
	1991, 1992, 194, 1886, 2001, 1774, 0, 1969, 188, 189,
	174, 179, 1933, 2029, 1846, 242, 164, 1770, 1771, 1772,
	165, 1876, 1877, 167, 168, 1987, 1986, 1985, 1988, 169,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 2030, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 1826, 2005, 0, 1967, 448, 1860, 2009, 1809,
	1839, 2027, 1845, 1848, 1929, 1775, 1898, 357, 1836, 1776,
	1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970, 1901,
	2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995, 1825,
	1824, 1927, 1984, 2006, 1879, 0, 172, 478, 190, 2016,
	314, 1981, 498, 476, 423, 339, 501, 500, 1875, 1990,
	1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1919, 2003, 1830, 499,
	1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026, 1996,
	1821, 1822, 263, 0, 0, 0, 0, 0, 0, 0,
	1873, 1897, 1949, 1855, 0, 468, 1934, 1944, 1962, 1847,
	376, 283, 0, 0, 0, 0, 0, 0, 2270, 0,
	1816, 0, 1912, 0, 0, 0, 1783, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761, 1758,
	340, 1779, 1964, 1994, 1856, 301, 191, 2000, 1854, 1853,
	1938, 1784, 1974, 2024, 1840, 311, 1782, 195, 1777, 1785,
	1838, 353, 1948, 1956, 177, 198, 313, 1971, 1812, 1829,
	245, 0, 392, 1924, 467, 2277, 278, 0, 1905, 391,
	315, 460, 1939, 2002, 466, 1841, 442, 477, 482, 271,
	1881, 234, 420, 261, 254, 1820, 1961, 1766, 284, 375,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828, 2004, 293,
	285, 1979, 1977, 1831, 361, 224, 1894, 1887, 1874, 1952,
	471, 2028, 257, 1957, 473, 180, 406, 405, 1844, 292,
	1958, 181, 170, 385, 182, 302, 204, 1983, 486, 220,
	309, 450, 2276, 277, 352, 1926, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1954, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 2010, 322,
	266, 270, 286, 297, 1925, 389, 427, 474, 1916, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1950, 216, 237,
	428, 210, 1998, 1973, 1907, 1862, 1868, 1768, 0, 209,
	1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920,
	1804, 281, 1937, 463, 464, 246, 1780, 2018, 211, 1781,
	2017, 349, 356, 348, 2021, 2019, 459, 1999, 1908, 1893,
	1891, 1773, 1997, 1906, 1892, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1895, 425, 320, 0,
	206, 0, 424, 2008, 2034, 439, 226, 1799, 1965, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1941, 2031, 360, 393, 233, 469, 421, 262,
	1795, 0, 1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014,
	2015, 1953, 1788, 192, 193, 1991, 1992, 194, 1886, 2001,
	1774, 0, 1969, 188, 189, 174, 179, 1933, 2029, 1846,
	242, 164, 1770, 1771, 1772, 165, 1876, 1877, 167, 168,
	1987, 1986, 1985, 1988, 169, 2022, 2020, 2023, 1789, 1810,
	1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819,
	1878, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1904, 199, 212, 312, 2030, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1966, 1911,
	0, 1850, 1852, 1851, 1801, 1803, 1802, 1800, 2033, 346,
	1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843,
	1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943,
	1960, 1968, 1975, 1980, 1982, 472, 252, 1884, 1909, 1947,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1857, 196, 0, 0, 202, 0, 203,
	205, 1842, 201, 1989, 2025, 1921, 1935, 1826, 2005, 0,
	1967, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 172, 478, 190, 2016, 314, 1981, 498, 476, 423,
	339, 501, 500, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1919, 2003, 1830, 499, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 1994, 1856,
	301, 191, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 177,
	198, 313, 1971, 1812, 1829, 245, 0, 392, 1924, 467,
	2277, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	180, 406, 405, 1844, 292, 1958, 181, 170, 385, 182,
	302, 204, 1983, 486, 220, 309, 450, 2276, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1954, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 192, 193,
	1991, 1992, 194, 1886, 2001, 1774, 0, 1969, 188, 189,
	174, 179, 1933, 2029, 1846, 242, 164, 1770, 1771, 1772,
	165, 1876, 1877, 167, 168, 1987, 1986, 1985, 1988, 169,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 2030, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 901, 1043, 0, 0, 448, 1110, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 1105, 856, 889, 259, 1103, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 1143,
	314, 0, 498, 476, 423, 339, 501, 500, 943, 0,
	1117, 1130, 928, 986, 875, 973, 1049, 909, 978, 1050,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1125, 1139, 1106, 499,
	938, 983, 1062, 854, 1122, 0, 859, 1094, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 869, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1111, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 1132, 1033, 926, 301, 191, 1039, 924, 1109,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 177, 198, 313, 1018, 890, 903,
	245, 3306, 392, 979, 467, 2362, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 1128,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 2361, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 463, 464, 246, 1095, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	1100, 0, 1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141,
	1142, 1129, 1096, 192, 193, 1137, 1138, 194, 948, 1040,
	862, 0, 1016, 188, 189, 174, 179, 988, 1059, 1108,
	242, 164, 1091, 1092, 1093, 165, 1112, 1113, 167, 168,
	1135, 1134, 1133, 1136, 169, 1145, 1144, 1146, 1097, 1104,
	1107, 1114, 1115, 1116, 1123, 1124, 1131, 1126, 1127, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1120, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 1826, 2005, 0,
	1967, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 172, 478, 190, 2016, 314, 1981, 498, 476, 423,
	339, 501, 500, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1919, 2003, 1830, 499, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 2859, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 1994, 1856,
	301, 191, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 177,
	198, 313, 1971, 1812, 1829, 245, 0, 392, 1924, 467,
	497, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	180, 406, 405, 1844, 292, 1958, 181, 170, 385, 182,
	302, 204, 1983, 486, 220, 309, 450, 496, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1954, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0,
	1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 188, 189,
	174, 179, 1933, 2029, 1846, 242, 0, 1770, 1771, 1772,
	0, 1876, 1877, 0, 0, 1987, 1986, 1985, 1988, 0,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 2030, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 901, 1043, 0, 0, 448, 1110, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 1105, 856, 889, 259, 1103, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 1143,
	314, 0, 498, 476, 423, 339, 501, 500, 943, 0,
	1117, 1130, 928, 986, 875, 973, 1049, 909, 978, 1050,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1125, 1139, 1106, 499,
	938, 983, 1062, 854, 1122, 0, 859, 1094, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 869, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1111, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 1132, 1033, 926, 301, 191, 1039, 924, 1109,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 177, 198, 313, 1018, 890, 903,
	245, 0, 392, 979, 467, 2362, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 1128,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 2361, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 463, 464, 246, 1095, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	1100, 0, 1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141,
	1142, 1129, 1096, 192, 193, 1137, 1138, 194, 948, 1040,
	862, 0, 1016, 188, 189, 174, 179, 988, 1059, 1108,
	242, 164, 1091, 1092, 1093, 165, 1112, 1113, 167, 168,
	1135, 1134, 1133, 1136, 169, 1145, 1144, 1146, 1097, 1104,
	1107, 1114, 1115, 1116, 1123, 1124, 1131, 1126, 1127, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1120, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 1826, 2005, 0,
	1967, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 172, 478, 190, 2016, 314, 1981, 498, 476, 423,
	339, 501, 500, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1919, 2003, 1830, 499, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 1994, 1856,
	301, 191, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 177,
	198, 313, 1971, 1812, 1829, 245, 0, 392, 1924, 467,
	497, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	180, 406, 405, 1844, 292, 1958, 181, 170, 385, 182,
	302, 204, 1983, 486, 220, 309, 450, 496, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1954, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0,
	1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 188, 189,
	174, 179, 1933, 2029, 1846, 242, 0, 1770, 1771, 1772,
	0, 1876, 1877, 0, 0, 1987, 1986, 1985, 1988, 0,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 2030, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 901, 1043, 0, 0, 448, 1110, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 1105, 856, 889, 259, 1103, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 1143,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	1117, 1130, 928, 986, 875, 973, 1049, 909, 978, 1050,
	0, 0, 0, 0, 0, 0, 558, 0, 1451, 0,
	0, 1452, 0, 0, 171, 0, 1125, 1139, 1106, 0,
	938, 983, 1062, 854, 1122, 0, 859, 1094, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 869, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1111, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 1132, 1033, 926, 301, 191, 1039, 924, 1109,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 177, 198, 313, 1018, 890, 903,
	245, 0, 392, 979, 467, 1089, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 1128,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 1088, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 463, 464, 246, 1095, 1052, 211, 867,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	1100, 0, 1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141,
	1142, 1129, 1096, 192, 193, 1137, 1138, 194, 948, 1040,
	862, 0, 1016, 188, 189, 174, 179, 988, 1059, 1108,
	242, 164, 1091, 1092, 1093, 165, 1112, 1113, 167, 168,
	1135, 1134, 1133, 1136, 169, 1145, 1144, 1146, 1097, 1104,
	1107, 1114, 1115, 1116, 1123, 1124, 1131, 1126, 1127, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1120, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 901, 1043, 0,
	0, 448, 1110, 1047, 888, 911, 1057, 917, 919, 984,
	863, 959, 357, 908, 864, 0, 0, 855, 1105, 856,
	889, 259, 1103, 1017, 962, 1045, 945, 977, 987, 258,
	244, 952, 951, 1034, 900, 899, 982, 1030, 1044, 0,
	0, 172, 478, 190, 1143, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 1117, 1130, 928, 986, 875,
	973, 1049, 909, 978, 1050, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1125, 1139, 1106, 0, 938, 983, 1062, 854, 1122,
	0, 859, 1094, 0, 1035, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1012, 918, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1121, 0, 0,
	0, 869, 1090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1111, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 1132, 1033, 926,
	301, 191, 1039, 924, 1109, 992, 870, 1021, 1055, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 177,
	198, 313, 1018, 890, 903, 245, 0, 392, 979, 467,
	1089, 278, 0, 965, 391, 315, 460, 993, 1041, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1011, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1023, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1019, 1006, 1025, 886, 872,
	878, 873, 902, 1042, 293, 285, 1026, 1024, 904, 361,
	224, 956, 949, 942, 1128, 471, 1058, 257, 1008, 473,
	180, 406, 405, 916, 292, 1009, 181, 170, 385, 182,
	302, 204, 1029, 486, 220, 309, 450, 1088, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1048, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1037, 1020, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 463, 464,
	246, 1095, 1052, 211, 867, 1051, 349, 356, 348, 1054,
	1053, 459, 1038, 968, 955, 953, 861, 1036, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1046, 1064,
	439, 226, 879, 1013, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1061, 360,
	393, 233, 469, 421, 262, 1100, 0, 1102, 1098, 1101,
	1099, 1118, 1119, 1140, 1141, 1142, 1129, 1096, 192, 193,
	1137, 1138, 194, 948, 1040, 862, 0, 1016, 188, 189,
	174, 179, 988, 1059, 1108, 242, 164, 1091, 1092, 1093,
	165, 1112, 1113, 167, 168, 1135, 1134, 1133, 1136, 169,
	1145, 1144, 1146, 1097, 1104, 1107, 1114, 1115, 1116, 1123,
	1124, 1131, 1126, 1127, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1120, 199, 212,
	312, 1060, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1014, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1063, 346, 1032, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1010, 1015, 1022, 1027, 1028,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1031, 1056,
	976, 990, 901, 1043, 0, 0, 448, 1110, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 1105, 856, 889, 259, 1103, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 1143,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	1117, 1130, 928, 986, 875, 973, 1049, 909, 978, 1050,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1125, 1139, 1106, 0,
	938, 983, 1062, 854, 1122, 0, 859, 1094, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 869, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1111, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 1132, 1033, 926, 301, 191, 1039, 924, 1109,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 177, 198, 313, 1018, 890, 903,
	245, 0, 392, 979, 467, 1089, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 1128,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 1088, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 463, 464, 246, 1095, 1052, 211, 1083,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 1079, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 1084, 1082, 1073, 1074,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	1100, 0, 1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141,
	1142, 1129, 1096, 192, 193, 1137, 1138, 194, 948, 1040,
	862, 0, 1016, 188, 189, 174, 179, 988, 1059, 1108,
	242, 164, 1091, 1092, 1093, 165, 1112, 1113, 167, 168,
	1135, 1134, 1133, 1136, 169, 1145, 1144, 1146, 1097, 1104,
	1107, 1114, 1115, 1116, 1123, 1124, 1131, 1126, 1127, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1120, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 1080, 1081, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 901, 1043, 0,
	0, 448, 1110, 1047, 888, 911, 1057, 917, 919, 984,
	863, 959, 357, 908, 864, 0, 0, 855, 1105, 856,
	889, 259, 1103, 1017, 962, 1045, 945, 977, 987, 258,
	244, 952, 951, 1034, 900, 899, 982, 1030, 1044, 0,
	0, 172, 478, 190, 1143, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 1117, 1130, 928, 986, 875,
	973, 1049, 909, 978, 1050, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1125, 1139, 1106, 0, 938, 983, 1062, 854, 1122,
	0, 859, 1094, 0, 1035, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1012, 918, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1121, 0, 0,
	0, 869, 1090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1111, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 1132, 1033, 926,
	301, 191, 1039, 924, 1109, 992, 870, 1021, 1055, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 177,
	198, 313, 1018, 890, 903, 245, 0, 392, 979, 467,
	1089, 278, 0, 965, 391, 315, 460, 993, 1041, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1011, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1023, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1019, 1006, 1025, 886, 872,
	878, 873, 902, 1042, 293, 285, 1026, 1024, 904, 361,
	224, 956, 949, 942, 1128, 471, 1058, 257, 1008, 473,
	180, 406, 405, 916, 292, 1009, 181, 170, 385, 182,
	302, 204, 1029, 486, 220, 309, 450, 1088, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1048, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 1617, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1037, 1020, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 463, 464,
	246, 1095, 1052, 211, 867, 1051, 349, 356, 348, 1054,
	1053, 459, 1038, 968, 955, 953, 861, 1036, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1046, 1064,
	439, 226, 879, 1013, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1061, 360,
	393, 233, 469, 421, 262, 1100, 0, 1102, 1098, 1101,
	1099, 1118, 1119, 1140, 1141, 1142, 1129, 1096, 192, 193,
	1137, 1138, 194, 948, 1040, 862, 0, 1016, 188, 189,
	174, 179, 988, 1059, 1108, 242, 164, 1091, 1092, 1093,
	165, 1112, 1113, 167, 168, 1135, 1134, 1133, 1136, 169,
	1145, 1144, 1146, 1097, 1104, 1107, 1114, 1115, 1116, 1123,
	1124, 1131, 1126, 1127, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1120, 199, 212,
	312, 1060, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1014, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1063, 346, 1032, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1010, 1015, 1022, 1027, 1028,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1031, 1056,
	976, 990, 901, 1043, 0, 0, 448, 1110, 1047, 888,
	911, 1057, 917, 919, 984, 863, 959, 357, 908, 864,
	0, 0, 855, 1105, 856, 889, 259, 1103, 1017, 962,
	1045, 945, 977, 987, 258, 244, 952, 951, 1034, 900,
	899, 982, 1030, 1044, 0, 0, 172, 478, 190, 1143,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	1117, 1130, 928, 986, 875, 973, 1049, 909, 978, 1050,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1125, 1139, 1106, 0,
	938, 983, 1062, 854, 1122, 0, 859, 1094, 0, 1035,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1012, 918,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 869, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1111, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 1132, 1033, 926, 301, 191, 1039, 924, 1109,
	992, 870, 1021, 1055, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 177, 198, 313, 1018, 890, 903,
	245, 0, 392, 979, 467, 1089, 278, 0, 965, 391,
	315, 460, 993, 1041, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1011, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1023, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1019, 1006, 1025, 886, 872, 878, 873, 902, 1042, 293,
	285, 1026, 1024, 904, 361, 224, 956, 949, 942, 1128,
	471, 1058, 257, 1008, 473, 180, 406, 405, 916, 292,
	1009, 181, 170, 385, 182, 302, 204, 1029, 486, 220,
	309, 450, 1088, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1048, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 1070, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1037, 1020, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 463, 464, 246, 1095, 1052, 211, 1083,
	1051, 349, 356, 348, 1054, 1053, 459, 1038, 968, 955,
	953, 861, 1036, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 1079, 957, 425, 320, 0,
	206, 0, 424, 1046, 1064, 439, 226, 879, 1013, 454,
	178, 381, 227, 279, 267, 372, 1084, 1082, 1073, 1074,
	308, 316, 995, 1061, 360, 393, 233, 469, 421, 262,
	1100, 0, 1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141,
	1142, 1129, 1096, 192, 193, 1137, 1138, 194, 948, 1040,
	862, 0, 1016, 188, 189, 174, 179, 988, 1059, 1108,
	242, 164, 1091, 1092, 1093, 165, 1112, 1113, 167, 168,
	1135, 1134, 1133, 1136, 169, 1145, 1144, 1146, 1097, 1104,
	1107, 1114, 1115, 1116, 1123, 1124, 1131, 1126, 1127, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1120, 199, 212, 312, 1060, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1014, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1063, 346,
	1032, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1010, 1015, 1022, 1027, 1028, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 1080, 1081, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1031, 1056, 976, 990, 1826, 2005, 0,
	1967, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 0, 478, 0, 2016, 314, 1981, 0, 476, 423,
	339, 0, 0, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	3164, 3169, 0, 3172, 3174, 3173, 0, 0, 0, 3166,
	0, 1919, 2003, 1830, 0, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 1994, 1856,
	301, 0, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 0,
	198, 313, 1971, 1812, 1829, 245, 0, 392, 1924, 467,
	0, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	3167, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	0, 406, 405, 1844, 292, 1958, 0, 0, 385, 3168,
	302, 204, 1983, 486, 220, 309, 450, 0, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1954, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0,
	1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 0, 0,
	0, 0, 1933, 2029, 1846, 242, 0, 1770, 1771, 1772,
	0, 1876, 1877, 0, 0, 1987, 1986, 1985, 1988, 0,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 2030, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 1826, 2005, 0, 1967, 448, 1860, 2009, 1809,
	1839, 2027, 1845, 1848, 1929, 1775, 1898, 357, 1836, 1776,
	1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970, 1901,
	2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995, 1825,
	1824, 1927, 1984, 2006, 1879, 0, 0, 478, 0, 2016,
	314, 1981, 0, 476, 423, 339, 0, 0, 1875, 1990,
	1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012,
	0, 0, 0, 0, 0, 3970, 3169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1919, 2003, 1830, 0,
	1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026, 1996,
	1821, 1822, 263, 0, 0, 0, 0, 0, 0, 0,
	1873, 1897, 1949, 1855, 0, 468, 1934, 1944, 1962, 1847,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 1912, 0, 0, 0, 1783, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761, 1758,
	340, 1779, 1964, 1994, 1856, 301, 0, 2000, 1854, 1853,
	1938, 1784, 1974, 2024, 1840, 311, 1782, 195, 1777, 1785,
	1838, 353, 1948, 1956, 0, 198, 313, 1971, 1812, 1829,
	245, 0, 392, 1924, 467, 0, 278, 0, 1905, 391,
	315, 460, 1939, 2002, 466, 1841, 442, 477, 482, 271,
	1881, 234, 420, 261, 254, 1820, 1961, 1766, 284, 375,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828, 2004, 293,
	285, 1979, 1977, 1831, 361, 224, 1894, 1887, 1874, 1952,
	471, 2028, 257, 1957, 473, 0, 406, 405, 1844, 292,
	1958, 0, 0, 385, 0, 302, 204, 1983, 486, 220,
	309, 450, 0, 277, 352, 1926, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1954, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2010, 322,
	266, 270, 286, 297, 1925, 389, 427, 474, 1916, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1950, 216, 237,
	428, 210, 1998, 1973, 1907, 1862, 1868, 1768, 0, 209,
	1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920,
	1804, 281, 1937, 463, 464, 246, 1780, 2018, 211, 1781,
	2017, 349, 356, 348, 2021, 2019, 459, 1999, 1908, 1893,
	1891, 1773, 1997, 1906, 1892, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1895, 425, 320, 0,
	206, 0, 424, 2008, 2034, 439, 226, 1799, 1965, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1941, 2031, 360, 393, 233, 469, 421, 262,
	1795, 0, 1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014,
	2015, 1953, 1788, 0, 0, 1991, 1992, 0, 1886, 2001,
	1774, 0, 1969, 0, 0, 0, 0, 1933, 2029, 1846,
	242, 0, 1770, 1771, 1772, 0, 1876, 1877, 0, 0,
	1987, 1986, 1985, 1988, 0, 2022, 2020, 2023, 1789, 1810,
	1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819,
	1878, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1904, 199, 212, 312, 2030, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1966, 1911,
	0, 1850, 1852, 1851, 1801, 1803, 1802, 1800, 2033, 346,
	1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843,
	1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943,
	1960, 1968, 1975, 1980, 1982, 472, 252, 1884, 1909, 1947,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1857, 196, 0, 0, 202, 0, 203,
	205, 1842, 201, 1989, 2025, 1921, 1935, 1826, 2005, 0,
	1967, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 0, 478, 0, 2016, 314, 1981, 0, 476, 423,
	339, 0, 0, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 1162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 2003, 1830, 0, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 3922, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 1994, 1856,
	301, 0, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 0,
	198, 313, 1971, 1812, 1829, 245, 0, 392, 1924, 467,
	0, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	0, 406, 405, 1844, 292, 1958, 0, 0, 385, 0,
	302, 204, 1983, 486, 220, 309, 450, 0, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1954, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0,
	1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 0, 0,
	0, 0, 1933, 2029, 1846, 242, 0, 1770, 1771, 1772,
	0, 1876, 1877, 0, 0, 1987, 1986, 1985, 1988, 0,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 2030, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 1826, 2005, 0, 1967, 448, 1860, 2009, 1809,
	1839, 2027, 1845, 1848, 1929, 1775, 1898, 357, 1836, 1776,
	1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970, 1901,
	2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995, 1825,
	1824, 1927, 1984, 2006, 1879, 0, 0, 478, 0, 2016,
	314, 1981, 0, 476, 423, 339, 0, 0, 1875, 1990,
	1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012,
	0, 0, 0, 0, 0, 0, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1919, 2003, 1830, 0,
	1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026, 1996,
	1821, 1822, 263, 0, 0, 0, 0, 0, 0, 0,
	1873, 1897, 1949, 1855, 0, 468, 1934, 1944, 1962, 1847,
	376, 283, 0, 0, 0, 0, 0, 0, 3219, 0,
	1816, 0, 1912, 0, 0, 0, 1783, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761, 1758,
	340, 1779, 1964, 1994, 1856, 301, 0, 2000, 1854, 1853,
	1938, 1784, 1974, 2024, 1840, 311, 1782, 195, 1777, 1785,
	1838, 353, 1948, 1956, 0, 198, 313, 1971, 1812, 1829,
	245, 0, 392, 1924, 467, 0, 278, 0, 1905, 391,
	315, 460, 1939, 2002, 466, 1841, 442, 477, 482, 271,
	1881, 234, 420, 261, 254, 1820, 1961, 1766, 284, 375,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828, 2004, 293,
	285, 1979, 1977, 1831, 361, 224, 1894, 1887, 1874, 1952,
	471, 2028, 257, 1957, 473, 0, 406, 405, 1844, 292,
	1958, 0, 0, 385, 0, 302, 204, 1983, 486, 220,
	309, 450, 0, 277, 352, 1926, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1954, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2010, 322,
	266, 270, 286, 297, 1925, 389, 427, 474, 1916, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1950, 216, 237,
	428, 210, 1998, 1973, 1907, 1862, 1868, 1768, 0, 209,
	1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920,
	1804, 281, 1937, 463, 464, 246, 1780, 2018, 211, 1781,
	2017, 349, 356, 348, 2021, 2019, 459, 1999, 1908, 1893,
	1891, 1773, 1997, 1906, 1892, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1895, 425, 320, 0,
	206, 0, 424, 2008, 2034, 439, 226, 1799, 1965, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1941, 2031, 360, 393, 233, 469, 421, 262,
	1795, 0, 1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014,
	2015, 1953, 1788, 0, 0, 1991, 1992, 0, 1886, 2001,
	1774, 0, 1969, 0, 0, 0, 0, 1933, 2029, 1846,
	242, 0, 1770, 1771, 1772, 0, 1876, 1877, 0, 0,
	1987, 1986, 1985, 1988, 0, 2022, 2020, 2023, 1789, 1810,
	1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819,
	1878, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1904, 199, 212, 312, 2030, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1966, 1911,
	0, 1850, 1852, 1851, 1801, 1803, 1802, 1800, 2033, 346,
	1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843,
	1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943,
	1960, 1968, 1975, 1980, 1982, 472, 252, 1884, 1909, 1947,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1857, 196, 0, 0, 202, 0, 203,
	205, 1842, 201, 1989, 2025, 1921, 1935, 1826, 2005, 0,
	1967, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 0, 478, 0, 2016, 314, 1981, 0, 476, 423,
	339, 0, 0, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 1162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 2003, 1830, 0, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 1994, 1856,
	301, 0, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 0,
	198, 313, 1971, 1812, 1829, 245, 0, 392, 1924, 467,
	0, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	0, 406, 405, 1844, 292, 1958, 0, 0, 385, 0,
	302, 204, 1983, 486, 220, 309, 450, 0, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1954, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 2323, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0,
	1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 0, 0,
	0, 0, 1933, 2029, 1846, 242, 0, 1770, 1771, 1772,
	0, 1876, 1877, 0, 0, 1987, 1986, 1985, 1988, 0,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 2030, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 1826, 2005, 0, 1967, 448, 1860, 2009, 1809,
	1839, 2027, 1845, 1848, 1929, 1775, 1898, 357, 1836, 1776,
	1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970, 1901,
	2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995, 1825,
	1824, 1927, 1984, 2006, 1879, 0, 0, 478, 0, 2016,
	314, 1981, 0, 476, 423, 339, 0, 0, 1875, 1990,
	1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012,
	0, 0, 0, 0, 0, 0, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1919, 2003, 1830, 0,
	1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026, 1996,
	1821, 1822, 263, 0, 0, 0, 0, 0, 0, 0,
	1873, 1897, 1949, 1855, 0, 468, 1934, 1944, 1962, 1847,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 1912, 0, 0, 0, 1783, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761, 1758,
	340, 1779, 1964, 1994, 1856, 301, 0, 2000, 1854, 1853,
	1938, 1784, 1974, 2024, 1840, 311, 1782, 195, 1777, 1785,
	1838, 353, 1948, 1956, 0, 198, 313, 1971, 1812, 1829,
	245, 0, 392, 1924, 467, 0, 278, 0, 1905, 391,
	315, 460, 1939, 2002, 466, 1841, 442, 477, 482, 271,
	1881, 234, 420, 261, 254, 1820, 1961, 1766, 284, 375,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828, 2004, 293,
	285, 1979, 1977, 1831, 361, 224, 1894, 1887, 1874, 1952,
	471, 2028, 257, 1957, 473, 0, 406, 405, 1844, 292,
	1958, 0, 0, 385, 0, 302, 204, 1983, 486, 220,
	309, 450, 0, 277, 352, 1926, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1954, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2010, 322,
	266, 270, 286, 297, 1925, 389, 427, 474, 1916, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1950, 216, 237,
	428, 210, 1998, 1973, 1907, 1862, 1868, 1768, 0, 209,
	1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920,
	1804, 281, 1937, 463, 464, 246, 1780, 2018, 211, 1781,
	2017, 349, 356, 348, 2021, 2019, 459, 1999, 1908, 1893,
	1891, 1773, 1997, 1906, 1892, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1895, 425, 320, 0,
	206, 0, 424, 2008, 2034, 439, 226, 1799, 1965, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1941, 2031, 360, 393, 233, 469, 421, 262,
	1795, 0, 1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014,
	2015, 1953, 1788, 0, 0, 1991, 1992, 0, 1886, 2001,
	1774, 0, 1969, 0, 0, 0, 0, 1933, 2029, 1846,
	242, 0, 1770, 1771, 1772, 0, 1876, 1877, 0, 0,
	1987, 1986, 1985, 1988, 0, 2022, 2020, 2023, 1789, 1810,
	1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819,
	1878, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1904, 199, 212, 312, 2030, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1966, 1911,
	0, 1850, 1852, 1851, 1801, 1803, 1802, 1800, 2033, 346,
	1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843,
	1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943,
	1960, 1968, 1975, 1980, 1982, 472, 252, 1884, 1909, 1947,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 4093, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1857, 196, 0, 0, 202, 0, 203,
	205, 1842, 201, 1989, 2025, 1921, 1935, 1826, 2005, 0,
	1967, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 0, 478, 0, 2016, 314, 1981, 0, 476, 423,
	339, 0, 0, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 1162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 2003, 1830, 0, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 1994, 1856,
	301, 0, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 0,
	198, 313, 1971, 1812, 1829, 245, 0, 392, 1924, 467,
	0, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	0, 406, 405, 1844, 292, 1958, 0, 0, 385, 0,
	302, 204, 1983, 486, 220, 309, 450, 0, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1954, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0,
	1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 0, 0,
	0, 0, 1933, 2029, 1846, 242, 0, 1770, 1771, 1772,
	0, 1876, 1877, 0, 0, 1987, 1986, 1985, 1988, 0,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 2030, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 1826, 2005, 0, 1967, 448, 1860, 2009, 1809,
	1839, 2027, 1845, 1848, 1929, 1775, 1898, 357, 1836, 1776,
	1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970, 1901,
	2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995, 1825,
	1824, 1927, 1984, 2006, 1879, 0, 0, 478, 0, 2016,
	314, 1981, 0, 476, 423, 339, 0, 0, 1875, 1990,
	1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012,
	0, 0, 0, 0, 0, 0, 4373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1919, 2003, 1830, 0,
	1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026, 1996,
	1821, 1822, 263, 0, 0, 0, 0, 0, 0, 0,
	1873, 1897, 1949, 1855, 0, 468, 1934, 1944, 1962, 1847,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 1912, 0, 0, 0, 1783, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761, 1758,
	340, 1779, 1964, 1994, 1856, 301, 0, 2000, 1854, 1853,
	1938, 1784, 1974, 2024, 1840, 311, 1782, 195, 1777, 1785,
	1838, 353, 1948, 1956, 0, 198, 313, 1971, 1812, 1829,
	245, 0, 392, 1924, 467, 0, 278, 0, 1905, 391,
	315, 460, 1939, 2002, 466, 1841, 442, 477, 482, 271,
	1881, 234, 420, 261, 254, 1820, 1961, 1766, 284, 375,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 4376, 4377, 4378, 293,
	285, 1979, 1977, 1831, 361, 224, 1894, 1887, 1874, 1952,
	471, 2028, 257, 1957, 473, 0, 406, 405, 1844, 292,
	1958, 0, 0, 385, 0, 302, 204, 1983, 486, 220,
	309, 450, 0, 277, 352, 1926, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1954, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2010, 322,
	266, 270, 286, 297, 1925, 389, 427, 474, 1916, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1950, 216, 237,
	428, 210, 1998, 1973, 1907, 1862, 1868, 1768, 0, 209,
	1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920,
	1804, 281, 1937, 463, 464, 246, 1780, 2018, 211, 1781,
	2017, 349, 356, 348, 2021, 2019, 459, 1999, 1908, 1893,
	1891, 1773, 1997, 1906, 1892, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1895, 425, 320, 0,
	206, 0, 424, 2008, 2034, 439, 226, 1799, 1965, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1941, 2031, 360, 393, 233, 469, 421, 262,
	1795, 0, 1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014,
	2015, 1953, 1788, 0, 0, 1991, 1992, 0, 1886, 2001,
	1774, 0, 1969, 0, 0, 0, 0, 1933, 2029, 1846,
	242, 0, 1770, 1771, 1772, 0, 1876, 1877, 0, 0,
	1987, 1986, 1985, 1988, 0, 2022, 2020, 2023, 1789, 1810,
	1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819,
	1878, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1904, 199, 212, 312, 2030, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1966, 1911,
	0, 1850, 1852, 1851, 1801, 1803, 1802, 1800, 2033, 346,
	1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843,
	1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943,
	1960, 1968, 1975, 1980, 1982, 472, 252, 1884, 1909, 1947,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1857, 196, 0, 0, 202, 0, 203,
	205, 1842, 201, 1989, 2025, 1921, 1935, 1826, 2005, 0,
	1967, 448, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 357, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 0, 478, 0, 2016, 314, 1981, 0, 476, 423,
	339, 0, 0, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 3169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 2003, 1830, 0, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	468, 1934, 1944, 1962, 1847, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 340, 1779, 1964, 1994, 1856,
	301, 0, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	311, 1782, 195, 1777, 1785, 1838, 353, 1948, 1956, 0,
	198, 313, 1971, 1812, 1829, 245, 0, 392, 1924, 467,
	0, 278, 0, 1905, 391, 315, 460, 1939, 2002, 466,
	1841, 442, 477, 482, 271, 1881, 234, 420, 261, 254,
	1820, 1961, 1766, 284, 375, 249, 306, 1859, 1930, 1813,
	241, 1942, 1913, 1976, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1972, 1955, 1978, 1806, 1786,
	1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 361,
	224, 1894, 1887, 1874, 1952, 471, 2028, 257, 1957, 473,
	0, 406, 405, 1844, 292, 1958, 0, 0, 385, 0,
	302, 204, 1983, 486, 220, 309, 450, 0, 277, 352,
	1926, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1954, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2010, 322, 266, 270, 286, 297, 1925,
	389, 427, 474, 1916, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1950, 216, 237, 428, 210, 1998, 1973, 1907,
	1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867,
	1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 463, 464,
	246, 1780, 2018, 211, 1781, 2017, 349, 356, 348, 2021,
	2019, 459, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1895, 425, 320, 0, 206, 0, 424, 2008, 2034,
	439, 226, 1799, 1965, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1941, 2031, 360,
	393, 233, 469, 421, 262, 1795, 0, 1798, 1793, 1796,
	1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0,
	1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 0, 0,
	0, 0, 1933, 2029, 1846, 242, 0, 1770, 1771, 1772,
	0, 1876, 1877, 0, 0, 1987, 1986, 1985, 1988, 0,
	2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917,
	1918, 1963, 1936, 1945, 1819, 1878, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1904, 199, 212,
	312, 2030, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1966, 1911, 0, 1850, 1852, 1851, 1801,
	1803, 1802, 1800, 2033, 346, 1993, 1757, 1765, 1792, 1808,
	1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888,
	1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982,
	472, 252, 1884, 1909, 1947, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1857, 196,
	0, 0, 202, 0, 203, 205, 1842, 201, 1989, 2025,
	1921, 1935, 589, 448, 583, 594, 576, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 1345, 0, 0,
	0, 0, 0, 259, 0, 0, 584, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 637, 638, 0, 731, 0, 732, 734, 735,
	736, 737, 0, 0, 0, 733, 2315, 3387, 3388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 3382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	0, 575, 574, 577, 0, 0, 0, 340, 0, 0,
	0, 582, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 586,
	0, 0, 198, 313, 590, 0, 0, 245, 0, 392,
	2312, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	593, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 578, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 581, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 1348, 408, 455, 222, 426, 579,
	580, 587, 588, 591, 592, 595, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 2313, 2314, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	3399, 1065, 0, 3389, 3390, 3392, 3400, 3401, 3391, 3393,
	3394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3395, 3396, 3397, 3398, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 585, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	0, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	589, 448, 583, 594, 576, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 568, 0, 0, 0, 0,
	0, 259, 0, 0, 584, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	574, 577, 0, 0, 0, 340, 0, 0, 0, 582,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 586, 0, 0,
	198, 313, 590, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 593, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	578, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 581, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 571, 408, 455, 222, 426, 579, 580, 587,
	588, 591, 592, 595, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 585, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 2465, 2469, 0, 172, 478,
	190, 0, 314, 0, 498, 476, 423, 339, 501, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 2468, 301, 191, 0,
	0, 0, 2461, 0, 2462, 2464, 2463, 311, 1164, 195,
	0, 2459, 2467, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 1158, 392, 0, 467, 497, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 496, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 1475, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1477, 1476, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	1471, 1472, 1470, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 1473,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 0, 314, 0, 498, 476,
	423, 339, 501, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 1164, 195, 0, 1160, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 1158, 392, 0,
	467, 497, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 496, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1703,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 3548,
	195, 0, 0, 3547, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 478, 190, 0,
	314, 0, 498, 476, 423, 339, 501, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3515, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 1164, 195, 0, 0,
	2467, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 497, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 496, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2918, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 1164, 195, 0, 0, 2467, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 498, 476, 423, 339,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1477,
	1476, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 2269, 392, 0, 467, 497,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 496, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 0, 196, 42,
	448, 202, 0, 203, 205, 0, 201, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 88, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 96, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	109, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 673, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3506, 0, 0, 0, 0, 0, 3508, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 478, 190, 0, 314, 0,
	498, 476, 423, 339, 501, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2042, 2040, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 497, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 486, 220, 309, 450,
	496, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 2040, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 478,
	190, 0, 314, 0, 498, 476, 423, 339, 501, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 1164, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 497, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 496, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3360, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 0, 314, 0, 498, 476,
	423, 339, 501, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 497, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 496, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3508,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 478, 190, 0,
	314, 0, 498, 476, 423, 339, 501, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 497, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 496, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 498, 476, 423, 339,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 497,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 496, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 478, 190, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 486, 220, 309, 450,
	161, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3216, 680, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 673, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 673, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 478,
	190, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 548, 545, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 161, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 2539, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 2425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 2165,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 0, 196, 0, 0,
	202, 0, 203, 205, 448, 201, 0, 0, 1606, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 478, 190, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 486, 220, 309, 450,
	161, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 155, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 478,
	190, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 161, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 486, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 653, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 1162, 732, 734, 735,
	736, 737, 0, 0, 0, 733, 2315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	728, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 486, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 729, 730, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 4472, 0, 0,
	0, 0, 0, 259, 4470, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 4471, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2990, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 2991, 2992, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 1623, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 2469, 0, 0, 478, 0, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 2468, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 486, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	486, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 3562,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 3560, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 486, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 3558, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	3556, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 486, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 3551, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 3538, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 3536, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 3465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 486, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3456, 0, 0, 0, 0,
	0, 1162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	486, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 2589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 2747,
	2746, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 486, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 486, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 42, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 71, 0, 0, 4284, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4277, 0, 0, 0,
	0, 4523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 4284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4277, 0, 0, 0, 0, 4515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 89, 57, 0, 0,
	0, 0, 4284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4280, 4277, 0, 0, 0, 0, 4513, 0,
	0, 0, 4289, 4281, 4282, 4283, 4287, 4288, 4285, 0,
	4286, 0, 4290, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 69, 70, 0, 4280, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 4289, 4281, 4282, 4283,
	4287, 4288, 4285, 0, 4286, 0, 4290, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4278, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 4291,
	4279, 0, 66, 67, 73, 0, 74, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4291, 4279, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 69, 70, 0, 4280,
	0, 0, 89, 0, 0, 0, 0, 0, 4284, 4289,
	4281, 4282, 4283, 4287, 4288, 4285, 0, 4286, 0, 4290,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 4277,
	0, 0, 0, 0, 4393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 59,
	61, 4278, 0, 0, 0, 87, 4291, 4279, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 62,
	92, 91, 89, 0, 0, 0, 57, 0, 4284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 4277,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	4200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 69, 70, 0, 4280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4289, 4281, 4282, 4283, 4287,
	4288, 4285, 0, 4286, 0, 4290, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 42, 45, 96, 0, 0, 0, 0,
	0, 4278, 0, 0, 0, 84, 0, 71, 0, 0,
	0, 0, 0, 93, 60, 0, 47, 75, 76, 62,
	92, 91, 0, 0, 72, 0, 57, 0, 0, 1647,
	0, 0, 0, 1660, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 63, 0, 59, 61, 89, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4291, 4279, 0, 66, 67, 73, 0, 74,
	0, 0, 69, 70, 85, 4280, 0, 0, 0, 0,
	0, 0, 1661, 0, 0, 4289, 4281, 4282, 4283, 4287,
	4288, 4285, 0, 4286, 0, 4290, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 80,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4291, 4279, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 84, 0, 1674, 1677, 1678, 1679, 1680, 1681, 1682,
	60, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 0, 1662, 1663, 1664, 1644, 1643,
	1675, 1645, 1648, 1642, 1646, 1641, 0, 0, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 83, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 81,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 1674, 1677, 1678, 1679,
	1680, 1681, 1682, 0, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 0, 1662, 1663,
	1664, 1644, 1643, 1675, 1645, 1648, 1642, 1646, 1641, 0,
	85, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	82382, -1000, -505, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2895, -1000, 2895, 299, -1000, 430, -1000, 1305, 523,
	-1000, -1000, -1000, -1000, -1000, 712, 304, 60229, 1119, 54325,
	80865, -293, 6894, 80128, 153, -1000, 153, 413, 56536, 826,
	878, 79391, 2714, 2107, 155, 0, -3, 247, 40319, 1034,
	301, 181, 202, 201, 165, 1199, -1000, 62440, 901, -1000,
	315, -1000, -1000, -1000, -1000, -1000, 55799, 2943, 2946, 2943,
	-1000, 2873, 2893, -1000, -1000, 2873, 2283, 2283, -1000, 62440,
	14659, -1000, -1000, -1000, -1000, -1000, 32024, -1000, 1277, -1000,
	60966, 42530, 2895, -1000, 1093, 1075, -115, 1028, 1028, 858,
	1028, 1028, -470, 1118, -1000, 861, 1590, -1000, -1000, -1000,
	-1000, 1566, 60966, 68336, 1115, 77917, 1034, 1034, 1034, 1034,
	1034, 1034, 1034, 1034, 53588, 60966, -1000, 1280, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60966, 2930,
	2929, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2536, 2535, 52851, 570, 2784, 1600, 325, 1600,
	-1000, -1000, 1597, -1000, 932, 930, 928, 927, 916, 924,
	10, 1505, 1604, 2867, -1000, 2220, 2873, 2873, 1505, -1000,
	919, -1000, -1000, -1000, -1000, -1000, -1000, 1265, -1000, -1000,
	1658, 1658, 549, 1072, 944, 948, 944, 2828, 1563, 2781,
	2780, 2133, 2779, 842, 2778, 2528, -1000, 1279, -1000, -1000,
	41, -1000, 2106, 60966, -1000, -1000, 1992, 1977, 665, 2399,
	1167, 2588, -1000, -1000, 669, 803, 2518, 684, 2518, 2518,
	2518, 387, 2518, 2518, -4, 2518, 2518, 2518, 311, 2518,
	338, 2518, 2518, 2518, 2518, 2518, -1000, 2276, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	39571, 2809, 209, -1000, -201, 179, 2840, 512, -1000, -1000,
	-1000, 298, 1277, 63177, 2475, -1000, 2220, -1000, -1000, -1000,
	2485, 2220, -1000, 2050, 1113, 1034, 787, -1000, 513, -1000,
	-1000, -1000, 2814, 2220, 46218, -1000, -1000, 1406, -1000, 2220,
	2220, 1277, 2838, 1277, 1277, 2836, 2834, 1277, 2782, 29004,
	19189, 2637, 1767, -1000, -1000, -1000, -1000, 1277, 2928, -1000,
	41793, 1272, -1000, 19189, 2117, 2220, 2220, -1000, 1198, 1258,
	-1000, 1148, 1243, -1000, -1000, 19944, 19944, 19944, 19944, 19944,
	19944, 19944, -1000, -1000, -1000, -1000, -1000, -1000, 2232, 2230,
	2229, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2220, 1261, 1259, 1250, 2220, 2220, 2220, 2220, 2220,
	-1000, 17679, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2220, 2220, 2220, 2220, 2220, 2220,
	2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 19189,
	2220, 2220, 2220, 2220, 2220, -1000, 2220, 2220, 2220, 2220,
	2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220,
	2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220,
	2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2220, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2220, 2220, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2220, 1038, 1038, 59492, 2482,
	-70, 31269, -1000, -1000, -1000, -1000, 29759, 66125, 1503, -1000,
	-1000, -1000, -1000, 2777, -1000, -1000, 1245, 1243, 1198, 1195,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2895, 321,
	-1000, 2369, -1000, -1000, 82399, 82399, 82399, 82399, 82399, 82399,
	49166, -1000, -1000, -1000, 2527, 2873, -1000, 77917, 60966, 896,
	2102, 1647, 2100, 79391, 79391, 1028, -1000, 820, 68336, 68336,
	-376, 1028, 851, 68336, 838, 2481, 1071, 2478, 1066, 2263,
	1034, 2586, 60966, 2099, 2098, 79391, 79391, 68336, 68336, 79391,
	-1000, -1000, -1000, 28249, -1000, 1321, 2477, 48429, 47692, 52114,
	52114, -1000, -1000, -1000, 918, -1000, 1600, -1000, 7424, 19189,
	1028, 1028, 60966, 60966, 60966, 60966, 60966, -1000, 60966, -1000,
	-1000, 1600, -1000, -1000, 1600, 1600, 1600, 1505, 2926, 1505,
	-1000, -1000, -1000, 1600, 80128, 80128, 19189, -1000, 19944, 67599,
	1354, -1000, -1000, 1600, -1000, 80128, 977, 977, 977, -1000,
	2097, 548, 355, -1000, 944, 321, -1000, -1000, 2721, 2831,
	2830, 2096, 842, 842, -1000, 2239, 842, 2469, -1000, 1559,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 842, 2828, 18434, 77917, -485, -1000, -1000, 2476,
	-1000, 444, -1000, -1000, 966, 2585, 966, 5719, 68336, 68336,
	68336, -1000, 2518, 77917, -1000, 2518, 2518, 2518, -7, 2518,
	2518, -1000, -1000, 2518, -1000, -1000, -1000, 2518, -1000, -1000,
	2518, -1000, -1000, -1000, 2518, 2518, -1000, 2518, 2518, -1000,
	-1000, -1000, -1000, -1000, 68336, 681, 2393, 2452, 2584, -1000,
	1062, 183, -30, 144, -1000, -1000, -1000, -1000, -1000, -1000,
	288, 286, 284, 283, -1000, -1000, -1000, -1000, 275, 273,
	-1000, -1000, 58747, 58747, 925, -1000, 2475, 63177, 2829, 23719,
	901, -1000, 19189, 2791, -1000, 2791, -1000, -1000, -1000, 390,
	-1000, 60966, 68336, 79391, 55799, 55799, 55799, 55799, -1000, 2613,
	2612, -1000, 2604, 2603, 2602, 531, 63177, -1000, 2814, 299,
	2358, 2283, 2283, 513, 46218, -1000, 2220, -1000, 63177, 1188,
	1086, 1081, 1079, 2721, -1000, -1000, -1000, -1000, -1000, 1984,
	1980, 1985, 13904, 19944, -1000, -1000, -1000, -1000, -1000, 2943,
	2943, -1000, -1000, -1000, -1000, -1000, -1000, 1715, 2938, 1488,
	2429, -1000, -1000, -1000, 2474, -1000, 1666, 1240, 1961, 1827,
	-1000, -1000, -1000, -1000, -1000, -1000, 14659, -1000, 60966, -1000,
	19189, 19189, 19189, 1668, -1000, 45478, -1000, -1000, -1000, 24474,
	1441, 19944, 1860, 1497, 19944, 19944, 19944, 19944, 19944, 19944,
	19944, 19944, 19944, 19944, 19944, 19944, 19944, 19944, 19944, 1387,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2095, -1000,
	321, 37309, 13904, 37309, 991, 991, 77917, 1332, 1332, 1332,
	1332, 1332, 1332, 61703, -1000, -1000, -1000, 2827, 35799, 77917,
	37309, 2827, 2827, 2827, 2827, 2827, 2351, 1823, 62440, 17679,
	55799, 13904, 13904, 13904, 2283, 19189, 19189, 13904, 19944, 13904,
	16924, 16169, 21454, 13904, 13904, 2827, 1602, 1823, 27494, 13904,
	-1000, 2283, -1000, -1000, -1000, -1000, 1894, -1000, -1000, -252,
	-252, -252, 377, 13904, 13904, 13904, 13904, 2283, 2283, 13904,
	13904, 13904, 13904, 13904, 13904, 2283, 2283, 2283, 13904, 13904,
	13904, 13904, 13904, 13904, 13904, 13904, 13904, 13904, 13904, 13904,
	-1000, -1000, -1000, 1866, 58010, 55799, 60966, 2406, 2348, -1000,
	-1000, 1239, 30514, 2457, -1000, -40, -69, -70, -1000, -1000,
	1206, -1000, -1000, -1000, -1000, 15414, -1000, -1000, -1000, 25229,
	2873, -1000, 41056, -1000, 28, -1000, -1000, -1000, 2499, -1000,
	2502, 104, 528, 2502, 66, 63, 2502, 2502, 2502, -1000,
	-1000, -1000, -1000, 91, -1000, -1000, -1000, -1000, -1000, 2526,
	2525, -1000, 2499, 2499, 2499, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2509,
	518, 2500, 2500, 2500, 2500, 2500, -1000, -1000, -1000, -1000,
	-1000, 994, -1000, -1000, -1000, 19189, 2782, 2661, 2530, 2220,
	1074, -471, 851, 2791, 2804, 2791, 898, -1000, 1238, 2523,
	79391, 870, 2408, -1000, 450, 2395, 1141, 57273, -1000, -1000,
	-1000, -1000, -1000, 60966, 60966, 68336, 68336, 68336, 60966, 60966,
	2473, -1000, -1000, -1000, -1000, -1000, 2472, -1000, 2395, -1000,
	-1000, 1237, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -445, -446, 60966, -1000, -1000,
	-1000, -1000, -1000, -1000, 2470, -1000, 2470, -1000, -1000, -1000,
	2238, 1823, 2094, 2093, 2828, -1000, -1000, -1000, -1000, 1585,
	-1000, -1000, -1000, -1000, 1600, 60966, 2828, -1000, -1000, -1000,
	1823, 1417, 2534, 2220, 2283, -1000, -1000, -1000, 149, -1000,
	146, -1000, -1000, -1000, 2092, -1000, -1000, -1000, -1000, -1000,
	355, -1000, 19944, 2719, 2718, -1000, 2469, 2469, -1000, 2469,
	842, 63914, 2469, -1000, -1000, 2342, -1000, 253, 2237, 60966,
	-1000, 63177, 39, -1000, -85, 76443, -1000, -1000, -1000, 966,
	76443, -1000, 311, 258, -1000, 1061, -1000, 2339, -1000, -1000,
	-1000, -1000, 2518, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 966, 433, 2465, 966, 68336, 68336, 230,
	2464, -1000, 1558, 1552, -1000, -1000, 137, -1000, -1000, -1000,
	-1000, 2865, -1000, -1000, 257, -51, -1000, 257, 2235, 19944,
	-1000, 2220, 2306, -1000, 1224, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2220, -1000, -1000, -1000, -1000, 2776, 1503, 1503,
	1503, 4943, 450, 2583, 2517, 2582, 547, -1000, -1000, -1000,
	-1000, 2611, -1000, 2610, 2605, -1000, -1000, -1000, 2490, 63177,
	55799, -1000, -1000, -1000, 2283, 77917, 1155, -1000, 63177, 2220,
	2220, 2220, 19944, 19944, 1486, -1000, 19944, 19944, 1451, -1000,
	19944, 19944, 1390, -1000, 2283, 2462, -1000, -1000, 1823, 1222,
	4722, -1000, 77180, 21, 2622, 29004, 29004, 19189, -1000, -1000,
	-1000, 25229, 2870, -1000, 2642, 2636, 2925, -1000, -1000, -1000,
	1441, 1681, 1529, -1000, -1000, 1702, -1000, -1000, -1000, -1000,
	-1000, 1214, 2220, -1000, -1000, -1000, -1000, -1000, -1000, 5109,
	-1000, -1000, -1000, -1000, 1860, 19944, 19944, 19944, 1417, 5109,
	5086, 1553, 2024, 1332, 1594, 1594, 1344, 1344, 1344, 1344,
	1344, 1639, 1639, -1000, -1000, -1000, -1000, 2283, -1000, 2333,
	-1000, -1000, 2232, 2230, 2229, -1000, -1000, -1000, -1000, 13904,
	-1000, -1000, -1000, -1000, -1000, -1000, 13904, 13904, 13904, 13904,
	13904, 19189, -1000, 2333, 2333, 2333, -1000, 1786, 1891, 2246,
	3376, 2333, 1331, 2924, 2333, 1304, 2923, 2333, 1965, 19944,
	19944, 19944, 2333, 2333, 13904, 1603, -1000, 19189, 2283, 1285,
	2283, 1198, 1195, 2333, -1000, 2283, 2461, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2459, 2922,
	2458, -1000, -1000, -1000, -1000, 2333, 2283, 2333, 2333, -139,
	-139, 2283, 2333, 2283, 2333, 2333, 2283, -139, -139, -139,
	2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333,
	2333, 2333, -1000, 2283, 1440, 60966, -1000, 2431, 1440, 2387,
	55799, -1000, -1000, 55799, 80128, 26739, -1000, 29759, -70, -88,
	-1000, -1000, 2457, -1000, -1000, 1504, -1000, -1000, 2228, 1823,
	-1000, 1156, 2782, 4720, -1000, -1000, -1000, -1000, 2511, 44741,
	-1000, 2680, 1257, 1257, 1257, 66862, 78654, 2675, -1000, -1000,
	249, 8, -1000, -1000, -1000, 1976, -1000, 314, 500, 2502,
	-1000, -1000, -1000, 2502, 2502, -1000, 2502, 2502, -1000, -1000,
	-1000, -1000, 2227, 2227, -1000, -1000, -1000, -1000, 1975, -1000,
	2509, -1000, 1971, -1000, -1000, -1000, -1000, 249, 249, 249,
	249, 249, -1000, 1582, -1000, 2581, 77917, 2824, 60966, -379,
	-1000, -1000, -1000, 2906, -1000, -1000, 77917, 65388, 2580, -1000,
	-1000, 328, 68336, 443, 673, 305, -1000, 1640, -1000, -1000,
	1059, -1000, 1056, -1000, -1000, 1107, -1000, 60966, 68336, 77917,
	2574, 2573, -1000, 52114, -1000, -1000, -1000, -1000, 2901, 2091,
	2089, -1000, 1505, 1600, -1000, 19944, 68336, -1000, 912, -1000,
	-1000, -1000, -1000, 5109, 19944, 19944, -1000, -1000, -1000, -1000,
	1693, -1000, -1000, -1000, -1000, -9, -1000, -1000, 1055, 1154,
	1153, 76443, 1052, -1000, 333, 68336, -1000, 77917, -1000, 76443,
	386, 425, 76443, 1161, 2921, 2456, -1000, 1544, 1539, 1532,
	1527, 1524, 1522, 1517, 1516, 183, 2507, 2506, -1000, -1000,
	248, -1000, 2744, -1000, -1000, 5109, -1000, -1000, 23719, 37309,
	-1000, 1503, 1499, -1000, 1492, 2226, 1435, 1663, -1000, -1000,
	-1000, 2891, 1187, 1145, 1011, 1503, 996, 420, 1051, 2737,
	2725, 573, 572, -1000, 1503, 996, 1300, 671, -1000, 1469,
	1468, 1465, 1456, 1454, 1446, 1445, 1442, 620, -380, -1000,
	1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, -221, -224,
	1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503,
	1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503,
	1503, 1503, 1503, 32779, 1503, 1503, -307, -1000, 1126, 790,
	-1000, -1000, 19189, 2505, -1000, 19189, -1000, -1000, -1000, -1000,
	-1000, 77917, 2490, 513, -1000, 2302, -1000, -1000, 1155, 77917,
	77917, 77917, 5066, 1991, 2220, 4906, 1831, 2220, 4857, 1671,
	2220, 2814, 13904, 22964, 2225, 2455, 2224, 2223, -1000, 17,
	2620, -1000, -1000, -1000, 60966, -1000, -1000, -1000, -1000, 2901,
	55062, 14659, -1000, -1000, -1000, -1000, 35044, 13904, -1000, 1417,
	5109, 4740, -1000, 19944, -1000, -1000, 2283, 2333, 2333, 2333,
	2333, 2333, 1823, -1000, -1000, -1000, 243, 1387, 243, -1000,
	1387, 19944, -1000, 19944, 19944, -1000, 19944, 19944, -1000, -1000,
	19944, 4687, 4656, 4639, -302, -1000, 2436, 1586, -1000, 19189,
	1886, -1000, -1000, -1000, -1000, -1000, 19944, 19944, 19944, 19944,
	-1000, -1000, -1000, -1000, -1000, 75706, -1000, -139, -139, -139,
	-139, -139, -139, -1000, -1000, -1000, -139, -139, -139, -139,
	-139, -139, -139, -139, -139, -139, -139, -139, -1000, 296,
	2220, -1000, 25984, 2901, 55799, 2432, 2432, -1000, 1140, -1000,
	-1000, -1000, -78, -80, -1000, -1000, -1000, -1000, -1000, 37309,
	-1000, -1000, -1000, 5848, -1000, 1503, 1503, 1503, 374, 1503,
	1503, 1503, 1503, 1503, -225, -227, 1503, 1503, 1503, 1503,
	1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503,
	1503, 1503, 1503, 171, 1503, 1503, 1503, 1503, 1503, 1503,
	32779, 1503, 1503, -381, 49903, 1165, 1003, -1000, -1000, -1000,
	78654, 78654, 78654, -1000, 78654, 78654, -1000, -1000, -1000, -1000,
	50640, -1000, -1000, 1748, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2220, -497, 1969, 60966, -1000, 2775, 1452, 39574,
	2935, -1000, 2672, -1000, 2671, 2669, 2221, -1000, -1000, 2377,
	2375, 2352, -1000, 2502, -1000, -1000, -1000, -1000, -1000, 2331,
	-1000, 2329, 2438, -1000, 2327, -432, 60966, -1000, -1000, 2220,
	1968, 2572, -1000, -1000, -1000, -1000, 2346, 2435, -1000, 82399,
	77917, 77917, 77917, 775, -307, 747, -1000, 68336, 345, 450,
	781, 1999, -408, 2798, 60966, 68336, -1000, -1000, -1000, -1000,
	-1000, -1000, 74969, 74969, -1000, -1000, 19189, -1000, -1000, 2828,
	-1000, 5109, 2395, -1000, -1000, 5109, 5109, 1440, 1112, -1000,
	68336, 1353, 74232, 1050, 68336, 384, 251, -1000, 2920, 2916,
	372, 2914, -1000, 246, 68336, 230, 2219, 2218, 2217, 1967,
	1962, 1960, 1958, 1951, -1000, 60966, 60966, 2214, -1000, -1000,
	-1000, 1436, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1438,
	6325, 1663, 1422, 1415, 1401, 1394, -1000, 161, 46955, 78654,
	1164, 1016, -1000, -1000, 2220, -1000, 44004, 50640, 50640, 50640,
	77917, 2665, 2662, 77917, 50640, 50640, 77917, 50640, 907, 2088,
	2757, 1503, 88, -1000, -1000, -1000, 73495, -1000, 72758, 827,
	51377, 50640, 77917, 60966, 43267, -1000, -1000, -1000, -1000, 72021,
	1938, 77917, 77917, 71284, 70547, 69810, 69073, -1000, -286, 975,
	19189, 975, 1795, 1795, 2213, 2210, 2209, 1503, 1503, 133,
	1795, 2207, 133, 1795, 38819, 2205, 963, 975, 975, 975,
	1795, 1795, 1795, 1795, 2204, 399, 1949, 2201, 1795, 2101,
	2025, 975, -1000, -272, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1795, 2220, -1000, 347, 905,
	1047, 913, -12, 1823, 77917, 1823, 2319, -1000, -1000, 1229,
	77917, -1000, 2259, 2259, 2259, 19944, 19944, 19944, 19944, 19944,
	19944, 19944, 19944, 19944, 63177, -1000, -1000, 1138, -13, 77917,
	-1000, 15, -1000, -1000, -1000, 2899, -1000, 2434, -1000, -1000,
	-1000, 2283, -1000, 19944, 5109, -1000, -139, -139, -139, -139,
	-139, 2283, 2499, 2499, 2499, -1000, 2499, 2500, 107, -1000,
	-1000, -1000, 2499, 130, 2499, 120, -1000, 2283, 2283, 2283,
	2007, 3753, 3280, 2967, 2363, 2007, 19944, 19944, 19944, 2220,
	-131, -1000, 1823, 19189, 4070, 2746, 2007, 2007, -1000, -1000,
	2087, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2570, 2570, 25984, 2814, -1000, 22209, -1000, 901, -1000, -1000,
	77917, 2433, -1000, 1503, 1335, 1503, 1503, 2895, 2432, -1000,
	-1000, 1343, -1000, -1000, -1000, -1000, 975, 975, 975, 1503,
	2755, 1503, 1795, 1795, 2200, 2199, 2197, 1503, 1503, 133,
	1795, 2196, 133, 1795, 38819, 2195, 963, 975, 975, 975,
	1795, 1795, 1795, 1795, 2193, 399, -1000, 1937, 2191, 1795,
	1993, 1954, 975, -1000, -274, 1795, 2220, -287, 2316, -1000,
	2499, 2499, 2655, 1257, -1000, -1000, -1000, -1000, -1000, -1000,
	2498, -1000, -1000, 19944, 2821, -1000, 2497, 1399, -1000, -1000,
	-1000, -1000, 991, 2190, -1000, -1000, 19944, -1000, -1000, 2220,
	2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220,
	2220, 2220, -39, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2189, -1000, 1930, -1000, 1929, -1000, -1000, -1000,
	2494, -1000, 2819, -1000, 60966, 229, 65388, -1000, 82399, 82399,
	82399, -12, 426, -1000, 1655, -1000, -1000, -1000, 2188, 2187,
	2186, 2395, 454, 1650, 417, -1000, 2816, 2808, 2184, 2183,
	2182, 2181, 1925, -1000, -1000, 2531, 77917, 2430, -1000, 1823,
	1600, 15, 60966, 251, -1000, -1000, -1000, 68336, 251, -1000,
	-1000, 419, 68336, 68336, 2912, 68336, 461, 1161, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2314, 2311, -1000,
	-1000, -1000, -1000, -1000, -1000, 1249, 1235, 336, 334, -263,
	-1000, 469, 326, -1000, -1000, -1000, 51377, 961, 82399, 82399,
	2530, 1257, -1000, 2654, 1377, -1000, -1000, -1000, -1000, -1000,
	-1000, 50640, 2427, -436, -439, 1290, -455, -1000, -1000, -1000,
	-1000, 51377, 1503, 1387, 2752, 652, 332, 643, 327, -1000,
	-1000, -1000, -1000, 961, 1213, 1046, -1000, 2651, 50640, 1045,
	616, 324, -1000, 1773, -308, 2427, -1000, 2427, -1000, 2427,
	-1000, 2427, -1000, -1000, -1000, 1823, -1000, -1000, -1000, -1000,
	-1000, -1000, 2179, 2177, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -239, -1000, 38819, 347, -1000, 1919, 1915, 1896,
	1890, 1764, -1000, 2566, 79391, -1000, 690, 2565, 474, 991,
	2308, -1000, 77917, -1000, -1000, -1000, -1000, -1000, 5109, 5109,
	2389, 5109, 5109, 2215, 5109, 5109, 2070, -1000, 34289, 2220,
	-1000, -17, -1000, 2897, 2890, -1000, -1000, 5109, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 462, 451, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19944, 19944,
	19944, 19944, -1000, 2007, 2007, 2007, 19944, 2283, 2176, 1823,
	19944, 19944, -1000, -1000, 1384, -1000, -1000, 2793, -1000, 2374,
	63177, 2283, 2322, 2306, 2283, 297, -1000, -1000, -1000, 62440,
	55799, 2412, -1000, 2220, 2302, 2895, 25984, 19189, 19189, 19189,
	19189, 2873, -1000, -1000, -1000, -1000, 1387, 1503, 33534, -1000,
	-1000, -1000, -1000, -1000, 2163, 2162, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -242, -1000, 38819, -1000, 237, 49903, 2801,
	2801, 78654, 78654, 77917, 2007, 2220, 77917, -1000, -1000, -1000,
	-1000, -1000, 2007, -1000, -1000, 2343, 2334, 49903, 321, -1000,
	-408, 2848, -1000, 229, -1000, 2161, 847, 856, -1000, 846,
	831, 825, 824, 805, -1000, -1000, -1000, -1000, 2565, 698,
	426, -1000, -60, 1872, 1418, 2735, 538, -1000, -1000, -1000,
	-1000, 300, 450, -1000, 702, 2160, 699, 2159, -1000, -1000,
	446, -1000, -1000, 2713, 2298, -1000, -17, -1000, 2818, 251,
	2818, 367, 1161, 1161, 68336, 1161, -1000, -1000, -1000, -1000,
	-278, 1865, 19944, 2220, 2220, 797, 2323, -1000, -1000, 2085,
	-1000, -1000, 2493, 78654, 78654, 2262, -1000, 77917, -1000, -1000,
	-1000, -1000, -1000, 2788, 2787, -1000, -1000, 961, 1387, -1000,
	1387, -1000, -1000, -1000, -1000, -1000, 50640, 77917, 50640, 1042,
	50640, -1000, -1000, 2220, 1101, -1000, -1000, -1000, -1000, 2296,
	-1000, -1000, -1000, -1000, -1000, -1000, 466, 2158, 312, -1000,
	-1000, 1126, 757, -1000, -1000, -1000, -233, -1000, -1000, 19944,
	19944, 19944, -1000, 36554, 2699, 2693, -173, 19189, 19189, -1000,
	-1000, -1000, -1000, 2007, 2007, 2007, 2007, -1000, -1000, -1000,
	346, -1000, -1000, 2007, 2007, 2895, 2889, 2648, -1000, 2490,
	-1000, -1000, 2322, 297, -1000, 901, -1000, 13149, -1000, 2873,
	-1000, 1823, 1823, 1823, 1823, -1000, -1000, 1387, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2296, 237, -1000, 38819, 1503,
	2157, 1503, 1503, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2294, -500, 19944, 2292, -1000, -1000, -1000, 2290, -1000, -1000,
	897, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2712, 2704,
	868, 905, -1000, 2156, 2152, -1000, 718, 1874, 1146, -177,
	-1000, -1000, -1000, -1000, -1000, -1000, 683, 2083, -1000, 416,
	-1000, -1000, 401, -1000, -1000, 2885, -408, 19944, -1000, 2699,
	-1000, 68336, 2818, -1000, -1000, -1000, -1000, 1161, -1000, 2220,
	2883, -1000, 2007, 77917, 19944, 2220, 1513, -1000, -1000, 249,
	249, 49903, 2530, 2492, -1000, 1377, 2634, 19944, -1000, -1000,
	1233, 1212, -1000, -1000, 1040, 50640, -1000, 1377, 60966, 38819,
	-1000, -1000, -1000, -1000, 905, 1358, 772, 2007, 2007, 2007,
	2249, -1000, 82286, 313, -1000, -1000, 2673, 2882, -1000, 77917,
	-1000, 1823, 2411, -1000, 1823, -1000, -1000, -1000, -1000, 2283,
	277, -333, -1000, -1000, 1412, 19189, 2934, -1000, -1000, -1000,
	297, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1858, -1000,
	2142, 2137, 974, -1000, -1000, -1000, 2007, -1000, 237, -310,
	321, 880, 82196, -1000, -1000, -1000, -1000, 1764, -1000, -1000,
	-1000, -1000, 1853, -1000, -1000, 1833, 680, 400, -1000, 2817,
	-1000, -1000, 1824, 5109, 1036, -309, -1000, -1000, -1000, 1377,
	-410, -1000, 2259, 2007, 77917, 1819, 2281, 2491, 49903, -1000,
	940, 5109, 1503, 1387, 50640, -1000, 2262, 31, -1000, 82196,
	1764, 1120, 764, 474, -1000, -1000, -1000, 2283, 36554, 371,
	-461, -23, 2135, 2696, 2689, 2685, -1000, 2134, 2410, -1000,
	2815, 19189, -1000, 2619, -305, -340, 2283, 415, 415, 2405,
	25984, 2283, -1000, -1000, -1000, 60966, -500, -1000, 237, -1000,
	356, -1000, 876, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12394, 19189, 162,
	38064, 2069, 2068, 82196, 2009, 82196, 19189, 2066, 2049, 2670,
	19944, 82046, 465, -353, -1000, -356, -1000, -1000, -1000, 2129,
	-1000, 2490, 1803, 437, 2262, 319, -1000, -1000, 2259, -1000,
	237, 49903, 2256, 938, 1387, -1000, -1000, -1000, 670, -1000,
	-1000, 464, 991, -1000, 474, -1000, 2814, -1000, -1000, 2115,
	-211, -1000, 2220, -27, 2880, 2877, -1000, 2875, 2871, -1000,
	77917, 2220, -1000, -1000, 2618, -1000, -1000, -1000, 365, -1000,
	1400, 850, 1370, -1000, 991, -1000, 2401, -1000, 2487, -1000,
	361, 993, 985, -310, -1000, 2035, 2034, -1000, 1878, 1889,
	-1000, 19189, 1835, 591, 571, 11667, -1000, -1000, -1000, -1000,
	-1000, -1000, -506, -1000, 322, -508, 1002, -1000, -1000, 2033,
	-1000, 2910, 5109, -1000, -509, -1000, -1000, -1000, -1000, 2749,
	1448, 64651, -1000, 2220, 797, -1000, -1000, 2254, 237, 2220,
	-1000, -1000, -1000, -1000, -233, -1000, 1358, 63177, 627, 2114,
	36554, 2220, 2112, 2110, 2109, 1994, -1000, -1000, -312, 1649,
	-1000, -1000, -1000, -1000, -1000, -252, 77917, -1000, 357, 340,
	-1000, -1000, -1000, -1000, 1837, 1635, 82196, -1000, 1754, 82196,
	2846, 2845, 2844, 15, 37309, 81810, 81657, 82196, 82196, 19189,
	11622, 82196, 1673, -1000, 81603, 82196, -1000, 25984, -1000, -1000,
	-1000, -1000, 2948, 2395, 19944, 2220, 237, -1000, 20699, 82196,
	-1000, 1358, -1000, 1879, 1832, 2564, 2563, 991, -1000, 2249,
	36554, -1000, -1000, -1000, -1000, -336, 365, -1000, 2251, -1000,
	-1000, 290, 1634, 82196, -1000, -510, 82196, -511, 815, 321,
	1021, 1206, -1000, 555, -1000, 2032, -512, -513, -514, 982,
	19189, -516, 2031, -1000, -1000, 2401, 68336, 2007, 19944, -1000,
	2007, 2283, -1000, -1000, 2562, 991, -1000, 2560, 991, -91,
	-92, 2559, -1000, 2249, -341, -1000, 2554, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 11407, 62440, -1000, -517, 11243, -518,
	6699, -1000, -1000, -1000, 11071, -1000, -1000, -1000, -1000, 581,
	-1000, -1000, 2786, -1000, -1000, 10638, 10164, 9762, 82196, 1802,
	9610, 2397, -1000, -1000, 2395, -282, 2007, -1000, -1000, -1000,
	269, 2551, -391, 2550, 266, 264, -1000, -1000, -94, -1000,
	-1000, 2544, 2541, 2908, -1000, -519, -1000, -1000, 9530, 1632,
	82196, 1027, 82196, 1607, -1000, 19189, -1000, 1021, -1000, 19944,
	2023, 552, 19189, -520, 546, 542, 2010, -1000, 1780, -282,
	262, -392, 2539, 2519, -1000, -1000, -1000, 2933, -1000, 2909,
	1174, 1174, 8806, 1619, -1000, -1000, -522, 1026, 82196, -1000,
	1541, -1000, 5109, -1000, 2008, 1798, 7852, -1000, -1000, -1000,
	-1000, -1000, 261, -394, -1000, -1000, -1000, 983, 1779, -1000,
	-1000, -1000, 7772, -1000, -524, 82196, -1000, 545, 541, -1000,
	-1000, -1000, -1000, -1000, 1025, 7051, -525, 2006, 1834, -1000,
	1019, 82196, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3386, 3385, 3384, 21, 3381, 276, 304, 287, 23,
	2752, 3380, 292, 3379, 281, 3378, 27, 17, 15, 34,
	3377, 3067, 3054, 3051, 3049, 30, 3376, 7, 3375, 3373,
	3047, 3369, 3368, 3033, 3367, 3366, 3365, 3363, 3358, 3356,
	3354, 3353, 3352, 3023, 3020, 3012, 3009, 3351, 3349, 3348,
	3003, 3001, 2996, 3345, 72, 3343, 20, 40, 36, 3342,
	5, 3341, 192, 221, 3340, 3, 3339, 3338, 12, 205,
	3337, 3335, 69, 2994, 3334, 3333, 3332, 3331, 3327, 3325,
	144, 3324, 3323, 2992, 3322, 2985, 3321, 2983, 2981, 2978,
	2975, 2965, 198, 3320, 2963, 2959, 2957, 3316, 2665, 227,
	452, 225, 3315, 129, 148, 1814, 3314, 210, 3313, 209,
	3312, 3311, 3310, 447, 224, 3309, 165, 3308, 473, 166,
	167, 170, 458, 3306, 60, 164, 316, 3303, 8, 3302,
	111, 3301, 213, 3299, 220, 2749, 190, 305, 185, 3298,
	3297, 151, 3292, 3290, 3289, 212, 3288, 3287, 233, 1836,
	3286, 3285, 188, 3284, 139, 3279, 138, 3274, 3273, 3271,
	3270, 231, 116, 85, 173, 133, 3269, 161, 3267, 3266,
	3264, 3262, 3259, 3258, 77, 50, 333, 3257, 158, 193,
	3256, 58, 48, 54, 3255, 3254, 57, 3253, 3252, 125,
	3251, 3248, 135, 3247, 184, 71, 3246, 3245, 3243, 3242,
	114, 84, 3241, 37, 3240, 181, 3239, 3238, 3237, 3236,
	3235, 80, 3234, 89, 3230, 189, 242, 197, 3229, 3226,
	44, 47, 3225, 61, 19, 106, 107, 33, 101, 81,
	182, 169, 134, 157, 46, 153, 49, 155, 156, 3224,
	228, 175, 211, 115, 25, 3221, 3218, 215, 3217, 110,
	226, 179, 183, 204, 3213, 3212, 3211, 237, 3205, 180,
	541, 3204, 132, 230, 232, 2690, 240, 141, 3202, 3201,
	3200, 3199, 103, 53, 137, 3197, 41, 234, 236, 235,
	43, 104, 3196, 1234, 6240, 7163, 8133, 78, 62, 91,
	7910, 63, 206, 3195, 74, 3194, 3192, 3191, 4437, 163,
	56, 109, 160, 3190, 162, 42, 86, 3188, 3184, 3182,
	3175, 3172, 3170, 229, 127, 3169, 3168, 65, 3165, 3164,
	38, 32, 14, 11, 3163, 143, 218, 216, 214, 3161,
	199, 55, 3159, 3158, 177, 149, 3157, 3156, 3155, 3149,
	176, 121, 202, 3148, 201, 126, 123, 3147, 118, 3146,
	3145, 105, 6055, 142, 3144, 3143, 145, 130, 146, 186,
	3142, 3140, 3139, 67, 3138, 3136, 4, 3135, 100, 52,
	59, 108, 51, 172, 3133, 3132, 195, 3129, 3126, 152,
	171, 3124, 140, 136, 73, 3123, 70, 147, 3122, 168,
	2, 9, 6, 3121, 3120, 3119, 3117, 3116, 3115, 3114,
	3113, 120, 3112, 3108, 99, 87, 75, 3093, 3092, 3091,
	3090, 3089, 191, 174, 112, 219, 131, 10, 3088, 3087,
	13, 3086, 178, 3084, 94, 3083, 3082, 128, 3081, 3080,
	76, 102, 39, 95, 3079, 3078, 117, 159, 3077, 98,
	3076, 3069, 223, 360, 3064, 338, 3058, 194, 196, 79,
	90, 3025, 88, 113, 3018, 93, 3016, 24, 64, 3014,
	26, 29, 1571, 3006, 0, 3851, 207, 2998, 150, 2988,
	2967, 222, 2961,
}

var yyR1 = [...]int{
	0, 463, 463, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 245, 245, 97, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 128, 128, 8, 8,
	127, 127, 127, 242, 242, 242, 242, 239, 239, 129,
	129, 126, 126, 134, 16, 16, 16, 111, 111, 17,
	18, 18, 18, 18, 466, 466, 143, 143, 141, 141,
	142, 142, 237, 237, 19, 19, 19, 247, 247, 252,
	252, 252, 255, 255, 255, 255, 225, 226, 227, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 454, 454, 454, 455, 455, 455,
	455, 455, 280, 280, 280, 280, 418, 418, 434, 434,
	434, 435, 435, 433, 433, 433, 433, 433, 437, 437,
	438, 438, 436, 436, 436, 436, 440, 440, 441, 441,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 421, 421, 421, 50, 50, 50,
	50, 50, 54, 54, 51, 51, 51, 51, 51, 51,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 443, 443, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 445, 445, 446, 446, 447, 447,
	447, 447, 448, 448, 448, 448, 448, 449, 449, 449,
	449, 449, 449, 449, 450, 450, 451, 451, 3, 2,
	399, 399, 400, 400, 401, 401, 401, 401, 402, 402,
	403, 403, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 31, 31, 31, 31, 31, 31, 279, 279,
	275, 275, 275, 277, 277, 278, 278, 278, 420, 420,
	420, 414, 414, 414, 416, 416, 415, 415, 415, 417,
	417, 422, 422, 422, 422, 422, 425, 425, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 426, 426,
	426, 423, 423, 162, 162, 427, 427, 432, 432, 428,
	428, 429, 429, 431, 431, 431, 430, 430, 430, 430,
	317, 317, 181, 181, 70, 70, 71, 71, 71, 214,
	214, 214, 20, 20, 20, 20, 20, 20, 26, 26,
	28, 28, 28, 28, 57, 57, 58, 29, 29, 29,
	29, 59, 59, 60, 32, 32, 32, 32, 32, 32,
	67, 67, 67, 66, 66, 65, 65, 65, 65, 65,
	65, 34, 35, 36, 467, 467, 467, 61, 61, 37,
	37, 37, 40, 40, 40, 41, 41, 41, 38, 39,
	42, 30, 30, 30, 30, 68, 68, 63, 63, 62,
	62, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 33, 33, 33, 33, 33, 33, 25,
	398, 398, 398, 56, 56, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 78, 78,
	354, 355, 355, 355, 355, 355, 355, 341, 341, 342,
	342, 342, 342, 342, 342, 331, 331, 331, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 305, 305, 305, 305, 309,
	309, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 308, 308, 308, 308,
	308, 308, 308, 308, 310, 310, 310, 310, 310, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 312, 312, 312, 312, 312,
	312, 312, 312, 340, 340, 314, 314, 313, 313, 313,
	334, 334, 335, 335, 335, 332, 332, 332, 333, 333,
	318, 318, 318, 318, 318, 318, 319, 336, 320, 320,
	321, 321, 321, 321, 321, 321, 322, 322, 323, 323,
	323, 325, 325, 330, 330, 329, 329, 329, 329, 329,
	329, 326, 326, 326, 326, 326, 326, 327, 327, 327,
	328, 339, 339, 339, 339, 339, 315, 46, 46, 52,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 376, 376, 381, 381,
	269, 269, 270, 270, 53, 53, 53, 53, 53, 168,
	168, 55, 55, 55, 377, 377, 379, 379, 379, 379,
	379, 379, 379, 379, 378, 378, 380, 380, 343, 343,
	372, 372, 371, 371, 370, 370, 370, 370, 370, 370,
	370, 352, 352, 353, 353, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 347, 347, 347, 346, 346, 348,
	348, 351, 351, 351, 369, 369, 368, 368, 344, 344,
	344, 382, 382, 382, 382, 382, 102, 102, 345, 345,
	345, 383, 349, 349, 350, 350, 350, 391, 392, 390,
	390, 390, 390, 390, 169, 169, 169, 374, 374, 374,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 103, 103,
	103, 104, 104, 324, 324, 356, 356, 356, 356, 356,
	462, 462, 462, 357, 357, 357, 357, 357, 357, 453,
	453, 452, 452, 452, 358, 358, 359, 360, 360, 360,
	361, 361, 363, 363, 276, 276, 364, 364, 365, 365,
	362, 362, 362, 366, 366, 395, 395, 395, 394, 394,
	73, 73, 73, 73, 75, 75, 74, 74, 74, 82,
	82, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 72, 72, 289, 289, 77, 213,
	213, 213, 274, 274, 388, 388, 389, 389, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 385,
	385, 384, 384, 386, 386, 76, 76, 76, 76, 163,
	163, 22, 22, 79, 79, 419, 419, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 393, 393, 393,
	24, 24, 83, 84, 84, 84, 288, 288, 288, 288,
	288, 87, 87, 87, 87, 240, 240, 241, 241, 88,
	88, 88, 88, 89, 89, 89, 89, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	123, 261, 261, 260, 260, 259, 259, 259, 262, 262,
	262, 262, 303, 303, 303, 86, 86, 86, 98, 98,
	93, 93, 96, 96, 96, 96, 99, 99, 100, 100,
	101, 101, 94, 95, 43, 44, 44, 44, 44, 45,
	91, 91, 91, 92, 92, 92, 92, 113, 113, 114,
	114, 469, 469, 469, 90, 470, 105, 106, 106, 108,
	108, 108, 109, 109, 109, 110, 110, 110, 266, 266,
	266, 266, 266, 266, 266, 107, 107, 107, 117, 117,
	121, 121, 121, 121, 120, 120, 120, 120, 216, 216,
	221, 295, 295, 197, 197, 217, 217, 222, 222, 222,
	223, 223, 224, 224, 224, 224, 224, 219, 219, 218,
	218, 220, 184, 184, 184, 184, 182, 182, 182, 182,
	182, 182, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 180, 180, 293,
	293, 293, 293, 292, 292, 292, 125, 125, 130, 130,
	132, 132, 132, 132, 132, 132, 132, 132, 135, 199,
	199, 471, 471, 153, 153, 154, 154, 154, 154, 155,
	155, 155, 155, 155, 157, 157, 157, 158, 158, 158,
	158, 158, 158, 159, 160, 160, 156, 156, 156, 178,
	178, 235, 235, 236, 236, 234, 234, 238, 238, 131,
	131, 133, 133, 133, 133, 138, 138, 139, 139, 140,
	140, 300, 300, 300, 144, 144, 144, 146, 145, 145,
	145, 145, 145, 145, 147, 147, 456, 457, 457, 458,
	458, 458, 458, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 460, 460, 461, 461, 148, 148, 150,
	151, 151, 149, 149, 149, 149, 149, 149, 161, 161,
	152, 164, 164, 164, 164, 165, 165, 122, 122, 122,
	122, 122, 122, 122, 122, 258, 258, 167, 167, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 193,
	193, 193, 193, 193, 193, 170, 170, 170, 170, 170,
	170, 170, 116, 116, 194, 194, 194, 137, 136, 136,
	119, 119, 118, 118, 195, 195, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 187, 187, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 192, 192, 192, 192, 192, 468, 468, 189,
	189, 188, 188, 188, 188, 188, 188, 112, 112, 112,
	112, 112, 301, 301, 301, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 69, 69, 206,
	206, 115, 115, 204, 204, 205, 207, 207, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 177, 177, 177, 208,
	208, 196, 196, 124, 209, 209, 210, 211, 211, 212,
	212, 215, 228, 228, 228, 229, 229, 229, 229, 179,
	179, 179, 230, 230, 230, 230, 172, 172, 171, 171,
	171, 173, 173, 173, 173, 174, 174, 472, 472, 233,
	233, 232, 232, 231, 231, 231, 231, 231, 231, 231,
	243, 243, 198, 198, 201, 201, 200, 202, 244, 244,
	249, 249, 249, 249, 246, 246, 250, 250, 250, 250,
	253, 253, 254, 254, 254, 251, 251, 251, 251, 248,
	248, 248, 297, 297, 297, 297, 256, 256, 265, 265,
	263, 263, 264, 264, 257, 257, 316, 316, 316, 271,
	271, 272, 272, 273, 273, 267, 267, 267, 267, 268,
	268, 294, 294, 290, 290, 296, 296, 291, 291, 298,
	298, 299, 299, 299, 299, 396, 396, 397, 397, 397,
	337, 337, 408, 408, 338, 338, 409, 409, 410, 410,
	405, 405, 406, 406, 407, 407, 407, 47, 411, 411,
	412, 412, 413, 413, 413, 413, 48, 49, 49, 49,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 287, 287, 287, 287, 287, 287, 284, 284,
	284, 284, 284, 284, 285, 285, 285, 464, 465,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 0, 3, 9, 9, 9, 10, 6, 8,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 3, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 4,
	0, 1, 1, 3, 2, 3, 3, 3, 0, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 3, 3,
	3, 3, 2, 4, 5, 4, 6, 7, 2, 3,
	3, 3, 3, 0, 3, 0, 3, 3, 1, 1,
	1, 3, 2, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 5, 4, 6, 0, 1, 4, 3,
	3, 3, 6, 6, 5, 5, 5, 5, 4, 3,
	5, 1, 3, 1, 3, 3, 5, 0, 5, 0,
	3, 0, 3, 0, 3, 4, 0, 1, 1, 3,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 8, 4, 7, 1, 2, 5, 7, 10, 8,
	11, 1, 2, 5, 5, 5, 5, 6, 5, 7,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 2, 2, 5, 0, 1, 2, 1, 3, 5,
	7, 8, 7, 9, 10, 7, 9, 10, 2, 2,
	2, 2, 4, 2, 4, 2, 3, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 4,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 5,
	5, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 1, 1, 0, 2,
	2, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	6, 8, 3, 6, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 3, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	3, 2, 3, 3, 2, 3, 3, 2, 3, 4,
	2, 2, 1, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 4, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 3, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	2, 3, 3, 2, 2, 4, 3, 1, 0, 1,
	3, 3, 3, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 2, 1, 2, 1, 2, 2, 5, 5, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 2, 2, 3, 3, 0, 3, 0, 3,
	1, 1, 0, 1, 5, 4, 2, 3, 3, 0,
	1, 0, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 3, 5, 5, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 3, 3, 1,
	1, 0, 1, 1, 1, 3, 5, 3, 3, 3,
	5, 3, 2, 2, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 3, 3, 3, 3, 2,
	1, 11, 12, 12, 13, 13, 0, 1, 3, 2,
	1, 5, 1, 1, 0, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 2, 3,
	3, 3, 3, 4, 5, 3, 3, 4, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 4, 4, 3, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 0, 1, 6, 1, 4, 5,
	5, 6, 0, 1, 0, 3, 1, 1, 0, 2,
	0, 8, 9, 0, 2, 0, 1, 2, 0, 2,
	1, 1, 1, 1, 4, 3, 7, 5, 5, 1,
	3, 5, 4, 8, 10, 9, 2, 2, 3, 3,
	4, 4, 4, 4, 3, 3, 3, 3, 6, 5,
	4, 4, 5, 5, 8, 4, 5, 7, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 3, 3,
	3, 4, 5, 5, 3, 7, 6, 5, 2, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 3, 5, 3, 1, 1, 1, 1, 6, 0,
	1, 2, 0, 1, 0, 1, 1, 2, 5, 3,
	4, 4, 4, 4, 4, 4, 3, 7, 6, 8,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	3, 1, 3, 8, 8, 8, 11, 12, 15, 0,
	3, 3, 3, 3, 5, 3, 5, 6, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 0, 1, 1,
	3, 2, 3, 8, 5, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 4, 1, 3, 1, 1, 2,
	2, 4, 4, 3, 3, 3, 3, 3, 4, 3,
	5, 5, 5, 4, 4, 4, 4, 3, 2, 2,
	6, 2, 4, 3, 3, 4, 4, 5, 8, 6,
	3, 4, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 4, 2, 4, 3, 3,
	3, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	3, 2, 0, 1, 1, 2, 4, 1, 0, 1,
	2, 1, 2, 4, 4, 5, 0, 1, 0, 3,
	0, 2, 4, 4, 2, 3, 4, 4, 5, 3,
	4, 5, 4, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 3, 0, 2, 0, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 0, 2,
	2, 2, 2, 2, 2, 0, 1, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 2, 2, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 5, 1, 2, 3, 1, 1, 2, 2,
	4, 0, 1, 2, 6, 1, 3, 2, 4, 1,
	1, 1, 1, 1, 5, 5, 8, 5, 5, 8,
	5, 5, 8, 2, 2, 2, 3, 4, 4, 0,
	1, 3, 1, 0, 3, 1, 3, 1, 3, 4,
	6, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 1, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 2, 2, 2, 12, 1, 3, 3,
	3, 6, 7, 2, 3, 3, 4, 4, 5, 5,
	8, 8, 3, 3, 4, 3, 4, 1, 3, 3,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 3, 6, 6, 4,
	6, 6, 6, 4, 8, 8, 8, 8, 4, 6,
	7, 7, 7, 9, 4, 7, 5, 4, 4, 4,
	4, 2, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 6, 3, 4, 2, 2, 2, 0, 2, 1,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 2, 1, 2, 1, 1, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 5, 1, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 1, 3, 1, 0, 2, 1, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 1,
	1, 1, 0, 2, 4, 4, 1, 4, 1, 3,
	4, 1, 4, 3, 6, 2, 3, 1, 1, 0,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	0, 5, 1, 3, 2, 3, 3, 1, 1, 3,
	3, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 4, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 2, 0, 4, 4, 3, 1, 3,
	2, 4, 1, 2, 1, 2, 2, 2, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -463, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -73, -22, -23, -24, -83, -87, -88, -89, -85,
	-86, -93, -94, -95, -91, -90, -30, -33, -25, -97,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -135, -464, 12, -129, 34, -78, 190,
	-454, -75, -74, -76, -77, 193, 192, 230, 194, 646,
	368, 647, 223, 72, 446, -96, 449, 450, -469, 306,
	307, 25, 42, 451, 453, 35, 36, 246, 334, 336,
	197, 447, 429, 430, 359, 694, -6, 652, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	763, -211, 20, -105, -470, -211, -10, -9, -4, 652,
	-105, -111, 14, 15, 13, 557, -105, -354, 28, -3,
	117, 76, -8, 11, -268, -279, 97, 548, 198, -277,
	330, 332, 208, -265, -267, -275, 256, 266, 49, 210,
	209, 267, 199, 330, -265, 200, 202, 548, 198, 239,
	238, 330, 332, 271, 646, 199, -149, -298, -284, -286,
	-285, 348, 82, -283, 577, 581, 271, 584, 585, 590,
	338, 90, 52, 368, 571, 360, 369, 220, 526, 572,
	331, 337, 340, 361, 735, 370, 372, 373, 569, 570,
	54, 202, 559, 560, 563, 213, 750, 353, 221, 649,
	267, 758, 753, 755, 342, 756, 516, 608, 446, 465,
	457, 484, 650, 706, 279, 301, 454, 385, 533, 609,
	345, 294, 366, 707, 321, 289, 522, 528, 304, 449,
	610, 611, 612, 542, 247, 277, 708, 455, 298, 300,
	299, 261, 576, 305, 41, 226, 481, 659, 647, 256,
	709, 615, 702, 614, 250, 283, 613, 328, 40, 32,
	616, 249, 545, 108, 276, 710, 376, 530, 617, 502,
	377, 245, 272, 274, 290, 712, 654, 349, 232, 529,
	431, 477, 359, 127, 254, 316, 378, 713, 503, 507,
	714, 534, 335, 315, 620, 715, 716, 379, 658, 284,
	717, 201, 341, 621, 280, 718, 257, 444, 536, 346,
	501, 211, 651, 222, 56, 236, 537, 505, 623, 511,
	514, 432, 375, 433, 719, 720, 721, 722, 357, 355,
	625, 356, 358, 627, 268, 296, 655, 624, 657, 61,
	196, 661, 509, 508, 510, 297, 675, 532, 489, 487,
	723, 724, 350, 217, 725, 726, 488, 23, 727, 728,
	540, 320, 352, 729, 730, 731, 626, 293, 631, 607,
	732, 733, 531, 504, 506, 255, 126, 646, 278, 734,
	354, 527, 363, 662, 653, 339, 291, 632, 736, 381,
	292, 235, 228, 541, 426, 427, 442, 443, 371, 737,
	430, 738, 739, 740, 741, 333, 332, 450, 364, 633,
	451, 273, 302, 656, 742, 634, 635, 743, 744, 265,
	248, 544, 535, 60, 518, 513, 367, 382, 456, 428,
	439, 434, 435, 437, 438, 441, 440, 436, 445, 521,
	447, 275, 242, 636, 637, 638, 429, 639, 12, 295,
	347, 640, 641, 642, 525, 365, 303, 266, 269, 492,
	237, 745, 746, 479, 480, 448, 240, 230, 121, 543,
	386, 326, 701, 330, 383, 288, 59, 243, 53, 747,
	748, 270, 244, 660, 287, 452, 344, 663, 199, 82,
	-288, -283, -286, -287, -284, -285, 348, 231, 58, 95,
	63, 62, 82, -283, 646, 143, 485, 533, 190, 523,
	524, 530, -347, 531, 238, 426, 367, 241, -303, 199,
	-261, 240, 522, 335, 354, 581, 244, 245, 272, 427,
	433, 200, 201, 37, 535, 534, 526, -298, -98, 452,
	-98, -98, 203, 452, -113, 232, 194, -149, 231, -68,
	82, 308, -68, 34, 82, -161, -290, -298, 82, -283,
	41, 82, 451, 525, 525, 84, 653, 247, 26, -443,
	-417, 363, -442, -415, 191, 190, 15, 192, 271, 368,
	369, 334, 200, 13, 35, 735, 218, 370, 371, 11,
	223, 372, 373, 239, 14, 374, -444, -420, 387, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 81, 82, -283,
	-263, 205, 371, 426, 448, 426, 426, -270, -269, 384,
	511, 143, -128, 705, -126, -134, -300, -298, -284, -285,
	-199, -471, 252, 548, -257, 330, -277, 204, -130, -132,
	-133, -153, -136, 703, -464, -131, -456, -149, -137, 82,
	606, -109, 10, -108, -110, 9, 8, -109, -229, 22,
	21, -266, -106, -229, -465, 78, -465, -128, -120, 134,
	-122, -298, -166, 100, -176, 33, 29, -175, 348, 231,
	-167, -203, -284, -202, -137, 143, -302, 132, 133, 140,
	101, 186, -187, -185, -186, -188, -190, -191, 226, 479,
	480, 81, 83, 91, 84, 85, 86, 87, 92, 93,
	94, -290, -286, -285, -282, 577, 581, 584, 585, 590,
	-200, -464, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 66, 67, 575, 198, 558, 559,
	482, 560, 13, 561, 562, 563, 648, 220, 567, 103,
	55, 325, 549, 550, 554, -192, 551, 555, 556, 569,
	570, 571, 572, 205, 548, 138, 557, 594, 595, 596,
	597, 598, 599, 600, 601, 603, 604, 602, 578, 579,
	580, 582, 583, 586, 587, 588, 589, 591, 592, 593,
	677, 195, 191, 194, 99, 28, 30, 678, 253, 102,
	463, 497, 566, 21, 25, 214, 197, 485, 212, 142,
	207, 215, 310, 312, 190, 70, 679, 546, 311, 523,
	673, 670, 672, 671, 476, 474, 309, 680, 15, 31,
	224, 260, 681, 472, 192, 251, 106, 107, 682, 46,
	45, 8, 313, 225, 319, 473, 683, 684, 24, 73,
	216, 16, 210, 241, 757, 685, 334, 18, 125, 19,
	686, 667, 669, 668, 204, 119, 200, 749, 68, 258,
	687, 461, 466, 467, 468, 469, 470, 462, 96, 688,
	689, 116, 324, 64, 606, 37, 246, 703, 564, 323,
	690, 43, 42, 496, 500, 495, 322, 512, 117, 22,
	552, 553, 35, 691, 692, 234, 499, 460, 494, 704,
	693, 665, 263, 71, 384, 475, 761, 38, 74, 229,
	380, 351, 47, 97, 20, 259, 69, 39, 573, 122,
	762, 478, 206, 238, 694, 538, 262, 695, 123, 471,
	705, 218, 118, 453, 193, 362, 307, 219, 329, 336,
	696, 252, 124, 524, 664, 697, 568, 34, 223, 306,
	459, 208, 698, 264, 318, 308, 317, 699, 700, 343,
	48, 759, 676, 199, 44, 105, 498, 458, 493, 203,
	565, 239, 314, 9, 49, 36, 519, 14, 374, 72,
	75, 486, 483, 491, 490, 209, 760, 17, 327, 574,
	652, 539, 98, 674, 520, 547, -105, -105, -105, -246,
	448, -253, -250, 534, 535, -251, -254, -248, -203, 511,
	732, 733, 533, 485, 532, -290, -298, -284, 348, 231,
	143, 578, 579, 580, 103, 482, 558, 594, 549, 551,
	546, 550, 548, 33, 595, 29, 94, 596, 575, 205,
	13, 186, 582, 583, 597, 598, 599, 66, 552, 553,
	648, 138, 100, 600, 601, 92, 603, 604, 325, 557,
	67, 602, 198, 588, 587, 586, 589, 561, 562, 93,
	554, 555, 556, 55, 592, 591, 593, -2, -6, -464,
	-149, -355, -342, -345, -290, -284, -286, -287, 227, -285,
	215, -383, 82, -283, 212, -211, -105, 200, 202, 557,
	-264, 205, -264, 239, 238, 271, -278, 264, -264, -264,
	736, 199, -277, 109, 109, -79, -149, -419, -414, -420,
	199, -290, -263, -263, -263, -263, -263, -263, -263, -263,
	82, -288, -149, 187, -84, -149, -141, 16, 16, 75,
	75, 82, -288, 82, 432, 375, 34, -262, 117, 17,
	548, 198, 199, 238, 239, 202, 271, -262, -349, 16,
	119, 242, 242, 242, 242, 242, 243, 242, -260, 525,
	527, 528, 529, -259, 16, 119, 17, -123, 117, 24,
	-464, -229, -229, -259, 242, 135, -100, 99, -100, 82,
	451, 203, -114, 233, -113, -114, -178, -156, 28, 6,
	7, 109, 34, 34, 81, 59, 34, -63, -62, -64,
	294, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 34, -398, 76, 187, -337, 511, 82, -411,
	-412, -149, 84, 84, 74, 354, 74, 77, 203, 77,
	74, -445, 364, 76, -445, 332, 364, 365, 266, 330,
	202, -445, -445, 332, -445, -445, -445, 351, -445, -445,
	525, -445, -445, -445, 366, 367, -445, 523, 202, -445,
	-445, -445, -445, -445, 79, 26, -443, -417, 363, 29,
	428, 431, 538, 652, -55, 444, 445, -168, 26, -375,
	143, 376, 377, 378, 379, 375, 354, 380, 381, 382,
	242, 383, 199, 525, 375, -6, -126, 77, -233, -464,
	77, -200, -464, 82, -330, -329, -326, -327, -328, -325,
	33, 199, -263, 271, -144, -146, -145, -147, 64, 68,
	70, 65, 66, 67, 526, 71, -273, 28, -136, -464,
	-125, -9, -135, -130, -464, -154, 122, -164, -273, -155,
	72, 204, 73, 28, -156, -157, -158, -159, -160, 6,
	7, 54, -464, -464, -7, -8, 26, 27, -14, -7,
	-12, -14, 26, 27, 26, 27, -7, -230, 24, 35,
	-179, 84, 87, -203, -212, -215, -122, -298, 58, -117,
	26, 27, 65, 57, 63, 62, -226, 89, 16, -293,
	99, 97, 98, 116, -292, 28, 82, 81, -288, 187,
	-122, -170, 119, 100, 117, 118, 102, 129, 128, 139,
	132, 133, 134, 135, 136, 137, 138, 130, 131, 142,
	109, 110, 111, 112, 113, 114, 115, -258, -464, -137,
	-464, 187, -464, 187, 188, 189, 187, -176, -176, -176,
	-176, -176, -176, -176, 81, 81, 81, -464, 187, 187,
	187, -464, -464, -464, -464, -464, -195, -122, 652, -464,
	199, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -206, -122, -464, -464,
	-468, -464, -468, -468, -189, -468, -464, -189, -189, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-189, -189, -189, -464, -257, -257, 16, -141, -142, -149,
	-152, -298, 77, -247, -252, 536, 538, 448, -251, -251,
	-297, -290, 81, 33, 143, -353, 109, 120, 34, 187,
	-211, 78, 77, -305, -309, -311, -310, -312, -307, -308,
	-69, 489, 487, 483, 482, 485, 488, 143, 486, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	34, 226, 479, 480, 481, 663, 503, 504, 505, 506,
	507, 508, 509, 510, 457, 484, 650, 458, 459, 460,
	461, 462, 463, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, -305, -305, -305, -305,
	-305, -289, -383, 82, -288, 76, -229, -266, -290, -149,
	-279, 208, -277, 82, 100, 82, -148, -290, -298, -161,
	-264, 265, -423, -422, -414, -417, 676, -264, -278, -414,
	270, 268, 269, 77, 203, 77, 203, 79, -263, 74,
	-143, -149, 82, 82, -148, -161, -416, -414, -417, -162,
	-290, -298, -299, -298, -281, -286, -287, 677, 195, 26,
	191, 194, 99, 28, 30, 678, 253, 102, 463, 143,
	578, 579, 580, 497, 566, 21, 25, 214, 103, 197,
	482, 485, 212, 142, 207, 215, 310, 312, 558, 594,
	190, 70, 679, 549, 551, 546, 550, 311, 548, 523,
	673, 670, 672, 671, 476, 474, 309, 33, 680, 15,
	595, 31, 224, 260, 27, 681, 136, 472, 192, 605,
	251, 106, 107, 682, 46, 45, 8, 29, 313, 225,
	94, 319, 596, 473, 683, 684, 24, 73, 216, 16,
	210, 241, 757, 685, 334, 18, 575, 125, 19, 686,
	667, 669, 668, 205, 204, 119, 200, 749, 68, 258,
	13, 687, 461, 466, 467, 468, 469, 470, 462, 186,
	96, 688, 689, 116, 324, 64, 582, 583, 606, 50,
	37, 246, 597, 598, 703, 599, 564, 323, 690, 43,
	42, 496, 500, 495, 322, 512, 66, 117, 22, 552,
	553, 35, 691, 692, 648, 234, 499, 460, 494, 704,
	693, 665, 138, 263, 71, 100, 384, 600, 601, 92,
	475, 761, 38, 74, 229, 380, 351, 47, 97, 20,
	259, 69, 39, 573, 122, 762, 603, 478, 206, 238,
	694, 538, 262, 695, 123, 604, 471, 705, 218, 118,
	453, 193, 325, 557, 362, 307, 219, 329, 336, 67,
	696, 252, 124, 602, 198, 524, 664, 11, 697, 568,
	34, 223, 306, 459, 208, 698, 264, 318, 308, 317,
	699, 57, 700, 343, 48, 588, 587, 586, 589, 759,
	65, 561, 562, 676, 199, 44, 105, 498, 458, 493,
	203, 565, 239, 93, 314, 9, 49, 36, 519, 14,
	374, 72, 75, 554, 555, 556, 55, 486, 483, 491,
	592, 490, 591, 593, 209, 760, 104, 17, 327, 574,
	652, 539, 98, 674, 520, 14, 192, 77, 81, -241,
	82, -288, 81, -241, -240, -241, -240, 242, -262, 81,
	-302, -122, -264, -264, -149, -149, -149, -149, -149, -149,
	-262, -262, -262, -262, -259, 16, -259, -262, -298, -298,
	-122, -176, -414, 550, 134, -262, -298, -101, -99, 217,
	-99, -101, 82, 82, 451, -92, -4, -18, -16, -17,
	-114, -9, 38, 28, 28, 82, -63, -63, 81, -63,
	77, 109, -63, -178, 78, -195, -290, -396, 749, 77,
	-413, 28, 538, 539, 512, -447, 199, 241, 238, 74,
	-447, -442, 371, -416, -415, -414, -445, -446, -290, -445,
	-445, -445, 525, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -420, 74, 77, 354, 74, 16, 74, 203,
	-378, -380, 442, 443, 539, 540, 455, 375, 375, 375,
	375, 375, 375, -376, -141, 652, -376, -141, 203, 253,
	-134, 28, -232, -231, -291, -284, -285, -286, -287, 227,
	-290, -281, -471, -330, -327, -326, -328, 485, 533, 142,
	545, -149, -414, -162, -132, -132, -130, -132, 64, 64,
	64, 69, 64, 69, 69, 64, 64, -145, -300, -273,
	77, -465, -465, -465, -9, -464, -300, -164, -273, 200,
	200, 200, 102, 16, 52, 26, 102, 16, 52, 26,
	102, 16, 52, 26, -119, -118, -121, 134, -122, -298,
	-176, -242, 96, 14, 119, 77, 23, 77, -228, 30,
	31, 187, -177, 59, 84, 87, -242, 77, -120, -149,
	-122, -122, -122, -193, 92, 100, 93, 94, -292, 227,
	134, -299, -291, -286, -284, -285, 348, 231, -281, -176,
	-194, -200, -137, 88, 119, 117, 118, 102, -176, -176,
	-176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
	-176, -176, -176, -301, 82, 81, 143, 82, -291, -118,
	-291, -175, 226, 479, 480, 92, -175, -290, -290, -107,
	26, 27, -291, 526, -290, -291, -107, -107, -107, -107,
	-107, 77, -465, -118, -118, -118, -465, -122, -122, -118,
	-176, -118, -203, 81, -118, -203, 81, -118, -176, 564,
	565, 566, -118, -118, -107, -204, -205, 104, -203, -284,
	-287, 348, 231, -118, -465, 84, -182, -183, 655, 664,
	665, 667, 670, 663, 662, 661, 659, 658, 657, 660,
	656, 674, 673, 672, 671, 669, 668, 666, -182, -182,
	-184, 226, 481, 479, 480, -118, -119, -118, -118, -465,
	-465, -121, -118, -121, -118, -118, -121, -465, -465, -465,
	-118, -118, -118, -118, -118, -118, -118, -118, -118, -118,
	-118, -118, -465, 84, -151, 96, -149, -125, -149, -141,
	-466, 16, 75, -466, 77, 187, -250, -253, 77, 537,
	539, 540, -247, -322, -323, 142, 74, 95, 81, -122,
	-291, -299, -229, -374, -342, -343, -344, -345, -367, 215,
	-382, 206, 208, 210, 209, 49, -346, 216, 200, 50,
	-306, -332, 518, 519, -314, 76, -313, 76, -69, 483,
	482, 485, -313, 483, 490, -313, 490, 490, -313, -313,
	-313, 483, 76, 76, -314, -314, -314, -334, 76, -334,
	478, -335, 76, -335, -335, -335, -335, -306, -306, -306,
	-306, -306, -383, -122, -230, -294, 75, -233, 202, 736,
	-330, 29, -330, -70, 253, 221, 187, 76, -162, 256,
	257, -418, 77, 33, -424, 331, 84, 205, -149, 231,
	-149, -149, -414, -414, -420, -141, -149, 77, 77, 187,
	715, 715, -149, 77, 81, 82, 82, -178, -350, 16,
	119, -262, -149, -178, -116, 227, 75, -468, -465, 453,
	454, 82, -92, -176, 38, 38, -62, -175, -290, 78,
	-397, 204, 557, 81, -412, -300, 511, 539, -448, 134,
	-290, -447, -448, -451, 652, 203, 78, 77, -445, -447,
	334, 77, -447, -416, -414, -377, -379, 434, 436, 437,
	435, 438, 439, 440, 441, 77, 109, 109, 456, -381,
	24, -376, 538, -376, 81, -176, -136, -465, 77, 187,
	-200, 34, -352, -353, -352, -352, -82, -389, -359, -80,
	-387, 122, 195, 192, 191, 267, 197, -325, 558, 250,
	249, 283, 284, 73, 35, 196, 193, -72, -81, 230,
	289, 235, 290, 194, 229, 291, 228, 292, 652, 287,
	756, 516, 608, 609, 642, 90, 612, 247, 41, 200,
	622, 615, 545, 618, 619, 376, 617, 621, 211, 625,
	624, 626, 628, 629, 630, 340, 633, 634, 635, 248,
	636, 637, 638, 365, 643, 9, -425, -424, -431, 74,
	-139, -138, 74, 75, -140, 74, -138, 64, 64, 64,
	-236, 76, -300, -130, -465, -238, -290, -164, -300, -464,
	-464, -464, -176, -176, 119, -176, -176, 119, -176, -176,
	119, -465, 77, 187, 77, -239, 40, 39, -290, 513,
	60, -179, -179, -215, -256, 24, 16, 55, 55, -127,
	16, -226, -226, 92, 93, 94, 187, -464, -194, -176,
	-176, -176, -116, 99, -465, -465, -119, -118, -118, -118,
	-118, -118, -122, -465, -465, -465, 77, 75, 28, -465,
	75, 119, -465, 16, 16, -465, 16, 16, -465, -465,
	16, -176, -176, -176, -465, -465, -118, -207, -205, 106,
	-122, -465, -465, -465, -465, -465, 77, 77, 16, 77,
	-465, -465, -465, -465, -216, 573, -216, -465, -465, -465,
	-465, -465, -465, -216, -216, -216, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -237,
	122, -149, 34, -237, 75, -125, -125, -152, -298, 134,
	-252, -255, 541, 538, 544, 82, 81, 143, 81, 187,
	-230, -358, -373, 77, -359, 756, 516, 608, -325, 609,
	642, 90, 612, 247, 41, 200, 622, 615, 545, 618,
	619, 376, 617, 621, 211, 625, 624, 626, 628, 629,
	630, 340, 633, 447, 634, 635, 248, 636, 637, 638,
	365, 643, 9, 652, 76, -351, -289, -382, 82, -283,
	50, -346, -348, -346, -346, -346, -351, 82, -283, -351,
	50, 718, 92, 100, -321, -323, 143, -318, -319, -336,
	-339, -315, 28, 757, 521, 218, -345, 485, 533, 33,
	74, 516, 206, 50, 49, 210, 90, -333, 520, 84,
	84, 584, -313, 490, -313, -313, -313, -313, -313, -340,
	81, -340, 84, -334, 84, 78, 74, -290, 28, -149,
	676, -71, 13, 14, 15, -290, -399, -400, -401, -290,
	119, 258, 259, 74, -434, 362, -422, 332, 341, 99,
	21, 652, -455, 100, 203, 203, -393, 219, 214, -149,
	-414, -290, 74, 74, -241, -165, 17, 82, 82, -259,
	-262, -176, -417, 244, 245, -176, -176, -150, 96, -413,
	203, 187, 187, -448, 203, 353, -416, -290, -448, 351,
	334, -448, -54, 204, 16, 77, 109, 109, 109, 109,
	109, 109, 109, 109, -380, 76, 76, 385, 35, -231,
	-291, -352, 82, 81, 143, 82, 81, 143, 81, -388,
	77, -389, 195, 192, 283, 284, -387, 21, -274, -346,
	-395, -394, -344, -345, 122, 207, 215, 215, 212, -274,
	-346, 206, 216, 122, 215, 212, -274, 200, -352, -274,
	485, 142, 203, 37, 37, 365, 122, 365, 122, -352,
	-274, 207, -346, -271, 215, -272, 203, 28, 288, 122,
	122, 122, 122, 122, 122, 122, 122, 293, 676, -352,
	-352, -352, -352, -352, -352, -352, -352, 614, 614, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -356, -452, 81, -462, 90, 271, 340, 82,
	-283, -281, 84, 86, 85, -352, -352, -437, 652, -163,
	193, 277, 273, -122, 76, -122, -234, -290, -236, -465,
	77, -164, -234, -234, -234, 99, 203, -464, 99, 203,
	-464, 99, 203, -464, -273, -121, 134, -299, 81, 77,
	81, 81, 514, 61, -149, -165, 605, -125, -120, 134,
	-291, -119, -116, 99, -176, -465, -465, -465, -465, -465,
	-465, -304, 143, 482, 485, 226, 481, 474, 472, 471,
	473, 501, 487, 518, 479, 519, 663, -301, -304, -301,
	-176, -176, -176, -176, -176, -176, 16, 16, 16, 649,
	-211, 108, -122, 105, -176, -176, -176, -176, -290, -221,
	-464, -216, -216, -216, -216, -216, -216, -217, -216, -217,
	-217, -217, -217, -217, -217, -217, -217, -217, -217, -217,
	-172, -173, 34, -171, -9, -464, -174, -472, 55, 59,
	-464, -244, -249, -203, -284, -287, 227, -165, -125, -165,
	-165, 187, 538, 542, 543, -373, -352, -352, -352, 533,
	485, 142, -352, -352, -352, -352, -352, 614, 614, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, 448, -352, -352, -352,
	-352, -352, -352, -356, -452, -352, -352, 676, -369, -368,
	82, -288, 206, 49, -382, -351, -351, -351, -351, -351,
	-102, -289, 92, -464, 758, 84, -149, 34, 82, 143,
	81, -175, 133, -302, -167, -186, -464, 93, 94, 549,
	550, 554, 551, 555, 556, 569, 570, 571, 572, 546,
	552, 553, 14, 50, 50, 50, 81, 78, 78, 78,
	-313, 78, 77, 78, 77, 78, 77, -169, 710, 711,
	-149, -225, -233, 84, 74, 78, 77, -305, -290, -290,
	-290, 273, -437, 337, -435, -433, 343, 344, 345, 346,
	347, -417, 342, -424, 339, 81, 82, 81, 675, 709,
	730, 702, 29, -149, -414, -235, 76, -234, -235, -122,
	-178, -237, 199, -416, 134, 134, -290, 203, -416, 351,
	-450, 652, 16, 16, 351, 16, 386, -416, -379, 81,
	81, 81, 84, 84, 84, 84, 84, -141, -141, 81,
	82, 81, 143, -358, -80, 195, 192, 283, 284, -360,
	-361, -364, -363, 123, 623, 690, 76, -341, 82, -288,
	-351, -267, 208, 206, -464, 82, -289, -289, -289, -290,
	50, 50, -238, -289, -289, -290, -289, 33, 280, 281,
	282, 82, 34, -352, 485, -238, 26, -238, 26, 33,
	337, 285, 286, -341, -289, -290, -149, 216, 212, -289,
	-238, 26, 84, -238, -290, -238, 26, -238, 26, -238,
	26, -238, 26, 644, -356, -122, -356, -462, -462, 81,
	81, 81, -352, -352, -104, 645, 217, -462, 81, -104,
	-462, -452, 81, -103, 217, 220, 222, -356, -356, -356,
	-462, -462, -462, -462, 81, -357, 33, 616, 477, 611,
	632, 610, 82, 92, 81, 81, -462, 33, -462, 33,
	-462, -356, 639, -462, -464, -438, -436, 355, 356, 357,
	358, -430, 249, 250, 203, 278, 100, -427, 755, 274,
	-234, 78, 77, -154, -290, -465, -465, -465, -176, -176,
	-176, -176, -176, -176, -176, -176, -176, -300, 187, 528,
	-290, -320, -321, -208, 18, -226, -465, -176, -217, -217,
	-217, -217, -217, -465, -314, -314, -314, -314, -335, 478,
	-314, 462, -314, 462, -465, -465, -465, -465, 24, 24,
	24, 24, -465, -176, -176, -176, -464, -115, 568, -122,
	77, 77, -465, -465, -295, 82, -243, 74, -243, -244,
	-273, -9, -465, -232, -174, -464, 11, 55, 59, 652,
	199, -198, -201, -471, -238, -165, 77, -353, -353, -353,
	-353, -211, -165, -356, -356, -356, -352, 34, -352, -462,
	-462, 81, 81, 81, -352, -352, -104, -462, 81, -104,
	-462, -452, 81, -103, -356, -356, -356, -462, -462, -462,
	-462, 81, -357, 82, 92, 81, 81, -462, 33, -462,
	33, -462, -356, 639, -462, -464, 644, 78, 77, -314,
	-314, 50, -348, 76, -176, 28, 76, 82, 143, 81,
	-175, 81, -176, -192, 81, 84, 84, 76, -227, 28,
	-455, -149, -402, -403, -404, 90, 651, 100, 260, 261,
	217, 262, 263, 264, -401, -305, -305, -305, -427, -440,
	-441, -439, 340, 360, 361, 348, 99, 81, 81, 81,
	-426, 331, 99, 340, 21, 28, 21, 28, 81, 81,
	81, 81, 84, 75, -234, -262, -320, -149, -450, -416,
	-450, 334, -416, -416, 16, -416, 330, -54, 78, 78,
	-365, 631, -464, 528, 620, 50, -341, -213, 220, 221,
	-305, -305, -294, -348, 50, -384, -386, 122, -289, 710,
	711, 710, 711, 34, 192, 748, 718, -341, -352, -301,
	34, 365, 365, 365, 365, -213, -272, 203, 50, -289,
	203, 365, 365, 96, 652, 81, 81, 613, 627, -453,
	-452, -436, 84, 84, 84, 84, -317, 90, 74, -162,
	278, -431, 74, -181, -175, -186, -175, 78, -290, 77,
	77, 77, 134, -464, -405, -260, -209, 19, 21, -320,
	82, -320, 82, -176, -176, -176, -176, -465, -465, -465,
	-176, -465, 81, -176, -176, -197, 122, 32, -243, -300,
	-465, -174, -464, -465, -465, 77, -200, -464, -465, -211,
	-249, -122, -122, -122, -122, -229, -301, -352, -324, -452,
	81, 81, 81, 613, 627, -453, -371, -370, 75, 211,
	90, 617, 635, 748, 718, -368, -228, -228, -351, -351,
	-234, -465, -464, -234, -465, 78, 78, -369, -9, -225,
	24, -226, -404, 81, 264, 260, 264, 264, 264, 264,
	265, -431, -421, 90, 338, -439, 349, 716, 333, 362,
	84, 84, 121, 35, 36, -433, 21, 652, -424, 339,
	81, 81, 339, 81, 81, 331, -455, 41, 78, -405,
	-449, 28, -450, -449, 351, -54, -54, -416, -54, -362,
	640, 84, -176, -464, -464, -276, 267, 78, 82, -306,
	-306, 76, -351, -351, -465, 77, -290, 33, 33, -213,
	-301, -301, -289, -290, -289, 203, -289, -464, 199, 77,
	-465, 328, 81, 367, -163, -432, -183, -176, -176, -176,
	-457, -458, -291, 723, -406, 43, -409, 44, -219, 574,
	-210, -122, -196, -124, -122, -465, -465, -465, -465, -112,
	119, 652, -465, -465, -211, 21, 50, -236, -174, -9,
	-464, -201, -465, -229, -301, -465, -370, -452, -352, 81,
	-352, -352, 78, -331, 760, 759, -176, 78, 78, -225,
	-227, 251, -227, 41, 41, 256, 257, -430, 81, 81,
	33, 350, 186, 33, 84, 186, 576, 339, 81, 82,
	340, 340, 21, -176, -406, -414, -449, -54, -385, -464,
	21, -465, -234, -176, -464, 109, -369, -294, 76, -386,
	55, -176, 142, 142, 203, -289, -384, -149, -452, -225,
	-430, 132, -428, 275, -465, -465, -465, -465, 77, -305,
	24, 81, 607, -407, -408, -338, 47, 21, -218, -220,
	-290, 77, -465, 650, 71, 653, -222, 124, 123, -195,
	14, -9, 84, 81, 81, 218, -465, -372, -371, -280,
	652, -9, 252, -27, -4, -16, -17, -18, -19, -21,
	-73, -22, -23, -28, -29, -24, -83, -87, -88, -89,
	-85, -96, -94, -95, -91, -90, -32, -34, -35, -37,
	-40, -41, -38, -39, -36, -30, -33, -42, -25, -43,
	-44, -45, -50, -51, -31, -52, -46, 103, 205, 447,
	309, 320, 321, 322, 82, 325, 327, 323, 324, 319,
	329, 446, -317, 84, 33, 84, 33, 352, 340, 28,
	84, -316, 204, 652, -384, -363, -465, -465, -234, 84,
	78, 76, -369, 236, -352, -301, -289, -465, -72, 652,
	-27, -317, 186, -429, 276, -181, -465, -458, -459, 607,
	29, 729, 528, 81, 48, 44, -410, 45, 46, 81,
	77, 28, -124, 61, 651, 654, -465, -223, 102, -224,
	121, 576, -180, 84, 186, -223, -244, -465, -149, -331,
	212, 279, 511, -225, -214, 254, 255, -225, -122, -57,
	-58, 104, -122, 82, -67, -296, 312, 313, 314, -291,
	82, 82, -56, -27, 80, -56, -122, 82, 82, -467,
	16, 58, -176, 108, -56, 328, 659, 659, 81, -236,
	84, 332, -465, 620, 50, -465, -372, -369, 78, 237,
	-301, 288, -225, 328, -175, -181, -432, -273, 81, 607,
	-464, 528, 21, 21, 21, 21, -220, -221, 61, -224,
	126, 127, 252, 126, 127, -175, 76, 351, 212, 212,
	-280, -225, 82, 82, -57, 108, 106, -58, -122, 105,
	310, 311, 315, -305, 77, 763, 446, 322, 325, 327,
	763, 328, 82, 16, 763, -225, -245, 34, 43, 124,
	33, 337, 26, -417, -464, -276, 78, -372, -464, -225,
	-183, -432, -300, -460, -461, 377, 92, 33, 81, -457,
	-464, 81, 81, 81, 81, 652, 99, -182, -234, 351,
	351, -227, 108, 106, 103, -56, 105, -56, 24, 24,
	24, -320, -291, 108, -27, 108, -56, -56, -56, -122,
	326, -56, 96, 108, -27, -244, 8, -176, -464, -372,
	-176, 234, -27, -461, 92, 33, -460, 92, 33, 74,
	74, -175, -465, -457, 653, -224, 78, -20, -26, -19,
	-25, -16, -17, -18, 446, 652, 103, -56, 763, -56,
	763, -68, 84, -9, -66, -65, 84, -68, 317, 100,
	318, 82, -322, 322, 82, 763, 763, 763, 328, -122,
	763, -61, 82, -225, -417, -465, -176, -465, -465, -225,
	74, -175, 74, -175, 682, 377, 682, 377, 74, -465,
	654, -391, -392, 74, -225, -56, 108, -128, 763, 108,
	763, 108, 106, -59, -60, 107, -27, 77, 316, 33,
	108, 108, 326, -56, 108, 108, 77, -366, 641, -465,
	74, 74, 377, 377, 682, 377, -392, 74, -391, 74,
	15, 14, 763, 108, 103, 205, -56, 108, 106, -60,
	-122, -65, -176, 82, 322, -122, 763, 325, 327, 82,
	84, -366, 74, 74, -390, 219, 214, 217, 34, -390,
	108, 103, 763, 205, -56, 105, 82, 108, 108, 377,
	682, 213, 33, 92, 108, 763, -56, 325, 327, 205,
	108, 763, 82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1727, 1225, 1727, 0, 1225, 0, 1225, 0, -2,
	133, 930, 931, 932, 933, 0, 1808, 0, 0, 0,
	0, 0, -2, 1187, 1188, 1191, 1188, 1188, 1217, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 732, 0, 64, 0, 1331, 2757,
	-2, 1221, 1222, 1223, -2, -2, 0, 53, 0, 60,
	2, 1735, 0, 1238, 1227, 1735, 0, 0, 49, 0,
	0, 1225, 1225, 1225, 87, 88, 0, 119, 0, 121,
	0, 0, 1727, 1225, 0, 0, 0, 1812, 1812, 335,
	1812, 1812, 1827, 0, 1830, 333, 0, 1809, 1825, 1826,
	1828, 0, 0, 0, 0, 0, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 0, 0, 1101, 1422, 1424, 1425,
	1426, 1427, 1839, 1840, 2748, 2749, 2750, 2751, 2752, 2753,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2754, 2755, 2756, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 0, 0,
	0, 1106, 1107, 1108, 1109, 1110, 2742, 2743, 2744, 2745,
	2746, 2747, 1119, 1120, 0, 0, 0, 1178, 0, 1178,
	1138, 1139, 0, 1141, 0, 0, 0, 0, 0, 0,
	0, 1175, 1153, 1156, 1160, 0, 1735, 1735, 1175, 1166,
	0, 784, 785, 786, 1183, 1184, 1172, 1185, 1190, 1189,
	1198, 1198, 0, 1189, 1219, -2, 1219, 1359, 0, 461,
	463, 0, 484, 0, 487, 490, 1428, 0, -2, -2,
	1850, 1204, 0, 0, 1876, 1877, 0, 0, 0, 0,
	0, 2614, 233, 349, 274, 274, 274, 274, 274, 274,
	274, 0, 274, 274, 0, 274, 274, 274, 2630, 274,
	0, 274, 274, 274, 274, 274, 232, 348, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 338, 339, 340,
	0, 0, 0, 736, 1192, 741, 739, 0, 733, 730,
	731, 0, 80, 0, 67, 81, 1759, 1381, 1382, 1383,
	1328, 0, 1332, -2, 0, 1810, 0, 1815, 69, 1318,
	1319, 1320, -2, 0, 0, 1326, 1327, -2, 1478, 1839,
	0, 0, 1232, 0, 0, 1229, 1235, 0, 1742, 0,
	0, 117, 1226, 47, 48, 2758, 59, 0, 0, 1254,
	1309, 0, 1437, 2311, 1443, -2, 2224, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 2169, 0, 0, 0, 0,
	0, 2266, 1516, 1517, 1518, 1519, 1520, 1521, 2477, 2695,
	2696, 1705, 1709, 1710, 1711, 1712, 1713, 1714, -2, -2,
	-2, 1688, 1689, 1703, 0, 2748, 2749, 2751, 2752, 2753,
	1777, 0, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 2292, 2355, 2243, 2360, 2188, 2754,
	2180, 2755, 2257, 2384, 2385, 2756, 2300, 2727, 0, -2,
	2409, 2348, -2, -2, -2, 1584, -2, -2, -2, 2738,
	2739, 2724, 2729, 2250, 2198, 2308, 2349, 2189, 2210, 2229,
	2278, 2279, 2281, 2313, 2314, 2332, 2341, 2359, 2170, 2171,
	2172, 2273, 2274, 2381, 2380, 2379, 2382, 2415, 2413, 2416,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2190, 2191, 2192, -2, 2197, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2208, 2209, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2225, 2226, 2228, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2244, 2245,
	2246, 2247, 2248, 2249, 2251, 2252, 2253, 2254, 2255, 2256,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2267, 2268,
	2269, 2270, 2271, 2272, 2275, 2276, 2277, 2280, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2293, 2294,
	-2, -2, 2297, 2298, 2299, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2309, 2310, 2312, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2342,
	2343, 2344, 2345, 2346, 2347, 2350, 2351, 2352, 2353, 2354,
	2356, 2357, 2358, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2383, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2410, 2411, 2412, 2414, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 0, 1814, 1814, 0, 104,
	2697, 0, 1784, -2, -2, 1786, 0, 0, 0, -2,
	-2, -2, -2, 2181, -2, 1688, 0, 0, 0, 0,
	2169, 2170, 2171, 2172, 2178, 2180, 2188, 2189, 2193, 2194,
	2195, 2196, 2198, 2207, 2210, 2224, 2227, 2229, 2243, 2250,
	2257, 2266, 2273, 2274, 2278, 2279, 2281, 2292, 2295, 2296,
	2300, 2308, 2311, 2313, 2314, 2315, 2332, 2341, 2348, 2349,
	2355, 2359, 2360, 2379, 2380, 2381, 2382, 2384, 2385, 2396,
	2406, 2407, 2408, 2409, 2413, 2415, 2416, 120, 1727, 0,
	122, 0, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 810, 1833, 1834, 0, 1735, 1238, 0, 0, 333,
	0, 0, 0, 0, 0, 1812, 328, 0, 0, 0,
	0, 1812, 335, 0, 0, 1081, 0, 1082, 0, 343,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1125, 1126, 1100, 0, 1102, 98, 1105, 0, 0, 0,
	0, 1123, 1124, 1127, 0, 1169, 1178, 1129, 0, 0,
	1812, 1812, 0, 0, 0, 0, 0, 1137, 0, 812,
	813, 1178, 1143, 1144, 1178, 1178, 1178, 1175, 0, 1175,
	1150, 1173, 1174, 1178, 0, 0, 0, 1155, 0, 0,
	0, 1163, 1164, 1178, 1168, 0, -2, 1196, -2, 1205,
	0, 0, 79, 1220, 1219, 0, 1224, 1360, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 486, 467, 0,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 1359, 0, 0, 1845, 1851, 1209, 1867,
	1868, 0, 1878, 1879, 278, 0, 278, 0, 0, 0,
	0, 200, 274, 0, 202, 274, 274, 274, 0, 274,
	274, 209, 210, 274, 212, 213, 214, 274, 216, 217,
	274, 219, 220, 221, 274, 274, 224, 274, 274, 227,
	228, 229, 230, 231, 347, 0, 0, 0, 2614, 1811,
	0, 0, 0, 0, 737, 742, 743, 738, 740, 709,
	0, 0, 0, 0, 714, 715, 716, 717, 0, 0,
	720, 721, 726, 726, 0, 65, 66, 0, 0, 0,
	1331, 1329, 0, -2, 935, -2, 685, 686, 687, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 1384, 0,
	0, 1387, 0, 0, 0, 0, 0, 1824, -2, 0,
	0, 0, 0, 1316, 0, 1333, 0, 1335, 0, -2,
	0, 0, 0, 1824, 1339, 1340, 1341, 1342, 1343, 0,
	0, 0, 1480, 0, 57, 58, 1233, 1234, 54, 62,
	63, 55, 1230, 1231, 1236, 1237, 56, 73, 0, 0,
	1736, 1739, 1740, 1741, 1728, 1729, 1732, 0, 0, 73,
	1239, 1240, 1241, 1242, 1243, 1244, 0, 1228, 0, 1255,
	0, 0, 0, 0, 1310, 0, 1313, 1314, 1315, 0,
	1441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1444, 0, 1458,
	0, 0, 0, 0, 0, 0, 0, 1509, 1510, 1511,
	1512, 1513, 1514, 0, 1706, 1707, 1708, 1245, 0, 0,
	0, 1245, 1245, 1245, 1245, 1245, 0, 1484, 2422, 0,
	2387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 1680, 0, 0,
	1581, 0, 1582, 1583, 1585, 1599, 0, 1586, 1587, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1594, 1595, 1596, 0, 0, 0, 0, 0, 0, 98,
	100, 1422, 0, 105, 107, 0, 0, 2697, 1787, 1788,
	676, 1802, 1803, 1804, 1805, 0, 773, 774, 1800, 0,
	1735, 827, 0, 558, 655, 576, 577, 578, 645, 580,
	647, 0, 647, 647, 1677, 1678, 647, 647, 647, 622,
	623, 624, 625, 626, 628, 629, 630, 631, 632, 0,
	0, 604, 645, 645, 645, 608, 635, 636, 637, 638,
	639, 640, 641, 642, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 650,
	650, 652, 652, 652, 652, 652, 558, 558, 558, 558,
	558, 0, 809, 1036, 1037, 0, 1742, 117, 1831, 1759,
	0, 0, 335, -2, 0, -2, 0, 1417, 0, 0,
	0, 0, 146, 371, 351, 131, 0, 0, 329, 334,
	330, 331, 332, 0, 0, 0, 0, 342, 0, 0,
	1089, 96, 1090, 1091, 1092, 1093, 1094, 344, 1095, 1096,
	373, 0, 1423, 1841, 1842, 1843, 1844, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 0, 0, 0, 1111, 1113,
	1117, 1118, 1112, 1114, 1121, 1115, 1122, 1167, 1128, 1179,
	0, 1181, 0, 0, 1359, 1133, 1134, 1135, 1136, 814,
	1142, 1145, 1146, 1152, 1178, 0, 1359, 1151, 1176, 1177,
	1154, 1472, 1157, 1597, 0, 1165, 1186, 1202, 0, 1197,
	0, 1203, 1207, 1206, 0, 1210, 1213, 1214, 1215, 1216,
	79, 1212, 0, 0, 0, 1218, 462, 464, 466, 485,
	0, 0, 488, 489, 491, 0, 1429, 1847, 0, 0,
	1870, 0, 1872, 1874, 0, 0, 279, 280, 281, 278,
	0, 234, 0, 296, 350, 0, 201, 0, 276, 203,
	204, 205, 274, 207, 208, 211, 215, 218, 222, 223,
	225, 226, 346, 278, 0, 0, 278, 0, 0, 0,
	735, 754, 0, 0, 1193, 1194, 0, 710, 711, 712,
	713, 728, 719, 722, 726, 0, 723, 726, 0, 0,
	82, 0, 0, 1761, 1764, 1765, 1766, 1767, 1768, 1769,
	1837, 1838, 0, 934, 688, 689, 690, 0, 771, 771,
	771, 681, 356, 383, 1377, 1379, 0, 1374, 1385, 1386,
	1388, 0, 1390, 0, 0, 1393, 1394, 1395, 1363, 0,
	0, 1325, 1477, 1479, 0, 0, 1431, 1337, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 0, 1354,
	0, 0, 0, 1355, 0, 1481, 1482, 1250, 1251, 0,
	0, 45, 0, 1743, 0, 0, 0, 0, 1731, 1733,
	1734, 0, 0, 1716, 0, 0, 70, 117, 117, 50,
	1438, 1439, 1440, 1442, 1459, 0, 1461, 1463, 1311, 1312,
	1256, 0, 1690, -2, 1692, 1693, -2, -2, -2, 1449,
	1450, 1474, 1475, 1476, 0, 0, 0, 0, 1472, 1454,
	0, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1508, 1612, 1613, 1614, 0, 1701, 0,
	1702, 1506, 0, 0, 0, 1715, 1507, 1696, 1515, 1480,
	1246, 1247, 1699, 1700, 1697, 1698, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 1556, 0, 0, 0,
	0, 0, 1490, 1705, 0, 1490, 1705, 0, 0, 2282,
	2394, 2174, 0, 0, 0, 1686, 1683, 0, 0, 0,
	0, 2742, 2743, 0, 1598, 0, 0, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 0, 0,
	0, 1282, 1283, 1284, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1592, 0, 102, 0, 1421, 0, -2, 0,
	0, 94, 95, 0, 0, 0, 1785, 0, 0, 0,
	110, 111, 106, 1789, 677, 0, -2, 1796, 1705, 1798,
	1690, 0, 1742, -2, 543, 544, 545, 546, 0, 791,
	800, 0, 0, 789, 0, 791, 791, 0, 787, 788,
	549, 658, 656, 657, 579, 0, 609, 0, 647, 647,
	1677, 1678, 611, 647, 647, 614, 647, 647, 617, 620,
	621, 627, 0, 0, 605, 606, 607, 596, 0, 597,
	650, 599, 0, 600, 601, 602, 603, 550, 551, 552,
	553, 554, 808, 0, 298, 0, 0, 0, 0, 0,
	126, 1813, 127, 0, 394, 395, 0, 300, 0, 336,
	337, 148, 0, 0, 352, 0, 137, 0, 538, 539,
	0, 1083, 0, 1085, 341, 1097, 1088, 0, 0, 0,
	0, 0, 99, 0, 1180, 1130, 1131, 1132, 1435, 0,
	0, 1147, 1175, 1178, 1170, 0, 0, 1158, 0, 1201,
	1199, 1208, 1211, 1356, 0, 0, 468, 469, 470, 492,
	0, 1848, 1849, 1846, 1869, 0, 1873, 1875, 0, 282,
	284, 0, 0, 190, 0, 0, 275, 0, 206, 0,
	0, 0, 0, 192, 0, 734, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 718,
	0, 724, 0, 725, 707, 708, 83, 1760, 0, 0,
	1330, 771, 0, 772, 0, 0, 1044, 937, 938, 939,
	1046, 0, -2, 1042, 1042, 771, 1042, 0, 0, 0,
	0, 0, 0, 976, 771, 1042, 1819, 0, 989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1034, 1035,
	771, 771, 771, 771, 771, 771, 771, 771, 0, 0,
	771, 771, 771, 771, 771, 771, 771, 771, 771, 771,
	771, 771, 771, 771, 771, 771, 771, 771, 771, 771,
	771, 771, 771, 0, 771, 771, 158, 357, 1079, 0,
	1371, 1378, 0, 0, 1372, 0, 1373, 1389, 1391, 1392,
	1321, 0, 1363, 1317, -2, 0, 1367, 1336, 1431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 0, 74, 2490, 0, 77, 0,
	0, 1737, 1738, 1730, 0, 1806, 1807, 1717, 1718, 1435,
	0, 0, 1248, 1460, 1462, 1464, 0, 1480, 1451, 1472,
	1455, 0, 1452, 0, 1446, 1554, 0, 0, 0, 0,
	0, 0, 1485, 1552, 1553, 1555, 0, 0, 0, 1559,
	0, 0, 1563, 0, 0, 1605, 0, 0, 1606, 1568,
	0, 0, 0, 0, 0, 1574, 1727, 0, 1684, 0,
	0, 1577, 1578, 1579, 1580, 1600, 0, 0, 0, 0,
	1601, 1602, 1603, 1604, 1541, 0, 1542, 0, 0, 0,
	0, 0, 0, 1549, 1550, 1551, 1265, 1265, 1265, 1265,
	1265, 1265, 1265, 1265, 1265, 1265, 1265, 1265, 1593, 0,
	0, 1420, 0, 1435, 0, 1435, 1435, 101, 0, 1430,
	108, 109, 0, 0, 115, 678, 679, 680, 1797, 0,
	299, 540, 828, 681, 905, 771, 771, 771, 0, 771,
	771, 771, 771, 771, 0, 0, 771, 771, 771, 771,
	771, 771, 771, 771, 771, 771, 771, 771, 771, 771,
	771, 771, 771, 0, 771, 771, 771, 771, 771, 771,
	0, 771, 771, 0, 0, 0, 0, 799, -2, -2,
	791, 791, 791, 790, 791, 791, 782, 792, 793, 783,
	806, 559, 560, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 0, 0, 0, 574, 0, 0, 0,
	0, 667, 0, 702, 704, 0, 0, 575, 659, 0,
	0, 0, 610, 647, 618, 612, 613, 615, 616, 0,
	643, 0, 0, 598, 0, 824, 0, 1832, 116, 1759,
	0, 0, 396, 397, 398, 1418, 0, 301, 302, 0,
	0, 0, 0, 0, 158, 0, 372, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 1087, 1098, 1099, 97,
	345, 374, 0, 0, 1116, 1140, 0, 815, 816, 1359,
	1149, 1473, 1159, 1161, 1162, 1357, 1358, 102, 0, 1871,
	0, 0, 0, 0, 0, 0, 294, 277, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 755, 0, 0, 0, 727, 1762,
	1763, 0, 694, 695, 696, 697, 698, 699, 700, 904,
	681, 1045, 0, 0, 0, 0, 1047, 912, 0, 791,
	0, 0, 946, 947, 0, 1043, 926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 968, 969, 970, 0, 971, 0, 0,
	0, 0, 0, 0, 0, 1820, 1821, 1822, 988, 0,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1027, 1028, 885, 886, 887, 888, 889, 901,
	902, 903, 890, 891, 892, 0, 0, 1038, 0, 386,
	0, 0, 0, 1375, 0, 1380, 0, 1365, 1322, -2,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1483, 1252, 0, 0, 0,
	75, 668, 1744, 1745, 46, 1719, 71, 72, 117, 1257,
	1704, 0, 1453, 0, 1456, 1522, 1265, 1265, 1265, 1265,
	1265, 0, 645, 645, 645, 1662, 645, 652, 1665, 1667,
	1668, 1669, 645, 1671, 645, 1674, 1676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1681, 1576, 1687, 0, 0, 0, 0, 0, 1258, 1259,
	1261, 1543, 1544, 1545, 1546, 1547, 1548, 1526, 1266, 1527,
	1528, 1530, 1531, 1533, 1534, 1535, 1536, 1538, 1539, 1540,
	1770, 1770, 0, -2, 1751, 0, 1748, 1331, 1757, 1758,
	0, 1435, 1778, 0, 0, 0, 0, 1727, 1435, 92,
	93, 0, 112, 113, 114, 829, 0, 0, 0, 771,
	0, 771, 0, 0, 0, 0, 0, 771, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 860, 0, 0, 0,
	0, 0, 0, 871, 872, 0, 0, 0, 0, 794,
	645, 645, 0, 789, 798, 775, 777, 778, 779, 781,
	0, 807, 561, 0, 0, 572, 0, 0, 673, 674,
	675, 660, 0, 0, 663, 664, 0, 1447, 1448, 1597,
	1597, 1597, 1597, 1597, 1597, 0, 0, 0, 0, 1597,
	1597, 1597, 0, 701, 703, 705, 706, 646, 648, 649,
	619, 633, 0, 634, 0, 653, 0, 811, 825, 826,
	0, 118, 0, 137, 0, 308, 0, 304, 0, 0,
	0, 0, 166, 149, 150, 151, 153, 154, 0, 0,
	0, 147, 0, 354, 0, 359, 360, 361, 0, 0,
	0, 0, 0, 1084, 1086, 0, 0, 1362, 1104, 1436,
	1178, 668, 0, 294, 283, 285, 286, 0, 294, 297,
	191, 0, 0, 0, 0, 0, 0, 192, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 0, 0, 729,
	691, 692, 693, 936, 940, -2, 1042, 0, 0, 918,
	907, 0, 0, 916, 917, 913, 0, 1039, 0, 0,
	1831, 789, 1827, 0, 0, -2, 948, 949, 972, 973,
	974, 0, 1049, 0, 0, 0, 0, 954, 955, 956,
	957, 0, 771, 0, 0, 0, 0, 0, 0, 977,
	978, 979, 980, 1039, 0, 0, 984, 0, 0, 0,
	0, 0, 1056, 0, 0, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1033, 990, 991, 992, 993, 994, 995,
	996, 997, 0, 0, 1000, 881, 882, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 878, 879, 880, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 893, 894, 895, 896,
	897, 898, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 0, 1031, 0, 159, 160, 0, 0, 0,
	0, 390, 387, 388, 0, 384, 0, 383, 0, 0,
	0, 1364, 0, 1334, 1368, 1432, 1433, 1434, 1344, 1345,
	0, 1347, 1348, 0, 1350, 1351, 0, 1370, 0, 0,
	78, 1860, 669, 1724, 0, 1249, 1523, 1457, 1525, 1529,
	1524, 1532, 1537, 1557, 1657, 668, 668, 1663, 1664, 1666,
	1670, 1672, 1673, 1675, 1561, 1558, 1560, 1562, 0, 0,
	0, 0, 1569, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 1590, 1591, 1263, 1262, 84, 0, 85, 1770,
	0, 0, 0, 0, 0, 0, -2, -2, -2, 2153,
	2117, 1755, 1772, 0, 0, 1727, 0, 0, 0, 0,
	0, 1735, 91, 830, 831, 832, 0, 771, 0, 835,
	836, 838, 839, 840, 0, 0, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 0, 875, 0, 877, 759, 0, 1732,
	1732, 791, 791, 0, 0, 0, 0, 670, 671, 672,
	661, 662, 0, 666, 644, 0, 0, 0, 0, 116,
	136, 0, 117, 309, 310, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 303, 305, 306, 307, 383, 184,
	167, 168, 0, 0, 0, 0, 0, 155, 156, 157,
	353, 0, 0, 358, 0, 0, 0, 0, 138, 139,
	0, 141, 137, 0, 0, 1148, 1860, 1419, 287, 294,
	287, 0, 192, 192, 0, 192, 193, 199, 756, 757,
	920, 0, 0, 0, 0, 914, 0, 942, 1040, 0,
	558, 558, 0, 791, 791, 0, 1071, 0, 975, 950,
	952, 951, 953, 0, 0, 960, 961, 1039, 0, 965,
	0, 1050, 1051, 1052, 1053, 981, 0, 0, 0, 0,
	0, 1054, 1055, 0, 0, 998, 999, 1029, 1030, 0,
	899, 161, 162, 163, 164, 165, 1075, 0, 0, 1080,
	385, 1079, 0, 377, 392, 393, 0, 1376, 1366, 0,
	0, 0, 1253, 0, 1862, 1856, 1277, 0, 0, 1658,
	1659, 1660, 1661, 0, 0, 0, 0, 1570, 1571, 1572,
	1607, 1575, 1682, 0, 0, 1727, 0, 0, 86, 1363,
	-2, 1749, 0, 0, 1756, 1331, 1774, 0, 103, 1735,
	1779, 1780, 1781, 1782, 1783, 90, 833, 0, 837, 883,
	884, 841, 842, 873, 874, 0, 758, 762, 0, 771,
	0, 771, 771, 769, 770, 795, 796, 797, 776, 780,
	0, 555, 0, 0, 665, 651, 654, 0, 116, 118,
	0, 118, 311, 312, 313, 314, 316, 317, 0, 0,
	0, 386, 130, 0, 0, 169, 0, 0, 0, 0,
	179, 180, 181, 182, 183, 152, 0, 0, 355, 0,
	364, 366, 0, 365, 367, 0, 135, 0, 1361, 1862,
	187, 0, 287, 189, 295, 194, 196, 192, 195, 1069,
	0, 919, 0, 0, 0, 0, 0, 941, 1041, 547,
	548, 0, 1831, 0, 1048, 0, 0, 0, 959, 962,
	963, 966, 982, 983, 0, 0, 987, 0, 0, 0,
	1032, 116, 391, 389, 386, 375, 379, 0, 0, 0,
	0, 1397, 0, 2582, 76, 1864, -2, 0, 68, 0,
	1725, 1726, 1720, 1721, 1723, 1564, 1566, 1565, 1567, 0,
	0, 0, 1588, 1589, 1267, 0, 0, 1747, 1750, 1752,
	0, 1773, 1775, 89, 834, 876, 763, 764, 0, 766,
	0, 0, 0, 570, 556, 557, 0, 573, 760, 142,
	0, 0, 79, 318, 319, 320, 321, 390, 185, 186,
	170, 171, 0, 173, 174, 0, 0, 0, 369, 0,
	362, 363, 0, 1103, 1816, 288, 188, 197, 906, 0,
	912, 908, 0, 0, 0, 0, 0, 0, 0, 1072,
	0, 958, 771, 0, 0, 986, 0, 1058, 900, 79,
	390, 0, 381, 0, 1346, 1349, 1352, 0, 0, 0,
	0, 0, 0, 1863, 1858, 0, 1855, 0, 1278, 1279,
	0, 0, 1573, 0, 0, 0, 0, 0, 0, 1264,
	0, 0, 765, 767, 768, 0, 555, 123, 761, 124,
	0, 116, 399, 116, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 0, 0, 0,
	0, 0, 0, 79, 0, 79, 0, 0, 0, 444,
	0, 79, 0, 0, 175, 0, 177, 178, 368, 0,
	140, 1363, 0, 0, 0, 0, 909, 910, 0, 915,
	760, 0, 0, 0, 0, 967, 985, 1057, 0, 1034,
	116, 1076, 0, 376, 0, 377, 1823, 1398, 1399, 0,
	0, 1400, 0, 0, 0, 0, 1861, 0, 0, 1857,
	0, 0, 1722, 1608, 0, 1611, 1260, 1268, 0, 1271,
	0, 0, 0, 1307, 0, 1269, 1771, -2, 0, 571,
	0, 0, 0, 142, 116, 0, 0, 129, 0, 0,
	414, 0, 0, 1833, 0, 0, -2, -2, -2, 1835,
	441, 442, 0, 493, 0, 0, 0, 458, 459, 0,
	445, 0, 460, 322, 0, 116, 172, 176, 370, 42,
	0, 0, 1070, 0, 914, 911, 943, 0, 760, 0,
	964, 1059, 1077, 116, 0, 377, 380, 0, 1403, 0,
	0, 0, 0, 0, 0, 0, 1280, 1281, 1609, 0,
	1272, 1273, 1274, 1275, 1276, 0, 0, 143, 0, 0,
	125, 118, 400, 401, 0, 0, 79, 415, 0, 79,
	0, 0, 0, 668, 0, 79, 79, 79, 79, 0,
	79, 79, 0, 446, 79, 79, 44, 0, 1817, 1818,
	289, 290, 291, 293, 0, 0, 760, 945, 0, 79,
	378, 382, 1396, 1404, 1405, 0, 0, 0, 1412, 0,
	0, 1865, 1866, 1859, 1853, 0, 0, 1308, 0, 144,
	145, 79, 0, 79, 412, 0, 79, 0, 0, 0,
	0, 676, 1836, 0, 494, 323, 0, 0, 0, 0,
	0, 0, 0, 325, 116, 43, 0, 0, 0, 944,
	0, 2301, 116, 1406, 0, 0, 1407, 0, 0, 0,
	0, 0, 1401, 0, 0, 1270, 801, 116, 402, 403,
	404, 405, 406, 407, 79, 0, 410, 0, 79, 0,
	79, 424, 425, 426, 79, 433, 435, 436, 437, 0,
	439, 440, 428, 449, 324, 79, 79, 79, 79, 0,
	79, 443, 447, 132, 292, 923, 0, 1073, 1074, 1078,
	0, 0, 0, 0, 1408, 1409, 1413, 1415, 0, 1402,
	1610, 802, 803, 0, 128, 0, 409, 80, 79, 0,
	-2, 0, 79, 0, 421, 0, 427, 0, 438, 0,
	326, 0, 0, 0, 0, 0, 0, 921, 0, 923,
	0, 0, 0, 0, 1414, 1416, 804, 0, 805, 0,
	0, 0, 79, 0, 413, 417, 0, 0, 79, 422,
	0, 434, 429, 327, 450, 0, 79, 452, 455, 448,
	924, 922, 0, 0, 817, 819, 820, 0, 0, 818,
	408, 411, 79, 419, 0, 79, 451, 0, 0, 1410,
	1411, 821, 822, 823, 0, 79, 0, 453, 456, 418,
	0, -2, 454, 457, 420,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 763,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:557
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:564
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:568
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:608
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:613
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:617
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:623
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:645
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:657
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:704
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:712
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:716
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:723
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:727
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:731
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:740
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:759
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:767
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:771
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:779
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:789
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:812
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:826
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:834
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:838
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:842
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:851
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:855
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:863
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:873
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:878
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:882
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:898
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:910
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:935
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:960
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1005
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1023
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1046
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1059
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1072
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1093
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1101
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1126
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1130
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1140
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1147
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1197
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1202
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1241
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1268
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1288
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1309
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1327
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1345
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1369
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1391
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1423
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1438
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1472
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1484
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1497
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1511
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1515
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1533
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1554
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1562
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1566
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1571
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1575
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1580
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1598
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1616
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1620
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1625
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1629
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1639
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1649
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1653
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1657
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1662
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1676
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1682
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1690
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1698
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1702
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1706
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1710
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1714
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1722
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1726
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1739
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1754
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1770
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1786
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1801
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1813
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1826
		{
			yyVAL.val = false
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1830
		{
			yyVAL.val = true
		}
	case 194:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1838
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 195:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1854
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 196:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1869
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 197:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1885
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1901
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 199:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1914
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1933
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1949
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1953
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2029
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2049
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2067
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2113
		{
			yyVAL.val = []string(nil)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2132
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2154
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2162
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2166
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2171
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2175
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2179
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2183
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2187
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 292:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2191
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2195
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2204
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2209
		{
			yyVAL.val = false
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.val = true
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2220
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2233
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2245
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2265
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2269
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2273
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2277
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2282
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2326
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2330
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2334
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2338
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2348
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2352
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2361
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2365
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 327:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2369
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2394
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2398
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2403
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2407
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2412
		{
			yyVAL.val = ""
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2416
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2420
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2440
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2468
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2508
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2512
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2516
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2520
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2525
		{
			yyVAL.val = &Authentication{}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.val = yyDollar[1].val
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2535
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2543
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2547
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2551
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 363:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2555
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2559
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2563
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2567
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2571
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2577
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2581
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2585
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2591
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2605
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2611
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2615
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2624
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2629
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2638
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2647
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2651
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2655
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2660
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.val = EventStatus_Enable
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.val = EventStatus_Disable
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2672
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2677
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.val = BeforeStr
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.val = AfterStr
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2707
		{
			yyVAL.val = InsertStr
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.val = UpdateStr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.val = DeleteStr
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2720
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2745
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2749
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2755
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2759
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2763
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2767
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2777
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2783
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2789
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 418:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2794
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2799
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 420:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2805
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2817
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2823
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2829
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2833
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2837
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 427:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2841
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2845
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2852
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2898
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2902
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2918
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2924
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2929
		{
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2932
		{
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2940
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2946
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2950
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 451:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2954
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2965
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 453:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2969
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 454:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2973
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 455:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2984
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 456:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2988
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 457:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2992
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3003
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3009
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3025
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3029
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3039
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3043
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3053
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3063
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3085
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3089
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3097
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3119
		{
			yyVAL.val = &Resignal{}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3123
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3127
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3139
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3145
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3161
		{
			yyVAL.val = Exprs(nil)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			yyVAL.val = Exprs(nil)
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3169
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3175
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3179
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3185
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3233
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3260
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3290
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3310
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3314
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3318
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3328
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3352
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3396
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3407
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3419
		{
			yyVAL.val = BoolVal(false)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			yyVAL.val = BoolVal(false)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.val = BoolVal(true)
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3432
		{
			yyVAL.val = ColumnType{}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3436
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3462
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3472
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3483
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3494
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3505
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3516
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3538
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3549
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3560
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3583
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3625
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3659
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3663
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3671
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3693
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3700
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3707
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3714
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3721
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3728
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3742
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3751
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3755
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3759
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3763
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3767
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3781
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3785
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3789
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3797
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3801
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3809
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3813
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3817
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3869
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3874
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3908
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3924
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3928
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3933
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3941
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3950
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3958
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3962
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3968
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3976
		{
			yyVAL.val = BoolVal(false)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.val = BoolVal(false)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.val = BoolVal(true)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3989
		{
			yyVAL.val = BoolVal(false)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.val = BoolVal(true)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3999
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4003
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4021
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4029
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4035
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.val = BoolVal(true)
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4046
		{
			yyVAL.val = ""
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4056
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4064
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4068
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4072
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4076
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.val = ""
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4092
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4096
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4100
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4105
		{
			yyVAL.val = false
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.val = true
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4114
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4124
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4136
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4150
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4154
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4158
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4162
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4166
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4170
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4176
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4180
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4184
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4190
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.val = colKeyPrimary
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.val = colKey
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4204
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.val = colKeyUnique
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4212
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4224
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4228
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4234
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4256
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4300
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4313
		{
			yyVAL.val = false
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4315
		{
			yyVAL.val = true
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4318
		{
			yyVAL.val = ""
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4320
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4329
		{
			yyVAL.val = ""
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4335
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4345
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4355
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4384
		{
			yyVAL.val = false
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4386
		{
			yyVAL.val = true
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.bytes = nil
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4413
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4421
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4425
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4429
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4433
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4437
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4441
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4451
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4457
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4461
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4467
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4471
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4476
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4496
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4500
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4513
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4527
		{
			yyVAL.val = ""
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.val = ":="
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4553
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4569
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4582
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4586
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4592
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4610
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4615
		{
			yyVAL.val = ""
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4624
		{
			yyVAL.val = ""
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4628
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4642
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4648
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4652
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4658
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4662
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 801:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4672
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4676
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 803:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4680
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4684
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4688
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4693
		{
			yyVAL.bytes = []byte(nil)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4703
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4717
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4723
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4732
		{
			yyVAL.val = ""
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4736
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4740
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4746
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4752
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4758
		{
			yyVAL.val = Restrict
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4762
		{
			yyVAL.val = Cascade
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.val = NoAction
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4770
		{
			yyVAL.val = SetDefault
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4774
		{
			yyVAL.val = SetNull
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4779
		{
			yyVAL.val = true
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.val = true
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.val = false
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4792
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4796
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4800
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4806
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4810
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4814
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4818
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4822
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4834
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4850
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4854
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4886
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4910
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4926
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4930
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4934
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4938
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4942
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4946
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4958
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4962
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4966
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4970
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4974
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4978
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4982
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4986
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4990
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5000
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5004
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5008
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5014
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5018
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5024
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5057
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5075
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5091
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5097
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5101
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5112
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5116
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5122
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5135
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5142
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5151
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5159
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5169
		{
			yyVAL.val = false
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5173
		{
			yyVAL.val = true
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5178
		{
			yyVAL.val = ""
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5182
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5197
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5201
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5206
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5210
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 922:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5219
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5230
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5234
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5239
		{
			yyVAL.val = ""
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5243
		{
			yyVAL.val = ""
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5247
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5252
		{
			yyVAL.val = string("")
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5256
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5268
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5282
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5297
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5317
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5330
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5344
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5348
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5354
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5372
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 943:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5391
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5408
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5432
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5454
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5468
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5482
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5500
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5519
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5529
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5539
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5549
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5559
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5569
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5579
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5589
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5599
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5614
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5630
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5640
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5650
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5666
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5680
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5694
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5708
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5722
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5736
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5749
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5762
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5772
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5782
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5794
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5808
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5822
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5839
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5849
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5859
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5869
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5879
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5889
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5906
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5919
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5934
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5948
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5969
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5990
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6009
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6019
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6031
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6035
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6039
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6043
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6047
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6051
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6055
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6059
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6063
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6067
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6083
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6095
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6103
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6115
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6123
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6139
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6147
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6179
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6183
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6187
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6191
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6195
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6199
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6203
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6209
		{
			yyVAL.val = true
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6213
		{
			yyVAL.val = false
		}
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6223
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6249
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6253
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6257
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6262
		{
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6264
		{
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6267
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6271
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6277
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6281
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6287
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6291
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6295
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6299
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6303
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6307
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6311
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6315
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6319
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6323
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6327
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1059:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6331
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6335
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6339
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6352
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6356
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6360
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6364
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6368
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6372
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6376
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6381
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6385
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6391
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6395
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1073:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6401
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1074:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6405
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1075:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6411
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1076:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6441
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1077:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6467
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1078:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6495
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6525
		{
			yyVAL.val = EventName{}
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6529
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6535
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6539
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6551
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6575
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6591
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6595
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6601
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6626
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6646
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6664
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6681
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6698
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6718
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6738
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6753
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6768
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6787
		{

		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6791
		{
			yyVAL.val = Restrict
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6795
		{
			yyVAL.val = Cascade
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6801
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6814
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6829
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1103:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6835
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6839
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6843
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6856
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6860
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6864
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6868
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6874
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6878
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6885
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6889
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6895
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6899
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6903
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6907
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6913
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6917
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6921
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6925
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6931
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6942
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6953
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6964
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6976
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6988
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7001
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7014
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7025
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7036
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7047
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7058
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7068
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7078
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7091
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7101
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7112
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7122
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7132
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7143
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7155
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7167
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7181
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7194
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7205
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7219
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7231
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7241
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7252
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7265
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7275
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7287
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7298
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7311
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7320
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7331
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7342
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7353
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7364
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7378
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7388
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7398
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7408
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7420
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7426
		{
			yyVAL.val = false
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7430
		{
			yyVAL.val = true
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7436
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7440
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7446
		{
			yyVAL.val = ""
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7450
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7454
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7460
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7464
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7468
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7472
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7478
		{
			yyVAL.val = ""
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7482
		{
			yyVAL.val = SessionStr
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7486
		{
			yyVAL.val = GlobalStr
		}
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7492
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7504
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7517
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7529
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7533
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7539
		{
			yyVAL.val = &Begin{}
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7543
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7549
		{
			yyVAL.val = &Begin{}
		}
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7553
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7557
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7561
		{
			yyVAL.val = &Begin{}
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7566
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7570
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7575
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7579
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7584
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7588
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7594
		{
			yyVAL.val = &Commit{}
		}
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7600
		{
			yyVAL.val = &Rollback{}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7606
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7612
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7616
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7620
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7624
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7630
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7636
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7640
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7644
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7650
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7658
		{
			yyVAL.val = ""
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7662
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7667
		{
			yyVAL.val = false
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7671
		{
			yyVAL.val = true
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7683
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7703
		{
			setAllowComments(yylex, true)
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7707
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7715
		{
			yyVAL.val = Comments(nil)
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7719
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7725
		{
			yyVAL.val = UnionStr
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7729
		{
			yyVAL.val = UnionAllStr
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7733
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7739
		{
			yyVAL.val = IntersectStr
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7743
		{
			yyVAL.val = IntersectAllStr
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7747
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7753
		{
			yyVAL.val = ExceptStr
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7757
		{
			yyVAL.val = ExceptAllStr
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7761
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7766
		{
			yyVAL.val = QueryOpts{}
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7770
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7781
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7792
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7803
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7814
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7825
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7837
		{
			yyVAL.val = ""
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7841
		{
			yyVAL.val = AllStr
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7845
		{
			yyVAL.val = DistinctStr
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7851
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7859
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7870
		{
			yyVAL.val = &StarExpr{}
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7874
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7878
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7882
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7888
		{
			yyVAL.val = &StarExpr{}
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7892
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7896
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7900
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7906
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7910
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7916
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7921
		{
			yyVAL.val = ColIdent{}
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7924
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7929
		{
			yyVAL.val = Exprs(nil)
		}
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7933
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7938
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7942
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7947
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7951
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7955
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7962
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7985
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8000
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8004
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8008
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8012
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8019
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8027
		{
			yyVAL.val = Window(nil)
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8030
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8036
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8039
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8045
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8085
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8089
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8094
		{
			yyVAL.val = ColIdent{}
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8098
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8102
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8106
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8112
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8116
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8120
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8126
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8130
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8140
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8144
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8159
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8174
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8180
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8186
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8194
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8200
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8204
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8209
		{
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8211
		{
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8215
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8225
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8240
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8244
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8248
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8252
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8258
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8262
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8266
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8270
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8274
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8280
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8284
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8288
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8294
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8298
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8302
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8306
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8310
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8314
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8320
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8326
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8330
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8336
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8340
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8344
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8349
		{
			yyVAL.val = Expr(nil)
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8353
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8359
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8363
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8368
		{
			yyVAL.val = Columns(nil)
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8372
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8378
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8382
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8388
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8392
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8398
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8402
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8416
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8420
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8424
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8428
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8434
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8436
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8440
		{
			yyVAL.val = JoinCondition{}
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8442
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8446
		{
			yyVAL.val = JoinCondition{}
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8448
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8453
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8457
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8463
		{
			yyVAL.val = JoinStr
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8467
		{
			yyVAL.val = JoinStr
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8471
		{
			yyVAL.val = JoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8477
		{
			yyVAL.val = StraightJoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8483
		{
			yyVAL.val = LeftJoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8487
		{
			yyVAL.val = LeftJoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8491
		{
			yyVAL.val = RightJoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8495
		{
			yyVAL.val = RightJoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8499
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8503
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8509
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8513
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1396:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8523
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8530
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8535
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8541
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8545
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8549
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1402:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8554
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8561
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8565
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8569
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8573
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8577
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8581
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8585
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8589
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1411:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8593
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8597
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8603
		{
			yyVAL.val = &NullVal{}
		}
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8607
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8613
		{
			yyVAL.val = &NullVal{}
		}
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8617
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8623
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8627
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8633
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8639
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8643
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8649
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8653
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8657
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8661
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8665
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8669
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8675
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8679
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8685
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8690
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8694
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8698
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8702
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8707
		{
			yyVAL.val = Expr(nil)
		}
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8711
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8717
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8721
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8725
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8729
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8733
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8737
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8741
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8745
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8751
		{
			yyVAL.val = ""
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8755
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8761
		{
			yyVAL.val = BoolVal(true)
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8765
		{
			yyVAL.val = BoolVal(false)
		}
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8771
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8775
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8779
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8783
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8787
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8791
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8795
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8799
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1457:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8803
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8807
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8813
		{
			yyVAL.val = IsNullStr
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8817
		{
			yyVAL.val = IsNotNullStr
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8821
		{
			yyVAL.val = IsTrueStr
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8825
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8829
		{
			yyVAL.val = IsFalseStr
		}
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8833
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8839
		{
			yyVAL.val = EqualStr
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8843
		{
			yyVAL.val = LessThanStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8847
		{
			yyVAL.val = GreaterThanStr
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8851
		{
			yyVAL.val = LessEqualStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8855
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8859
		{
			yyVAL.val = NotEqualStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8863
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8868
		{
			yyVAL.val = Expr(nil)
		}
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8872
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8878
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8882
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8886
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8892
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8898
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8902
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8907
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8914
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8918
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8924
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8928
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8934
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8938
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8942
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8946
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8950
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8954
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8958
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8962
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8966
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8970
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8974
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8978
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8982
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8986
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8990
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8994
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8998
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9002
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9006
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9010
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9014
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9018
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9022
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9026
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9030
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9034
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9042
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9056
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9060
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9064
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9084
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1523:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9088
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1524:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9098
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9102
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9106
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9110
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9114
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9118
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9122
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9126
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9130
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9134
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9138
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9142
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9146
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9150
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9154
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9158
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9162
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9171
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9175
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9179
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9183
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9187
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9191
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9195
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9199
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9203
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9207
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9211
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9222
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9226
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9230
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9234
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9238
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1557:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9242
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1558:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9246
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9250
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1560:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9254
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1561:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9258
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9262
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9266
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1564:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9270
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1565:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9274
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1566:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9278
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9282
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9286
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9290
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1570:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9294
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1571:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9298
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1572:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9302
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1573:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9306
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9310
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1575:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9314
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9318
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9322
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9326
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9331
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9335
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9346
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9350
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9354
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9359
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9363
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9367
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9371
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1588:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9375
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1589:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9379
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1590:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9383
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1591:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9387
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9395
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9399
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9403
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9407
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9411
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9424
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9428
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9438
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9442
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9446
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9450
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9454
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9458
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9464
		{
			yyVAL.val = ""
		}
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9468
		{
			yyVAL.val = BooleanModeStr
		}
	case 1609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9472
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1610:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9476
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9480
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9486
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9490
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9494
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9500
		{
			yyVAL.val = Armscii8Str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9504
		{
			yyVAL.val = AsciiStr
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9508
		{
			yyVAL.val = Big5Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9512
		{
			yyVAL.val = UBinaryStr
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9516
		{
			yyVAL.val = Cp1250Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9520
		{
			yyVAL.val = Cp1251Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9524
		{
			yyVAL.val = Cp1256Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9528
		{
			yyVAL.val = Cp1257Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9532
		{
			yyVAL.val = Cp850Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9536
		{
			yyVAL.val = Cp852Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9540
		{
			yyVAL.val = Cp866Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9544
		{
			yyVAL.val = Cp932Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9548
		{
			yyVAL.val = Dec8Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9552
		{
			yyVAL.val = EucjpmsStr
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9556
		{
			yyVAL.val = EuckrStr
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9560
		{
			yyVAL.val = Gb18030Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9564
		{
			yyVAL.val = Gb2312Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9568
		{
			yyVAL.val = GbkStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9572
		{
			yyVAL.val = Geostd8Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9576
		{
			yyVAL.val = GreekStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9580
		{
			yyVAL.val = HebrewStr
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9584
		{
			yyVAL.val = Hp8Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9588
		{
			yyVAL.val = Keybcs2Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9592
		{
			yyVAL.val = Koi8rStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9596
		{
			yyVAL.val = Koi8uStr
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9600
		{
			yyVAL.val = Latin1Str
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9604
		{
			yyVAL.val = Latin2Str
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9608
		{
			yyVAL.val = Latin5Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9612
		{
			yyVAL.val = Latin7Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9616
		{
			yyVAL.val = MacceStr
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9620
		{
			yyVAL.val = MacromanStr
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9624
		{
			yyVAL.val = SjisStr
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9628
		{
			yyVAL.val = Swe7Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9632
		{
			yyVAL.val = Tis620Str
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9636
		{
			yyVAL.val = Ucs2Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9640
		{
			yyVAL.val = UjisStr
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9644
		{
			yyVAL.val = Utf16Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9648
		{
			yyVAL.val = Utf16leStr
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9652
		{
			yyVAL.val = Utf32Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9656
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9660
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9664
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9670
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9674
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9678
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9682
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9686
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9690
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9694
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9698
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9705
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9709
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9713
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9717
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9721
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9725
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9729
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9733
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9737
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9741
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9745
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9749
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9755
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9759
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9764
		{
			yyVAL.val = Expr(nil)
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9768
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9773
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9777
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9783
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9787
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9793
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9798
		{
			yyVAL.val = Expr(nil)
		}
	case 1687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9802
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9808
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9812
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9816
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9820
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9824
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9828
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9832
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9836
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9840
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9844
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9848
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9852
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9856
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9860
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9864
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9868
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9872
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9878
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9882
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9886
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9890
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9894
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9898
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9902
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9906
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9910
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9914
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9918
		{
			yyVAL.val = &NullVal{}
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9924
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9928
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9932
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9937
		{
			yyVAL.val = Exprs(nil)
		}
	case 1720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9941
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9947
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9951
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9957
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9962
		{
			yyVAL.val = Expr(nil)
		}
	case 1725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9966
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9972
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9977
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9981
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9987
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9991
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9997
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10002
		{
			yyVAL.val = AscScr
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10006
		{
			yyVAL.val = AscScr
		}
	case 1734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10010
		{
			yyVAL.val = DescScr
		}
	case 1735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10015
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10019
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10023
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10027
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10033
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10037
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10041
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10046
		{
			yyVAL.val = ""
		}
	case 1743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10050
		{
			yyVAL.val = ForUpdateStr
		}
	case 1744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10054
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10058
		{
			yyVAL.val = ShareModeStr
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10064
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10068
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10088
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10092
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10097
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10104
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10108
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10112
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1754:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10117
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10124
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10128
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10137
		{
			yyVAL.val = Columns(nil)
		}
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10141
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10147
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10151
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10157
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10161
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10165
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10169
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10173
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10177
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10181
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10186
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10190
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10196
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10200
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10206
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10210
		{
			yyVAL.val = ValTuple{}
		}
	case 1776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10216
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10222
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10232
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10236
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10242
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10245
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10249
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10253
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10259
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10263
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10269
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10280
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10293
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10306
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10312
		{
			yyVAL.val = SetScope_Global
		}
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10316
		{
			yyVAL.val = SetScope_Session
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10322
		{
			yyVAL.val = SetScope_Session
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10326
		{
			yyVAL.val = SetScope_Persist
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10330
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10336
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10340
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10344
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10354
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10361
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10368
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10372
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10376
		{
			yyVAL.val = &Default{}
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10380
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10389
		{
			yyVAL.val = 0
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10391
		{
			yyVAL.val = 1
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10394
		{
			yyVAL.val = 0
		}
	case 1811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10396
		{
			yyVAL.val = 1
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10399
		{
			yyVAL.val = 0
		}
	case 1813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10401
		{
			yyVAL.val = 1
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10404
		{
			yyVAL.val = ""
		}
	case 1815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10406
		{
			yyVAL.val = IgnoreStr
		}
	case 1816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10409
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10411
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10413
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10416
		{
			yyVAL.val = struct{}{}
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10418
		{
			yyVAL.val = struct{}{}
		}
	case 1821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10422
		{
			yyVAL.val = struct{}{}
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10424
		{
			yyVAL.val = struct{}{}
		}
	case 1823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10427
		{
			yyVAL.val = struct{}{}
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10429
		{
			yyVAL.val = struct{}{}
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10433
		{
			yyVAL.val = UniqueStr
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10435
		{
			yyVAL.val = FulltextStr
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10437
		{
			yyVAL.val = SpatialStr
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10439
		{
			yyVAL.val = VectorStr
		}
	case 1829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10442
		{
			yyVAL.val = ""
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10444
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = ColIdent{}
		}
	case 1832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10449
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10453
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10457
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10463
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10467
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10474
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10480
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10484
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10491
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10495
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10499
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10504
		{
			yyVAL.val = string("")
		}
	case 1846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10506
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10509
		{
			yyVAL.val = string("")
		}
	case 1848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10511
		{
			yyVAL.val = IgnoreStr
		}
	case 1849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10513
		{
			yyVAL.val = ReplaceStr
		}
	case 1850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10516
		{
			yyVAL.val = BoolVal(false)
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10518
		{
			yyVAL.val = BoolVal(true)
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10521
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10525
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10530
		{
			yyVAL.val = BoolVal(false)
		}
	case 1855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10534
		{
			yyVAL.val = BoolVal(true)
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10539
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10543
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10548
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10552
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10560
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10564
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10569
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10573
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10578
		{
			yyVAL.val = &Lines{}
		}
	case 1865:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10582
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1866:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10591
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10602
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10608
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10612
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10618
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10633
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10651
		{
			yyVAL.val = LockRead
		}
	case 1873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10655
		{
			yyVAL.val = LockReadLocal
		}
	case 1874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10659
		{
			yyVAL.val = LockWrite
		}
	case 1875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10663
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10669
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10675
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10686
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10696
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11625
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11634
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
