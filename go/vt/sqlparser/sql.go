// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const MAXVALUE = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const TRIGGERS = 57562
const FUNCTION = 57563
const STATUS = 57564
const VARIABLES = 57565
const WARNINGS = 57566
const ERRORS = 57567
const KILL = 57568
const CONNECTION = 57569
const SEQUENCE = 57570
const ENABLE = 57571
const DISABLE = 57572
const EACH = 57573
const ROW = 57574
const BEFORE = 57575
const FOLLOWS = 57576
const PRECEDES = 57577
const DEFINER = 57578
const INVOKER = 57579
const INOUT = 57580
const OUT = 57581
const DETERMINISTIC = 57582
const CONTAINS = 57583
const READS = 57584
const MODIFIES = 57585
const SQL = 57586
const SECURITY = 57587
const TEMPORARY = 57588
const ALGORITHM = 57589
const MERGE = 57590
const TEMPTABLE = 57591
const UNDEFINED = 57592
const EVENT = 57593
const EVENTS = 57594
const SCHEDULE = 57595
const EVERY = 57596
const STARTS = 57597
const ENDS = 57598
const COMPLETION = 57599
const PRESERVE = 57600
const CASCADED = 57601
const INSTANT = 57602
const INPLACE = 57603
const COPY = 57604
const DISCARD = 57605
const IMPORT = 57606
const SHARED = 57607
const EXCLUSIVE = 57608
const WITHOUT = 57609
const VALIDATION = 57610
const COALESCE = 57611
const EXCHANGE = 57612
const REBUILD = 57613
const REMOVE = 57614
const PARTITIONING = 57615
const CLASS_ORIGIN = 57616
const SUBCLASS_ORIGIN = 57617
const MESSAGE_TEXT = 57618
const MYSQL_ERRNO = 57619
const CONSTRAINT_CATALOG = 57620
const CONSTRAINT_SCHEMA = 57621
const CONSTRAINT_NAME = 57622
const CATALOG_NAME = 57623
const SCHEMA_NAME = 57624
const TABLE_NAME = 57625
const COLUMN_NAME = 57626
const CURSOR_NAME = 57627
const SIGNAL = 57628
const RESIGNAL = 57629
const SQLSTATE = 57630
const DECLARE = 57631
const CONDITION = 57632
const CURSOR = 57633
const CONTINUE = 57634
const EXIT = 57635
const UNDO = 57636
const HANDLER = 57637
const FOUND = 57638
const SQLWARNING = 57639
const SQLEXCEPTION = 57640
const FETCH = 57641
const OPEN = 57642
const CLOSE = 57643
const LOOP = 57644
const LEAVE = 57645
const ITERATE = 57646
const REPEAT = 57647
const UNTIL = 57648
const WHILE = 57649
const DO = 57650
const RETURN = 57651
const USER = 57652
const IDENTIFIED = 57653
const ROLE = 57654
const REUSE = 57655
const GRANT = 57656
const GRANTS = 57657
const REVOKE = 57658
const NONE = 57659
const ATTRIBUTE = 57660
const RANDOM = 57661
const PASSWORD = 57662
const INITIAL = 57663
const AUTHENTICATION = 57664
const SSL = 57665
const X509 = 57666
const CIPHER = 57667
const ISSUER = 57668
const SUBJECT = 57669
const ACCOUNT = 57670
const EXPIRE = 57671
const NEVER = 57672
const OPTION = 57673
const OPTIONAL = 57674
const ADMIN = 57675
const PRIVILEGES = 57676
const MAX_QUERIES_PER_HOUR = 57677
const MAX_UPDATES_PER_HOUR = 57678
const MAX_CONNECTIONS_PER_HOUR = 57679
const MAX_USER_CONNECTIONS = 57680
const FLUSH = 57681
const FAILED_LOGIN_ATTEMPTS = 57682
const PASSWORD_LOCK_TIME = 57683
const REQUIRE = 57684
const PROXY = 57685
const ROUTINE = 57686
const TABLESPACE = 57687
const CLIENT = 57688
const SLAVE = 57689
const EXECUTE = 57690
const FILE = 57691
const RELOAD = 57692
const REPLICATION = 57693
const SHUTDOWN = 57694
const SUPER = 57695
const USAGE = 57696
const LOGS = 57697
const ENGINE = 57698
const ERROR = 57699
const GENERAL = 57700
const HOSTS = 57701
const OPTIMIZER_COSTS = 57702
const RELAY = 57703
const SLOW = 57704
const USER_RESOURCES = 57705
const NO_WRITE_TO_BINLOG = 57706
const CHANNEL = 57707
const APPLICATION_PASSWORD_ADMIN = 57708
const AUDIT_ABORT_EXEMPT = 57709
const AUDIT_ADMIN = 57710
const AUTHENTICATION_POLICY_ADMIN = 57711
const BACKUP_ADMIN = 57712
const BINLOG_ADMIN = 57713
const BINLOG_ENCRYPTION_ADMIN = 57714
const CLONE_ADMIN = 57715
const CONNECTION_ADMIN = 57716
const ENCRYPTION_KEY_ADMIN = 57717
const FIREWALL_ADMIN = 57718
const FIREWALL_EXEMPT = 57719
const FIREWALL_USER = 57720
const FLUSH_OPTIMIZER_COSTS = 57721
const FLUSH_STATUS = 57722
const FLUSH_TABLES = 57723
const FLUSH_USER_RESOURCES = 57724
const GROUP_REPLICATION_ADMIN = 57725
const GROUP_REPLICATION_STREAM = 57726
const INNODB_REDO_LOG_ARCHIVE = 57727
const INNODB_REDO_LOG_ENABLE = 57728
const NDB_STORED_USER = 57729
const PASSWORDLESS_USER_ADMIN = 57730
const PERSIST_RO_VARIABLES_ADMIN = 57731
const REPLICATION_APPLIER = 57732
const REPLICATION_SLAVE_ADMIN = 57733
const RESOURCE_GROUP_ADMIN = 57734
const RESOURCE_GROUP_USER = 57735
const ROLE_ADMIN = 57736
const SENSITIVE_VARIABLES_OBSERVER = 57737
const SESSION_VARIABLES_ADMIN = 57738
const SET_USER_ID = 57739
const SHOW_ROUTINE = 57740
const SKIP_QUERY_REWRITE = 57741
const SYSTEM_VARIABLES_ADMIN = 57742
const TABLE_ENCRYPTION_ADMIN = 57743
const TP_CONNECTION_ADMIN = 57744
const VERSION_TOKEN_ADMIN = 57745
const XA_RECOVER_ADMIN = 57746
const REPLICA = 57747
const REPLICAS = 57748
const SOURCE = 57749
const STOP = 57750
const RESET = 57751
const FILTER = 57752
const LOG = 57753
const MASTER = 57754
const SOURCE_HOST = 57755
const SOURCE_USER = 57756
const SOURCE_PASSWORD = 57757
const SOURCE_PORT = 57758
const SOURCE_CONNECT_RETRY = 57759
const SOURCE_RETRY_COUNT = 57760
const SOURCE_AUTO_POSITION = 57761
const REPLICATE_DO_TABLE = 57762
const REPLICATE_IGNORE_TABLE = 57763
const IO_THREAD = 57764
const SQL_THREAD = 57765
const BEGIN = 57766
const START = 57767
const TRANSACTION = 57768
const COMMIT = 57769
const ROLLBACK = 57770
const SAVEPOINT = 57771
const WORK = 57772
const RELEASE = 57773
const CHAIN = 57774
const CONSISTENT = 57775
const SNAPSHOT = 57776
const BIT = 57777
const TINYINT = 57778
const SMALLINT = 57779
const MEDIUMINT = 57780
const INT = 57781
const INTEGER = 57782
const BIGINT = 57783
const INTNUM = 57784
const SERIAL = 57785
const INT1 = 57786
const INT2 = 57787
const INT3 = 57788
const INT4 = 57789
const INT8 = 57790
const REAL = 57791
const DOUBLE = 57792
const FLOAT_TYPE = 57793
const DECIMAL = 57794
const NUMERIC = 57795
const DEC = 57796
const FIXED = 57797
const PRECISION = 57798
const TIME = 57799
const TIMESTAMP = 57800
const DATETIME = 57801
const CHAR = 57802
const VARCHAR = 57803
const BOOL = 57804
const CHARACTER = 57805
const VARBINARY = 57806
const NCHAR = 57807
const NVARCHAR = 57808
const NATIONAL = 57809
const VARYING = 57810
const VARCHARACTER = 57811
const TEXT = 57812
const TINYTEXT = 57813
const MEDIUMTEXT = 57814
const LONGTEXT = 57815
const LONG = 57816
const BLOB = 57817
const TINYBLOB = 57818
const MEDIUMBLOB = 57819
const LONGBLOB = 57820
const JSON = 57821
const ENUM = 57822
const GEOMETRY = 57823
const POINT = 57824
const LINESTRING = 57825
const POLYGON = 57826
const GEOMETRYCOLLECTION = 57827
const MULTIPOINT = 57828
const MULTILINESTRING = 57829
const MULTIPOLYGON = 57830
const LOCAL = 57831
const LOW_PRIORITY = 57832
const SKIP = 57833
const LOCKED = 57834
const NULLX = 57835
const AUTO_INCREMENT = 57836
const APPROXNUM = 57837
const SIGNED = 57838
const UNSIGNED = 57839
const ZEROFILL = 57840
const SRID = 57841
const COLLATION = 57842
const DATABASES = 57843
const SCHEMAS = 57844
const TABLES = 57845
const FULL = 57846
const PROCESSLIST = 57847
const COLUMNS = 57848
const FIELDS = 57849
const ENGINES = 57850
const PLUGINS = 57851
const NAMES = 57852
const CHARSET = 57853
const GLOBAL = 57854
const SESSION = 57855
const ISOLATION = 57856
const LEVEL = 57857
const READ = 57858
const WRITE = 57859
const ONLY = 57860
const REPEATABLE = 57861
const COMMITTED = 57862
const UNCOMMITTED = 57863
const SERIALIZABLE = 57864
const ENCRYPTION = 57865
const CURRENT_TIMESTAMP = 57866
const NOW = 57867
const DATABASE = 57868
const CURRENT_DATE = 57869
const CURRENT_USER = 57870
const CURRENT_TIME = 57871
const LOCALTIME = 57872
const LOCALTIMESTAMP = 57873
const UTC_DATE = 57874
const UTC_TIME = 57875
const UTC_TIMESTAMP = 57876
const REPLACE = 57877
const CONVERT = 57878
const CAST = 57879
const POSITION = 57880
const SUBSTR = 57881
const SUBSTRING = 57882
const TRIM = 57883
const LEADING = 57884
const TRAILING = 57885
const BOTH = 57886
const GROUP_CONCAT = 57887
const SEPARATOR = 57888
const TIMESTAMPADD = 57889
const TIMESTAMPDIFF = 57890
const EXTRACT = 57891
const GET_FORMAT = 57892
const OVER = 57893
const WINDOW = 57894
const GROUPING = 57895
const CURRENT = 57896
const AVG = 57897
const BIT_AND = 57898
const BIT_OR = 57899
const BIT_XOR = 57900
const COUNT = 57901
const JSON_ARRAYAGG = 57902
const JSON_OBJECTAGG = 57903
const MAX = 57904
const MIN = 57905
const STDDEV_POP = 57906
const STDDEV = 57907
const STD = 57908
const STDDEV_SAMP = 57909
const SUM = 57910
const VAR_POP = 57911
const VARIANCE = 57912
const VAR_SAMP = 57913
const CUME_DIST = 57914
const DENSE_RANK = 57915
const FIRST_VALUE = 57916
const LAG = 57917
const LAST_VALUE = 57918
const LEAD = 57919
const NTH_VALUE = 57920
const NTILE = 57921
const ROW_NUMBER = 57922
const PERCENT_RANK = 57923
const RANK = 57924
const DUAL = 57925
const JSON_TABLE = 57926
const PATH = 57927
const AVG_ROW_LENGTH = 57928
const CHECKSUM = 57929
const COMPACT = 57930
const COMPRESSED = 57931
const COMPRESSION = 57932
const DISK = 57933
const DIRECTORY = 57934
const DELAY_KEY_WRITE = 57935
const DYNAMIC = 57936
const ENGINE_ATTRIBUTE = 57937
const ENCRYPTED = 57938
const ENCRYPTION_KEY_ID = 57939
const HASH = 57940
const INSERT_METHOD = 57941
const ITEF_QUOTES = 57942
const LIST = 57943
const MIN_ROWS = 57944
const MAX_ROWS = 57945
const PACK_KEYS = 57946
const MEMORY = 57947
const PAGE_CHECKSUM = 57948
const PAGE_COMPRESSED = 57949
const PAGE_COMPRESSION_LEVEL = 57950
const PARTITIONS = 57951
const REDUNDANT = 57952
const ROW_FORMAT = 57953
const SECONDARY_ENGINE = 57954
const SECONDARY_ENGINE_ATTRIBUTE = 57955
const STATS_AUTO_RECALC = 57956
const STATS_PERSISTENT = 57957
const STATS_SAMPLE_PAGES = 57958
const STORAGE = 57959
const SUBPARTITION = 57960
const SUBPARTITIONS = 57961
const TABLE_CHECKSUM = 57962
const TRANSACTIONAL = 57963
const VERSIONING = 57964
const YES = 57965
const PREPARE = 57966
const DEALLOCATE = 57967
const MATCH = 57968
const AGAINST = 57969
const BOOLEAN = 57970
const LANGUAGE = 57971
const WITH = 57972
const QUERY = 57973
const EXPANSION = 57974
const MICROSECOND = 57975
const SECOND = 57976
const MINUTE = 57977
const HOUR = 57978
const DAY = 57979
const WEEK = 57980
const MONTH = 57981
const QUARTER = 57982
const YEAR = 57983
const SECOND_MICROSECOND = 57984
const MINUTE_MICROSECOND = 57985
const MINUTE_SECOND = 57986
const HOUR_MICROSECOND = 57987
const HOUR_SECOND = 57988
const HOUR_MINUTE = 57989
const DAY_MICROSECOND = 57990
const DAY_SECOND = 57991
const DAY_MINUTE = 57992
const DAY_HOUR = 57993
const YEAR_MONTH = 57994
const NAME = 57995
const SYSTEM = 57996
const ACCESSIBLE = 57997
const ASENSITIVE = 57998
const CUBE = 57999
const DELAYED = 58000
const DISTINCTROW = 58001
const EMPTY = 58002
const FLOAT4 = 58003
const FLOAT8 = 58004
const GET = 58005
const HIGH_PRIORITY = 58006
const INSENSITIVE = 58007
const IO_AFTER_GTIDS = 58008
const IO_BEFORE_GTIDS = 58009
const LINEAR = 58010
const MASTER_BIND = 58011
const MASTER_SSL_VERIFY_SERVER_CERT = 58012
const MIDDLEINT = 58013
const PURGE = 58014
const READ_WRITE = 58015
const RLIKE = 58016
const SENSITIVE = 58017
const SPECIFIC = 58018
const SQL_BIG_RESULT = 58019
const SQL_SMALL_RESULT = 58020
const UNUSED = 58021
const DESCRIPTION = 58022
const LATERAL = 58023
const MEMBER = 58024
const RECURSIVE = 58025
const BUCKETS = 58026
const CLONE = 58027
const COMPONENT = 58028
const DEFINITION = 58029
const ENFORCED = 58030
const NOT_ENFORCED = 58031
const EXCLUDE = 58032
const GEOMCOLLECTION = 58033
const GET_MASTER_PUBLIC_KEY = 58034
const HISTOGRAM = 58035
const HISTORY = 58036
const INACTIVE = 58037
const INVISIBLE = 58038
const MASTER_COMPRESSION_ALGORITHMS = 58039
const MASTER_PUBLIC_KEY_PATH = 58040
const MASTER_TLS_CIPHERSUITES = 58041
const MASTER_ZSTD_COMPRESSION_LEVEL = 58042
const NESTED = 58043
const NETWORK_NAMESPACE = 58044
const NOWAIT = 58045
const NULLS = 58046
const OJ = 58047
const OLD = 58048
const ORDINALITY = 58049
const ORGANIZATION = 58050
const OTHERS = 58051
const PERSIST = 58052
const PERSIST_ONLY = 58053
const PRIVILEGE_CHECKS_USER = 58054
const PROCESS = 58055
const REFERENCE = 58056
const REQUIRE_ROW_FORMAT = 58057
const RESOURCE = 58058
const RESPECT = 58059
const RESTART = 58060
const RETAIN = 58061
const SECONDARY = 58062
const SECONDARY_LOAD = 58063
const SECONDARY_UNLOAD = 58064
const THREAD_PRIORITY = 58065
const TIES = 58066
const VCPU = 58067
const VISIBLE = 58068
const INFILE = 58069
const ACTIVE = 58070
const AGGREGATE = 58071
const ANY = 58072
const ARRAY = 58073
const ASCII = 58074
const AT = 58075
const AUTOEXTEND_SIZE = 58076
const GENERATED = 58077
const ALWAYS = 58078
const STORED = 58079
const VIRTUAL = 58080
const NVAR = 58081
const PASSWORD_LOCK = 58082

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	760, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1792,
	200, 1813,
	-2, 331,
	-1, 62,
	241, 1172,
	242, 1172,
	-2, 1161,
	-1, 90,
	270, 331,
	-2, 1798,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 542,
	1, 2493,
	6, 2493,
	7, 2493,
	28, 2493,
	187, 2493,
	760, 2493,
	-2, 1207,
	-1, 555,
	187, 1823,
	-2, 1817,
	-1, 556,
	187, 1824,
	-2, 1818,
	-1, 661,
	1, 679,
	760, 679,
	-2, 677,
	-1, 670,
	1, 1311,
	8, 1311,
	9, 1311,
	10, 1311,
	17, 1311,
	18, 1311,
	19, 1311,
	20, 1311,
	22, 1311,
	24, 1311,
	34, 1311,
	35, 1311,
	64, 1311,
	65, 1311,
	66, 1311,
	67, 1311,
	68, 1311,
	70, 1311,
	71, 1311,
	74, 1311,
	75, 1311,
	77, 1311,
	78, 1311,
	96, 1311,
	523, 1311,
	571, 1311,
	649, 1311,
	760, 1311,
	-2, 1807,
	-1, 675,
	1, 1418,
	8, 1418,
	9, 1418,
	10, 1418,
	17, 1418,
	18, 1418,
	19, 1418,
	20, 1418,
	22, 1418,
	24, 1418,
	34, 1418,
	35, 1418,
	64, 1418,
	65, 1418,
	66, 1418,
	67, 1418,
	68, 1418,
	70, 1418,
	71, 1418,
	74, 1418,
	75, 1418,
	77, 1418,
	78, 1418,
	96, 1418,
	523, 1418,
	571, 1418,
	649, 1418,
	760, 1418,
	-2, 1807,
	-1, 703,
	187, 2190,
	-2, 1432,
	-1, 736,
	187, 2298,
	-2, 1700,
	-1, 737,
	187, 2379,
	-2, 1434,
	-1, 738,
	187, 2210,
	-2, 1435,
	-1, 807,
	187, 2161,
	-2, 1666,
	-1, 810,
	187, 2176,
	-2, 1584,
	-1, 811,
	187, 2179,
	-2, 1584,
	-1, 812,
	187, 2389,
	-2, 1584,
	-1, 814,
	187, 2177,
	-2, 1584,
	-1, 815,
	187, 2390,
	-2, 1584,
	-1, 816,
	187, 2391,
	-2, 1584,
	-1, 875,
	187, 2178,
	-2, 1584,
	-1, 958,
	187, 2278,
	-2, 1584,
	-1, 959,
	187, 2279,
	-2, 1584,
	-1, 1071,
	109, 2506,
	120, 2506,
	187, 2506,
	-2, 1774,
	-1, 1072,
	109, 2637,
	120, 2637,
	187, 2637,
	-2, 1775,
	-1, 1077,
	109, 2534,
	120, 2534,
	187, 2534,
	-2, 1776,
	-1, 1078,
	109, 2585,
	120, 2585,
	187, 2585,
	-2, 1777,
	-1, 1079,
	109, 2586,
	120, 2586,
	187, 2586,
	-2, 1778,
	-1, 1080,
	109, 2433,
	120, 2433,
	187, 2433,
	-2, 1783,
	-1, 1082,
	109, 2562,
	120, 2562,
	187, 2562,
	-2, 1785,
	-1, 1255,
	450, 1186,
	-2, 1190,
	-1, 1257,
	450, 1186,
	-2, 1190,
	-1, 1386,
	1, 679,
	760, 679,
	-2, 677,
	-1, 1388,
	1, 680,
	760, 680,
	-2, 677,
	-1, 1411,
	1, 1312,
	8, 1312,
	9, 1312,
	10, 1312,
	17, 1312,
	18, 1312,
	19, 1312,
	20, 1312,
	22, 1312,
	24, 1312,
	34, 1312,
	35, 1312,
	64, 1312,
	65, 1312,
	66, 1312,
	67, 1312,
	68, 1312,
	70, 1312,
	71, 1312,
	74, 1312,
	75, 1312,
	77, 1312,
	78, 1312,
	96, 1312,
	523, 1312,
	571, 1312,
	649, 1312,
	760, 1312,
	-2, 1807,
	-1, 1422,
	1, 1418,
	8, 1418,
	9, 1418,
	10, 1418,
	17, 1418,
	18, 1418,
	19, 1418,
	20, 1418,
	22, 1418,
	24, 1418,
	34, 1418,
	35, 1418,
	64, 1418,
	65, 1418,
	66, 1418,
	67, 1418,
	68, 1418,
	70, 1418,
	71, 1418,
	74, 1418,
	75, 1418,
	77, 1418,
	78, 1418,
	96, 1418,
	523, 1418,
	571, 1418,
	649, 1418,
	760, 1418,
	-2, 1807,
	-1, 1715,
	1, 679,
	760, 679,
	-2, 677,
	-1, 1717,
	1, 679,
	760, 679,
	-2, 677,
	-1, 2266,
	187, 1827,
	-2, 1678,
	-1, 2268,
	187, 2723,
	-2, 1680,
	-1, 2269,
	187, 2724,
	-2, 1681,
	-1, 2270,
	187, 1826,
	-2, 1822,
	-1, 2419,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2437,
	187, 2302,
	-2, 1779,
	-1, 2444,
	1, 897,
	760, 897,
	-2, 677,
	-1, 2630,
	49, 917,
	206, 920,
	208, 917,
	209, 917,
	210, 917,
	-2, 1033,
	-1, 2711,
	8, 59,
	9, 59,
	10, 59,
	-2, 1464,
	-1, 2728,
	1, 1357,
	8, 1357,
	9, 1357,
	10, 1357,
	17, 1357,
	18, 1357,
	19, 1357,
	20, 1357,
	22, 1357,
	24, 1357,
	34, 1357,
	35, 1357,
	64, 1357,
	65, 1357,
	66, 1357,
	67, 1357,
	68, 1357,
	70, 1357,
	71, 1357,
	74, 1357,
	75, 1357,
	77, 1357,
	78, 1357,
	96, 1357,
	523, 1357,
	571, 1357,
	649, 1357,
	760, 1357,
	-2, 1807,
	-1, 2905,
	212, 1027,
	216, 1027,
	-2, 785,
	-1, 2906,
	212, 1097,
	216, 1097,
	-2, 786,
	-1, 3167,
	1, 1418,
	8, 1418,
	9, 1418,
	10, 1418,
	17, 1418,
	18, 1418,
	19, 1418,
	20, 1418,
	22, 1418,
	24, 1418,
	34, 1418,
	35, 1418,
	64, 1418,
	65, 1418,
	66, 1418,
	67, 1418,
	68, 1418,
	70, 1418,
	71, 1418,
	74, 1418,
	75, 1418,
	77, 1418,
	78, 1418,
	96, 1418,
	523, 1418,
	571, 1418,
	649, 1418,
	760, 1418,
	-2, 1807,
	-1, 3270,
	1, 1731,
	74, 1731,
	760, 1731,
	-2, 1807,
	-1, 3471,
	49, 917,
	206, 920,
	208, 917,
	209, 917,
	210, 917,
	-2, 1033,
	-1, 3484,
	206, 921,
	212, 1027,
	216, 1027,
	-2, 919,
	-1, 3669,
	77, 2073,
	78, 2073,
	187, 2073,
	-2, 1213,
	-1, 3670,
	76, 1742,
	251, 1742,
	-2, 2122,
	-1, 3671,
	76, 1743,
	251, 1743,
	-2, 2689,
	-1, 3910,
	8, 59,
	9, 59,
	10, 59,
	-2, 1738,
	-1, 4055,
	46, 1838,
	-2, 1836,
	-1, 4318,
	8, 59,
	9, 59,
	10, 59,
	-2, 1739,
	-1, 4343,
	314, 426,
	-2, 1893,
	-1, 4344,
	314, 427,
	-2, 1934,
	-1, 4345,
	314, 428,
	-2, 2110,
	-1, 4574,
	104, 412,
	106, 412,
	108, 412,
	-2, 79,
	-1, 4655,
	106, 419,
	107, 419,
	108, 419,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 81955

var yyAct = [...]int{
	749, 44, 4628, 4597, 4529, 4578, 695, 4565, 1187, 567,
	4566, 2922, 2434, 4204, 8, 4201, 3, 4049, 4203, 7,
	4531, 4310, 3758, 2921, 4447, 4194, 4202, 6, 4235, 28,
	4205, 9, 3614, 3278, 4448, 4089, 491, 2357, 4196, 4337,
	655, 4044, 4168, 4336, 4051, 44, 3436, 3247, 2358, 3873,
	722, 4100, 1421, 3336, 3943, 3830, 1414, 3689, 4308, 4350,
	108, 2707, 4055, 709, 4050, 1538, 4062, 4011, 3584, 2645,
	3866, 4053, 1635, 686, 3831, 2506, 1750, 101, 3675, 2461,
	3865, 3667, 3157, 3414, 3822, 3449, 2989, 594, 594, 639,
	546, 549, 4349, 3787, 651, 3884, 3781, 672, 3764, 2174,
	2695, 107, 2241, 4195, 2525, 1469, 3337, 3279, 3864, 1752,
	1416, 3095, 2909, 2295, 2933, 3659, 3590, 748, 813, 1147,
	2975, 105, 3564, 3476, 3552, 3058, 3543, 2999, 1566, 2166,
	1216, 2465, 2492, 1418, 2451, 1567, 134, 1159, 2628, 1392,
	2623, 1749, 2629, 2836, 1205, 3434, 2597, 708, 2859, 1268,
	714, 3209, 2557, 2227, 1413, 696, 1755, 1381, 1155, 2467,
	2229, 1420, 705, 2712, 2167, 2627, 2580, 2148, 2107, 2048,
	1725, 2910, 2956, 1269, 2347, 1242, 1450, 1073, 2488, 691,
	1076, 1612, 1458, 2698, 1616, 2272, 2611, 1706, 1453, 670,
	1280, 1302, 1387, 1642, 2902, 1477, 2112, 1615, 3062, 1150,
	1163, 1069, 3254, 1070, 2234, 679, 1399, 666, 2421, 3676,
	1391, 654, 1390, 1389, 569, 1261, 570, 129, 2080, 552,
	1186, 667, 1279, 2081, 1174, 2047, 1718, 4655, 689, 2311,
	2929, 4649, 662, 4636, 125, 2936, 1151, 4620, 4606, 4574,
	4572, 3255, 4544, 4541, 2903, 4540, 4539, 488, 4524, 4522,
	1168, 2941, 2940, 4430, 4426, 4421, 100, 4102, 4101, 3352,
	3592, 3841, 2105, 2510, 1178, 4292, 3427, 3984, 2544, 2543,
	3836, 3837, 3834, 3835, 3396, 3397, 2937, 86, 3692, 4596,
	1441, 4559, 94, 3982, 97, 4557, 4644, 3690, 4595, 99,
	4558, 3840, 2943, 3430, 2919, 3335, 3985, 3108, 659, 2967,
	3428, 1728, 2920, 4364, 4363, 685, 71, 4562, 664, 562,
	1188, 3944, 42, 4306, 4506, 47, 4174, 2541, 2657, 2040,
	42, 3429, 3765, 653, 2541, 4457, 3946, 712, 4197, 3997,
	4270, 122, 3767, 3859, 1355, 3411, 4305, 4173, 3237, 42,
	42, 3545, 1200, 501, 2436, 2923, 42, 3736, 3532, 4598,
	4084, 2987, 3733, 1180, 3581, 3927, 88, 3399, 2371, 2369,
	2368, 2367, 2370, 2366, 2365, 2364, 702, 3306, 2378, 3269,
	2377, 2376, 4400, 2375, 2374, 2373, 2372, 89, 3939, 1170,
	2228, 1176, 1177, 3275, 3862, 89, 3210, 3276, 3931, 3305,
	3275, 3118, 3940, 3117, 3276, 4159, 1146, 4382, 3863, 4123,
	2947, 4058, 2812, 3651, 89, 89, 1167, 4291, 2939, 2579,
	2573, 89, 2942, 3565, 1162, 4314, 665, 1158, 3290, 3291,
	2932, 2431, 2432, 3289, 676, 2359, 2371, 2369, 2368, 2367,
	2370, 2366, 2365, 2364, 2360, 2361, 2378, 2362, 2377, 2376,
	2363, 2375, 2374, 2373, 2372, 3039, 541, 3945, 1356, 3770,
	2850, 2430, 4311, 2849, 2151, 2152, 2851, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 89, 4069, 136, 2934, 3213,
	4384, 564, 114, 112, 113, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 1255, 2111, 1502,
	3892, 3768, 3769, 3771, 3772, 3773, 3377, 1063, 4293, 2108,
	96, 4314, 3378, 3379, 1617, 3612, 1618, 3142, 96, 148,
	144, 145, 2182, 146, 2109, 2110, 2935, 4315, 3299, 4309,
	1240, 1241, 1238, 1249, 1239, 1240, 1241, 96, 96, 2129,
	1332, 561, 1220, 1221, 96, 560, 1224, 3885, 4311, 1340,
	2945, 663, 1147, 2736, 1147, 2463, 2464, 3190, 150, 149,
	648, 2199, 2578, 1405, 1406, 1263, 1299, 1262, 2478, 108,
	1265, 2477, 3081, 4327, 2471, 2470, 3503, 2472, 1264, 2482,
	3632, 1222, 1223, 3636, 3634, 2608, 2562, 2153, 2563, 536,
	559, 153, 4595, 2086, 4558, 642, 3890, 2468, 4556, 1401,
	1404, 1405, 1406, 1402, 2468, 1403, 1408, 1250, 1251, 643,
	1267, 3324, 1353, 4315, 1225, 1354, 643, 729, 645, 730,
	732, 733, 734, 735, 2382, 2489, 539, 731, 2307, 644,
	4423, 1358, 1359, 4424, 4643, 4425, 1258, 4596, 729, 4328,
	730, 732, 733, 734, 735, 2149, 2150, 1226, 731, 2307,
	151, 3038, 152, 1401, 1404, 1405, 1406, 1402, 3983, 1403,
	1408, 4594, 1147, 2699, 2700, 4593, 1382, 2159, 4559, 2158,
	1385, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2157, 4451,
	2156, 2155, 1412, 1417, 2154, 649, 1377, 641, 1435, 1436,
	1147, 4280, 1147, 1147, 2934, 4042, 1147, 3857, 108, 1211,
	1336, 1337, 3019, 3088, 3086, 4464, 1147, 3849, 4463, 4403,
	3847, 1252, 2982, 3087, 1511, 1513, 3085, 4263, 1515, 1212,
	3168, 3217, 3216, 3218, 3215, 2938, 4015, 3448, 3024, 3222,
	2931, 3214, 3211, 1409, 4518, 3212, 3421, 3220, 4450, 2592,
	4265, 3168, 2935, 3168, 1315, 3782, 1306, 1329, 4128, 3591,
	1530, 3219, 4422, 3785, 1533, 1534, 1535, 1536, 1537, 4127,
	1541, 1456, 2304, 3799, 4125, 3783, 3784, 661, 3221, 3223,
	2574, 3788, 3789, 3790, 3791, 108, 3544, 1347, 3817, 4006,
	1348, 2593, 3412, 2304, 2141, 4117, 4368, 1384, 3415, 3416,
	3417, 3418, 3419, 4004, 3691, 3415, 3416, 3417, 3418, 3419,
	2986, 3979, 4001, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 3508, 1560,
	1561, 1563, 1563, 1563, 2984, 1568, 1568, 1568, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1427,
	3947, 3692, 2180, 3424, 3567, 4376, 147, 1339, 3298, 4329,
	1315, 1411, 540, 2526, 2384, 2385, 2383, 3797, 3948, 4362,
	4040, 4652, 4622, 556, 4651, 563, 1568, 4621, 4618, 1219,
	3766, 4537, 1315, 4582, 138, 4526, 1481, 1363, 4418, 3450,
	2934, 2612, 4416, 4417, 3107, 4374, 2586, 2948, 3098, 3870,
	2181, 3159, 3080, 3224, 4312, 547, 3297, 3496, 4151, 142,
	4285, 2231, 2183, 4172, 3929, 3160, 3409, 2918, 4160, 3159,
	1396, 1474, 1475, 1473, 1733, 1734, 1732, 4090, 4119, 1378,
	4519, 163, 126, 489, 500, 3087, 3085, 163, 2935, 4399,
	1476, 3976, 163, 1375, 1569, 1570, 1562, 1564, 1565, 2087,
	109, 3950, 636, 636, 154, 3930, 2930, 3998, 109, 1568,
	1568, 163, 1438, 1444, 1438, 1438, 1443, 1443, 1438, 1437,
	163, 1442, 1442, 1378, 1395, 1449, 1379, 109, 87, 2988,
	2111, 3949, 4290, 163, 109, 1373, 2934, 3570, 3568, 1266,
	4312, 2474, 1259, 3566, 163, 1161, 4070, 3856, 2475, 676,
	676, 1214, 2305, 2306, 1602, 2950, 2109, 2110, 1322, 3569,
	1407, 4124, 4449, 115, 2491, 1307, 163, 636, 3848, 1161,
	3846, 1314, 698, 2305, 2306, 4264, 1257, 1723, 489, 163,
	3975, 2985, 1512, 128, 2935, 1474, 1475, 1473, 3980, 143,
	4003, 550, 3974, 132, 140, 139, 1349, 3144, 1407, 4000,
	3152, 3154, 3153, 3973, 1476, 1237, 3146, 1213, 3589, 3510,
	3511, 3972, 3970, 1175, 1605, 136, 3971, 4112, 4113, 3377,
	1063, 1320, 3367, 3368, 3370, 3378, 3379, 3369, 3371, 3372,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1603, 1604, 551,
	136, 4118, 3373, 3374, 3375, 3376, 4535, 1369, 4530, 1713,
	137, 141, 1407, 3054, 3051, 2651, 3053, 2162, 548, 4394,
	3423, 3509, 2520, 2521, 4533, 1325, 1172, 1171, 1368, 1364,
	1365, 1366, 1367, 1370, 1371, 1372, 1374, 2516, 4332, 4333,
	548, 4199, 660, 1076, 4108, 1321, 4372, 1317, 1076, 2654,
	2652, 2647, 1175, 3585, 3586, 2649, 136, 2113, 1147, 1173,
	2050, 4542, 4274, 3497, 3498, 3499, 2163, 141, 2515, 3007,
	3008, 1234, 1235, 108, 130, 1253, 131, 1236, 1233, 1318,
	1319, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1232, 1231, 2115, 594, 1727, 2114, 4632,
	1230, 545, 3553, 3055, 3056, 3554, 4192, 3555, 2040, 2648,
	2650, 2653, 2655, 3077, 107, 4645, 594, 1751, 3823, 3824,
	3065, 1609, 1162, 2082, 4405, 3075, 2458, 1627, 3074, 3054,
	4404, 2651, 3053, 1162, 1632, 3341, 1698, 1699, 1700, 1701,
	1702, 3065, 3482, 2527, 4658, 3588, 3147, 1708, 4653, 1759,
	4637, 1432, 1433, 4609, 1169, 1189, 4269, 1620, 138, 1423,
	1425, 665, 1621, 1726, 4142, 2654, 2652, 2647, 1731, 4034,
	2460, 2649, 1311, 1426, 3855, 4427, 1376, 1147, 3852, 3587,
	3446, 3082, 3018, 3014, 3097, 2992, 2991, 2587, 1410, 2146,
	1263, 2460, 1262, 1738, 1736, 1265, 1260, 2509, 1166, 1434,
	2460, 2460, 2214, 1264, 2213, 2212, 1704, 1606, 1607, 1165,
	4037, 2460, 1757, 3441, 1394, 3148, 123, 1423, 1425, 3055,
	3056, 1179, 3097, 486, 548, 2648, 2650, 2653, 2655, 3158,
	594, 548, 1423, 1425, 2038, 2075, 1517, 1518, 3611, 3288,
	4532, 4534, 3073, 1740, 2460, 2538, 2783, 3838, 3016, 2780,
	2537, 3015, 1254, 2856, 89, 1628, 2051, 1516, 1514, 2753,
	693, 2730, 2619, 2542, 2528, 2139, 1629, 1419, 2517, 2426,
	163, 2063, 2102, 3064, 2064, 2065, 2066, 123, 2053, 4630,
	2244, 89, 4631, 2070, 4629, 489, 2042, 2046, 1519, 1631,
	127, 1424, 3340, 2078, 118, 1714, 650, 1532, 1310, 2122,
	1531, 1482, 1721, 1709, 2044, 2044, 2044, 2044, 672, 672,
	672, 672, 1712, 1703, 1297, 1730, 1202, 3481, 140, 139,
	2459, 4283, 2067, 1147, 2069, 1748, 3071, 3065, 1417, 2171,
	2208, 1747, 3068, 1519, 1722, 3067, 3072, 2168, 108, 2145,
	1729, 2459, 121, 108, 163, 2049, 2436, 3071, 3065, 1424,
	2459, 2459, 4122, 3068, 4141, 2100, 3067, 3072, 3065, 3096,
	2201, 2459, 2120, 1162, 1424, 1516, 3066, 2458, 3065, 1519,
	2297, 2296, 2209, 1162, 2202, 2846, 3066, 2458, 3749, 3747,
	2055, 2056, 2185, 120, 2207, 2211, 2084, 3468, 3467, 4140,
	2083, 1502, 2088, 3443, 2459, 1432, 1433, 3096, 3358, 3356,
	3832, 3091, 2077, 2144, 96, 3839, 4149, 2093, 2094, 3094,
	1492, 2096, 2039, 1502, 4434, 2117, 2186, 1426, 1517, 1518,
	2189, 1517, 1518, 3906, 1147, 4395, 4396, 2099, 2727, 1759,
	2160, 2161, 2298, 3987, 2118, 3088, 163, 2265, 2121, 108,
	3748, 4392, 4393, 1434, 3047, 3046, 4177, 4176, 3086, 3469,
	3073, 3064, 1541, 672, 2140, 2837, 163, 2143, 3106, 3105,
	3357, 1423, 1425, 3104, 2724, 96, 3103, 108, 3102, 2300,
	3988, 2302, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 489, 3101, 1502, 1218, 2314, 2316, 3100, 2176,
	3044, 3043, 2270, 2721, 2210, 4435, 1495, 1496, 1497, 1498,
	1499, 1492, 2164, 2175, 1502, 3099, 3048, 2351, 2207, 2179,
	1459, 2177, 2178, 2273, 2237, 1243, 2552, 1628, 672, 103,
	2379, 2380, 1476, 1483, 2074, 2200, 2333, 2336, 1629, 2187,
	2188, 2774, 2190, 2773, 2349, 2251, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 2435, 2279, 1502, 3145, 1245, 2264,
	2853, 2852, 3045, 1474, 1475, 1473, 2242, 2243, 685, 1228,
	2277, 2278, 2276, 666, 4188, 110, 1473, 116, 1474, 1475,
	1473, 1539, 1476, 1474, 1475, 1473, 1481, 2249, 1759, 4641,
	4338, 1155, 3034, 1476, 2261, 1217, 2441, 1476, 1076, 3033,
	2303, 2308, 1476, 1424, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 3032, 3031, 1502, 1474,
	1475, 1473, 2854, 4612, 4579, 4611, 2443, 4639, 1244, 2553,
	3030, 3239, 1382, 1474, 1475, 1473, 1475, 1473, 1476, 1559,
	3029, 1064, 1065, 1066, 3028, 676, 676, 676, 676, 2607,
	2387, 2270, 1476, 1164, 1476, 1474, 1475, 1473, 1247, 1474,
	1475, 1473, 2392, 2606, 2394, 676, 4588, 4470, 2535, 2448,
	2098, 2962, 1229, 2420, 1476, 1474, 1475, 1473, 1476, 1273,
	1182, 1181, 2418, 2317, 2318, 2319, 2320, 2321, 2348, 4635,
	1474, 1475, 1473, 4338, 1476, 4467, 2990, 4466, 2498, 2499,
	2500, 2501, 2502, 2558, 2348, 4608, 2796, 2345, 2442, 1476,
	4520, 4468, 1474, 1475, 1473, 4458, 2485, 2486, 2487, 1716,
	4415, 3798, 3792, 2233, 2473, 2476, 2457, 1256, 2479, 2480,
	2481, 1476, 2775, 2274, 2533, 2534, 2428, 2433, 2427, 2424,
	3168, 4486, 1470, 1474, 1475, 1473, 3012, 2494, 2495, 2496,
	2497, 3241, 2519, 2447, 2445, 530, 4338, 2469, 4412, 3858,
	4411, 2503, 1476, 2224, 2257, 2259, 2260, 2750, 2751, 2752,
	2235, 2271, 2258, 2226, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2508,
	676, 2490, 2250, 3725, 3723, 3350, 2220, 3867, 2355, 2225,
	4646, 1474, 1475, 1473, 3724, 2505, 2222, 4500, 2091, 4497,
	2246, 2235, 3573, 3571, 89, 693, 2301, 4626, 693, 3730,
	1476, 2414, 3728, 3572, 2356, 4367, 2275, 4324, 2511, 4261,
	2513, 4657, 2221, 4120, 4267, 2247, 4260, 2331, 2248, 4189,
	4085, 2339, 3995, 3994, 2324, 2325, 2326, 3993, 3992, 2223,
	2330, 4656, 2332, 2335, 2338, 676, 2343, 2344, 3578, 4647,
	163, 502, 2354, 3576, 4640, 3986, 4499, 3808, 4496, 1161,
	3152, 3154, 3153, 3152, 3154, 3153, 2386, 2216, 2388, 2389,
	4262, 3756, 2219, 2393, 4121, 2395, 2396, 2218, 3755, 2090,
	3521, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 3462, 3461, 692, 694, 3460, 505, 3152,
	3154, 3153, 3459, 2217, 3152, 3154, 3153, 516, 528, 529,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 3401, 3353, 1502, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 2961, 2959, 1502,
	2946, 1305, 489, 1304, 4623, 511, 1393, 518, 514, 1161,
	163, 523, 524, 2215, 3152, 3154, 3153, 3426, 3425, 4617,
	636, 636, 4546, 4538, 4428, 636, 89, 4409, 4408, 4355,
	4354, 4348, 163, 4347, 4126, 163, 4017, 3658, 3500, 525,
	636, 636, 3002, 3001, 2564, 3180, 163, 1563, 2549, 2548,
	489, 489, 489, 489, 693, 1386, 2299, 2092, 4351, 2085,
	3177, 1746, 1745, 1717, 1715, 163, 163, 163, 163, 163,
	1300, 163, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 558, 4456, 1502, 163, 163, 2787,
	4455, 4452, 636, 4385, 1277, 4381, 4365, 4300, 163, 4294,
	2054, 4191, 520, 4190, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 1276, 4116, 1502, 2577,
	4115, 521, 4096, 4041, 4005, 4002, 3969, 2073, 3938, 3937,
	3902, 3861, 3860, 3807, 513, 3806, 1412, 3805, 3804, 3795,
	3794, 1161, 3793, 3754, 3751, 3726, 1385, 3174, 3721, 3712,
	3708, 693, 3703, 3702, 636, 636, 636, 3701, 3574, 1161,
	3563, 3551, 3547, 3540, 3539, 3538, 3465, 3458, 2554, 3457,
	3456, 3384, 3189, 3188, 672, 3186, 3049, 2550, 1539, 2957,
	2855, 1529, 2560, 2716, 2717, 2718, 1528, 1527, 2614, 2556,
	636, 2575, 512, 526, 2547, 636, 636, 2095, 3644, 527,
	1739, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1492, 2709, 1346, 1502, 3236, 566, 693, 163,
	163, 4016, 2715, 3962, 163, 2777, 1161, 2729, 693, 4156,
	693, 2569, 3595, 4510, 3738, 4440, 2754, 3961, 163, 636,
	3403, 163, 163, 163, 163, 3595, 693, 4024, 693, 3660,
	503, 1759, 3679, 163, 2584, 3738, 4371, 3000, 2568, 2265,
	2694, 163, 3387, 2620, 3386, 163, 3385, 1539, 2576, 3738,
	4271, 1311, 1456, 1456, 3738, 4105, 4590, 2591, 3595, 4104,
	2594, 3595, 4099, 2583, 2710, 4038, 693, 519, 506, 507,
	3679, 533, 3595, 4009, 2635, 508, 510, 638, 504, 532,
	531, 1351, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 2270, 163, 1502, 2203, 2613, 3168,
	693, 2322, 489, 2618, 693, 2616, 2748, 2749, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	2422, 2714, 1502, 2703, 3595, 3877, 522, 2040, 3820, 2040,
	3819, 698, 2841, 3881, 2040, 2253, 2254, 2255, 1161, 2839,
	1161, 3643, 1311, 1161, 2273, 3738, 3737, 3595, 3594, 4301,
	1161, 2442, 3394, 3393, 3000, 1161, 1161, 3390, 3391, 3390,
	3389, 2729, 693, 4170, 163, 2541, 163, 2589, 2588, 2322,
	2571, 3915, 672, 2740, 2422, 672, 3168, 2738, 2739, 2423,
	102, 2425, 2203, 2759, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 2322, 693, 1502, 2203,
	693, 1634, 1633, 1539, 3595, 2203, 2565, 3275, 2239, 2328,
	2329, 3276, 2755, 1759, 3679, 2763, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 3404, 89, 1502,
	163, 163, 163, 2423, 2524, 2040, 1350, 2729, 1308, 1309,
	3392, 1309, 1076, 676, 3187, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 3027, 1161, 1502,
	2429, 2806, 2238, 2804, 2803, 2729, 2605, 2097, 2546, 2540,
	2240, 2795, 1380, 1486, 2142, 1489, 1757, 2106, 2523, 2040,
	2615, 676, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 2440,
	1487, 1488, 1485, 1737, 1735, 1614, 1383, 4402, 2708, 4272,
	4136, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1492, 2840, 4020, 1502, 3757, 3746, 594, 3006,
	3743, 2466, 2493, 2468, 3162, 3037, 2842, 3036, 2489, 2843,
	2901, 1315, 2719, 2720, 2865, 2904, 2722, 2723, 1704, 2518,
	2725, 2726, 2699, 2700, 2737, 2484, 2483, 1707, 1296, 2507,
	1726, 3809, 2559, 163, 2274, 1209, 1620, 2844, 1208, 163,
	163, 636, 636, 636, 2847, 4625, 163, 4624, 2994, 2504,
	2857, 3880, 4603, 4601, 4592, 2908, 4591, 2911, 2912, 2949,
	2951, 4567, 2811, 2813, 2952, 2953, 4560, 2954, 2955, 2819,
	2820, 2821, 2822, 4554, 2756, 2757, 2758, 4552, 4502, 4501,
	3872, 2913, 2916, 3868, 3660, 2171, 3402, 2958, 2997, 2996,
	2980, 2963, 2702, 2168, 3041, 2696, 2116, 1742, 1352, 1312,
	2960, 535, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 1463, 1464, 1502, 3004, 2198, 2706,
	2195, 2193, 2705, 2197, 2983, 2196, 2194, 2704, 2764, 2765,
	2766, 2767, 2768, 2192, 1463, 1464, 2191, 2788, 2789, 2790,
	4390, 4304, 3191, 4162, 4357, 1466, 2998, 4138, 2745, 2744,
	1468, 1467, 3175, 1465, 4075, 3178, 2793, 3853, 3181, 3020,
	3829, 3003, 3741, 3490, 2044, 1466, 1461, 3026, 537, 538,
	1468, 1467, 3489, 1465, 3383, 3063, 3013, 3382, 672, 676,
	3017, 3381, 676, 2917, 2907, 3164, 4358, 3069, 3076, 4165,
	3079, 4299, 4298, 3170, 3171, 3172, 3879, 1759, 4056, 3090,
	3057, 3166, 3143, 3035, 4054, 2265, 4111, 4110, 4008, 557,
	2567, 3182, 2566, 3040, 1415, 43, 2089, 4, 3989, 3990,
	1451, 3151, 3052, 3084, 3083, 3466, 4433, 3845, 3198, 3697,
	4583, 1452, 3059, 3070, 3654, 3501, 3355, 2621, 1630, 1294,
	1278, 1275, 1274, 3248, 1215, 4027, 3092, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 43,
	2270, 1502, 106, 4026, 1393, 2242, 2243, 3272, 3277, 3907,
	3802, 3800, 672, 3431, 1410, 1271, 1272, 3803, 3801, 1361,
	2512, 1741, 108, 4302, 4266, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 1270, 4012, 1502,
	3759, 3238, 3745, 2965, 3193, 2165, 3282, 3169, 2312, 2313,
	4474, 2091, 2090, 1447, 1448, 1445, 1446, 3185, 3225, 2743,
	3183, 3227, 3653, 3271, 1439, 1440, 4473, 2742, 4472, 3966,
	2610, 3198, 3195, 3280, 3196, 1248, 687, 4387, 3199, 3200,
	4386, 4296, 4183, 4166, 163, 4129, 4074, 3888, 3273, 3293,
	688, 102, 3887, 3617, 3000, 3005, 4429, 3226, 4605, 4604,
	3351, 3453, 3025, 3009, 3010, 3023, 3022, 3364, 2969, 2970,
	2971, 4604, 163, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 2805, 2784, 1502, 2781, 2747,
	2595, 2068, 1471, 1207, 1206, 4605, 4179, 1382, 3284, 3380,
	3286, 3287, 1161, 2236, 680, 684, 683, 4490, 3332, 3274,
	163, 104, 163, 4218, 65, 68, 1161, 3363, 4220, 23,
	4356, 1161, 1, 594, 3420, 4289, 3285, 3151, 4219, 22,
	2865, 4221, 24, 4222, 25, 4216, 18, 3642, 674, 3292,
	4215, 17, 4214, 16, 1161, 4217, 19, 1161, 4213, 15,
	4207, 11, 4242, 39, 3641, 4240, 37, 3256, 3257, 3258,
	3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3342, 4239,
	36, 2503, 4243, 40, 4238, 32, 4237, 31, 50, 3405,
	4236, 30, 4233, 27, 4232, 26, 3249, 3250, 3251, 3252,
	3253, 4212, 14, 4209, 13, 3483, 4208, 12, 2585, 3433,
	4206, 10, 2124, 593, 3780, 676, 163, 163, 3779, 3786,
	3410, 3413, 1161, 2981, 3362, 163, 4284, 3361, 4150, 3339,
	3796, 3422, 1724, 3978, 1185, 2522, 1301, 4297, 4161, 3359,
	4163, 3763, 3343, 3344, 3345, 3762, 3346, 3347, 2974, 1161,
	3388, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1492, 2973, 3400, 1502, 1295, 3202, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	2572, 2104, 1502, 3437, 3060, 3228, 3061, 3229, 3230, 2536,
	3231, 3232, 1459, 3439, 3233, 3440, 3442, 3583, 3050, 4181,
	3447, 2609, 3349, 2147, 3451, 3452, 2596, 3454, 1362, 676,
	3242, 3243, 3244, 3245, 3455, 2444, 2449, 3926, 3688, 4083,
	3687, 3463, 3464, 3686, 2858, 1149, 117, 2551, 1227, 509,
	3470, 2635, 2446, 2927, 4164, 3057, 1298, 3480, 2926, 2944,
	2462, 2904, 1388, 3934, 1704, 3550, 2925, 2924, 4268, 3593,
	2928, 1639, 1637, 3615, 3512, 1638, 1636, 1641, 1640, 515,
	1622, 4342, 3657, 3610, 3151, 1472, 741, 135, 3093, 646,
	647, 124, 133, 517, 2769, 1510, 2741, 3491, 3649, 2848,
	1074, 1075, 1067, 4432, 2732, 4175, 3478, 4057, 4167, 3548,
	3504, 4331, 3506, 1457, 3479, 4059, 3886, 3616, 2794, 1558,
	2797, 2346, 711, 3519, 658, 3522, 3674, 3524, 3526, 3528,
	3530, 3905, 4061, 3668, 2256, 725, 724, 723, 3478, 720,
	721, 2381, 4313, 2245, 3268, 3267, 3270, 1484, 108, 3395,
	163, 1360, 2204, 2205, 2206, 163, 700, 1431, 163, 163,
	163, 3596, 3618, 3662, 1430, 1429, 3282, 1428, 1422, 2171,
	669, 2415, 3485, 3486, 3487, 3011, 1400, 2168, 1398, 3492,
	3493, 1397, 3495, 3663, 2906, 1743, 1610, 2701, 2697, 3664,
	2915, 2915, 668, 3280, 673, 3735, 3513, 46, 2746, 3518,
	1246, 1427, 3627, 3628, 3629, 1462, 3630, 3650, 3631, 4068,
	111, 682, 3633, 681, 3635, 690, 3348, 29, 21, 20,
	1203, 2626, 3684, 2646, 1183, 48, 54, 53, 1563, 1563,
	1563, 1568, 1568, 1568, 1571, 1572, 1573, 1574, 1568, 1568,
	1568, 1161, 51, 163, 3661, 52, 2968, 2514, 4341, 4528,
	1281, 1161, 1161, 3711, 4545, 4577, 1357, 636, 3235, 38,
	35, 34, 3666, 33, 4234, 3331, 3678, 3621, 3622, 3623,
	3624, 3625, 3151, 3685, 163, 636, 1161, 2323, 4228, 4227,
	489, 3680, 3681, 3682, 3683, 2327, 4230, 4229, 4226, 4231,
	4225, 4224, 4223, 636, 3706, 4241, 4211, 3709, 4210, 3713,
	4512, 3677, 4511, 5, 98, 95, 3722, 41, 119, 1145,
	2, 0, 0, 0, 3742, 0, 0, 1161, 2390, 2391,
	0, 636, 0, 1161, 3615, 2397, 2398, 2399, 2400, 636,
	3739, 3740, 0, 3812, 0, 0, 0, 0, 0, 3775,
	3776, 3777, 3810, 0, 2413, 0, 0, 0, 3760, 0,
	0, 0, 1161, 1161, 0, 0, 0, 0, 0, 3753,
	1569, 1570, 0, 1562, 1564, 1565, 1602, 1603, 1604, 0,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 0, 3750, 1502, 3774, 3778, 0, 3814, 0,
	0, 0, 0, 3816, 0, 0, 0, 0, 0, 0,
	3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 0,
	3825, 3826, 0, 0, 0, 3827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3150, 0, 0, 3620, 0,
	3811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1161, 0, 0, 0, 3063, 0, 3815, 0,
	1161, 1161, 1161, 3828, 0, 3818, 0, 3850, 3069, 3821,
	0, 3646, 3647, 3648, 0, 0, 0, 0, 0, 0,
	0, 3161, 0, 3883, 3163, 163, 3844, 3533, 0, 3535,
	0, 163, 0, 0, 3842, 3851, 0, 1161, 0, 0,
	0, 0, 0, 0, 0, 3556, 3557, 3558, 0, 0,
	0, 0, 3875, 3059, 3070, 0, 0, 0, 0, 3580,
	0, 0, 3615, 3615, 0, 0, 3198, 0, 0, 0,
	698, 3889, 3891, 3478, 0, 0, 3912, 0, 0, 3668,
	0, 0, 0, 0, 672, 0, 0, 3917, 0, 0,
	0, 0, 0, 3151, 108, 0, 1161, 0, 3478, 3928,
	0, 3871, 0, 0, 0, 0, 0, 3869, 0, 0,
	0, 0, 0, 0, 3909, 0, 0, 0, 3240, 0,
	0, 0, 0, 0, 0, 163, 3282, 0, 3744, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	1161, 3752, 0, 0, 0, 3833, 0, 0, 0, 0,
	0, 0, 0, 3280, 0, 0, 3958, 3911, 0, 0,
	0, 0, 0, 0, 3874, 3876, 3919, 0, 3925, 1147,
	0, 0, 3854, 0, 0, 0, 0, 0, 0, 0,
	0, 3150, 0, 0, 108, 489, 0, 0, 3908, 3935,
	0, 2915, 2915, 2915, 666, 2915, 2915, 3920, 0, 0,
	3956, 489, 0, 3959, 3916, 0, 0, 0, 3151, 0,
	0, 0, 3693, 3694, 3695, 0, 163, 0, 0, 0,
	3932, 3963, 0, 0, 0, 3964, 0, 0, 0, 0,
	0, 0, 0, 3714, 3715, 3716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3151, 0, 163, 3732, 0,
	0, 3942, 3952, 3953, 3941, 3951, 0, 0, 0, 0,
	0, 1161, 1161, 1161, 0, 0, 0, 0, 636, 4036,
	0, 0, 3968, 0, 0, 163, 636, 0, 3967, 0,
	1161, 1161, 0, 0, 0, 0, 3996, 3981, 0, 3977,
	3991, 0, 0, 0, 4014, 0, 0, 0, 636, 0,
	1161, 0, 636, 0, 0, 4007, 636, 636, 0, 636,
	0, 4013, 0, 3999, 0, 4018, 4019, 0, 4010, 0,
	163, 163, 3438, 3912, 4079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4045, 3339, 4028, 0, 108,
	4087, 4088, 489, 2915, 0, 0, 3954, 3955, 0, 0,
	489, 489, 489, 489, 1161, 3339, 0, 1161, 489, 489,
	1161, 489, 0, 0, 4043, 0, 2561, 4029, 0, 4030,
	1161, 0, 1161, 0, 489, 489, 1161, 163, 489, 0,
	4078, 4076, 0, 1161, 0, 1161, 1161, 1161, 1161, 1161,
	1161, 0, 0, 4073, 0, 0, 0, 0, 4107, 0,
	4109, 0, 0, 4082, 4080, 4077, 0, 4093, 3150, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 3893, 3894,
	3895, 3896, 0, 0, 0, 0, 3900, 0, 0, 0,
	3903, 3904, 3534, 4021, 4022, 4094, 0, 0, 0, 0,
	0, 0, 0, 3201, 0, 0, 1161, 0, 0, 0,
	0, 0, 1161, 0, 3151, 2617, 4114, 4091, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 1161, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 4134, 0, 1502, 0, 0, 0,
	3668, 4133, 4131, 0, 4182, 0, 2711, 0, 0, 4132,
	4187, 0, 4144, 0, 0, 108, 4031, 4135, 4033, 4137,
	4035, 0, 0, 0, 0, 0, 2728, 0, 1147, 0,
	1147, 0, 4148, 0, 0, 0, 0, 3965, 0, 4146,
	0, 0, 0, 108, 4157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4185, 0, 4180, 0, 3151, 0,
	4178, 0, 0, 0, 0, 0, 1161, 0, 1147, 0,
	0, 1161, 0, 3652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4198, 0, 0, 0, 0, 4200,
	0, 0, 0, 0, 0, 0, 0, 0, 2761, 0,
	2762, 0, 0, 0, 0, 4259, 3150, 0, 0, 0,
	4273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4286, 3875, 2770, 2771, 2772, 0, 4281, 3339, 2776,
	0, 2779, 0, 4317, 2782, 4279, 3282, 2785, 2786, 4282,
	0, 4288, 2791, 2792, 4295, 0, 0, 0, 2798, 2799,
	2800, 0, 0, 2801, 4323, 2802, 4316, 4303, 4319, 0,
	0, 4320, 0, 3280, 0, 4326, 4046, 4047, 4048, 1460,
	4093, 1147, 0, 1147, 0, 4276, 0, 0, 1313, 1147,
	0, 0, 0, 0, 0, 2807, 2808, 2809, 2810, 0,
	0, 2814, 2815, 2816, 2817, 2818, 163, 0, 1161, 4143,
	2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 4346, 2835, 4383, 4086, 0, 4369, 0, 0,
	0, 0, 0, 3248, 0, 0, 0, 157, 0, 1161,
	0, 0, 0, 534, 3874, 163, 0, 0, 157, 0,
	636, 554, 4106, 0, 3339, 4103, 4370, 636, 4379, 0,
	4366, 4391, 0, 0, 0, 4378, 3875, 656, 0, 0,
	4380, 0, 0, 0, 4388, 4352, 157, 0, 0, 489,
	4389, 4361, 0, 0, 0, 0, 0, 0, 0, 656,
	699, 0, 0, 0, 489, 0, 1084, 0, 0, 4406,
	157, 0, 0, 4442, 489, 4130, 4413, 594, 4439, 4410,
	0, 0, 0, 0, 0, 4454, 0, 4277, 0, 4373,
	0, 489, 157, 4139, 0, 0, 0, 4441, 4147, 0,
	4460, 4453, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 1147, 0, 4419, 1147, 0, 0, 0,
	4445, 4446, 1147, 1147, 1147, 1147, 4444, 1147, 1147, 0,
	4465, 1147, 1147, 0, 0, 4459, 4461, 0, 0, 0,
	0, 0, 0, 3615, 1147, 0, 4377, 0, 3874, 4462,
	4413, 0, 4475, 0, 0, 4186, 0, 3150, 0, 0,
	3339, 0, 4509, 0, 0, 4476, 4491, 4489, 1147, 1161,
	3282, 1147, 4505, 4498, 1147, 0, 0, 0, 4397, 4517,
	4507, 4478, 4495, 0, 4516, 1161, 4478, 2435, 4536, 108,
	4478, 4488, 4515, 4525, 4514, 0, 4513, 3280, 0, 594,
	4548, 0, 0, 4494, 0, 4469, 0, 0, 4471, 0,
	0, 0, 0, 0, 0, 4480, 4481, 4482, 0, 1147,
	4485, 0, 0, 1147, 0, 1147, 4571, 0, 0, 1147,
	4527, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	1147, 1147, 1147, 1147, 0, 1147, 163, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 4330, 0, 4334, 0,
	4521, 0, 0, 4523, 0, 0, 0, 0, 0, 0,
	0, 0, 3150, 1147, 4602, 1147, 4600, 1147, 0, 0,
	0, 0, 4478, 4613, 4478, 0, 4615, 0, 4580, 0,
	0, 3167, 3921, 3922, 3923, 3924, 0, 0, 0, 4478,
	4478, 4478, 0, 4627, 4478, 0, 0, 1147, 4633, 3150,
	0, 4569, 489, 1147, 4503, 2915, 2915, 1161, 0, 0,
	1161, 1147, 0, 0, 4359, 0, 0, 0, 0, 0,
	0, 489, 4478, 0, 4478, 4587, 0, 1147, 0, 4375,
	1147, 0, 3203, 3204, 3205, 3206, 3207, 3208, 0, 0,
	1147, 0, 0, 0, 0, 0, 1147, 0, 0, 0,
	4553, 0, 0, 4555, 0, 0, 4478, 0, 0, 4610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4478, 0, 0, 0, 0, 0, 0, 0, 0, 4407,
	0, 0, 0, 0, 0, 0, 4478, 0, 0, 0,
	0, 0, 2915, 2915, 0, 4638, 1161, 0, 0, 4478,
	0, 0, 0, 0, 0, 4478, 0, 0, 0, 0,
	4431, 0, 0, 0, 0, 489, 1161, 489, 0, 489,
	0, 0, 4650, 0, 4443, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 0,
	3536, 3537, 0, 0, 0, 0, 0, 1161, 3546, 0,
	0, 3549, 0, 0, 0, 0, 0, 0, 3559, 3560,
	3561, 3562, 0, 0, 0, 0, 3575, 3577, 3579, 0,
	0, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 4420, 0, 3582, 0, 0, 0, 0, 0, 4060,
	4063, 0, 0, 0, 0, 0, 0, 0, 0, 4492,
	157, 0, 0, 0, 0, 0, 0, 0, 3150, 0,
	0, 0, 0, 0, 0, 0, 0, 4508, 0, 1539,
	0, 1316, 1323, 1324, 1326, 1327, 1328, 0, 1330, 1331,
	0, 1333, 1334, 1335, 156, 1338, 4547, 1341, 1342, 1343,
	1344, 1345, 4551, 0, 0, 544, 0, 1649, 0, 0,
	0, 0, 0, 0, 0, 0, 710, 0, 0, 4568,
	0, 0, 0, 0, 0, 0, 4564, 3234, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 0, 0, 0, 0,
	0, 0, 656, 0, 0, 0, 0, 1148, 489, 0,
	0, 163, 3150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 158, 0, 492, 0, 0, 1184,
	739, 0, 1161, 0, 0, 158, 0, 1084, 3699, 3700,
	1663, 0, 1201, 0, 0, 0, 3707, 0, 0, 3710,
	4616, 0, 0, 0, 657, 0, 3717, 3718, 3719, 3720,
	0, 1161, 0, 158, 0, 3727, 3729, 3731, 0, 0,
	0, 3734, 0, 0, 0, 0, 657, 0, 0, 0,
	0, 0, 0, 1085, 0, 0, 1539, 158, 1153, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 0, 553, 1502, 0, 3179, 0, 0, 0, 158,
	489, 0, 0, 0, 0, 0, 489, 0, 0, 0,
	0, 492, 158, 0, 0, 0, 0, 0, 0, 0,
	1161, 0, 0, 0, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 0, 1083, 1502, 3598,
	3599, 3600, 1152, 0, 0, 0, 0, 0, 0, 0,
	3176, 1161, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1190, 0, 3619, 0,
	0, 0, 4063, 0, 0, 0, 0, 0, 3626, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 3173, 0, 1502, 3637, 3638, 3639, 3640, 0, 0,
	0, 0, 3645, 0, 0, 0, 0, 0, 0, 0,
	0, 1161, 0, 3655, 3656, 0, 0, 0, 0, 0,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 0, 0, 1502, 0, 489, 0, 0, 0,
	0, 3665, 0, 0, 0, 0, 4335, 4339, 0, 0,
	0, 0, 0, 0, 0, 4353, 0, 0, 1676, 1679,
	1680, 1681, 1682, 1683, 1684, 1161, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 0,
	1664, 1665, 1666, 1646, 1645, 1677, 1647, 1650, 1644, 1648,
	1643, 2760, 0, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 0, 0, 0, 0, 2731, 0, 0, 0,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 636, 0, 1502, 0, 0, 0, 0, 2778,
	4414, 0, 0, 0, 163, 0, 0, 1161, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	0, 0, 1502, 1204, 0, 0, 1161, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 0,
	0, 1502, 0, 0, 1161, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 0, 0, 1502,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 1084,
	0, 0, 0, 0, 1084, 0, 0, 0, 1161, 0,
	0, 0, 0, 0, 0, 0, 0, 4483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 1678, 0, 0, 636, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 4543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 1720, 554, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 157, 0, 0, 1720, 554, 0, 0, 1754, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 157, 157, 157, 157, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4614, 0, 2071, 2072, 0, 0, 0, 4619, 0,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 0, 3897, 3898, 3899, 0, 3901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 3910, 0, 3913, 3914, 0, 0, 0,
	0, 0, 0, 0, 1085, 0, 3918, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 2123, 0, 0, 2126, 2127, 2128, 0,
	2130, 2131, 0, 0, 2132, 0, 0, 0, 2133, 0,
	0, 2134, 0, 0, 0, 2135, 2136, 0, 2137, 2138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1083, 0,
	0, 0, 0, 3957, 0, 157, 157, 0, 0, 0,
	656, 3960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 1754, 157, 157, 157,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4023,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 699,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2232, 0, 0, 0, 0,
	0, 0, 4064, 4065, 4066, 4067, 0, 0, 0, 0,
	0, 0, 4071, 4072, 0, 0, 0, 0, 0, 0,
	656, 0, 157, 2232, 2232, 2232, 4081, 0, 0, 2232,
	0, 2232, 2232, 2232, 0, 2232, 2232, 0, 0, 0,
	1084, 2232, 0, 0, 0, 0, 0, 0, 0, 2052,
	4092, 0, 0, 0, 0, 2232, 2232, 2232, 2232, 0,
	0, 2232, 2232, 2232, 2232, 2232, 0, 0, 0, 0,
	2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232,
	2232, 2232, 0, 1611, 0, 0, 157, 157, 157, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 0, 4152, 4153, 4154, 4155, 0,
	0, 0, 0, 158, 0, 0, 1085, 0, 0, 0,
	0, 1085, 0, 0, 0, 0, 0, 4171, 0, 0,
	0, 0, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4184, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1611, 0, 0, 1744, 157,
	0, 0, 4193, 0, 0, 157, 157, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 1083, 1623, 0, 2057, 2058,
	2059, 2060, 2061, 0, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 4278, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 158, 4287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4307, 158, 0, 0, 158, 4318,
	0, 0, 0, 0, 4321, 4322, 0, 0, 0, 0,
	0, 0, 0, 492, 492, 492, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 158,
	158, 158, 158, 0, 158, 0, 1710, 0, 0, 0,
	0, 0, 1719, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 553, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4398, 0,
	0, 0, 4401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2103, 0,
	0, 0, 0, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 158, 0, 0, 2125, 657, 0, 2169,
	0, 0, 0, 0, 0, 0, 0, 0, 2252, 0,
	0, 158, 0, 0, 158, 158, 158, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 657, 0,
	157, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2173, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	160, 0, 4504, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 2267,
	0, 0, 0, 0, 160, 1157, 157, 0, 656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4549, 4550, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 4561, 0, 0, 4563, 2590, 160,
	0, 0, 0, 2417, 0, 2419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 158,
	0, 0, 0, 2173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4599, 0, 2173, 0, 2173, 0, 0,
	2309, 0, 656, 157, 0, 0, 0, 2310, 0, 0,
	0, 656, 2173, 2173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 158, 158, 0, 0, 0, 0,
	0, 1085, 0, 0, 0, 0, 0, 0, 1084, 1084,
	0, 1083, 0, 0, 1756, 0, 0, 0, 2267, 0,
	0, 1153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2529, 0, 0, 0,
	0, 0, 2531, 2532, 0, 0, 0, 0, 0, 2539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2232, 2173, 0, 0, 1152, 0, 2232, 2232, 2232,
	2232, 2232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2232, 158, 0, 0, 0,
	0, 0, 158, 158, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 45,
	0, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 75, 76, 0, 0, 0, 0, 0, 72,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 0, 0, 0, 157, 0, 0, 0,
	0, 157, 0, 0, 157, 2845, 1756, 0, 1084, 63,
	0, 0, 0, 89, 159, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 2693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2622, 0, 159, 1154, 0,
	0, 0, 0, 0, 0, 0, 1393, 0, 2642, 157,
	0, 0, 0, 0, 2666, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 159, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 160, 0, 2641, 49, 90, 56,
	55, 58, 0, 0, 80, 0, 96, 0, 0, 0,
	0, 0, 0, 2663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2545, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 2555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 158, 0, 0,
	0, 0, 69, 70, 2632, 2631, 2644, 2651, 2630, 2643,
	2634, 0, 0, 2667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2676, 158, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 2654, 2652, 2647, 0, 0, 0, 2649, 0, 0,
	2693, 0, 0, 0, 0, 84, 0, 0, 0, 2665,
	2687, 2638, 2637, 158, 60, 657, 0, 0, 0, 2232,
	1756, 0, 0, 0, 1393, 0, 2642, 0, 0, 2633,
	0, 157, 2666, 0, 0, 0, 0, 157, 699, 0,
	0, 0, 0, 0, 2232, 2639, 2640, 0, 0, 2657,
	0, 2648, 2650, 2653, 2655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2641, 0, 0, 0, 0, 2570,
	0, 0, 0, 0, 82, 83, 0, 0, 0, 0,
	0, 2663, 0, 2582, 0, 0, 0, 0, 2582, 0,
	64, 81, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 2683, 0, 0, 0, 0, 0, 0, 657,
	158, 2582, 0, 0, 2582, 0, 0, 0, 657, 0,
	0, 0, 0, 0, 0, 0, 0, 2691, 0, 1084,
	0, 157, 0, 0, 0, 0, 0, 0, 2673, 0,
	0, 0, 0, 0, 0, 1085, 1085, 0, 0, 0,
	0, 2267, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2713,
	0, 0, 2632, 3472, 2644, 0, 3471, 2643, 2634, 0,
	0, 2667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2676, 0, 0, 0, 2735, 0, 0, 1083,
	1083, 0, 0, 0, 0, 2173, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2665, 2687, 2638,
	2637, 0, 0, 2838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 2633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3473, 3474, 0, 2659, 2657, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 2670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2636, 0,
	0, 0, 0, 158, 0, 0, 157, 157, 158, 0,
	2683, 158, 0, 0, 0, 1085, 2966, 0, 85, 159,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2691, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 490, 2673, 2993, 2660, 2661,
	0, 0, 2664, 0, 0, 2669, 0, 2674, 2671, 2672,
	0, 2675, 2668, 157, 2678, 2677, 2679, 0, 2680, 2681,
	2682, 0, 0, 2684, 2685, 2686, 2688, 2689, 2690, 1083,
	0, 0, 2662, 2692, 0, 0, 0, 0, 0, 0,
	0, 0, 2656, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 656, 0, 0, 0, 0, 0, 2964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2972, 2976,
	0, 2899, 0, 0, 0, 160, 160, 160, 160, 160,
	0, 160, 0, 0, 2659, 0, 0, 0, 0, 0,
	0, 0, 0, 2995, 0, 1393, 2658, 0, 0, 0,
	0, 0, 0, 2871, 0, 2169, 0, 0, 0, 0,
	0, 0, 0, 2670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2636, 0, 0, 0,
	0, 0, 0, 0, 2582, 0, 0, 0, 0, 1084,
	3021, 0, 0, 0, 0, 0, 0, 0, 3192, 0,
	0, 0, 2868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2173,
	2173, 0, 0, 0, 0, 0, 2660, 2661, 0, 0,
	2664, 0, 0, 2669, 0, 2674, 2671, 2672, 0, 2675,
	2668, 0, 2678, 2677, 2679, 0, 2680, 2681, 2682, 0,
	0, 2684, 2685, 2686, 2688, 2689, 2690, 0, 0, 0,
	2662, 2692, 0, 0, 0, 0, 0, 2267, 0, 0,
	2656, 0, 0, 0, 0, 0, 0, 0, 158, 160,
	160, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 160, 160, 160, 160, 0, 0, 0, 0, 3165,
	0, 0, 2872, 0, 0, 0, 0, 3165, 3165, 3165,
	0, 160, 157, 2881, 0, 0, 0, 0, 0, 0,
	0, 2173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2173, 0, 0, 0, 2870, 2893,
	0, 157, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2658, 160, 3281, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3246, 0, 0, 0, 0, 0, 0,
	3398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	1083, 0, 0, 0, 0, 0, 160, 0, 3432, 0,
	0, 2888, 0, 0, 492, 490, 0, 2173, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 2897, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 2878, 159, 0,
	0, 0, 0, 1611, 1611, 0, 0, 0, 0, 1758,
	158, 0, 0, 490, 490, 490, 490, 1754, 0, 0,
	160, 160, 160, 0, 0, 0, 0, 0, 159, 159,
	159, 159, 159, 0, 159, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 2899, 0, 0, 0, 1157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3515, 0, 0, 0, 0, 0, 2890, 0, 1393, 0,
	0, 0, 0, 0, 0, 0, 2871, 0, 0, 0,
	0, 0, 0, 158, 158, 0, 0, 0, 3406, 3407,
	3408, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 157, 0, 492, 0, 3165, 3165, 1084,
	0, 0, 2860, 492, 492, 492, 492, 0, 0, 0,
	0, 492, 492, 0, 492, 2868, 0, 3445, 0, 0,
	0, 0, 0, 0, 0, 2863, 0, 492, 492, 0,
	158, 492, 0, 160, 0, 0, 0, 0, 0, 160,
	160, 0, 0, 0, 0, 0, 160, 2861, 0, 0,
	0, 0, 0, 0, 2875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3488, 159, 159, 2713, 0, 0, 3494, 0, 2170,
	0, 0, 0, 0, 0, 0, 0, 2713, 0, 2713,
	0, 159, 0, 3514, 159, 159, 159, 159, 0, 0,
	2713, 0, 2713, 3523, 2713, 2713, 2713, 2713, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 2864, 2866, 657,
	0, 2869, 0, 0, 2874, 2872, 2879, 2876, 2877, 0,
	2880, 2873, 0, 2883, 2882, 2884, 2881, 2885, 2886, 2887,
	0, 0, 2889, 2891, 2892, 2894, 2895, 2896, 0, 0,
	0, 2867, 2898, 0, 0, 0, 0, 0, 0, 0,
	0, 2900, 0, 3165, 0, 0, 0, 0, 159, 3597,
	0, 2870, 2893, 0, 0, 490, 0, 0, 0, 2266,
	0, 0, 0, 0, 0, 0, 0, 0, 3613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3281, 0, 0, 2169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3761,
	0, 0, 0, 0, 2888, 2862, 0, 0, 0, 0,
	1083, 0, 0, 2173, 0, 0, 0, 0, 2713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2897,
	0, 0, 0, 0, 0, 0, 0, 0, 3813, 0,
	2878, 0, 0, 159, 159, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2266, 0,
	0, 1154, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2890,
	0, 0, 160, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2976, 0, 0, 0, 0,
	160, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 492, 0, 0,
	0, 0, 159, 159, 0, 0, 3165, 492, 2863, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2864, 2866, 0, 0, 2869, 0, 0, 2874, 0, 2879,
	2876, 2877, 0, 2880, 2873, 0, 2883, 2882, 2884, 0,
	2885, 2886, 2887, 0, 0, 2889, 2891, 2892, 2894, 2895,
	2896, 0, 0, 0, 2867, 2898, 0, 0, 0, 0,
	0, 0, 0, 0, 2900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 3878, 0, 0, 0,
	657, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	158, 0, 2173, 0, 0, 0, 3281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 0,
	580, 591, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 2862, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 160, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 3165, 0, 0, 3165, 0, 0,
	0, 0, 0, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	492, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 572, 571, 574,
	0, 0, 0, 160, 0, 0, 0, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4025, 0, 583, 0, 0, 0, 656,
	587, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 4032, 0, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2173, 0, 0, 575, 0, 0,
	0, 0, 0, 0, 4145, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2266, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 576, 577, 584, 2119, 588, 589,
	592, 0, 0, 0, 0, 0, 0, 0, 2624, 2625,
	0, 0, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 0, 0, 0, 160, 0, 0, 0, 4325,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 4169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 3165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 3281, 0, 159, 0,
	0, 159, 0, 1758, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 3165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 159, 0, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 2173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 4169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 160, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 3165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2173, 0, 0, 0, 0, 0, 2266, 0, 0,
	0, 0, 0, 0, 1083, 0, 0, 3042, 159, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 3078,
	0, 0, 0, 0, 0, 2173, 657, 0, 3089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3109, 3110, 3111, 3112, 3113, 3114,
	3115, 3116, 0, 0, 3119, 3120, 3121, 3122, 3123, 3124,
	3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134,
	3135, 3136, 3137, 3138, 3139, 3140, 3141, 0, 3155, 3156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 490, 0, 0, 0, 0, 4251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4244, 0, 0, 4576, 4579, 4575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3294, 3295,
	3296, 0, 3300, 3301, 3302, 3303, 3304, 0, 159, 3307,
	3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317,
	3318, 3319, 3320, 3321, 3322, 3323, 160, 3325, 3326, 3327,
	3328, 3329, 3330, 0, 3333, 3334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 159, 159, 0, 96, 0, 0, 0,
	0, 0, 4245, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	62, 92, 91, 490, 490, 490, 490, 57, 0, 0,
	0, 490, 490, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 490, 0,
	159, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 69, 70, 0, 4247, 0, 0, 0, 0,
	0, 0, 0, 0, 4158, 4256, 4248, 4249, 4250, 4254,
	4255, 4252, 0, 4253, 1662, 4257, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4251, 0,
	0, 0, 0, 0, 0, 84, 0, 3502, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 4244,
	0, 0, 0, 0, 4654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3541, 3542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2170,
	0, 0, 0, 1649, 0, 0, 0, 160, 0, 0,
	4258, 4246, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 3696, 4247, 3698, 0, 89, 0, 0,
	0, 3704, 3705, 4251, 4256, 4248, 4249, 4250, 4254, 4255,
	4252, 0, 4253, 0, 4257, 0, 0, 0, 159, 78,
	0, 79, 0, 0, 4244, 0, 1662, 0, 0, 4648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 490, 60, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4245, 0, 0, 4258,
	4246, 0, 66, 67, 73, 1649, 74, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 1679, 1680, 1681, 1682, 1683,
	1684, 0, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 0, 1664, 1665, 1666, 1646,
	1645, 1677, 1647, 1650, 1644, 1648, 1643, 3843, 0, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1663, 0,
	0, 160, 0, 0, 0, 0, 69, 70, 0, 4247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4256,
	4248, 4249, 4250, 4254, 4255, 4252, 0, 4253, 0, 4257,
	159, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 490, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1678, 0, 0,
	0, 0, 0, 0, 4258, 4246, 0, 66, 67, 73,
	1667, 74, 0, 0, 0, 0, 160, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 0,
	490, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 1679, 1680, 1681,
	1682, 1683, 1684, 0, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 0, 1664, 1665,
	1666, 1646, 1645, 1677, 1647, 1650, 1644, 1648, 1643, 0,
	0, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 85, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1678,
	0, 4095, 0, 4097, 4098, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 899,
	1041, 0, 0, 447, 800, 1045, 886, 909, 1055, 915,
	917, 982, 861, 957, 357, 906, 862, 0, 0, 853,
	704, 854, 887, 259, 703, 1015, 960, 1043, 943, 975,
	985, 258, 244, 950, 949, 1032, 898, 897, 980, 1028,
	1042, 0, 0, 172, 476, 190, 808, 314, 0, 0,
	474, 423, 339, 0, 0, 941, 4275, 792, 793, 926,
	984, 873, 971, 1047, 907, 976, 1048, 89, 0, 490,
	0, 0, 729, 555, 730, 732, 733, 734, 735, 0,
	0, 171, 731, 736, 737, 738, 0, 936, 981, 1060,
	852, 701, 718, 857, 807, 4338, 1033, 894, 895, 263,
	0, 0, 0, 0, 0, 0, 0, 939, 956, 1000,
	923, 0, 467, 987, 996, 1010, 916, 376, 283, 0,
	0, 0, 0, 715, 716, 0, 0, 0, 0, 823,
	0, 717, 0, 867, 713, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 719, 0, 0,
	0, 872, 850, 892, 1002, 851, 849, 340, 864, 795,
	1031, 924, 301, 191, 1037, 922, 821, 990, 868, 1019,
	1053, 910, 311, 866, 195, 863, 869, 908, 353, 999,
	1005, 805, 198, 313, 1016, 888, 901, 726, 0, 392,
	977, 466, 707, 278, 963, 391, 315, 459, 991, 1039,
	465, 911, 441, 475, 480, 271, 944, 234, 420, 261,
	254, 893, 1009, 856, 284, 375, 249, 306, 927, 983,
	889, 241, 994, 970, 1021, 419, 456, 200, 334, 457,
	479, 166, 272, 411, 273, 440, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 386, 390, 367, 221, 448, 335, 345, 238, 240,
	239, 215, 412, 455, 228, 243, 1017, 1004, 1023, 884,
	870, 876, 871, 900, 1040, 293, 285, 1024, 1022, 902,
	361, 224, 954, 947, 940, 809, 469, 1056, 257, 1006,
	471, 180, 406, 405, 914, 292, 1007, 181, 170, 385,
	182, 302, 204, 1027, 484, 220, 309, 449, 706, 277,
	352, 979, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1003, 382, 408, 454, 222, 426, 173, 176,
	185, 398, 186, 187, 1046, 322, 266, 270, 286, 297,
	978, 389, 427, 472, 972, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 445, 400,
	280, 321, 323, 431, 436, 432, 433, 430, 435, 434,
	396, 397, 307, 437, 208, 439, 464, 229, 407, 410,
	483, 1001, 216, 237, 428, 210, 1035, 1018, 965, 929,
	935, 858, 0, 209, 930, 931, 932, 933, 934, 997,
	891, 903, 883, 973, 882, 281, 989, 727, 728, 246,
	798, 1050, 211, 865, 1049, 349, 356, 348, 1052, 1051,
	458, 1036, 966, 953, 951, 859, 1034, 964, 952, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	955, 425, 320, 0, 206, 0, 424, 1044, 1062, 438,
	226, 877, 1011, 453, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 993, 1059, 360, 393,
	233, 468, 421, 262, 875, 1063, 822, 810, 811, 814,
	958, 959, 812, 815, 816, 824, 796, 797, 799, 801,
	802, 803, 946, 1038, 860, 806, 1014, 817, 818, 819,
	820, 986, 1057, 794, 242, 743, 836, 837, 838, 744,
	839, 840, 745, 746, 841, 842, 843, 844, 747, 845,
	846, 847, 825, 826, 827, 828, 829, 830, 831, 832,
	835, 833, 834, 0, 942, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 377, 248, 804, 199, 212, 312,
	1058, 384, 276, 336, 413, 338, 298, 247, 481, 341,
	383, 485, 1012, 969, 0, 919, 921, 920, 879, 881,
	880, 878, 1061, 346, 1030, 848, 855, 874, 885, 890,
	896, 904, 905, 913, 918, 928, 937, 938, 948, 961,
	962, 968, 992, 995, 1008, 1013, 1020, 1025, 1026, 470,
	252, 945, 967, 998, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 460, 461, 477, 478, 925, 196, 0,
	0, 202, 0, 203, 205, 912, 201, 1029, 1054, 974,
	988, 899, 1041, 0, 0, 447, 800, 1045, 886, 909,
	1055, 915, 917, 982, 861, 957, 357, 906, 862, 0,
	0, 853, 704, 854, 887, 259, 703, 1015, 960, 1043,
	943, 975, 985, 258, 244, 950, 949, 1032, 898, 897,
	980, 1028, 1042, 0, 0, 172, 476, 190, 808, 314,
	0, 0, 474, 423, 339, 0, 0, 941, 0, 792,
	793, 926, 984, 873, 971, 1047, 907, 976, 1048, 89,
	0, 693, 0, 0, 729, 555, 730, 732, 733, 734,
	735, 0, 0, 171, 731, 736, 737, 738, 0, 936,
	981, 1060, 852, 701, 718, 857, 807, 0, 1033, 894,
	895, 263, 0, 0, 0, 0, 0, 0, 0, 939,
	956, 1000, 923, 0, 467, 987, 996, 1010, 916, 376,
	283, 0, 0, 0, 0, 715, 716, 0, 0, 0,
	0, 823, 0, 717, 0, 867, 713, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 719,
	0, 0, 0, 872, 850, 892, 1002, 851, 849, 340,
	864, 795, 1031, 924, 301, 191, 1037, 922, 821, 990,
	868, 1019, 1053, 910, 311, 866, 195, 863, 869, 908,
	353, 999, 1005, 805, 198, 313, 1016, 888, 901, 726,
	0, 392, 977, 466, 707, 278, 963, 391, 315, 459,
	991, 1039, 465, 911, 441, 475, 480, 271, 944, 234,
	420, 261, 254, 893, 1009, 856, 284, 375, 249, 306,
	927, 983, 889, 241, 994, 970, 1021, 419, 456, 200,
	334, 457, 479, 166, 272, 411, 273, 440, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 386, 390, 367, 221, 448, 335, 345,
	238, 240, 239, 215, 412, 455, 228, 243, 1017, 1004,
	1023, 884, 870, 876, 871, 900, 1040, 293, 285, 1024,
	1022, 902, 361, 224, 954, 947, 940, 809, 469, 1056,
	257, 1006, 471, 180, 406, 405, 914, 292, 1007, 181,
	170, 385, 182, 302, 204, 1027, 484, 220, 309, 449,
	706, 277, 352, 979, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1003, 382, 408, 454, 222, 426,
	173, 176, 185, 398, 186, 187, 1046, 322, 266, 270,
	286, 297, 978, 389, 427, 472, 972, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	445, 400, 280, 321, 323, 431, 436, 432, 433, 430,
	435, 434, 396, 397, 307, 437, 208, 439, 464, 229,
	407, 410, 483, 1001, 216, 237, 428, 210, 1035, 1018,
	965, 929, 935, 858, 0, 209, 930, 931, 932, 933,
	934, 997, 891, 903, 883, 973, 882, 281, 989, 727,
	728, 246, 798, 1050, 211, 865, 1049, 349, 356, 348,
	1052, 1051, 458, 1036, 966, 953, 951, 859, 1034, 964,
	952, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 955, 425, 320, 0, 206, 0, 424, 1044,
	1062, 438, 226, 877, 1011, 453, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 993, 1059,
	360, 393, 233, 468, 421, 262, 875, 1063, 822, 810,
	811, 814, 958, 959, 812, 815, 816, 824, 796, 797,
	799, 801, 802, 803, 946, 1038, 860, 806, 1014, 817,
	818, 819, 820, 986, 1057, 794, 242, 743, 836, 837,
	838, 744, 839, 840, 745, 746, 841, 842, 843, 844,
	747, 845, 846, 847, 825, 826, 827, 828, 829, 830,
	831, 832, 835, 833, 834, 0, 942, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 377, 248, 804, 199,
	212, 312, 1058, 384, 276, 336, 413, 338, 298, 247,
	481, 341, 383, 485, 1012, 969, 0, 919, 921, 920,
	879, 881, 880, 878, 1061, 346, 1030, 848, 855, 874,
	885, 890, 896, 904, 905, 913, 918, 928, 937, 938,
	948, 961, 962, 968, 992, 995, 1008, 1013, 1020, 1025,
	1026, 470, 252, 945, 967, 998, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 460, 461, 477, 478, 925,
	196, 0, 0, 202, 0, 203, 205, 912, 201, 1029,
	1054, 974, 988, 899, 1041, 0, 0, 447, 800, 1045,
	886, 909, 1055, 915, 917, 982, 861, 957, 357, 906,
	862, 0, 0, 853, 704, 854, 887, 259, 703, 1015,
	960, 1043, 943, 975, 985, 258, 244, 950, 949, 1032,
	898, 897, 980, 1028, 1042, 0, 0, 172, 476, 190,
	808, 314, 0, 0, 474, 423, 339, 0, 0, 941,
	0, 792, 793, 926, 984, 873, 971, 1047, 907, 976,
	1048, 89, 0, 0, 0, 0, 729, 555, 730, 732,
	733, 734, 735, 0, 0, 171, 731, 736, 737, 738,
	0, 936, 981, 1060, 852, 701, 718, 857, 807, 0,
	1033, 894, 895, 263, 0, 0, 0, 0, 0, 0,
	0, 939, 956, 1000, 923, 0, 467, 987, 996, 1010,
	916, 376, 283, 0, 0, 0, 0, 715, 716, 2230,
	0, 0, 0, 823, 0, 717, 0, 867, 713, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 719, 0, 0, 0, 872, 850, 892, 1002, 851,
	849, 340, 864, 795, 1031, 924, 301, 191, 1037, 922,
	821, 990, 868, 1019, 1053, 910, 311, 866, 195, 863,
	869, 908, 353, 999, 1005, 805, 198, 313, 1016, 888,
	901, 726, 0, 392, 977, 466, 707, 278, 963, 391,
	315, 459, 991, 1039, 465, 911, 441, 475, 480, 271,
	944, 234, 420, 261, 254, 893, 1009, 856, 284, 375,
	249, 306, 927, 983, 889, 241, 994, 970, 1021, 419,
	456, 200, 334, 457, 479, 166, 272, 411, 273, 440,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 386, 390, 367, 221, 448,
	335, 345, 238, 240, 239, 215, 412, 455, 228, 243,
	1017, 1004, 1023, 884, 870, 876, 871, 900, 1040, 293,
	285, 1024, 1022, 902, 361, 224, 954, 947, 940, 809,
	469, 1056, 257, 1006, 471, 180, 406, 405, 914, 292,
	1007, 181, 170, 385, 182, 302, 204, 1027, 484, 220,
	309, 449, 706, 277, 352, 979, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1003, 382, 408, 454,
	222, 426, 173, 176, 185, 398, 186, 187, 1046, 322,
	266, 270, 286, 297, 978, 389, 427, 472, 972, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 445, 400, 280, 321, 323, 431, 436, 432,
	433, 430, 435, 434, 396, 397, 307, 437, 208, 439,
	464, 229, 407, 410, 483, 1001, 216, 237, 428, 210,
	1035, 1018, 965, 929, 935, 858, 0, 209, 930, 931,
	932, 933, 934, 997, 891, 903, 883, 973, 882, 281,
	989, 727, 728, 246, 798, 1050, 211, 865, 1049, 349,
	356, 348, 1052, 1051, 458, 1036, 966, 953, 951, 859,
	1034, 964, 952, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 955, 425, 320, 0, 206, 0,
	424, 1044, 1062, 438, 226, 877, 1011, 453, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	993, 1059, 360, 393, 233, 468, 421, 262, 875, 1063,
	822, 810, 811, 814, 958, 959, 812, 815, 816, 824,
	796, 797, 799, 801, 802, 803, 946, 1038, 860, 806,
	1014, 817, 818, 819, 820, 986, 1057, 794, 242, 743,
	836, 837, 838, 744, 839, 840, 745, 746, 841, 842,
	843, 844, 747, 845, 846, 847, 825, 826, 827, 828,
	829, 830, 831, 832, 835, 833, 834, 0, 942, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 377, 248,
	804, 199, 212, 312, 1058, 384, 276, 336, 413, 338,
	298, 247, 481, 341, 383, 485, 1012, 969, 0, 919,
	921, 920, 879, 881, 880, 878, 1061, 346, 1030, 848,
	855, 874, 885, 890, 896, 904, 905, 913, 918, 928,
	937, 938, 948, 961, 962, 968, 992, 995, 1008, 1013,
	1020, 1025, 1026, 470, 252, 945, 967, 998, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 460, 461, 477,
	478, 925, 196, 0, 0, 202, 0, 203, 205, 912,
	201, 1029, 1054, 974, 988, 899, 1041, 0, 0, 447,
	800, 1045, 886, 909, 1055, 915, 917, 982, 861, 957,
	357, 906, 862, 0, 0, 853, 704, 854, 887, 259,
	703, 1015, 960, 1043, 943, 975, 985, 258, 244, 950,
	949, 1032, 898, 897, 980, 1028, 1042, 0, 0, 172,
	476, 190, 808, 314, 0, 0, 474, 423, 339, 0,
	0, 941, 0, 792, 793, 926, 984, 873, 971, 1047,
	907, 976, 1048, 89, 0, 0, 0, 0, 729, 555,
	730, 732, 733, 734, 735, 0, 0, 171, 731, 736,
	737, 738, 0, 936, 981, 1060, 852, 701, 718, 857,
	807, 0, 1033, 894, 895, 263, 0, 0, 0, 0,
	0, 0, 0, 939, 956, 1000, 923, 0, 467, 987,
	996, 1010, 916, 376, 283, 0, 0, 0, 0, 715,
	716, 697, 0, 0, 0, 823, 0, 717, 0, 867,
	713, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 719, 0, 0, 0, 872, 850, 892,
	1002, 851, 849, 340, 864, 795, 1031, 924, 301, 191,
	1037, 922, 821, 990, 868, 1019, 1053, 910, 311, 866,
	195, 863, 869, 908, 353, 999, 1005, 805, 198, 313,
	1016, 888, 901, 726, 0, 392, 977, 466, 707, 278,
	963, 391, 315, 459, 991, 1039, 465, 911, 441, 475,
	480, 271, 944, 234, 420, 261, 254, 893, 1009, 856,
	284, 375, 249, 306, 927, 983, 889, 241, 994, 970,
	1021, 419, 456, 200, 334, 457, 479, 166, 272, 411,
	273, 440, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 386, 390, 367,
	221, 448, 335, 345, 238, 240, 239, 215, 412, 455,
	228, 243, 1017, 1004, 1023, 884, 870, 876, 871, 900,
	1040, 293, 285, 1024, 1022, 902, 361, 224, 954, 947,
	940, 809, 469, 1056, 257, 1006, 471, 180, 406, 405,
	914, 292, 1007, 181, 170, 385, 182, 302, 204, 1027,
	484, 220, 309, 449, 706, 277, 352, 979, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1003, 382,
	408, 454, 222, 426, 173, 176, 185, 398, 186, 187,
	1046, 322, 266, 270, 286, 297, 978, 389, 427, 472,
	972, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 445, 400, 280, 321, 323, 431,
	436, 432, 433, 430, 435, 434, 396, 397, 307, 437,
	208, 439, 464, 229, 407, 410, 483, 1001, 216, 237,
	428, 210, 1035, 1018, 965, 929, 935, 858, 0, 209,
	930, 931, 932, 933, 934, 997, 891, 903, 883, 973,
	882, 281, 989, 727, 728, 246, 798, 1050, 211, 865,
	1049, 349, 356, 348, 1052, 1051, 458, 1036, 966, 953,
	951, 859, 1034, 964, 952, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 955, 425, 320, 0,
	206, 0, 424, 1044, 1062, 438, 226, 877, 1011, 453,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 993, 1059, 360, 393, 233, 468, 421, 262,
	875, 1063, 822, 810, 811, 814, 958, 959, 812, 815,
	816, 824, 796, 797, 799, 801, 802, 803, 946, 1038,
	860, 806, 1014, 817, 818, 819, 820, 986, 1057, 794,
	242, 743, 836, 837, 838, 744, 839, 840, 745, 746,
	841, 842, 843, 844, 747, 845, 846, 847, 825, 826,
	827, 828, 829, 830, 831, 832, 835, 833, 834, 0,
	942, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	377, 248, 804, 199, 212, 312, 1058, 384, 276, 336,
	413, 338, 298, 247, 481, 341, 383, 485, 1012, 969,
	0, 919, 921, 920, 879, 881, 880, 878, 1061, 346,
	1030, 848, 855, 874, 885, 890, 896, 904, 905, 913,
	918, 928, 937, 938, 948, 961, 962, 968, 992, 995,
	1008, 1013, 1020, 1025, 1026, 470, 252, 945, 967, 998,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 460,
	461, 477, 478, 925, 196, 0, 0, 202, 0, 203,
	205, 912, 201, 1029, 1054, 974, 988, 899, 1041, 0,
	0, 447, 800, 1045, 886, 909, 1055, 915, 917, 982,
	861, 957, 357, 906, 862, 0, 0, 853, 704, 854,
	887, 259, 703, 1015, 960, 1043, 943, 975, 985, 258,
	244, 950, 949, 1032, 898, 897, 980, 1028, 1042, 0,
	0, 172, 476, 190, 808, 314, 0, 0, 474, 423,
	339, 0, 0, 941, 0, 792, 793, 926, 984, 873,
	971, 1047, 907, 2437, 1048, 89, 0, 0, 0, 0,
	2439, 555, 730, 732, 733, 734, 735, 0, 0, 171,
	731, 736, 737, 738, 2438, 936, 981, 1060, 852, 701,
	718, 857, 807, 0, 1033, 894, 895, 263, 0, 0,
	0, 0, 0, 0, 0, 939, 956, 1000, 923, 0,
	467, 987, 996, 1010, 916, 376, 283, 0, 0, 0,
	0, 715, 716, 0, 0, 0, 0, 823, 0, 717,
	0, 867, 713, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 719, 0, 0, 0, 872,
	850, 892, 1002, 851, 849, 340, 864, 795, 1031, 924,
	301, 191, 1037, 922, 821, 990, 868, 1019, 1053, 910,
	311, 866, 195, 863, 869, 908, 353, 999, 1005, 805,
	198, 313, 1016, 888, 901, 726, 0, 392, 977, 466,
	707, 278, 963, 391, 315, 459, 991, 1039, 465, 911,
	441, 475, 480, 271, 944, 234, 420, 261, 254, 893,
	1009, 856, 284, 375, 249, 306, 927, 983, 889, 241,
	994, 970, 1021, 419, 456, 200, 334, 457, 479, 166,
	272, 411, 273, 440, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 386,
	390, 367, 221, 448, 335, 345, 238, 240, 239, 215,
	412, 455, 228, 243, 1017, 1004, 1023, 884, 870, 876,
	871, 900, 1040, 293, 285, 1024, 1022, 902, 361, 224,
	954, 947, 940, 809, 469, 1056, 257, 1006, 471, 180,
	406, 405, 914, 292, 1007, 181, 170, 385, 182, 302,
	204, 1027, 484, 220, 309, 449, 706, 277, 352, 979,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1003, 382, 408, 454, 222, 426, 173, 176, 185, 398,
	186, 187, 1046, 322, 266, 270, 286, 297, 978, 389,
	427, 472, 972, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 445, 400, 280, 321,
	323, 431, 436, 432, 433, 430, 435, 434, 396, 397,
	307, 437, 208, 439, 464, 229, 407, 410, 483, 1001,
	216, 237, 428, 210, 1035, 1018, 965, 929, 935, 858,
	0, 209, 930, 931, 932, 933, 934, 997, 891, 903,
	883, 973, 882, 281, 989, 727, 728, 246, 798, 1050,
	211, 865, 1049, 349, 356, 348, 1052, 1051, 458, 1036,
	966, 953, 951, 859, 1034, 964, 952, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 955, 425,
	320, 0, 206, 0, 424, 1044, 1062, 438, 226, 877,
	1011, 453, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 993, 1059, 360, 393, 233, 468,
	421, 262, 875, 1063, 822, 810, 811, 814, 958, 959,
	812, 815, 816, 824, 796, 797, 799, 801, 802, 803,
	946, 1038, 860, 806, 1014, 817, 818, 819, 820, 986,
	1057, 794, 242, 743, 836, 837, 838, 744, 839, 840,
	745, 746, 841, 842, 843, 844, 747, 845, 846, 847,
	825, 826, 827, 828, 829, 830, 831, 832, 835, 833,
	834, 0, 942, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 377, 248, 804, 199, 212, 312, 1058, 384,
	276, 336, 413, 338, 298, 247, 481, 341, 383, 485,
	1012, 969, 0, 919, 921, 920, 879, 881, 880, 878,
	1061, 346, 1030, 848, 855, 874, 885, 890, 896, 904,
	905, 913, 918, 928, 937, 938, 948, 961, 962, 968,
	992, 995, 1008, 1013, 1020, 1025, 1026, 470, 252, 945,
	967, 998, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 460, 461, 477, 478, 925, 196, 0, 0, 202,
	0, 203, 205, 912, 201, 1029, 1054, 974, 988, 899,
	1041, 0, 0, 447, 800, 1045, 886, 909, 1055, 915,
	917, 982, 861, 957, 357, 906, 862, 0, 0, 853,
	704, 854, 887, 259, 703, 1015, 960, 1043, 943, 975,
	985, 258, 244, 950, 949, 1032, 898, 897, 980, 1028,
	1042, 0, 0, 172, 476, 190, 808, 314, 0, 0,
	474, 423, 339, 0, 0, 941, 0, 792, 793, 926,
	984, 873, 971, 1047, 907, 976, 1048, 89, 0, 0,
	0, 0, 2337, 555, 730, 732, 733, 734, 735, 0,
	0, 171, 731, 736, 737, 738, 0, 936, 981, 1060,
	852, 701, 718, 857, 807, 0, 1033, 894, 895, 263,
	0, 0, 0, 0, 0, 0, 0, 939, 956, 1000,
	923, 0, 467, 987, 996, 1010, 916, 376, 283, 0,
	0, 0, 0, 715, 716, 2230, 0, 0, 0, 823,
	0, 717, 0, 867, 713, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 719, 0, 0,
	0, 872, 850, 892, 1002, 851, 849, 340, 864, 795,
	1031, 924, 301, 191, 1037, 922, 821, 990, 868, 1019,
	1053, 910, 311, 866, 195, 863, 869, 908, 353, 999,
	1005, 805, 198, 313, 1016, 888, 901, 726, 0, 392,
	977, 466, 707, 278, 963, 391, 315, 459, 991, 1039,
	465, 911, 441, 475, 480, 271, 944, 234, 420, 261,
	254, 893, 1009, 856, 284, 375, 249, 306, 927, 983,
	889, 241, 994, 970, 1021, 419, 456, 200, 334, 457,
	479, 166, 272, 411, 273, 440, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 386, 390, 367, 221, 448, 335, 345, 238, 240,
	239, 215, 412, 455, 228, 243, 1017, 1004, 1023, 884,
	870, 876, 871, 900, 1040, 293, 285, 1024, 1022, 902,
	361, 224, 954, 947, 940, 809, 469, 1056, 257, 1006,
	471, 180, 406, 405, 914, 292, 1007, 181, 170, 385,
	182, 302, 204, 1027, 484, 220, 309, 449, 706, 277,
	352, 979, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1003, 382, 408, 454, 222, 426, 173, 176,
	185, 398, 186, 187, 1046, 322, 266, 270, 286, 297,
	978, 389, 427, 472, 972, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 445, 400,
	280, 321, 323, 431, 436, 432, 433, 430, 435, 434,
	396, 397, 307, 437, 208, 439, 464, 229, 407, 410,
	483, 1001, 216, 237, 428, 210, 1035, 1018, 965, 929,
	935, 858, 0, 209, 930, 931, 932, 933, 934, 997,
	891, 903, 883, 973, 882, 281, 989, 727, 728, 246,
	798, 1050, 211, 865, 1049, 349, 356, 348, 1052, 1051,
	458, 1036, 966, 953, 951, 859, 1034, 964, 952, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	955, 425, 320, 0, 206, 0, 424, 1044, 1062, 438,
	226, 877, 1011, 453, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 993, 1059, 360, 393,
	233, 468, 421, 262, 875, 1063, 822, 810, 811, 814,
	958, 959, 812, 815, 816, 824, 796, 797, 799, 801,
	802, 803, 946, 1038, 860, 806, 1014, 817, 818, 819,
	820, 986, 1057, 794, 242, 743, 836, 837, 838, 744,
	839, 840, 745, 746, 841, 842, 843, 844, 747, 845,
	846, 847, 825, 826, 827, 828, 829, 830, 831, 832,
	835, 833, 834, 0, 942, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 377, 248, 804, 199, 212, 312,
	1058, 384, 276, 336, 413, 338, 298, 247, 481, 341,
	383, 485, 1012, 969, 0, 919, 921, 920, 879, 881,
	880, 878, 1061, 346, 1030, 848, 855, 874, 885, 890,
	896, 904, 905, 913, 918, 928, 937, 938, 948, 961,
	962, 968, 992, 995, 1008, 1013, 1020, 1025, 1026, 470,
	252, 945, 967, 998, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 460, 461, 477, 478, 925, 196, 0,
	0, 202, 0, 203, 205, 912, 201, 1029, 1054, 974,
	988, 899, 1041, 0, 0, 447, 800, 1045, 886, 909,
	1055, 915, 917, 982, 861, 957, 357, 906, 862, 0,
	0, 853, 704, 854, 887, 259, 703, 1015, 960, 1043,
	943, 975, 985, 258, 244, 950, 949, 1032, 898, 897,
	980, 1028, 1042, 0, 0, 172, 476, 190, 808, 314,
	0, 0, 474, 423, 339, 0, 0, 941, 0, 792,
	793, 926, 984, 873, 971, 1047, 907, 976, 1048, 89,
	0, 0, 0, 0, 2334, 555, 730, 732, 733, 734,
	735, 0, 0, 171, 731, 736, 737, 738, 0, 936,
	981, 1060, 852, 701, 718, 857, 807, 0, 1033, 894,
	895, 263, 0, 0, 0, 0, 0, 0, 0, 939,
	956, 1000, 923, 0, 467, 987, 996, 1010, 916, 376,
	283, 0, 0, 0, 0, 715, 716, 2230, 0, 0,
	0, 823, 0, 717, 0, 867, 713, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 719,
	0, 0, 0, 872, 850, 892, 1002, 851, 849, 340,
	864, 795, 1031, 924, 301, 191, 1037, 922, 821, 990,
	868, 1019, 1053, 910, 311, 866, 195, 863, 869, 908,
	353, 999, 1005, 805, 198, 313, 1016, 888, 901, 726,
	0, 392, 977, 466, 707, 278, 963, 391, 315, 459,
	991, 1039, 465, 911, 441, 475, 480, 271, 944, 234,
	420, 261, 254, 893, 1009, 856, 284, 375, 249, 306,
	927, 983, 889, 241, 994, 970, 1021, 419, 456, 200,
	334, 457, 479, 166, 272, 411, 273, 440, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 386, 390, 367, 221, 448, 335, 345,
	238, 240, 239, 215, 412, 455, 228, 243, 1017, 1004,
	1023, 884, 870, 876, 871, 900, 1040, 293, 285, 1024,
	1022, 902, 361, 224, 954, 947, 940, 809, 469, 1056,
	257, 1006, 471, 180, 406, 405, 914, 292, 1007, 181,
	170, 385, 182, 302, 204, 1027, 484, 220, 309, 449,
	706, 277, 352, 979, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1003, 382, 408, 454, 222, 426,
	173, 176, 185, 398, 186, 187, 1046, 322, 266, 270,
	286, 297, 978, 389, 427, 472, 972, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	445, 400, 280, 321, 323, 431, 436, 432, 433, 430,
	435, 434, 396, 397, 307, 437, 208, 439, 464, 229,
	407, 410, 483, 1001, 216, 237, 428, 210, 1035, 1018,
	965, 929, 935, 858, 0, 209, 930, 931, 932, 933,
	934, 997, 891, 903, 883, 973, 882, 281, 989, 727,
	728, 246, 798, 1050, 211, 865, 1049, 349, 356, 348,
	1052, 1051, 458, 1036, 966, 953, 951, 859, 1034, 964,
	952, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 955, 425, 320, 0, 206, 0, 424, 1044,
	1062, 438, 226, 877, 1011, 453, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 993, 1059,
	360, 393, 233, 468, 421, 262, 875, 1063, 822, 810,
	811, 814, 958, 959, 812, 815, 816, 824, 796, 797,
	799, 801, 802, 803, 946, 1038, 860, 806, 1014, 817,
	818, 819, 820, 986, 1057, 794, 242, 743, 836, 837,
	838, 744, 839, 840, 745, 746, 841, 842, 843, 844,
	747, 845, 846, 847, 825, 826, 827, 828, 829, 830,
	831, 832, 835, 833, 834, 0, 942, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 377, 248, 804, 199,
	212, 312, 1058, 384, 276, 336, 413, 338, 298, 247,
	481, 341, 383, 485, 1012, 969, 0, 919, 921, 920,
	879, 881, 880, 878, 1061, 346, 1030, 848, 855, 874,
	885, 890, 896, 904, 905, 913, 918, 928, 937, 938,
	948, 961, 962, 968, 992, 995, 1008, 1013, 1020, 1025,
	1026, 470, 252, 945, 967, 998, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 460, 461, 477, 478, 925,
	196, 0, 0, 202, 0, 203, 205, 912, 201, 1029,
	1054, 974, 988, 899, 1041, 0, 42, 447, 800, 1045,
	886, 909, 1055, 915, 917, 982, 861, 957, 357, 906,
	862, 0, 0, 853, 704, 854, 887, 259, 703, 1015,
	960, 1043, 943, 975, 985, 258, 244, 950, 949, 1032,
	898, 897, 980, 1028, 1042, 0, 0, 172, 476, 190,
	808, 314, 0, 0, 474, 423, 339, 0, 0, 941,
	0, 792, 793, 926, 984, 873, 971, 1047, 907, 976,
	1048, 89, 0, 0, 0, 0, 729, 555, 730, 732,
	733, 734, 735, 0, 0, 171, 731, 736, 737, 738,
	0, 936, 981, 1060, 852, 701, 718, 857, 807, 0,
	1033, 894, 895, 263, 0, 0, 0, 0, 0, 0,
	0, 939, 956, 1000, 923, 0, 467, 987, 996, 1010,
	916, 376, 283, 0, 0, 0, 0, 715, 716, 0,
	0, 0, 0, 823, 0, 717, 0, 867, 713, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 719, 0, 0, 0, 872, 850, 892, 1002, 851,
	849, 340, 864, 795, 1542, 924, 301, 191, 1037, 922,
	821, 990, 868, 1019, 1053, 910, 311, 866, 195, 863,
	869, 908, 353, 999, 1005, 805, 198, 313, 1016, 888,
	901, 726, 0, 392, 977, 466, 707, 278, 963, 391,
	315, 459, 991, 1039, 465, 911, 441, 475, 480, 271,
	944, 234, 420, 261, 254, 893, 1009, 856, 284, 375,
	249, 306, 927, 983, 889, 241, 994, 970, 1021, 419,
	456, 200, 334, 457, 479, 166, 272, 411, 273, 440,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 386, 390, 367, 221, 448,
	335, 345, 238, 240, 239, 215, 412, 455, 228, 243,
	1017, 1004, 1023, 884, 870, 876, 871, 900, 1040, 293,
	285, 1024, 1022, 902, 361, 224, 954, 947, 940, 809,
	469, 1056, 257, 1006, 471, 180, 406, 405, 914, 292,
	1007, 181, 170, 385, 182, 302, 204, 1027, 484, 220,
	309, 449, 706, 277, 352, 979, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1003, 382, 408, 454,
	222, 426, 173, 176, 185, 398, 186, 187, 1046, 322,
	266, 270, 286, 297, 978, 389, 427, 472, 972, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 445, 400, 280, 321, 323, 431, 436, 432,
	433, 430, 435, 434, 396, 397, 307, 437, 208, 439,
	464, 229, 407, 410, 483, 1001, 216, 237, 428, 210,
	1035, 1018, 965, 929, 935, 858, 0, 209, 930, 931,
	932, 933, 934, 997, 891, 903, 883, 973, 882, 281,
	989, 727, 728, 246, 798, 1050, 211, 865, 1049, 349,
	356, 348, 1052, 1051, 458, 1036, 966, 953, 951, 859,
	1034, 964, 952, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 955, 425, 320, 0, 206, 0,
	424, 1044, 1062, 438, 226, 877, 1011, 453, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	993, 1059, 360, 393, 233, 468, 421, 262, 875, 1063,
	822, 810, 811, 814, 958, 959, 812, 815, 816, 824,
	796, 797, 799, 801, 802, 803, 946, 1038, 860, 806,
	1014, 817, 818, 819, 820, 986, 1057, 794, 242, 743,
	836, 837, 838, 744, 839, 840, 745, 746, 841, 842,
	843, 844, 747, 845, 846, 847, 825, 826, 827, 828,
	829, 830, 831, 832, 835, 833, 834, 0, 942, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 377, 248,
	804, 199, 212, 312, 1540, 384, 276, 336, 413, 338,
	298, 247, 481, 341, 383, 485, 1012, 969, 0, 919,
	921, 920, 879, 881, 880, 878, 1061, 346, 1030, 848,
	855, 874, 885, 890, 896, 904, 905, 913, 918, 928,
	937, 938, 948, 961, 962, 968, 992, 995, 1008, 1013,
	1020, 1025, 1026, 470, 252, 945, 967, 998, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 460, 461, 477,
	478, 925, 196, 0, 0, 202, 0, 203, 205, 912,
	201, 1029, 1054, 974, 988, 899, 1041, 0, 0, 447,
	800, 1045, 886, 909, 1055, 915, 917, 982, 861, 957,
	357, 906, 862, 0, 0, 853, 704, 854, 887, 259,
	703, 1015, 960, 1043, 943, 975, 985, 258, 244, 950,
	949, 1032, 898, 897, 980, 1028, 1042, 0, 0, 172,
	476, 190, 808, 314, 0, 0, 474, 423, 339, 0,
	0, 941, 0, 792, 793, 926, 984, 873, 971, 1047,
	907, 976, 1048, 89, 0, 2101, 0, 0, 729, 555,
	730, 732, 733, 734, 735, 0, 0, 171, 731, 736,
	737, 738, 0, 936, 981, 1060, 852, 701, 718, 857,
	807, 0, 1033, 894, 895, 263, 0, 0, 0, 0,
	0, 0, 0, 939, 956, 1000, 923, 0, 467, 987,
	996, 1010, 916, 376, 283, 0, 0, 0, 0, 715,
	716, 0, 0, 0, 0, 823, 0, 717, 0, 867,
	713, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 719, 0, 0, 0, 872, 850, 892,
	1002, 851, 849, 340, 864, 795, 1031, 924, 301, 191,
	1037, 922, 821, 990, 868, 1019, 1053, 910, 311, 866,
	195, 863, 869, 908, 353, 999, 1005, 805, 198, 313,
	1016, 888, 901, 726, 0, 392, 977, 466, 707, 278,
	963, 391, 315, 459, 991, 1039, 465, 911, 441, 475,
	480, 271, 944, 234, 420, 261, 254, 893, 1009, 856,
	284, 375, 249, 306, 927, 983, 889, 241, 994, 970,
	1021, 419, 456, 200, 334, 457, 479, 166, 272, 411,
	273, 440, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 386, 390, 367,
	221, 448, 335, 345, 238, 240, 239, 215, 412, 455,
	228, 243, 1017, 1004, 1023, 884, 870, 876, 871, 900,
	1040, 293, 285, 1024, 1022, 902, 361, 224, 954, 947,
	940, 809, 469, 1056, 257, 1006, 471, 180, 406, 405,
	914, 292, 1007, 181, 170, 385, 182, 302, 204, 1027,
	484, 220, 309, 449, 706, 277, 352, 979, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1003, 382,
	408, 454, 222, 426, 173, 176, 185, 398, 186, 187,
	1046, 322, 266, 270, 286, 297, 978, 389, 427, 472,
	972, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 445, 400, 280, 321, 323, 431,
	436, 432, 433, 430, 435, 434, 396, 397, 307, 437,
	208, 439, 464, 229, 407, 410, 483, 1001, 216, 237,
	428, 210, 1035, 1018, 965, 929, 935, 858, 0, 209,
	930, 931, 932, 933, 934, 997, 891, 903, 883, 973,
	882, 281, 989, 727, 728, 246, 798, 1050, 211, 865,
	1049, 349, 356, 348, 1052, 1051, 458, 1036, 966, 953,
	951, 859, 1034, 964, 952, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 955, 425, 320, 0,
	206, 0, 424, 1044, 1062, 438, 226, 877, 1011, 453,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 993, 1059, 360, 393, 233, 468, 421, 262,
	875, 1063, 822, 810, 811, 814, 958, 959, 812, 815,
	816, 824, 796, 797, 799, 801, 802, 803, 946, 1038,
	860, 806, 1014, 817, 818, 819, 820, 986, 1057, 794,
	242, 743, 836, 837, 838, 744, 839, 840, 745, 746,
	841, 842, 843, 844, 747, 845, 846, 847, 825, 826,
	827, 828, 829, 830, 831, 832, 835, 833, 834, 0,
	942, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	377, 248, 804, 199, 212, 312, 1058, 384, 276, 336,
	413, 338, 298, 247, 481, 341, 383, 485, 1012, 969,
	0, 919, 921, 920, 879, 881, 880, 878, 1061, 346,
	1030, 848, 855, 874, 885, 890, 896, 904, 905, 913,
	918, 928, 937, 938, 948, 961, 962, 968, 992, 995,
	1008, 1013, 1020, 1025, 1026, 470, 252, 945, 967, 998,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 460,
	461, 477, 478, 925, 196, 0, 0, 202, 0, 203,
	205, 912, 201, 1029, 1054, 974, 988, 899, 1041, 0,
	0, 447, 800, 1045, 886, 909, 1055, 915, 917, 982,
	861, 957, 357, 906, 862, 0, 0, 853, 704, 854,
	887, 259, 703, 1015, 960, 1043, 943, 975, 985, 258,
	244, 950, 949, 1032, 898, 897, 980, 1028, 1042, 0,
	0, 172, 476, 190, 808, 314, 0, 0, 474, 423,
	339, 0, 0, 941, 0, 792, 793, 926, 984, 873,
	971, 1047, 907, 976, 1048, 89, 0, 0, 0, 0,
	729, 555, 730, 732, 733, 734, 735, 0, 0, 171,
	731, 736, 737, 738, 0, 936, 981, 1060, 852, 701,
	718, 857, 807, 0, 1033, 894, 895, 263, 0, 0,
	0, 0, 0, 0, 0, 939, 956, 1000, 923, 0,
	467, 987, 996, 1010, 916, 376, 283, 0, 0, 0,
	0, 715, 716, 0, 0, 0, 0, 823, 0, 717,
	0, 867, 713, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 719, 0, 0, 0, 872,
	850, 892, 1002, 851, 849, 340, 864, 795, 1031, 924,
	301, 191, 1037, 922, 821, 990, 868, 1019, 1053, 910,
	311, 866, 195, 863, 869, 908, 353, 999, 1005, 805,
	198, 313, 1016, 888, 901, 726, 0, 392, 977, 466,
	707, 278, 963, 391, 315, 459, 991, 1039, 465, 911,
	441, 475, 480, 271, 944, 234, 420, 261, 254, 893,
	1009, 856, 284, 375, 249, 306, 927, 983, 889, 241,
	994, 970, 1021, 419, 456, 200, 334, 457, 479, 166,
	272, 411, 273, 440, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 386,
	390, 367, 221, 448, 335, 345, 238, 240, 239, 215,
	412, 455, 228, 243, 1017, 1004, 1023, 884, 870, 876,
	871, 900, 1040, 293, 285, 1024, 1022, 902, 361, 224,
	954, 947, 940, 809, 469, 1056, 257, 1006, 471, 180,
	406, 405, 914, 292, 1007, 181, 170, 385, 182, 302,
	204, 1027, 484, 220, 309, 449, 706, 277, 352, 979,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1003, 382, 408, 454, 222, 426, 173, 176, 185, 398,
	186, 187, 1046, 322, 266, 270, 286, 297, 978, 389,
	427, 472, 972, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 445, 400, 280, 321,
	323, 431, 436, 432, 433, 430, 435, 434, 396, 397,
	307, 437, 208, 439, 464, 229, 407, 410, 483, 1001,
	216, 237, 428, 210, 1035, 1018, 965, 929, 935, 858,
	0, 209, 930, 931, 932, 933, 934, 997, 891, 903,
	883, 973, 882, 281, 989, 727, 728, 246, 798, 1050,
	211, 865, 1049, 349, 356, 348, 1052, 1051, 458, 1036,
	966, 953, 951, 859, 1034, 964, 952, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 955, 425,
	320, 0, 206, 0, 424, 1044, 1062, 438, 226, 877,
	1011, 453, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 993, 1059, 360, 393, 233, 468,
	421, 262, 875, 1063, 822, 810, 811, 814, 958, 959,
	812, 815, 816, 824, 796, 797, 799, 801, 802, 803,
	946, 1038, 860, 806, 1014, 817, 818, 819, 820, 986,
	1057, 794, 242, 743, 836, 837, 838, 744, 839, 840,
	745, 746, 841, 842, 843, 844, 747, 845, 846, 847,
	825, 826, 827, 828, 829, 830, 831, 832, 835, 833,
	834, 0, 942, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 377, 248, 804, 199, 212, 312, 1058, 384,
	276, 336, 413, 338, 298, 247, 481, 341, 383, 485,
	1012, 969, 0, 919, 921, 920, 879, 881, 880, 878,
	1061, 346, 1030, 848, 855, 874, 885, 890, 896, 904,
	905, 913, 918, 928, 937, 938, 948, 961, 962, 968,
	992, 995, 1008, 1013, 1020, 1025, 1026, 470, 252, 945,
	967, 998, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 460, 461, 477, 478, 925, 196, 0, 0, 202,
	0, 203, 205, 912, 201, 1029, 1054, 974, 988, 899,
	1041, 0, 0, 447, 800, 1045, 886, 909, 1055, 915,
	917, 982, 861, 957, 357, 906, 862, 0, 0, 853,
	1103, 854, 887, 259, 1101, 1015, 960, 1043, 943, 975,
	985, 258, 244, 950, 949, 1032, 898, 897, 980, 1028,
	1042, 0, 0, 172, 476, 190, 808, 314, 0, 0,
	474, 423, 339, 0, 0, 941, 0, 792, 793, 926,
	984, 873, 971, 1047, 907, 976, 1048, 89, 0, 0,
	0, 0, 729, 555, 730, 732, 733, 734, 735, 0,
	0, 171, 731, 736, 737, 738, 0, 936, 981, 1060,
	852, 1120, 718, 857, 807, 0, 1033, 894, 895, 263,
	0, 0, 0, 0, 0, 0, 0, 939, 956, 1000,
	923, 0, 467, 987, 996, 1010, 916, 376, 283, 0,
	0, 0, 0, 715, 716, 0, 0, 0, 0, 823,
	0, 717, 0, 867, 713, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 719, 0, 0,
	0, 872, 850, 892, 1002, 851, 849, 340, 864, 795,
	1031, 924, 301, 191, 1037, 922, 821, 990, 868, 1019,
	1053, 910, 311, 866, 195, 863, 869, 908, 353, 999,
	1005, 805, 198, 313, 1016, 888, 901, 726, 0, 392,
	977, 466, 707, 278, 963, 391, 315, 459, 991, 1039,
	465, 911, 441, 475, 480, 271, 944, 234, 420, 261,
	254, 893, 1009, 856, 284, 375, 249, 306, 927, 983,
	889, 241, 994, 970, 1021, 419, 456, 200, 334, 457,
	479, 166, 272, 411, 273, 440, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 386, 390, 367, 221, 448, 335, 345, 238, 240,
	239, 215, 412, 455, 228, 243, 1017, 1004, 1023, 884,
	870, 876, 871, 900, 1040, 293, 285, 1024, 1022, 902,
	361, 224, 954, 947, 940, 809, 469, 1056, 257, 1006,
	471, 180, 406, 405, 914, 292, 1007, 181, 170, 385,
	182, 302, 204, 1027, 484, 220, 309, 449, 706, 277,
	352, 979, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1003, 382, 408, 454, 222, 426, 173, 176,
	185, 398, 186, 187, 1046, 322, 266, 270, 286, 297,
	978, 389, 427, 472, 972, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 445, 400,
	280, 321, 323, 431, 436, 432, 433, 430, 435, 434,
	396, 397, 307, 437, 208, 439, 464, 229, 407, 410,
	483, 1001, 216, 237, 428, 210, 1035, 1018, 965, 929,
	935, 858, 0, 209, 930, 931, 932, 933, 934, 997,
	891, 903, 883, 973, 882, 281, 989, 727, 728, 246,
	798, 1050, 211, 865, 1049, 349, 356, 348, 1052, 1051,
	458, 1036, 966, 953, 951, 859, 1034, 964, 952, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	955, 425, 320, 0, 206, 0, 424, 1044, 1062, 438,
	226, 877, 1011, 453, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 993, 1059, 360, 393,
	233, 468, 421, 262, 875, 1063, 822, 810, 811, 814,
	958, 959, 812, 815, 816, 824, 796, 797, 799, 801,
	802, 803, 946, 1038, 860, 806, 1014, 817, 818, 819,
	820, 986, 1057, 794, 242, 743, 836, 837, 838, 744,
	839, 840, 745, 746, 841, 842, 843, 844, 747, 845,
	846, 847, 825, 826, 827, 828, 829, 830, 831, 832,
	835, 833, 834, 0, 942, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 377, 248, 804, 199, 212, 312,
	1058, 384, 276, 336, 413, 338, 298, 247, 481, 341,
	383, 485, 1012, 969, 0, 919, 921, 920, 879, 881,
	880, 878, 1061, 346, 1030, 848, 855, 874, 885, 890,
	896, 904, 905, 913, 918, 928, 937, 938, 948, 961,
	962, 968, 992, 995, 1008, 1013, 1020, 1025, 1026, 470,
	252, 945, 967, 998, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 460, 461, 477, 478, 925, 196, 0,
	0, 202, 0, 203, 205, 912, 201, 1029, 1054, 974,
	988, 899, 1041, 0, 0, 447, 800, 1045, 886, 909,
	1055, 915, 917, 982, 861, 957, 357, 906, 862, 0,
	0, 853, 1103, 854, 887, 259, 1101, 1015, 960, 1043,
	943, 975, 985, 258, 244, 950, 949, 1032, 898, 897,
	980, 1028, 1042, 0, 0, 172, 476, 190, 808, 314,
	0, 0, 474, 423, 339, 0, 0, 941, 0, 792,
	793, 926, 984, 873, 971, 1047, 907, 976, 1048, 89,
	0, 0, 0, 0, 729, 555, 730, 732, 733, 734,
	735, 0, 0, 171, 731, 736, 737, 738, 0, 936,
	981, 1060, 852, 1120, 718, 857, 807, 0, 1033, 894,
	895, 263, 0, 0, 0, 0, 0, 0, 0, 939,
	956, 1000, 923, 0, 467, 987, 996, 1010, 916, 376,
	283, 0, 0, 0, 0, 715, 716, 0, 0, 0,
	0, 823, 0, 717, 0, 867, 713, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 719,
	0, 0, 0, 872, 850, 892, 1002, 851, 849, 340,
	864, 795, 1031, 924, 301, 191, 1037, 922, 821, 990,
	868, 1019, 1053, 910, 311, 866, 195, 863, 869, 908,
	353, 999, 1005, 805, 198, 313, 1016, 888, 901, 726,
	0, 392, 977, 466, 707, 278, 4493, 391, 315, 459,
	991, 1039, 465, 911, 441, 475, 480, 271, 944, 234,
	420, 261, 254, 893, 1009, 856, 284, 375, 249, 306,
	927, 983, 889, 241, 994, 970, 1021, 419, 456, 200,
	334, 457, 479, 166, 272, 411, 273, 440, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 386, 390, 367, 221, 448, 335, 345,
	238, 240, 239, 215, 412, 455, 228, 243, 1017, 1004,
	1023, 884, 870, 876, 871, 900, 1040, 293, 285, 1024,
	1022, 902, 361, 224, 954, 947, 940, 809, 469, 1056,
	257, 1006, 471, 180, 406, 405, 914, 292, 1007, 181,
	170, 385, 182, 302, 204, 1027, 484, 220, 309, 449,
	706, 277, 352, 979, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1003, 382, 408, 454, 222, 426,
	173, 176, 185, 398, 186, 187, 1046, 322, 266, 270,
	286, 297, 978, 389, 427, 472, 972, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	445, 400, 280, 321, 323, 431, 436, 432, 433, 430,
	435, 434, 396, 397, 307, 437, 208, 439, 464, 229,
	407, 410, 483, 1001, 216, 237, 428, 210, 1035, 1018,
	965, 929, 935, 858, 0, 209, 930, 931, 932, 933,
	934, 997, 891, 903, 883, 973, 882, 281, 989, 727,
	728, 246, 798, 1050, 211, 865, 1049, 349, 356, 348,
	1052, 1051, 458, 1036, 966, 953, 951, 859, 1034, 964,
	952, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 955, 425, 320, 0, 206, 0, 424, 1044,
	1062, 438, 226, 877, 1011, 453, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 993, 1059,
	360, 393, 233, 468, 421, 262, 875, 1063, 822, 810,
	811, 814, 958, 959, 812, 815, 816, 824, 796, 797,
	799, 801, 802, 803, 946, 1038, 860, 806, 1014, 817,
	818, 819, 820, 986, 1057, 794, 242, 743, 836, 837,
	838, 744, 839, 840, 745, 746, 841, 842, 843, 844,
	747, 845, 846, 847, 825, 826, 827, 828, 829, 830,
	831, 832, 835, 833, 834, 0, 942, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 377, 248, 804, 199,
	212, 312, 1058, 384, 276, 336, 413, 338, 298, 247,
	481, 341, 383, 485, 1012, 969, 0, 919, 921, 920,
	879, 881, 880, 878, 1061, 346, 1030, 848, 855, 874,
	885, 890, 896, 904, 905, 913, 918, 928, 937, 938,
	948, 961, 962, 968, 992, 995, 1008, 1013, 1020, 1025,
	1026, 470, 252, 945, 967, 998, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 460, 461, 477, 478, 925,
	196, 0, 0, 202, 0, 203, 205, 912, 201, 1029,
	1054, 974, 988, 899, 1041, 0, 0, 447, 800, 1045,
	886, 909, 1055, 915, 917, 982, 861, 957, 357, 906,
	862, 0, 0, 853, 1103, 854, 887, 259, 1101, 1015,
	960, 1043, 943, 975, 985, 258, 244, 950, 949, 1032,
	898, 897, 980, 1028, 1042, 0, 0, 172, 476, 190,
	808, 314, 0, 0, 474, 423, 339, 0, 0, 941,
	0, 792, 793, 926, 984, 873, 971, 1047, 907, 976,
	1048, 89, 0, 0, 0, 0, 729, 555, 730, 732,
	733, 734, 735, 0, 0, 171, 731, 736, 737, 738,
	0, 936, 981, 1060, 852, 1120, 718, 857, 807, 0,
	1033, 894, 895, 263, 0, 0, 0, 0, 0, 0,
	0, 939, 956, 1000, 923, 0, 467, 987, 996, 1010,
	916, 376, 283, 0, 0, 0, 0, 715, 716, 0,
	0, 0, 0, 823, 0, 717, 0, 867, 713, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 719, 0, 0, 0, 872, 850, 892, 1002, 851,
	849, 340, 864, 795, 1031, 924, 301, 191, 1037, 922,
	821, 990, 868, 1019, 1053, 910, 311, 866, 195, 863,
	869, 908, 353, 999, 1005, 805, 198, 313, 1016, 888,
	901, 726, 0, 392, 977, 466, 707, 278, 963, 391,
	315, 459, 991, 1039, 465, 911, 441, 475, 480, 271,
	944, 234, 420, 261, 254, 893, 1009, 856, 284, 375,
	249, 306, 927, 983, 889, 241, 994, 970, 1021, 419,
	456, 200, 334, 457, 479, 166, 272, 411, 273, 440,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 386, 390, 367, 221, 448,
	335, 345, 238, 240, 239, 215, 412, 455, 228, 243,
	1017, 1004, 1023, 884, 870, 876, 871, 900, 1040, 293,
	285, 1024, 1022, 902, 361, 224, 954, 947, 940, 809,
	469, 1056, 257, 1006, 471, 180, 406, 405, 914, 292,
	1007, 181, 170, 385, 182, 302, 204, 1027, 484, 220,
	309, 449, 706, 277, 352, 979, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1003, 382, 408, 454,
	222, 426, 173, 176, 185, 398, 186, 187, 1046, 322,
	266, 270, 286, 297, 978, 389, 427, 472, 972, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 445, 400, 280, 321, 323, 431, 436, 432,
	433, 430, 435, 434, 396, 397, 307, 437, 208, 439,
	464, 229, 407, 410, 483, 1001, 216, 237, 428, 210,
	1035, 1018, 965, 929, 935, 858, 0, 209, 930, 931,
	932, 933, 934, 997, 891, 903, 883, 973, 882, 281,
	989, 727, 728, 246, 798, 1050, 211, 865, 1049, 349,
	356, 348, 1052, 1051, 458, 1036, 966, 953, 951, 859,
	1034, 964, 952, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 955, 425, 320, 0, 206, 0,
	424, 1044, 1062, 438, 226, 877, 1011, 453, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	993, 1059, 360, 393, 233, 468, 421, 262, 875, 1063,
	822, 810, 811, 814, 958, 959, 812, 815, 816, 824,
	796, 797, 799, 801, 802, 803, 2340, 2341, 2342, 806,
	1014, 817, 818, 819, 820, 986, 1057, 794, 242, 743,
	836, 837, 838, 744, 839, 840, 745, 746, 841, 842,
	843, 844, 747, 845, 846, 847, 825, 826, 827, 828,
	829, 830, 831, 832, 835, 833, 834, 0, 942, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 377, 248,
	804, 199, 212, 312, 1058, 384, 276, 336, 413, 338,
	298, 247, 481, 341, 383, 485, 1012, 969, 0, 919,
	921, 920, 879, 881, 880, 878, 1061, 346, 1030, 848,
	855, 874, 885, 890, 896, 904, 905, 913, 918, 928,
	937, 938, 948, 961, 962, 968, 992, 995, 1008, 1013,
	1020, 1025, 1026, 470, 252, 945, 967, 998, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 460, 461, 477,
	478, 925, 196, 0, 0, 202, 0, 203, 205, 912,
	201, 1029, 1054, 974, 988, 1829, 2008, 0, 3669, 447,
	1863, 2012, 1812, 1842, 2030, 1848, 1851, 1932, 1778, 1901,
	357, 1839, 1779, 1762, 1817, 1766, 1830, 1767, 1814, 259,
	1810, 1973, 1904, 2010, 1883, 1925, 1935, 258, 244, 1893,
	1892, 1998, 1828, 1827, 1930, 1987, 2009, 1882, 0, 172,
	476, 190, 3670, 314, 1984, 495, 3671, 423, 339, 498,
	497, 1878, 1993, 1899, 1962, 1861, 1934, 1794, 1917, 2014,
	1840, 1926, 2015, 89, 0, 693, 0, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1922,
	2006, 1833, 496, 1873, 1931, 2035, 1765, 1918, 0, 1770,
	1781, 2029, 1999, 1824, 1825, 263, 0, 0, 0, 0,
	0, 0, 0, 1876, 1900, 1952, 1858, 0, 467, 1937,
	1947, 1965, 1850, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 1915, 0, 0, 0, 1786,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 1793, 1763, 1821,
	1954, 1764, 1761, 340, 1782, 1967, 3673, 1859, 301, 191,
	2003, 1857, 1856, 1941, 1787, 1977, 2027, 1843, 311, 1785,
	195, 1780, 1788, 1841, 353, 1951, 1959, 177, 198, 313,
	1974, 1815, 1832, 245, 2172, 392, 1927, 466, 494, 278,
	1908, 391, 315, 459, 1942, 2005, 465, 1844, 441, 475,
	480, 271, 1884, 234, 420, 261, 254, 1823, 1964, 1769,
	284, 375, 249, 306, 1862, 1933, 1816, 241, 1945, 1916,
	1979, 419, 456, 200, 334, 457, 479, 166, 272, 411,
	273, 440, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 386, 390, 367,
	221, 448, 335, 345, 238, 240, 239, 215, 412, 455,
	228, 243, 1975, 1958, 1981, 1809, 1789, 1800, 1790, 1831,
	2007, 293, 285, 1982, 1980, 1834, 361, 224, 1897, 1890,
	1877, 1955, 469, 2031, 257, 1960, 471, 180, 406, 405,
	1847, 292, 1961, 181, 170, 385, 182, 302, 204, 1986,
	484, 220, 309, 449, 493, 277, 352, 1929, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1957, 382,
	408, 454, 222, 426, 173, 176, 185, 398, 186, 187,
	2013, 322, 266, 270, 286, 297, 1928, 389, 427, 472,
	1919, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 445, 400, 280, 321, 323, 431,
	436, 432, 433, 430, 435, 434, 396, 397, 307, 437,
	208, 439, 464, 229, 407, 410, 483, 1953, 216, 237,
	428, 210, 2001, 1976, 1910, 1865, 1871, 1771, 0, 209,
	1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923,
	1807, 281, 1940, 462, 463, 246, 1783, 2021, 211, 1784,
	2020, 349, 356, 348, 2024, 2022, 458, 2002, 1911, 1896,
	1894, 1776, 2000, 1909, 1895, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1898, 425, 320, 0,
	206, 0, 424, 2011, 2037, 438, 226, 1802, 1968, 453,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1944, 2034, 360, 393, 233, 468, 421, 262,
	1798, 0, 1801, 1796, 1799, 1797, 1902, 1903, 2016, 2017,
	2018, 1956, 1791, 0, 0, 1994, 1995, 0, 1889, 2004,
	1777, 0, 1972, 188, 189, 174, 179, 1936, 2032, 1849,
	242, 164, 1773, 1774, 1775, 165, 1879, 1880, 167, 168,
	1990, 1989, 1988, 1991, 169, 2025, 2023, 2026, 1792, 1813,
	1835, 1885, 1886, 1888, 1920, 1921, 1966, 1939, 1948, 1822,
	1881, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	377, 248, 1907, 199, 212, 312, 3672, 384, 276, 336,
	413, 338, 298, 247, 481, 341, 383, 485, 1969, 1914,
	0, 1853, 1855, 1854, 1804, 1806, 1805, 1803, 2036, 346,
	1996, 1760, 1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846,
	1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946,
	1963, 1971, 1978, 1983, 1985, 470, 252, 1887, 1912, 1950,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 460,
	461, 477, 478, 1860, 196, 0, 0, 202, 0, 203,
	205, 1845, 201, 1992, 2028, 1924, 1938, 1829, 2008, 0,
	1970, 447, 1863, 2012, 1812, 1842, 2030, 1848, 1851, 1932,
	1778, 1901, 357, 1839, 1779, 1762, 1817, 1766, 1830, 1767,
	1814, 259, 1810, 1973, 1904, 2010, 1883, 1925, 1935, 258,
	244, 1893, 1892, 1998, 1828, 1827, 1930, 1987, 2009, 1882,
	0, 172, 476, 190, 2019, 314, 1984, 495, 474, 423,
	339, 498, 497, 1878, 1993, 1899, 1962, 1861, 1934, 1794,
	1917, 2014, 1840, 1926, 2015, 0, 0, 0, 0, 0,
	0, 555, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1922, 2006, 1833, 496, 1873, 1931, 2035, 1765, 1918,
	0, 1770, 1781, 2029, 1999, 1824, 1825, 263, 0, 0,
	0, 0, 0, 0, 0, 1876, 1900, 1952, 1858, 0,
	467, 1937, 1947, 1965, 1850, 376, 283, 0, 0, 0,
	0, 0, 0, 3184, 0, 1819, 0, 1915, 0, 0,
	0, 1786, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 1793,
	1763, 1821, 1954, 1764, 1761, 340, 1782, 1967, 1997, 1859,
	301, 191, 2003, 1857, 1856, 1941, 1787, 1977, 2027, 1843,
	311, 1785, 195, 1780, 1788, 1841, 353, 1951, 1959, 177,
	198, 313, 1974, 1815, 1832, 245, 0, 392, 1927, 466,
	2269, 278, 1908, 391, 315, 459, 1942, 2005, 465, 1844,
	441, 475, 480, 271, 1884, 234, 420, 261, 254, 1823,
	1964, 1769, 284, 375, 249, 306, 1862, 1933, 1816, 241,
	1945, 1916, 1979, 419, 456, 200, 334, 457, 479, 166,
	272, 411, 273, 440, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 386,
	390, 367, 221, 448, 335, 345, 238, 240, 239, 215,
	412, 455, 228, 243, 1975, 1958, 1981, 1809, 1789, 1800,
	1790, 1831, 2007, 293, 285, 1982, 1980, 1834, 361, 224,
	1897, 1890, 1877, 1955, 469, 2031, 257, 1960, 471, 180,
	406, 405, 1847, 292, 1961, 181, 170, 385, 182, 302,
	204, 1986, 484, 220, 309, 449, 2268, 277, 352, 1929,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1957, 382, 408, 454, 222, 426, 173, 176, 185, 398,
	186, 187, 2013, 322, 266, 270, 286, 297, 1928, 389,
	427, 472, 1919, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 445, 400, 280, 321,
	323, 431, 436, 432, 433, 430, 435, 434, 396, 397,
	307, 437, 208, 439, 464, 229, 407, 410, 483, 1953,
	216, 237, 428, 210, 2001, 1976, 1910, 1865, 1871, 1771,
	0, 209, 1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836,
	1808, 1923, 1807, 281, 1940, 462, 463, 246, 1783, 2021,
	211, 1784, 2020, 349, 356, 348, 2024, 2022, 458, 2002,
	1911, 1896, 1894, 1776, 2000, 1909, 1895, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1898, 425,
	320, 0, 206, 0, 424, 2011, 2037, 438, 226, 1802,
	1968, 453, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1944, 2034, 360, 393, 233, 468,
	421, 262, 1798, 0, 1801, 1796, 1799, 1797, 1902, 1903,
	2016, 2017, 2018, 1956, 1791, 0, 0, 1994, 1995, 0,
	1889, 2004, 1777, 0, 1972, 188, 189, 174, 179, 1936,
	2032, 1849, 242, 164, 1773, 1774, 1775, 165, 1879, 1880,
	167, 168, 1990, 1989, 1988, 1991, 169, 2025, 2023, 2026,
	1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921, 1966, 1939,
	1948, 1822, 1881, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 377, 248, 1907, 199, 212, 312, 2033, 384,
	276, 336, 413, 338, 298, 247, 481, 341, 383, 485,
	1969, 1914, 0, 1853, 1855, 1854, 1804, 1806, 1805, 1803,
	2036, 346, 1996, 1760, 1768, 1795, 1811, 1818, 1826, 1837,
	1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913,
	1943, 1946, 1963, 1971, 1978, 1983, 1985, 470, 252, 1887,
	1912, 1950, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 460, 461, 477, 478, 1860, 196, 0, 0, 202,
	0, 203, 205, 1845, 201, 1992, 2028, 1924, 1938, 1829,
	2008, 0, 1970, 447, 1863, 2012, 1812, 1842, 2030, 1848,
	1851, 1932, 1778, 1901, 357, 1839, 1779, 1762, 1817, 1766,
	1830, 1767, 1814, 259, 1810, 1973, 1904, 2010, 1883, 1925,
	1935, 258, 244, 1893, 1892, 1998, 1828, 1827, 1930, 1987,
	2009, 1882, 0, 172, 476, 190, 2019, 314, 1984, 495,
	474, 423, 339, 498, 497, 1878, 1993, 1899, 1962, 1861,
	1934, 1794, 1917, 2014, 1840, 1926, 2015, 0, 0, 0,
	0, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1922, 2006, 1833, 496, 1873, 1931, 2035,
	1765, 1918, 0, 1770, 1781, 2029, 1999, 1824, 1825, 263,
	0, 0, 0, 0, 0, 0, 0, 1876, 1900, 1952,
	1858, 0, 467, 1937, 1947, 1965, 1850, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 1915,
	0, 0, 0, 1786, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 1793, 1763, 1821, 1954, 1764, 1761, 340, 1782, 1967,
	1997, 1859, 301, 191, 2003, 1857, 1856, 1941, 1787, 1977,
	2027, 1843, 311, 1785, 195, 1780, 1788, 1841, 353, 1951,
	1959, 177, 198, 313, 1974, 1815, 1832, 245, 2172, 392,
	1927, 466, 494, 278, 1908, 391, 315, 459, 1942, 2005,
	465, 1844, 441, 475, 480, 271, 1884, 234, 420, 261,
	254, 1823, 1964, 1769, 284, 375, 249, 306, 1862, 1933,
	1816, 241, 1945, 1916, 1979, 419, 456, 200, 334, 457,
	479, 166, 272, 411, 273, 440, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 386, 390, 367, 221, 448, 335, 345, 238, 240,
	239, 215, 412, 455, 228, 243, 1975, 1958, 1981, 1809,
	1789, 1800, 1790, 1831, 2007, 293, 285, 1982, 1980, 1834,
	361, 224, 1897, 1890, 1877, 1955, 469, 2031, 257, 1960,
	471, 180, 406, 405, 1847, 292, 1961, 181, 170, 385,
	182, 302, 204, 1986, 484, 220, 309, 449, 493, 277,
	352, 1929, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1957, 382, 408, 454, 222, 426, 173, 176,
	185, 398, 186, 187, 2013, 322, 266, 270, 286, 297,
	1928, 389, 427, 472, 1919, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 445, 400,
	280, 321, 323, 431, 436, 432, 433, 430, 435, 434,
	396, 397, 307, 437, 208, 439, 464, 229, 407, 410,
	483, 1953, 216, 237, 428, 210, 2001, 1976, 1910, 1865,
	1871, 1771, 0, 209, 1866, 1867, 1868, 1869, 1870, 1949,
	1820, 1836, 1808, 1923, 1807, 281, 1940, 462, 463, 246,
	1783, 2021, 211, 1784, 2020, 349, 356, 348, 2024, 2022,
	458, 2002, 1911, 1896, 1894, 1776, 2000, 1909, 1895, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1898, 425, 320, 0, 206, 0, 424, 2011, 2037, 438,
	226, 1802, 1968, 453, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1944, 2034, 360, 393,
	233, 468, 421, 262, 1798, 0, 1801, 1796, 1799, 1797,
	1902, 1903, 2016, 2017, 2018, 1956, 1791, 0, 0, 1994,
	1995, 0, 1889, 2004, 1777, 0, 1972, 188, 189, 174,
	179, 1936, 2032, 1849, 242, 164, 1773, 1774, 1775, 165,
	1879, 1880, 167, 168, 1990, 1989, 1988, 1991, 169, 2025,
	2023, 2026, 1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921,
	1966, 1939, 1948, 1822, 1881, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 377, 248, 1907, 199, 212, 312,
	2033, 384, 276, 336, 413, 338, 298, 247, 481, 341,
	383, 485, 1969, 1914, 0, 1853, 1855, 1854, 1804, 1806,
	1805, 1803, 2036, 346, 1996, 1760, 1768, 1795, 1811, 1818,
	1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905,
	1906, 1913, 1943, 1946, 1963, 1971, 1978, 1983, 1985, 470,
	252, 1887, 1912, 1950, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 460, 461, 477, 478, 1860, 196, 0,
	0, 202, 0, 203, 205, 1845, 201, 1992, 2028, 1924,
	1938, 1829, 2008, 0, 1970, 447, 1863, 2012, 1812, 1842,
	2030, 1848, 1851, 1932, 1778, 1901, 357, 1839, 1779, 1762,
	1817, 1766, 1830, 1767, 1814, 259, 1810, 1973, 1904, 2010,
	1883, 1925, 1935, 258, 244, 1893, 1892, 1998, 1828, 1827,
	1930, 1987, 2009, 1882, 0, 172, 476, 190, 2019, 314,
	1984, 495, 474, 423, 339, 498, 497, 1878, 1993, 1899,
	1962, 1861, 1934, 1794, 1917, 2014, 1840, 1926, 2015, 0,
	0, 0, 0, 0, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1922, 2006, 1833, 496, 1873,
	1931, 2035, 1765, 1918, 0, 1770, 1781, 2029, 1999, 1824,
	1825, 263, 0, 0, 0, 0, 0, 0, 0, 1876,
	1900, 1952, 1858, 0, 467, 1937, 1947, 1965, 1850, 376,
	283, 0, 0, 0, 0, 0, 0, 2263, 0, 1819,
	0, 1915, 0, 0, 0, 1786, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 1793, 1763, 1821, 1954, 1764, 1761, 340,
	1782, 1967, 1997, 1859, 301, 191, 2003, 1857, 1856, 1941,
	1787, 1977, 2027, 1843, 311, 1785, 195, 1780, 1788, 1841,
	353, 1951, 1959, 177, 198, 313, 1974, 1815, 1832, 245,
	0, 392, 1927, 466, 2269, 278, 1908, 391, 315, 459,
	1942, 2005, 465, 1844, 441, 475, 480, 271, 1884, 234,
	420, 261, 254, 1823, 1964, 1769, 284, 375, 249, 306,
	1862, 1933, 1816, 241, 1945, 1916, 1979, 419, 456, 200,
	334, 457, 479, 166, 272, 411, 273, 440, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 386, 390, 367, 221, 448, 335, 345,
	238, 240, 239, 215, 412, 455, 228, 243, 1975, 1958,
	1981, 1809, 1789, 1800, 1790, 1831, 2007, 293, 285, 1982,
	1980, 1834, 361, 224, 1897, 1890, 1877, 1955, 469, 2031,
	257, 1960, 471, 180, 406, 405, 1847, 292, 1961, 181,
	170, 385, 182, 302, 204, 1986, 484, 220, 309, 449,
	2268, 277, 352, 1929, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1957, 382, 408, 454, 222, 426,
	173, 176, 185, 398, 186, 187, 2013, 322, 266, 270,
	286, 297, 1928, 389, 427, 472, 1919, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	445, 400, 280, 321, 323, 431, 436, 432, 433, 430,
	435, 434, 396, 397, 307, 437, 208, 439, 464, 229,
	407, 410, 483, 1953, 216, 237, 428, 210, 2001, 1976,
	1910, 1865, 1871, 1771, 0, 209, 1866, 1867, 1868, 1869,
	1870, 1949, 1820, 1836, 1808, 1923, 1807, 281, 1940, 462,
	463, 246, 1783, 2021, 211, 1784, 2020, 349, 356, 348,
	2024, 2022, 458, 2002, 1911, 1896, 1894, 1776, 2000, 1909,
	1895, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1898, 425, 320, 0, 206, 0, 424, 2011,
	2037, 438, 226, 1802, 1968, 453, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1944, 2034,
	360, 393, 233, 468, 421, 262, 1798, 0, 1801, 1796,
	1799, 1797, 1902, 1903, 2016, 2017, 2018, 1956, 1791, 0,
	0, 1994, 1995, 0, 1889, 2004, 1777, 0, 1972, 188,
	189, 174, 179, 1936, 2032, 1849, 242, 164, 1773, 1774,
	1775, 165, 1879, 1880, 167, 168, 1990, 1989, 1988, 1991,
	169, 2025, 2023, 2026, 1792, 1813, 1835, 1885, 1886, 1888,
	1920, 1921, 1966, 1939, 1948, 1822, 1881, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 377, 248, 1907, 199,
	212, 312, 2033, 384, 276, 336, 413, 338, 298, 247,
	481, 341, 383, 485, 1969, 1914, 0, 1853, 1855, 1854,
	1804, 1806, 1805, 1803, 2036, 346, 1996, 1760, 1768, 1795,
	1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875,
	1891, 1905, 1906, 1913, 1943, 1946, 1963, 1971, 1978, 1983,
	1985, 470, 252, 1887, 1912, 1950, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 460, 461, 477, 478, 1860,
	196, 0, 0, 202, 0, 203, 205, 1845, 201, 1992,
	2028, 1924, 1938, 1829, 2008, 0, 1970, 447, 1863, 2012,
	1812, 1842, 2030, 1848, 1851, 1932, 1778, 1901, 357, 1839,
	1779, 1762, 1817, 1766, 1830, 1767, 1814, 259, 1810, 1973,
	1904, 2010, 1883, 1925, 1935, 258, 244, 1893, 1892, 1998,
	1828, 1827, 1930, 1987, 2009, 1882, 0, 172, 476, 190,
	2019, 314, 1984, 495, 474, 423, 339, 498, 497, 1878,
	1993, 1899, 1962, 1861, 1934, 1794, 1917, 2014, 1840, 1926,
	2015, 0, 0, 0, 0, 0, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1922, 2006, 1833,
	496, 1873, 1931, 2035, 1765, 1918, 0, 1770, 1781, 2029,
	1999, 1824, 1825, 263, 0, 0, 0, 0, 0, 0,
	0, 1876, 1900, 1952, 1858, 0, 467, 1937, 1947, 1965,
	1850, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 1915, 0, 0, 0, 1786, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 1793, 1763, 1821, 1954, 1764,
	1761, 340, 1782, 1967, 1997, 1859, 301, 191, 2003, 1857,
	1856, 1941, 1787, 1977, 2027, 1843, 311, 1785, 195, 1780,
	1788, 1841, 353, 1951, 1959, 177, 198, 313, 1974, 1815,
	1832, 245, 0, 392, 1927, 466, 2269, 278, 1908, 391,
	315, 459, 1942, 2005, 465, 1844, 441, 475, 480, 271,
	1884, 234, 420, 261, 254, 1823, 1964, 1769, 284, 375,
	249, 306, 1862, 1933, 1816, 241, 1945, 1916, 1979, 419,
	456, 200, 334, 457, 479, 166, 272, 411, 273, 440,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 386, 390, 367, 221, 448,
	335, 345, 238, 240, 239, 215, 412, 455, 228, 243,
	1975, 1958, 1981, 1809, 1789, 1800, 1790, 1831, 2007, 293,
	285, 1982, 1980, 1834, 361, 224, 1897, 1890, 1877, 1955,
	469, 2031, 257, 1960, 471, 180, 406, 405, 1847, 292,
	1961, 181, 170, 385, 182, 302, 204, 1986, 484, 220,
	309, 449, 2268, 277, 352, 1929, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1957, 382, 408, 454,
	222, 426, 173, 176, 185, 398, 186, 187, 2013, 322,
	266, 270, 286, 297, 1928, 389, 427, 472, 1919, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 445, 400, 280, 321, 323, 431, 436, 432,
	433, 430, 435, 434, 396, 397, 307, 437, 208, 439,
	464, 229, 407, 410, 483, 1953, 216, 237, 428, 210,
	2001, 1976, 1910, 1865, 1871, 1771, 0, 209, 1866, 1867,
	1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923, 1807, 281,
	1940, 462, 463, 246, 1783, 2021, 211, 1784, 2020, 349,
	356, 348, 2024, 2022, 458, 2002, 1911, 1896, 1894, 1776,
	2000, 1909, 1895, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1898, 425, 320, 0, 206, 0,
	424, 2011, 2037, 438, 226, 1802, 1968, 453, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1944, 2034, 360, 393, 233, 468, 421, 262, 1798, 0,
	1801, 1796, 1799, 1797, 1902, 1903, 2016, 2017, 2018, 1956,
	1791, 0, 0, 1994, 1995, 0, 1889, 2004, 1777, 0,
	1972, 188, 189, 174, 179, 1936, 2032, 1849, 242, 164,
	1773, 1774, 1775, 165, 1879, 1880, 167, 168, 1990, 1989,
	1988, 1991, 169, 2025, 2023, 2026, 1792, 1813, 1835, 1885,
	1886, 1888, 1920, 1921, 1966, 1939, 1948, 1822, 1881, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 377, 248,
	1907, 199, 212, 312, 2033, 384, 276, 336, 413, 338,
	298, 247, 481, 341, 383, 485, 1969, 1914, 0, 1853,
	1855, 1854, 1804, 1806, 1805, 1803, 2036, 346, 1996, 1760,
	1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864,
	1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946, 1963, 1971,
	1978, 1983, 1985, 470, 252, 1887, 1912, 1950, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 460, 461, 477,
	478, 1860, 196, 0, 0, 202, 0, 203, 205, 1845,
	201, 1992, 2028, 1924, 1938, 899, 1041, 0, 0, 447,
	1108, 1045, 886, 909, 1055, 915, 917, 982, 861, 957,
	357, 906, 862, 0, 0, 853, 1103, 854, 887, 259,
	1101, 1015, 960, 1043, 943, 975, 985, 258, 244, 950,
	949, 1032, 898, 897, 980, 1028, 1042, 0, 0, 172,
	476, 190, 1141, 314, 0, 495, 474, 423, 339, 498,
	497, 941, 0, 1115, 1128, 926, 984, 873, 971, 1047,
	907, 976, 1048, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1123,
	1137, 1104, 496, 936, 981, 1060, 852, 1120, 0, 857,
	1092, 0, 1033, 894, 895, 263, 0, 0, 0, 0,
	0, 0, 0, 939, 956, 1000, 923, 0, 467, 987,
	996, 1010, 916, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 0, 0, 0, 867,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 872, 850, 892,
	1002, 851, 849, 340, 864, 1130, 1031, 924, 301, 191,
	1037, 922, 1107, 990, 868, 1019, 1053, 910, 311, 866,
	195, 863, 869, 908, 353, 999, 1005, 177, 198, 313,
	1016, 888, 901, 245, 3283, 392, 977, 466, 2353, 278,
	963, 391, 315, 459, 991, 1039, 465, 911, 441, 475,
	480, 271, 944, 234, 420, 261, 254, 893, 1009, 856,
	284, 375, 249, 306, 927, 983, 889, 241, 994, 970,
	1021, 419, 456, 200, 334, 457, 479, 166, 272, 411,
	273, 440, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 386, 390, 367,
	221, 448, 335, 345, 238, 240, 239, 215, 412, 455,
	228, 243, 1017, 1004, 1023, 884, 870, 876, 871, 900,
	1040, 293, 285, 1024, 1022, 902, 361, 224, 954, 947,
	940, 1126, 469, 1056, 257, 1006, 471, 180, 406, 405,
	914, 292, 1007, 181, 170, 385, 182, 302, 204, 1027,
	484, 220, 309, 449, 2352, 277, 352, 979, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1003, 382,
	408, 454, 222, 426, 173, 176, 185, 398, 186, 187,
	1046, 322, 266, 270, 286, 297, 978, 389, 427, 472,
	972, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 445, 400, 280, 321, 323, 431,
	436, 432, 433, 430, 435, 434, 396, 397, 307, 437,
	208, 439, 464, 229, 407, 410, 483, 1001, 216, 237,
	428, 210, 1035, 1018, 965, 929, 935, 858, 0, 209,
	930, 931, 932, 933, 934, 997, 891, 903, 883, 973,
	882, 281, 989, 462, 463, 246, 1093, 1050, 211, 865,
	1049, 349, 356, 348, 1052, 1051, 458, 1036, 966, 953,
	951, 859, 1034, 964, 952, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 955, 425, 320, 0,
	206, 0, 424, 1044, 1062, 438, 226, 877, 1011, 453,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 993, 1059, 360, 393, 233, 468, 421, 262,
	1098, 0, 1100, 1096, 1099, 1097, 1116, 1117, 1138, 1139,
	1140, 1127, 1094, 192, 193, 1135, 1136, 194, 946, 1038,
	860, 0, 1014, 188, 189, 174, 179, 986, 1057, 1106,
	242, 164, 1089, 1090, 1091, 165, 1110, 1111, 167, 168,
	1133, 1132, 1131, 1134, 169, 1143, 1142, 1144, 1095, 1102,
	1105, 1112, 1113, 1114, 1121, 1122, 1129, 1124, 1125, 0,
	942, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	377, 248, 1118, 199, 212, 312, 1058, 384, 276, 336,
	413, 338, 298, 247, 481, 341, 383, 485, 1012, 969,
	0, 919, 921, 920, 879, 881, 880, 878, 1061, 346,
	1030, 848, 855, 874, 885, 890, 896, 904, 905, 913,
	918, 928, 937, 938, 948, 961, 962, 968, 992, 995,
	1008, 1013, 1020, 1025, 1026, 470, 252, 945, 967, 998,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 460,
	461, 477, 478, 925, 196, 0, 0, 202, 0, 203,
	205, 912, 201, 1029, 1054, 974, 988, 1829, 2008, 0,
	1970, 447, 1863, 2012, 1812, 1842, 2030, 1848, 1851, 1932,
	1778, 1901, 357, 1839, 1779, 1762, 1817, 1766, 1830, 1767,
	1814, 259, 1810, 1973, 1904, 2010, 1883, 1925, 1935, 258,
	244, 1893, 1892, 1998, 1828, 1827, 1930, 1987, 2009, 1882,
	0, 172, 476, 190, 2019, 314, 1984, 495, 474, 423,
	339, 498, 497, 1878, 1993, 1899, 1962, 1861, 1934, 1794,
	1917, 2014, 1840, 1926, 2015, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1922, 2006, 1833, 496, 1873, 1931, 2035, 1765, 1918,
	0, 1770, 1781, 2029, 1999, 1824, 1825, 263, 0, 0,
	0, 0, 0, 0, 0, 1876, 1900, 1952, 1858, 0,
	467, 1937, 1947, 1965, 1850, 376, 283, 0, 0, 0,
	0, 0, 0, 2846, 0, 1819, 0, 1915, 0, 0,
	0, 1786, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 1793,
	1763, 1821, 1954, 1764, 1761, 340, 1782, 1967, 1997, 1859,
	301, 191, 2003, 1857, 1856, 1941, 1787, 1977, 2027, 1843,
	311, 1785, 195, 1780, 1788, 1841, 353, 1951, 1959, 177,
	198, 313, 1974, 1815, 1832, 245, 0, 392, 1927, 466,
	494, 278, 1908, 391, 315, 459, 1942, 2005, 465, 1844,
	441, 475, 480, 271, 1884, 234, 420, 261, 254, 1823,
	1964, 1769, 284, 375, 249, 306, 1862, 1933, 1816, 241,
	1945, 1916, 1979, 419, 456, 200, 334, 457, 479, 0,
	272, 411, 273, 440, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 386,
	390, 367, 221, 448, 335, 345, 238, 240, 239, 215,
	412, 455, 228, 243, 1975, 1958, 1981, 1809, 1789, 1800,
	1790, 1831, 2007, 293, 285, 1982, 1980, 1834, 361, 224,
	1897, 1890, 1877, 1955, 469, 2031, 257, 1960, 471, 180,
	406, 405, 1847, 292, 1961, 181, 170, 385, 182, 302,
	204, 1986, 484, 220, 309, 449, 493, 277, 352, 1929,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1957, 382, 408, 454, 222, 426, 173, 176, 185, 398,
	186, 187, 2013, 322, 266, 270, 286, 297, 1928, 389,
	427, 472, 1919, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 445, 400, 280, 321,
	323, 431, 436, 432, 433, 430, 435, 434, 396, 397,
	307, 437, 208, 439, 464, 229, 407, 410, 483, 1953,
	216, 237, 428, 210, 2001, 1976, 1910, 1865, 1871, 1771,
	0, 209, 1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836,
	1808, 1923, 1807, 281, 1940, 462, 463, 246, 1783, 2021,
	211, 1784, 2020, 349, 356, 348, 2024, 2022, 458, 2002,
	1911, 1896, 1894, 1776, 2000, 1909, 1895, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1898, 425,
	320, 0, 206, 0, 424, 2011, 2037, 438, 226, 1802,
	1968, 453, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1944, 2034, 360, 393, 233, 468,
	421, 262, 1798, 0, 1801, 1796, 1799, 1797, 1902, 1903,
	2016, 2017, 2018, 1956, 1791, 0, 0, 1994, 1995, 0,
	1889, 2004, 1777, 0, 1972, 188, 189, 174, 179, 1936,
	2032, 1849, 242, 0, 1773, 1774, 1775, 0, 1879, 1880,
	0, 0, 1990, 1989, 1988, 1991, 0, 2025, 2023, 2026,
	1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921, 1966, 1939,
	1948, 1822, 1881, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 377, 248, 1907, 199, 212, 312, 2033, 384,
	276, 336, 413, 338, 298, 247, 481, 341, 383, 485,
	1969, 1914, 0, 1853, 1855, 1854, 1804, 1806, 1805, 1803,
	2036, 346, 1996, 1760, 1768, 1795, 1811, 1818, 1826, 1837,
	1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913,
	1943, 1946, 1963, 1971, 1978, 1983, 1985, 470, 252, 1887,
	1912, 1950, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 460, 461, 477, 478, 1860, 196, 0, 0, 202,
	0, 203, 205, 1845, 201, 1992, 2028, 1924, 1938, 899,
	1041, 0, 0, 447, 1108, 1045, 886, 909, 1055, 915,
	917, 982, 861, 957, 357, 906, 862, 0, 0, 853,
	1103, 854, 887, 259, 1101, 1015, 960, 1043, 943, 975,
	985, 258, 244, 950, 949, 1032, 898, 897, 980, 1028,
	1042, 0, 0, 172, 476, 190, 1141, 314, 0, 495,
	474, 423, 339, 498, 497, 941, 0, 1115, 1128, 926,
	984, 873, 971, 1047, 907, 976, 1048, 0, 0, 0,
	0, 0, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1123, 1137, 1104, 496, 936, 981, 1060,
	852, 1120, 0, 857, 1092, 0, 1033, 894, 895, 263,
	0, 0, 0, 0, 0, 0, 0, 939, 956, 1000,
	923, 0, 467, 987, 996, 1010, 916, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1119,
	0, 0, 0, 867, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 872, 850, 892, 1002, 851, 849, 340, 864, 1130,
	1031, 924, 301, 191, 1037, 922, 1107, 990, 868, 1019,
	1053, 910, 311, 866, 195, 863, 869, 908, 353, 999,
	1005, 177, 198, 313, 1016, 888, 901, 245, 0, 392,
	977, 466, 2353, 278, 963, 391, 315, 459, 991, 1039,
	465, 911, 441, 475, 480, 271, 944, 234, 420, 261,
	254, 893, 1009, 856, 284, 375, 249, 306, 927, 983,
	889, 241, 994, 970, 1021, 419, 456, 200, 334, 457,
	479, 166, 272, 411, 273, 440, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 386, 390, 367, 221, 448, 335, 345, 238, 240,
	239, 215, 412, 455, 228, 243, 1017, 1004, 1023, 884,
	870, 876, 871, 900, 1040, 293, 285, 1024, 1022, 902,
	361, 224, 954, 947, 940, 1126, 469, 1056, 257, 1006,
	471, 180, 406, 405, 914, 292, 1007, 181, 170, 385,
	182, 302, 204, 1027, 484, 220, 309, 449, 2352, 277,
	352, 979, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1003, 382, 408, 454, 222, 426, 173, 176,
	185, 398, 186, 187, 1046, 322, 266, 270, 286, 297,
	978, 389, 427, 472, 972, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 445, 400,
	280, 321, 323, 431, 436, 432, 433, 430, 435, 434,
	396, 397, 307, 437, 208, 439, 464, 229, 407, 410,
	483, 1001, 216, 237, 428, 210, 1035, 1018, 965, 929,
	935, 858, 0, 209, 930, 931, 932, 933, 934, 997,
	891, 903, 883, 973, 882, 281, 989, 462, 463, 246,
	1093, 1050, 211, 865, 1049, 349, 356, 348, 1052, 1051,
	458, 1036, 966, 953, 951, 859, 1034, 964, 952, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	955, 425, 320, 0, 206, 0, 424, 1044, 1062, 438,
	226, 877, 1011, 453, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 993, 1059, 360, 393,
	233, 468, 421, 262, 1098, 0, 1100, 1096, 1099, 1097,
	1116, 1117, 1138, 1139, 1140, 1127, 1094, 192, 193, 1135,
	1136, 194, 946, 1038, 860, 0, 1014, 188, 189, 174,
	179, 986, 1057, 1106, 242, 164, 1089, 1090, 1091, 165,
	1110, 1111, 167, 168, 1133, 1132, 1131, 1134, 169, 1143,
	1142, 1144, 1095, 1102, 1105, 1112, 1113, 1114, 1121, 1122,
	1129, 1124, 1125, 0, 942, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 377, 248, 1118, 199, 212, 312,
	1058, 384, 276, 336, 413, 338, 298, 247, 481, 341,
	383, 485, 1012, 969, 0, 919, 921, 920, 879, 881,
	880, 878, 1061, 346, 1030, 848, 855, 874, 885, 890,
	896, 904, 905, 913, 918, 928, 937, 938, 948, 961,
	962, 968, 992, 995, 1008, 1013, 1020, 1025, 1026, 470,
	252, 945, 967, 998, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 460, 461, 477, 478, 925, 196, 0,
	0, 202, 0, 203, 205, 912, 201, 1029, 1054, 974,
	988, 1829, 2008, 0, 1970, 447, 1863, 2012, 1812, 1842,
	2030, 1848, 1851, 1932, 1778, 1901, 357, 1839, 1779, 1762,
	1817, 1766, 1830, 1767, 1814, 259, 1810, 1973, 1904, 2010,
	1883, 1925, 1935, 258, 244, 1893, 1892, 1998, 1828, 1827,
	1930, 1987, 2009, 1882, 0, 172, 476, 190, 2019, 314,
	1984, 495, 474, 423, 339, 498, 497, 1878, 1993, 1899,
	1962, 1861, 1934, 1794, 1917, 2014, 1840, 1926, 2015, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1922, 2006, 1833, 496, 1873,
	1931, 2035, 1765, 1918, 0, 1770, 1781, 2029, 1999, 1824,
	1825, 263, 0, 0, 0, 0, 0, 0, 0, 1876,
	1900, 1952, 1858, 0, 467, 1937, 1947, 1965, 1850, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 1915, 0, 0, 0, 1786, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 1793, 1763, 1821, 1954, 1764, 1761, 340,
	1782, 1967, 1997, 1859, 301, 191, 2003, 1857, 1856, 1941,
	1787, 1977, 2027, 1843, 311, 1785, 195, 1780, 1788, 1841,
	353, 1951, 1959, 177, 198, 313, 1974, 1815, 1832, 245,
	0, 392, 1927, 466, 494, 278, 1908, 391, 315, 459,
	1942, 2005, 465, 1844, 441, 475, 480, 271, 1884, 234,
	420, 261, 254, 1823, 1964, 1769, 284, 375, 249, 306,
	1862, 1933, 1816, 241, 1945, 1916, 1979, 419, 456, 200,
	334, 457, 479, 0, 272, 411, 273, 440, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 386, 390, 367, 221, 448, 335, 345,
	238, 240, 239, 215, 412, 455, 228, 243, 1975, 1958,
	1981, 1809, 1789, 1800, 1790, 1831, 2007, 293, 285, 1982,
	1980, 1834, 361, 224, 1897, 1890, 1877, 1955, 469, 2031,
	257, 1960, 471, 180, 406, 405, 1847, 292, 1961, 181,
	170, 385, 182, 302, 204, 1986, 484, 220, 309, 449,
	493, 277, 352, 1929, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1957, 382, 408, 454, 222, 426,
	173, 176, 185, 398, 186, 187, 2013, 322, 266, 270,
	286, 297, 1928, 389, 427, 472, 1919, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	445, 400, 280, 321, 323, 431, 436, 432, 433, 430,
	435, 434, 396, 397, 307, 437, 208, 439, 464, 229,
	407, 410, 483, 1953, 216, 237, 428, 210, 2001, 1976,
	1910, 1865, 1871, 1771, 0, 209, 1866, 1867, 1868, 1869,
	1870, 1949, 1820, 1836, 1808, 1923, 1807, 281, 1940, 462,
	463, 246, 1783, 2021, 211, 1784, 2020, 349, 356, 348,
	2024, 2022, 458, 2002, 1911, 1896, 1894, 1776, 2000, 1909,
	1895, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1898, 425, 320, 0, 206, 0, 424, 2011,
	2037, 438, 226, 1802, 1968, 453, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1944, 2034,
	360, 393, 233, 468, 421, 262, 1798, 0, 1801, 1796,
	1799, 1797, 1902, 1903, 2016, 2017, 2018, 1956, 1791, 0,
	0, 1994, 1995, 0, 1889, 2004, 1777, 0, 1972, 188,
	189, 174, 179, 1936, 2032, 1849, 242, 0, 1773, 1774,
	1775, 0, 1879, 1880, 0, 0, 1990, 1989, 1988, 1991,
	0, 2025, 2023, 2026, 1792, 1813, 1835, 1885, 1886, 1888,
	1920, 1921, 1966, 1939, 1948, 1822, 1881, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 377, 248, 1907, 199,
	212, 312, 2033, 384, 276, 336, 413, 338, 298, 247,
	481, 341, 383, 485, 1969, 1914, 0, 1853, 1855, 1854,
	1804, 1806, 1805, 1803, 2036, 346, 1996, 1760, 1768, 1795,
	1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875,
	1891, 1905, 1906, 1913, 1943, 1946, 1963, 1971, 1978, 1983,
	1985, 470, 252, 1887, 1912, 1950, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 460, 461, 477, 478, 1860,
	196, 0, 0, 202, 0, 203, 205, 1845, 201, 1992,
	2028, 1924, 1938, 899, 1041, 0, 0, 447, 1108, 1045,
	886, 909, 1055, 915, 917, 982, 861, 957, 357, 906,
	862, 0, 0, 853, 1103, 854, 887, 259, 1101, 1015,
	960, 1043, 943, 975, 985, 258, 244, 950, 949, 1032,
	898, 897, 980, 1028, 1042, 0, 0, 172, 476, 190,
	1141, 314, 0, 0, 474, 423, 339, 0, 0, 941,
	0, 1115, 1128, 926, 984, 873, 971, 1047, 907, 976,
	1048, 0, 0, 0, 0, 0, 0, 555, 0, 1454,
	0, 0, 1455, 0, 0, 171, 0, 1123, 1137, 1104,
	0, 936, 981, 1060, 852, 1120, 0, 857, 1092, 0,
	1033, 894, 895, 263, 0, 0, 0, 0, 0, 0,
	0, 939, 956, 1000, 923, 0, 467, 987, 996, 1010,
	916, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1119, 0, 0, 0, 867, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 872, 850, 892, 1002, 851,
	849, 340, 864, 1130, 1031, 924, 301, 191, 1037, 922,
	1107, 990, 868, 1019, 1053, 910, 311, 866, 195, 863,
	869, 908, 353, 999, 1005, 177, 198, 313, 1016, 888,
	901, 245, 0, 392, 977, 466, 1087, 278, 963, 391,
	315, 459, 991, 1039, 465, 911, 441, 475, 480, 271,
	944, 234, 420, 261, 254, 893, 1009, 856, 284, 375,
	249, 306, 927, 983, 889, 241, 994, 970, 1021, 419,
	456, 200, 334, 457, 479, 166, 272, 411, 273, 440,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 386, 390, 367, 221, 448,
	335, 345, 238, 240, 239, 215, 412, 455, 228, 243,
	1017, 1004, 1023, 884, 870, 876, 871, 900, 1040, 293,
	285, 1024, 1022, 902, 361, 224, 954, 947, 940, 1126,
	469, 1056, 257, 1006, 471, 180, 406, 405, 914, 292,
	1007, 181, 170, 385, 182, 302, 204, 1027, 484, 220,
	309, 449, 1086, 277, 352, 979, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1003, 382, 408, 454,
	222, 426, 173, 176, 185, 398, 186, 187, 1046, 322,
	266, 270, 286, 297, 978, 389, 427, 472, 972, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 445, 400, 280, 321, 323, 431, 436, 432,
	433, 430, 435, 434, 396, 397, 307, 437, 208, 439,
	464, 229, 407, 410, 483, 1001, 216, 237, 428, 210,
	1035, 1018, 965, 929, 935, 858, 0, 209, 930, 931,
	932, 933, 934, 997, 891, 903, 883, 973, 882, 281,
	989, 462, 463, 246, 1093, 1050, 211, 865, 1049, 349,
	356, 348, 1052, 1051, 458, 1036, 966, 953, 951, 859,
	1034, 964, 952, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 955, 425, 320, 0, 206, 0,
	424, 1044, 1062, 438, 226, 877, 1011, 453, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	993, 1059, 360, 393, 233, 468, 421, 262, 1098, 0,
	1100, 1096, 1099, 1097, 1116, 1117, 1138, 1139, 1140, 1127,
	1094, 192, 193, 1135, 1136, 194, 946, 1038, 860, 0,
	1014, 188, 189, 174, 179, 986, 1057, 1106, 242, 164,
	1089, 1090, 1091, 165, 1110, 1111, 167, 168, 1133, 1132,
	1131, 1134, 169, 1143, 1142, 1144, 1095, 1102, 1105, 1112,
	1113, 1114, 1121, 1122, 1129, 1124, 1125, 0, 942, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 377, 248,
	1118, 199, 212, 312, 1058, 384, 276, 336, 413, 338,
	298, 247, 481, 341, 383, 485, 1012, 969, 0, 919,
	921, 920, 879, 881, 880, 878, 1061, 346, 1030, 848,
	855, 874, 885, 890, 896, 904, 905, 913, 918, 928,
	937, 938, 948, 961, 962, 968, 992, 995, 1008, 1013,
	1020, 1025, 1026, 470, 252, 945, 967, 998, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 460, 461, 477,
	478, 925, 196, 0, 0, 202, 0, 203, 205, 912,
	201, 1029, 1054, 974, 988, 899, 1041, 0, 0, 447,
	1108, 1045, 886, 909, 1055, 915, 917, 982, 861, 957,
	357, 906, 862, 0, 0, 853, 1103, 854, 887, 259,
	1101, 1015, 960, 1043, 943, 975, 985, 258, 244, 950,
	949, 1032, 898, 897, 980, 1028, 1042, 0, 0, 172,
	476, 190, 1141, 314, 0, 0, 474, 423, 339, 0,
	0, 941, 0, 1115, 1128, 926, 984, 873, 971, 1047,
	907, 976, 1048, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1123,
	1137, 1104, 0, 936, 981, 1060, 852, 1120, 0, 857,
	1092, 0, 1033, 894, 895, 263, 0, 0, 0, 0,
	0, 0, 0, 939, 956, 1000, 923, 0, 467, 987,
	996, 1010, 916, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 0, 0, 0, 867,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 872, 850, 892,
	1002, 851, 849, 340, 864, 1130, 1031, 924, 301, 191,
	1037, 922, 1107, 990, 868, 1019, 1053, 910, 311, 866,
	195, 863, 869, 908, 353, 999, 1005, 177, 198, 313,
	1016, 888, 901, 245, 0, 392, 977, 466, 1087, 278,
	963, 391, 315, 459, 991, 1039, 465, 911, 441, 475,
	480, 271, 944, 234, 420, 261, 254, 893, 1009, 856,
	284, 375, 249, 306, 927, 983, 889, 241, 994, 970,
	1021, 419, 456, 200, 334, 457, 479, 166, 272, 411,
	273, 440, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 386, 390, 367,
	221, 448, 335, 345, 238, 240, 239, 215, 412, 455,
	228, 243, 1017, 1004, 1023, 884, 870, 876, 871, 900,
	1040, 293, 285, 1024, 1022, 902, 361, 224, 954, 947,
	940, 1126, 469, 1056, 257, 1006, 471, 180, 406, 405,
	914, 292, 1007, 181, 170, 385, 182, 302, 204, 1027,
	484, 220, 309, 449, 1086, 277, 352, 979, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1003, 382,
	408, 454, 222, 426, 173, 176, 185, 398, 186, 187,
	1046, 322, 266, 270, 286, 297, 978, 389, 427, 472,
	972, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 445, 400, 280, 321, 323, 431,
	436, 432, 433, 430, 435, 434, 396, 397, 307, 437,
	208, 439, 464, 229, 407, 410, 483, 1001, 216, 237,
	428, 210, 1035, 1018, 965, 929, 935, 858, 0, 209,
	930, 931, 932, 933, 934, 997, 891, 903, 883, 973,
	882, 281, 989, 462, 463, 246, 1093, 1050, 211, 865,
	1049, 349, 356, 348, 1052, 1051, 458, 1036, 966, 953,
	951, 859, 1034, 964, 952, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 955, 425, 320, 0,
	206, 0, 424, 1044, 1062, 438, 226, 877, 1011, 453,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 993, 1059, 360, 393, 233, 468, 421, 262,
	1098, 0, 1100, 1096, 1099, 1097, 1116, 1117, 1138, 1139,
	1140, 1127, 1094, 192, 193, 1135, 1136, 194, 946, 1038,
	860, 0, 1014, 188, 189, 174, 179, 986, 1057, 1106,
	242, 164, 1089, 1090, 1091, 165, 1110, 1111, 167, 168,
	1133, 1132, 1131, 1134, 169, 1143, 1142, 1144, 1095, 1102,
	1105, 1112, 1113, 1114, 1121, 1122, 1129, 1124, 1125, 0,
	942, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	377, 248, 1118, 199, 212, 312, 1058, 384, 276, 336,
	413, 338, 298, 247, 481, 341, 383, 485, 1012, 969,
	0, 919, 921, 920, 879, 881, 880, 878, 1061, 346,
	1030, 848, 855, 874, 885, 890, 896, 904, 905, 913,
	918, 928, 937, 938, 948, 961, 962, 968, 992, 995,
	1008, 1013, 1020, 1025, 1026, 470, 252, 945, 967, 998,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 460,
	461, 477, 478, 925, 196, 0, 0, 202, 0, 203,
	205, 912, 201, 1029, 1054, 974, 988, 899, 1041, 0,
	0, 447, 1108, 1045, 886, 909, 1055, 915, 917, 982,
	861, 957, 357, 906, 862, 0, 0, 853, 1103, 854,
	887, 259, 1101, 1015, 960, 1043, 943, 975, 985, 258,
	244, 950, 949, 1032, 898, 897, 980, 1028, 1042, 0,
	0, 172, 476, 190, 1141, 314, 0, 0, 474, 423,
	339, 0, 0, 941, 0, 1115, 1128, 926, 984, 873,
	971, 1047, 907, 976, 1048, 0, 0, 0, 0, 0,
	0, 555, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1123, 1137, 1104, 0, 936, 981, 1060, 852, 1120,
	0, 857, 1092, 0, 1033, 894, 895, 263, 0, 0,
	0, 0, 0, 0, 0, 939, 956, 1000, 923, 0,
	467, 987, 996, 1010, 916, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1119, 0, 0,
	0, 867, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 872,
	850, 892, 1002, 851, 849, 340, 864, 1130, 1031, 924,
	301, 191, 1037, 922, 1107, 990, 868, 1019, 1053, 910,
	311, 866, 195, 863, 869, 908, 353, 999, 1005, 177,
	198, 313, 1016, 888, 901, 245, 0, 392, 977, 466,
	1087, 278, 963, 391, 315, 459, 991, 1039, 465, 911,
	441, 475, 480, 271, 944, 234, 420, 261, 254, 893,
	1009, 856, 284, 375, 249, 306, 927, 983, 889, 241,
	994, 970, 1021, 419, 456, 200, 334, 457, 479, 166,
	272, 411, 273, 440, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 386,
	390, 367, 221, 448, 335, 345, 238, 240, 239, 215,
	412, 455, 228, 243, 1017, 1004, 1023, 884, 870, 876,
	871, 900, 1040, 293, 285, 1024, 1022, 902, 361, 224,
	954, 947, 940, 1126, 469, 1056, 257, 1006, 471, 180,
	406, 405, 914, 292, 1007, 181, 170, 385, 182, 302,
	204, 1027, 484, 220, 309, 449, 1086, 277, 352, 979,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1003, 382, 408, 454, 222, 426, 173, 176, 185, 398,
	186, 187, 1046, 322, 266, 270, 286, 297, 978, 389,
	427, 472, 972, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 445, 400, 280, 321,
	323, 431, 436, 432, 433, 430, 435, 434, 396, 397,
	307, 437, 208, 439, 464, 229, 407, 410, 483, 1001,
	216, 237, 428, 210, 1035, 1018, 965, 929, 935, 858,
	0, 209, 930, 931, 932, 933, 934, 997, 891, 903,
	883, 973, 882, 281, 989, 462, 463, 246, 1093, 1050,
	211, 1081, 1049, 349, 356, 348, 1052, 1051, 458, 1036,
	966, 953, 951, 859, 1034, 964, 952, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 1077, 955, 425,
	320, 0, 206, 0, 424, 1044, 1062, 438, 226, 877,
	1011, 453, 178, 381, 227, 279, 267, 372, 1082, 1080,
	1071, 1072, 308, 316, 993, 1059, 360, 393, 233, 468,
	421, 262, 1098, 0, 1100, 1096, 1099, 1097, 1116, 1117,
	1138, 1139, 1140, 1127, 1094, 192, 193, 1135, 1136, 194,
	946, 1038, 860, 0, 1014, 188, 189, 174, 179, 986,
	1057, 1106, 242, 164, 1089, 1090, 1091, 165, 1110, 1111,
	167, 168, 1133, 1132, 1131, 1134, 169, 1143, 1142, 1144,
	1095, 1102, 1105, 1112, 1113, 1114, 1121, 1122, 1129, 1124,
	1125, 0, 942, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 377, 248, 1118, 199, 212, 312, 1058, 384,
	276, 336, 413, 338, 298, 247, 481, 341, 383, 485,
	1012, 969, 0, 919, 921, 920, 879, 881, 880, 878,
	1061, 346, 1030, 848, 855, 874, 885, 890, 896, 904,
	905, 913, 918, 928, 937, 938, 948, 961, 962, 968,
	992, 995, 1008, 1013, 1020, 1025, 1026, 470, 252, 945,
	967, 998, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 1078, 1079,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 460, 461, 477, 478, 925, 196, 0, 0, 202,
	0, 203, 205, 912, 201, 1029, 1054, 974, 988, 899,
	1041, 0, 0, 447, 1108, 1045, 886, 909, 1055, 915,
	917, 982, 861, 957, 357, 906, 862, 0, 0, 853,
	1103, 854, 887, 259, 1101, 1015, 960, 1043, 943, 975,
	985, 258, 244, 950, 949, 1032, 898, 897, 980, 1028,
	1042, 0, 0, 172, 476, 190, 1141, 314, 0, 0,
	474, 423, 339, 0, 0, 941, 0, 1115, 1128, 926,
	984, 873, 971, 1047, 907, 976, 1048, 0, 0, 0,
	0, 0, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1123, 1137, 1104, 0, 936, 981, 1060,
	852, 1120, 0, 857, 1092, 0, 1033, 894, 895, 263,
	0, 0, 0, 0, 0, 0, 0, 939, 956, 1000,
	923, 0, 467, 987, 996, 1010, 916, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1119,
	0, 0, 0, 867, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 872, 850, 892, 1002, 851, 849, 340, 864, 1130,
	1031, 924, 301, 191, 1037, 922, 1107, 990, 868, 1019,
	1053, 910, 311, 866, 195, 863, 869, 908, 353, 999,
	1005, 177, 198, 313, 1016, 888, 901, 245, 0, 392,
	977, 466, 1087, 278, 963, 391, 315, 459, 991, 1039,
	465, 911, 441, 475, 480, 271, 944, 234, 420, 261,
	254, 893, 1009, 856, 284, 375, 249, 306, 927, 983,
	889, 241, 994, 970, 1021, 419, 456, 200, 334, 457,
	479, 166, 272, 411, 273, 440, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 386, 390, 367, 221, 448, 335, 345, 238, 240,
	239, 215, 412, 455, 228, 243, 1017, 1004, 1023, 884,
	870, 876, 871, 900, 1040, 293, 285, 1024, 1022, 902,
	361, 224, 954, 947, 940, 1126, 469, 1056, 257, 1006,
	471, 180, 406, 405, 914, 292, 1007, 181, 170, 385,
	182, 302, 204, 1027, 484, 220, 309, 449, 1086, 277,
	352, 979, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1003, 382, 408, 454, 222, 426, 173, 176,
	185, 398, 186, 187, 1046, 322, 266, 270, 286, 297,
	978, 389, 427, 472, 972, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 445, 400,
	280, 321, 323, 431, 436, 432, 433, 430, 435, 434,
	396, 397, 307, 437, 208, 439, 1619, 229, 407, 410,
	483, 1001, 216, 237, 428, 210, 1035, 1018, 965, 929,
	935, 858, 0, 209, 930, 931, 932, 933, 934, 997,
	891, 903, 883, 973, 882, 281, 989, 462, 463, 246,
	1093, 1050, 211, 865, 1049, 349, 356, 348, 1052, 1051,
	458, 1036, 966, 953, 951, 859, 1034, 964, 952, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	955, 425, 320, 0, 206, 0, 424, 1044, 1062, 438,
	226, 877, 1011, 453, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 993, 1059, 360, 393,
	233, 468, 421, 262, 1098, 0, 1100, 1096, 1099, 1097,
	1116, 1117, 1138, 1139, 1140, 1127, 1094, 192, 193, 1135,
	1136, 194, 946, 1038, 860, 0, 1014, 188, 189, 174,
	179, 986, 1057, 1106, 242, 164, 1089, 1090, 1091, 165,
	1110, 1111, 167, 168, 1133, 1132, 1131, 1134, 169, 1143,
	1142, 1144, 1095, 1102, 1105, 1112, 1113, 1114, 1121, 1122,
	1129, 1124, 1125, 0, 942, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 377, 248, 1118, 199, 212, 312,
	1058, 384, 276, 336, 413, 338, 298, 247, 481, 341,
	383, 485, 1012, 969, 0, 919, 921, 920, 879, 881,
	880, 878, 1061, 346, 1030, 848, 855, 874, 885, 890,
	896, 904, 905, 913, 918, 928, 937, 938, 948, 961,
	962, 968, 992, 995, 1008, 1013, 1020, 1025, 1026, 470,
	252, 945, 967, 998, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 460, 461, 477, 478, 925, 196, 0,
	0, 202, 0, 203, 205, 912, 201, 1029, 1054, 974,
	988, 899, 1041, 0, 0, 447, 1108, 1045, 886, 909,
	1055, 915, 917, 982, 861, 957, 357, 906, 862, 0,
	0, 853, 1103, 854, 887, 259, 1101, 1015, 960, 1043,
	943, 975, 985, 258, 244, 950, 949, 1032, 898, 897,
	980, 1028, 1042, 0, 0, 172, 476, 190, 1141, 314,
	0, 0, 474, 423, 339, 0, 0, 941, 0, 1115,
	1128, 926, 984, 873, 971, 1047, 907, 976, 1048, 0,
	0, 0, 0, 0, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1123, 1137, 1104, 0, 936,
	981, 1060, 852, 1120, 0, 857, 1092, 0, 1033, 894,
	895, 263, 0, 0, 0, 0, 0, 0, 0, 939,
	956, 1000, 923, 0, 467, 987, 996, 1010, 916, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1119, 0, 0, 0, 867, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 872, 850, 892, 1002, 851, 849, 340,
	864, 1130, 1031, 924, 301, 191, 1037, 922, 1107, 990,
	868, 1019, 1053, 910, 311, 866, 195, 863, 869, 908,
	353, 999, 1005, 177, 198, 313, 1016, 888, 901, 245,
	0, 392, 977, 466, 1087, 278, 963, 391, 315, 459,
	991, 1039, 465, 911, 441, 475, 480, 271, 944, 234,
	420, 261, 254, 893, 1009, 856, 284, 375, 249, 306,
	927, 983, 889, 241, 994, 970, 1021, 419, 456, 200,
	334, 457, 479, 166, 272, 411, 273, 440, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 386, 390, 367, 221, 448, 335, 345,
	238, 240, 239, 215, 412, 455, 228, 243, 1017, 1004,
	1023, 884, 870, 876, 871, 900, 1040, 293, 285, 1024,
	1022, 902, 361, 224, 954, 947, 940, 1126, 469, 1056,
	257, 1006, 471, 180, 406, 405, 914, 292, 1007, 181,
	170, 385, 182, 302, 204, 1027, 484, 220, 309, 449,
	1086, 277, 352, 979, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1003, 382, 408, 454, 222, 426,
	173, 176, 185, 398, 186, 187, 1046, 322, 266, 270,
	286, 297, 978, 389, 427, 472, 972, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	445, 400, 280, 321, 323, 431, 436, 432, 433, 430,
	435, 434, 396, 397, 307, 437, 208, 439, 1068, 229,
	407, 410, 483, 1001, 216, 237, 428, 210, 1035, 1018,
	965, 929, 935, 858, 0, 209, 930, 931, 932, 933,
	934, 997, 891, 903, 883, 973, 882, 281, 989, 462,
	463, 246, 1093, 1050, 211, 1081, 1049, 349, 356, 348,
	1052, 1051, 458, 1036, 966, 953, 951, 859, 1034, 964,
	952, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 1077, 955, 425, 320, 0, 206, 0, 424, 1044,
	1062, 438, 226, 877, 1011, 453, 178, 381, 227, 279,
	267, 372, 1082, 1080, 1071, 1072, 308, 316, 993, 1059,
	360, 393, 233, 468, 421, 262, 1098, 0, 1100, 1096,
	1099, 1097, 1116, 1117, 1138, 1139, 1140, 1127, 1094, 192,
	193, 1135, 1136, 194, 946, 1038, 860, 0, 1014, 188,
	189, 174, 179, 986, 1057, 1106, 242, 164, 1089, 1090,
	1091, 165, 1110, 1111, 167, 168, 1133, 1132, 1131, 1134,
	169, 1143, 1142, 1144, 1095, 1102, 1105, 1112, 1113, 1114,
	1121, 1122, 1129, 1124, 1125, 0, 942, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 377, 248, 1118, 199,
	212, 312, 1058, 384, 276, 336, 413, 338, 298, 247,
	481, 341, 383, 485, 1012, 969, 0, 919, 921, 920,
	879, 881, 880, 878, 1061, 346, 1030, 848, 855, 874,
	885, 890, 896, 904, 905, 913, 918, 928, 937, 938,
	948, 961, 962, 968, 992, 995, 1008, 1013, 1020, 1025,
	1026, 470, 252, 945, 967, 998, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 1078, 1079, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 460, 461, 477, 478, 925,
	196, 0, 0, 202, 0, 203, 205, 912, 201, 1029,
	1054, 974, 988, 1829, 2008, 0, 1970, 447, 1863, 2012,
	1812, 1842, 2030, 1848, 1851, 1932, 1778, 1901, 357, 1839,
	1779, 1762, 1817, 1766, 1830, 1767, 1814, 259, 1810, 1973,
	1904, 2010, 1883, 1925, 1935, 258, 244, 1893, 1892, 1998,
	1828, 1827, 1930, 1987, 2009, 1882, 0, 0, 476, 0,
	2019, 314, 1984, 0, 474, 423, 339, 0, 0, 1878,
	1993, 1899, 1962, 1861, 1934, 1794, 1917, 2014, 1840, 1926,
	2015, 0, 0, 0, 0, 0, 3144, 3149, 0, 3152,
	3154, 3153, 0, 0, 0, 3146, 0, 1922, 2006, 1833,
	0, 1873, 1931, 2035, 1765, 1918, 0, 1770, 1781, 2029,
	1999, 1824, 1825, 263, 0, 0, 0, 0, 0, 0,
	0, 1876, 1900, 1952, 1858, 0, 467, 1937, 1947, 1965,
	1850, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 1915, 0, 0, 0, 1786, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 1793, 1763, 1821, 1954, 1764,
	1761, 340, 1782, 1967, 1997, 1859, 301, 0, 2003, 1857,
	1856, 1941, 1787, 1977, 2027, 1843, 311, 1785, 195, 1780,
	1788, 1841, 353, 1951, 1959, 0, 198, 313, 1974, 1815,
	1832, 245, 0, 392, 1927, 466, 0, 278, 1908, 391,
	315, 459, 1942, 2005, 465, 1844, 441, 475, 480, 271,
	1884, 234, 420, 261, 254, 1823, 1964, 1769, 284, 375,
	249, 306, 1862, 1933, 1816, 241, 1945, 1916, 1979, 419,
	456, 200, 334, 457, 479, 3147, 272, 411, 273, 440,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 386, 390, 367, 221, 448,
	335, 345, 238, 240, 239, 215, 412, 455, 228, 243,
	1975, 1958, 1981, 1809, 1789, 1800, 1790, 1831, 2007, 293,
	285, 1982, 1980, 1834, 361, 224, 1897, 1890, 1877, 1955,
	469, 2031, 257, 1960, 471, 0, 406, 405, 1847, 292,
	1961, 0, 0, 385, 3148, 302, 204, 1986, 484, 220,
	309, 449, 0, 277, 352, 1929, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1957, 382, 408, 454,
	222, 426, 0, 0, 0, 398, 0, 0, 2013, 322,
	266, 270, 286, 297, 1928, 389, 427, 472, 1919, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 445, 400, 280, 321, 323, 431, 436, 432,
	433, 430, 435, 434, 396, 397, 307, 437, 208, 439,
	464, 229, 407, 410, 483, 1953, 216, 237, 428, 210,
	2001, 1976, 1910, 1865, 1871, 1771, 0, 209, 1866, 1867,
	1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923, 1807, 281,
	1940, 462, 463, 246, 1783, 2021, 211, 1784, 2020, 349,
	356, 348, 2024, 2022, 458, 2002, 1911, 1896, 1894, 1776,
	2000, 1909, 1895, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1898, 425, 320, 0, 206, 0,
	424, 2011, 2037, 438, 226, 1802, 1968, 453, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1944, 2034, 360, 393, 233, 468, 421, 262, 1798, 0,
	1801, 1796, 1799, 1797, 1902, 1903, 2016, 2017, 2018, 1956,
	1791, 0, 0, 1994, 1995, 0, 1889, 2004, 1777, 0,
	1972, 0, 0, 0, 0, 1936, 2032, 1849, 242, 0,
	1773, 1774, 1775, 0, 1879, 1880, 0, 0, 1990, 1989,
	1988, 1991, 0, 2025, 2023, 2026, 1792, 1813, 1835, 1885,
	1886, 1888, 1920, 1921, 1966, 1939, 1948, 1822, 1881, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 377, 248,
	1907, 199, 212, 312, 2033, 384, 276, 336, 413, 338,
	298, 247, 481, 341, 383, 485, 1969, 1914, 0, 1853,
	1855, 1854, 1804, 1806, 1805, 1803, 2036, 346, 1996, 1760,
	1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864,
	1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946, 1963, 1971,
	1978, 1983, 1985, 470, 252, 1887, 1912, 1950, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 460, 461, 477,
	478, 1860, 196, 0, 0, 202, 0, 203, 205, 1845,
	201, 1992, 2028, 1924, 1938, 1829, 2008, 0, 1970, 447,
	1863, 2012, 1812, 1842, 2030, 1848, 1851, 1932, 1778, 1901,
	357, 1839, 1779, 1762, 1817, 1766, 1830, 1767, 1814, 259,
	1810, 1973, 1904, 2010, 1883, 1925, 1935, 258, 244, 1893,
	1892, 1998, 1828, 1827, 1930, 1987, 2009, 1882, 0, 0,
	476, 0, 2019, 314, 1984, 0, 474, 423, 339, 0,
	0, 1878, 1993, 1899, 1962, 1861, 1934, 1794, 1917, 2014,
	1840, 1926, 2015, 0, 0, 0, 0, 0, 3936, 3149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1922,
	2006, 1833, 0, 1873, 1931, 2035, 1765, 1918, 0, 1770,
	1781, 2029, 1999, 1824, 1825, 263, 0, 0, 0, 0,
	0, 0, 0, 1876, 1900, 1952, 1858, 0, 467, 1937,
	1947, 1965, 1850, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 1915, 0, 0, 0, 1786,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 1793, 1763, 1821,
	1954, 1764, 1761, 340, 1782, 1967, 1997, 1859, 301, 0,
	2003, 1857, 1856, 1941, 1787, 1977, 2027, 1843, 311, 1785,
	195, 1780, 1788, 1841, 353, 1951, 1959, 0, 198, 313,
	1974, 1815, 1832, 245, 0, 392, 1927, 466, 0, 278,
	1908, 391, 315, 459, 1942, 2005, 465, 1844, 441, 475,
	480, 271, 1884, 234, 420, 261, 254, 1823, 1964, 1769,
	284, 375, 249, 306, 1862, 1933, 1816, 241, 1945, 1916,
	1979, 419, 456, 200, 334, 457, 479, 0, 272, 411,
	273, 440, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 386, 390, 367,
	221, 448, 335, 345, 238, 240, 239, 215, 412, 455,
	228, 243, 1975, 1958, 1981, 1809, 1789, 1800, 1790, 1831,
	2007, 293, 285, 1982, 1980, 1834, 361, 224, 1897, 1890,
	1877, 1955, 469, 2031, 257, 1960, 471, 0, 406, 405,
	1847, 292, 1961, 0, 0, 385, 0, 302, 204, 1986,
	484, 220, 309, 449, 0, 277, 352, 1929, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 1957, 382,
	408, 454, 222, 426, 0, 0, 0, 398, 0, 0,
	2013, 322, 266, 270, 286, 297, 1928, 389, 427, 472,
	1919, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 445, 400, 280, 321, 323, 431,
	436, 432, 433, 430, 435, 434, 396, 397, 307, 437,
	208, 439, 464, 229, 407, 410, 483, 1953, 216, 237,
	428, 210, 2001, 1976, 1910, 1865, 1871, 1771, 0, 209,
	1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923,
	1807, 281, 1940, 462, 463, 246, 1783, 2021, 211, 1784,
	2020, 349, 356, 348, 2024, 2022, 458, 2002, 1911, 1896,
	1894, 1776, 2000, 1909, 1895, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1898, 425, 320, 0,
	206, 0, 424, 2011, 2037, 438, 226, 1802, 1968, 453,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1944, 2034, 360, 393, 233, 468, 421, 262,
	1798, 0, 1801, 1796, 1799, 1797, 1902, 1903, 2016, 2017,
	2018, 1956, 1791, 0, 0, 1994, 1995, 0, 1889, 2004,
	1777, 0, 1972, 0, 0, 0, 0, 1936, 2032, 1849,
	242, 0, 1773, 1774, 1775, 0, 1879, 1880, 0, 0,
	1990, 1989, 1988, 1991, 0, 2025, 2023, 2026, 1792, 1813,
	1835, 1885, 1886, 1888, 1920, 1921, 1966, 1939, 1948, 1822,
	1881, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	377, 248, 1907, 199, 212, 312, 2033, 384, 276, 336,
	413, 338, 298, 247, 481, 341, 383, 485, 1969, 1914,
	0, 1853, 1855, 1854, 1804, 1806, 1805, 1803, 2036, 346,
	1996, 1760, 1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846,
	1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946,
	1963, 1971, 1978, 1983, 1985, 470, 252, 1887, 1912, 1950,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 460,
	461, 477, 478, 1860, 196, 0, 0, 202, 0, 203,
	205, 1845, 201, 1992, 2028, 1924, 1938, 1829, 2008, 0,
	1970, 447, 1863, 2012, 1812, 1842, 2030, 1848, 1851, 1932,
	1778, 1901, 357, 1839, 1779, 1762, 1817, 1766, 1830, 1767,
	1814, 259, 1810, 1973, 1904, 2010, 1883, 1925, 1935, 258,
	244, 1893, 1892, 1998, 1828, 1827, 1930, 1987, 2009, 1882,
	0, 0, 476, 0, 2019, 314, 1984, 0, 474, 423,
	339, 0, 0, 1878, 1993, 1899, 1962, 1861, 1934, 1794,
	1917, 2014, 1840, 1926, 2015, 0, 0, 0, 0, 0,
	0, 1160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1922, 2006, 1833, 0, 1873, 1931, 2035, 1765, 1918,
	0, 1770, 1781, 2029, 1999, 1824, 1825, 263, 0, 0,
	0, 0, 0, 0, 0, 1876, 1900, 1952, 1858, 0,
	467, 1937, 1947, 1965, 1850, 376, 283, 0, 0, 0,
	0, 0, 0, 3882, 0, 1819, 0, 1915, 0, 0,
	0, 1786, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 1793,
	1763, 1821, 1954, 1764, 1761, 340, 1782, 1967, 1997, 1859,
	301, 0, 2003, 1857, 1856, 1941, 1787, 1977, 2027, 1843,
	311, 1785, 195, 1780, 1788, 1841, 353, 1951, 1959, 0,
	198, 313, 1974, 1815, 1832, 245, 0, 392, 1927, 466,
	0, 278, 1908, 391, 315, 459, 1942, 2005, 465, 1844,
	441, 475, 480, 271, 1884, 234, 420, 261, 254, 1823,
	1964, 1769, 284, 375, 249, 306, 1862, 1933, 1816, 241,
	1945, 1916, 1979, 419, 456, 200, 334, 457, 479, 0,
	272, 411, 273, 440, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 386,
	390, 367, 221, 448, 335, 345, 238, 240, 239, 215,
	412, 455, 228, 243, 1975, 1958, 1981, 1809, 1789, 1800,
	1790, 1831, 2007, 293, 285, 1982, 1980, 1834, 361, 224,
	1897, 1890, 1877, 1955, 469, 2031, 257, 1960, 471, 0,
	406, 405, 1847, 292, 1961, 0, 0, 385, 0, 302,
	204, 1986, 484, 220, 309, 449, 0, 277, 352, 1929,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	1957, 382, 408, 454, 222, 426, 0, 0, 0, 398,
	0, 0, 2013, 322, 266, 270, 286, 297, 1928, 389,
	427, 472, 1919, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 445, 400, 280, 321,
	323, 431, 436, 432, 433, 430, 435, 434, 396, 397,
	307, 437, 208, 439, 464, 229, 407, 410, 483, 1953,
	216, 237, 428, 210, 2001, 1976, 1910, 1865, 1871, 1771,
	0, 209, 1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836,
	1808, 1923, 1807, 281, 1940, 462, 463, 246, 1783, 2021,
	211, 1784, 2020, 349, 356, 348, 2024, 2022, 458, 2002,
	1911, 1896, 1894, 1776, 2000, 1909, 1895, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1898, 425,
	320, 0, 206, 0, 424, 2011, 2037, 438, 226, 1802,
	1968, 453, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1944, 2034, 360, 393, 233, 468,
	421, 262, 1798, 0, 1801, 1796, 1799, 1797, 1902, 1903,
	2016, 2017, 2018, 1956, 1791, 0, 0, 1994, 1995, 0,
	1889, 2004, 1777, 0, 1972, 0, 0, 0, 0, 1936,
	2032, 1849, 242, 0, 1773, 1774, 1775, 0, 1879, 1880,
	0, 0, 1990, 1989, 1988, 1991, 0, 2025, 2023, 2026,
	1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921, 1966, 1939,
	1948, 1822, 1881, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 377, 248, 1907, 199, 212, 312, 2033, 384,
	276, 336, 413, 338, 298, 247, 481, 341, 383, 485,
	1969, 1914, 0, 1853, 1855, 1854, 1804, 1806, 1805, 1803,
	2036, 346, 1996, 1760, 1768, 1795, 1811, 1818, 1826, 1837,
	1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913,
	1943, 1946, 1963, 1971, 1978, 1983, 1985, 470, 252, 1887,
	1912, 1950, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 460, 461, 477, 478, 1860, 196, 0, 0, 202,
	0, 203, 205, 1845, 201, 1992, 2028, 1924, 1938, 1829,
	2008, 0, 1970, 447, 1863, 2012, 1812, 1842, 2030, 1848,
	1851, 1932, 1778, 1901, 357, 1839, 1779, 1762, 1817, 1766,
	1830, 1767, 1814, 259, 1810, 1973, 1904, 2010, 1883, 1925,
	1935, 258, 244, 1893, 1892, 1998, 1828, 1827, 1930, 1987,
	2009, 1882, 0, 0, 476, 0, 2019, 314, 1984, 0,
	474, 423, 339, 0, 0, 1878, 1993, 1899, 1962, 1861,
	1934, 1794, 1917, 2014, 1840, 1926, 2015, 0, 0, 0,
	0, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1922, 2006, 1833, 0, 1873, 1931, 2035,
	1765, 1918, 0, 1770, 1781, 2029, 1999, 1824, 1825, 263,
	0, 0, 0, 0, 0, 0, 0, 1876, 1900, 1952,
	1858, 0, 467, 1937, 1947, 1965, 1850, 376, 283, 0,
	0, 0, 0, 0, 0, 3197, 0, 1819, 0, 1915,
	0, 0, 0, 1786, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 1793, 1763, 1821, 1954, 1764, 1761, 340, 1782, 1967,
	1997, 1859, 301, 0, 2003, 1857, 1856, 1941, 1787, 1977,
	2027, 1843, 311, 1785, 195, 1780, 1788, 1841, 353, 1951,
	1959, 0, 198, 313, 1974, 1815, 1832, 245, 0, 392,
	1927, 466, 0, 278, 1908, 391, 315, 459, 1942, 2005,
	465, 1844, 441, 475, 480, 271, 1884, 234, 420, 261,
	254, 1823, 1964, 1769, 284, 375, 249, 306, 1862, 1933,
	1816, 241, 1945, 1916, 1979, 419, 456, 200, 334, 457,
	479, 0, 272, 411, 273, 440, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 386, 390, 367, 221, 448, 335, 345, 238, 240,
	239, 215, 412, 455, 228, 243, 1975, 1958, 1981, 1809,
	1789, 1800, 1790, 1831, 2007, 293, 285, 1982, 1980, 1834,
	361, 224, 1897, 1890, 1877, 1955, 469, 2031, 257, 1960,
	471, 0, 406, 405, 1847, 292, 1961, 0, 0, 385,
	0, 302, 204, 1986, 484, 220, 309, 449, 0, 277,
	352, 1929, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1957, 382, 408, 454, 222, 426, 0, 0,
	0, 398, 0, 0, 2013, 322, 266, 270, 286, 297,
	1928, 389, 427, 472, 1919, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 445, 400,
	280, 321, 323, 431, 436, 432, 433, 430, 435, 434,
	396, 397, 307, 437, 208, 439, 464, 229, 407, 410,
	483, 1953, 216, 237, 428, 210, 2001, 1976, 1910, 1865,
	1871, 1771, 0, 209, 1866, 1867, 1868, 1869, 1870, 1949,
	1820, 1836, 1808, 1923, 1807, 281, 1940, 462, 463, 246,
	1783, 2021, 211, 1784, 2020, 349, 356, 348, 2024, 2022,
	458, 2002, 1911, 1896, 1894, 1776, 2000, 1909, 1895, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1898, 425, 320, 0, 206, 0, 424, 2011, 2037, 438,
	226, 1802, 1968, 453, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1944, 2034, 360, 393,
	233, 468, 421, 262, 1798, 0, 1801, 1796, 1799, 1797,
	1902, 1903, 2016, 2017, 2018, 1956, 1791, 0, 0, 1994,
	1995, 0, 1889, 2004, 1777, 0, 1972, 0, 0, 0,
	0, 1936, 2032, 1849, 242, 0, 1773, 1774, 1775, 0,
	1879, 1880, 0, 0, 1990, 1989, 1988, 1991, 0, 2025,
	2023, 2026, 1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921,
	1966, 1939, 1948, 1822, 1881, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 377, 248, 1907, 199, 212, 312,
	2033, 384, 276, 336, 413, 338, 298, 247, 481, 341,
	383, 485, 1969, 1914, 0, 1853, 1855, 1854, 1804, 1806,
	1805, 1803, 2036, 346, 1996, 1760, 1768, 1795, 1811, 1818,
	1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905,
	1906, 1913, 1943, 1946, 1963, 1971, 1978, 1983, 1985, 470,
	252, 1887, 1912, 1950, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 460, 461, 477, 478, 1860, 196, 0,
	0, 202, 0, 203, 205, 1845, 201, 1992, 2028, 1924,
	1938, 1829, 2008, 0, 1970, 447, 1863, 2012, 1812, 1842,
	2030, 1848, 1851, 1932, 1778, 1901, 357, 1839, 1779, 1762,
	1817, 1766, 1830, 1767, 1814, 259, 1810, 1973, 1904, 2010,
	1883, 1925, 1935, 258, 244, 1893, 1892, 1998, 1828, 1827,
	1930, 1987, 2009, 1882, 0, 0, 476, 0, 2019, 314,
	1984, 0, 474, 423, 339, 0, 0, 1878, 1993, 1899,
	1962, 1861, 1934, 1794, 1917, 2014, 1840, 1926, 2015, 0,
	0, 0, 0, 0, 0, 1160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1922, 2006, 1833, 0, 1873,
	1931, 2035, 1765, 1918, 0, 1770, 1781, 2029, 1999, 1824,
	1825, 263, 0, 0, 0, 0, 0, 0, 0, 1876,
	1900, 1952, 1858, 0, 467, 1937, 1947, 1965, 1850, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 1915, 0, 0, 0, 1786, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 1793, 1763, 1821, 1954, 1764, 1761, 340,
	1782, 1967, 1997, 1859, 301, 0, 2003, 1857, 1856, 1941,
	1787, 1977, 2027, 1843, 311, 1785, 195, 1780, 1788, 1841,
	353, 1951, 1959, 0, 198, 313, 1974, 1815, 1832, 245,
	0, 392, 1927, 466, 0, 278, 1908, 391, 315, 459,
	1942, 2005, 465, 1844, 441, 475, 480, 271, 1884, 234,
	420, 261, 254, 1823, 1964, 1769, 284, 375, 249, 306,
	1862, 1933, 1816, 241, 1945, 1916, 1979, 419, 456, 200,
	334, 457, 479, 0, 272, 411, 273, 440, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 386, 390, 367, 221, 448, 335, 345,
	238, 240, 239, 215, 412, 455, 228, 243, 1975, 1958,
	1981, 1809, 1789, 1800, 1790, 1831, 2007, 293, 285, 1982,
	1980, 1834, 361, 224, 1897, 1890, 1877, 1955, 469, 2031,
	257, 1960, 471, 0, 406, 405, 1847, 292, 1961, 0,
	0, 385, 0, 302, 204, 1986, 484, 220, 309, 449,
	0, 277, 352, 1929, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1957, 382, 408, 454, 222, 426,
	0, 0, 0, 398, 0, 0, 2013, 322, 266, 270,
	286, 297, 1928, 389, 427, 472, 1919, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	445, 400, 280, 321, 323, 431, 436, 432, 433, 430,
	435, 434, 396, 397, 307, 437, 208, 439, 464, 229,
	407, 410, 483, 1953, 216, 237, 428, 210, 2001, 1976,
	1910, 1865, 1871, 1771, 0, 209, 1866, 1867, 1868, 1869,
	1870, 1949, 1820, 1836, 1808, 1923, 1807, 281, 1940, 462,
	463, 246, 1783, 2021, 211, 1784, 2020, 349, 356, 348,
	2024, 2022, 458, 2002, 1911, 1896, 1894, 1776, 2000, 1909,
	1895, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1898, 425, 320, 0, 206, 0, 424, 2011,
	2037, 438, 226, 1802, 1968, 453, 2315, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1944, 2034,
	360, 393, 233, 468, 421, 262, 1798, 0, 1801, 1796,
	1799, 1797, 1902, 1903, 2016, 2017, 2018, 1956, 1791, 0,
	0, 1994, 1995, 0, 1889, 2004, 1777, 0, 1972, 0,
	0, 0, 0, 1936, 2032, 1849, 242, 0, 1773, 1774,
	1775, 0, 1879, 1880, 0, 0, 1990, 1989, 1988, 1991,
	0, 2025, 2023, 2026, 1792, 1813, 1835, 1885, 1886, 1888,
	1920, 1921, 1966, 1939, 1948, 1822, 1881, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 377, 248, 1907, 199,
	212, 312, 2033, 384, 276, 336, 413, 338, 298, 247,
	481, 341, 383, 485, 1969, 1914, 0, 1853, 1855, 1854,
	1804, 1806, 1805, 1803, 2036, 346, 1996, 1760, 1768, 1795,
	1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875,
	1891, 1905, 1906, 1913, 1943, 1946, 1963, 1971, 1978, 1983,
	1985, 470, 252, 1887, 1912, 1950, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 460, 461, 477, 478, 1860,
	196, 0, 0, 202, 0, 203, 205, 1845, 201, 1992,
	2028, 1924, 1938, 1829, 2008, 0, 1970, 447, 1863, 2012,
	1812, 1842, 2030, 1848, 1851, 1932, 1778, 1901, 357, 1839,
	1779, 1762, 1817, 1766, 1830, 1767, 1814, 259, 1810, 1973,
	1904, 2010, 1883, 1925, 1935, 258, 244, 1893, 1892, 1998,
	1828, 1827, 1930, 1987, 2009, 1882, 0, 0, 476, 0,
	2019, 314, 1984, 0, 474, 423, 339, 0, 0, 1878,
	1993, 1899, 1962, 1861, 1934, 1794, 1917, 2014, 1840, 1926,
	2015, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1922, 2006, 1833,
	0, 1873, 1931, 2035, 1765, 1918, 0, 1770, 1781, 2029,
	1999, 1824, 1825, 263, 0, 0, 0, 0, 0, 0,
	0, 1876, 1900, 1952, 1858, 0, 467, 1937, 1947, 1965,
	1850, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 1915, 0, 0, 0, 1786, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 1793, 1763, 1821, 1954, 1764,
	1761, 340, 1782, 1967, 1997, 1859, 301, 0, 2003, 1857,
	1856, 1941, 1787, 1977, 2027, 1843, 311, 1785, 195, 1780,
	1788, 1841, 353, 1951, 1959, 0, 198, 313, 1974, 1815,
	1832, 245, 0, 392, 1927, 466, 0, 278, 1908, 391,
	315, 459, 1942, 2005, 465, 1844, 441, 475, 480, 271,
	1884, 234, 420, 261, 254, 1823, 1964, 1769, 284, 375,
	249, 306, 1862, 1933, 1816, 241, 1945, 1916, 1979, 419,
	456, 200, 334, 457, 479, 0, 272, 411, 273, 440,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 386, 390, 367, 221, 448,
	335, 345, 238, 240, 239, 215, 412, 455, 228, 243,
	1975, 1958, 1981, 1809, 1789, 1800, 1790, 1831, 2007, 293,
	285, 1982, 1980, 1834, 361, 224, 1897, 1890, 1877, 1955,
	469, 2031, 257, 1960, 471, 0, 406, 405, 1847, 292,
	1961, 0, 0, 385, 0, 302, 204, 1986, 484, 220,
	309, 449, 0, 277, 352, 1929, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1957, 382, 408, 454,
	222, 426, 0, 0, 0, 398, 0, 0, 2013, 322,
	266, 270, 286, 297, 1928, 389, 427, 472, 1919, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 445, 400, 280, 321, 323, 431, 436, 432,
	433, 430, 435, 434, 396, 397, 307, 437, 208, 439,
	464, 229, 407, 410, 483, 1953, 216, 237, 428, 210,
	2001, 1976, 1910, 1865, 1871, 1771, 0, 209, 1866, 1867,
	1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923, 1807, 281,
	1940, 462, 463, 246, 1783, 2021, 211, 1784, 2020, 349,
	356, 348, 2024, 2022, 458, 2002, 1911, 1896, 1894, 1776,
	2000, 1909, 1895, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1898, 425, 320, 0, 206, 0,
	424, 2011, 2037, 438, 226, 1802, 1968, 453, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1944, 2034, 360, 393, 233, 468, 421, 262, 1798, 0,
	1801, 1796, 1799, 1797, 1902, 1903, 2016, 2017, 2018, 1956,
	1791, 0, 0, 1994, 1995, 0, 1889, 2004, 1777, 0,
	1972, 0, 0, 0, 0, 1936, 2032, 1849, 242, 0,
	1773, 1774, 1775, 0, 1879, 1880, 0, 0, 1990, 1989,
	1988, 1991, 0, 2025, 2023, 2026, 1792, 1813, 1835, 1885,
	1886, 1888, 1920, 1921, 1966, 1939, 1948, 1822, 1881, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 377, 248,
	1907, 199, 212, 312, 2033, 384, 276, 336, 413, 338,
	298, 247, 481, 341, 383, 485, 1969, 1914, 0, 1853,
	1855, 1854, 1804, 1806, 1805, 1803, 2036, 346, 1996, 1760,
	1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864,
	1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946, 1963, 1971,
	1978, 1983, 1985, 470, 252, 1887, 1912, 1950, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 4052, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 460, 461, 477,
	478, 1860, 196, 0, 0, 202, 0, 203, 205, 1845,
	201, 1992, 2028, 1924, 1938, 1829, 2008, 0, 1970, 447,
	1863, 2012, 1812, 1842, 2030, 1848, 1851, 1932, 1778, 1901,
	357, 1839, 1779, 1762, 1817, 1766, 1830, 1767, 1814, 259,
	1810, 1973, 1904, 2010, 1883, 1925, 1935, 258, 244, 1893,
	1892, 1998, 1828, 1827, 1930, 1987, 2009, 1882, 0, 0,
	476, 0, 2019, 314, 1984, 0, 474, 423, 339, 0,
	0, 1878, 1993, 1899, 1962, 1861, 1934, 1794, 1917, 2014,
	1840, 1926, 2015, 0, 0, 0, 0, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1922,
	2006, 1833, 0, 1873, 1931, 2035, 1765, 1918, 0, 1770,
	1781, 2029, 1999, 1824, 1825, 263, 0, 0, 0, 0,
	0, 0, 0, 1876, 1900, 1952, 1858, 0, 467, 1937,
	1947, 1965, 1850, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 1915, 0, 0, 0, 1786,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 1793, 1763, 1821,
	1954, 1764, 1761, 340, 1782, 1967, 1997, 1859, 301, 0,
	2003, 1857, 1856, 1941, 1787, 1977, 2027, 1843, 311, 1785,
	195, 1780, 1788, 1841, 353, 1951, 1959, 0, 198, 313,
	1974, 1815, 1832, 245, 0, 392, 1927, 466, 0, 278,
	1908, 391, 315, 459, 1942, 2005, 465, 1844, 441, 475,
	480, 271, 1884, 234, 420, 261, 254, 1823, 1964, 1769,
	284, 375, 249, 306, 1862, 1933, 1816, 241, 1945, 1916,
	1979, 419, 456, 200, 334, 457, 479, 0, 272, 411,
	273, 440, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 386, 390, 367,
	221, 448, 335, 345, 238, 240, 239, 215, 412, 455,
	228, 243, 1975, 1958, 1981, 1809, 1789, 1800, 1790, 1831,
	2007, 293, 285, 1982, 1980, 1834, 361, 224, 1897, 1890,
	1877, 1955, 469, 2031, 257, 1960, 471, 0, 406, 405,
	1847, 292, 1961, 0, 0, 385, 0, 302, 204, 1986,
	484, 220, 309, 449, 0, 277, 352, 1929, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 1957, 382,
	408, 454, 222, 426, 0, 0, 0, 398, 0, 0,
	2013, 322, 266, 270, 286, 297, 1928, 389, 427, 472,
	1919, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 445, 400, 280, 321, 323, 431,
	436, 432, 433, 430, 435, 434, 396, 397, 307, 437,
	208, 439, 464, 229, 407, 410, 483, 1953, 216, 237,
	428, 210, 2001, 1976, 1910, 1865, 1871, 1771, 0, 209,
	1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923,
	1807, 281, 1940, 462, 463, 246, 1783, 2021, 211, 1784,
	2020, 349, 356, 348, 2024, 2022, 458, 2002, 1911, 1896,
	1894, 1776, 2000, 1909, 1895, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1898, 425, 320, 0,
	206, 0, 424, 2011, 2037, 438, 226, 1802, 1968, 453,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1944, 2034, 360, 393, 233, 468, 421, 262,
	1798, 0, 1801, 1796, 1799, 1797, 1902, 1903, 2016, 2017,
	2018, 1956, 1791, 0, 0, 1994, 1995, 0, 1889, 2004,
	1777, 0, 1972, 0, 0, 0, 0, 1936, 2032, 1849,
	242, 0, 1773, 1774, 1775, 0, 1879, 1880, 0, 0,
	1990, 1989, 1988, 1991, 0, 2025, 2023, 2026, 1792, 1813,
	1835, 1885, 1886, 1888, 1920, 1921, 1966, 1939, 1948, 1822,
	1881, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	377, 248, 1907, 199, 212, 312, 2033, 384, 276, 336,
	413, 338, 298, 247, 481, 341, 383, 485, 1969, 1914,
	0, 1853, 1855, 1854, 1804, 1806, 1805, 1803, 2036, 346,
	1996, 1760, 1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846,
	1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946,
	1963, 1971, 1978, 1983, 1985, 470, 252, 1887, 1912, 1950,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 460,
	461, 477, 478, 1860, 196, 0, 0, 202, 0, 203,
	205, 1845, 201, 1992, 2028, 1924, 1938, 1829, 2008, 0,
	1970, 447, 1863, 2012, 1812, 1842, 2030, 1848, 1851, 1932,
	1778, 1901, 357, 1839, 1779, 1762, 1817, 1766, 1830, 1767,
	1814, 259, 1810, 1973, 1904, 2010, 1883, 1925, 1935, 258,
	244, 1893, 1892, 1998, 1828, 1827, 1930, 1987, 2009, 1882,
	0, 0, 476, 0, 2019, 314, 1984, 0, 474, 423,
	339, 0, 0, 1878, 1993, 1899, 1962, 1861, 1934, 1794,
	1917, 2014, 1840, 1926, 2015, 0, 0, 0, 0, 0,
	0, 4340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1922, 2006, 1833, 0, 1873, 1931, 2035, 1765, 1918,
	0, 1770, 1781, 2029, 1999, 1824, 1825, 263, 0, 0,
	0, 0, 0, 0, 0, 1876, 1900, 1952, 1858, 0,
	467, 1937, 1947, 1965, 1850, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 1915, 0, 0,
	0, 1786, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 1793,
	1763, 1821, 1954, 1764, 1761, 340, 1782, 1967, 1997, 1859,
	301, 0, 2003, 1857, 1856, 1941, 1787, 1977, 2027, 1843,
	311, 1785, 195, 1780, 1788, 1841, 353, 1951, 1959, 0,
	198, 313, 1974, 1815, 1832, 245, 0, 392, 1927, 466,
	0, 278, 1908, 391, 315, 459, 1942, 2005, 465, 1844,
	441, 475, 480, 271, 1884, 234, 420, 261, 254, 1823,
	1964, 1769, 284, 375, 249, 306, 1862, 1933, 1816, 241,
	1945, 1916, 1979, 419, 456, 200, 334, 457, 479, 0,
	272, 411, 273, 440, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 386,
	390, 367, 221, 448, 335, 345, 238, 240, 239, 215,
	412, 455, 228, 243, 1975, 1958, 1981, 1809, 1789, 1800,
	4343, 4344, 4345, 293, 285, 1982, 1980, 1834, 361, 224,
	1897, 1890, 1877, 1955, 469, 2031, 257, 1960, 471, 0,
	406, 405, 1847, 292, 1961, 0, 0, 385, 0, 302,
	204, 1986, 484, 220, 309, 449, 0, 277, 352, 1929,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	1957, 382, 408, 454, 222, 426, 0, 0, 0, 398,
	0, 0, 2013, 322, 266, 270, 286, 297, 1928, 389,
	427, 472, 1919, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 445, 400, 280, 321,
	323, 431, 436, 432, 433, 430, 435, 434, 396, 397,
	307, 437, 208, 439, 464, 229, 407, 410, 483, 1953,
	216, 237, 428, 210, 2001, 1976, 1910, 1865, 1871, 1771,
	0, 209, 1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836,
	1808, 1923, 1807, 281, 1940, 462, 463, 246, 1783, 2021,
	211, 1784, 2020, 349, 356, 348, 2024, 2022, 458, 2002,
	1911, 1896, 1894, 1776, 2000, 1909, 1895, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1898, 425,
	320, 0, 206, 0, 424, 2011, 2037, 438, 226, 1802,
	1968, 453, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1944, 2034, 360, 393, 233, 468,
	421, 262, 1798, 0, 1801, 1796, 1799, 1797, 1902, 1903,
	2016, 2017, 2018, 1956, 1791, 0, 0, 1994, 1995, 0,
	1889, 2004, 1777, 0, 1972, 0, 0, 0, 0, 1936,
	2032, 1849, 242, 0, 1773, 1774, 1775, 0, 1879, 1880,
	0, 0, 1990, 1989, 1988, 1991, 0, 2025, 2023, 2026,
	1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921, 1966, 1939,
	1948, 1822, 1881, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 377, 248, 1907, 199, 212, 312, 2033, 384,
	276, 336, 413, 338, 298, 247, 481, 341, 383, 485,
	1969, 1914, 0, 1853, 1855, 1854, 1804, 1806, 1805, 1803,
	2036, 346, 1996, 1760, 1768, 1795, 1811, 1818, 1826, 1837,
	1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913,
	1943, 1946, 1963, 1971, 1978, 1983, 1985, 470, 252, 1887,
	1912, 1950, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 460, 461, 477, 478, 1860, 196, 0, 0, 202,
	0, 203, 205, 1845, 201, 1992, 2028, 1924, 1938, 1829,
	2008, 0, 1970, 447, 1863, 2012, 1812, 1842, 2030, 1848,
	1851, 1932, 1778, 1901, 357, 1839, 1779, 1762, 1817, 1766,
	1830, 1767, 1814, 259, 1810, 1973, 1904, 2010, 1883, 1925,
	1935, 258, 244, 1893, 1892, 1998, 1828, 1827, 1930, 1987,
	2009, 1882, 0, 0, 476, 0, 2019, 314, 1984, 0,
	474, 423, 339, 0, 0, 1878, 1993, 1899, 1962, 1861,
	1934, 1794, 1917, 2014, 1840, 1926, 2015, 0, 0, 0,
	0, 0, 0, 3149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1922, 2006, 1833, 0, 1873, 1931, 2035,
	1765, 1918, 0, 1770, 1781, 2029, 1999, 1824, 1825, 263,
	0, 0, 0, 0, 0, 0, 0, 1876, 1900, 1952,
	1858, 0, 467, 1937, 1947, 1965, 1850, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 1915,
	0, 0, 0, 1786, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 1793, 1763, 1821, 1954, 1764, 1761, 340, 1782, 1967,
	1997, 1859, 301, 0, 2003, 1857, 1856, 1941, 1787, 1977,
	2027, 1843, 311, 1785, 195, 1780, 1788, 1841, 353, 1951,
	1959, 0, 198, 313, 1974, 1815, 1832, 245, 0, 392,
	1927, 466, 0, 278, 1908, 391, 315, 459, 1942, 2005,
	465, 1844, 441, 475, 480, 271, 1884, 234, 420, 261,
	254, 1823, 1964, 1769, 284, 375, 249, 306, 1862, 1933,
	1816, 241, 1945, 1916, 1979, 419, 456, 200, 334, 457,
	479, 0, 272, 411, 273, 440, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 386, 390, 367, 221, 448, 335, 345, 238, 240,
	239, 215, 412, 455, 228, 243, 1975, 1958, 1981, 1809,
	1789, 1800, 1790, 1831, 2007, 293, 285, 1982, 1980, 1834,
	361, 224, 1897, 1890, 1877, 1955, 469, 2031, 257, 1960,
	471, 0, 406, 405, 1847, 292, 1961, 0, 0, 385,
	0, 302, 204, 1986, 484, 220, 309, 449, 0, 277,
	352, 1929, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1957, 382, 408, 454, 222, 426, 0, 0,
	0, 398, 0, 0, 2013, 322, 266, 270, 286, 297,
	1928, 389, 427, 472, 1919, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 445, 400,
	280, 321, 323, 431, 436, 432, 433, 430, 435, 434,
	396, 397, 307, 437, 208, 439, 464, 229, 407, 410,
	483, 1953, 216, 237, 428, 210, 2001, 1976, 1910, 1865,
	1871, 1771, 0, 209, 1866, 1867, 1868, 1869, 1870, 1949,
	1820, 1836, 1808, 1923, 1807, 281, 1940, 462, 463, 246,
	1783, 2021, 211, 1784, 2020, 349, 356, 348, 2024, 2022,
	458, 2002, 1911, 1896, 1894, 1776, 2000, 1909, 1895, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1898, 425, 320, 0, 206, 0, 424, 2011, 2037, 438,
	226, 1802, 1968, 453, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1944, 2034, 360, 393,
	233, 468, 421, 262, 1798, 0, 1801, 1796, 1799, 1797,
	1902, 1903, 2016, 2017, 2018, 1956, 1791, 0, 0, 1994,
	1995, 0, 1889, 2004, 1777, 0, 1972, 0, 0, 0,
	0, 1936, 2032, 1849, 242, 0, 1773, 1774, 1775, 0,
	1879, 1880, 0, 0, 1990, 1989, 1988, 1991, 0, 2025,
	2023, 2026, 1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921,
	1966, 1939, 1948, 1822, 1881, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 377, 248, 1907, 199, 212, 312,
	2033, 384, 276, 336, 413, 338, 298, 247, 481, 341,
	383, 485, 1969, 1914, 0, 1853, 1855, 1854, 1804, 1806,
	1805, 1803, 2036, 346, 1996, 1760, 1768, 1795, 1811, 1818,
	1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905,
	1906, 1913, 1943, 1946, 1963, 1971, 1978, 1983, 1985, 470,
	252, 1887, 1912, 1950, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 460, 461, 477, 478, 1860, 196, 0,
	0, 202, 0, 203, 205, 1845, 201, 1992, 2028, 1924,
	1938, 586, 447, 580, 591, 573, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 637, 0, 0, 0,
	0, 0, 259, 0, 0, 581, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 314, 0, 0, 474,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 634, 635, 0, 729, 0, 730, 732, 733, 734,
	735, 0, 0, 0, 731, 2307, 3365, 3366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 3360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 0,
	572, 571, 574, 0, 0, 0, 340, 0, 0, 0,
	579, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 583, 0,
	0, 198, 313, 587, 0, 0, 245, 0, 392, 2304,
	466, 0, 278, 0, 391, 315, 459, 0, 590, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	575, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 406, 405, 578, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 484, 220, 309, 449, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 640, 408, 454, 222, 426, 576, 577, 584,
	585, 588, 589, 592, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 2305,
	2306, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 3377, 1063, 0, 3367,
	3368, 3370, 3378, 3379, 3369, 3371, 3372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3373,
	3374, 3375, 3376, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 582, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 0, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 586, 447, 580, 591,
	573, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 565, 0, 0, 0, 0, 0, 259, 0, 0,
	581, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 0,
	0, 314, 0, 0, 474, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 571, 574, 0, 0,
	0, 340, 0, 0, 0, 579, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 583, 0, 0, 198, 313, 587, 0,
	0, 245, 0, 392, 0, 466, 0, 278, 0, 391,
	315, 459, 0, 590, 465, 0, 441, 475, 480, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	456, 200, 334, 457, 479, 575, 272, 411, 273, 440,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 386, 390, 367, 221, 448,
	335, 345, 238, 240, 239, 215, 412, 455, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	469, 0, 257, 0, 471, 0, 406, 405, 578, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 484, 220,
	309, 449, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 568, 408, 454,
	222, 426, 576, 577, 584, 585, 588, 589, 592, 322,
	266, 270, 286, 297, 0, 389, 427, 472, 0, 217,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 394,
	395, 429, 445, 400, 280, 321, 323, 431, 436, 432,
	433, 430, 435, 434, 396, 397, 307, 437, 208, 439,
	464, 229, 407, 410, 483, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 462, 463, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 438, 226, 0, 0, 453, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 468, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 481, 341, 383, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 582, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 460, 461, 477,
	478, 447, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 2456, 2460,
	0, 172, 476, 190, 0, 314, 0, 495, 474, 423,
	339, 498, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1160, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 2459,
	301, 191, 0, 0, 0, 2452, 0, 2453, 2455, 2454,
	311, 1162, 195, 0, 2450, 2458, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 1156, 392, 0, 466,
	494, 278, 0, 391, 315, 459, 0, 0, 465, 0,
	441, 475, 480, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 456, 200, 334, 457, 479, 166,
	272, 411, 273, 440, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 386,
	390, 367, 221, 448, 335, 345, 238, 240, 239, 215,
	412, 455, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 469, 0, 257, 0, 471, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 484, 220, 309, 449, 493, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 454, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 472, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 445, 400, 280, 321,
	323, 431, 436, 432, 433, 430, 435, 434, 396, 397,
	307, 437, 208, 439, 464, 229, 407, 410, 483, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 462, 463, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 438, 226, 0,
	0, 453, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 468,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 481, 341, 383, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 460, 461, 477, 478, 447, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 1478, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 476, 190, 0, 314,
	0, 495, 474, 423, 339, 498, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1480, 1479, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 496, 0,
	1474, 1475, 1473, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 1476,
	0, 0, 0, 0, 467, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 466, 494, 278, 0, 391, 315, 459,
	0, 0, 465, 0, 441, 475, 480, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 456, 200,
	334, 457, 479, 166, 272, 411, 273, 440, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 386, 390, 367, 221, 448, 335, 345,
	238, 240, 239, 215, 412, 455, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 469, 0,
	257, 0, 471, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 484, 220, 309, 449,
	493, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 454, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 472, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	445, 400, 280, 321, 323, 431, 436, 432, 433, 430,
	435, 434, 396, 397, 307, 437, 208, 439, 464, 229,
	407, 410, 483, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 462,
	463, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 438, 226, 0, 0, 453, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 468, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	481, 341, 383, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 460, 461, 477, 478, 447,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	476, 190, 0, 314, 0, 495, 474, 423, 339, 498,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 1162,
	195, 0, 1158, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 1156, 392, 0, 466, 494, 278,
	0, 391, 315, 459, 0, 0, 465, 0, 441, 475,
	480, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 456, 200, 334, 457, 479, 166, 272, 411,
	273, 440, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 386, 390, 367,
	221, 448, 335, 345, 238, 240, 239, 215, 412, 455,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 469, 0, 257, 0, 471, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	484, 220, 309, 449, 493, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 454, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 472,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 445, 400, 280, 321, 323, 431,
	436, 432, 433, 430, 435, 434, 396, 397, 307, 437,
	208, 439, 464, 229, 407, 410, 483, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 462, 463, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 438, 226, 0, 0, 453,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 468, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 481, 341, 383, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 460,
	461, 477, 478, 0, 196, 42, 447, 202, 0, 203,
	205, 0, 201, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 88,
	314, 0, 0, 474, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 96, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 0, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 166, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 484, 220, 309,
	449, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 454, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 678, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 109, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 671, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 476, 190, 0, 314, 0, 495, 474, 423, 339,
	498, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	3517, 195, 0, 0, 3516, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 494,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 166, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 484, 220, 309, 449, 493, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 454, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 476, 190, 0, 314, 0,
	495, 474, 423, 339, 498, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3484, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 1162, 195, 0, 0, 2458, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 466, 494, 278, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 166, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 484, 220, 309, 449, 493,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 454, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 314, 0, 0, 474, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 0, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 166, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 484,
	220, 309, 449, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	454, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3194, 678,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 671, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 314, 0, 495, 474,
	423, 339, 498, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2905, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 1162, 195, 0, 0, 2458, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 494, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	166, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 484, 220, 309, 449, 493, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 454, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 0,
	314, 0, 495, 474, 423, 339, 498, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1480, 1479, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 2262, 392, 0, 466, 494, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 166, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 484, 220, 309,
	449, 493, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 454, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 476, 190, 0, 314, 0, 0, 474, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 0,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 166, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 484, 220, 309, 449, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 454, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 678, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 671, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 476, 190, 0, 314, 0,
	495, 474, 423, 339, 498, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3475, 0,
	0, 0, 0, 0, 3477, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 466, 494, 278, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 166, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 484, 220, 309, 449, 493,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 454, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 314, 0, 495, 474, 423, 339, 498, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 2043, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 494, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 166, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 484,
	220, 309, 449, 493, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	454, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 314, 0, 495, 474,
	423, 339, 498, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 2043, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 494, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	166, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 484, 220, 309, 449, 493, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 454, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 0,
	314, 0, 495, 474, 423, 339, 498, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 1162, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 494, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 166, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 484, 220, 309,
	449, 493, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 454, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 476, 190, 0, 314, 0, 495, 474, 423, 339,
	498, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3338, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 494,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 166, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 484, 220, 309, 449, 493, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 454, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 476, 190, 0, 314, 0,
	495, 474, 423, 339, 498, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 466, 494, 278, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 166, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 484, 220, 309, 449, 493,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 454, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 314, 0, 495, 474, 423, 339, 498, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3477, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 494, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 166, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 484,
	220, 309, 449, 493, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	454, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 314, 0, 495, 474,
	423, 339, 498, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 494, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	166, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 484, 220, 309, 449, 493, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 454, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 0,
	314, 0, 495, 474, 423, 339, 498, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 494, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 166, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 484, 220, 309,
	449, 493, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 454, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 476, 190, 0, 314, 0, 495, 474, 423, 339,
	498, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 494,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 166, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 484, 220, 309, 449, 493, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 454, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 476, 190, 0, 314, 0,
	0, 474, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 466, 545, 542, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 166, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 484, 220, 309, 449, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 454, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 314, 0, 495, 474, 423, 339, 498, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 494, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 166, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 484,
	220, 309, 449, 493, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	454, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 314, 0, 0, 474,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 2530, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	166, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 484, 220, 309, 449, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 454, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 0,
	314, 0, 0, 474, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	2416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 0, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 166, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 484, 220, 309,
	449, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 454, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	0, 196, 0, 0, 202, 0, 203, 205, 447, 201,
	0, 0, 1608, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 314, 0, 0, 474, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 0, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 166, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 484,
	220, 309, 449, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	454, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 314, 0, 0, 474,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 155,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 0, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	166, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 484, 220, 309, 449, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 454, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 0,
	314, 0, 0, 474, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 0, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 166, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 484, 220, 309,
	449, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 454, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 314, 0, 0, 474, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 376, 283, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 0,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 0, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 484, 220, 309, 449, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 454, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 314, 0,
	0, 474, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 1160, 730, 732, 733, 734, 735,
	0, 0, 0, 731, 2307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 726, 0,
	392, 0, 466, 0, 278, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 0, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 484, 220, 309, 449, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 454, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 727, 728,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 314, 0, 0, 474, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 0, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 166, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 484,
	220, 309, 449, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	454, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 652, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 314, 0, 0, 474,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 0, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	166, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 484, 220, 309, 449, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 454, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	4438, 0, 0, 0, 0, 0, 259, 4436, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	314, 0, 0, 474, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 0, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 0, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 406, 405, 0, 292, 0,
	4437, 0, 385, 0, 302, 204, 0, 484, 220, 309,
	449, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 454, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 314, 0, 0, 474, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2977, 0, 467,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 0,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 2978, 2979, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 0, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 484, 220, 309, 449, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 454, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 1625, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 314, 0,
	0, 474, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1624, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 466, 0, 278, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 0, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 484, 220, 309, 449, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 454, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 2460, 0, 0, 476,
	0, 0, 314, 0, 0, 474, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 2459, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 0, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 0, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 484,
	220, 309, 449, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	454, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 314, 0, 0, 474,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 0, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	0, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 484, 220, 309, 449, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 454, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	314, 0, 0, 474, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 0, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 0, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 484, 220, 309,
	449, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 454, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 3531, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 314, 0, 0, 474, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 0,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 0, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 484, 220, 309, 449, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 454, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 3529, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 314, 0,
	0, 474, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 466, 0, 278, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 0, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 484, 220, 309, 449, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 454, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 3527, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 314, 0, 0, 474, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 0, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 0, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 484,
	220, 309, 449, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	454, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 3525, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 314, 0, 0, 474,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 0, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	0, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 484, 220, 309, 449, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 454, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	3520, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	314, 0, 0, 474, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 0, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 0, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 484, 220, 309,
	449, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 454, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 3507, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 314, 0, 0, 474, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 0,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 0, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 484, 220, 309, 449, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 454, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 3505, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 314, 0,
	0, 474, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 466, 0, 278, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 0, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 484, 220, 309, 449, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 454, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 314, 0, 0, 474, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	3444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 0, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 0, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 484,
	220, 309, 449, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	454, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 314, 0, 0, 474,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3435, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 0, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	0, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 484, 220, 309, 449, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 454, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	314, 0, 0, 474, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 0, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 0, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 484, 220, 309,
	449, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 454, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 314, 0, 0, 474, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 2581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 0,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 0, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 484, 220, 309, 449, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 454, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 2734, 2733, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 314, 0,
	0, 474, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 466, 0, 278, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 0, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 484, 220, 309, 449, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 454, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 314, 0, 0, 474, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 466, 0, 278, 0,
	391, 315, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 456, 200, 334, 457, 479, 0, 272, 411, 273,
	440, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 386, 390, 367, 221,
	448, 335, 345, 238, 240, 239, 215, 412, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 484,
	220, 309, 449, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	454, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 445, 400, 280, 321, 323, 431, 436,
	432, 433, 430, 435, 434, 396, 397, 307, 437, 208,
	439, 464, 229, 407, 410, 483, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 438, 226, 0, 0, 453, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 468, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 481, 341, 383, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 314, 0, 0, 474,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2914, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	466, 0, 278, 0, 391, 315, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 456, 200, 334, 457, 479,
	0, 272, 411, 273, 440, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	386, 390, 367, 221, 448, 335, 345, 238, 240, 239,
	215, 412, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 484, 220, 309, 449, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 454, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 445, 400, 280,
	321, 323, 431, 436, 432, 433, 430, 435, 434, 396,
	397, 307, 437, 208, 439, 464, 229, 407, 410, 483,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 438, 226,
	0, 0, 453, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	468, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 481, 341, 383,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	314, 0, 0, 474, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 466, 0, 278, 0, 391, 315,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 456,
	200, 334, 457, 479, 0, 272, 411, 273, 440, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 386, 390, 367, 221, 448, 335,
	345, 238, 240, 239, 215, 412, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 484, 220, 309,
	449, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 454, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 445, 400, 280, 321, 323, 431, 436, 432, 433,
	430, 435, 434, 396, 397, 307, 437, 208, 439, 464,
	229, 407, 410, 483, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 438, 226, 0, 0, 453, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 468, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 481, 341, 383, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 314, 0, 0, 474, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 466, 0,
	278, 0, 391, 315, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 456, 200, 334, 457, 479, 0, 272,
	411, 273, 440, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 386, 390,
	367, 221, 448, 335, 345, 238, 240, 239, 215, 412,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 484, 220, 309, 449, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 454, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 445, 400, 280, 321, 323,
	431, 436, 432, 433, 430, 435, 434, 396, 397, 307,
	437, 208, 439, 464, 229, 407, 410, 483, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 438, 226, 0, 0,
	453, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 468, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 481, 341, 383, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 314, 0,
	0, 474, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 466, 0, 278, 0, 391, 315, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 456, 200, 334,
	457, 479, 0, 272, 411, 273, 440, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 386, 390, 367, 221, 448, 335, 345, 238,
	240, 239, 215, 412, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 484, 220, 309, 449, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 454, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 445,
	400, 280, 321, 323, 431, 436, 432, 433, 430, 435,
	434, 396, 397, 307, 437, 208, 439, 464, 229, 407,
	410, 483, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	438, 226, 0, 0, 453, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 468, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 481,
	341, 383, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 460, 461, 477, 478, 42, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 71, 0, 0, 4251,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4244, 0, 0, 0, 0, 4642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4244, 0, 0, 0, 0, 4634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 71, 57, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 62, 92, 91, 89, 0, 0,
	0, 57, 0, 4251, 71, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 4244, 4247, 0, 0, 0, 4607,
	0, 0, 0, 0, 0, 4256, 4248, 4249, 4250, 4254,
	4255, 4252, 0, 4253, 0, 4257, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 89, 0, 0, 0, 0,
	0, 4251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 69, 70, 0, 4247,
	0, 0, 4244, 0, 60, 0, 0, 4589, 0, 4256,
	4248, 4249, 4250, 4254, 4255, 4252, 0, 4253, 0, 4257,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4245, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 42, 0, 60, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	71, 57, 0, 0, 0, 0, 93, 0, 0, 47,
	4258, 4246, 0, 66, 67, 73, 0, 74, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 62, 92, 91, 0, 0, 4251, 0, 57,
	0, 0, 0, 0, 4258, 4246, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 69, 70, 4244, 4247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4256,
	4248, 4249, 4250, 4254, 4255, 4252, 0, 4253, 0, 4257,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 69, 70, 0, 4247, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 4256, 4248, 4249,
	4250, 4254, 4255, 4252, 0, 4253, 0, 4257, 0, 0,
	0, 0, 78, 0, 79, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4245, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	59, 61, 0, 0, 4258, 4246, 87, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 4258, 4246, 0, 66, 67, 73, 0, 74,
	69, 70, 0, 4247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4256, 4248, 4249, 4250, 4254, 4255, 4252,
	4586, 4253, 0, 4257, 0, 0, 0, 0, 78, 0,
	79, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 71, 0, 0, 0, 0, 0,
	93, 0, 60, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 71, 0,
	0, 4251, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4244, 0, 59, 61, 0, 4585, 4258, 4246,
	87, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 4244, 0, 0, 0,
	0, 4584, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4245, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 71, 57,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 62, 92, 91, 89,
	4581, 0, 0, 57, 0, 4251, 71, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 4244, 4247, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 4256, 4248, 4249,
	4250, 4254, 4255, 4252, 0, 4253, 0, 4257, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 89, 0, 0,
	0, 0, 0, 4251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 84, 69, 70,
	0, 4247, 0, 0, 4244, 0, 60, 0, 0, 4573,
	0, 4256, 4248, 4249, 4250, 4254, 4255, 4252, 0, 4253,
	0, 4257, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4245, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 42, 0,
	60, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 71, 57, 0, 0, 0, 0, 93, 0,
	0, 47, 4258, 4246, 0, 66, 67, 73, 0, 74,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 62, 92, 91, 0, 0, 4251,
	0, 57, 0, 0, 0, 0, 4258, 4246, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 69, 70,
	4244, 4247, 0, 0, 0, 4570, 0, 0, 0, 0,
	0, 4256, 4248, 4249, 4250, 4254, 4255, 4252, 0, 4253,
	0, 4257, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 69, 70, 0, 4247,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 4256,
	4248, 4249, 4250, 4254, 4255, 4252, 0, 4253, 0, 4257,
	0, 0, 0, 0, 78, 0, 79, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4245, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 59, 61, 0, 0, 4258, 4246, 87, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 4258, 4246, 0, 66, 67, 73,
	0, 74, 69, 70, 0, 4247, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 4256, 4248, 4249, 4250, 4254,
	4255, 4252, 71, 4253, 0, 4257, 0, 0, 93, 0,
	78, 47, 79, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 42, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 4251,
	0, 0, 71, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	4244, 0, 0, 0, 0, 4487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 59, 61, 0, 4251,
	4258, 4246, 87, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 59, 61, 96, 0, 0, 0,
	87, 0, 4245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 69, 70, 0, 4247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4256, 4248, 4249, 4250, 4254,
	4255, 4252, 0, 4253, 0, 4257, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 89, 0, 0, 0, 87, 0, 4251, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 69, 70, 60, 4247, 0, 0, 0, 4244,
	0, 0, 0, 0, 4479, 4256, 4248, 4249, 4250, 4254,
	4255, 4252, 4484, 4253, 0, 4257, 0, 0, 85, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4258, 4246, 0, 66, 67, 73, 0, 74, 0, 42,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 71, 0, 96, 0, 0, 0, 93,
	0, 4245, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	4258, 4246, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	4251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4244, 0, 0, 0, 0, 4477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4256, 4248, 4249, 4250, 4254, 4255,
	4252, 0, 4253, 0, 4257, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 49, 90,
	56, 55, 58, 60, 42, 0, 0, 96, 0, 0,
	59, 61, 0, 4245, 0, 0, 87, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	59, 61, 0, 0, 0, 4251, 87, 0, 0, 4258,
	4246, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4244, 0, 0, 0,
	0, 4360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4247, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 4256, 4248, 4249, 4250,
	4254, 4255, 4252, 0, 4253, 0, 4257, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 42, 60, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 71, 0,
	0, 0, 96, 0, 93, 0, 0, 47, 4245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4251, 0, 0, 0, 0,
	0, 4258, 4246, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 4244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4256, 4248, 4249, 4250, 4254, 4255, 4252, 0, 4253,
	0, 4257, 0, 0, 0, 0, 78, 85, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 49, 90, 56, 55, 58, 0, 0,
	60, 0, 96, 0, 0, 0, 0, 0, 4245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4258, 4246, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4256, 4248, 4249, 4250, 4254, 4255, 4252, 0, 4253,
	0, 4257, 0, 0, 0, 0, 78, 0, 79, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4258, 4246, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	6607, -1000, -504, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2901, -1000, 2901, 301, -1000, 459, -1000, 1356, 835,
	-1000, -1000, -1000, -1000, -1000, 710, 311, 57730, 1114, 54786,
	78282, -300, 1798, 77548, 130, -1000, 130, 413, 54052, 823,
	1007, 76814, 2738, 2032, 132, 13, 9, 225, 38635, 37890,
	307, 161, 195, 184, 167, 1243, -1000, 60666, 881, -1000,
	212, -1000, -1000, -1000, -1000, -1000, 45978, 2964, 2967, 2964,
	-1000, 2884, 2899, -1000, -1000, 2884, 2170, 2170, -1000, 60666,
	13077, -1000, -1000, -1000, -1000, -1000, 30373, -1000, 1295, -1000,
	58464, 40837, 2901, -1000, 1099, 1086, -148, 1039, 1039, 879,
	1039, 1039, -469, 1112, -1000, 810, 1652, -1000, -1000, -1000,
	-1000, 1651, 58464, 65804, 1040, 75346, 1040, 1040, 1040, 1040,
	1040, 1040, 1040, 1040, 53318, 58464, -1000, 1219, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 58464, 2948, 2947, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2533,
	2530, 52584, 627, 2780, 1558, 334, 1558, -1000, -1000, 1633,
	-1000, 949, 943, 942, 927, 920, 926, 0, 1589, 1621,
	2881, -1000, 1980, 2884, 2884, 1589, -1000, 924, -1000, -1000,
	-1000, -1000, -1000, -1000, 1207, -1000, -1000, 1708, 1708, 544,
	1083, 329, 960, 309, 2839, 1650, 2778, 2777, 2065, 2776,
	878, 2775, 2522, -1000, 1217, -1000, -1000, 48, -1000, 2018,
	58464, -1000, -1000, 1949, 1947, 662, 2414, 1185, 2595, -1000,
	-1000, 658, 806, 2505, 784, 2505, 2505, 2505, 387, 2505,
	2505, 8, 2505, 2505, 2505, 325, 2505, 337, 2505, 2505,
	2505, 2505, 2505, -1000, 2165, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 693, 2412, 2315,
	2594, 176, -1000, -201, 180, 2823, 744, -1000, -1000, -1000,
	302, 1295, 61400, 2445, -1000, 1980, -1000, -1000, 2469, 1980,
	-1000, 2003, 1105, 1040, 650, -1000, 525, -1000, -1000, -1000,
	2816, 1980, 41574, -1000, -1000, 1235, -1000, 1980, 1980, 1295,
	2868, 1295, 1295, 2859, 2857, 1295, 2766, 27365, 17589, 2678,
	1733, -1000, -1000, -1000, -1000, 1295, 2946, -1000, 40103, 1204,
	-1000, 17589, 2423, 1980, 1980, -1000, 1161, 1268, -1000, 1138,
	1191, -1000, -1000, 18341, 18341, 18341, 18341, 18341, 18341, 18341,
	-1000, -1000, -1000, -1000, -1000, -1000, 2136, 2135, 2130, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1980,
	1203, 1200, -1000, 1980, 1980, 1980, 1980, 1980, -1000, 16085,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
	1980, 1980, 1980, 1980, 1980, 1980, 1980, 17589, 1980, 1980,
	1980, 1980, 1980, -1000, 1980, 1980, 1980, 1980, 1980, 1980,
	1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
	1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
	1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1980, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1980, 1980,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1980, 1047, 1047, 56996, 2468, -29, 29621,
	-1000, -1000, -1000, -1000, 28117, 63602, 1498, -1000, -1000, -1000,
	-1000, 2774, -1000, -1000, 1192, 1191, 1161, 1160, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2901, 309, -1000, 2374,
	-1000, -1000, 10042, 10042, 10042, 10042, 10042, 10042, 48914, -1000,
	-1000, -1000, 2521, 2884, -1000, 75346, 58464, 891, 2012, 1699,
	2011, 76814, 76814, 1039, -1000, 763, 65804, 65804, -372, 1039,
	800, 65804, 657, 2467, 1081, 2466, 1080, 2151, 58464, 2822,
	2593, 58464, 2010, 2009, 76814, 76814, 65804, 65804, 76814, -1000,
	-1000, -1000, 26613, -1000, 1310, 2452, 48180, 47446, 51850, 51850,
	-1000, -1000, -1000, 909, -1000, 1558, -1000, 5738, 17589, 1039,
	1039, 58464, 58464, 58464, 58464, 58464, -1000, 58464, -1000, -1000,
	1558, -1000, -1000, 1558, 1558, 1558, 1589, 2945, 1589, -1000,
	-1000, -1000, 1558, 77548, 77548, 17589, -1000, 18341, 65070, 1358,
	-1000, -1000, 1558, -1000, 77548, 996, 996, 996, -1000, 2007,
	501, -1000, -1000, -1000, -1000, -1000, 329, -1000, -1000, -1000,
	2748, 2854, 2853, 2005, 878, 878, -1000, 2146, 878, 2440,
	-1000, 1641, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 878, 2839, 16837, 75346, -484, -1000,
	-1000, 2450, -1000, 471, -1000, -1000, 948, 2592, 948, 8547,
	65804, 65804, 65804, -1000, 2505, 75346, -1000, 2505, 2505, 2505,
	7, 2505, 2505, -1000, -1000, 2505, -1000, -1000, -1000, 2505,
	-1000, -1000, 2505, -1000, -1000, -1000, 2505, 2505, -1000, 2505,
	2505, -1000, -1000, -1000, -1000, -1000, 65804, 948, 441, 2447,
	948, 65804, 65804, 1076, 196, -82, 125, -1000, -1000, -1000,
	-1000, -1000, -1000, 300, 297, 296, 294, -1000, -1000, -1000,
	-1000, 285, 283, -1000, -1000, 58464, 58464, 904, -1000, 2445,
	61400, 2847, 22101, 881, -1000, 17589, 2801, -1000, 2801, -1000,
	-1000, -1000, 370, -1000, 58464, 65804, 76814, 45978, 45978, 45978,
	45978, -1000, 2642, 2639, -1000, 2627, 2626, 2624, 487, 61400,
	-1000, 2816, 301, 2372, 2170, 2170, 525, 41574, -1000, 1980,
	-1000, 61400, 1250, 1095, 1094, 1092, 2748, -1000, -1000, -1000,
	-1000, -1000, 1941, 1860, 1827, 12325, 18341, -1000, -1000, -1000,
	-1000, -1000, 2964, 2964, -1000, -1000, -1000, -1000, -1000, -1000,
	1754, 2959, 1485, 2435, -1000, -1000, -1000, 2443, -1000, 1616,
	1183, 1831, 1795, -1000, -1000, -1000, -1000, -1000, -1000, 13077,
	-1000, 58464, -1000, 17589, 17589, 17589, 1752, -1000, 45244, -1000,
	-1000, -1000, 22853, 1496, 18341, 1818, 1533, 18341, 18341, 18341,
	18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341,
	18341, 18341, 1379, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2004, -1000, 309, 35637, 12325, 35637, 547, 547, 75346,
	1339, 1339, 1339, 1339, 1339, 1339, 59198, -1000, -1000, -1000,
	2852, 34133, 35637, 2852, 2852, 2852, 2852, 2852, 2369, 1658,
	60666, 16085, 45978, 12325, 12325, 12325, 2170, 17589, 17589, 12325,
	18341, 12325, 15333, 14581, 19845, 12325, 12325, 2852, 1664, 1658,
	25861, 12325, -1000, 2170, -1000, -1000, -1000, -1000, 1820, -1000,
	-1000, -227, -227, -227, 388, 12325, 12325, 12325, 12325, 2170,
	2170, 12325, 12325, 12325, 12325, 12325, 2170, 2170, 2170, 2170,
	12325, 12325, 12325, 12325, 12325, 12325, 12325, 12325, 12325, 12325,
	12325, 12325, -1000, -1000, -1000, 1817, 56254, 45978, 58464, 2408,
	2354, -1000, -1000, 1172, 28869, 2433, -1000, -83, -115, -29,
	-1000, -1000, 1294, -1000, -1000, -1000, -1000, 13829, -1000, -1000,
	-1000, 23605, 2884, -1000, 39369, -1000, 30, -1000, -1000, -1000,
	2495, -1000, 2497, 85, 511, 2497, 74, 71, 2497, 2497,
	2497, -1000, -1000, -1000, -1000, 89, -1000, -1000, -1000, -1000,
	-1000, 2520, 2519, -1000, 2495, 2495, 2495, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2502, 539, 2496, 2496, 2496, 2496, 2496, -1000, -1000,
	-1000, -1000, -1000, 1011, -1000, -1000, -1000, 17589, 2766, 2658,
	2524, 1980, 1085, -470, 800, 2801, 2821, 2801, 906, -1000,
	1171, 2513, 76814, 857, 2451, -1000, 533, 2224, 1149, 55520,
	-1000, -1000, -1000, -1000, -1000, 58464, 58464, 65804, 65804, 65804,
	1121, -1000, 58464, 2442, -1000, -1000, -1000, -1000, -1000, 2338,
	-1000, 2224, -1000, -1000, 1166, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -443, -444,
	58464, -1000, -1000, -1000, -1000, -1000, -1000, 2441, -1000, 2441,
	-1000, -1000, -1000, 2143, 1658, 1997, 1996, 2839, -1000, -1000,
	-1000, -1000, 1590, -1000, -1000, -1000, -1000, 1558, 58464, 2839,
	-1000, -1000, -1000, 1658, 1556, 2527, 1980, 2170, -1000, -1000,
	-1000, 126, -1000, 127, -1000, -1000, -1000, 1992, -1000, 18341,
	2744, 2742, -1000, 2440, 2440, -1000, 2440, 878, 59932, 2440,
	-1000, -1000, 2342, -1000, 206, 2140, 58464, -1000, 61400, 44,
	-1000, -127, 73878, -1000, -1000, -1000, 948, 73878, -1000, 325,
	247, -1000, 1074, -1000, 2340, -1000, -1000, -1000, -1000, 2505,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	73878, 379, 438, 73878, 2338, 2944, 229, 2439, -1000, 1634,
	1620, -1000, -1000, 122, -1000, -1000, -1000, -1000, 2876, -1000,
	242, 242, 2137, 18341, -1000, 1980, 2276, -1000, 1165, -1000,
	-1000, -1000, -1000, -1000, -1000, 1980, -1000, -1000, -1000, -1000,
	2773, 1498, 1498, 1498, 6723, 533, 2591, 2518, 2588, 579,
	-1000, -1000, -1000, -1000, 2633, -1000, 2628, 2625, -1000, -1000,
	-1000, 2472, 61400, 45978, -1000, -1000, -1000, 2170, 75346, 1177,
	-1000, 61400, 1980, 1980, 1980, 18341, 18341, 1464, -1000, 18341,
	18341, 1435, -1000, 18341, 18341, 1399, -1000, 2170, 2438, -1000,
	-1000, 1658, 1164, 5149, -1000, 74612, 33, 2534, 27365, 27365,
	17589, -1000, -1000, -1000, 23605, 2873, -1000, 2664, 2663, 2943,
	-1000, -1000, -1000, 1496, 1618, 1557, -1000, -1000, 1755, -1000,
	-1000, -1000, -1000, -1000, 1162, 1980, -1000, -1000, -1000, -1000,
	-1000, 5167, -1000, -1000, -1000, -1000, 1818, 18341, 18341, 18341,
	1556, 5167, 5102, 1432, 2337, 1339, 1452, 1452, 1361, 1361,
	1361, 1361, 1361, 1494, 1494, -1000, -1000, -1000, -1000, 2170,
	-1000, 2334, -1000, -1000, 2136, 2135, 2130, -1000, -1000, -1000,
	-1000, 12325, -1000, -1000, -1000, -1000, -1000, 12325, 12325, 12325,
	12325, 12325, 17589, -1000, 2334, 2334, 2334, -1000, 1546, 1784,
	2180, 5130, 2334, 1323, 2942, 2334, 1320, 2940, 2334, 2103,
	18341, 18341, 18341, 2334, 2334, 12325, 1680, -1000, 17589, 2170,
	1272, 2170, 1161, 1160, 2334, -1000, 2170, 2437, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2436,
	2939, 2434, -1000, -1000, -1000, -1000, 2334, 2170, 2334, 2334,
	-168, -168, 2170, 2334, 2170, 2334, 2334, -168, -168, -168,
	-168, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334,
	2334, 2334, 2334, -1000, 2170, 1423, 58464, -1000, 2355, 1423,
	2307, 45978, -1000, -1000, 45978, 77548, 25109, -1000, 28117, -29,
	-85, -1000, -1000, 2433, -1000, -1000, 1559, -1000, -1000, 2129,
	1658, -1000, 1156, 2766, 7855, -1000, -1000, -1000, -1000, 2504,
	44510, -1000, 2704, 1240, 1240, 1240, 64336, 76080, 2703, -1000,
	-1000, 202, 23, -1000, -1000, -1000, 1946, -1000, 316, 518,
	2497, -1000, -1000, -1000, 2497, 2497, -1000, 2497, 2497, -1000,
	-1000, -1000, -1000, 2128, 2128, -1000, -1000, -1000, -1000, 1944,
	-1000, 2502, -1000, 1943, -1000, -1000, -1000, -1000, 202, 202,
	202, 202, 202, -1000, 1673, -1000, 2587, 75346, 2845, 58464,
	-374, -1000, -1000, -1000, 2925, -1000, -1000, 75346, 62868, 2586,
	-1000, -1000, 341, 65804, 483, 691, 330, -1000, 1676, -1000,
	-1000, 1073, -1000, 1072, -1000, -1000, -1000, -1000, -1000, -1000,
	58464, 65804, 75346, 2585, 2584, -1000, 51850, -1000, -1000, -1000,
	-1000, 2907, 1991, 1990, -1000, 1589, 1558, -1000, 18341, 65804,
	-1000, 916, -1000, -1000, -1000, 5167, 18341, 18341, -1000, -1000,
	-1000, -1000, 1730, -1000, -1000, -1000, -1000, -21, -1000, -1000,
	1070, 1154, 1151, 73878, 1069, -1000, 340, 65804, -1000, 75346,
	-1000, 2920, 2919, 368, 2916, 65804, 2430, -1000, 1615, 1611,
	1601, 1588, 1587, 1570, 1563, 196, 2501, 2499, -1000, -1000,
	257, -1000, -90, -1000, -1000, 5167, -1000, -1000, 22101, 35637,
	-1000, 1498, 1499, -1000, 1453, 2125, 1027, 911, -1000, -1000,
	1241, 1210, 1003, 1498, 1024, 420, 1068, 2757, 2756, 572,
	571, -1000, 1498, 1024, 1284, 611, -1000, 1473, 1456, 1451,
	1436, 1434, 1431, 1427, 1426, 602, -376, -1000, 1498, 1498,
	1498, 1498, 1498, 1498, 1498, 1498, -218, -220, 1498, 1498,
	1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498,
	1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498,
	1498, 31125, 1498, 1498, -1000, 1126, 643, -1000, -1000, 17589,
	2498, -1000, 17589, -1000, -1000, -1000, -1000, -1000, 75346, 2472,
	525, -1000, 2272, -1000, -1000, 1177, 75346, 75346, 75346, 5002,
	1974, 1980, 4961, 1887, 1980, 4906, 1872, 1980, 2816, 12325,
	21349, 2124, 2417, 2122, 2121, -1000, 36, 2651, -1000, -1000,
	-1000, 58464, -1000, -1000, -1000, -1000, 2907, 43776, 13077, -1000,
	-1000, -1000, -1000, 33381, 12325, -1000, 1556, 5167, 3934, -1000,
	18341, -1000, -1000, 2170, 2334, 2334, 2334, 2334, 2334, 1658,
	-1000, -1000, -1000, 243, 1379, 243, -1000, 1379, 18341, -1000,
	18341, 18341, -1000, 18341, 18341, -1000, -1000, 18341, 4861, 3382,
	2230, -308, -1000, 2410, 1603, -1000, 17589, 1726, -1000, -1000,
	-1000, -1000, -1000, 18341, 18341, 18341, 18341, -1000, -1000, -1000,
	-1000, -1000, 73144, -1000, -168, -168, -168, -168, -168, -1000,
	-1000, -1000, -1000, -168, -168, -168, -168, -168, -168, -168,
	-168, -168, -168, -168, -168, -1000, 335, 1980, -1000, 24357,
	2907, 45978, 2270, 2270, -1000, 1142, -1000, -1000, -1000, -112,
	-121, -1000, -1000, -1000, -1000, -1000, 35637, -1000, -1000, -1000,
	7442, 2898, 1498, 1498, 1498, 376, 1498, 1498, 1498, 1498,
	1498, -222, -244, 1498, 1498, 1498, 1498, 1498, 1498, 1498,
	1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498,
	156, 1498, 1498, 1498, 1498, 1498, 1498, 31125, 1498, 1498,
	-378, 49648, 1176, 1000, -1000, -1000, -1000, 76080, 76080, 76080,
	-1000, 76080, 76080, -1000, -1000, -1000, -1000, 50382, -1000, -1000,
	1783, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1980,
	-496, 1929, 58464, -1000, 2772, 1407, 37893, 2955, -1000, 2701,
	-1000, 2697, 2694, 2120, -1000, -1000, 2218, 2216, 2214, -1000,
	2497, -1000, -1000, -1000, -1000, -1000, 2332, -1000, 2330, 2413,
	-1000, 2325, -433, 58464, -1000, -1000, 1980, 1928, 2582, -1000,
	-1000, -1000, -1000, 2192, 2400, -1000, 10042, 75346, 75346, 75346,
	644, -314, 436, -1000, 65804, 385, 533, 772, 1966, -406,
	2814, 58464, 65804, -1000, -1000, -1000, 72410, 72410, -1000, -1000,
	17589, -1000, -1000, 2839, -1000, 5167, 2224, -1000, -1000, 5167,
	5167, 1423, 1104, -1000, 65804, 1349, 71676, 1067, 65804, 367,
	240, -1000, 65804, 65804, 2915, 65804, 2338, 229, 2119, 2118,
	2116, 1908, 1903, 1900, 1899, -1000, 58464, 58464, 2115, 2760,
	-1000, -1000, 1396, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 6951, 911, 1419, 1418, 1416, 1403, -1000, 46712, 76080,
	1199, 1026, -1000, -1000, 1980, -1000, 43042, 50382, 50382, 50382,
	75346, 2692, 2683, 75346, 50382, 50382, 75346, 50382, 874, 1986,
	2771, 1498, 84, -1000, -1000, -1000, 70942, -1000, 70208, 775,
	51116, 50382, 75346, 58464, 42308, -1000, -1000, -1000, -1000, 69474,
	1886, 75346, 75346, 68740, 68006, 67272, 66538, -1000, -293, 966,
	17589, 966, 1960, 1960, 2114, 2113, 2112, 1498, 1498, 124,
	1960, 2111, 124, 1960, 37141, 2110, 975, 966, 966, 966,
	1960, 1960, 1960, 1960, 2109, 380, 1811, 2107, 1960, 1910,
	1905, 966, -1000, -282, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1960, 1980, 895, 1066, 958,
	-13, 1658, 75346, 1658, 2320, -1000, -1000, 1479, 75346, -1000,
	2198, 2198, 2198, 18341, 18341, 18341, 18341, 18341, 18341, 18341,
	18341, 18341, 61400, -1000, -1000, 1141, -20, 75346, -1000, -14,
	-1000, -1000, -1000, 2905, -1000, 2378, -1000, -1000, -1000, 2170,
	-1000, 18341, 5167, -1000, -168, -168, -168, -168, -168, 2170,
	2495, 2495, 2495, -1000, 2495, 2496, 95, -1000, -1000, -1000,
	2495, 115, 2495, 114, -1000, 2170, 2170, 2170, 2006, 3000,
	2983, 2367, 2204, 2006, 18341, 18341, 18341, 1980, -162, -1000,
	1658, 17589, 2815, 2727, 2006, 2006, -1000, -1000, 1985, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2580, 2580, 24357,
	2816, -1000, 20597, -1000, 881, -1000, -1000, 75346, 2387, -1000,
	1498, 1236, 1498, 1498, 2901, 2270, -1000, -1000, 1331, -1000,
	-1000, -1000, -1000, 164, 966, 966, 966, 1498, 2765, 1498,
	1960, 1960, 2106, 2102, 2101, 1498, 1498, 124, 1960, 2099,
	124, 1960, 37141, 2098, 975, 966, 966, 966, 1960, 1960,
	1960, 1960, 2097, 380, -1000, 1792, 2094, 1960, 1869, 1866,
	966, -1000, -284, 1960, 1980, -294, 2318, -1000, 2495, 2495,
	2682, 1240, -1000, -1000, -1000, -1000, -1000, -1000, 2494, -1000,
	-1000, 18341, 2844, -1000, 2491, 1387, -1000, -1000, -1000, -1000,
	547, 2093, -1000, -1000, 18341, -1000, -1000, 1980, 1980, 1980,
	1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
	-47, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2092, -1000, 1884, -1000, 1877, -1000, -1000, -1000, 2490, -1000,
	2842, -1000, 58464, 232, 62868, -1000, 10042, 10042, 10042, -13,
	396, 407, -1000, 1703, -1000, -1000, -1000, 2091, 2089, 2088,
	2224, 537, 1702, 414, -1000, 2820, 2819, 2087, 2086, 2084,
	2082, 1863, -1000, -1000, 2526, 75346, 2377, -1000, 1658, 1558,
	-14, 58464, 240, -1000, -1000, -1000, 65804, 240, -1000, -1000,
	435, 2338, 2338, 65804, 2338, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2302, 2300, -1000, -1000, -1000, -1000, -1000,
	-1000, 1251, 1231, 342, 339, 51116, 988, 10042, 10042, 2524,
	1240, -1000, 2680, 1368, -1000, -1000, -1000, -1000, -1000, -1000,
	50382, 2349, -435, -437, 1303, -454, -1000, -1000, -1000, -1000,
	51116, 1498, 1379, 2763, 656, 336, 654, 333, -1000, -1000,
	-1000, -1000, 988, 1246, 1065, -1000, 2677, 50382, 1061, 633,
	323, -1000, 1743, -316, 2349, -1000, 2349, -1000, 2349, -1000,
	2349, -1000, -1000, -1000, 1658, -1000, -1000, -1000, -1000, -1000,
	-1000, 2081, 2080, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -226, -1000, 37141, 1787, -1000, 2579, 76814, -1000, 622,
	2576, 526, 547, 2297, -1000, 75346, -1000, -1000, -1000, -1000,
	-1000, 5167, 5167, 2689, 5167, 5167, 2544, 5167, 5167, 2306,
	-1000, 32629, 1980, -1000, -5, -1000, 2903, 2896, -1000, -1000,
	5167, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 504, 408,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18341, 18341, 18341, 18341, -1000, 2006, 2006, 2006, 18341,
	2170, 2079, 1658, 18341, 18341, -1000, -1000, 1391, -1000, -1000,
	2807, -1000, 2205, 61400, 2170, 2402, 2276, 2170, 328, -1000,
	-1000, -1000, 60666, 45978, 2344, -1000, 1980, 2272, 2901, 24357,
	17589, 17589, 17589, 17589, 2884, -1000, -273, -1000, 389, 338,
	-1000, -1000, -1000, -1000, -1000, -1000, 1379, 1498, 31877, -1000,
	-1000, -1000, -1000, -1000, 2078, 2077, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -232, -1000, 37141, -1000, 236, 49648, 2805,
	2805, 76080, 76080, 75346, 2006, 1980, 75346, -1000, -1000, -1000,
	-1000, -1000, 2006, -1000, -1000, 2189, 2175, 49648, 309, -1000,
	-406, 2875, -1000, 232, -1000, 2075, 799, 807, -1000, 798,
	790, 779, 767, 677, -1000, -1000, -1000, -1000, 2576, 701,
	396, -1000, -65, 1861, 1439, 2753, 407, -1000, 1844, 1843,
	1839, 1838, 443, -1000, -1000, -1000, -1000, 308, 533, -1000,
	711, 2074, 702, 2073, -1000, -1000, 439, -1000, -1000, 2737,
	2245, -1000, -5, -1000, 2840, 240, 2840, 366, 2338, -1000,
	-1000, 2173, -1000, -1000, 1984, -1000, -1000, 2488, 76080, 76080,
	2200, -1000, 75346, -1000, -1000, -1000, -1000, -1000, 2800, 2782,
	-1000, -1000, 988, 1379, -1000, 1379, -1000, -1000, -1000, -1000,
	-1000, 50382, 75346, 50382, 1056, 50382, -1000, -1000, 1980, 1101,
	-1000, -1000, -1000, -1000, 2238, -1000, 543, 2072, 319, -1000,
	-1000, 1126, 625, -1000, -1000, -1000, -295, -1000, -1000, 18341,
	18341, 18341, -1000, 34885, 2731, 2724, -170, 17589, 17589, -1000,
	-1000, -1000, -1000, 2006, 2006, 2006, 2006, -1000, -1000, -1000,
	347, -1000, -1000, 2006, 2006, 2901, 2895, 2674, -1000, 2472,
	-1000, -1000, 2402, 328, -1000, 881, -1000, 11573, -1000, 2884,
	-1000, 1658, 1658, 1658, 1658, -1000, -287, 1836, 18341, 1980,
	1980, 661, -1000, 1379, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2238, 236, -1000, 37141, 1498, 2071, 1498, 1498, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2234, -499, 18341, 2231,
	-1000, -1000, -1000, 2227, -1000, -1000, 884, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2736, 2735, 812, 895, -1000, 2069,
	2066, -1000, 742, 1880, 1256, -174, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 673, 1982, -1000,
	410, -1000, -1000, 399, -1000, -1000, 2894, -406, 18341, -1000,
	2731, -1000, 65804, 2840, -1000, -1000, -1000, -1000, 202, 202,
	49648, 2524, 2474, -1000, 1368, 2662, 18341, -1000, -1000, 1337,
	1302, -1000, -1000, 1051, 50382, -1000, 1368, 58464, 37141, -1000,
	-1000, -1000, -1000, 895, 1364, 634, 2006, 2006, 2006, 2182,
	-1000, 9760, 314, -1000, 2665, 2712, 2892, -1000, 75346, -1000,
	1658, 2336, -1000, 1658, -1000, -1000, -1000, -1000, 2170, 266,
	-334, -1000, -1000, 1413, 17589, 2952, -1000, -1000, -1000, 328,
	-1000, -1000, -1000, 1980, 2891, -1000, 2006, 75346, 18341, 1980,
	1545, -1000, -1000, -1000, -1000, 1835, -1000, 2052, 2050, 978,
	-1000, -1000, -1000, 2006, -1000, 236, -321, 309, 880, 81263,
	-1000, -1000, -1000, -1000, 1787, -1000, -1000, -1000, -1000, 1832,
	-1000, -1000, 1876, 674, 391, -1000, 2826, -1000, -1000, 1830,
	5167, 1042, -319, -1000, 2222, 2473, 49648, -1000, 917, 5167,
	1498, 1379, 50382, -1000, 2200, 32, -1000, 81263, 1787, 1225,
	635, 526, -1000, -1000, -1000, 2170, 34885, 378, -461, -27,
	2048, 2724, 2890, 2717, 2715, -1000, 2046, 2322, -1000, 2825,
	17589, -1000, 2650, -312, -338, 2170, 417, 417, 2274, 24357,
	2170, -1000, 1368, -409, -1000, 2198, 2006, 75346, 1823, -1000,
	-1000, -1000, 58464, -499, -1000, 236, -1000, 351, -1000, 875,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10821, 17589, 154, 36389, 1981, 1979,
	81263, 2008, 81263, 17589, 1978, 1977, 2698, 18341, 81093, 542,
	-352, -1000, -353, -1000, -1000, -1000, 2045, -1000, 2472, 1821,
	445, 236, 49648, 2208, 900, 1379, -1000, -1000, -1000, 608,
	-1000, -1000, 528, 547, -1000, 526, -1000, 2816, -1000, -1000,
	2044, -207, -1000, 1980, -55, -1000, 2042, -1000, 2889, 2886,
	-1000, 75346, 1980, -1000, -1000, 2649, -1000, -1000, -1000, 331,
	-1000, 1405, 858, 1389, -1000, 547, -1000, 2243, -1000, 2200,
	322, -1000, -1000, 2198, -1000, 2471, -1000, 349, 1008, 1002,
	-321, -1000, 1976, 1975, -1000, 1566, 1732, -1000, 17589, 1695,
	583, 574, 4714, -1000, -1000, -1000, -1000, -1000, -1000, -505,
	-1000, 299, -506, 938, -1000, -1000, 1972, -1000, 2910, 5167,
	-1000, -507, -1000, -1000, -1000, -1000, 2762, 1461, 62134, -1000,
	2187, 236, 1980, -1000, -1000, -1000, -1000, -295, -1000, 1364,
	61400, 636, 2040, 34885, 1980, -1000, 2039, 2034, -1000, -1000,
	-324, 1696, -1000, -1000, -1000, -1000, -1000, -227, -1000, 1980,
	661, -1000, 75346, -1000, 348, 345, -1000, -1000, -1000, -1000,
	1669, 1688, 81263, -1000, 1642, 81263, 2874, 2872, 2856, -14,
	35637, 80908, 80736, 81263, 81263, 17589, 80527, 81263, 1725, -1000,
	80467, 81263, -1000, 24357, -1000, -1000, -1000, -1000, 2969, 2224,
	236, -1000, 19093, 81263, -1000, 1364, -1000, 1856, 1854, 2575,
	2574, 547, -1000, 2182, 34885, -1000, -1000, -336, 331, -1000,
	18341, 1980, 2185, -1000, -1000, 281, 1687, 81263, -1000, -511,
	81263, -512, 801, 309, 1014, 1294, -1000, 560, -1000, 1971,
	-514, -515, -517, 824, 17589, -518, 1970, -1000, -1000, 2243,
	65804, -1000, 2006, 2170, -1000, -1000, 2573, 547, -1000, 2569,
	547, -91, -95, 2562, -1000, 2182, -344, -1000, 2006, 18341,
	2557, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 80167, 60666,
	-1000, -520, 80021, -521, 9467, -1000, -1000, -1000, 79963, -1000,
	-1000, -1000, -1000, 568, -1000, -1000, 2767, -1000, -1000, 79813,
	79759, 79425, 81263, 1638, 79279, 2229, -1000, -1000, 2224, -1000,
	-1000, -1000, 282, 2552, -389, 2550, 279, 275, -1000, -1000,
	-97, -1000, -1000, -289, 2006, 2549, 2548, 2914, -1000, -522,
	-1000, -1000, 79221, 1682, 81263, 1038, 81263, 1597, -1000, 17589,
	-1000, 1014, -1000, 18341, 1967, 557, 17589, -523, 553, 546,
	1952, 251, -391, 2543, 2541, -1000, -1000, -1000, 1813, -289,
	-1000, 2951, -1000, 2926, 1155, 1155, 79071, 1666, -1000, -1000,
	-527, 1035, 81263, -1000, 1602, -1000, 5167, -1000, 1862, 1561,
	79017, -1000, -1000, -1000, 248, -393, -1000, -1000, -1000, -1000,
	-1000, 992, 1847, -1000, -1000, -1000, 9971, -1000, -529, 81263,
	-1000, 550, 545, -1000, -1000, -1000, -1000, -1000, 1033, 9736,
	-533, 1849, 1829, -1000, 1029, 81263, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3450, 3449, 3448, 15, 3447, 277, 289, 282, 56,
	2787, 3445, 284, 3444, 280, 3443, 26, 18, 13, 30,
	3442, 3070, 3066, 3063, 3061, 28, 3440, 59, 3438, 3436,
	3054, 3435, 3432, 3052, 3431, 3430, 3429, 3428, 3427, 3426,
	3419, 3418, 3404, 3050, 3046, 3044, 3042, 3403, 3401, 3400,
	3039, 3025, 3022, 3399, 3396, 92, 43, 39, 3395, 5,
	3394, 190, 222, 3390, 4, 3389, 3388, 20, 193, 3387,
	3386, 69, 3020, 3385, 3382, 3367, 3366, 3365, 3364, 138,
	3363, 3361, 3018, 3360, 3015, 3359, 3012, 3010, 3005, 3003,
	3001, 215, 3358, 2998, 2988, 2983, 3357, 2671, 223, 487,
	218, 3356, 124, 126, 1609, 3355, 229, 3353, 205, 3351,
	3350, 3349, 446, 3347, 152, 3345, 380, 153, 155, 160,
	911, 3340, 66, 154, 323, 3338, 6, 3337, 110, 3334,
	221, 3332, 211, 2784, 189, 327, 183, 3328, 3327, 144,
	3326, 3325, 3321, 206, 3318, 3316, 226, 4786, 3315, 3311,
	181, 3310, 133, 3308, 173, 3307, 3305, 3304, 3297, 219,
	109, 82, 161, 127, 3296, 147, 3291, 3289, 3287, 3286,
	3285, 3284, 81, 162, 366, 3283, 149, 188, 3282, 49,
	37, 48, 3281, 3280, 50, 3279, 3277, 128, 3276, 3275,
	118, 3274, 185, 65, 3272, 3271, 3266, 3264, 117, 78,
	3262, 63, 3261, 174, 3259, 3258, 3257, 3256, 3255, 77,
	3253, 84, 3251, 182, 241, 202, 3248, 3247, 42, 47,
	3245, 58, 21, 357, 105, 22, 102, 73, 176, 164,
	129, 157, 46, 145, 61, 143, 163, 3244, 225, 169,
	204, 115, 33, 3243, 3242, 197, 3241, 107, 203, 177,
	184, 201, 3240, 3239, 3236, 232, 3235, 175, 537, 3233,
	130, 310, 250, 3232, 228, 136, 3231, 3230, 3229, 3228,
	111, 52, 125, 3227, 35, 217, 224, 234, 38, 99,
	3226, 873, 4866, 6233, 6626, 36, 187, 244, 4930, 44,
	195, 3225, 75, 3222, 3221, 3220, 4249, 156, 40, 113,
	150, 3219, 151, 72, 79, 3218, 3217, 3216, 3215, 3212,
	3211, 159, 131, 3210, 3208, 70, 3207, 3206, 32, 23,
	12, 11, 3203, 139, 213, 212, 210, 3202, 192, 51,
	3200, 3199, 178, 132, 3198, 3196, 3194, 3193, 172, 123,
	199, 3192, 198, 114, 171, 3189, 112, 3188, 3187, 194,
	6745, 140, 3186, 3185, 507, 122, 3184, 3183, 3180, 3179,
	57, 3178, 3177, 3, 3176, 106, 53, 54, 103, 25,
	148, 3175, 3168, 186, 3166, 3163, 146, 167, 3161, 134,
	137, 55, 3159, 74, 142, 3158, 165, 2, 7, 10,
	3149, 3146, 3144, 3141, 3140, 3126, 3123, 3108, 120, 3105,
	3101, 98, 95, 71, 3100, 62, 3098, 3097, 3096, 191,
	168, 76, 216, 141, 9, 3095, 3094, 8, 3093, 170,
	3092, 104, 3090, 116, 3088, 3086, 68, 100, 41, 83,
	3083, 3081, 93, 3080, 3079, 96, 3078, 3074, 214, 2247,
	3073, 4258, 3072, 196, 166, 67, 85, 3068, 80, 108,
	3048, 86, 3008, 17, 64, 2995, 24, 34, 1637, 2992,
	0, 1878, 208, 2990, 135, 2985, 2981, 209, 2979,
}

var yyR1 = [...]int{
	0, 459, 459, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 243, 243, 96, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 126, 126, 8, 8,
	125, 125, 125, 240, 240, 240, 240, 237, 237, 127,
	127, 124, 124, 132, 16, 16, 16, 110, 110, 17,
	18, 18, 18, 18, 462, 462, 141, 141, 139, 139,
	140, 140, 235, 235, 19, 19, 19, 245, 245, 250,
	250, 250, 253, 253, 253, 253, 223, 224, 225, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 450, 450, 450, 451, 451, 451,
	451, 451, 278, 278, 278, 278, 415, 415, 430, 430,
	430, 431, 431, 429, 429, 429, 429, 429, 433, 433,
	434, 434, 432, 432, 432, 432, 436, 436, 437, 437,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 418, 418, 418, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 439, 439, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 441, 441, 442, 442, 443, 443, 443, 443,
	444, 444, 444, 444, 444, 445, 445, 445, 445, 445,
	445, 445, 446, 446, 447, 447, 3, 2, 396, 396,
	397, 397, 398, 398, 398, 398, 399, 399, 400, 400,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	31, 31, 31, 31, 31, 31, 277, 277, 273, 273,
	273, 275, 275, 276, 276, 276, 417, 417, 417, 411,
	411, 411, 413, 413, 412, 412, 412, 414, 414, 419,
	419, 419, 419, 419, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 422, 422, 422, 420, 420, 160,
	160, 423, 423, 428, 428, 424, 424, 425, 425, 427,
	427, 427, 426, 426, 426, 426, 315, 315, 179, 179,
	69, 69, 70, 70, 70, 212, 212, 212, 20, 20,
	20, 20, 20, 20, 26, 26, 28, 28, 28, 28,
	56, 56, 57, 29, 29, 29, 29, 58, 58, 59,
	32, 32, 32, 32, 32, 32, 66, 66, 66, 65,
	65, 64, 64, 64, 64, 64, 64, 34, 35, 36,
	463, 463, 463, 60, 60, 37, 37, 37, 40, 40,
	40, 41, 41, 41, 38, 39, 42, 30, 30, 30,
	30, 67, 67, 62, 62, 61, 61, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 33,
	33, 33, 33, 33, 33, 25, 395, 395, 395, 55,
	55, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 77, 77, 352, 353, 353, 353,
	353, 353, 353, 339, 339, 340, 340, 340, 340, 340,
	340, 329, 329, 329, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 303, 303, 303, 303, 307, 307, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 306, 306, 306, 306, 306, 306, 306, 306,
	308, 308, 308, 308, 308, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 310, 310, 310, 310, 310, 310, 310, 310, 338,
	338, 312, 312, 311, 311, 311, 332, 332, 333, 333,
	333, 330, 330, 330, 331, 331, 316, 316, 316, 316,
	316, 316, 317, 334, 318, 318, 319, 319, 319, 319,
	319, 319, 320, 320, 321, 321, 321, 323, 323, 328,
	328, 327, 327, 327, 327, 327, 327, 324, 324, 324,
	324, 324, 324, 325, 325, 325, 326, 337, 337, 337,
	337, 337, 313, 46, 46, 52, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	373, 373, 378, 378, 267, 267, 268, 268, 53, 53,
	53, 53, 53, 166, 166, 54, 54, 54, 374, 374,
	376, 376, 376, 376, 376, 376, 376, 375, 375, 377,
	377, 341, 341, 369, 369, 368, 368, 367, 367, 367,
	367, 367, 367, 367, 350, 350, 351, 351, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 345, 345, 345,
	344, 344, 346, 346, 349, 349, 349, 366, 366, 365,
	365, 342, 342, 342, 379, 379, 379, 379, 379, 101,
	101, 343, 343, 343, 380, 347, 347, 348, 348, 348,
	388, 389, 387, 387, 387, 387, 387, 167, 167, 167,
	371, 371, 371, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 102, 102, 102, 103, 103, 322, 322, 354, 354,
	354, 354, 354, 458, 458, 458, 355, 355, 355, 355,
	355, 355, 449, 449, 448, 448, 448, 356, 356, 357,
	357, 357, 358, 358, 360, 360, 274, 274, 361, 361,
	362, 362, 359, 359, 359, 363, 363, 392, 392, 392,
	391, 391, 72, 72, 72, 72, 74, 74, 73, 73,
	81, 81, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 71, 71, 287, 287, 76,
	211, 211, 211, 272, 272, 385, 385, 386, 386, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	382, 382, 381, 381, 383, 383, 75, 75, 75, 75,
	161, 161, 22, 22, 78, 78, 416, 416, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 390, 390,
	390, 24, 24, 82, 83, 83, 83, 286, 286, 286,
	286, 86, 86, 86, 86, 238, 238, 239, 239, 87,
	87, 87, 87, 88, 88, 88, 88, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	121, 259, 259, 258, 258, 257, 257, 257, 260, 260,
	260, 260, 301, 301, 301, 85, 85, 85, 97, 97,
	92, 92, 95, 95, 95, 95, 98, 98, 99, 99,
	100, 100, 93, 94, 43, 44, 44, 44, 44, 45,
	90, 90, 90, 91, 91, 91, 91, 112, 112, 465,
	465, 465, 89, 466, 104, 105, 105, 107, 107, 107,
	108, 108, 108, 109, 109, 109, 264, 264, 264, 264,
	264, 264, 264, 106, 106, 106, 115, 115, 119, 119,
	119, 119, 118, 118, 118, 118, 214, 214, 219, 293,
	293, 195, 195, 215, 215, 220, 220, 220, 221, 221,
	222, 222, 222, 222, 222, 217, 217, 216, 216, 218,
	182, 182, 182, 182, 180, 180, 180, 180, 180, 180,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 178, 178, 291, 291, 291,
	291, 290, 290, 290, 123, 123, 128, 128, 130, 130,
	130, 130, 130, 130, 130, 130, 133, 197, 197, 467,
	467, 151, 151, 152, 152, 152, 152, 153, 153, 153,
	153, 153, 155, 155, 155, 156, 156, 156, 156, 156,
	156, 157, 158, 158, 154, 154, 154, 176, 176, 233,
	233, 234, 234, 232, 232, 236, 236, 129, 129, 131,
	131, 131, 131, 136, 136, 137, 137, 138, 138, 298,
	298, 142, 142, 142, 144, 143, 143, 143, 143, 143,
	143, 145, 145, 452, 453, 453, 454, 454, 454, 454,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	456, 456, 457, 457, 146, 146, 148, 149, 149, 147,
	147, 147, 147, 147, 147, 159, 159, 150, 162, 162,
	162, 162, 163, 163, 120, 120, 120, 120, 120, 120,
	120, 120, 256, 256, 165, 165, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 191, 191, 191, 191,
	191, 191, 168, 168, 168, 168, 168, 168, 168, 114,
	114, 192, 192, 192, 135, 134, 134, 117, 117, 116,
	116, 193, 193, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 185,
	185, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 190,
	190, 190, 190, 190, 464, 464, 187, 187, 186, 186,
	186, 186, 186, 186, 111, 111, 111, 111, 111, 299,
	299, 299, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 68, 68, 204, 204, 113, 113,
	202, 202, 203, 205, 205, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 175, 175, 175, 206, 206, 194, 194, 122, 207,
	207, 208, 209, 209, 210, 210, 213, 226, 226, 226,
	227, 227, 227, 227, 177, 177, 177, 228, 228, 228,
	228, 170, 170, 169, 169, 169, 171, 171, 171, 171,
	172, 172, 468, 468, 231, 231, 230, 230, 229, 229,
	229, 229, 229, 229, 241, 241, 196, 196, 199, 199,
	198, 200, 242, 242, 247, 247, 247, 247, 244, 244,
	248, 248, 248, 248, 251, 251, 252, 252, 252, 249,
	249, 249, 249, 246, 246, 246, 295, 295, 295, 295,
	254, 254, 263, 263, 261, 261, 262, 262, 255, 255,
	314, 314, 314, 269, 269, 270, 270, 271, 271, 265,
	265, 265, 265, 266, 266, 292, 292, 288, 288, 294,
	294, 289, 289, 296, 296, 297, 297, 297, 297, 393,
	393, 394, 394, 394, 335, 335, 404, 404, 336, 336,
	405, 405, 407, 407, 402, 402, 403, 403, 406, 406,
	47, 408, 408, 409, 409, 410, 410, 410, 410, 48,
	49, 49, 49, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 285, 285, 285, 285, 285, 285, 282,
	282, 282, 282, 282, 282, 283, 283, 283, 460, 461,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 3, 6, 6,
	5, 5, 5, 5, 4, 3, 5, 1, 3, 1,
	3, 3, 5, 0, 5, 0, 3, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 8, 4, 7,
	1, 2, 5, 7, 10, 8, 11, 1, 2, 5,
	5, 5, 5, 6, 5, 7, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 2, 2, 5,
	0, 1, 2, 1, 3, 5, 7, 8, 7, 9,
	10, 7, 9, 10, 2, 2, 2, 2, 4, 2,
	4, 2, 3, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 4, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 5, 5, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 6, 8, 3, 6,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 3, 2, 3, 3,
	2, 3, 3, 2, 3, 4, 2, 2, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 2, 3, 3, 2,
	2, 4, 3, 1, 0, 1, 3, 3, 3, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 5, 5, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 3, 3,
	0, 3, 0, 3, 1, 1, 0, 1, 5, 4,
	2, 3, 3, 0, 1, 0, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 3, 5,
	5, 5, 4, 0, 1, 1, 2, 2, 3, 2,
	3, 3, 1, 1, 0, 1, 1, 1, 3, 5,
	3, 3, 3, 5, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 1, 3, 3,
	3, 3, 2, 1, 11, 12, 12, 13, 13, 0,
	1, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	0, 2, 3, 3, 3, 3, 4, 5, 3, 3,
	4, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 4, 4, 3, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 0, 6, 1,
	4, 5, 5, 6, 0, 1, 0, 3, 1, 1,
	0, 2, 0, 8, 9, 0, 2, 0, 1, 2,
	0, 2, 1, 1, 1, 1, 4, 3, 6, 5,
	1, 3, 5, 4, 8, 10, 9, 2, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 3, 3, 6,
	5, 4, 4, 5, 5, 8, 4, 5, 7, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 3,
	3, 3, 4, 5, 5, 3, 7, 6, 5, 2,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	4, 4, 3, 5, 3, 1, 1, 1, 1, 5,
	0, 1, 2, 0, 1, 0, 1, 1, 2, 5,
	3, 4, 4, 4, 4, 4, 4, 3, 7, 6,
	8, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 3, 1, 3, 8, 8, 8, 11, 12, 15,
	0, 3, 3, 3, 3, 5, 3, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 0, 1,
	1, 3, 2, 3, 8, 5, 1, 1, 1, 1,
	1, 4, 4, 4, 4, 1, 3, 1, 1, 2,
	2, 4, 4, 3, 3, 3, 3, 3, 4, 3,
	5, 5, 5, 4, 4, 4, 4, 3, 2, 2,
	6, 2, 4, 3, 3, 4, 4, 5, 8, 6,
	3, 4, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 4, 2, 4, 3, 3,
	3, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	3, 2, 0, 1, 1, 2, 4, 1, 0, 1,
	2, 1, 2, 4, 4, 5, 0, 1, 0, 3,
	0, 2, 4, 4, 2, 3, 4, 4, 5, 3,
	3, 4, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 1, 3, 0, 2, 0, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 0, 2, 2, 2,
	2, 2, 2, 0, 1, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 2, 6, 0,
	1, 0, 3, 0, 1, 0, 2, 2, 4, 1,
	2, 2, 2, 2, 2, 0, 2, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 2,
	2, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	5, 1, 2, 3, 1, 1, 2, 2, 4, 0,
	1, 2, 6, 1, 3, 2, 4, 1, 1, 1,
	1, 1, 5, 5, 8, 5, 5, 8, 5, 5,
	8, 2, 2, 2, 3, 4, 4, 0, 1, 3,
	1, 0, 3, 1, 3, 1, 3, 4, 6, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 3,
	2, 2, 2, 12, 1, 3, 3, 3, 6, 7,
	2, 3, 3, 4, 4, 5, 5, 8, 8, 3,
	3, 4, 3, 4, 1, 3, 3, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 0, 5,
	5, 5, 0, 2, 1, 3, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 1, 1, 5,
	6, 6, 6, 5, 5, 5, 6, 5, 5, 6,
	5, 5, 5, 5, 6, 5, 5, 5, 4, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 4, 6, 6, 6,
	4, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 4, 4, 4, 2, 2,
	2, 1, 2, 2, 2, 8, 8, 6, 6, 3,
	4, 2, 2, 2, 0, 2, 1, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	2, 1, 2, 1, 1, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 5,
	1, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 1, 0, 2, 4,
	4, 1, 4, 1, 3, 4, 1, 4, 3, 6,
	2, 3, 1, 1, 0, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 0, 5, 1, 3, 2, 3,
	3, 1, 1, 3, 3, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 4, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 0, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 1, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 3,
	3, 1, 3, 2, 4, 1, 2, 1, 2, 2,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -459, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -72, -22, -23, -24, -82, -86, -87, -88, -84,
	-85, -92, -93, -94, -90, -89, -30, -33, -25, -96,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -133, -460, 12, -127, 34, -77, 190,
	-450, -74, -73, -75, -76, 193, 192, 230, 194, 643,
	367, 644, 223, 72, 443, -95, 446, 447, -465, 305,
	306, 25, 42, 448, 450, 35, 36, 245, 333, 335,
	197, 444, 427, 428, 358, 691, -6, 649, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	760, -209, 20, -104, -466, -209, -10, -9, -4, 649,
	-104, -110, 14, 15, 13, 554, -104, -352, 28, -3,
	117, 76, -8, 11, -266, -277, 97, 545, 198, -275,
	329, 331, 208, -263, -265, -273, 255, 265, 49, 210,
	209, 266, 199, 329, 199, 200, 202, 545, 198, 238,
	237, 329, 331, 270, 643, 199, -147, -296, -282, -284,
	-283, 347, 82, -281, 574, 578, 270, 581, 582, 587,
	337, 90, 52, 367, 568, 359, 368, 220, 523, 569,
	330, 336, 339, 360, 732, 369, 371, 372, 566, 567,
	54, 202, 556, 557, 560, 213, 747, 352, 221, 646,
	266, 755, 750, 752, 341, 753, 513, 605, 443, 462,
	454, 481, 647, 703, 278, 300, 451, 384, 530, 606,
	344, 293, 365, 704, 320, 288, 519, 525, 303, 446,
	607, 608, 609, 539, 246, 276, 705, 452, 297, 299,
	298, 260, 573, 304, 41, 226, 478, 656, 644, 255,
	706, 612, 699, 611, 249, 282, 610, 327, 40, 32,
	613, 248, 542, 108, 275, 707, 375, 527, 614, 499,
	376, 244, 271, 273, 289, 709, 651, 348, 232, 526,
	429, 474, 358, 127, 253, 315, 377, 710, 500, 504,
	711, 531, 334, 314, 617, 712, 713, 378, 655, 283,
	714, 201, 340, 618, 279, 715, 256, 441, 533, 345,
	498, 211, 648, 222, 56, 235, 534, 502, 620, 508,
	511, 430, 374, 431, 716, 717, 718, 719, 356, 354,
	622, 355, 357, 624, 267, 295, 652, 621, 654, 61,
	196, 658, 506, 505, 507, 296, 672, 529, 486, 484,
	720, 721, 349, 217, 722, 723, 485, 23, 724, 725,
	537, 319, 351, 726, 727, 728, 623, 292, 628, 604,
	729, 730, 528, 501, 503, 254, 126, 643, 277, 731,
	353, 524, 362, 659, 650, 338, 290, 629, 733, 380,
	291, 234, 228, 538, 424, 425, 439, 440, 370, 734,
	428, 735, 736, 737, 738, 332, 331, 447, 363, 630,
	448, 272, 301, 653, 739, 631, 632, 740, 741, 264,
	247, 541, 532, 60, 515, 510, 366, 381, 453, 426,
	436, 432, 434, 435, 438, 437, 433, 442, 518, 444,
	274, 241, 633, 634, 635, 427, 636, 12, 294, 346,
	637, 638, 639, 522, 364, 302, 265, 268, 489, 236,
	742, 743, 476, 477, 445, 239, 230, 121, 540, 325,
	698, 329, 382, 287, 59, 242, 53, 744, 745, 269,
	243, 657, 286, 449, 343, 660, 199, 82, -286, -281,
	-284, -285, -282, 347, 231, 58, 95, 63, 62, 82,
	-281, 643, 143, 482, 530, 190, 520, 521, 527, -345,
	528, 237, 424, 366, 240, -301, 199, -259, 239, 519,
	334, 353, 578, 243, 244, 271, 425, 431, 200, 201,
	37, 532, 531, 523, -296, -97, 449, -97, -97, 203,
	449, -112, 232, 194, -147, 231, -67, 82, 307, -67,
	34, 82, -159, -288, -296, 82, -281, 41, 82, 448,
	522, 522, 84, 650, 246, 26, -439, -414, 362, -438,
	-412, 191, 190, 15, 192, 270, 367, 368, 333, 200,
	13, 35, 732, 218, 369, 370, 11, 223, 371, 372,
	238, 14, 373, -440, -417, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 81, 82, -281, 26, -439, -414,
	362, 370, 424, 445, 424, 424, -268, -267, 383, 508,
	143, -126, 702, -124, -132, -298, -296, -282, -197, -467,
	251, 545, -255, 329, -275, 204, -128, -130, -131, -151,
	-134, 700, -460, -129, -452, -147, -135, 82, 603, -108,
	10, -107, -109, 9, 8, -108, -227, 22, 21, -264,
	-105, -227, -461, 78, -461, -126, -118, 134, -120, -296,
	-164, 100, -174, 33, 29, -173, 347, 231, -165, -201,
	-282, -200, -135, 143, -300, 132, 133, 140, 101, 186,
	-185, -183, -184, -186, -188, -189, 226, 476, 477, 81,
	83, 91, 84, 85, 86, 87, 92, 93, 94, -288,
	-284, -280, -283, 574, 578, 581, 582, 587, -198, -460,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 66, 67, 572, 198, 555, 556, 479, 557,
	13, 558, 559, 560, 645, 220, 564, 103, 55, 324,
	546, 547, 551, -190, 548, 552, 553, 566, 567, 568,
	569, 205, 545, 138, 554, 591, 592, 593, 594, 595,
	596, 597, 598, 600, 601, 599, 575, 576, 577, 579,
	580, 583, 584, 585, 586, 588, 589, 590, 674, 195,
	191, 194, 99, 28, 30, 675, 252, 102, 460, 494,
	563, 21, 25, 214, 197, 482, 212, 142, 207, 215,
	309, 311, 190, 70, 676, 543, 310, 520, 670, 667,
	669, 668, 473, 471, 308, 677, 15, 31, 224, 259,
	678, 469, 192, 250, 106, 107, 679, 46, 45, 8,
	312, 225, 318, 470, 680, 681, 24, 73, 216, 16,
	210, 240, 754, 682, 333, 18, 125, 19, 683, 664,
	666, 665, 204, 119, 200, 746, 68, 257, 684, 458,
	463, 464, 465, 466, 467, 459, 96, 685, 686, 116,
	323, 64, 603, 37, 245, 700, 561, 322, 687, 43,
	42, 493, 497, 492, 321, 509, 117, 22, 549, 550,
	35, 688, 689, 233, 496, 457, 491, 701, 690, 662,
	262, 71, 383, 472, 758, 38, 74, 229, 379, 350,
	47, 97, 20, 258, 69, 39, 570, 122, 759, 475,
	206, 237, 691, 535, 261, 692, 123, 468, 702, 218,
	118, 450, 193, 361, 306, 219, 328, 335, 693, 251,
	124, 521, 661, 694, 565, 34, 223, 305, 456, 208,
	695, 263, 317, 307, 316, 696, 697, 342, 48, 756,
	673, 199, 44, 105, 495, 455, 490, 203, 562, 238,
	313, 9, 49, 36, 516, 14, 373, 72, 75, 483,
	480, 488, 487, 209, 757, 17, 326, 571, 649, 536,
	98, 671, 517, 544, -104, -104, -104, -244, 445, -251,
	-248, 531, 532, -249, -252, -246, -201, 508, 729, 730,
	530, 482, 529, -288, -296, -282, 347, 231, 143, 575,
	576, 577, 103, 479, 555, 591, 546, 548, 543, 547,
	545, 33, 592, 29, 94, 593, 572, 205, 13, 186,
	579, 580, 594, 595, 596, 66, 549, 550, 645, 138,
	100, 597, 598, 92, 600, 601, 324, 554, 67, 599,
	198, 585, 584, 583, 586, 558, 559, 93, 551, 552,
	553, 55, 589, 588, 590, -2, -6, -460, -147, -353,
	-340, -343, -288, -282, -284, -285, 227, -283, 215, -380,
	82, -281, 212, -209, -104, 200, 202, 554, -262, 205,
	-262, 238, 237, 270, -276, 263, -262, -262, 733, 199,
	-275, 109, 109, -78, -147, -416, -411, -417, -261, 205,
	-288, -261, -261, -261, -261, -261, -261, -261, -261, 82,
	-286, -147, 187, -83, -147, -139, 16, 16, 75, 75,
	82, -286, 82, 430, 374, 34, -260, 117, 17, 545,
	198, 199, 237, 238, 202, 270, -260, -347, 16, 119,
	241, 241, 241, 241, 241, 242, 241, -258, 522, 524,
	525, 526, -257, 16, 119, 17, -121, 117, 24, -460,
	-227, -227, -257, 241, 135, -99, 99, -99, 82, 448,
	203, -91, -4, -18, -16, -17, -112, -9, -176, -154,
	28, 6, 7, 109, 34, 34, 81, 59, 34, -62,
	-61, -63, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 303, 304, 34, -395, 76, 187, -335, 508,
	82, -408, -409, -147, 84, 84, 74, 353, 74, 77,
	203, 77, 74, -441, 363, 76, -441, 331, 363, 364,
	265, 329, 202, -441, -441, 331, -441, -441, -441, 350,
	-441, -441, 522, -441, -441, -441, 365, 366, -441, 520,
	202, -441, -441, -441, -441, -441, 79, 74, 77, 353,
	74, 16, 74, 426, 429, 535, 649, -54, 441, 442,
	-166, 26, -372, 143, 375, 376, 377, 378, 374, 353,
	379, 380, 381, 241, 382, 199, 522, 374, -6, -124,
	77, -231, -460, 77, -198, -460, 82, -328, -327, -324,
	-325, -326, -323, 33, 199, -261, 270, -142, -144, -143,
	-145, 64, 68, 70, 65, 66, 67, 523, 71, -271,
	28, -134, -460, -123, -9, -133, -128, -460, -152, 122,
	-162, -271, -153, 72, 204, 73, 28, -154, -155, -156,
	-157, -158, 6, 7, 54, -460, -460, -7, -8, 26,
	27, -14, -7, -12, -14, 26, 27, 26, 27, -7,
	-228, 24, 35, -177, 84, 87, -201, -210, -213, -120,
	-296, 58, -115, 26, 27, 65, 57, 63, 62, -224,
	89, 16, -291, 99, 97, 98, 116, -290, 28, 82,
	81, -286, 187, -120, -168, 119, 100, 117, 118, 102,
	129, 128, 139, 132, 133, 134, 135, 136, 137, 138,
	130, 131, 142, 109, 110, 111, 112, 113, 114, 115,
	-256, -460, -135, -460, 187, -460, 187, 188, 189, 187,
	-174, -174, -174, -174, -174, -174, -174, 81, 81, 81,
	-460, 187, 187, -460, -460, -460, -460, -460, -193, -120,
	649, -460, 199, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -204, -120,
	-460, -460, -464, -460, -464, -464, -187, -464, -460, -187,
	-187, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -187, -187, -187, -460, -255, -255, 16, -139,
	-140, -147, -150, -296, 77, -245, -250, 533, 535, 445,
	-249, -249, -295, -288, 81, 33, 143, -351, 109, 120,
	34, 187, -209, 78, 77, -303, -307, -309, -308, -310,
	-305, -306, -68, 486, 484, 480, 479, 482, 485, 143,
	483, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 34, 226, 476, 477, 478, 660, 500, 501,
	502, 503, 504, 505, 506, 507, 454, 481, 647, 455,
	456, 457, 458, 459, 460, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, -303, -303,
	-303, -303, -303, -287, -380, 82, -286, 76, -227, -264,
	-288, -147, -277, 208, -275, 82, 100, 82, -146, -288,
	-296, -159, -262, 264, -420, -419, -411, -414, 673, -262,
	-276, -411, 269, 267, 268, 77, 203, 77, 203, 79,
	-139, 29, 74, -141, -147, 82, 82, -146, -159, -413,
	-411, -414, -160, -288, -296, -297, -296, -279, -284, -285,
	674, 195, 26, 191, 194, 99, 28, 30, 675, 252,
	102, 460, 143, 575, 576, 577, 494, 563, 21, 25,
	214, 103, 197, 479, 482, 212, 142, 207, 215, 309,
	311, 555, 591, 190, 70, 676, 546, 548, 543, 547,
	310, 545, 520, 670, 667, 669, 668, 473, 471, 308,
	33, 677, 15, 592, 31, 224, 259, 27, 678, 136,
	469, 192, 602, 250, 106, 107, 679, 46, 45, 8,
	29, 312, 225, 94, 318, 593, 470, 680, 681, 24,
	73, 216, 16, 210, 240, 754, 682, 333, 18, 572,
	125, 19, 683, 664, 666, 665, 205, 204, 119, 200,
	746, 68, 257, 13, 684, 458, 463, 464, 465, 466,
	467, 459, 186, 96, 685, 686, 116, 323, 64, 579,
	580, 603, 50, 37, 245, 594, 595, 700, 596, 561,
	322, 687, 43, 42, 493, 497, 492, 321, 509, 66,
	117, 22, 549, 550, 35, 688, 689, 645, 233, 496,
	457, 491, 701, 690, 662, 138, 262, 71, 100, 383,
	597, 598, 92, 472, 758, 38, 74, 229, 379, 350,
	47, 97, 20, 258, 69, 39, 570, 122, 759, 600,
	475, 206, 237, 691, 535, 261, 692, 123, 601, 468,
	702, 218, 118, 450, 193, 324, 554, 361, 306, 219,
	328, 335, 67, 693, 251, 124, 599, 198, 521, 661,
	11, 694, 565, 34, 223, 305, 456, 208, 695, 263,
	317, 307, 316, 696, 57, 697, 342, 48, 585, 584,
	583, 586, 756, 65, 558, 559, 673, 199, 44, 105,
	495, 455, 490, 203, 562, 238, 93, 313, 9, 49,
	36, 516, 14, 373, 72, 75, 551, 552, 553, 55,
	483, 480, 488, 589, 487, 588, 590, 209, 757, 104,
	17, 326, 571, 649, 536, 98, 671, 517, 14, 192,
	77, 81, -239, 82, -286, 81, -239, -238, -239, -238,
	241, -260, 81, -300, -120, -262, -262, -147, -147, -147,
	-147, -147, -147, -260, -260, -260, -260, -257, 16, -257,
	-260, -296, -296, -120, -174, -411, 547, 134, -260, -296,
	-100, -98, 217, -98, -100, 82, 82, 448, -91, 38,
	28, 28, 82, -62, -62, 81, -62, 77, 109, -62,
	-176, 78, -193, -288, -393, 746, 77, -410, 28, 535,
	536, 509, -443, 199, 240, 237, 74, -443, -438, 370,
	-413, -412, -411, -441, -442, -288, -441, -441, -441, 522,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -417,
	-443, 333, 77, -443, -413, -411, 203, -375, -377, 439,
	440, 536, 537, 452, 374, 374, 374, 374, 374, 374,
	-139, -139, 203, 252, -132, 28, -230, -229, -289, -282,
	-284, -285, 227, -288, -279, -467, -328, -325, -324, -326,
	482, 530, 142, 542, -147, -411, -160, -130, -130, -128,
	-130, 64, 64, 64, 69, 64, 69, 69, 64, 64,
	-143, -298, -271, 77, -461, -461, -461, -9, -460, -298,
	-162, -271, 200, 200, 200, 102, 16, 52, 26, 102,
	16, 52, 26, 102, 16, 52, 26, -117, -116, -119,
	134, -120, -296, -174, -240, 96, 14, 119, 77, 23,
	77, -226, 30, 31, 187, -175, 59, 84, 87, -240,
	77, -118, -147, -120, -120, -120, -191, 92, 100, 93,
	94, -290, 227, 134, -297, -289, -284, -282, 347, 231,
	-279, -174, -192, -198, -135, 88, 119, 117, 118, 102,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -299, 82, 81, 143, 82,
	-289, -116, -289, -173, 226, 476, 477, 92, -173, -288,
	-288, -106, 26, 27, -289, 523, -289, -106, -106, -106,
	-106, -106, 77, -461, -116, -116, -116, -461, -120, -120,
	-116, -174, -116, -201, 81, -116, -201, 81, -116, -174,
	561, 562, 563, -116, -116, -106, -202, -203, 104, -201,
	-282, -285, 347, 231, -116, -461, 84, -180, -181, 652,
	661, 662, 664, 667, 660, 659, 658, 656, 655, 654,
	657, 653, 671, 670, 669, 668, 666, 665, 663, -180,
	-180, -182, 226, 478, 476, 477, -116, -117, -116, -116,
	-461, -461, -119, -116, -119, -116, -116, -461, -461, -461,
	-461, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -461, 84, -149, 96, -147, -123, -147,
	-139, -462, 16, 75, -462, 77, 187, -248, -251, 77,
	534, 536, 537, -245, -320, -321, 142, 74, 95, 81,
	-120, -289, -297, -227, -371, -340, -341, -342, -343, -364,
	215, -379, 206, 208, 210, 209, 49, -344, 216, 200,
	50, -304, -330, 515, 516, -312, 76, -311, 76, -68,
	480, 479, 482, -311, 480, 487, -311, 487, 487, -311,
	-311, -311, 480, 76, 76, -312, -312, -312, -332, 76,
	-332, 475, -333, 76, -333, -333, -333, -333, -304, -304,
	-304, -304, -304, -380, -120, -228, -292, 75, -231, 202,
	733, -328, 29, -328, -69, 252, 221, 187, 76, -160,
	255, 256, -415, 77, 33, -421, 330, 84, 205, -147,
	231, -147, -147, -411, -411, -417, -390, 219, 214, -147,
	77, 77, 187, 712, 712, -147, 77, 81, 82, 82,
	-176, -348, 16, 119, -260, -147, -176, -114, 227, 75,
	-464, -461, 450, 451, 82, -174, 38, 38, -61, -173,
	-288, 78, -394, 204, 554, 81, -409, -298, 508, 536,
	-444, 134, -288, -443, -444, -447, 649, 203, 78, 77,
	-441, -444, 350, 333, -444, 16, -374, -376, 432, 433,
	434, 435, 436, 437, 438, 77, 109, 109, 453, -378,
	24, -373, 649, -373, 81, -174, -134, -461, 77, 187,
	-198, 34, -350, -351, -350, -350, -81, -386, -79, -384,
	195, 192, 191, 266, 197, -323, 555, 249, 248, 282,
	283, 73, 35, 196, 193, -71, -80, 230, 288, 234,
	289, 194, 229, 290, 228, 291, 649, 286, 753, 513,
	605, 606, 639, 90, 609, 246, 41, 200, 619, 612,
	542, 615, 616, 375, 614, 618, 211, 622, 621, 623,
	625, 626, 627, 339, 630, 631, 632, 247, 633, 634,
	635, 364, 640, 9, -421, -427, 74, -137, -136, 74,
	75, -138, 74, -136, 64, 64, 64, -234, 76, -298,
	-128, -461, -236, -288, -162, -298, -460, -460, -460, -174,
	-174, 119, -174, -174, 119, -174, -174, 119, -461, 77,
	187, 77, -237, 40, 39, -288, 510, 60, -177, -177,
	-213, -254, 24, 16, 55, 55, -125, 16, -224, -224,
	92, 93, 94, 187, -460, -192, -174, -174, -174, -114,
	99, -461, -461, -117, -116, -116, -116, -116, -116, -120,
	-461, -461, -461, 77, 75, 28, -461, 75, 119, -461,
	16, 16, -461, 16, 16, -461, -461, 16, -174, -174,
	-174, -461, -461, -116, -205, -203, 106, -120, -461, -461,
	-461, -461, -461, 77, 77, 16, 77, -461, -461, -461,
	-461, -214, 570, -214, -461, -461, -461, -461, -461, -214,
	-214, -214, -214, -461, -461, -461, -461, -461, -461, -461,
	-461, -461, -461, -461, -461, -461, -235, 122, -147, 34,
	-235, 75, -123, -123, -150, -296, 134, -250, -253, 538,
	535, 541, 82, 81, 143, 81, 187, -228, -356, -370,
	77, 122, 753, 513, 605, -323, 606, 639, 90, 609,
	246, 41, 200, 619, 612, 542, 615, 616, 375, 614,
	618, 211, 622, 621, 623, 625, 626, 627, 339, 630,
	444, 631, 632, 247, 633, 634, 635, 364, 640, 9,
	649, 76, -349, -287, -379, 82, -281, 50, -344, -346,
	-344, -344, -344, -349, 82, -281, -349, 50, 715, 92,
	100, -319, -321, 143, -316, -317, -334, -337, -313, 28,
	754, 518, 218, -343, 482, 530, 33, 74, 513, 206,
	50, 49, 210, 90, -331, 517, 84, 84, 581, -311,
	487, -311, -311, -311, -311, -311, -338, 81, -338, 84,
	-332, 84, 78, 74, -288, 28, -147, 673, -70, 13,
	14, 15, -288, -396, -397, -398, -288, 119, 257, 258,
	74, -430, 361, -419, 331, 340, 99, 21, 649, -451,
	100, 203, 203, -147, -411, -288, 74, 74, -239, -163,
	17, 82, 82, -257, -260, -174, -414, 243, 244, -174,
	-174, -148, 96, -410, 203, 187, 187, -444, 203, 352,
	-413, -288, 16, 16, 350, 16, -413, 77, 109, 109,
	109, 109, 109, 109, 109, -377, 76, 76, 384, 535,
	-229, -289, -350, 82, 81, 143, 82, 81, 143, 81,
	-385, 77, -386, 195, 192, 282, 283, -384, -272, -344,
	-392, -391, -342, -343, 122, 207, 215, 215, 212, -272,
	-344, 206, 216, 122, 215, 212, -272, 200, -350, -272,
	482, 142, 203, 37, 37, 364, 122, 364, 122, -350,
	-272, 207, -344, -269, 215, -270, 203, 28, 287, 122,
	122, 122, 122, 122, 122, 122, 122, 292, 673, -350,
	-350, -350, -350, -350, -350, -350, -350, 611, 611, -350,
	-350, -350, -350, -350, -350, -350, -350, -350, -350, -350,
	-350, -350, -350, -350, -350, -350, -350, -350, -350, -350,
	-350, -350, -354, -448, 81, -458, 90, 270, 339, 82,
	-281, -279, 84, 86, 85, -350, -350, -161, 193, 276,
	272, -120, 76, -120, -232, -288, -234, -461, 77, -162,
	-232, -232, -232, 99, 203, -460, 99, 203, -460, 99,
	203, -460, -271, -119, 134, -297, 81, 77, 81, 81,
	511, 61, -147, -163, 602, -123, -118, 134, -289, -117,
	-114, 99, -174, -461, -461, -461, -461, -461, -461, -302,
	143, 479, 482, 226, 478, 471, 469, 468, 470, 498,
	484, 515, 476, 516, 660, -299, -302, -299, -174, -174,
	-174, -174, -174, -174, 16, 16, 16, 646, -209, 108,
	-120, 105, -174, -174, -174, -174, -288, -219, -460, -214,
	-214, -214, -214, -214, -215, -214, -215, -215, -215, -215,
	-215, -215, -215, -215, -215, -215, -215, -170, -171, 34,
	-169, -9, -460, -172, -468, 55, 59, -460, -242, -247,
	-201, -282, -285, 227, -163, -123, -163, -163, 187, 535,
	539, 540, -370, 21, -350, -350, -350, 530, 482, 142,
	-350, -350, -350, -350, -350, 611, 611, -350, -350, -350,
	-350, -350, -350, -350, -350, -350, -350, -350, -350, -350,
	-350, -350, -350, -350, 445, -350, -350, -350, -350, -350,
	-350, -354, -448, -350, -350, 673, -366, -365, 82, -286,
	206, 49, -379, -349, -349, -349, -349, -349, -101, -287,
	92, -460, 755, 84, -147, 34, 82, 143, 81, -173,
	133, -300, -165, -184, -460, 93, 94, 546, 547, 551,
	548, 552, 553, 566, 567, 568, 569, 543, 549, 550,
	14, 50, 50, 50, 81, 78, 78, 78, -311, 78,
	77, 78, 77, 78, 77, -167, 707, 708, -147, -223,
	-231, 84, 74, 78, 77, -303, -288, -288, -288, 272,
	-433, 649, 336, -431, -429, 342, 343, 344, 345, 346,
	-414, 341, -421, 338, 81, 82, 81, 672, 706, 727,
	699, 29, -147, -411, -233, 76, -232, -233, -120, -176,
	-235, 199, -413, 134, 134, -288, 203, -413, 350, -446,
	649, -413, -413, 16, -413, -376, 81, 81, 81, 84,
	84, 84, 84, -139, -139, 81, 35, 82, 81, 143,
	-79, 195, 192, 282, 283, 76, -339, 82, -286, -349,
	-265, 208, 206, -460, 82, -287, -287, -287, -288, 50,
	50, -236, -287, -287, -288, -287, 33, 279, 280, 281,
	82, 34, -350, 482, -236, 26, -236, 26, 33, 336,
	284, 285, -339, -287, -288, -147, 216, 212, -287, -236,
	26, 84, -236, -288, -236, 26, -236, 26, -236, 26,
	-236, 26, 641, -354, -120, -354, -458, -458, 81, 81,
	81, -350, -350, -103, 642, 217, -458, 81, -103, -458,
	-448, 81, -102, 217, 220, 222, -354, -354, -354, -458,
	-458, -458, -458, 81, -355, 33, 613, 474, 608, 629,
	607, 82, 92, 81, 81, -458, 33, -458, 33, -458,
	-354, 636, -458, -460, -426, 248, 249, 203, 277, 100,
	-423, 752, 273, -232, 78, 77, -152, -288, -461, -461,
	-461, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-298, 187, 525, -288, -318, -319, -206, 18, -224, -461,
	-174, -215, -215, -215, -215, -215, -461, -312, -312, -312,
	-312, -333, 475, -312, 459, -312, 459, -461, -461, -461,
	-461, 24, 24, 24, 24, -461, -174, -174, -174, -460,
	-113, 565, -120, 77, 77, -461, -461, -293, 82, -241,
	74, -241, -242, -271, -9, -461, -230, -172, -460, 11,
	55, 59, 649, 199, -196, -199, -467, -236, -163, 77,
	-351, -351, -351, -351, -209, -163, -357, -358, -361, -360,
	123, 620, 687, -354, -354, -354, -350, 34, -350, -458,
	-458, 81, 81, 81, -350, -350, -103, -458, 81, -103,
	-458, -448, 81, -102, -354, -354, -354, -458, -458, -458,
	-458, 81, -355, 82, 92, 81, 81, -458, 33, -458,
	33, -458, -354, 636, -458, -460, 641, 78, 77, -312,
	-312, 50, -346, 76, -174, 28, 76, 82, 143, 81,
	-173, 81, -174, -190, 81, 84, 84, 76, -225, 28,
	-451, -147, -399, -400, -401, 90, 648, 100, 259, 260,
	217, 261, 262, 263, -398, -303, -303, -303, -423, -436,
	-437, -435, 339, 359, 360, 347, -434, -432, 354, 355,
	356, 357, 99, 81, 81, 81, -422, 330, 99, 339,
	21, 28, 21, 28, 81, 81, 81, 81, 84, 75,
	-232, -260, -318, -147, -446, -413, -446, 333, -413, 78,
	78, -339, -211, 220, 221, -303, -303, -292, -346, 50,
	-381, -383, 122, -287, 707, 708, 707, 708, 34, 192,
	745, 715, -339, -350, -299, 34, 364, 364, 364, 364,
	-211, -270, 203, 50, -287, 203, 364, 364, 96, 649,
	81, 81, 610, 624, -449, -448, -315, 90, 74, -160,
	277, -427, 74, -179, -173, -184, -173, 78, -288, 77,
	77, 77, 134, -460, -402, -258, -207, 19, 21, -318,
	82, -318, 82, -174, -174, -174, -174, -461, -461, -461,
	-174, -461, 81, -174, -174, -195, 122, 32, -241, -298,
	-461, -172, -460, -461, -461, 77, -198, -460, -461, -209,
	-247, -120, -120, -120, -120, -227, -362, 628, -460, 525,
	617, 50, -299, -350, -322, -448, 81, 81, 81, 610,
	624, -449, -368, -367, 75, 211, 90, 614, 632, 745,
	715, -365, -226, -226, -349, -349, -232, -461, -460, -232,
	-461, 78, 78, -366, -9, -223, 24, -224, -401, 81,
	263, 259, 263, 263, 263, 263, 264, -427, -418, 90,
	337, -435, 348, 713, 332, 361, 84, 84, 121, 35,
	36, -432, 84, 84, 84, 84, -429, 21, 649, -421,
	338, 81, 81, 338, 81, 81, 330, -451, 41, 78,
	-402, -445, 28, -446, -445, 350, 78, 82, -304, -304,
	76, -349, -349, -461, 77, -288, 33, 33, -211, -299,
	-299, -287, -288, -287, 203, -287, -460, 199, 77, -461,
	327, 81, 366, -161, -428, -181, -174, -174, -174, -453,
	-454, -289, 720, -403, 43, -405, 44, -217, 571, -208,
	-120, -194, -122, -120, -461, -461, -461, -461, -111, 119,
	649, -461, -461, -209, 21, 50, -234, -172, -9, -460,
	-199, -461, -227, -359, 637, 84, -174, -460, -460, -274,
	266, -299, -461, -367, -448, -350, 81, -350, -350, 78,
	-329, 757, 756, -174, 78, 78, -223, -225, 250, -225,
	41, 41, 255, 256, -426, 81, 81, 33, 349, 186,
	33, 84, 186, 573, 338, 81, 82, 339, 339, 21,
	-174, -403, -411, -445, -366, -292, 76, -383, 55, -174,
	142, 142, 203, -287, -381, -147, -448, -223, -426, 132,
	-424, 274, -461, -461, -461, -461, 77, -303, 24, 81,
	604, -406, 48, -404, -336, 47, 21, -216, -218, -288,
	77, -461, 647, 71, 650, -220, 124, 123, -193, 14,
	-9, -382, -460, 21, -461, -232, -174, -460, 109, 84,
	81, 81, 218, -461, -369, -368, -278, 649, -9, 251,
	-27, -4, -16, -17, -18, -19, -21, -72, -22, -23,
	-28, -29, -24, -82, -86, -87, -88, -84, -95, -93,
	-94, -90, -89, -32, -34, -35, -37, -40, -41, -38,
	-39, -36, -30, -33, -42, -25, -43, -44, -45, -50,
	-51, -31, -52, -46, 103, 205, 444, 308, 319, 320,
	321, 82, 324, 326, 322, 323, 318, 328, 443, -315,
	84, 33, 84, 33, 351, 339, 28, 84, -314, 204,
	649, 78, 76, -366, 235, -350, -299, -287, -461, -71,
	649, -27, -315, 186, -425, 275, -179, -461, -454, -455,
	604, 29, 726, 525, 81, -405, 21, -407, 45, 46,
	81, 77, 28, -122, 61, 648, 651, -461, -221, 102,
	-222, 121, 573, -178, 84, 186, -221, -242, -461, -381,
	-360, -461, -461, -232, 84, -147, -329, 212, 278, 508,
	-223, -212, 253, 254, -223, -120, -56, -57, 104, -120,
	82, -66, -294, 311, 312, 313, -289, 82, 82, -55,
	-27, 80, -55, -120, 82, 82, -463, 16, 58, -174,
	108, -55, 327, 656, 656, 81, -234, 84, 331, -369,
	-366, 78, 236, -299, 287, -223, 327, -173, -179, -428,
	-271, 81, 604, -460, 525, 81, 21, 21, -218, -219,
	61, -222, 126, 127, 251, 126, 127, -173, -461, 617,
	50, -461, 76, 350, 212, 212, -278, -223, 82, 82,
	-56, 108, 106, -57, -120, 105, 309, 310, 314, -303,
	77, 760, 443, 321, 324, 326, 760, 327, 82, 16,
	760, -223, -243, 34, 43, 124, 33, 336, 26, -414,
	78, -369, -460, -223, -181, -428, -298, -456, -457, 376,
	92, 33, 81, -453, -460, 81, 81, 649, 99, -180,
	-460, -274, -232, 350, 350, -225, 108, 106, 103, -55,
	105, -55, 24, 24, 24, -318, -289, 108, -27, 108,
	-55, -55, -55, -120, 325, -55, 96, 108, -27, -242,
	8, -369, -174, 233, -27, -457, 92, 33, -456, 92,
	33, 74, 74, -173, -461, -453, 650, -222, -174, -460,
	78, -20, -26, -19, -25, -16, -17, -18, 443, 649,
	103, -55, 760, -55, 760, -67, 84, -9, -65, -64,
	84, -67, 316, 100, 317, 82, -320, 321, 82, 760,
	760, 760, 327, -120, 760, -60, 82, -223, -414, -461,
	-461, -223, 74, -173, 74, -173, 679, 376, 679, 376,
	74, -461, 651, -461, -174, -388, -389, 74, -223, -55,
	108, -126, 760, 108, 760, 108, 106, -58, -59, 107,
	-27, 77, 315, 33, 108, 108, 325, -55, 108, 108,
	77, 74, 74, 376, 376, 679, 376, -363, 638, -461,
	-389, 74, -388, 74, 15, 14, 760, 108, 103, 205,
	-55, 108, 106, -59, -120, -64, -174, 82, 321, -120,
	760, 324, 326, 82, 74, 74, 84, -363, -387, 219,
	214, 217, 34, -387, 108, 103, 760, 205, -55, 105,
	82, 108, 108, 376, 679, 213, 33, 92, 108, 760,
	-55, 324, 326, 205, 108, 760, 82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1712, 1213, 1712, 0, 1213, 0, 1213, 0, -2,
	133, 922, 923, 924, 925, 0, 0, 0, 0, 0,
	0, 0, -2, 1177, 1178, 1181, 1178, 1178, 1207, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 64, 0, 1319, 2738,
	-2, 1209, 1210, 1211, -2, -2, 0, 53, 0, 60,
	2, 1720, 0, 1226, 1215, 1720, 0, 0, 49, 0,
	0, 1213, 1213, 1213, 87, 88, 0, 119, 0, 121,
	0, 0, 1712, 1213, 0, 0, 0, 1796, 1796, 333,
	1796, 1796, 1811, 0, 1814, 331, 0, 1793, 1809, 1810,
	1812, 0, 0, 0, 1794, 0, 1794, 1794, 1794, 1794,
	1794, 1794, 1794, 1794, 0, 0, 1092, 1409, 1411, 1412,
	1413, 1414, 1823, 1824, 2729, 2730, 2731, 2732, 2733, 2734,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2735, 2736, 2737, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424,
	2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434,
	2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454,
	2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464,
	2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534,
	2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554,
	2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564,
	2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574,
	2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584,
	2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594,
	2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604,
	2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614,
	2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
	2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634,
	2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644,
	2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664,
	2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674,
	2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684,
	2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694,
	2695, 2696, 2697, 2698, 2699, 2700, 0, 0, 0, 1097,
	1098, 1099, 1100, 2723, 2724, 2725, 2726, 2727, 2728, 1109,
	1110, 0, 0, 0, 1168, 0, 1168, 1128, 1129, 0,
	1131, 0, 0, 0, 0, 0, 0, 0, 1165, 1143,
	1146, 1150, 0, 1720, 1720, 1165, 1156, 0, 777, 778,
	779, 1173, 1174, 1162, 1175, 1180, 1179, 1188, 1188, 0,
	1179, 79, -2, 0, 1347, 0, 457, 459, 0, 480,
	0, 483, 486, 1415, 0, -2, -2, 1834, 1194, 0,
	0, 1859, 1860, 0, 0, 0, 0, 0, 2597, 231,
	347, 272, 272, 272, 272, 272, 272, 272, 0, 272,
	272, 0, 272, 272, 272, 2613, 272, 0, 272, 272,
	272, 272, 272, 230, 346, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 336, 337, 338, 0, 0, 0,
	2597, 0, 730, 1182, 735, 733, 0, 727, 724, 725,
	0, 80, 0, 67, 81, 1744, 1369, 1370, 1316, 0,
	1320, -2, 0, 1794, 0, 1799, 69, 1306, 1307, 1308,
	-2, 0, 0, 1314, 1315, -2, 1465, 1823, 0, 0,
	1220, 0, 0, 1217, 1223, 0, 1727, 0, 0, 117,
	1214, 47, 48, 2739, 59, 0, 0, 1242, 1297, 0,
	1424, 2294, 1430, -2, 2207, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 2152, 0, 0, 0, 0, 0, 2249,
	1503, 1504, 1505, 1506, 1507, 1508, 2460, 2677, 2678, 1690,
	1694, 1695, 1696, 1697, 1698, 1699, -2, -2, -2, 1675,
	1676, 0, 1688, 2729, 2730, 2732, 2733, 2734, 1761, 0,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 2275, 2338, 2226, 2343, 2171, 2735, 2163, 2736,
	2240, 2367, 2368, 2737, 2283, 2708, 0, -2, 2392, 2331,
	-2, -2, -2, 1571, -2, -2, -2, 2719, 2720, 2705,
	2710, 2233, 2181, 2291, 2332, 2172, 2193, 2212, 2261, 2262,
	2264, 2296, 2297, 2315, 2324, 2342, 2153, 2154, 2155, 2256,
	2257, 2364, 2363, 2362, 2365, 2398, 2396, 2399, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2156,
	2157, 2158, 2159, 2160, 2162, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2173, 2174, 2175, -2, 2180, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2191, 2192, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2208, 2209, 2211, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2227, 2228, 2229, 2230,
	2231, 2232, 2234, 2235, 2236, 2237, 2238, 2239, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2250, 2251, 2252, 2253,
	2254, 2255, 2258, 2259, 2260, 2263, 2265, 2266, 2267, 2268,
	2269, 2270, 2271, 2272, 2273, 2274, 2276, 2277, -2, -2,
	2280, 2281, 2282, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2292, 2293, 2295, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2325, 2326, 2327,
	2328, 2329, 2330, 2333, 2334, 2335, 2336, 2337, 2339, 2340,
	2341, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2366,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2393,
	2394, 2395, 2397, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 0, 1798, 1798, 0, 104, 2679, 0,
	1768, -2, -2, 1770, 0, 0, 0, -2, -2, -2,
	-2, 2164, -2, 1675, 0, 0, 0, 0, 2152, 2153,
	2154, 2155, 2161, 2163, 2171, 2172, 2176, 2177, 2178, 2179,
	2181, 2190, 2193, 2207, 2210, 2212, 2226, 2233, 2240, 2249,
	2256, 2257, 2261, 2262, 2264, 2275, 2278, 2279, 2283, 2291,
	2294, 2296, 2297, 2298, 2315, 2324, 2331, 2332, 2338, 2342,
	2343, 2362, 2363, 2364, 2365, 2367, 2368, 2379, 2389, 2390,
	2391, 2392, 2396, 2398, 2399, 120, 1712, 0, 122, 0,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 803,
	1817, 1818, 0, 1720, 1226, 0, 0, 331, 0, 0,
	0, 0, 0, 1796, 326, 0, 0, 0, 0, 1796,
	333, 0, 0, 1072, 0, 1073, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	1116, 1091, 0, 1093, 98, 1096, 0, 0, 0, 0,
	1113, 1114, 1117, 0, 1159, 1168, 1119, 0, 0, 1796,
	1796, 0, 0, 0, 0, 0, 1127, 0, 805, 806,
	1168, 1133, 1134, 1168, 1168, 1168, 1165, 0, 1165, 1140,
	1163, 1164, 1168, 0, 0, 0, 1145, 0, 0, 0,
	1153, 1154, 1168, 1158, 0, -2, 1186, -2, 1195, 0,
	0, 1200, 1203, 1204, 1205, 1206, 79, 1202, 1212, 1348,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 482,
	463, 0, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 0, 1347, 0, 0, 1829, 1835,
	1199, 1850, 1851, 0, 1861, 1862, 276, 0, 276, 0,
	0, 0, 0, 198, 272, 0, 200, 272, 272, 272,
	0, 272, 272, 207, 208, 272, 210, 211, 212, 272,
	214, 215, 272, 217, 218, 219, 272, 272, 222, 272,
	272, 225, 226, 227, 228, 229, 345, 276, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 731, 736, 737,
	732, 734, 705, 0, 0, 0, 0, 710, 711, 712,
	713, 0, 0, 716, 717, 0, 0, 0, 65, 66,
	0, 0, 0, 1319, 1317, 0, -2, 927, -2, 681,
	682, 683, 0, 678, 0, 0, 0, 0, 0, 0,
	0, 1371, 0, 0, 1374, 0, 0, 0, 0, 0,
	1808, -2, 0, 0, 0, 0, 1304, 0, 1321, 0,
	1323, 0, -2, 0, 0, 0, 1808, 1327, 1328, 1329,
	1330, 1331, 0, 0, 0, 1467, 0, 57, 58, 1221,
	1222, 54, 62, 63, 55, 1218, 1219, 1224, 1225, 56,
	73, 0, 0, 1721, 1724, 1725, 1726, 1713, 1714, 1717,
	0, 0, 73, 1227, 1228, 1229, 1230, 1231, 1232, 0,
	1216, 0, 1243, 0, 0, 0, 0, 1298, 0, 1301,
	1302, 1303, 0, 1428, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1431, 0, 1445, 0, 0, 0, 0, 0, 0, 0,
	1496, 1497, 1498, 1499, 1500, 1501, 0, 1691, 1692, 1693,
	1233, 0, 0, 1233, 1233, 1233, 1233, 1233, 0, 1471,
	2405, 0, 2370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 1667,
	0, 0, 1568, 0, 1569, 1570, 1572, 1586, 0, 1573,
	1574, 0, 0, 0, 0, 0, 1467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1581, 1582, 1583, 0, 0, 0, 0, 0,
	0, 98, 100, 1409, 0, 105, 107, 0, 0, 2679,
	1771, 1772, 672, 1786, 1787, 1788, 1789, 0, 766, 767,
	1784, 0, 1720, 820, 0, 554, 651, 572, 573, 574,
	641, 576, 643, 0, 643, 643, 1664, 1665, 643, 643,
	643, 618, 619, 620, 621, 622, 624, 625, 626, 627,
	628, 0, 0, 600, 641, 641, 641, 604, 631, 632,
	633, 634, 635, 636, 637, 638, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 646, 646, 648, 648, 648, 648, 648, 554, 554,
	554, 554, 554, 0, 802, 1027, 1028, 0, 1727, 117,
	1815, 1744, 0, 0, 333, -2, 0, -2, 0, 1404,
	0, 0, 0, 0, 146, 367, 349, 131, 0, 0,
	327, 332, 328, 329, 330, 0, 0, 0, 0, 340,
	1088, 1795, 0, 1080, 96, 1081, 1082, 1083, 1084, 1085,
	342, 1086, 1087, 369, 0, 1410, 1825, 1826, 1827, 1828,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 0, 0,
	0, 1101, 1103, 1107, 1108, 1102, 1104, 1111, 1105, 1112,
	1157, 1118, 1169, 0, 1171, 0, 0, 1347, 1123, 1124,
	1125, 1126, 807, 1132, 1135, 1136, 1142, 1168, 0, 1347,
	1141, 1166, 1167, 1144, 1459, 1147, 1584, 0, 1155, 1176,
	1192, 0, 1187, 0, 1193, 1197, 1196, 0, 1201, 0,
	0, 0, 1208, 458, 460, 462, 481, 0, 0, 484,
	485, 487, 0, 1416, 1831, 0, 0, 1853, 0, 1855,
	1857, 0, 0, 277, 278, 279, 276, 0, 232, 0,
	294, 348, 0, 199, 0, 274, 201, 202, 203, 272,
	205, 206, 209, 213, 216, 220, 221, 223, 224, 344,
	0, 0, 0, 0, 196, 0, 0, 729, 747, 0,
	0, 1183, 1184, 0, 706, 707, 708, 709, 722, 715,
	720, 720, 0, 0, 82, 0, 0, 1746, 1749, 1750,
	1751, 1752, 1753, 1821, 1822, 0, 926, 684, 685, 686,
	0, 764, 764, 764, 677, 0, 379, 1365, 1367, 0,
	1362, 1372, 1373, 1375, 0, 1377, 0, 0, 1380, 1381,
	1382, 1351, 0, 0, 1313, 1464, 1466, 0, 0, 1418,
	1325, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 0, 1342, 0, 0, 0, 1343, 0, 1468, 1469,
	1238, 1239, 0, 0, 45, 0, 1728, 0, 0, 0,
	0, 1716, 1718, 1719, 0, 0, 1701, 0, 0, 70,
	117, 117, 50, 1425, 1426, 1427, 1429, 1446, 0, 1448,
	1450, 1299, 1300, 1244, 0, 1677, -2, 1679, -2, -2,
	-2, 1436, 1437, 1461, 1462, 1463, 0, 0, 0, 0,
	1459, 1441, 0, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1495, 1599, 1600, 1601, 0,
	1686, 0, 1687, 1493, 0, 0, 0, 1700, 1494, 1682,
	1502, 1467, 1234, 1235, 1684, 1685, 1683, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 1543, 0, 0,
	0, 0, 0, 1477, 1690, 0, 1477, 1690, 0, 0,
	2265, 2377, 2157, 0, 0, 0, 1673, 1670, 0, 0,
	0, 0, 2723, 2724, 0, 1585, 0, 0, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 0,
	0, 0, 1270, 1271, 1272, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 102, 0, 1408, 0, -2,
	0, 0, 94, 95, 0, 0, 0, 1769, 0, 0,
	0, 110, 111, 106, 1773, 673, 0, -2, 1780, 1690,
	1782, 1677, 0, 1727, -2, 539, 540, 541, 542, 0,
	784, 793, 0, 0, 782, 0, 784, 784, 0, 780,
	781, 545, 654, 652, 653, 575, 0, 605, 0, 643,
	643, 1664, 1665, 607, 643, 643, 610, 643, 643, 613,
	616, 617, 623, 0, 0, 601, 602, 603, 592, 0,
	593, 646, 595, 0, 596, 597, 598, 599, 546, 547,
	548, 549, 550, 801, 0, 296, 0, 0, 0, 0,
	0, 126, 1797, 127, 0, 390, 391, 0, 298, 0,
	334, 335, 148, 0, 0, 350, 0, 137, 0, 534,
	535, 0, 1074, 0, 1076, 339, 1078, 1089, 1090, 1079,
	0, 0, 0, 0, 0, 99, 0, 1170, 1120, 1121,
	1122, 1422, 0, 0, 1137, 1165, 1168, 1160, 0, 0,
	1148, 0, 1191, 1189, 1198, 1344, 0, 0, 464, 465,
	466, 488, 0, 1832, 1833, 1830, 1852, 0, 1856, 1858,
	0, 280, 282, 0, 0, 190, 0, 0, 273, 0,
	204, 0, 0, 0, 0, 0, 728, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1185, 714,
	0, 718, 0, 719, 703, 704, 83, 1745, 0, 0,
	1318, 764, 0, 765, 0, 0, 1035, 929, 930, 1037,
	-2, 1033, 1033, 764, 1033, 0, 0, 0, 0, 0,
	0, 967, 764, 1033, 1803, 0, 980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1025, 1026, 764, 764,
	764, 764, 764, 764, 764, 764, 0, 0, 764, 764,
	764, 764, 764, 764, 764, 764, 764, 764, 764, 764,
	764, 764, 764, 764, 764, 764, 764, 764, 764, 764,
	764, 0, 764, 764, 1029, 1070, 0, 1359, 1366, 0,
	0, 1360, 0, 1361, 1376, 1378, 1379, 1309, 0, 1351,
	1305, -2, 0, 1355, 1324, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 0, 74, 2473, 0, 77, 0, 0, 1722, 1723,
	1715, 0, 1790, 1791, 1702, 1703, 1422, 0, 0, 1236,
	1447, 1449, 1451, 0, 1467, 1438, 1459, 1442, 0, 1439,
	0, 1433, 1541, 0, 0, 0, 0, 0, 0, 1472,
	1539, 1540, 1542, 0, 0, 0, 1546, 0, 0, 1550,
	0, 0, 1592, 0, 0, 1593, 1555, 0, 0, 0,
	0, 0, 1561, 1712, 0, 1671, 0, 0, 1564, 1565,
	1566, 1567, 1587, 0, 0, 0, 0, 1588, 1589, 1590,
	1591, 1528, 0, 1529, 0, 0, 0, 0, 0, 1535,
	1536, 1537, 1538, 1253, 1253, 1253, 1253, 1253, 1253, 1253,
	1253, 1253, 1253, 1253, 1253, 1580, 0, 0, 1407, 0,
	1422, 0, 1422, 1422, 101, 0, 1417, 108, 109, 0,
	0, 115, 674, 675, 676, 1781, 0, 297, 536, 821,
	677, 0, 764, 764, 764, 0, 764, 764, 764, 764,
	764, 0, 0, 764, 764, 764, 764, 764, 764, 764,
	764, 764, 764, 764, 764, 764, 764, 764, 764, 764,
	0, 764, 764, 764, 764, 764, 764, 0, 764, 764,
	0, 0, 0, 0, 792, -2, -2, 784, 784, 784,
	783, 784, 784, 775, 785, 786, 776, 799, 555, 556,
	0, 558, 559, 560, 561, 562, 563, 564, 565, 0,
	0, 0, 0, 570, 0, 0, 0, 0, 663, 0,
	698, 700, 0, 0, 571, 655, 0, 0, 0, 606,
	643, 614, 608, 609, 611, 612, 0, 639, 0, 0,
	594, 0, 817, 0, 1816, 116, 1744, 0, 0, 392,
	393, 394, 1405, 0, 299, 300, 0, 0, 0, 0,
	0, 158, 0, 368, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 97, 343, 370, 0, 0, 1106, 1130,
	0, 808, 809, 1347, 1139, 1460, 1149, 1151, 1152, 1345,
	1346, 102, 0, 1854, 0, 0, 0, 0, 0, 0,
	292, 275, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 0, 0, 0,
	1747, 1748, 0, 690, 691, 692, 693, 694, 695, 696,
	928, 677, 1036, 0, 0, 0, 0, 1038, 0, 784,
	0, 0, 937, 938, 0, 1034, 918, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 764, 0, 959, 960, 961, 0, 962, 0, 0,
	0, 0, 0, 0, 0, 1804, 1805, 1806, 979, 0,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 764, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1018, 1019, 878, 879, 880, 881, 882, 894,
	895, 896, 883, 884, 885, 0, 0, 382, 0, 0,
	0, 1363, 0, 1368, 0, 1353, 1310, -2, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1470, 1240, 0, 0, 0, 75, 664,
	1729, 1730, 46, 1704, 71, 72, 117, 1245, 1689, 0,
	1440, 0, 1443, 1509, 1253, 1253, 1253, 1253, 1253, 0,
	641, 641, 641, 1649, 641, 648, 1652, 1654, 1655, 1656,
	641, 1658, 641, 1661, 1663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1668, 1563,
	1674, 0, 0, 0, 0, 0, 1246, 1247, 1249, 1530,
	1531, 1532, 1533, 1534, 1513, 1254, 1514, 1515, 1517, 1518,
	1520, 1521, 1522, 1523, 1525, 1526, 1527, 1754, 1754, 0,
	-2, 1736, 0, 1733, 1319, 1742, 1743, 0, 1422, 1762,
	0, 0, 0, 0, 1712, 1422, 92, 93, 0, 112,
	113, 114, 822, 904, 0, 0, 0, 764, 0, 764,
	0, 0, 0, 0, 0, 764, 764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 853, 0, 0, 0, 0, 0,
	0, 864, 865, 0, 0, 0, 0, 787, 641, 641,
	0, 782, 791, 768, 770, 771, 772, 774, 0, 800,
	557, 0, 0, 568, 0, 0, 669, 670, 671, 656,
	0, 0, 659, 660, 0, 1434, 1435, 1584, 1584, 1584,
	1584, 1584, 1584, 0, 0, 0, 0, 1584, 1584, 1584,
	0, 697, 699, 701, 702, 642, 644, 645, 615, 629,
	0, 630, 0, 649, 0, 804, 818, 819, 0, 118,
	0, 137, 0, 306, 0, 302, 0, 0, 0, 0,
	166, 0, 149, 150, 151, 153, 154, 0, 0, 0,
	147, 0, 352, 0, 355, 356, 357, 0, 0, 0,
	0, 0, 1075, 1077, 0, 0, 1350, 1095, 1423, 1168,
	664, 0, 292, 281, 283, 284, 0, 292, 295, 191,
	0, 192, 194, 0, 193, 739, 740, 741, 742, 743,
	744, 745, 746, 0, 0, 723, 721, 687, 688, 689,
	931, -2, 1033, 0, 0, 0, 1030, 0, 0, 1815,
	782, 1811, 0, 0, -2, 939, 940, 963, 964, 965,
	0, 1040, 0, 0, 0, 0, 945, 946, 947, 948,
	0, 764, 0, 0, 0, 0, 0, 0, 968, 969,
	970, 971, 1030, 0, 0, 975, 0, 0, 0, 0,
	0, 1047, 0, 0, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1024, 981, 982, 983, 984, 985, 986, 987,
	988, 0, 0, 991, 874, 875, 992, 993, 994, 995,
	996, 997, 998, 871, 872, 873, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 886, 887, 888, 889, 890,
	891, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 0, 1022, 0, 386, 383, 384, 0, 380, 0,
	379, 0, 0, 0, 1352, 0, 1322, 1356, 1419, 1420,
	1421, 1332, 1333, 0, 1335, 1336, 0, 1338, 1339, 0,
	1358, 0, 0, 78, 1844, 665, 1709, 0, 1237, 1510,
	1444, 1512, 1516, 1511, 1519, 1524, 1544, 1644, 664, 664,
	1650, 1651, 1653, 1657, 1659, 1660, 1662, 1548, 1545, 1547,
	1549, 0, 0, 0, 0, 1556, 0, 0, 0, 0,
	0, 0, 1672, 0, 0, 1577, 1578, 1251, 1250, 84,
	0, 85, 1754, 0, 0, 0, 0, 0, 0, -2,
	-2, -2, 2136, 2100, 1740, 1756, 0, 0, 1712, 0,
	0, 0, 0, 0, 1720, 91, 910, 899, 0, 0,
	908, 909, 905, 823, 824, 825, 0, 764, 0, 828,
	829, 831, 832, 833, 0, 0, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 0, 868, 0, 870, 752, 0, 1717,
	1717, 784, 784, 0, 0, 0, 0, 666, 667, 668,
	657, 658, 0, 662, 640, 0, 0, 0, 0, 116,
	136, 0, 117, 307, 308, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 301, 303, 304, 305, 379, 184,
	167, 168, 0, 0, 0, 0, 159, 160, 0, 0,
	0, 0, 0, 155, 156, 157, 351, 0, 0, 354,
	0, 0, 0, 0, 138, 139, 0, 141, 137, 0,
	0, 1138, 1844, 1406, 285, 292, 285, 0, 195, 749,
	750, 0, 933, 1031, 0, 554, 554, 0, 784, 784,
	0, 1062, 0, 966, 941, 943, 942, 944, 0, 0,
	951, 952, 1030, 0, 956, 0, 1041, 1042, 1043, 1044,
	972, 0, 0, 0, 0, 0, 1045, 1046, 0, 0,
	989, 990, 1020, 1021, 0, 892, 1066, 0, 0, 1071,
	381, 1070, 0, 373, 388, 389, 0, 1364, 1354, 0,
	0, 0, 1241, 0, 1846, 1840, 1265, 0, 0, 1645,
	1646, 1647, 1648, 0, 0, 0, 0, 1557, 1558, 1559,
	1594, 1562, 1669, 0, 0, 1712, 0, 0, 86, 1351,
	-2, 1734, 0, 0, 1741, 1319, 1758, 0, 103, 1720,
	1763, 1764, 1765, 1766, 1767, 90, 912, 0, 0, 0,
	0, 906, 826, 0, 830, 876, 877, 834, 835, 866,
	867, 0, 751, 755, 0, 764, 0, 764, 764, 762,
	763, 788, 789, 790, 769, 773, 0, 551, 0, 0,
	661, 647, 650, 0, 116, 118, 0, 118, 309, 310,
	311, 312, 314, 315, 0, 0, 0, 382, 130, 0,
	0, 169, 0, 0, 0, 0, 179, 180, 181, 182,
	183, 161, 162, 163, 164, 165, 152, 0, 0, 353,
	0, 360, 362, 0, 361, 363, 0, 135, 0, 1349,
	1846, 187, 0, 285, 189, 293, 932, 1032, 543, 544,
	0, 1815, 0, 1039, 0, 0, 0, 950, 953, 954,
	957, 973, 974, 0, 0, 978, 0, 0, 0, 1023,
	116, 387, 385, 382, 371, 375, 0, 0, 0, 0,
	1384, 0, 2565, 76, 1848, -2, 0, 68, 0, 1710,
	1711, 1705, 1706, 1708, 1551, 1553, 1552, 1554, 0, 0,
	0, 1575, 1576, 1255, 0, 0, 1732, 1735, 1737, 0,
	1757, 1759, 89, 1060, 0, 911, 0, 0, 0, 0,
	0, 827, 869, 756, 757, 0, 759, 0, 0, 0,
	566, 552, 553, 0, 569, 753, 142, 0, 0, 79,
	316, 317, 318, 319, 386, 185, 186, 170, 171, 0,
	173, 174, 0, 0, 0, 365, 0, 358, 359, 0,
	1094, 1800, 286, 188, 0, 0, 0, 1063, 0, 949,
	764, 0, 0, 977, 0, 1049, 893, 79, 386, 0,
	377, 0, 1334, 1337, 1340, 0, 0, 0, 0, 0,
	0, 1840, 0, 1842, 0, 1839, 0, 1266, 1267, 0,
	0, 1560, 0, 0, 0, 0, 0, 0, 1252, 0,
	0, 898, 0, 904, 900, 0, 0, 0, 0, 758,
	760, 761, 0, 551, 123, 754, 124, 0, 116, 395,
	116, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 0, 0, 0, 0, 0,
	79, 0, 79, 0, 0, 0, 440, 0, 79, 0,
	0, 175, 0, 177, 178, 364, 0, 140, 1351, 0,
	0, 753, 0, 0, 0, 0, 958, 976, 1048, 0,
	1025, 116, 1067, 0, 372, 0, 373, 1807, 1385, 1386,
	0, 0, 1387, 0, 0, 1847, 0, 1845, 0, 0,
	1841, 0, 0, 1707, 1595, 0, 1598, 1248, 1256, 0,
	1259, 0, 0, 0, 1295, 0, 1257, 1755, -2, 0,
	0, 901, 902, 0, 907, 0, 567, 0, 0, 0,
	142, 116, 0, 0, 129, 0, 0, 410, 0, 0,
	1817, 0, 0, -2, -2, -2, 1819, 437, 438, 0,
	489, 0, 0, 0, 454, 455, 0, 441, 0, 456,
	320, 0, 116, 172, 176, 366, 42, 0, 0, 934,
	0, 753, 0, 955, 1050, 1068, 116, 0, 373, 376,
	0, 1390, 0, 0, 0, 1849, 0, 0, 1268, 1269,
	1596, 0, 1260, 1261, 1262, 1263, 1264, 0, 1061, 0,
	906, 903, 0, 143, 0, 0, 125, 118, 396, 397,
	0, 0, 79, 411, 0, 79, 0, 0, 0, 664,
	0, 79, 79, 79, 79, 0, 79, 79, 0, 442,
	79, 79, 44, 0, 1801, 1802, 287, 288, 289, 291,
	753, 936, 0, 79, 374, 378, 1383, 1391, 1392, 0,
	0, 0, 1399, 0, 0, 1843, 1837, 0, 0, 1296,
	0, 0, 0, 144, 145, 79, 0, 79, 408, 0,
	79, 0, 0, 0, 0, 672, 1820, 0, 490, 321,
	0, 0, 0, 0, 0, 0, 0, 323, 116, 43,
	0, 935, 0, 2284, 116, 1393, 0, 0, 1394, 0,
	0, 0, 0, 0, 1388, 0, 0, 1258, 0, 0,
	794, 116, 398, 399, 400, 401, 402, 403, 79, 0,
	406, 0, 79, 0, 79, 420, 421, 422, 79, 429,
	431, 432, 433, 0, 435, 436, 424, 445, 322, 79,
	79, 79, 79, 0, 79, 439, 443, 132, 290, 1064,
	1065, 1069, 0, 0, 0, 0, 1395, 1396, 1400, 1402,
	0, 1389, 1597, 915, 0, 795, 796, 0, 128, 0,
	405, 80, 79, 0, -2, 0, 79, 0, 417, 0,
	423, 0, 434, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1401, 1403, 913, 0, 915,
	797, 0, 798, 0, 0, 0, 79, 0, 409, 413,
	0, 0, 79, 418, 0, 430, 425, 325, 446, 0,
	79, 448, 451, 444, 0, 0, 916, 914, 810, 812,
	813, 0, 0, 811, 404, 407, 79, 415, 0, 79,
	447, 0, 0, 1397, 1398, 814, 815, 816, 0, 79,
	0, 449, 452, 414, 0, -2, 450, 453, 416,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 760,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:556
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:607
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:616
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:622
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:644
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:656
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:687
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:703
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:750
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:758
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:802
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:811
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:833
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:841
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:854
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:862
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:881
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:909
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:934
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:959
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1004
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1022
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1045
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1058
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1071
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1125
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1129
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1139
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1146
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1201
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1240
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1267
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1287
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1308
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1344
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1368
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1390
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1422
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1437
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1471
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1483
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1496
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1532
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1542
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1570
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1624
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1638
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1644
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1705
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1709
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1713
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1738
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1753
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1769
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1785
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1800
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1812
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1826
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				Privileges:     allPriv,
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1840
		{
			yyVAL.val = &RevokePrivilege{
				Privileges:     yyDollar[2].val.([]Privilege),
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1853
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1863
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1873
		{
			yyVAL.val = &RevokeRole{
				Roles: yyDollar[2].val.([]AccountName),
				From:  yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1884
		{
			yyVAL.val = &RevokeProxy{
				On:   yyDollar[4].val.(AccountName),
				From: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1901
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1917
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1921
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2035
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2081
		{
			yyVAL.val = []string(nil)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2085
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2095
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2139
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2147
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2151
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2163
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2168
		{
			yyVAL.val = false
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.val = true
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2177
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2188
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2201
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2213
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2250
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2278
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2320
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2329
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2333
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2337
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2371
		{
			yyVAL.val = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2388
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2416
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2480
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2484
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2488
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2494
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2510
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2514
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2518
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2522
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2526
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2530
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2536
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2540
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2544
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2550
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2574
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2579
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2583
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2588
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2606
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2614
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2619
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.val = EventStatus_Enable
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.val = EventStatus_Disable
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2631
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2636
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.val = BeforeStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.val = AfterStr
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.val = InsertStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.val = UpdateStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.val = DeleteStr
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2679
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2683
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2687
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2704
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2708
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2714
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2718
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2722
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2726
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2742
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2748
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 414:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2753
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2758
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2764
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2782
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2788
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2792
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2796
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2800
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2804
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2811
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2839
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2871
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2883
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2888
		{
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2891
		{
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2899
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2905
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2909
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2913
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2924
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 449:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2928
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 450:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2932
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2943
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2947
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2951
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2968
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2980
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2984
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2992
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2998
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3008
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3012
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3018
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3032
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3048
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3060
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3068
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.val = &Resignal{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3086
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3094
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3098
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3104
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3120
		{
			yyVAL.val = Exprs(nil)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.val = Exprs(nil)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3192
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3219
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3249
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3259
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3264
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3281
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3366
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.val = BoolVal(false)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3382
		{
			yyVAL.val = BoolVal(false)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3386
		{
			yyVAL.val = BoolVal(true)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3391
		{
			yyVAL.val = ColumnType{}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3395
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3442
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3464
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3486
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3508
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3519
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3542
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3553
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3594
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3618
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3622
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3638
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3642
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3701
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3714
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3722
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3732
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3736
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3748
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3772
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3776
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3780
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3788
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3792
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3828
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3833
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3878
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3883
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3892
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3905
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3909
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3917
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3927
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3935
		{
			yyVAL.val = BoolVal(false)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3939
		{
			yyVAL.val = BoolVal(false)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.val = BoolVal(true)
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3948
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3962
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3988
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4005
		{
			yyVAL.val = ""
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4019
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4023
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4031
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4041
		{
			yyVAL.val = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4064
		{
			yyVAL.val = false
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.val = true
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4095
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4099
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4103
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4109
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4113
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4117
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4121
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4125
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4129
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4135
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4139
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4143
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4149
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = colKeyPrimary
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.val = colKey
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4167
		{
			yyVAL.val = colKeyUnique
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4171
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4183
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4187
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4207
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4211
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4219
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4255
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4259
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = false
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yyVAL.val = true
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.val = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = ""
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4286
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4296
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4315
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4324
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4335
		{
			yyVAL.val = false
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.val = true
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4340
		{
			yyVAL.bytes = nil
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4358
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4368
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4372
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4380
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4388
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4394
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4398
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4404
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4408
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4414
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4418
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4423
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4427
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4443
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4452
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4474
		{
			yyVAL.val = ""
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.val = ":="
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4496
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4500
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4504
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4508
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4512
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4516
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4529
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4533
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4539
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4562
		{
			yyVAL.val = ""
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4571
		{
			yyVAL.val = ""
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4589
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4595
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4605
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4609
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 794:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4619
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 795:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4623
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4627
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 797:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4631
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4635
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4640
		{
			yyVAL.bytes = []byte(nil)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4650
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4654
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4658
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4664
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4679
		{
			yyVAL.val = ""
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4683
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4693
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4699
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.val = Restrict
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.val = Cascade
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4713
		{
			yyVAL.val = NoAction
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4717
		{
			yyVAL.val = SetDefault
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4721
		{
			yyVAL.val = SetNull
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4726
		{
			yyVAL.val = true
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.val = true
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.val = false
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4739
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4743
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4747
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4753
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4757
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4765
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4769
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4773
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4781
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4785
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4797
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4801
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4809
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4813
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4817
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4865
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4869
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4873
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4877
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4881
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4893
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4901
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4917
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4921
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4925
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4929
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4933
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4937
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4941
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4947
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4951
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4961
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4965
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4975
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4981
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4990
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4994
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5004
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5008
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5018
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5022
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5026
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5030
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5048
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5059
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5063
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5076
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5083
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5092
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5100
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5110
		{
			yyVAL.val = false
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5114
		{
			yyVAL.val = true
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5119
		{
			yyVAL.val = ""
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5123
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5129
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5133
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5138
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5142
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5147
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 913:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5151
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 914:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5160
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5171
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5175
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5180
		{
			yyVAL.val = ""
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5184
		{
			yyVAL.val = ""
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5188
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5193
		{
			yyVAL.val = string("")
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5197
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5209
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5223
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5238
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5258
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5273
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5277
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5283
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5298
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 934:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5314
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 935:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5331
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 936:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5355
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5377
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5391
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5405
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5423
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5442
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5452
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5462
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5472
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5482
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5492
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5502
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5512
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5522
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5537
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5553
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5563
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5573
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5589
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5603
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5617
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5631
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5645
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5659
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5672
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5685
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5695
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5705
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5717
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5731
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5745
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5772
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5782
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5792
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5802
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5812
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5829
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5842
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5857
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5871
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5892
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5913
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5932
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5954
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5958
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5966
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5974
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5978
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5982
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5986
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5990
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5994
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5998
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6002
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6006
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6010
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6014
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6018
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6022
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6026
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6030
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6034
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6038
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6042
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6046
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6050
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6054
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6058
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6062
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6066
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6070
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6074
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6078
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6082
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6086
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6090
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6094
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6098
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6102
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6106
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6110
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6114
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6118
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6122
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6126
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6132
		{
			yyVAL.val = true
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6136
		{
			yyVAL.val = false
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6146
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
			}
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6166
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6170
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6174
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6179
		{
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6181
		{
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6184
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6188
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6194
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6198
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6204
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6208
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6212
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6216
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6220
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6224
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6228
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6232
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6236
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1048:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6240
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6244
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1050:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6248
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6252
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6256
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6269
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6273
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6277
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6281
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6285
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6289
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6293
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6298
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6302
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6308
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6312
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1064:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6318
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1065:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6322
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1066:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6328
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1067:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6358
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1068:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6384
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1069:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6412
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6442
		{
			yyVAL.val = EventName{}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6446
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6452
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6456
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6468
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6492
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6508
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6512
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6518
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6536
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6556
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6574
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6591
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6608
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6628
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6648
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6663
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6678
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6697
		{

		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6701
		{
			yyVAL.val = Restrict
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6705
		{
			yyVAL.val = Cascade
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6711
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6724
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6739
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1094:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6745
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6749
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6753
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6765
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6769
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6773
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6777
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6783
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6787
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6794
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6798
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6804
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6808
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6812
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6816
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6822
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6826
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6830
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6834
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6840
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6851
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6862
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6873
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6885
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6897
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6910
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6923
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6934
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6945
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6956
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6967
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6977
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6987
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7000
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7010
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7021
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7031
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7041
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7052
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7064
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7076
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7090
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7103
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7114
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7128
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7140
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7150
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7161
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7174
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7184
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7196
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7207
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7220
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7229
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7240
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7251
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7262
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7273
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7287
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7297
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7307
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7317
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7329
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7335
		{
			yyVAL.val = false
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7339
		{
			yyVAL.val = true
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7345
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7349
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7355
		{
			yyVAL.val = ""
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7359
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7363
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7369
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7373
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7377
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7381
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7387
		{
			yyVAL.val = ""
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7391
		{
			yyVAL.val = SessionStr
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7395
		{
			yyVAL.val = GlobalStr
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7401
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7413
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7426
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7438
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7442
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7448
		{
			yyVAL.val = &Begin{}
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7452
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7458
		{
			yyVAL.val = &Begin{}
		}
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7462
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7466
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7470
		{
			yyVAL.val = &Begin{}
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7475
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7479
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7484
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7488
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7493
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7497
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7503
		{
			yyVAL.val = &Commit{}
		}
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7509
		{
			yyVAL.val = &Rollback{}
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7515
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7521
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7525
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7529
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7533
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7539
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7545
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Statement: tryCastStatement(yyDollar[3].val)}
		}
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7549
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7553
		{
			yyVAL.val = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].val.(SelectStatement)}
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7559
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7567
		{
			yyVAL.val = ""
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7571
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7583
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7603
		{
			setAllowComments(yylex, true)
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7607
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7615
		{
			yyVAL.val = Comments(nil)
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7619
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7625
		{
			yyVAL.val = UnionStr
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7629
		{
			yyVAL.val = UnionAllStr
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7633
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7639
		{
			yyVAL.val = IntersectStr
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7643
		{
			yyVAL.val = IntersectAllStr
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7647
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7653
		{
			yyVAL.val = ExceptStr
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7657
		{
			yyVAL.val = ExceptAllStr
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7661
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7666
		{
			yyVAL.val = QueryOpts{}
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7670
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7681
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7692
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7703
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7714
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7725
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7737
		{
			yyVAL.val = ""
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7741
		{
			yyVAL.val = AllStr
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7745
		{
			yyVAL.val = DistinctStr
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7751
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7759
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7770
		{
			yyVAL.val = &StarExpr{}
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7774
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7778
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7782
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7788
		{
			yyVAL.val = &StarExpr{}
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7792
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7796
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7800
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7806
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7810
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7816
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7821
		{
			yyVAL.val = ColIdent{}
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7824
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7829
		{
			yyVAL.val = Exprs(nil)
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7833
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7838
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7842
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7847
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7851
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7855
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7862
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7885
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7900
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7904
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7908
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7912
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7919
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7927
		{
			yyVAL.val = Window(nil)
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7930
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7936
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7939
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7945
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7985
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7989
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7994
		{
			yyVAL.val = ColIdent{}
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7998
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8002
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8006
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8012
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8016
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8020
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8026
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8030
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8040
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8044
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8059
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8074
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8080
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8086
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8094
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8100
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8104
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8109
		{
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8111
		{
		}
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8115
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8125
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8140
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8144
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8148
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8152
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8158
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8162
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8166
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8170
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8174
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1332:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8180
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8184
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1334:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8188
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8194
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1336:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8198
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8202
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8206
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8210
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8214
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8220
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8226
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8230
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8236
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8240
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8244
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8249
		{
			yyVAL.val = Expr(nil)
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8253
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8259
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8263
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8268
		{
			yyVAL.val = Columns(nil)
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8272
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8278
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8282
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8288
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8292
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8298
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8302
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8316
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8320
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8324
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8328
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8334
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8336
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8340
		{
			yyVAL.val = JoinCondition{}
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8342
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8346
		{
			yyVAL.val = JoinCondition{}
		}
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8348
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8353
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8359
		{
			yyVAL.val = JoinStr
		}
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8363
		{
			yyVAL.val = JoinStr
		}
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8367
		{
			yyVAL.val = JoinStr
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8373
		{
			yyVAL.val = StraightJoinStr
		}
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8379
		{
			yyVAL.val = LeftJoinStr
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8383
		{
			yyVAL.val = LeftJoinStr
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8387
		{
			yyVAL.val = RightJoinStr
		}
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8391
		{
			yyVAL.val = RightJoinStr
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8395
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8399
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8405
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8409
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1383:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8419
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8426
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8431
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8437
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8441
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8445
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1389:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8450
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8457
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8461
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8465
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8469
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8473
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8477
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8481
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1397:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8485
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1398:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8489
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8493
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8499
		{
			yyVAL.val = &NullVal{}
		}
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8503
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8509
		{
			yyVAL.val = &NullVal{}
		}
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8513
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8519
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8523
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8529
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8535
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8539
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8545
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8549
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8553
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8557
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8561
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8565
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8571
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8575
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8581
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8586
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8590
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8594
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8598
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8603
		{
			yyVAL.val = Expr(nil)
		}
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8607
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8613
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8617
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8621
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8625
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8629
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8633
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8637
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8641
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8647
		{
			yyVAL.val = ""
		}
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8651
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8657
		{
			yyVAL.val = BoolVal(true)
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8661
		{
			yyVAL.val = BoolVal(false)
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8667
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8671
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8675
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8679
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1440:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8683
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8687
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8691
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8695
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1444:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8699
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8703
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8709
		{
			yyVAL.val = IsNullStr
		}
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8713
		{
			yyVAL.val = IsNotNullStr
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8717
		{
			yyVAL.val = IsTrueStr
		}
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8721
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8725
		{
			yyVAL.val = IsFalseStr
		}
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8729
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8735
		{
			yyVAL.val = EqualStr
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8739
		{
			yyVAL.val = LessThanStr
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8743
		{
			yyVAL.val = GreaterThanStr
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8747
		{
			yyVAL.val = LessEqualStr
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8751
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8755
		{
			yyVAL.val = NotEqualStr
		}
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8759
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8764
		{
			yyVAL.val = Expr(nil)
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8768
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8774
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8778
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8782
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8788
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8794
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8798
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8803
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8810
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8814
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8820
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8824
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8830
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8834
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8838
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8842
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8846
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8850
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8854
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8858
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8862
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8866
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8870
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8874
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8878
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8882
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8886
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8890
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8894
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8898
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8902
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8906
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8910
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8914
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8918
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8922
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8926
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8930
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8938
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8952
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8956
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8960
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8980
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1510:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8984
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1511:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8994
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1512:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8998
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1513:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9002
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1514:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9006
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1515:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9010
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1516:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9014
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1517:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9018
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1518:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9022
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1519:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9026
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9030
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9034
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9038
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9042
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1524:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9046
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9050
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9054
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9058
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9067
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9071
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9075
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9079
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9083
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9087
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9091
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9095
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9099
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9103
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9107
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9118
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9122
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9126
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9130
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9134
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1544:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9138
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1545:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9142
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9146
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1547:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9150
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1548:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9154
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1549:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9158
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9162
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1551:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9166
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1552:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9170
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1553:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9174
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1554:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9178
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9182
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1556:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9186
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1557:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9190
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1558:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9194
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1559:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9198
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1560:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9202
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9206
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1562:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9210
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9214
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9218
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9222
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9227
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9231
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9242
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9246
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9250
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9255
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9259
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9263
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9267
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1575:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9271
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1576:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9275
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1577:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9279
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1578:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9283
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9291
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9295
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9299
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9303
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9307
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9320
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9324
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9334
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9338
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9342
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9346
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9350
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9354
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9360
		{
			yyVAL.val = ""
		}
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9364
		{
			yyVAL.val = BooleanModeStr
		}
	case 1596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9368
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1597:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9372
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9376
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9382
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9386
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9390
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9396
		{
			yyVAL.val = Armscii8Str
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9400
		{
			yyVAL.val = AsciiStr
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9404
		{
			yyVAL.val = Big5Str
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9408
		{
			yyVAL.val = UBinaryStr
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9412
		{
			yyVAL.val = Cp1250Str
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9416
		{
			yyVAL.val = Cp1251Str
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9420
		{
			yyVAL.val = Cp1256Str
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9424
		{
			yyVAL.val = Cp1257Str
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9428
		{
			yyVAL.val = Cp850Str
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9432
		{
			yyVAL.val = Cp852Str
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9436
		{
			yyVAL.val = Cp866Str
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9440
		{
			yyVAL.val = Cp932Str
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9444
		{
			yyVAL.val = Dec8Str
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9448
		{
			yyVAL.val = EucjpmsStr
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9452
		{
			yyVAL.val = EuckrStr
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9456
		{
			yyVAL.val = Gb18030Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9460
		{
			yyVAL.val = Gb2312Str
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9464
		{
			yyVAL.val = GbkStr
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9468
		{
			yyVAL.val = Geostd8Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9472
		{
			yyVAL.val = GreekStr
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9476
		{
			yyVAL.val = HebrewStr
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9480
		{
			yyVAL.val = Hp8Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9484
		{
			yyVAL.val = Keybcs2Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9488
		{
			yyVAL.val = Koi8rStr
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9492
		{
			yyVAL.val = Koi8uStr
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9496
		{
			yyVAL.val = Latin1Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9500
		{
			yyVAL.val = Latin2Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9504
		{
			yyVAL.val = Latin5Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9508
		{
			yyVAL.val = Latin7Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9512
		{
			yyVAL.val = MacceStr
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9516
		{
			yyVAL.val = MacromanStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9520
		{
			yyVAL.val = SjisStr
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9524
		{
			yyVAL.val = Swe7Str
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9528
		{
			yyVAL.val = Tis620Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9532
		{
			yyVAL.val = Ucs2Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9536
		{
			yyVAL.val = UjisStr
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9540
		{
			yyVAL.val = Utf16Str
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9544
		{
			yyVAL.val = Utf16leStr
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9548
		{
			yyVAL.val = Utf32Str
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9552
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9556
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9560
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9566
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9570
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9574
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9578
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9582
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9586
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9590
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9594
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9601
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9605
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9609
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9613
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9617
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9621
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9625
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9629
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9633
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9637
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9641
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9645
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9651
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9655
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9660
		{
			yyVAL.val = Expr(nil)
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9664
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9669
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9673
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9679
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9683
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1672:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9689
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9694
		{
			yyVAL.val = Expr(nil)
		}
	case 1674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9698
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9704
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9708
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9712
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9716
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9720
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9724
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9728
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9732
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9736
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9740
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9744
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9748
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9752
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9756
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9760
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9766
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9770
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9774
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9778
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9782
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9786
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9790
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9794
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9798
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9802
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9806
		{
			yyVAL.val = &NullVal{}
		}
	case 1701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9812
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9816
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9820
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9825
		{
			yyVAL.val = Exprs(nil)
		}
	case 1705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9829
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9835
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9839
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9845
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9850
		{
			yyVAL.val = Expr(nil)
		}
	case 1710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9854
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9860
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9865
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9869
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9875
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9879
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9885
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9890
		{
			yyVAL.val = AscScr
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9894
		{
			yyVAL.val = AscScr
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9898
		{
			yyVAL.val = DescScr
		}
	case 1720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9903
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9907
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9911
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9921
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9925
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9929
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9934
		{
			yyVAL.val = ""
		}
	case 1728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9938
		{
			yyVAL.val = ForUpdateStr
		}
	case 1729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9942
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9946
		{
			yyVAL.val = ShareModeStr
		}
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9952
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9956
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9976
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9980
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9985
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9992
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9996
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10000
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1739:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10005
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10012
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10016
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10025
		{
			yyVAL.val = Columns(nil)
		}
	case 1745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10029
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10035
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10039
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10045
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10049
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10053
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10057
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10061
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10065
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10070
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10074
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10080
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10084
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10090
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10094
		{
			yyVAL.val = ValTuple{}
		}
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10100
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10106
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10116
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10120
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10126
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10129
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10133
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10137
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10143
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10147
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10153
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10164
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10177
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10190
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10196
		{
			yyVAL.val = SetScope_Global
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10200
		{
			yyVAL.val = SetScope_Session
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10206
		{
			yyVAL.val = SetScope_Session
		}
	case 1777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10210
		{
			yyVAL.val = SetScope_Persist
		}
	case 1778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10214
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10220
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10224
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10228
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10238
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10245
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10252
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10256
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10260
		{
			yyVAL.val = &Default{}
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10264
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10273
		{
			yyVAL.val = 0
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10275
		{
			yyVAL.val = 1
		}
	case 1794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10278
		{
			yyVAL.val = 0
		}
	case 1795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10280
		{
			yyVAL.val = 1
		}
	case 1796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10283
		{
			yyVAL.val = 0
		}
	case 1797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10285
		{
			yyVAL.val = 1
		}
	case 1798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10288
		{
			yyVAL.val = ""
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10290
		{
			yyVAL.val = IgnoreStr
		}
	case 1800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10293
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10295
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10297
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10300
		{
			yyVAL.val = struct{}{}
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10302
		{
			yyVAL.val = struct{}{}
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10306
		{
			yyVAL.val = struct{}{}
		}
	case 1806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10308
		{
			yyVAL.val = struct{}{}
		}
	case 1807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10311
		{
			yyVAL.val = struct{}{}
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10313
		{
			yyVAL.val = struct{}{}
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10317
		{
			yyVAL.val = UniqueStr
		}
	case 1810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10319
		{
			yyVAL.val = FulltextStr
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10321
		{
			yyVAL.val = SpatialStr
		}
	case 1812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10323
		{
			yyVAL.val = VectorStr
		}
	case 1813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10326
		{
			yyVAL.val = ""
		}
	case 1814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10328
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10331
		{
			yyVAL.val = ColIdent{}
		}
	case 1816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10333
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10337
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10341
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10347
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10351
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10358
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10364
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10368
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10375
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10379
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10383
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10388
		{
			yyVAL.val = string("")
		}
	case 1830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10390
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10393
		{
			yyVAL.val = string("")
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10395
		{
			yyVAL.val = IgnoreStr
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10397
		{
			yyVAL.val = ReplaceStr
		}
	case 1834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10400
		{
			yyVAL.val = BoolVal(false)
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10402
		{
			yyVAL.val = BoolVal(true)
		}
	case 1836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10405
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10409
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10414
		{
			yyVAL.val = BoolVal(false)
		}
	case 1839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10418
		{
			yyVAL.val = BoolVal(true)
		}
	case 1840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10423
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10427
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10432
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10436
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10444
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10448
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10453
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10457
		{
			yyVAL.val = &Lines{StartingBy: yyDollar[2].val.(*SQLVal), TerminatedBy: yyDollar[3].val.(*SQLVal)}
		}
	case 1848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10462
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10466
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10472
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10478
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10482
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10488
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10503
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10521
		{
			yyVAL.val = LockRead
		}
	case 1856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10525
		{
			yyVAL.val = LockReadLocal
		}
	case 1857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10529
		{
			yyVAL.val = LockWrite
		}
	case 1858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10533
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10539
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10545
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10556
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10566
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11493
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11502
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
