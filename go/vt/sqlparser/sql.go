// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const PLAN = 57556
const MAXVALUE = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const TRIGGERS = 57563
const FUNCTION = 57564
const STATUS = 57565
const VARIABLES = 57566
const WARNINGS = 57567
const ERRORS = 57568
const KILL = 57569
const CONNECTION = 57570
const SEQUENCE = 57571
const ENABLE = 57572
const DISABLE = 57573
const EACH = 57574
const ROW = 57575
const BEFORE = 57576
const FOLLOWS = 57577
const PRECEDES = 57578
const DEFINER = 57579
const INVOKER = 57580
const INOUT = 57581
const OUT = 57582
const DETERMINISTIC = 57583
const CONTAINS = 57584
const READS = 57585
const MODIFIES = 57586
const SQL = 57587
const SECURITY = 57588
const TEMPORARY = 57589
const ALGORITHM = 57590
const MERGE = 57591
const TEMPTABLE = 57592
const UNDEFINED = 57593
const EVENT = 57594
const EVENTS = 57595
const SCHEDULE = 57596
const EVERY = 57597
const STARTS = 57598
const ENDS = 57599
const COMPLETION = 57600
const PRESERVE = 57601
const CASCADED = 57602
const INSTANT = 57603
const INPLACE = 57604
const COPY = 57605
const DISCARD = 57606
const IMPORT = 57607
const SHARED = 57608
const EXCLUSIVE = 57609
const WITHOUT = 57610
const VALIDATION = 57611
const COALESCE = 57612
const EXCHANGE = 57613
const REBUILD = 57614
const REMOVE = 57615
const PARTITIONING = 57616
const CLASS_ORIGIN = 57617
const SUBCLASS_ORIGIN = 57618
const MESSAGE_TEXT = 57619
const MYSQL_ERRNO = 57620
const CONSTRAINT_CATALOG = 57621
const CONSTRAINT_SCHEMA = 57622
const CONSTRAINT_NAME = 57623
const CATALOG_NAME = 57624
const SCHEMA_NAME = 57625
const TABLE_NAME = 57626
const COLUMN_NAME = 57627
const CURSOR_NAME = 57628
const SIGNAL = 57629
const RESIGNAL = 57630
const SQLSTATE = 57631
const DECLARE = 57632
const CONDITION = 57633
const CURSOR = 57634
const CONTINUE = 57635
const EXIT = 57636
const UNDO = 57637
const HANDLER = 57638
const FOUND = 57639
const SQLWARNING = 57640
const SQLEXCEPTION = 57641
const FETCH = 57642
const OPEN = 57643
const CLOSE = 57644
const LOOP = 57645
const LEAVE = 57646
const ITERATE = 57647
const REPEAT = 57648
const UNTIL = 57649
const WHILE = 57650
const DO = 57651
const RETURN = 57652
const USER = 57653
const IDENTIFIED = 57654
const ROLE = 57655
const REUSE = 57656
const GRANT = 57657
const GRANTS = 57658
const REVOKE = 57659
const NONE = 57660
const ATTRIBUTE = 57661
const RANDOM = 57662
const PASSWORD = 57663
const INITIAL = 57664
const AUTHENTICATION = 57665
const SSL = 57666
const X509 = 57667
const CIPHER = 57668
const ISSUER = 57669
const SUBJECT = 57670
const ACCOUNT = 57671
const EXPIRE = 57672
const NEVER = 57673
const OPTION = 57674
const OPTIONAL = 57675
const ADMIN = 57676
const PRIVILEGES = 57677
const MAX_QUERIES_PER_HOUR = 57678
const MAX_UPDATES_PER_HOUR = 57679
const MAX_CONNECTIONS_PER_HOUR = 57680
const MAX_USER_CONNECTIONS = 57681
const FLUSH = 57682
const FAILED_LOGIN_ATTEMPTS = 57683
const PASSWORD_LOCK_TIME = 57684
const REQUIRE = 57685
const PROXY = 57686
const ROUTINE = 57687
const TABLESPACE = 57688
const CLIENT = 57689
const SLAVE = 57690
const EXECUTE = 57691
const FILE = 57692
const RELOAD = 57693
const REPLICATION = 57694
const SHUTDOWN = 57695
const SUPER = 57696
const USAGE = 57697
const LOGS = 57698
const ENGINE = 57699
const ERROR = 57700
const GENERAL = 57701
const HOSTS = 57702
const OPTIMIZER_COSTS = 57703
const RELAY = 57704
const SLOW = 57705
const USER_RESOURCES = 57706
const NO_WRITE_TO_BINLOG = 57707
const CHANNEL = 57708
const APPLICATION_PASSWORD_ADMIN = 57709
const AUDIT_ABORT_EXEMPT = 57710
const AUDIT_ADMIN = 57711
const AUTHENTICATION_POLICY_ADMIN = 57712
const BACKUP_ADMIN = 57713
const BINLOG_ADMIN = 57714
const BINLOG_ENCRYPTION_ADMIN = 57715
const CLONE_ADMIN = 57716
const CONNECTION_ADMIN = 57717
const ENCRYPTION_KEY_ADMIN = 57718
const FIREWALL_ADMIN = 57719
const FIREWALL_EXEMPT = 57720
const FIREWALL_USER = 57721
const FLUSH_OPTIMIZER_COSTS = 57722
const FLUSH_STATUS = 57723
const FLUSH_TABLES = 57724
const FLUSH_USER_RESOURCES = 57725
const GROUP_REPLICATION_ADMIN = 57726
const GROUP_REPLICATION_STREAM = 57727
const INNODB_REDO_LOG_ARCHIVE = 57728
const INNODB_REDO_LOG_ENABLE = 57729
const NDB_STORED_USER = 57730
const PASSWORDLESS_USER_ADMIN = 57731
const PERSIST_RO_VARIABLES_ADMIN = 57732
const REPLICATION_APPLIER = 57733
const REPLICATION_SLAVE_ADMIN = 57734
const RESOURCE_GROUP_ADMIN = 57735
const RESOURCE_GROUP_USER = 57736
const ROLE_ADMIN = 57737
const SENSITIVE_VARIABLES_OBSERVER = 57738
const SESSION_VARIABLES_ADMIN = 57739
const SET_USER_ID = 57740
const SHOW_ROUTINE = 57741
const SKIP_QUERY_REWRITE = 57742
const SYSTEM_VARIABLES_ADMIN = 57743
const TABLE_ENCRYPTION_ADMIN = 57744
const TP_CONNECTION_ADMIN = 57745
const VERSION_TOKEN_ADMIN = 57746
const XA_RECOVER_ADMIN = 57747
const REPLICA = 57748
const REPLICAS = 57749
const SOURCE = 57750
const STOP = 57751
const RESET = 57752
const FILTER = 57753
const LOG = 57754
const MASTER = 57755
const SOURCE_HOST = 57756
const SOURCE_SSL = 57757
const SOURCE_USER = 57758
const SOURCE_PASSWORD = 57759
const SOURCE_PORT = 57760
const SOURCE_CONNECT_RETRY = 57761
const SOURCE_RETRY_COUNT = 57762
const SOURCE_AUTO_POSITION = 57763
const REPLICATE_DO_TABLE = 57764
const REPLICATE_IGNORE_TABLE = 57765
const IO_THREAD = 57766
const SQL_THREAD = 57767
const BEGIN = 57768
const START = 57769
const TRANSACTION = 57770
const COMMIT = 57771
const ROLLBACK = 57772
const SAVEPOINT = 57773
const WORK = 57774
const RELEASE = 57775
const CHAIN = 57776
const CONSISTENT = 57777
const SNAPSHOT = 57778
const BIT = 57779
const TINYINT = 57780
const SMALLINT = 57781
const MEDIUMINT = 57782
const INT = 57783
const INTEGER = 57784
const BIGINT = 57785
const INTNUM = 57786
const SERIAL = 57787
const INT1 = 57788
const INT2 = 57789
const INT3 = 57790
const INT4 = 57791
const INT8 = 57792
const REAL = 57793
const DOUBLE = 57794
const FLOAT_TYPE = 57795
const DECIMAL = 57796
const NUMERIC = 57797
const DEC = 57798
const FIXED = 57799
const PRECISION = 57800
const TIME = 57801
const TIMESTAMP = 57802
const DATETIME = 57803
const CHAR = 57804
const VARCHAR = 57805
const BOOL = 57806
const CHARACTER = 57807
const VARBINARY = 57808
const NCHAR = 57809
const NVARCHAR = 57810
const NATIONAL = 57811
const VARYING = 57812
const VARCHARACTER = 57813
const TEXT = 57814
const TINYTEXT = 57815
const MEDIUMTEXT = 57816
const LONGTEXT = 57817
const LONG = 57818
const BLOB = 57819
const TINYBLOB = 57820
const MEDIUMBLOB = 57821
const LONGBLOB = 57822
const JSON = 57823
const ENUM = 57824
const GEOMETRY = 57825
const POINT = 57826
const LINESTRING = 57827
const POLYGON = 57828
const GEOMETRYCOLLECTION = 57829
const MULTIPOINT = 57830
const MULTILINESTRING = 57831
const MULTIPOLYGON = 57832
const LOCAL = 57833
const LOW_PRIORITY = 57834
const SKIP = 57835
const LOCKED = 57836
const NULLX = 57837
const AUTO_INCREMENT = 57838
const APPROXNUM = 57839
const SIGNED = 57840
const UNSIGNED = 57841
const ZEROFILL = 57842
const SRID = 57843
const COLLATION = 57844
const DATABASES = 57845
const SCHEMAS = 57846
const TABLES = 57847
const FULL = 57848
const PROCESSLIST = 57849
const COLUMNS = 57850
const FIELDS = 57851
const ENGINES = 57852
const PLUGINS = 57853
const NAMES = 57854
const CHARSET = 57855
const GLOBAL = 57856
const SESSION = 57857
const ISOLATION = 57858
const LEVEL = 57859
const READ = 57860
const WRITE = 57861
const ONLY = 57862
const REPEATABLE = 57863
const COMMITTED = 57864
const UNCOMMITTED = 57865
const SERIALIZABLE = 57866
const ENCRYPTION = 57867
const CURRENT_TIMESTAMP = 57868
const NOW = 57869
const DATABASE = 57870
const CURRENT_DATE = 57871
const CURRENT_USER = 57872
const CURRENT_TIME = 57873
const LOCALTIME = 57874
const LOCALTIMESTAMP = 57875
const UTC_DATE = 57876
const UTC_TIME = 57877
const UTC_TIMESTAMP = 57878
const REPLACE = 57879
const CONVERT = 57880
const CAST = 57881
const POSITION = 57882
const SUBSTR = 57883
const SUBSTRING = 57884
const TRIM = 57885
const LEADING = 57886
const TRAILING = 57887
const BOTH = 57888
const GROUP_CONCAT = 57889
const SEPARATOR = 57890
const TIMESTAMPADD = 57891
const TIMESTAMPDIFF = 57892
const EXTRACT = 57893
const GET_FORMAT = 57894
const OVER = 57895
const WINDOW = 57896
const GROUPING = 57897
const CURRENT = 57898
const AVG = 57899
const BIT_AND = 57900
const BIT_OR = 57901
const BIT_XOR = 57902
const COUNT = 57903
const JSON_ARRAYAGG = 57904
const JSON_OBJECTAGG = 57905
const MAX = 57906
const MIN = 57907
const STDDEV_POP = 57908
const STDDEV = 57909
const STD = 57910
const STDDEV_SAMP = 57911
const SUM = 57912
const VAR_POP = 57913
const VARIANCE = 57914
const VAR_SAMP = 57915
const CUME_DIST = 57916
const DENSE_RANK = 57917
const FIRST_VALUE = 57918
const LAG = 57919
const LAST_VALUE = 57920
const LEAD = 57921
const NTH_VALUE = 57922
const NTILE = 57923
const ROW_NUMBER = 57924
const PERCENT_RANK = 57925
const RANK = 57926
const DUAL = 57927
const JSON_TABLE = 57928
const PATH = 57929
const AVG_ROW_LENGTH = 57930
const CHECKSUM = 57931
const COMPACT = 57932
const COMPRESSED = 57933
const COMPRESSION = 57934
const DISK = 57935
const DIRECTORY = 57936
const DELAY_KEY_WRITE = 57937
const DYNAMIC = 57938
const ENGINE_ATTRIBUTE = 57939
const ENCRYPTED = 57940
const ENCRYPTION_KEY_ID = 57941
const HASH = 57942
const INSERT_METHOD = 57943
const ITEF_QUOTES = 57944
const LIST = 57945
const MIN_ROWS = 57946
const MAX_ROWS = 57947
const PACK_KEYS = 57948
const MEMORY = 57949
const PAGE_CHECKSUM = 57950
const PAGE_COMPRESSED = 57951
const PAGE_COMPRESSION_LEVEL = 57952
const PARTITIONS = 57953
const REDUNDANT = 57954
const ROW_FORMAT = 57955
const SECONDARY_ENGINE = 57956
const SECONDARY_ENGINE_ATTRIBUTE = 57957
const STATS_AUTO_RECALC = 57958
const STATS_PERSISTENT = 57959
const STATS_SAMPLE_PAGES = 57960
const STORAGE = 57961
const SUBPARTITION = 57962
const SUBPARTITIONS = 57963
const TABLE_CHECKSUM = 57964
const TRANSACTIONAL = 57965
const VERSIONING = 57966
const YES = 57967
const PREPARE = 57968
const DEALLOCATE = 57969
const MATCH = 57970
const AGAINST = 57971
const BOOLEAN = 57972
const LANGUAGE = 57973
const WITH = 57974
const QUERY = 57975
const EXPANSION = 57976
const MICROSECOND = 57977
const SECOND = 57978
const MINUTE = 57979
const HOUR = 57980
const DAY = 57981
const WEEK = 57982
const MONTH = 57983
const QUARTER = 57984
const YEAR = 57985
const SECOND_MICROSECOND = 57986
const MINUTE_MICROSECOND = 57987
const MINUTE_SECOND = 57988
const HOUR_MICROSECOND = 57989
const HOUR_SECOND = 57990
const HOUR_MINUTE = 57991
const DAY_MICROSECOND = 57992
const DAY_SECOND = 57993
const DAY_MINUTE = 57994
const DAY_HOUR = 57995
const YEAR_MONTH = 57996
const NAME = 57997
const SYSTEM = 57998
const ACCESSIBLE = 57999
const ASENSITIVE = 58000
const CUBE = 58001
const DELAYED = 58002
const DISTINCTROW = 58003
const EMPTY = 58004
const FLOAT4 = 58005
const FLOAT8 = 58006
const GET = 58007
const HIGH_PRIORITY = 58008
const INSENSITIVE = 58009
const IO_AFTER_GTIDS = 58010
const IO_BEFORE_GTIDS = 58011
const LINEAR = 58012
const MASTER_BIND = 58013
const MASTER_SSL_VERIFY_SERVER_CERT = 58014
const MIDDLEINT = 58015
const PURGE = 58016
const READ_WRITE = 58017
const RLIKE = 58018
const SENSITIVE = 58019
const SPECIFIC = 58020
const SQL_BIG_RESULT = 58021
const SQL_SMALL_RESULT = 58022
const UNUSED = 58023
const DESCRIPTION = 58024
const LATERAL = 58025
const MEMBER = 58026
const RECURSIVE = 58027
const BUCKETS = 58028
const CLONE = 58029
const COMPONENT = 58030
const DEFINITION = 58031
const ENFORCED = 58032
const NOT_ENFORCED = 58033
const EXCLUDE = 58034
const GEOMCOLLECTION = 58035
const GET_MASTER_PUBLIC_KEY = 58036
const HISTOGRAM = 58037
const HISTORY = 58038
const INACTIVE = 58039
const INVISIBLE = 58040
const MASTER_COMPRESSION_ALGORITHMS = 58041
const MASTER_PUBLIC_KEY_PATH = 58042
const MASTER_TLS_CIPHERSUITES = 58043
const MASTER_ZSTD_COMPRESSION_LEVEL = 58044
const NESTED = 58045
const NETWORK_NAMESPACE = 58046
const NOWAIT = 58047
const NULLS = 58048
const OJ = 58049
const OLD = 58050
const ORDINALITY = 58051
const ORGANIZATION = 58052
const OTHERS = 58053
const PERSIST = 58054
const PERSIST_ONLY = 58055
const PRIVILEGE_CHECKS_USER = 58056
const PROCESS = 58057
const REFERENCE = 58058
const REQUIRE_ROW_FORMAT = 58059
const RESOURCE = 58060
const RESPECT = 58061
const RESTART = 58062
const RETAIN = 58063
const SECONDARY = 58064
const SECONDARY_LOAD = 58065
const SECONDARY_UNLOAD = 58066
const THREAD_PRIORITY = 58067
const TIES = 58068
const VCPU = 58069
const VISIBLE = 58070
const INFILE = 58071
const ACTIVE = 58072
const AGGREGATE = 58073
const ANY = 58074
const ARRAY = 58075
const ASCII = 58076
const AT = 58077
const AUTOEXTEND_SIZE = 58078
const GENERATED = 58079
const ALWAYS = 58080
const STORED = 58081
const VIRTUAL = 58082
const NVAR = 58083
const PASSWORD_LOCK = 58084

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	762, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1804,
	200, 1825,
	-2, 333,
	-1, 62,
	242, 1178,
	243, 1178,
	-2, 1167,
	-1, 90,
	271, 333,
	-2, 1810,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 544,
	1, 2506,
	6, 2506,
	7, 2506,
	28, 2506,
	187, 2506,
	762, 2506,
	-2, 1213,
	-1, 557,
	187, 1835,
	-2, 1829,
	-1, 558,
	187, 1836,
	-2, 1830,
	-1, 664,
	1, 681,
	762, 681,
	-2, 679,
	-1, 673,
	1, 1319,
	8, 1319,
	9, 1319,
	10, 1319,
	17, 1319,
	18, 1319,
	19, 1319,
	20, 1319,
	22, 1319,
	24, 1319,
	34, 1319,
	35, 1319,
	64, 1319,
	65, 1319,
	66, 1319,
	67, 1319,
	68, 1319,
	70, 1319,
	71, 1319,
	74, 1319,
	75, 1319,
	77, 1319,
	78, 1319,
	96, 1319,
	525, 1319,
	573, 1319,
	651, 1319,
	762, 1319,
	-2, 1819,
	-1, 678,
	1, 1427,
	8, 1427,
	9, 1427,
	10, 1427,
	17, 1427,
	18, 1427,
	19, 1427,
	20, 1427,
	22, 1427,
	24, 1427,
	34, 1427,
	35, 1427,
	64, 1427,
	65, 1427,
	66, 1427,
	67, 1427,
	68, 1427,
	70, 1427,
	71, 1427,
	74, 1427,
	75, 1427,
	77, 1427,
	78, 1427,
	96, 1427,
	525, 1427,
	573, 1427,
	651, 1427,
	762, 1427,
	-2, 1819,
	-1, 706,
	187, 2203,
	-2, 1441,
	-1, 739,
	187, 2311,
	-2, 1711,
	-1, 740,
	187, 2392,
	-2, 1443,
	-1, 741,
	187, 2223,
	-2, 1444,
	-1, 810,
	187, 2174,
	-2, 1675,
	-1, 813,
	187, 2189,
	-2, 1593,
	-1, 814,
	187, 2192,
	-2, 1593,
	-1, 815,
	187, 2402,
	-2, 1593,
	-1, 817,
	187, 2190,
	-2, 1593,
	-1, 818,
	187, 2403,
	-2, 1593,
	-1, 819,
	187, 2404,
	-2, 1593,
	-1, 878,
	187, 2191,
	-2, 1593,
	-1, 961,
	187, 2291,
	-2, 1593,
	-1, 962,
	187, 2292,
	-2, 1593,
	-1, 1074,
	109, 2519,
	120, 2519,
	187, 2519,
	-2, 1786,
	-1, 1075,
	109, 2650,
	120, 2650,
	187, 2650,
	-2, 1787,
	-1, 1080,
	109, 2547,
	120, 2547,
	187, 2547,
	-2, 1788,
	-1, 1081,
	109, 2598,
	120, 2598,
	187, 2598,
	-2, 1789,
	-1, 1082,
	109, 2599,
	120, 2599,
	187, 2599,
	-2, 1790,
	-1, 1083,
	109, 2446,
	120, 2446,
	187, 2446,
	-2, 1795,
	-1, 1085,
	109, 2575,
	120, 2575,
	187, 2575,
	-2, 1797,
	-1, 1258,
	452, 1192,
	-2, 1196,
	-1, 1260,
	452, 1192,
	-2, 1196,
	-1, 1386,
	1, 681,
	762, 681,
	-2, 679,
	-1, 1388,
	1, 682,
	762, 682,
	-2, 679,
	-1, 1411,
	1, 1320,
	8, 1320,
	9, 1320,
	10, 1320,
	17, 1320,
	18, 1320,
	19, 1320,
	20, 1320,
	22, 1320,
	24, 1320,
	34, 1320,
	35, 1320,
	64, 1320,
	65, 1320,
	66, 1320,
	67, 1320,
	68, 1320,
	70, 1320,
	71, 1320,
	74, 1320,
	75, 1320,
	77, 1320,
	78, 1320,
	96, 1320,
	525, 1320,
	573, 1320,
	651, 1320,
	762, 1320,
	-2, 1819,
	-1, 1422,
	1, 1427,
	8, 1427,
	9, 1427,
	10, 1427,
	17, 1427,
	18, 1427,
	19, 1427,
	20, 1427,
	22, 1427,
	24, 1427,
	34, 1427,
	35, 1427,
	64, 1427,
	65, 1427,
	66, 1427,
	67, 1427,
	68, 1427,
	70, 1427,
	71, 1427,
	74, 1427,
	75, 1427,
	77, 1427,
	78, 1427,
	96, 1427,
	525, 1427,
	573, 1427,
	651, 1427,
	762, 1427,
	-2, 1819,
	-1, 1716,
	1, 681,
	762, 681,
	-2, 679,
	-1, 1718,
	1, 681,
	762, 681,
	-2, 679,
	-1, 2275,
	187, 1839,
	-2, 1687,
	-1, 2278,
	187, 2737,
	-2, 1690,
	-1, 2279,
	187, 2738,
	-2, 1691,
	-1, 2280,
	187, 1838,
	-2, 1834,
	-1, 2430,
	75, 100,
	77, 100,
	-2, 104,
	-1, 2448,
	187, 2315,
	-2, 1791,
	-1, 2455,
	1, 900,
	762, 900,
	-2, 679,
	-1, 2643,
	49, 921,
	206, 924,
	208, 921,
	209, 921,
	210, 921,
	-2, 1038,
	-1, 2724,
	8, 59,
	9, 59,
	10, 59,
	-2, 1473,
	-1, 2741,
	1, 1365,
	8, 1365,
	9, 1365,
	10, 1365,
	17, 1365,
	18, 1365,
	19, 1365,
	20, 1365,
	22, 1365,
	24, 1365,
	34, 1365,
	35, 1365,
	64, 1365,
	65, 1365,
	66, 1365,
	67, 1365,
	68, 1365,
	70, 1365,
	71, 1365,
	74, 1365,
	75, 1365,
	77, 1365,
	78, 1365,
	96, 1365,
	525, 1365,
	573, 1365,
	651, 1365,
	762, 1365,
	-2, 1819,
	-1, 2918,
	212, 1032,
	216, 1032,
	-2, 788,
	-1, 2919,
	212, 1102,
	216, 1102,
	-2, 789,
	-1, 3185,
	1, 1427,
	8, 1427,
	9, 1427,
	10, 1427,
	17, 1427,
	18, 1427,
	19, 1427,
	20, 1427,
	22, 1427,
	24, 1427,
	34, 1427,
	35, 1427,
	64, 1427,
	65, 1427,
	66, 1427,
	67, 1427,
	68, 1427,
	70, 1427,
	71, 1427,
	74, 1427,
	75, 1427,
	77, 1427,
	78, 1427,
	96, 1427,
	525, 1427,
	573, 1427,
	651, 1427,
	762, 1427,
	-2, 1819,
	-1, 3289,
	1, 1742,
	74, 1742,
	762, 1742,
	-2, 1819,
	-1, 3491,
	49, 921,
	206, 924,
	208, 921,
	209, 921,
	210, 921,
	-2, 1038,
	-1, 3511,
	206, 925,
	212, 1032,
	216, 1032,
	-2, 923,
	-1, 3696,
	77, 2086,
	78, 2086,
	187, 2086,
	-2, 1221,
	-1, 3697,
	76, 1753,
	252, 1753,
	-2, 2135,
	-1, 3698,
	76, 1754,
	252, 1754,
	-2, 2703,
	-1, 3936,
	8, 59,
	9, 59,
	10, 59,
	-2, 1749,
	-1, 4083,
	46, 1850,
	-2, 1848,
	-1, 4343,
	8, 59,
	9, 59,
	10, 59,
	-2, 1750,
	-1, 4362,
	315, 428,
	-2, 1906,
	-1, 4363,
	315, 429,
	-2, 1947,
	-1, 4364,
	315, 430,
	-2, 2123,
	-1, 4596,
	104, 414,
	106, 414,
	108, 414,
	-2, 79,
	-1, 4677,
	106, 421,
	107, 421,
	108, 421,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 81914

var yyAct = [...]int{
	752, 44, 4650, 4613, 4551, 4600, 4588, 4587, 698, 1190,
	569, 4553, 4469, 1414, 4077, 4335, 2935, 4220, 3, 2445,
	4254, 28, 3297, 4369, 4072, 492, 3454, 4223, 8, 4470,
	4222, 7, 4221, 6, 2369, 4215, 708, 4224, 9, 4042,
	1636, 2934, 4213, 712, 4079, 44, 3641, 4356, 3265, 4355,
	2368, 4195, 3778, 657, 1421, 725, 2720, 2305, 107, 4368,
	3963, 3899, 108, 1707, 4120, 4090, 4333, 4078, 3892, 2658,
	3856, 1539, 3611, 3498, 3857, 4031, 4081, 3354, 3702, 2517,
	3891, 548, 551, 689, 3910, 3848, 3467, 3002, 596, 596,
	641, 3694, 3175, 3432, 3807, 2915, 653, 675, 101, 2536,
	2183, 3801, 3784, 2250, 4214, 3890, 2708, 3355, 1469, 1751,
	3298, 1416, 3417, 3686, 3076, 1753, 3113, 751, 1567, 1150,
	2946, 2922, 3617, 489, 2472, 1219, 2988, 816, 3015, 2923,
	2174, 1568, 3503, 3591, 2503, 1418, 1162, 134, 2634, 2462,
	3579, 2641, 105, 2640, 2168, 1750, 2871, 1158, 3160, 2849,
	3570, 1392, 2607, 3452, 1381, 2872, 2566, 3227, 1268, 699,
	1079, 717, 711, 2236, 3274, 1420, 2638, 2175, 2049, 1413,
	1726, 2969, 2155, 1269, 1245, 2499, 1076, 2476, 1450, 2114,
	1617, 1613, 2358, 2282, 1756, 1458, 2711, 2874, 2590, 694,
	2622, 1453, 673, 2089, 2238, 1302, 1477, 2119, 1387, 3080,
	1280, 1153, 1643, 1072, 1073, 2243, 2478, 682, 669, 1399,
	2321, 1391, 1390, 1460, 2167, 1616, 572, 1389, 1203, 571,
	3703, 1166, 2432, 2725, 1279, 1264, 656, 2081, 1719, 670,
	2082, 129, 2048, 1177, 554, 125, 692, 4677, 4671, 4658,
	4642, 4628, 1154, 4596, 1193, 4594, 1171, 4566, 4563, 4562,
	4561, 4546, 4544, 1189, 665, 4450, 4446, 4441, 100, 4122,
	4121, 3370, 3273, 3867, 3619, 2112, 2521, 1181, 4317, 2553,
	2916, 157, 2552, 4004, 3862, 3863, 3501, 536, 3860, 3861,
	86, 3445, 157, 3414, 3415, 556, 1441, 4666, 94, 4002,
	3499, 4621, 4583, 3866, 715, 4581, 4620, 99, 4582, 3353,
	3126, 658, 4005, 97, 2980, 1729, 4383, 688, 3448, 662,
	157, 4382, 3964, 655, 4586, 3446, 4331, 42, 42, 42,
	4530, 42, 667, 658, 702, 3785, 2670, 3966, 564, 4201,
	1087, 4481, 2550, 2550, 157, 3787, 3447, 122, 42, 4216,
	3288, 71, 2382, 2380, 2379, 2378, 2381, 2377, 2376, 2375,
	47, 4017, 2389, 4289, 2388, 2387, 157, 2386, 2385, 2384,
	2383, 3294, 3294, 88, 3000, 3295, 3295, 1183, 3885, 157,
	3429, 2623, 4330, 4200, 1355, 1173, 3255, 1179, 1180, 503,
	3756, 3559, 89, 89, 89, 2237, 89, 4614, 4037, 3228,
	3572, 679, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1149,
	3753, 2942, 3608, 89, 3842, 3959, 2949, 4390, 3324, 3323,
	3136, 3135, 4405, 4316, 4187, 2960, 3592, 4143, 3846, 3960,
	4086, 2912, 2954, 2953, 2370, 2382, 2380, 2379, 2378, 2381,
	2377, 2376, 2375, 2371, 2372, 2389, 2373, 2388, 2387, 2374,
	2386, 2385, 2384, 2383, 3888, 1393, 2825, 2950, 3965, 3678,
	1170, 543, 3790, 2884, 1258, 138, 3308, 1618, 3889, 1619,
	114, 112, 113, 2956, 4339, 2932, 3056, 4097, 668, 3309,
	3310, 2589, 3231, 2933, 4339, 2441, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 1356, 2873,
	1502, 566, 4334, 2442, 2443, 3788, 3789, 3791, 3792, 3793,
	3918, 4336, 2881, 126, 2118, 96, 96, 96, 2583, 96,
	3916, 4336, 3395, 1066, 4407, 2447, 2936, 2947, 3396, 3397,
	136, 2863, 4318, 2191, 2862, 1252, 96, 2864, 1243, 1244,
	2116, 2117, 1223, 1224, 2642, 3639, 1227, 2158, 2159, 2136,
	3317, 2115, 1332, 1401, 1404, 1405, 1406, 1402, 563, 1403,
	1408, 562, 1340, 2712, 2713, 1241, 3911, 1242, 1243, 1244,
	148, 89, 145, 2958, 146, 2948, 4340, 1214, 2474, 2475,
	3208, 4346, 1225, 1226, 2749, 2588, 4340, 650, 1299, 2952,
	2489, 2488, 3530, 2955, 3099, 1165, 2493, 2479, 1161, 2482,
	2481, 2945, 2483, 3659, 666, 4620, 4582, 3663, 3661, 4580,
	150, 149, 2479, 2619, 128, 1228, 2160, 2572, 2500, 1253,
	1254, 2571, 2885, 541, 132, 140, 139, 2087, 1401, 1404,
	1405, 1406, 1402, 2894, 1403, 1408, 538, 2208, 137, 1405,
	1406, 561, 1208, 153, 1229, 644, 4443, 1261, 4347, 4444,
	647, 4445, 645, 3342, 646, 2393, 2608, 2611, 2609, 2610,
	2612, 2613, 2614, 2615, 1150, 4003, 3055, 645, 1382, 2883,
	2906, 4665, 136, 1385, 1358, 1359, 2156, 2157, 1353, 4621,
	4619, 1354, 137, 141, 4473, 1412, 1417, 4618, 4583, 2995,
	2166, 1435, 1436, 1150, 1363, 1150, 1150, 2165, 2164, 1150,
	4305, 4070, 151, 108, 152, 2163, 2162, 2161, 1377, 1150,
	643, 157, 1255, 651, 1336, 1337, 3106, 1511, 1513, 3104,
	3883, 1515, 3875, 1215, 3873, 4282, 3235, 3234, 3236, 3233,
	3105, 3103, 3035, 3186, 3240, 1313, 3232, 3229, 1409, 3186,
	3230, 3439, 3238, 4472, 1456, 4284, 130, 3186, 131, 1315,
	1375, 1306, 1347, 1530, 3618, 1348, 3237, 1534, 1535, 1536,
	1537, 1538, 2901, 1542, 3802, 3808, 3809, 3810, 3811, 4442,
	4486, 4540, 3805, 3239, 3241, 1481, 4485, 4423, 4035, 4148,
	108, 1267, 3466, 3040, 3803, 3804, 157, 2910, 2602, 4137,
	1384, 1329, 4387, 1373, 4147, 3430, 3819, 3837, 2891, 3500,
	3999, 3433, 3434, 3435, 3436, 3437, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 664, 1561, 1562, 1564, 1564, 1564, 3571, 1569, 1569,
	1569, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1427, 3967, 4145, 2999, 3501, 2947, 2903, 3594,
	2584, 542, 4024, 2603, 4021, 2189, 3535, 1411, 658, 4348,
	3442, 3968, 1339, 3433, 3434, 3435, 3436, 3437, 2148, 1569,
	1315, 1222, 3316, 2997, 1315, 3786, 4399, 4026, 2951, 157,
	2537, 3817, 4381, 2944, 4068, 1369, 565, 2395, 2396, 2394,
	142, 4674, 2947, 4644, 1087, 2948, 3468, 2596, 3242, 147,
	4673, 1395, 2947, 2190, 2961, 4643, 1368, 1364, 1365, 1366,
	1367, 1370, 1371, 1372, 1374, 2192, 3098, 2876, 4640, 4559,
	3315, 4604, 4139, 4438, 1378, 4436, 4437, 1570, 1571, 4188,
	3125, 4548, 4397, 552, 3116, 1563, 1565, 1566, 549, 3105,
	2948, 4199, 3103, 127, 3970, 4337, 2888, 109, 109, 109,
	2948, 109, 1569, 1569, 3616, 4337, 3896, 4541, 1379, 679,
	679, 1438, 1444, 1438, 1438, 3523, 4389, 1438, 87, 1378,
	1437, 4018, 1442, 1442, 3969, 2088, 1449, 3845, 1443, 1443,
	4315, 553, 3597, 3595, 3001, 1260, 1266, 1603, 3593, 4098,
	2963, 3177, 1512, 115, 1407, 1262, 1217, 154, 2485, 2502,
	1322, 3882, 3844, 4310, 3596, 2486, 4179, 3874, 4471, 2877,
	2879, 1307, 1349, 2882, 2118, 3872, 2887, 1314, 2892, 2889,
	2890, 143, 2893, 2886, 4283, 2896, 2895, 2897, 4000, 2898,
	2899, 2900, 3427, 1396, 2902, 2904, 2905, 2907, 2908, 2909,
	2116, 2117, 3178, 2880, 2911, 4043, 3177, 3996, 1714, 1474,
	1475, 1473, 1216, 2913, 1724, 1376, 3162, 1606, 4418, 3170,
	3172, 3171, 3991, 3995, 1320, 3164, 1240, 3994, 1476, 1407,
	1604, 1605, 1175, 1174, 1474, 1475, 1473, 3993, 1407, 732,
	2931, 733, 735, 736, 737, 738, 4138, 2998, 3992, 734,
	2317, 3990, 1178, 1476, 136, 4557, 136, 4552, 1178, 1734,
	1735, 1733, 4144, 4351, 4352, 1176, 1079, 141, 3537, 3538,
	4023, 1079, 4020, 4555, 4132, 4133, 2531, 2532, 3441, 2943,
	2170, 4218, 663, 4128, 2527, 2051, 1325, 2120, 1321, 1256,
	1317, 1239, 3615, 3612, 3613, 3023, 3024, 1237, 1238, 1236,
	1235, 1150, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 107, 550, 2526, 2875, 108, 4395,
	3536, 1234, 1318, 1319, 550, 1233, 2122, 4299, 1265, 2121,
	2171, 547, 3580, 3849, 3850, 3581, 2471, 3582, 2471, 4654,
	596, 1728, 2041, 4211, 2083, 4667, 4425, 1699, 1700, 1701,
	1702, 1703, 1165, 4424, 1165, 3083, 2469, 3509, 3359, 2538,
	596, 1752, 4680, 3095, 1610, 4675, 138, 550, 1628, 1410,
	3083, 4659, 3524, 3525, 3526, 3093, 4631, 1172, 3092, 1194,
	4288, 1760, 668, 4170, 2314, 732, 4062, 733, 735, 736,
	737, 738, 3881, 3878, 3614, 734, 2317, 1311, 1633, 1621,
	1709, 3464, 1423, 1425, 1622, 3100, 3165, 3034, 3091, 3115,
	3082, 3030, 3005, 1423, 1425, 1150, 3004, 2597, 1150, 2153,
	1739, 1737, 1263, 2045, 2045, 2045, 2045, 2520, 1169, 2223,
	2222, 2095, 2090, 1614, 2221, 108, 1087, 2471, 1168, 1727,
	4564, 1087, 2091, 2471, 1732, 2093, 4065, 2092, 1705, 3459,
	1316, 1323, 1324, 1326, 1327, 1328, 1758, 1330, 1331, 1394,
	1333, 1334, 1335, 1191, 1338, 4447, 1341, 1342, 1343, 1344,
	1345, 596, 1607, 1608, 3176, 3166, 1182, 487, 123, 3008,
	2539, 550, 3638, 3864, 3007, 2039, 2470, 696, 2470, 3307,
	4554, 4556, 3089, 3083, 2052, 3083, 1517, 1518, 3086, 3032,
	1165, 3085, 3090, 3084, 2469, 3031, 2146, 89, 2869, 2064,
	2471, 2076, 2065, 2066, 2067, 3358, 1516, 4308, 2109, 4652,
	1514, 2071, 4653, 1310, 4651, 3508, 140, 139, 2043, 2047,
	2314, 2079, 2054, 157, 1424, 2796, 1629, 2766, 1721, 556,
	2793, 2743, 123, 89, 2630, 1424, 2551, 1630, 675, 675,
	675, 675, 1715, 2528, 1710, 2437, 1713, 157, 2180, 118,
	1722, 1721, 556, 1150, 2068, 1755, 2070, 1731, 1417, 1757,
	2217, 2253, 2129, 1723, 2447, 1519, 1748, 2176, 1632, 1730,
	108, 2216, 1704, 1749, 3114, 108, 1741, 2470, 157, 157,
	157, 157, 157, 2470, 157, 2050, 1519, 1533, 1532, 3089,
	3083, 1531, 1482, 1297, 2107, 3086, 2127, 121, 3085, 3090,
	2072, 2073, 2152, 2210, 1519, 1205, 2211, 3115, 1516, 2056,
	2057, 2080, 1432, 1433, 4142, 2218, 1492, 2220, 652, 1502,
	4169, 4168, 1502, 1257, 2240, 2859, 2315, 2316, 2085, 2471,
	2084, 3865, 2094, 3461, 1426, 2078, 4177, 2151, 120, 2100,
	2101, 4419, 4420, 2103, 3858, 2194, 2124, 3932, 1760, 3106,
	2470, 2198, 2195, 2040, 1150, 4454, 96, 3083, 3104, 2106,
	1434, 3091, 1165, 4416, 4417, 3084, 2469, 2274, 2128, 2125,
	3082, 108, 1495, 1496, 1497, 1498, 1499, 1492, 1423, 1425,
	1502, 2642, 1481, 1542, 675, 2147, 4204, 4203, 2150, 4007,
	2850, 3124, 3123, 3122, 2313, 2318, 2216, 1517, 1518, 2310,
	108, 2312, 1517, 1518, 2307, 2306, 3121, 3163, 3120, 3119,
	3118, 3117, 3769, 3767, 3487, 3486, 2324, 1246, 2327, 2740,
	96, 3376, 3374, 2280, 2561, 2185, 4008, 2362, 2219, 157,
	157, 2169, 2737, 2734, 658, 701, 4455, 2344, 2347, 2246,
	2188, 2186, 1476, 2283, 2184, 2360, 2187, 2172, 157, 675,
	1755, 157, 157, 157, 157, 1221, 3064, 3063, 2209, 3061,
	3060, 1248, 4161, 658, 2390, 2391, 2308, 2196, 2197, 2260,
	2199, 157, 2315, 2316, 3768, 658, 3488, 1629, 3051, 2470,
	2446, 1231, 3114, 3375, 2359, 3050, 3109, 2289, 1630, 2241,
	688, 3049, 2866, 2865, 3112, 669, 1475, 1473, 1760, 1079,
	3048, 1158, 2287, 2288, 2286, 3047, 3046, 2273, 2258, 1473,
	1424, 1474, 1475, 1473, 1476, 2270, 3045, 2452, 3065, 4657,
	1247, 3062, 4663, 702, 3044, 157, 1476, 2562, 2618, 2617,
	1476, 2105, 679, 679, 679, 679, 1757, 1273, 1185, 3395,
	1066, 1184, 3385, 3386, 3388, 3396, 3397, 3387, 3389, 3390,
	3257, 4630, 679, 1382, 2867, 1220, 4542, 2454, 2251, 2252,
	4490, 1250, 3391, 3392, 3393, 3394, 4634, 4601, 4633, 2241,
	2359, 3003, 2809, 2280, 1474, 1475, 1473, 705, 1717, 4482,
	3818, 2398, 4661, 3812, 1232, 2328, 2329, 2330, 2331, 2332,
	2546, 1259, 4508, 1476, 2431, 658, 2459, 157, 2241, 2241,
	2241, 3068, 3186, 3028, 2241, 2468, 2241, 2241, 2241, 2356,
	2241, 2241, 2763, 2764, 2765, 1087, 2241, 2403, 2429, 2405,
	2284, 3884, 2408, 2259, 3893, 1474, 1475, 1473, 2244, 3368,
	2241, 2241, 2241, 2241, 103, 4646, 2241, 2241, 2241, 2241,
	2241, 2241, 2244, 4668, 1476, 2241, 2241, 2241, 2241, 2241,
	2241, 2241, 2241, 2241, 2241, 2241, 2241, 2453, 4524, 2439,
	2438, 157, 157, 157, 2509, 2510, 2511, 2512, 2513, 1087,
	2505, 2506, 2507, 2508, 2435, 2458, 2444, 2456, 679, 2530,
	110, 2514, 116, 2496, 2497, 2498, 1757, 2480, 2544, 2545,
	1470, 4521, 2484, 2487, 3745, 3743, 2490, 2491, 2492, 4386,
	89, 3071, 4669, 2664, 3070, 3744, 4295, 2519, 2787, 2501,
	2786, 4357, 2285, 4489, 4280, 4488, 3071, 4523, 2664, 3070,
	3170, 3172, 3171, 1474, 1475, 1473, 2547, 696, 2516, 696,
	1474, 1475, 1473, 2425, 4610, 2367, 4286, 2667, 2665, 2660,
	4279, 2311, 1476, 679, 2662, 4208, 1067, 1068, 1069, 1476,
	4520, 4038, 2667, 2665, 2660, 2522, 4015, 2524, 1167, 2662,
	4014, 4013, 1474, 1475, 1473, 4281, 1474, 1475, 1473, 4357,
	2335, 2336, 2337, 4012, 4492, 4006, 2341, 1755, 2343, 2346,
	2349, 1476, 2354, 2355, 157, 1476, 3600, 3598, 2365, 4679,
	157, 157, 3072, 3073, 3828, 157, 157, 3599, 2661, 2663,
	2666, 2668, 2397, 3776, 2399, 2400, 3775, 3072, 3073, 2404,
	3548, 2406, 2407, 2661, 2663, 2666, 2668, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 3481, 3480, 1502, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 1432, 1433, 1502, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 2255, 3479, 1502, 1474, 1475, 1473, 4357, 1426, 4432,
	2130, 4431, 4435, 2133, 2134, 2135, 3478, 2137, 2138, 3477,
	3419, 2139, 4480, 1476, 3371, 2140, 2256, 2974, 2141, 2257,
	4140, 2972, 2142, 2143, 1434, 2144, 2145, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 1564, 3198,
	1502, 2959, 1423, 1425, 2800, 2266, 2268, 2269, 2567, 1474,
	1475, 1473, 1305, 2267, 3195, 1150, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 1476, 1304,
	1502, 4141, 2090, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 4678, 2091, 1502, 1393, 2093, 1486, 2092, 1489, 2975,
	3750, 4662, 1419, 3444, 3443, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 2579, 1487, 1488, 1485, 696, 4645, 1474, 1475,
	1473, 4639, 4568, 4560, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 4448, 1476, 1502, 2587,
	2788, 3192, 4429, 1386, 1412, 4428, 1459, 4374, 4373, 3748,
	2229, 3170, 3172, 3171, 4367, 1385, 4366, 4146, 4045, 1483,
	2231, 3685, 2098, 3527, 2563, 3018, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 3017, 2569,
	1502, 3605, 2573, 675, 1424, 2558, 2230, 2559, 2557, 1474,
	1475, 1473, 2729, 2730, 2731, 2233, 2309, 3259, 4479, 2565,
	3170, 3172, 3171, 3603, 2099, 2235, 2086, 1540, 1476, 1474,
	1475, 1473, 1747, 558, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 1746, 157, 1502, 2225, 1476, 1718,
	1277, 2234, 3170, 3172, 3171, 2722, 2228, 2227, 1716, 2097,
	1300, 560, 4478, 4477, 2728, 2767, 4474, 4404, 4384, 1760,
	4325, 1740, 1276, 157, 3170, 3172, 3171, 4319, 2574, 4210,
	4370, 1456, 1456, 2226, 2707, 1560, 4209, 4136, 2274, 4135,
	4116, 163, 2631, 490, 502, 2578, 4069, 163, 4025, 2586,
	4022, 2232, 163, 2594, 3989, 3958, 3957, 3928, 3887, 3886,
	3827, 2593, 638, 638, 2723, 3826, 3825, 157, 3824, 658,
	3815, 163, 3814, 3813, 3774, 3771, 2601, 3746, 3741, 2604,
	163, 3732, 3728, 2224, 3723, 2648, 3722, 3721, 3601, 3590,
	3578, 3574, 3567, 163, 2280, 696, 3566, 3565, 1346, 3484,
	2624, 3476, 3475, 3474, 163, 1164, 2627, 3402, 2761, 2762,
	3207, 3206, 3204, 3066, 2970, 2868, 1529, 1528, 1527, 2625,
	2585, 2639, 2556, 2102, 2727, 2716, 163, 638, 2790, 1164,
	2742, 696, 568, 4184, 696, 3622, 4532, 696, 490, 163,
	3758, 4462, 3758, 4394, 2283, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 3622, 696, 1502,
	4052, 696, 3758, 4296, 4044, 658, 157, 3758, 4125, 3622,
	4124, 3622, 4119, 675, 658, 2753, 675, 3907, 2453, 2751,
	2752, 4066, 696, 3622, 4029, 3186, 696, 2772, 2629, 696,
	3622, 3903, 2041, 3840, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1087, 1087, 1760, 3906, 2041, 3839, 1757, 679, 2433,
	2768, 3982, 640, 3758, 3757, 3622, 3621, 3412, 3411, 3408,
	3409, 3408, 3407, 1079, 3981, 2776, 2742, 696, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	3905, 1311, 1502, 2599, 2598, 2333, 2581, 679, 2333, 696,
	2433, 2212, 696, 1635, 1634, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 3294, 2434, 1502,
	2436, 3295, 3016, 3687, 3421, 2241, 3706, 2248, 1758, 3016,
	2808, 3405, 2241, 2241, 2241, 2241, 2241, 3404, 89, 3403,
	2852, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1492, 2926, 2929, 1502, 2824, 2826, 102, 2434,
	2241, 2041, 4612, 2535, 2833, 2834, 2835, 1351, 596, 3022,
	2853, 2284, 2854, 1350, 2041, 1308, 1309, 3706, 1309, 2333,
	4326, 2247, 2212, 2212, 2921, 4197, 2924, 2925, 1705, 3706,
	2550, 2917, 2855, 3941, 3186, 2856, 3622, 2878, 2212, 3422,
	3410, 3205, 3043, 2440, 2819, 2817, 1621, 2534, 2857, 2045,
	2816, 2860, 2742, 2041, 2616, 2742, 2104, 2555, 2549, 2249,
	1380, 2149, 2113, 2870, 1738, 1736, 1615, 1383, 1311, 89,
	4422, 157, 2721, 4297, 1727, 4164, 157, 4048, 3777, 157,
	2858, 1757, 3766, 1087, 3763, 2180, 2477, 2504, 2366, 2479,
	3010, 3180, 3054, 3053, 2500, 2914, 1315, 2971, 2712, 2713,
	4414, 2529, 2495, 2494, 2176, 3058, 1708, 1296, 2973, 2518,
	3829, 2568, 1212, 1211, 4649, 4648, 4625, 2962, 2964, 4623,
	4617, 3020, 2965, 2966, 4616, 2967, 2968, 4589, 4584, 4578,
	4576, 4526, 4525, 3898, 3894, 2996, 2055, 3687, 3420, 3013,
	3012, 2993, 2976, 2715, 2777, 2778, 2779, 2780, 2781, 2709,
	2123, 1742, 1352, 1312, 3014, 537, 2719, 679, 2718, 2717,
	679, 163, 2207, 2074, 157, 3193, 2201, 2206, 3196, 3019,
	2204, 3199, 2806, 3036, 2202, 2205, 2200, 490, 3182, 2203,
	4329, 3042, 3209, 2750, 4103, 133, 3188, 3189, 3190, 3087,
	3094, 675, 3097, 157, 3081, 695, 697, 3029, 4376, 1760,
	4166, 3108, 2758, 3077, 3088, 2757, 3681, 1463, 1464, 3184,
	3074, 1540, 3033, 3879, 3855, 3161, 3761, 3110, 2274, 3052,
	3517, 3516, 539, 540, 3401, 3400, 3200, 3057, 3399, 2930,
	2920, 4192, 4324, 4321, 3069, 3169, 163, 4320, 1466, 1461,
	4377, 3216, 144, 1468, 1467, 4323, 1465, 4084, 4082, 1415,
	43, 1463, 1464, 4, 4131, 4130, 3266, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 4028,
	559, 1502, 2577, 2576, 2280, 3243, 2096, 3102, 3245, 3101,
	3291, 3296, 1466, 4009, 4010, 675, 3485, 1468, 1467, 4453,
	1465, 1451, 2600, 3290, 43, 3871, 3717, 108, 106, 3528,
	1540, 4605, 1452, 3373, 2632, 1631, 1294, 1278, 3301, 1275,
	1274, 1218, 4055, 4054, 1393, 2251, 2252, 3449, 3211, 3933,
	1271, 1272, 3822, 3820, 3187, 2523, 3299, 1745, 163, 3823,
	3821, 1410, 4327, 4285, 4032, 3256, 3779, 3765, 2978, 2322,
	2323, 690, 1270, 2173, 3216, 2098, 2097, 1447, 1448, 163,
	1361, 3214, 1445, 1446, 1439, 1440, 3218, 2756, 3203, 4496,
	3213, 3217, 4495, 4494, 4411, 2755, 3986, 3201, 2621, 1251,
	4410, 3292, 4409, 3369, 4408, 490, 3244, 4193, 4156, 4149,
	3382, 4102, 3914, 3075, 701, 691, 2241, 1757, 2262, 2263,
	2264, 102, 3913, 3644, 3016, 4449, 3671, 3471, 157, 2982,
	2983, 2984, 4627, 4626, 157, 702, 3041, 3039, 3357, 3038,
	1382, 2241, 3303, 2818, 3305, 3306, 3377, 3680, 2075, 2797,
	2794, 3350, 3267, 3268, 3269, 3270, 3271, 3272, 2760, 2605,
	2069, 1471, 1210, 1209, 4626, 3381, 4627, 596, 3438, 4206,
	3398, 3169, 3670, 2245, 683, 4512, 3361, 3362, 3363, 3293,
	3364, 3365, 687, 686, 3304, 2878, 104, 1540, 68, 3311,
	3423, 4237, 65, 2339, 2340, 4239, 23, 4375, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	4238, 22, 1502, 2514, 1, 679, 3360, 4240, 24, 3349,
	4241, 25, 4235, 18, 4234, 17, 1087, 4314, 157, 677,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 50, 3510, 1502, 4233, 16, 4236, 19, 4232,
	15, 4226, 11, 4261, 39, 4259, 37, 4258, 36, 3440,
	3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284,
	3285, 3379, 3380, 2451, 2595, 3451, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 4262, 40,
	1502, 4257, 32, 2131, 3418, 4256, 31, 4255, 30, 595,
	3505, 4252, 27, 4251, 26, 4231, 14, 4228, 13, 679,
	4227, 12, 4225, 10, 3800, 3799, 3806, 3428, 3431, 157,
	2994, 4309, 4178, 3816, 1725, 3998, 1188, 3455, 2533, 1301,
	3406, 4322, 3505, 3506, 2242, 3610, 3460, 3458, 3457, 4083,
	3465, 4190, 4189, 3783, 3469, 3470, 3782, 3472, 2987, 2986,
	157, 1295, 2582, 2515, 2111, 3078, 3473, 3079, 3482, 3483,
	3006, 3367, 3067, 4154, 2620, 2154, 2606, 3620, 1362, 2455,
	2460, 3074, 3490, 3841, 3489, 3497, 3507, 4036, 157, 3496,
	2648, 1705, 2281, 3577, 2917, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	3495, 3539, 1152, 3169, 117, 2560, 1230, 511, 2457, 3642,
	2940, 4191, 1298, 2939, 3637, 2957, 3676, 2473, 1388, 3954,
	2938, 2937, 4287, 2941, 1640, 1638, 1639, 157, 157, 1637,
	1642, 1641, 517, 1623, 4361, 3684, 3560, 1472, 3562, 745,
	135, 3111, 648, 649, 124, 519, 1510, 2754, 2861, 2342,
	1077, 3575, 3695, 2350, 3583, 3584, 3585, 1078, 1070, 4452,
	2745, 4202, 4085, 4194, 4350, 3691, 1457, 4087, 3607, 108,
	3912, 3689, 3643, 163, 3301, 3518, 2807, 2180, 1559, 2357,
	714, 3623, 1164, 3645, 661, 157, 3701, 3931, 3531, 4089,
	3533, 2265, 3299, 728, 727, 726, 2176, 723, 724, 2392,
	4338, 3546, 2254, 3549, 3690, 3551, 3553, 3555, 3557, 3287,
	3286, 3289, 1484, 3755, 3413, 1360, 3512, 3513, 3514, 1427,
	703, 1431, 1430, 3519, 3520, 1429, 3522, 1428, 3658, 1422,
	672, 2426, 3027, 1400, 1398, 1397, 1743, 1611, 2714, 2710,
	3540, 671, 676, 3545, 46, 2759, 1564, 1564, 1564, 1569,
	1569, 1569, 1572, 1573, 1574, 1575, 1569, 1569, 1569, 1249,
	1462, 3688, 3711, 3677, 4096, 490, 3654, 3655, 3656, 111,
	3657, 3731, 1164, 163, 658, 3770, 3660, 685, 3662, 684,
	693, 3366, 3693, 638, 638, 29, 3705, 21, 638, 20,
	1206, 3169, 2637, 3712, 2659, 1186, 48, 163, 3707, 3708,
	3709, 3710, 54, 638, 638, 53, 51, 52, 2981, 163,
	2525, 4360, 4550, 490, 490, 490, 490, 1281, 4567, 4599,
	1357, 3713, 3714, 3715, 3669, 3795, 3796, 3797, 163, 163,
	163, 163, 163, 3733, 163, 3742, 3726, 38, 35, 3729,
	3830, 3762, 3734, 3735, 3736, 3648, 3649, 3650, 3651, 3652,
	163, 163, 34, 33, 4253, 638, 4247, 3752, 3843, 4246,
	3642, 163, 1087, 4249, 4248, 3832, 4245, 3780, 1570, 1571,
	4250, 4244, 4243, 4242, 1603, 1604, 1605, 1563, 1565, 1566,
	3704, 4260, 4230, 4229, 4534, 4533, 3773, 5, 98, 95,
	41, 119, 1148, 2, 3759, 3760, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 3851, 3852, 3834, 0, 3794,
	3798, 0, 3836, 0, 638, 638, 638, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 3505, 0, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	0, 0, 1502, 3831, 0, 0, 3853, 3870, 0, 0,
	638, 3505, 0, 0, 0, 638, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3087, 0, 0,
	3835, 0, 3081, 0, 0, 0, 0, 3838, 0, 163,
	163, 3077, 3088, 0, 163, 3876, 1164, 0, 0, 3854,
	0, 0, 0, 0, 157, 3847, 0, 0, 163, 638,
	3909, 163, 163, 163, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 3900, 3902, 3877, 0, 0,
	3868, 163, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 157, 3901, 0, 0, 0, 0, 0,
	0, 0, 0, 3216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3938, 0, 0, 3695, 3642, 3642, 0,
	0, 675, 3915, 3917, 3943, 0, 0, 0, 0, 107,
	0, 3169, 0, 108, 0, 163, 0, 0, 0, 0,
	0, 0, 490, 0, 3897, 0, 0, 0, 0, 0,
	3895, 0, 3301, 0, 1459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3935, 0, 0, 0, 0, 0,
	3299, 0, 0, 0, 0, 3254, 0, 0, 1164, 0,
	1164, 0, 0, 1164, 0, 0, 3978, 0, 0, 0,
	1164, 0, 0, 0, 3952, 1164, 1164, 1164, 0, 1150,
	0, 0, 0, 0, 3937, 163, 0, 163, 3859, 0,
	3976, 0, 3984, 3979, 0, 3951, 108, 0, 0, 3955,
	0, 0, 0, 3934, 3945, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 0, 3880, 0, 3946, 2782, 3169,
	0, 3942, 3357, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 2575, 0, 0, 0, 0, 0,
	0, 3357, 0, 0, 2810, 4040, 4041, 0, 0, 0,
	0, 163, 163, 163, 0, 3983, 3169, 3974, 3975, 0,
	0, 3961, 3962, 3972, 3973, 0, 3971, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 1164,
	0, 1502, 0, 0, 0, 4064, 3988, 0, 0, 0,
	0, 3987, 3985, 0, 3668, 0, 0, 0, 0, 0,
	0, 4011, 4001, 0, 658, 3997, 4016, 0, 0, 2626,
	0, 0, 4034, 658, 157, 0, 4027, 4030, 4019, 0,
	1087, 0, 4033, 0, 0, 0, 0, 4057, 0, 4058,
	0, 0, 0, 0, 3253, 0, 0, 4073, 0, 3938,
	4107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4049, 4050, 0, 4106, 4056, 0, 0, 108, 0, 0,
	0, 0, 2732, 2733, 0, 0, 2735, 2736, 0, 0,
	2738, 2739, 0, 0, 163, 0, 4046, 4047, 0, 0,
	163, 163, 638, 638, 638, 163, 163, 0, 0, 0,
	4071, 0, 4104, 0, 0, 679, 0, 0, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	0, 4111, 1502, 0, 0, 0, 0, 0, 0, 0,
	4108, 0, 0, 4113, 0, 2769, 2770, 2771, 0, 4110,
	4101, 4105, 0, 0, 0, 0, 0, 4155, 4127, 0,
	4129, 0, 3252, 4160, 0, 4114, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 0, 0,
	1502, 0, 0, 0, 0, 3169, 0, 4158, 0, 0,
	4134, 0, 2213, 2214, 2215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2801,
	2802, 2803, 0, 0, 0, 0, 0, 4126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4151, 3695, 4153,
	0, 0, 3357, 0, 0, 0, 0, 0, 0, 0,
	4185, 4207, 0, 0, 0, 108, 4162, 4165, 1150, 4163,
	1150, 0, 0, 0, 0, 4172, 0, 0, 0, 0,
	0, 4217, 4152, 0, 4176, 108, 0, 4174, 4059, 0,
	4061, 0, 4063, 4219, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 0, 3169, 1502, 0,
	0, 0, 0, 0, 4205, 0, 1150, 0, 0, 0,
	0, 4175, 0, 0, 0, 0, 0, 4294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3179, 2334, 4306,
	3181, 0, 0, 4278, 0, 0, 2338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4290, 4301, 3357, 4342,
	4291, 0, 3301, 0, 0, 3901, 0, 0, 0, 2401,
	2402, 4311, 4298, 4304, 0, 4307, 701, 2409, 2410, 2411,
	3299, 0, 4313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4328, 0, 2424, 0, 0, 0, 0,
	1150, 4341, 1150, 0, 0, 4113, 0, 4345, 1150, 157,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 3258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3021, 0, 0, 0, 0,
	0, 4365, 0, 163, 3025, 3026, 0, 0, 0, 4406,
	0, 0, 0, 0, 0, 0, 0, 0, 3266, 0,
	4349, 4371, 4353, 4171, 0, 0, 4402, 4380, 0, 4392,
	0, 0, 0, 0, 4385, 4400, 0, 3900, 0, 1164,
	4415, 0, 0, 0, 0, 0, 0, 163, 4396, 163,
	0, 3357, 0, 1164, 0, 0, 3901, 4403, 1164, 0,
	0, 0, 4401, 0, 0, 4393, 4413, 4421, 4412, 0,
	0, 0, 0, 0, 0, 4426, 0, 0, 0, 0,
	4460, 1164, 0, 0, 1164, 0, 4464, 596, 4459, 0,
	0, 0, 4439, 4433, 4430, 0, 0, 0, 4476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4398,
	1087, 4475, 0, 0, 0, 157, 4467, 0, 0, 0,
	4461, 0, 0, 1150, 0, 4466, 1150, 4463, 0, 0,
	0, 4302, 1150, 1150, 1150, 1150, 0, 1150, 1150, 4484,
	0, 1150, 1150, 0, 0, 163, 163, 4468, 0, 0,
	0, 1164, 4514, 4427, 163, 4500, 1150, 0, 0, 0,
	4500, 0, 4483, 0, 4500, 4510, 4511, 0, 4433, 3301,
	4487, 3642, 0, 4522, 0, 4498, 4497, 0, 1164, 4518,
	1150, 4529, 4491, 1150, 4451, 4493, 1150, 3299, 4531, 4519,
	0, 3456, 4502, 4503, 4504, 4515, 4547, 4507, 4536, 4549,
	4527, 3220, 4465, 108, 2446, 4539, 0, 4558, 4538, 0,
	4537, 0, 596, 4570, 0, 4535, 0, 0, 0, 3246,
	0, 3247, 3248, 0, 3249, 3250, 0, 0, 3251, 0,
	0, 1150, 0, 0, 0, 1150, 0, 1150, 0, 4543,
	4593, 1150, 4545, 0, 3260, 3261, 3262, 3263, 4577, 0,
	0, 4579, 1150, 1150, 1150, 1150, 0, 1150, 4500, 0,
	4500, 0, 0, 0, 4602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4500, 4500, 4500, 0, 0,
	4500, 0, 0, 0, 4622, 1150, 4624, 1150, 0, 1150,
	4591, 0, 0, 0, 0, 4635, 0, 0, 4637, 0,
	0, 0, 0, 3561, 0, 0, 0, 658, 4500, 4647,
	4500, 0, 0, 4569, 4609, 0, 0, 0, 0, 1150,
	4655, 4575, 0, 0, 0, 1150, 0, 0, 0, 0,
	0, 0, 0, 1150, 0, 0, 4590, 532, 0, 0,
	0, 0, 4500, 0, 0, 0, 0, 0, 4632, 1150,
	0, 0, 1150, 0, 0, 0, 4500, 1087, 0, 0,
	0, 163, 1150, 0, 0, 0, 163, 0, 1150, 163,
	163, 163, 4500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4660, 4500, 0, 0, 3563, 3564,
	0, 4500, 0, 0, 0, 2919, 3573, 0, 0, 3576,
	0, 2928, 2928, 0, 0, 0, 3586, 3587, 3588, 3589,
	0, 4672, 0, 0, 3602, 3604, 3606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2570, 0, 0,
	0, 3609, 0, 0, 3679, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 0, 658, 0, 0, 0, 0,
	0, 0, 1164, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 1164, 1164, 0, 0, 0, 0, 638, 0,
	0, 0, 0, 0, 3219, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 638, 1164, 0, 0, 0, 490,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	530, 531, 638, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 0, 0, 1502, 3197, 0,
	0, 0, 0, 2628, 0, 0, 0, 1164, 0, 0,
	0, 638, 0, 1164, 0, 0, 0, 0, 513, 638,
	520, 516, 0, 0, 525, 526, 0, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 0,
	0, 1502, 0, 1164, 1164, 2724, 0, 0, 0, 0,
	0, 0, 527, 0, 0, 0, 3719, 3720, 0, 0,
	0, 0, 0, 0, 3727, 2741, 0, 3730, 0, 0,
	0, 0, 0, 0, 3737, 3738, 3739, 3740, 0, 0,
	0, 0, 0, 3747, 3749, 3751, 0, 0, 0, 3754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3628,
	3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 3168, 0,
	0, 0, 0, 0, 0, 0, 0, 3647, 0, 0,
	0, 0, 0, 0, 523, 1164, 0, 0, 2774, 0,
	2775, 0, 0, 1164, 1164, 1164, 0, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3673, 3674, 3675, 0, 2783, 2784, 2785, 0, 163, 0,
	2789, 0, 2792, 0, 163, 2795, 0, 0, 2798, 2799,
	1164, 0, 0, 2804, 2805, 0, 0, 0, 0, 2811,
	2812, 2813, 0, 0, 2814, 0, 2815, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 528, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2820, 2821, 2822, 2823,
	0, 0, 2827, 2828, 2829, 2830, 2831, 2832, 0, 1164,
	0, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 0, 2848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 505, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 3764, 0, 0,
	0, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	3772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 508, 509, 0, 535, 0, 0, 0, 510,
	512, 0, 506, 534, 533, 0, 0, 0, 3194, 0,
	0, 0, 0, 0, 3168, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 2928, 2928, 2928, 3191, 2928, 2928,
	0, 0, 0, 0, 490, 0, 0, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 163,
	524, 1502, 3947, 3948, 3949, 3950, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1164, 1164, 1164, 0, 0, 0,
	0, 638, 0, 0, 0, 0, 0, 0, 163, 638,
	2791, 0, 0, 0, 0, 0, 1164, 1164, 0, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 2773, 0, 1502, 638, 0, 1164, 0, 638, 0,
	0, 0, 638, 638, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 163, 0,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 0, 0, 1502, 0, 0, 0, 2744, 0,
	490, 2928, 0, 0, 0, 0, 0, 0, 490, 490,
	490, 490, 1164, 0, 0, 1164, 490, 490, 1164, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	1164, 0, 490, 490, 1164, 163, 490, 0, 0, 0,
	0, 1164, 0, 1164, 1164, 1164, 1164, 1164, 1164, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 0, 0, 1502, 3185, 0, 3168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4088, 4091,
	0, 0, 0, 0, 0, 0, 3919, 3920, 3921, 3922,
	0, 0, 713, 0, 3926, 0, 0, 0, 3929, 3930,
	0, 0, 0, 0, 1164, 0, 0, 0, 1540, 0,
	1164, 0, 0, 2912, 0, 3221, 3222, 3223, 3224, 3225,
	3226, 0, 0, 0, 163, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 1393, 0, 0,
	0, 0, 0, 0, 0, 2884, 0, 0, 0, 0,
	158, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 678, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 0, 0, 1502, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 2881, 0, 0, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 158, 1156, 1164, 0, 0, 0, 0,
	1164, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 158, 0,
	0, 0, 0, 0, 3168, 0, 0, 0, 0, 0,
	0, 4039, 0, 0, 0, 0, 0, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2885, 0, 1187, 0, 0, 0,
	0, 0, 0, 0, 0, 2894, 0, 0, 0, 1204,
	0, 0, 0, 4074, 4075, 4076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 1164, 0, 0, 0,
	0, 2883, 2906, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 744, 638, 0,
	0, 0, 0, 0, 0, 638, 4123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 4354, 4358,
	0, 0, 0, 0, 0, 0, 0, 4372, 0, 0,
	0, 490, 0, 0, 2901, 160, 4150, 494, 0, 0,
	0, 490, 0, 0, 0, 0, 160, 0, 0, 4159,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 2910,
	0, 0, 4167, 0, 0, 660, 0, 0, 0, 0,
	2891, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 1160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4434, 0, 0, 0, 0, 3625, 3626, 3627,
	160, 0, 0, 0, 3168, 0, 0, 0, 0, 0,
	0, 0, 494, 160, 0, 0, 1164, 0, 0, 0,
	2903, 0, 0, 0, 0, 0, 3646, 0, 0, 0,
	0, 0, 1164, 0, 0, 0, 3653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 3664, 3665, 3666, 3667, 0, 0, 0, 0,
	3672, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 3682, 3683, 0, 0, 0, 0, 0, 0, 0,
	4505, 0, 0, 0, 163, 0, 0, 0, 0, 2876,
	0, 0, 0, 163, 163, 0, 0, 0, 0, 0,
	3692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3168, 0, 42, 45, 0, 0, 2888, 0,
	0, 1207, 0, 0, 0, 158, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 75, 76,
	0, 4565, 0, 0, 0, 72, 0, 0, 0, 3168,
	0, 0, 490, 0, 0, 2928, 2928, 1164, 88, 0,
	1164, 0, 0, 0, 4378, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 63, 0, 0, 0, 89,
	0, 2877, 2879, 0, 0, 2882, 0, 0, 2887, 0,
	2892, 2889, 2890, 0, 2893, 2886, 1303, 2896, 2895, 2897,
	0, 2898, 2899, 2900, 0, 0, 2902, 2904, 2905, 2907,
	2908, 2909, 0, 0, 0, 2880, 2911, 659, 0, 0,
	0, 0, 0, 0, 0, 2913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4636, 0, 158, 0,
	0, 0, 0, 4641, 0, 0, 0, 0, 2928, 2928,
	0, 0, 1164, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 0,
	0, 490, 1164, 490, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	80, 0, 96, 1164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 2875,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 160, 0, 0, 4513, 77,
	0, 0, 4516, 0, 0, 0, 0, 0, 3168, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4572, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 0, 555, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 638, 0, 0, 0,
	0, 0, 0, 0, 1164, 0, 0, 78, 0, 79,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 1086, 163,
	3168, 0, 84, 1155, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 3923, 3924, 3925, 0, 3927, 1192, 0, 0,
	0, 0, 0, 4638, 0, 0, 0, 0, 0, 0,
	3936, 0, 3939, 3940, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 3944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 83, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 81,
	0, 66, 67, 73, 1164, 74, 0, 0, 490, 494,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 3977, 0, 0, 0, 0, 1164, 0,
	0, 3980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 2633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 1088, 0, 0, 0, 0,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 4051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 4067,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 493, 0, 0, 0, 4092, 4093,
	4094, 4095, 158, 0, 0, 0, 0, 0, 4099, 4100,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 4109, 0, 87, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4112, 0, 493, 493, 493, 493, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 0, 0, 158, 158, 158,
	158, 158, 0, 158, 0, 0, 85, 163, 0, 0,
	1164, 0, 0, 1712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 2059,
	2060, 2061, 2062, 0, 2063, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4180, 4181, 4182, 4183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4198, 638, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 71, 0,
	0, 0, 4212, 0, 93, 163, 0, 47, 158, 158,
	0, 0, 0, 659, 0, 2177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	158, 158, 158, 158, 0, 0, 0, 4292, 4293, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 89,
	158, 4303, 0, 0, 659, 4270, 0, 0, 0, 0,
	0, 0, 4312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4263, 0, 0, 1612,
	1612, 4332, 0, 0, 0, 0, 4343, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 160, 2193, 0,
	0, 0, 1086, 0, 158, 0, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 2276, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 494, 494,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 160, 160, 160, 160, 0, 160, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 4388,
	0, 0, 96, 4391, 659, 2261, 158, 0, 4264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2361, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 158, 158, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2276, 0, 0, 1156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4275, 4267, 4268, 4269, 4273, 4274, 4271, 4608,
	4272, 0, 4276, 160, 160, 0, 0, 78, 660, 79,
	2178, 2428, 0, 2430, 0, 0, 0, 0, 0, 42,
	0, 0, 160, 0, 0, 160, 160, 160, 160, 0,
	0, 0, 84, 71, 0, 0, 0, 660, 0, 93,
	0, 60, 47, 0, 0, 160, 0, 0, 0, 660,
	0, 0, 0, 0, 4528, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 158,
	158, 0, 0, 0, 158, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	4270, 0, 4571, 0, 0, 4573, 4574, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 494, 0, 4585, 0,
	2277, 4263, 0, 0, 4598, 4601, 4597, 0, 4277, 4265,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 2540, 0, 0, 0, 0, 0,
	2542, 2543, 0, 0, 0, 1612, 2548, 0, 0, 0,
	0, 4615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 1086,
	1624, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 160, 160, 160, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2277, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 0,
	1711, 0, 0, 0, 0, 0, 1720, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	555, 0, 0, 1754, 69, 70, 0, 4266, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 4275, 4267, 4268,
	4269, 4273, 4274, 4271, 0, 4272, 159, 4276, 491, 0,
	0, 0, 78, 0, 79, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 160, 160, 85, 84, 0, 160,
	160, 0, 0, 0, 158, 159, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	1157, 0, 158, 0, 0, 0, 0, 0, 0, 2110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 2132, 0, 0,
	0, 0, 0, 491, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2554, 158, 0, 659, 0,
	0, 0, 0, 4277, 4265, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 0, 2564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2182, 0, 2706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 4440, 0, 0, 0, 0, 1303, 0, 0,
	1393, 0, 2655, 0, 0, 0, 0, 0, 2679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 659, 158, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	2654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2676, 1650, 0,
	1088, 1088, 0, 0, 0, 0, 2276, 0, 0, 0,
	0, 0, 0, 0, 2182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2182, 0, 2182, 0,
	0, 2319, 0, 0, 0, 0, 0, 0, 2320, 0,
	0, 0, 0, 2182, 2326, 2182, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 1664, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 1086, 0, 0, 0, 0, 2645, 2644,
	2657, 2664, 2643, 2656, 2647, 0, 0, 2680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 2689, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2667, 2665, 2660, 0, 0,
	0, 0, 2662, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 2678, 2700, 2651, 2650, 0, 0,
	0, 160, 0, 660, 2182, 0, 0, 1155, 0, 0,
	0, 0, 0, 0, 2646, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 158, 159, 0, 158, 0,
	2652, 2653, 1088, 0, 2670, 0, 2661, 2663, 2666, 2668,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2696, 0, 0,
	0, 2851, 0, 0, 0, 1754, 0, 0, 0, 660,
	160, 159, 0, 0, 0, 0, 0, 0, 660, 0,
	0, 0, 2704, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2277, 158, 0, 0, 0, 0, 0, 493, 0,
	0, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 0, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 0, 1665, 1666, 1667, 1647, 1646, 1678, 1648,
	1651, 1645, 1649, 1644, 2979, 0, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 3009, 159, 0, 0, 0, 0, 0,
	0, 0, 2177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	160, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2276, 0, 0, 0,
	0, 0, 0, 0, 1679, 0, 0, 158, 0, 494,
	0, 0, 0, 158, 2673, 2674, 0, 1668, 2677, 0,
	0, 2682, 0, 2687, 2684, 2685, 0, 2688, 2681, 0,
	2691, 2690, 2692, 0, 2693, 2694, 2695, 0, 0, 2697,
	2698, 2699, 2701, 2702, 2703, 0, 0, 0, 2675, 2705,
	0, 0, 0, 0, 0, 0, 0, 0, 2669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 494, 0, 3300, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2592, 0, 0, 0, 0, 2592, 0, 0, 0,
	0, 0, 2671, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2178, 0, 2592,
	0, 0, 2592, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2726,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 3372,
	0, 0, 0, 0, 0, 0, 2748, 0, 0, 1086,
	1086, 0, 0, 0, 0, 2182, 0, 0, 0, 0,
	0, 2277, 0, 0, 0, 0, 0, 0, 0, 0,
	3416, 0, 160, 0, 0, 0, 158, 158, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3450, 493,
	0, 0, 0, 0, 0, 0, 0, 493, 493, 493,
	493, 0, 0, 0, 0, 493, 493, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 493, 493, 0, 158, 493, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 1612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 1759, 0, 0, 0, 491, 491,
	491, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 159, 159, 159, 159, 0, 159,
	0, 0, 0, 0, 0, 3542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2635, 2636, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3300, 0, 0, 2177, 0, 0, 0, 0, 0,
	2977, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	2985, 2989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 159, 0, 0, 0, 0,
	0, 2179, 0, 3011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 159, 159, 159, 159,
	0, 160, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 494, 2592, 0, 0, 0, 0,
	0, 3037, 494, 494, 494, 494, 0, 0, 0, 0,
	494, 494, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 494, 0, 160,
	494, 2182, 2182, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 158, 0, 0, 0, 491, 0, 0,
	0, 2275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 3781, 0, 0, 0, 660, 0,
	0, 0, 0, 3183, 0, 493, 0, 0, 0, 0,
	0, 3183, 3183, 3183, 0, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 2182, 0, 0, 0, 0,
	493, 0, 0, 3833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 2182, 0,
	0, 0, 0, 0, 0, 0, 159, 159, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2275, 0, 0, 1157, 0, 0, 0, 0, 2178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 3059, 0, 0, 0, 159, 159, 0, 0, 0,
	159, 159, 0, 659, 0, 3096, 0, 0, 0, 0,
	0, 0, 659, 158, 3107, 0, 0, 0, 0, 3300,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 0, 0,
	3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146,
	3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156,
	3157, 3158, 3159, 0, 3173, 3174, 0, 160, 0, 0,
	0, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3424, 3425, 3426, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3183, 3183, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3463, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 582, 593, 575,
	3515, 0, 0, 2726, 0, 0, 3521, 0, 0, 0,
	493, 0, 493, 0, 493, 0, 2726, 0, 2726, 583,
	0, 0, 3541, 0, 0, 0, 0, 0, 0, 2726,
	0, 2726, 3550, 2726, 2726, 2726, 2726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3312, 3313, 3314, 0, 3318, 3319,
	3320, 3321, 3322, 0, 0, 3325, 3326, 3327, 3328, 3329,
	3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339,
	3340, 3341, 0, 3343, 3344, 3345, 3346, 3347, 3348, 0,
	3351, 3352, 3183, 0, 0, 0, 0, 0, 3624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3640, 660, 0,
	159, 0, 0, 0, 0, 0, 0, 660, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 573, 576, 0, 0, 0,
	0, 493, 0, 0, 581, 0, 494, 0, 0, 0,
	0, 0, 159, 0, 0, 493, 0, 0, 158, 0,
	1086, 0, 585, 2182, 0, 494, 0, 589, 2726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4173,
	0, 0, 0, 0, 0, 0, 0, 0, 3529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 0, 493, 0, 494, 0, 494, 0, 494,
	0, 0, 0, 0, 3568, 3569, 0, 0, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2275, 0, 2989, 0, 0, 0, 0, 3300,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 578, 579, 586, 2126, 590, 591, 594, 0,
	0, 0, 0, 0, 0, 3183, 0, 0, 0, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 0,
	0, 0, 0, 0, 0, 4344, 0, 0, 0, 0,
	0, 0, 0, 0, 2706, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1393, 0,
	2655, 0, 0, 0, 0, 0, 2679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2654, 0,
	494, 0, 0, 160, 3716, 0, 3718, 0, 0, 0,
	0, 0, 3724, 3725, 0, 2676, 159, 0, 0, 0,
	0, 159, 0, 0, 159, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 3904, 0, 659, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	2182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3300, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 494, 159,
	0, 0, 0, 0, 0, 0, 2645, 3492, 2657, 0,
	3491, 2656, 2647, 0, 89, 2680, 0, 0, 1086, 0,
	4270, 0, 0, 0, 0, 0, 2689, 0, 159, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 160,
	0, 4263, 0, 0, 0, 0, 4676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2678, 2700, 2651, 2650, 0, 0, 0, 0,
	0, 0, 0, 0, 659, 3183, 0, 0, 3183, 0,
	0, 0, 2646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3493, 3494,
	0, 0, 2670, 0, 0, 0, 0, 3869, 2179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2696, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	4053, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4060, 2686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 2182, 2275, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 0, 159, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 69, 70, 0, 4266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4275, 4267, 4268,
	4269, 4273, 4274, 4271, 0, 4272, 0, 4276, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3953, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	2672, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3183, 0, 0, 0, 0, 0, 0, 2683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 2649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4277, 4265, 0, 66, 67, 73, 0,
	74, 0, 0, 491, 0, 0, 0, 0, 4196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	1664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2673, 2674, 159, 0, 2677, 0, 0, 2682,
	0, 2687, 2684, 2685, 0, 2688, 2681, 0, 2691, 2690,
	2692, 0, 2693, 2694, 2695, 0, 0, 2697, 2698, 2699,
	2701, 2702, 2703, 0, 0, 159, 2675, 2705, 0, 0,
	0, 0, 0, 0, 0, 0, 2669, 0, 0, 0,
	0, 0, 3183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4115, 0, 4117, 4118, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 491, 491, 491, 491, 0, 0, 0,
	2671, 491, 491, 0, 491, 0, 0, 0, 2182, 0,
	0, 0, 0, 59, 61, 0, 0, 491, 491, 87,
	159, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 4196, 0,
	1677, 1680, 1681, 1682, 1683, 1684, 1685, 0, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 0, 1665, 1666, 1667, 1647, 1646, 1678, 1648, 1651,
	1645, 1649, 1644, 0, 0, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2182, 0,
	0, 0, 0, 0, 0, 0, 2053, 0, 0, 0,
	0, 0, 0, 0, 3183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4300, 0, 0,
	0, 0, 2182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	2179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2182, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 0, 0, 1679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 159,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 159,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 491, 206, 491, 424,
	491, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 471, 252, 159, 0, 654, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	0, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 902, 1044, 491,
	0, 448, 803, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 707, 857,
	890, 259, 706, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	159, 172, 477, 190, 811, 314, 0, 0, 475, 423,
	339, 0, 0, 944, 0, 795, 796, 929, 987, 876,
	974, 1050, 910, 979, 1051, 89, 0, 0, 0, 0,
	732, 557, 733, 735, 736, 737, 738, 0, 0, 171,
	734, 739, 740, 741, 0, 939, 984, 1063, 855, 704,
	721, 860, 810, 4357, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 718, 719, 0, 0, 0, 491, 826, 0, 720,
	0, 870, 716, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 722, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 798, 1034, 927,
	301, 191, 1040, 925, 824, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 808,
	198, 313, 1019, 891, 904, 729, 0, 392, 980, 467,
	710, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 812, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 709, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 730, 731, 246,
	801, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 878, 1066, 825, 813, 814, 817,
	961, 962, 815, 818, 819, 827, 799, 800, 802, 804,
	805, 806, 949, 1041, 863, 809, 1017, 820, 821, 822,
	823, 989, 1060, 797, 242, 746, 839, 840, 841, 747,
	842, 843, 748, 749, 844, 845, 846, 847, 750, 848,
	849, 850, 828, 829, 830, 831, 832, 833, 834, 835,
	838, 836, 837, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 807, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 448, 803, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 357, 909, 865, 0,
	0, 856, 707, 857, 890, 259, 706, 1018, 963, 1046,
	946, 978, 988, 258, 244, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 477, 190, 811, 314,
	0, 0, 475, 423, 339, 0, 0, 944, 0, 795,
	796, 929, 987, 876, 974, 1050, 910, 979, 1051, 89,
	0, 696, 0, 0, 732, 557, 733, 735, 736, 737,
	738, 0, 0, 171, 734, 739, 740, 741, 0, 939,
	984, 1063, 855, 704, 721, 860, 810, 0, 1036, 897,
	898, 263, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 468, 990, 999, 1013, 919, 376,
	283, 0, 0, 0, 0, 718, 719, 0, 0, 0,
	0, 826, 0, 720, 0, 870, 716, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 722,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 340,
	867, 798, 1034, 927, 301, 191, 1040, 925, 824, 993,
	871, 1022, 1056, 913, 311, 869, 195, 866, 872, 911,
	353, 1002, 1008, 808, 198, 313, 1019, 891, 904, 729,
	0, 392, 980, 467, 710, 278, 0, 966, 391, 315,
	460, 994, 1042, 466, 914, 442, 476, 481, 271, 947,
	234, 420, 261, 254, 896, 1012, 859, 284, 375, 249,
	306, 930, 986, 892, 241, 997, 973, 1024, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 293, 285,
	1027, 1025, 905, 361, 224, 957, 950, 943, 812, 470,
	1059, 257, 1009, 472, 180, 406, 405, 917, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 485, 220, 309,
	450, 709, 277, 352, 982, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1006, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 981, 389, 427, 473, 975, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1004, 216, 237, 428, 210,
	1038, 1021, 968, 932, 938, 861, 0, 209, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 281,
	992, 730, 731, 246, 801, 1053, 211, 868, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 969, 956, 954, 862,
	1037, 967, 955, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 958, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 880, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	996, 1062, 360, 393, 233, 469, 421, 262, 878, 1066,
	825, 813, 814, 817, 961, 962, 815, 818, 819, 827,
	799, 800, 802, 804, 805, 806, 949, 1041, 863, 809,
	1017, 820, 821, 822, 823, 989, 1060, 797, 242, 746,
	839, 840, 841, 747, 842, 843, 748, 749, 844, 845,
	846, 847, 750, 848, 849, 850, 828, 829, 830, 831,
	832, 833, 834, 835, 838, 836, 837, 0, 945, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	807, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 346, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 471, 252, 948, 970, 1001, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 928, 196, 0, 0, 202, 0, 203, 205, 915,
	201, 1032, 1057, 977, 991, 902, 1044, 0, 0, 448,
	803, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	357, 909, 865, 0, 0, 856, 707, 857, 890, 259,
	706, 1018, 963, 1046, 946, 978, 988, 258, 244, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	477, 190, 811, 314, 0, 0, 475, 423, 339, 0,
	0, 944, 0, 795, 796, 929, 987, 876, 974, 1050,
	910, 979, 1051, 89, 0, 0, 0, 0, 732, 557,
	733, 735, 736, 737, 738, 0, 0, 171, 734, 739,
	740, 741, 0, 939, 984, 1063, 855, 704, 721, 860,
	810, 0, 1036, 897, 898, 263, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 468, 990,
	999, 1013, 919, 376, 283, 0, 0, 0, 0, 718,
	719, 2239, 0, 0, 0, 826, 0, 720, 0, 870,
	716, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 722, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 340, 867, 798, 1034, 927, 301, 191,
	1040, 925, 824, 993, 871, 1022, 1056, 913, 311, 869,
	195, 866, 872, 911, 353, 1002, 1008, 808, 198, 313,
	1019, 891, 904, 729, 0, 392, 980, 467, 710, 278,
	0, 966, 391, 315, 460, 994, 1042, 466, 914, 442,
	476, 481, 271, 947, 234, 420, 261, 254, 896, 1012,
	859, 284, 375, 249, 306, 930, 986, 892, 241, 997,
	973, 1024, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 293, 285, 1027, 1025, 905, 361, 224, 957,
	950, 943, 812, 470, 1059, 257, 1009, 472, 180, 406,
	405, 917, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 485, 220, 309, 450, 709, 277, 352, 982, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1006,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 981, 389, 427,
	473, 975, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1004,
	216, 237, 428, 210, 1038, 1021, 968, 932, 938, 861,
	0, 209, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 281, 992, 730, 731, 246, 801, 1053,
	211, 868, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	969, 956, 954, 862, 1037, 967, 955, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 958, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 880,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 996, 1062, 360, 393, 233, 469,
	421, 262, 878, 1066, 825, 813, 814, 817, 961, 962,
	815, 818, 819, 827, 799, 800, 802, 804, 805, 806,
	949, 1041, 863, 809, 1017, 820, 821, 822, 823, 989,
	1060, 797, 242, 746, 839, 840, 841, 747, 842, 843,
	748, 749, 844, 845, 846, 847, 750, 848, 849, 850,
	828, 829, 830, 831, 832, 833, 834, 835, 838, 836,
	837, 0, 945, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 807, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 346, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948,
	970, 1001, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 928, 196, 0, 0, 202,
	0, 203, 205, 915, 201, 1032, 1057, 977, 991, 902,
	1044, 0, 0, 448, 803, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 357, 909, 865, 0, 0, 856,
	707, 857, 890, 259, 706, 1018, 963, 1046, 946, 978,
	988, 258, 244, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 477, 190, 811, 314, 0, 0,
	475, 423, 339, 0, 0, 944, 0, 795, 796, 929,
	987, 876, 974, 1050, 910, 979, 1051, 89, 0, 0,
	0, 0, 732, 557, 733, 735, 736, 737, 738, 0,
	0, 171, 734, 739, 740, 741, 0, 939, 984, 1063,
	855, 704, 721, 860, 810, 0, 1036, 897, 898, 263,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 468, 990, 999, 1013, 919, 376, 283, 0,
	0, 0, 0, 718, 719, 700, 0, 0, 0, 826,
	0, 720, 0, 870, 716, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 722, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 340, 867, 798,
	1034, 927, 301, 191, 1040, 925, 824, 993, 871, 1022,
	1056, 913, 311, 869, 195, 866, 872, 911, 353, 1002,
	1008, 808, 198, 313, 1019, 891, 904, 729, 0, 392,
	980, 467, 710, 278, 0, 966, 391, 315, 460, 994,
	1042, 466, 914, 442, 476, 481, 271, 947, 234, 420,
	261, 254, 896, 1012, 859, 284, 375, 249, 306, 930,
	986, 892, 241, 997, 973, 1024, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 293, 285, 1027, 1025,
	905, 361, 224, 957, 950, 943, 812, 470, 1059, 257,
	1009, 472, 180, 406, 405, 917, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 485, 220, 309, 450, 709,
	277, 352, 982, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1006, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 981, 389, 427, 473, 975, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1004, 216, 237, 428, 210, 1038, 1021,
	968, 932, 938, 861, 0, 209, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 281, 992, 730,
	731, 246, 801, 1053, 211, 868, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 969, 956, 954, 862, 1037, 967,
	955, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 958, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 880, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 996, 1062,
	360, 393, 233, 469, 421, 262, 878, 1066, 825, 813,
	814, 817, 961, 962, 815, 818, 819, 827, 799, 800,
	802, 804, 805, 806, 949, 1041, 863, 809, 1017, 820,
	821, 822, 823, 989, 1060, 797, 242, 746, 839, 840,
	841, 747, 842, 843, 748, 749, 844, 845, 846, 847,
	750, 848, 849, 850, 828, 829, 830, 831, 832, 833,
	834, 835, 838, 836, 837, 0, 945, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 807, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 346, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 471, 252, 948, 970, 1001, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 928,
	196, 0, 0, 202, 0, 203, 205, 915, 201, 1032,
	1057, 977, 991, 902, 1044, 0, 0, 448, 803, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 357, 909,
	865, 0, 0, 856, 707, 857, 890, 259, 706, 1018,
	963, 1046, 946, 978, 988, 258, 244, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 477, 190,
	811, 314, 0, 0, 475, 423, 339, 0, 0, 944,
	0, 795, 796, 929, 987, 876, 974, 1050, 910, 2448,
	1051, 89, 0, 0, 0, 0, 2450, 557, 733, 735,
	736, 737, 738, 0, 0, 171, 734, 739, 740, 741,
	2449, 939, 984, 1063, 855, 704, 721, 860, 810, 0,
	1036, 897, 898, 263, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 468, 990, 999, 1013,
	919, 376, 283, 0, 0, 0, 0, 718, 719, 0,
	0, 0, 0, 826, 0, 720, 0, 870, 716, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 722, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 340, 867, 798, 1034, 927, 301, 191, 1040, 925,
	824, 993, 871, 1022, 1056, 913, 311, 869, 195, 866,
	872, 911, 353, 1002, 1008, 808, 198, 313, 1019, 891,
	904, 729, 0, 392, 980, 467, 710, 278, 0, 966,
	391, 315, 460, 994, 1042, 466, 914, 442, 476, 481,
	271, 947, 234, 420, 261, 254, 896, 1012, 859, 284,
	375, 249, 306, 930, 986, 892, 241, 997, 973, 1024,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	293, 285, 1027, 1025, 905, 361, 224, 957, 950, 943,
	812, 470, 1059, 257, 1009, 472, 180, 406, 405, 917,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 485,
	220, 309, 450, 709, 277, 352, 982, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1006, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 981, 389, 427, 473, 975,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1004, 216, 237,
	428, 210, 1038, 1021, 968, 932, 938, 861, 0, 209,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 281, 992, 730, 731, 246, 801, 1053, 211, 868,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 969, 956,
	954, 862, 1037, 967, 955, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 958, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 880, 1014, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 996, 1062, 360, 393, 233, 469, 421, 262,
	878, 1066, 825, 813, 814, 817, 961, 962, 815, 818,
	819, 827, 799, 800, 802, 804, 805, 806, 949, 1041,
	863, 809, 1017, 820, 821, 822, 823, 989, 1060, 797,
	242, 746, 839, 840, 841, 747, 842, 843, 748, 749,
	844, 845, 846, 847, 750, 848, 849, 850, 828, 829,
	830, 831, 832, 833, 834, 835, 838, 836, 837, 0,
	945, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 807, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 346,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970, 1001,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 928, 196, 0, 0, 202, 0, 203,
	205, 915, 201, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 448, 803, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 707, 857,
	890, 259, 706, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 477, 190, 811, 314, 0, 0, 475, 423,
	339, 0, 0, 944, 0, 795, 796, 929, 987, 876,
	974, 1050, 910, 979, 1051, 89, 0, 0, 0, 0,
	2348, 557, 733, 735, 736, 737, 738, 0, 0, 171,
	734, 739, 740, 741, 0, 939, 984, 1063, 855, 704,
	721, 860, 810, 0, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 718, 719, 2239, 0, 0, 0, 826, 0, 720,
	0, 870, 716, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 722, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 798, 1034, 927,
	301, 191, 1040, 925, 824, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 808,
	198, 313, 1019, 891, 904, 729, 0, 392, 980, 467,
	710, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 812, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 709, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 730, 731, 246,
	801, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 878, 1066, 825, 813, 814, 817,
	961, 962, 815, 818, 819, 827, 799, 800, 802, 804,
	805, 806, 949, 1041, 863, 809, 1017, 820, 821, 822,
	823, 989, 1060, 797, 242, 746, 839, 840, 841, 747,
	842, 843, 748, 749, 844, 845, 846, 847, 750, 848,
	849, 850, 828, 829, 830, 831, 832, 833, 834, 835,
	838, 836, 837, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 807, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 448, 803, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 357, 909, 865, 0,
	0, 856, 707, 857, 890, 259, 706, 1018, 963, 1046,
	946, 978, 988, 258, 244, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 477, 190, 811, 314,
	0, 0, 475, 423, 339, 0, 0, 944, 0, 795,
	796, 929, 987, 876, 974, 1050, 910, 979, 1051, 89,
	0, 0, 0, 0, 2345, 557, 733, 735, 736, 737,
	738, 0, 0, 171, 734, 739, 740, 741, 0, 939,
	984, 1063, 855, 704, 721, 860, 810, 0, 1036, 897,
	898, 263, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 468, 990, 999, 1013, 919, 376,
	283, 0, 0, 0, 0, 718, 719, 2239, 0, 0,
	0, 826, 0, 720, 0, 870, 716, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 722,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 340,
	867, 798, 1034, 927, 301, 191, 1040, 925, 824, 993,
	871, 1022, 1056, 913, 311, 869, 195, 866, 872, 911,
	353, 1002, 1008, 808, 198, 313, 1019, 891, 904, 729,
	0, 392, 980, 467, 710, 278, 0, 966, 391, 315,
	460, 994, 1042, 466, 914, 442, 476, 481, 271, 947,
	234, 420, 261, 254, 896, 1012, 859, 284, 375, 249,
	306, 930, 986, 892, 241, 997, 973, 1024, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 293, 285,
	1027, 1025, 905, 361, 224, 957, 950, 943, 812, 470,
	1059, 257, 1009, 472, 180, 406, 405, 917, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 485, 220, 309,
	450, 709, 277, 352, 982, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1006, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 981, 389, 427, 473, 975, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1004, 216, 237, 428, 210,
	1038, 1021, 968, 932, 938, 861, 0, 209, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 281,
	992, 730, 731, 246, 801, 1053, 211, 868, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 969, 956, 954, 862,
	1037, 967, 955, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 958, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 880, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	996, 1062, 360, 393, 233, 469, 421, 262, 878, 1066,
	825, 813, 814, 817, 961, 962, 815, 818, 819, 827,
	799, 800, 802, 804, 805, 806, 949, 1041, 863, 809,
	1017, 820, 821, 822, 823, 989, 1060, 797, 242, 746,
	839, 840, 841, 747, 842, 843, 748, 749, 844, 845,
	846, 847, 750, 848, 849, 850, 828, 829, 830, 831,
	832, 833, 834, 835, 838, 836, 837, 0, 945, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	807, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 346, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 471, 252, 948, 970, 1001, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 928, 196, 0, 0, 202, 0, 203, 205, 915,
	201, 1032, 1057, 977, 991, 902, 1044, 0, 42, 448,
	803, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	357, 909, 865, 0, 0, 856, 707, 857, 890, 259,
	706, 1018, 963, 1046, 946, 978, 988, 258, 244, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	477, 190, 811, 314, 0, 0, 475, 423, 339, 0,
	0, 944, 0, 795, 796, 929, 987, 876, 974, 1050,
	910, 979, 1051, 89, 0, 0, 0, 0, 732, 557,
	733, 735, 736, 737, 738, 0, 0, 171, 734, 739,
	740, 741, 0, 939, 984, 1063, 855, 704, 721, 860,
	810, 0, 1036, 897, 898, 263, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 468, 990,
	999, 1013, 919, 376, 283, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 826, 0, 720, 0, 870,
	716, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 722, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 340, 867, 798, 1543, 927, 301, 191,
	1040, 925, 824, 993, 871, 1022, 1056, 913, 311, 869,
	195, 866, 872, 911, 353, 1002, 1008, 808, 198, 313,
	1019, 891, 904, 729, 0, 392, 980, 467, 710, 278,
	0, 966, 391, 315, 460, 994, 1042, 466, 914, 442,
	476, 481, 271, 947, 234, 420, 261, 254, 896, 1012,
	859, 284, 375, 249, 306, 930, 986, 892, 241, 997,
	973, 1024, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 293, 285, 1027, 1025, 905, 361, 224, 957,
	950, 943, 812, 470, 1059, 257, 1009, 472, 180, 406,
	405, 917, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 485, 220, 309, 450, 709, 277, 352, 982, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1006,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 981, 389, 427,
	473, 975, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1004,
	216, 237, 428, 210, 1038, 1021, 968, 932, 938, 861,
	0, 209, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 281, 992, 730, 731, 246, 801, 1053,
	211, 868, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	969, 956, 954, 862, 1037, 967, 955, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 958, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 880,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 996, 1062, 360, 393, 233, 469,
	421, 262, 878, 1066, 825, 813, 814, 817, 961, 962,
	815, 818, 819, 827, 799, 800, 802, 804, 805, 806,
	949, 1041, 863, 809, 1017, 820, 821, 822, 823, 989,
	1060, 797, 242, 746, 839, 840, 841, 747, 842, 843,
	748, 749, 844, 845, 846, 847, 750, 848, 849, 850,
	828, 829, 830, 831, 832, 833, 834, 835, 838, 836,
	837, 0, 945, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 807, 199, 212, 312, 1541, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 346, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948,
	970, 1001, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 928, 196, 0, 0, 202,
	0, 203, 205, 915, 201, 1032, 1057, 977, 991, 902,
	1044, 0, 0, 448, 803, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 357, 909, 865, 0, 0, 856,
	707, 857, 890, 259, 706, 1018, 963, 1046, 946, 978,
	988, 258, 244, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 477, 190, 811, 314, 0, 0,
	475, 423, 339, 0, 0, 944, 0, 795, 796, 929,
	987, 876, 974, 1050, 910, 979, 1051, 89, 0, 2108,
	0, 0, 732, 557, 733, 735, 736, 737, 738, 0,
	0, 171, 734, 739, 740, 741, 0, 939, 984, 1063,
	855, 704, 721, 860, 810, 0, 1036, 897, 898, 263,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 468, 990, 999, 1013, 919, 376, 283, 0,
	0, 0, 0, 718, 719, 0, 0, 0, 0, 826,
	0, 720, 0, 870, 716, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 722, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 340, 867, 798,
	1034, 927, 301, 191, 1040, 925, 824, 993, 871, 1022,
	1056, 913, 311, 869, 195, 866, 872, 911, 353, 1002,
	1008, 808, 198, 313, 1019, 891, 904, 729, 0, 392,
	980, 467, 710, 278, 0, 966, 391, 315, 460, 994,
	1042, 466, 914, 442, 476, 481, 271, 947, 234, 420,
	261, 254, 896, 1012, 859, 284, 375, 249, 306, 930,
	986, 892, 241, 997, 973, 1024, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 293, 285, 1027, 1025,
	905, 361, 224, 957, 950, 943, 812, 470, 1059, 257,
	1009, 472, 180, 406, 405, 917, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 485, 220, 309, 450, 709,
	277, 352, 982, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1006, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 981, 389, 427, 473, 975, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1004, 216, 237, 428, 210, 1038, 1021,
	968, 932, 938, 861, 0, 209, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 281, 992, 730,
	731, 246, 801, 1053, 211, 868, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 969, 956, 954, 862, 1037, 967,
	955, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 958, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 880, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 996, 1062,
	360, 393, 233, 469, 421, 262, 878, 1066, 825, 813,
	814, 817, 961, 962, 815, 818, 819, 827, 799, 800,
	802, 804, 805, 806, 949, 1041, 863, 809, 1017, 820,
	821, 822, 823, 989, 1060, 797, 242, 746, 839, 840,
	841, 747, 842, 843, 748, 749, 844, 845, 846, 847,
	750, 848, 849, 850, 828, 829, 830, 831, 832, 833,
	834, 835, 838, 836, 837, 0, 945, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 807, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 346, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 471, 252, 948, 970, 1001, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 928,
	196, 0, 0, 202, 0, 203, 205, 915, 201, 1032,
	1057, 977, 991, 902, 1044, 0, 0, 448, 803, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 357, 909,
	865, 0, 0, 856, 707, 857, 890, 259, 706, 1018,
	963, 1046, 946, 978, 988, 258, 244, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 477, 190,
	811, 314, 0, 0, 475, 423, 339, 0, 0, 944,
	0, 795, 796, 929, 987, 876, 974, 1050, 910, 979,
	1051, 89, 0, 0, 0, 0, 732, 557, 733, 735,
	736, 737, 738, 0, 0, 171, 734, 739, 740, 741,
	0, 939, 984, 1063, 855, 704, 721, 860, 810, 0,
	1036, 897, 898, 263, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 468, 990, 999, 1013,
	919, 376, 283, 0, 0, 0, 0, 718, 719, 0,
	0, 0, 0, 826, 0, 720, 0, 870, 716, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 722, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 340, 867, 798, 1034, 927, 301, 191, 1040, 925,
	824, 993, 871, 1022, 1056, 913, 311, 869, 195, 866,
	872, 911, 353, 1002, 1008, 808, 198, 313, 1019, 891,
	904, 729, 0, 392, 980, 467, 710, 278, 0, 966,
	391, 315, 460, 994, 1042, 466, 914, 442, 476, 481,
	271, 947, 234, 420, 261, 254, 896, 1012, 859, 284,
	375, 249, 306, 930, 986, 892, 241, 997, 973, 1024,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	293, 285, 1027, 1025, 905, 361, 224, 957, 950, 943,
	812, 470, 1059, 257, 1009, 472, 180, 406, 405, 917,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 485,
	220, 309, 450, 709, 277, 352, 982, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1006, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 981, 389, 427, 473, 975,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1004, 216, 237,
	428, 210, 1038, 1021, 968, 932, 938, 861, 0, 209,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 281, 992, 730, 731, 246, 801, 1053, 211, 868,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 969, 956,
	954, 862, 1037, 967, 955, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 958, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 880, 1014, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 996, 1062, 360, 393, 233, 469, 421, 262,
	878, 1066, 825, 813, 814, 817, 961, 962, 815, 818,
	819, 827, 799, 800, 802, 804, 805, 806, 949, 1041,
	863, 809, 1017, 820, 821, 822, 823, 989, 1060, 797,
	242, 746, 839, 840, 841, 747, 842, 843, 748, 749,
	844, 845, 846, 847, 750, 848, 849, 850, 828, 829,
	830, 831, 832, 833, 834, 835, 838, 836, 837, 0,
	945, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 807, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 346,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970, 1001,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 928, 196, 0, 0, 202, 0, 203,
	205, 915, 201, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 448, 803, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 1106, 857,
	890, 259, 1104, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 477, 190, 811, 314, 0, 0, 475, 423,
	339, 0, 0, 944, 0, 795, 796, 929, 987, 876,
	974, 1050, 910, 979, 1051, 89, 0, 0, 0, 0,
	732, 557, 733, 735, 736, 737, 738, 0, 0, 171,
	734, 739, 740, 741, 0, 939, 984, 1063, 855, 1123,
	721, 860, 810, 0, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 718, 719, 0, 0, 0, 0, 826, 0, 720,
	0, 870, 716, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 722, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 798, 1034, 927,
	301, 191, 1040, 925, 824, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 808,
	198, 313, 1019, 891, 904, 729, 0, 392, 980, 467,
	710, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 812, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 709, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 730, 731, 246,
	801, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 878, 1066, 825, 813, 814, 817,
	961, 962, 815, 818, 819, 827, 799, 800, 802, 804,
	805, 806, 949, 1041, 863, 809, 1017, 820, 821, 822,
	823, 989, 1060, 797, 242, 746, 839, 840, 841, 747,
	842, 843, 748, 749, 844, 845, 846, 847, 750, 848,
	849, 850, 828, 829, 830, 831, 832, 833, 834, 835,
	838, 836, 837, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 807, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 448, 803, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 357, 909, 865, 0,
	0, 856, 1106, 857, 890, 259, 1104, 1018, 963, 1046,
	946, 978, 988, 258, 244, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 477, 190, 811, 314,
	0, 0, 475, 423, 339, 0, 0, 944, 0, 795,
	796, 929, 987, 876, 974, 1050, 910, 979, 1051, 89,
	0, 0, 0, 0, 732, 557, 733, 735, 736, 737,
	738, 0, 0, 171, 734, 739, 740, 741, 0, 939,
	984, 1063, 855, 1123, 721, 860, 810, 0, 1036, 897,
	898, 263, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 468, 990, 999, 1013, 919, 376,
	283, 0, 0, 0, 0, 718, 719, 0, 0, 0,
	0, 826, 0, 720, 0, 870, 716, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 722,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 340,
	867, 798, 1034, 927, 301, 191, 1040, 925, 824, 993,
	871, 1022, 1056, 913, 311, 869, 195, 866, 872, 911,
	353, 1002, 1008, 808, 198, 313, 1019, 891, 904, 729,
	0, 392, 980, 467, 710, 278, 0, 4517, 391, 315,
	460, 994, 1042, 466, 914, 442, 476, 481, 271, 947,
	234, 420, 261, 254, 896, 1012, 859, 284, 375, 249,
	306, 930, 986, 892, 241, 997, 973, 1024, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 293, 285,
	1027, 1025, 905, 361, 224, 957, 950, 943, 812, 470,
	1059, 257, 1009, 472, 180, 406, 405, 917, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 485, 220, 309,
	450, 709, 277, 352, 982, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1006, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 981, 389, 427, 473, 975, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1004, 216, 237, 428, 210,
	1038, 1021, 968, 932, 938, 861, 0, 209, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 281,
	992, 730, 731, 246, 801, 1053, 211, 868, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 969, 956, 954, 862,
	1037, 967, 955, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 958, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 880, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	996, 1062, 360, 393, 233, 469, 421, 262, 878, 1066,
	825, 813, 814, 817, 961, 962, 815, 818, 819, 827,
	799, 800, 802, 804, 805, 806, 949, 1041, 863, 809,
	1017, 820, 821, 822, 823, 989, 1060, 797, 242, 746,
	839, 840, 841, 747, 842, 843, 748, 749, 844, 845,
	846, 847, 750, 848, 849, 850, 828, 829, 830, 831,
	832, 833, 834, 835, 838, 836, 837, 0, 945, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	807, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 346, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 471, 252, 948, 970, 1001, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 928, 196, 0, 0, 202, 0, 203, 205, 915,
	201, 1032, 1057, 977, 991, 902, 1044, 0, 0, 448,
	803, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	357, 909, 865, 0, 0, 856, 1106, 857, 890, 259,
	1104, 1018, 963, 1046, 946, 978, 988, 258, 244, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	477, 190, 811, 314, 0, 0, 475, 423, 339, 0,
	0, 944, 0, 795, 796, 929, 987, 876, 974, 1050,
	910, 979, 1051, 89, 0, 0, 0, 0, 732, 557,
	733, 735, 736, 737, 738, 0, 0, 171, 734, 739,
	740, 741, 0, 939, 984, 1063, 855, 1123, 721, 860,
	810, 0, 1036, 897, 898, 263, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 468, 990,
	999, 1013, 919, 376, 283, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 826, 0, 720, 0, 870,
	716, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 722, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 340, 867, 798, 1034, 927, 301, 191,
	1040, 925, 824, 993, 871, 1022, 1056, 913, 311, 869,
	195, 866, 872, 911, 353, 1002, 1008, 808, 198, 313,
	1019, 891, 904, 729, 0, 392, 980, 467, 710, 278,
	0, 966, 391, 315, 460, 994, 1042, 466, 914, 442,
	476, 481, 271, 947, 234, 420, 261, 254, 896, 1012,
	859, 284, 375, 249, 306, 930, 986, 892, 241, 997,
	973, 1024, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 293, 285, 1027, 1025, 905, 361, 224, 957,
	950, 943, 812, 470, 1059, 257, 1009, 472, 180, 406,
	405, 917, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 485, 220, 309, 450, 709, 277, 352, 982, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1006,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 981, 389, 427,
	473, 975, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1004,
	216, 237, 428, 210, 1038, 1021, 968, 932, 938, 861,
	0, 209, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 281, 992, 730, 731, 246, 801, 1053,
	211, 868, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	969, 956, 954, 862, 1037, 967, 955, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 958, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 880,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 996, 1062, 360, 393, 233, 469,
	421, 262, 878, 1066, 825, 813, 814, 817, 961, 962,
	815, 818, 819, 827, 799, 800, 802, 804, 805, 806,
	2351, 2352, 2353, 809, 1017, 820, 821, 822, 823, 989,
	1060, 797, 242, 746, 839, 840, 841, 747, 842, 843,
	748, 749, 844, 845, 846, 847, 750, 848, 849, 850,
	828, 829, 830, 831, 832, 833, 834, 835, 838, 836,
	837, 0, 945, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 807, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 346, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948,
	970, 1001, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 928, 196, 0, 0, 202,
	0, 203, 205, 915, 201, 1032, 1057, 977, 991, 1830,
	2009, 0, 3696, 448, 1864, 2013, 1813, 1843, 2031, 1849,
	1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767,
	1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926,
	1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988,
	2010, 1883, 0, 172, 477, 190, 3697, 314, 1985, 497,
	3698, 423, 339, 500, 499, 1879, 1994, 1900, 1963, 1862,
	1935, 1795, 1918, 2015, 1841, 1927, 2016, 89, 0, 696,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1923, 2007, 1834, 498, 1874, 1932, 2036,
	1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263,
	0, 0, 0, 0, 0, 0, 0, 1877, 1901, 1953,
	1859, 0, 468, 1938, 1948, 1966, 1851, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1916,
	0, 0, 0, 1787, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968,
	3700, 1860, 301, 191, 2004, 1858, 1857, 1942, 1788, 1978,
	2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952,
	1960, 177, 198, 313, 1975, 1816, 1833, 245, 2181, 392,
	1928, 467, 496, 278, 0, 1909, 391, 315, 460, 1943,
	2006, 466, 1845, 442, 476, 481, 271, 1885, 234, 420,
	261, 254, 1824, 1965, 1770, 284, 375, 249, 306, 1863,
	1934, 1817, 241, 1946, 1917, 1980, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1976, 1959, 1982,
	1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981,
	1835, 361, 224, 1898, 1891, 1878, 1956, 470, 2032, 257,
	1961, 472, 180, 406, 405, 1848, 292, 1962, 181, 170,
	385, 182, 302, 204, 1987, 485, 220, 309, 450, 495,
	277, 352, 1930, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1958, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 2014, 322, 266, 270, 286,
	297, 1929, 389, 427, 473, 1920, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1954, 216, 237, 428, 210, 2002, 1977,
	1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870,
	1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 463,
	464, 246, 1784, 2022, 211, 1785, 2021, 349, 356, 348,
	2025, 2023, 459, 2003, 1912, 1897, 1895, 1777, 2001, 1910,
	1896, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1899, 425, 320, 0, 206, 0, 424, 2012,
	2038, 439, 226, 1803, 1969, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1945, 2035,
	360, 393, 233, 469, 421, 262, 1799, 0, 1802, 1797,
	1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 192,
	193, 1995, 1996, 194, 1890, 2005, 1778, 0, 1973, 188,
	189, 174, 179, 1937, 2033, 1850, 242, 164, 1774, 1775,
	1776, 165, 1880, 1881, 167, 168, 1991, 1990, 1989, 1992,
	169, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889,
	1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1908, 199,
	212, 312, 3699, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1970, 1915, 0, 1854, 1856, 1855,
	1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796,
	1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876,
	1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984,
	1986, 471, 252, 1888, 1913, 1951, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 1861,
	196, 0, 0, 202, 0, 203, 205, 1846, 201, 1993,
	2029, 1925, 1939, 1830, 2009, 0, 1971, 448, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 172, 477, 190,
	2020, 314, 1985, 497, 475, 423, 339, 500, 499, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1923, 2007, 1834,
	498, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 3202,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 191, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 177, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 467, 2279, 278, 0, 1909,
	391, 315, 460, 1943, 2006, 466, 1845, 442, 476, 481,
	271, 1885, 234, 420, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 470, 2032, 257, 1961, 472, 180, 406, 405, 1848,
	292, 1962, 181, 170, 385, 182, 302, 204, 1987, 485,
	220, 309, 450, 2278, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1958, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 2014,
	322, 266, 270, 286, 297, 1929, 389, 427, 473, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1954, 216, 237,
	428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209,
	1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924,
	1808, 281, 1941, 463, 464, 246, 1784, 2022, 211, 1785,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897,
	1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1899, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1803, 1969, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1945, 2035, 360, 393, 233, 469, 421, 262,
	1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018,
	2019, 1957, 1792, 192, 193, 1995, 1996, 194, 1890, 2005,
	1778, 0, 1973, 188, 189, 174, 179, 1937, 2033, 1850,
	242, 164, 1774, 1775, 1776, 165, 1880, 1881, 167, 168,
	1991, 1990, 1989, 1992, 169, 2026, 2024, 2027, 1793, 1814,
	1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823,
	1882, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1908, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1970, 1915,
	0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346,
	1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847,
	1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947,
	1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 1861, 196, 0, 0, 202, 0, 203,
	205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0,
	1971, 448, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933,
	1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768,
	1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258,
	244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883,
	0, 172, 477, 190, 2020, 314, 1985, 497, 475, 423,
	339, 500, 499, 1879, 1994, 1900, 1963, 1862, 1935, 1795,
	1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1923, 2007, 1834, 498, 1874, 1932, 2036, 1766, 1919,
	0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0,
	0, 0, 0, 0, 0, 1877, 1901, 1953, 1859, 0,
	468, 1938, 1948, 1966, 1851, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 1916, 0, 0,
	0, 1787, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 1794,
	1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860,
	301, 191, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844,
	311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 177,
	198, 313, 1975, 1816, 1833, 245, 2181, 392, 1928, 467,
	496, 278, 0, 1909, 391, 315, 460, 1943, 2006, 466,
	1845, 442, 476, 481, 271, 1885, 234, 420, 261, 254,
	1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817,
	241, 1946, 1917, 1980, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1976, 1959, 1982, 1810, 1790,
	1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361,
	224, 1898, 1891, 1878, 1956, 470, 2032, 257, 1961, 472,
	180, 406, 405, 1848, 292, 1962, 181, 170, 385, 182,
	302, 204, 1987, 485, 220, 309, 450, 495, 277, 352,
	1930, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1958, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2014, 322, 266, 270, 286, 297, 1929,
	389, 427, 473, 1920, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1954, 216, 237, 428, 210, 2002, 1977, 1911, 1866,
	1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950,
	1821, 1837, 1809, 1924, 1808, 281, 1941, 463, 464, 246,
	1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023,
	459, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1899, 425, 320, 0, 206, 0, 424, 2012, 2038, 439,
	226, 1803, 1969, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1945, 2035, 360, 393,
	233, 469, 421, 262, 1799, 0, 1802, 1797, 1800, 1798,
	1903, 1904, 2017, 2018, 2019, 1957, 1792, 192, 193, 1995,
	1996, 194, 1890, 2005, 1778, 0, 1973, 188, 189, 174,
	179, 1937, 2033, 1850, 242, 164, 1774, 1775, 1776, 165,
	1880, 1881, 167, 168, 1991, 1990, 1989, 1992, 169, 2026,
	2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922,
	1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1908, 199, 212, 312,
	2034, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807,
	1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819,
	1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906,
	1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 471,
	252, 1888, 1913, 1951, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 1861, 196, 0,
	0, 202, 0, 203, 205, 1846, 201, 1993, 2029, 1925,
	1939, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813, 1843,
	2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763,
	1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011,
	1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828,
	1931, 1988, 2010, 1883, 0, 172, 477, 190, 2020, 314,
	1985, 497, 475, 423, 339, 500, 499, 1879, 1994, 1900,
	1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0,
	0, 0, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1923, 2007, 1834, 498, 1874,
	1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825,
	1826, 263, 0, 0, 0, 0, 0, 0, 0, 1877,
	1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851, 376,
	283, 0, 0, 0, 0, 0, 0, 2272, 0, 1820,
	0, 1916, 0, 0, 0, 1787, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340,
	1783, 1968, 1998, 1860, 301, 191, 2004, 1858, 1857, 1942,
	1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842,
	353, 1952, 1960, 177, 198, 313, 1975, 1816, 1833, 245,
	0, 392, 1928, 467, 2279, 278, 0, 1909, 391, 315,
	460, 1943, 2006, 466, 1845, 442, 476, 481, 271, 1885,
	234, 420, 261, 254, 1824, 1965, 1770, 284, 375, 249,
	306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1976,
	1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285,
	1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 470,
	2032, 257, 1961, 472, 180, 406, 405, 1848, 292, 1962,
	181, 170, 385, 182, 302, 204, 1987, 485, 220, 309,
	450, 2278, 277, 352, 1930, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1958, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 2014, 322, 266,
	270, 286, 297, 1929, 389, 427, 473, 1920, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1954, 216, 237, 428, 210,
	2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868,
	1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281,
	1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021, 349,
	356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895, 1777,
	2001, 1910, 1896, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1899, 425, 320, 0, 206, 0,
	424, 2012, 2038, 439, 226, 1803, 1969, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1945, 2035, 360, 393, 233, 469, 421, 262, 1799, 0,
	1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957,
	1792, 192, 193, 1995, 1996, 194, 1890, 2005, 1778, 0,
	1973, 188, 189, 174, 179, 1937, 2033, 1850, 242, 164,
	1774, 1775, 1776, 165, 1880, 1881, 167, 168, 1991, 1990,
	1989, 1992, 169, 2026, 2024, 2027, 1793, 1814, 1836, 1886,
	1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1908, 199, 212, 312, 2034, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1970, 1915, 0, 1854,
	1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761,
	1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865,
	1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972,
	1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 1861, 196, 0, 0, 202, 0, 203, 205, 1846,
	201, 1993, 2029, 1925, 1939, 1830, 2009, 0, 1971, 448,
	1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902,
	357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259,
	1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894,
	1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 172,
	477, 190, 2020, 314, 1985, 497, 475, 423, 339, 500,
	499, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015,
	1841, 1927, 2016, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1923,
	2007, 1834, 498, 1874, 1932, 2036, 1766, 1919, 0, 1771,
	1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0, 0,
	0, 0, 0, 1877, 1901, 1953, 1859, 0, 468, 1938,
	1948, 1966, 1851, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1916, 0, 0, 0, 1787,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 1794, 1764, 1822,
	1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 191,
	2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786,
	195, 1781, 1789, 1842, 353, 1952, 1960, 177, 198, 313,
	1975, 1816, 1833, 245, 0, 392, 1928, 467, 2279, 278,
	0, 1909, 391, 315, 460, 1943, 2006, 466, 1845, 442,
	476, 481, 271, 1885, 234, 420, 261, 254, 1824, 1965,
	1770, 284, 375, 249, 306, 1863, 1934, 1817, 241, 1946,
	1917, 1980, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791,
	1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898,
	1891, 1878, 1956, 470, 2032, 257, 1961, 472, 180, 406,
	405, 1848, 292, 1962, 181, 170, 385, 182, 302, 204,
	1987, 485, 220, 309, 450, 2278, 277, 352, 1930, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1958,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 2014, 322, 266, 270, 286, 297, 1929, 389, 427,
	473, 1920, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1954,
	216, 237, 428, 210, 2002, 1977, 1911, 1866, 1872, 1772,
	0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837,
	1809, 1924, 1808, 281, 1941, 463, 464, 246, 1784, 2022,
	211, 1785, 2021, 349, 356, 348, 2025, 2023, 459, 2003,
	1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1899, 425,
	320, 0, 206, 0, 424, 2012, 2038, 439, 226, 1803,
	1969, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1945, 2035, 360, 393, 233, 469,
	421, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904,
	2017, 2018, 2019, 1957, 1792, 192, 193, 1995, 1996, 194,
	1890, 2005, 1778, 0, 1973, 188, 189, 174, 179, 1937,
	2033, 1850, 242, 164, 1774, 1775, 1776, 165, 1880, 1881,
	167, 168, 1991, 1990, 1989, 1992, 169, 2026, 2024, 2027,
	1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940,
	1949, 1823, 1882, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1908, 199, 212, 312, 2034, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804,
	2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838,
	1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914,
	1944, 1947, 1964, 1972, 1979, 1984, 1986, 471, 252, 1888,
	1913, 1951, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 1861, 196, 0, 0, 202,
	0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939, 902,
	1044, 0, 0, 448, 1111, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 357, 909, 865, 0, 0, 856,
	1106, 857, 890, 259, 1104, 1018, 963, 1046, 946, 978,
	988, 258, 244, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 477, 190, 1144, 314, 0, 497,
	475, 423, 339, 500, 499, 944, 0, 1118, 1131, 929,
	987, 876, 974, 1050, 910, 979, 1051, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1126, 1140, 1107, 498, 939, 984, 1063,
	855, 1123, 0, 860, 1095, 0, 1036, 897, 898, 263,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 468, 990, 999, 1013, 919, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 870, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 340, 867, 1133,
	1034, 927, 301, 191, 1040, 925, 1110, 993, 871, 1022,
	1056, 913, 311, 869, 195, 866, 872, 911, 353, 1002,
	1008, 177, 198, 313, 1019, 891, 904, 245, 3302, 392,
	980, 467, 2364, 278, 0, 966, 391, 315, 460, 994,
	1042, 466, 914, 442, 476, 481, 271, 947, 234, 420,
	261, 254, 896, 1012, 859, 284, 375, 249, 306, 930,
	986, 892, 241, 997, 973, 1024, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 293, 285, 1027, 1025,
	905, 361, 224, 957, 950, 943, 1129, 470, 1059, 257,
	1009, 472, 180, 406, 405, 917, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 485, 220, 309, 450, 2363,
	277, 352, 982, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1006, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 981, 389, 427, 473, 975, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1004, 216, 237, 428, 210, 1038, 1021,
	968, 932, 938, 861, 0, 209, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 281, 992, 463,
	464, 246, 1096, 1053, 211, 868, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 969, 956, 954, 862, 1037, 967,
	955, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 958, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 880, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 996, 1062,
	360, 393, 233, 469, 421, 262, 1101, 0, 1103, 1099,
	1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192,
	193, 1138, 1139, 194, 949, 1041, 863, 0, 1017, 188,
	189, 174, 179, 989, 1060, 1109, 242, 164, 1092, 1093,
	1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137,
	169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117,
	1124, 1125, 1132, 1127, 1128, 0, 945, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1121, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 346, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 471, 252, 948, 970, 1001, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 928,
	196, 0, 0, 202, 0, 203, 205, 915, 201, 1032,
	1057, 977, 991, 1830, 2009, 0, 1971, 448, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 172, 477, 190,
	2020, 314, 1985, 497, 475, 423, 339, 500, 499, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1923, 2007, 1834,
	498, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 2859,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 191, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 177, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 467, 496, 278, 0, 1909,
	391, 315, 460, 1943, 2006, 466, 1845, 442, 476, 481,
	271, 1885, 234, 420, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 470, 2032, 257, 1961, 472, 180, 406, 405, 1848,
	292, 1962, 181, 170, 385, 182, 302, 204, 1987, 485,
	220, 309, 450, 495, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1958, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 2014,
	322, 266, 270, 286, 297, 1929, 389, 427, 473, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1954, 216, 237,
	428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209,
	1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924,
	1808, 281, 1941, 463, 464, 246, 1784, 2022, 211, 1785,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897,
	1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1899, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1803, 1969, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1945, 2035, 360, 393, 233, 469, 421, 262,
	1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018,
	2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005,
	1778, 0, 1973, 188, 189, 174, 179, 1937, 2033, 1850,
	242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0,
	1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814,
	1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823,
	1882, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1908, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1970, 1915,
	0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346,
	1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847,
	1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947,
	1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 1861, 196, 0, 0, 202, 0, 203,
	205, 1846, 201, 1993, 2029, 1925, 1939, 902, 1044, 0,
	0, 448, 1111, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 1106, 857,
	890, 259, 1104, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 477, 190, 1144, 314, 0, 497, 475, 423,
	339, 500, 499, 944, 0, 1118, 1131, 929, 987, 876,
	974, 1050, 910, 979, 1051, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1126, 1140, 1107, 498, 939, 984, 1063, 855, 1123,
	0, 860, 1095, 0, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 870, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 1133, 1034, 927,
	301, 191, 1040, 925, 1110, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 177,
	198, 313, 1019, 891, 904, 245, 0, 392, 980, 467,
	2364, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 1129, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 2363, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 463, 464, 246,
	1096, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100,
	1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138,
	1139, 194, 949, 1041, 863, 0, 1017, 188, 189, 174,
	179, 989, 1060, 1109, 242, 164, 1092, 1093, 1094, 165,
	1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146,
	1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125,
	1132, 1127, 1128, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1121, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813, 1843,
	2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763,
	1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011,
	1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828,
	1931, 1988, 2010, 1883, 0, 172, 477, 190, 2020, 314,
	1985, 497, 475, 423, 339, 500, 499, 1879, 1994, 1900,
	1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1923, 2007, 1834, 498, 1874,
	1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825,
	1826, 263, 0, 0, 0, 0, 0, 0, 0, 1877,
	1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1916, 0, 0, 0, 1787, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340,
	1783, 1968, 1998, 1860, 301, 191, 2004, 1858, 1857, 1942,
	1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842,
	353, 1952, 1960, 177, 198, 313, 1975, 1816, 1833, 245,
	0, 392, 1928, 467, 496, 278, 0, 1909, 391, 315,
	460, 1943, 2006, 466, 1845, 442, 476, 481, 271, 1885,
	234, 420, 261, 254, 1824, 1965, 1770, 284, 375, 249,
	306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1976,
	1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285,
	1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 470,
	2032, 257, 1961, 472, 180, 406, 405, 1848, 292, 1962,
	181, 170, 385, 182, 302, 204, 1987, 485, 220, 309,
	450, 495, 277, 352, 1930, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1958, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 2014, 322, 266,
	270, 286, 297, 1929, 389, 427, 473, 1920, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1954, 216, 237, 428, 210,
	2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868,
	1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281,
	1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021, 349,
	356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895, 1777,
	2001, 1910, 1896, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1899, 425, 320, 0, 206, 0,
	424, 2012, 2038, 439, 226, 1803, 1969, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1945, 2035, 360, 393, 233, 469, 421, 262, 1799, 0,
	1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957,
	1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778, 0,
	1973, 188, 189, 174, 179, 1937, 2033, 1850, 242, 0,
	1774, 1775, 1776, 0, 1880, 1881, 0, 0, 1991, 1990,
	1989, 1992, 0, 2026, 2024, 2027, 1793, 1814, 1836, 1886,
	1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1908, 199, 212, 312, 2034, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1970, 1915, 0, 1854,
	1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761,
	1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865,
	1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972,
	1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 1861, 196, 0, 0, 202, 0, 203, 205, 1846,
	201, 1993, 2029, 1925, 1939, 902, 1044, 0, 0, 448,
	1111, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	357, 909, 865, 0, 0, 856, 1106, 857, 890, 259,
	1104, 1018, 963, 1046, 946, 978, 988, 258, 244, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	477, 190, 1144, 314, 0, 0, 475, 423, 339, 0,
	0, 944, 0, 1118, 1131, 929, 987, 876, 974, 1050,
	910, 979, 1051, 0, 0, 0, 0, 0, 0, 557,
	0, 1454, 0, 0, 1455, 0, 0, 171, 0, 1126,
	1140, 1107, 0, 939, 984, 1063, 855, 1123, 0, 860,
	1095, 0, 1036, 897, 898, 263, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 468, 990,
	999, 1013, 919, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1122, 0, 0, 0, 870,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 340, 867, 1133, 1034, 927, 301, 191,
	1040, 925, 1110, 993, 871, 1022, 1056, 913, 311, 869,
	195, 866, 872, 911, 353, 1002, 1008, 177, 198, 313,
	1019, 891, 904, 245, 0, 392, 980, 467, 1090, 278,
	0, 966, 391, 315, 460, 994, 1042, 466, 914, 442,
	476, 481, 271, 947, 234, 420, 261, 254, 896, 1012,
	859, 284, 375, 249, 306, 930, 986, 892, 241, 997,
	973, 1024, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 293, 285, 1027, 1025, 905, 361, 224, 957,
	950, 943, 1129, 470, 1059, 257, 1009, 472, 180, 406,
	405, 917, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 485, 220, 309, 450, 1089, 277, 352, 982, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1006,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 981, 389, 427,
	473, 975, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1004,
	216, 237, 428, 210, 1038, 1021, 968, 932, 938, 861,
	0, 209, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 281, 992, 463, 464, 246, 1096, 1053,
	211, 868, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	969, 956, 954, 862, 1037, 967, 955, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 958, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 880,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 996, 1062, 360, 393, 233, 469,
	421, 262, 1101, 0, 1103, 1099, 1102, 1100, 1119, 1120,
	1141, 1142, 1143, 1130, 1097, 192, 193, 1138, 1139, 194,
	949, 1041, 863, 0, 1017, 188, 189, 174, 179, 989,
	1060, 1109, 242, 164, 1092, 1093, 1094, 165, 1113, 1114,
	167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145, 1147,
	1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127,
	1128, 0, 945, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1121, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 346, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948,
	970, 1001, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 928, 196, 0, 0, 202,
	0, 203, 205, 915, 201, 1032, 1057, 977, 991, 902,
	1044, 0, 0, 448, 1111, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 357, 909, 865, 0, 0, 856,
	1106, 857, 890, 259, 1104, 1018, 963, 1046, 946, 978,
	988, 258, 244, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 477, 190, 1144, 314, 0, 0,
	475, 423, 339, 0, 0, 944, 0, 1118, 1131, 929,
	987, 876, 974, 1050, 910, 979, 1051, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1126, 1140, 1107, 0, 939, 984, 1063,
	855, 1123, 0, 860, 1095, 0, 1036, 897, 898, 263,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 468, 990, 999, 1013, 919, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 870, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 340, 867, 1133,
	1034, 927, 301, 191, 1040, 925, 1110, 993, 871, 1022,
	1056, 913, 311, 869, 195, 866, 872, 911, 353, 1002,
	1008, 177, 198, 313, 1019, 891, 904, 245, 0, 392,
	980, 467, 1090, 278, 0, 966, 391, 315, 460, 994,
	1042, 466, 914, 442, 476, 481, 271, 947, 234, 420,
	261, 254, 896, 1012, 859, 284, 375, 249, 306, 930,
	986, 892, 241, 997, 973, 1024, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 293, 285, 1027, 1025,
	905, 361, 224, 957, 950, 943, 1129, 470, 1059, 257,
	1009, 472, 180, 406, 405, 917, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 485, 220, 309, 450, 1089,
	277, 352, 982, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1006, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 981, 389, 427, 473, 975, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1004, 216, 237, 428, 210, 1038, 1021,
	968, 932, 938, 861, 0, 209, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 281, 992, 463,
	464, 246, 1096, 1053, 211, 868, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 969, 956, 954, 862, 1037, 967,
	955, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 958, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 880, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 996, 1062,
	360, 393, 233, 469, 421, 262, 1101, 0, 1103, 1099,
	1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192,
	193, 1138, 1139, 194, 949, 1041, 863, 0, 1017, 188,
	189, 174, 179, 989, 1060, 1109, 242, 164, 1092, 1093,
	1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137,
	169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117,
	1124, 1125, 1132, 1127, 1128, 0, 945, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1121, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 346, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 471, 252, 948, 970, 1001, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 928,
	196, 0, 0, 202, 0, 203, 205, 915, 201, 1032,
	1057, 977, 991, 902, 1044, 0, 0, 448, 1111, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 357, 909,
	865, 0, 0, 856, 1106, 857, 890, 259, 1104, 1018,
	963, 1046, 946, 978, 988, 258, 244, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 477, 190,
	1144, 314, 0, 0, 475, 423, 339, 0, 0, 944,
	0, 1118, 1131, 929, 987, 876, 974, 1050, 910, 979,
	1051, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1126, 1140, 1107,
	0, 939, 984, 1063, 855, 1123, 0, 860, 1095, 0,
	1036, 897, 898, 263, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 468, 990, 999, 1013,
	919, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 0, 0, 0, 870, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1112, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 340, 867, 1133, 1034, 927, 301, 191, 1040, 925,
	1110, 993, 871, 1022, 1056, 913, 311, 869, 195, 866,
	872, 911, 353, 1002, 1008, 177, 198, 313, 1019, 891,
	904, 245, 0, 392, 980, 467, 1090, 278, 0, 966,
	391, 315, 460, 994, 1042, 466, 914, 442, 476, 481,
	271, 947, 234, 420, 261, 254, 896, 1012, 859, 284,
	375, 249, 306, 930, 986, 892, 241, 997, 973, 1024,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	293, 285, 1027, 1025, 905, 361, 224, 957, 950, 943,
	1129, 470, 1059, 257, 1009, 472, 180, 406, 405, 917,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 485,
	220, 309, 450, 1089, 277, 352, 982, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1006, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 981, 389, 427, 473, 975,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1004, 216, 237,
	428, 210, 1038, 1021, 968, 932, 938, 861, 0, 209,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 281, 992, 463, 464, 246, 1096, 1053, 211, 1084,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 969, 956,
	954, 862, 1037, 967, 955, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 1080, 958, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 880, 1014, 454,
	178, 381, 227, 279, 267, 372, 1085, 1083, 1074, 1075,
	308, 316, 996, 1062, 360, 393, 233, 469, 421, 262,
	1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142,
	1143, 1130, 1097, 192, 193, 1138, 1139, 194, 949, 1041,
	863, 0, 1017, 188, 189, 174, 179, 989, 1060, 1109,
	242, 164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168,
	1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105,
	1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0,
	945, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1121, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 346,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970, 1001,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 1081, 1082, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 928, 196, 0, 0, 202, 0, 203,
	205, 915, 201, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 448, 1111, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 1106, 857,
	890, 259, 1104, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 477, 190, 1144, 314, 0, 0, 475, 423,
	339, 0, 0, 944, 0, 1118, 1131, 929, 987, 876,
	974, 1050, 910, 979, 1051, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1126, 1140, 1107, 0, 939, 984, 1063, 855, 1123,
	0, 860, 1095, 0, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 870, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 1133, 1034, 927,
	301, 191, 1040, 925, 1110, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 177,
	198, 313, 1019, 891, 904, 245, 0, 392, 980, 467,
	1090, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 1129, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 1089, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 1620, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 463, 464, 246,
	1096, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100,
	1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138,
	1139, 194, 949, 1041, 863, 0, 1017, 188, 189, 174,
	179, 989, 1060, 1109, 242, 164, 1092, 1093, 1094, 165,
	1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146,
	1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125,
	1132, 1127, 1128, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1121, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 448, 1111, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 357, 909, 865, 0,
	0, 856, 1106, 857, 890, 259, 1104, 1018, 963, 1046,
	946, 978, 988, 258, 244, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 477, 190, 1144, 314,
	0, 0, 475, 423, 339, 0, 0, 944, 0, 1118,
	1131, 929, 987, 876, 974, 1050, 910, 979, 1051, 0,
	0, 0, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1126, 1140, 1107, 0, 939,
	984, 1063, 855, 1123, 0, 860, 1095, 0, 1036, 897,
	898, 263, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 468, 990, 999, 1013, 919, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1122, 0, 0, 0, 870, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 340,
	867, 1133, 1034, 927, 301, 191, 1040, 925, 1110, 993,
	871, 1022, 1056, 913, 311, 869, 195, 866, 872, 911,
	353, 1002, 1008, 177, 198, 313, 1019, 891, 904, 245,
	0, 392, 980, 467, 1090, 278, 0, 966, 391, 315,
	460, 994, 1042, 466, 914, 442, 476, 481, 271, 947,
	234, 420, 261, 254, 896, 1012, 859, 284, 375, 249,
	306, 930, 986, 892, 241, 997, 973, 1024, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 293, 285,
	1027, 1025, 905, 361, 224, 957, 950, 943, 1129, 470,
	1059, 257, 1009, 472, 180, 406, 405, 917, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 485, 220, 309,
	450, 1089, 277, 352, 982, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1006, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 981, 389, 427, 473, 975, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	1071, 229, 407, 410, 484, 1004, 216, 237, 428, 210,
	1038, 1021, 968, 932, 938, 861, 0, 209, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 281,
	992, 463, 464, 246, 1096, 1053, 211, 1084, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 969, 956, 954, 862,
	1037, 967, 955, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 1080, 958, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 880, 1014, 454, 178, 381,
	227, 279, 267, 372, 1085, 1083, 1074, 1075, 308, 316,
	996, 1062, 360, 393, 233, 469, 421, 262, 1101, 0,
	1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130,
	1097, 192, 193, 1138, 1139, 194, 949, 1041, 863, 0,
	1017, 188, 189, 174, 179, 989, 1060, 1109, 242, 164,
	1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135,
	1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115,
	1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 945, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1121, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 346, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 471, 252, 948, 970, 1001, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 1081, 1082, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 928, 196, 0, 0, 202, 0, 203, 205, 915,
	201, 1032, 1057, 977, 991, 1830, 2009, 0, 1971, 448,
	1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902,
	357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259,
	1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894,
	1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 0,
	477, 0, 2020, 314, 1985, 0, 475, 423, 339, 0,
	0, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015,
	1841, 1927, 2016, 0, 0, 0, 0, 0, 3162, 3167,
	0, 3170, 3172, 3171, 0, 0, 0, 3164, 0, 1923,
	2007, 1834, 0, 1874, 1932, 2036, 1766, 1919, 0, 1771,
	1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0, 0,
	0, 0, 0, 1877, 1901, 1953, 1859, 0, 468, 1938,
	1948, 1966, 1851, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1916, 0, 0, 0, 1787,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 1794, 1764, 1822,
	1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 0,
	2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786,
	195, 1781, 1789, 1842, 353, 1952, 1960, 0, 198, 313,
	1975, 1816, 1833, 245, 0, 392, 1928, 467, 0, 278,
	0, 1909, 391, 315, 460, 1943, 2006, 466, 1845, 442,
	476, 481, 271, 1885, 234, 420, 261, 254, 1824, 1965,
	1770, 284, 375, 249, 306, 1863, 1934, 1817, 241, 1946,
	1917, 1980, 419, 457, 200, 334, 458, 480, 3165, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791,
	1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898,
	1891, 1878, 1956, 470, 2032, 257, 1961, 472, 0, 406,
	405, 1848, 292, 1962, 0, 0, 385, 3166, 302, 204,
	1987, 485, 220, 309, 450, 0, 277, 352, 1930, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1958,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2014, 322, 266, 270, 286, 297, 1929, 389, 427,
	473, 1920, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1954,
	216, 237, 428, 210, 2002, 1977, 1911, 1866, 1872, 1772,
	0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837,
	1809, 1924, 1808, 281, 1941, 463, 464, 246, 1784, 2022,
	211, 1785, 2021, 349, 356, 348, 2025, 2023, 459, 2003,
	1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1899, 425,
	320, 0, 206, 0, 424, 2012, 2038, 439, 226, 1803,
	1969, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1945, 2035, 360, 393, 233, 469,
	421, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904,
	2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0,
	1890, 2005, 1778, 0, 1973, 0, 0, 0, 0, 1937,
	2033, 1850, 242, 0, 1774, 1775, 1776, 0, 1880, 1881,
	0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027,
	1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940,
	1949, 1823, 1882, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1908, 199, 212, 312, 2034, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804,
	2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838,
	1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914,
	1944, 1947, 1964, 1972, 1979, 1984, 1986, 471, 252, 1888,
	1913, 1951, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 1861, 196, 0, 0, 202,
	0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939, 1830,
	2009, 0, 1971, 448, 1864, 2013, 1813, 1843, 2031, 1849,
	1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767,
	1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926,
	1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988,
	2010, 1883, 0, 0, 477, 0, 2020, 314, 1985, 0,
	475, 423, 339, 0, 0, 1879, 1994, 1900, 1963, 1862,
	1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0, 0,
	0, 0, 3956, 3167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1923, 2007, 1834, 0, 1874, 1932, 2036,
	1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263,
	0, 0, 0, 0, 0, 0, 0, 1877, 1901, 1953,
	1859, 0, 468, 1938, 1948, 1966, 1851, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1916,
	0, 0, 0, 1787, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968,
	1998, 1860, 301, 0, 2004, 1858, 1857, 1942, 1788, 1978,
	2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952,
	1960, 0, 198, 313, 1975, 1816, 1833, 245, 0, 392,
	1928, 467, 0, 278, 0, 1909, 391, 315, 460, 1943,
	2006, 466, 1845, 442, 476, 481, 271, 1885, 234, 420,
	261, 254, 1824, 1965, 1770, 284, 375, 249, 306, 1863,
	1934, 1817, 241, 1946, 1917, 1980, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1976, 1959, 1982,
	1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981,
	1835, 361, 224, 1898, 1891, 1878, 1956, 470, 2032, 257,
	1961, 472, 0, 406, 405, 1848, 292, 1962, 0, 0,
	385, 0, 302, 204, 1987, 485, 220, 309, 450, 0,
	277, 352, 1930, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 1958, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 2014, 322, 266, 270, 286,
	297, 1929, 389, 427, 473, 1920, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1954, 216, 237, 428, 210, 2002, 1977,
	1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870,
	1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 463,
	464, 246, 1784, 2022, 211, 1785, 2021, 349, 356, 348,
	2025, 2023, 459, 2003, 1912, 1897, 1895, 1777, 2001, 1910,
	1896, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1899, 425, 320, 0, 206, 0, 424, 2012,
	2038, 439, 226, 1803, 1969, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1945, 2035,
	360, 393, 233, 469, 421, 262, 1799, 0, 1802, 1797,
	1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 0,
	0, 1995, 1996, 0, 1890, 2005, 1778, 0, 1973, 0,
	0, 0, 0, 1937, 2033, 1850, 242, 0, 1774, 1775,
	1776, 0, 1880, 1881, 0, 0, 1991, 1990, 1989, 1992,
	0, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889,
	1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1908, 199,
	212, 312, 2034, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1970, 1915, 0, 1854, 1856, 1855,
	1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796,
	1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876,
	1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984,
	1986, 471, 252, 1888, 1913, 1951, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 1861,
	196, 0, 0, 202, 0, 203, 205, 1846, 201, 1993,
	2029, 1925, 1939, 1830, 2009, 0, 1971, 448, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 0, 477, 0,
	2020, 314, 1985, 0, 475, 423, 339, 0, 0, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1923, 2007, 1834,
	0, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 3908,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 0, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 0, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 467, 0, 278, 0, 1909,
	391, 315, 460, 1943, 2006, 466, 1845, 442, 476, 481,
	271, 1885, 234, 420, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 470, 2032, 257, 1961, 472, 0, 406, 405, 1848,
	292, 1962, 0, 0, 385, 0, 302, 204, 1987, 485,
	220, 309, 450, 0, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 1958, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 2014,
	322, 266, 270, 286, 297, 1929, 389, 427, 473, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1954, 216, 237,
	428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209,
	1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924,
	1808, 281, 1941, 463, 464, 246, 1784, 2022, 211, 1785,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897,
	1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1899, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1803, 1969, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1945, 2035, 360, 393, 233, 469, 421, 262,
	1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018,
	2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005,
	1778, 0, 1973, 0, 0, 0, 0, 1937, 2033, 1850,
	242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0,
	1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814,
	1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823,
	1882, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1908, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1970, 1915,
	0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346,
	1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847,
	1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947,
	1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 1861, 196, 0, 0, 202, 0, 203,
	205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0,
	1971, 448, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933,
	1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768,
	1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258,
	244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883,
	0, 0, 477, 0, 2020, 314, 1985, 0, 475, 423,
	339, 0, 0, 1879, 1994, 1900, 1963, 1862, 1935, 1795,
	1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 2007, 1834, 0, 1874, 1932, 2036, 1766, 1919,
	0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0,
	0, 0, 0, 0, 0, 1877, 1901, 1953, 1859, 0,
	468, 1938, 1948, 1966, 1851, 376, 283, 0, 0, 0,
	0, 0, 0, 3215, 0, 1820, 0, 1916, 0, 0,
	0, 1787, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 1794,
	1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860,
	301, 0, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844,
	311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 0,
	198, 313, 1975, 1816, 1833, 245, 0, 392, 1928, 467,
	0, 278, 0, 1909, 391, 315, 460, 1943, 2006, 466,
	1845, 442, 476, 481, 271, 1885, 234, 420, 261, 254,
	1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817,
	241, 1946, 1917, 1980, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1976, 1959, 1982, 1810, 1790,
	1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361,
	224, 1898, 1891, 1878, 1956, 470, 2032, 257, 1961, 472,
	0, 406, 405, 1848, 292, 1962, 0, 0, 385, 0,
	302, 204, 1987, 485, 220, 309, 450, 0, 277, 352,
	1930, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1958, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2014, 322, 266, 270, 286, 297, 1929,
	389, 427, 473, 1920, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1954, 216, 237, 428, 210, 2002, 1977, 1911, 1866,
	1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950,
	1821, 1837, 1809, 1924, 1808, 281, 1941, 463, 464, 246,
	1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023,
	459, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1899, 425, 320, 0, 206, 0, 424, 2012, 2038, 439,
	226, 1803, 1969, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1945, 2035, 360, 393,
	233, 469, 421, 262, 1799, 0, 1802, 1797, 1800, 1798,
	1903, 1904, 2017, 2018, 2019, 1957, 1792, 0, 0, 1995,
	1996, 0, 1890, 2005, 1778, 0, 1973, 0, 0, 0,
	0, 1937, 2033, 1850, 242, 0, 1774, 1775, 1776, 0,
	1880, 1881, 0, 0, 1991, 1990, 1989, 1992, 0, 2026,
	2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922,
	1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1908, 199, 212, 312,
	2034, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807,
	1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819,
	1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906,
	1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 471,
	252, 1888, 1913, 1951, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 1861, 196, 0,
	0, 202, 0, 203, 205, 1846, 201, 1993, 2029, 1925,
	1939, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813, 1843,
	2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763,
	1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011,
	1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828,
	1931, 1988, 2010, 1883, 0, 0, 477, 0, 2020, 314,
	1985, 0, 475, 423, 339, 0, 0, 1879, 1994, 1900,
	1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 2007, 1834, 0, 1874,
	1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825,
	1826, 263, 0, 0, 0, 0, 0, 0, 0, 1877,
	1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1916, 0, 0, 0, 1787, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340,
	1783, 1968, 1998, 1860, 301, 0, 2004, 1858, 1857, 1942,
	1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842,
	353, 1952, 1960, 0, 198, 313, 1975, 1816, 1833, 245,
	0, 392, 1928, 467, 0, 278, 0, 1909, 391, 315,
	460, 1943, 2006, 466, 1845, 442, 476, 481, 271, 1885,
	234, 420, 261, 254, 1824, 1965, 1770, 284, 375, 249,
	306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1976,
	1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285,
	1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 470,
	2032, 257, 1961, 472, 0, 406, 405, 1848, 292, 1962,
	0, 0, 385, 0, 302, 204, 1987, 485, 220, 309,
	450, 0, 277, 352, 1930, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 1958, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 2014, 322, 266,
	270, 286, 297, 1929, 389, 427, 473, 1920, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1954, 216, 237, 428, 210,
	2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868,
	1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281,
	1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021, 349,
	356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895, 1777,
	2001, 1910, 1896, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1899, 425, 320, 0, 206, 0,
	424, 2012, 2038, 439, 226, 1803, 1969, 454, 2325, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1945, 2035, 360, 393, 233, 469, 421, 262, 1799, 0,
	1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957,
	1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778, 0,
	1973, 0, 0, 0, 0, 1937, 2033, 1850, 242, 0,
	1774, 1775, 1776, 0, 1880, 1881, 0, 0, 1991, 1990,
	1989, 1992, 0, 2026, 2024, 2027, 1793, 1814, 1836, 1886,
	1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1908, 199, 212, 312, 2034, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1970, 1915, 0, 1854,
	1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761,
	1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865,
	1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972,
	1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 1861, 196, 0, 0, 202, 0, 203, 205, 1846,
	201, 1993, 2029, 1925, 1939, 1830, 2009, 0, 1971, 448,
	1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902,
	357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259,
	1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894,
	1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 0,
	477, 0, 2020, 314, 1985, 0, 475, 423, 339, 0,
	0, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015,
	1841, 1927, 2016, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1923,
	2007, 1834, 0, 1874, 1932, 2036, 1766, 1919, 0, 1771,
	1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0, 0,
	0, 0, 0, 1877, 1901, 1953, 1859, 0, 468, 1938,
	1948, 1966, 1851, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1916, 0, 0, 0, 1787,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 1794, 1764, 1822,
	1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 0,
	2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786,
	195, 1781, 1789, 1842, 353, 1952, 1960, 0, 198, 313,
	1975, 1816, 1833, 245, 0, 392, 1928, 467, 0, 278,
	0, 1909, 391, 315, 460, 1943, 2006, 466, 1845, 442,
	476, 481, 271, 1885, 234, 420, 261, 254, 1824, 1965,
	1770, 284, 375, 249, 306, 1863, 1934, 1817, 241, 1946,
	1917, 1980, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791,
	1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898,
	1891, 1878, 1956, 470, 2032, 257, 1961, 472, 0, 406,
	405, 1848, 292, 1962, 0, 0, 385, 0, 302, 204,
	1987, 485, 220, 309, 450, 0, 277, 352, 1930, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1958,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2014, 322, 266, 270, 286, 297, 1929, 389, 427,
	473, 1920, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1954,
	216, 237, 428, 210, 2002, 1977, 1911, 1866, 1872, 1772,
	0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837,
	1809, 1924, 1808, 281, 1941, 463, 464, 246, 1784, 2022,
	211, 1785, 2021, 349, 356, 348, 2025, 2023, 459, 2003,
	1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1899, 425,
	320, 0, 206, 0, 424, 2012, 2038, 439, 226, 1803,
	1969, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1945, 2035, 360, 393, 233, 469,
	421, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904,
	2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0,
	1890, 2005, 1778, 0, 1973, 0, 0, 0, 0, 1937,
	2033, 1850, 242, 0, 1774, 1775, 1776, 0, 1880, 1881,
	0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027,
	1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940,
	1949, 1823, 1882, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1908, 199, 212, 312, 2034, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804,
	2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838,
	1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914,
	1944, 1947, 1964, 1972, 1979, 1984, 1986, 471, 252, 1888,
	1913, 1951, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 4080,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 1861, 196, 0, 0, 202,
	0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939, 1830,
	2009, 0, 1971, 448, 1864, 2013, 1813, 1843, 2031, 1849,
	1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767,
	1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926,
	1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988,
	2010, 1883, 0, 0, 477, 0, 2020, 314, 1985, 0,
	475, 423, 339, 0, 0, 1879, 1994, 1900, 1963, 1862,
	1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1923, 2007, 1834, 0, 1874, 1932, 2036,
	1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263,
	0, 0, 0, 0, 0, 0, 0, 1877, 1901, 1953,
	1859, 0, 468, 1938, 1948, 1966, 1851, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1916,
	0, 0, 0, 1787, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968,
	1998, 1860, 301, 0, 2004, 1858, 1857, 1942, 1788, 1978,
	2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952,
	1960, 0, 198, 313, 1975, 1816, 1833, 245, 0, 392,
	1928, 467, 0, 278, 0, 1909, 391, 315, 460, 1943,
	2006, 466, 1845, 442, 476, 481, 271, 1885, 234, 420,
	261, 254, 1824, 1965, 1770, 284, 375, 249, 306, 1863,
	1934, 1817, 241, 1946, 1917, 1980, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1976, 1959, 1982,
	1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981,
	1835, 361, 224, 1898, 1891, 1878, 1956, 470, 2032, 257,
	1961, 472, 0, 406, 405, 1848, 292, 1962, 0, 0,
	385, 0, 302, 204, 1987, 485, 220, 309, 450, 0,
	277, 352, 1930, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 1958, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 2014, 322, 266, 270, 286,
	297, 1929, 389, 427, 473, 1920, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1954, 216, 237, 428, 210, 2002, 1977,
	1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870,
	1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 463,
	464, 246, 1784, 2022, 211, 1785, 2021, 349, 356, 348,
	2025, 2023, 459, 2003, 1912, 1897, 1895, 1777, 2001, 1910,
	1896, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1899, 425, 320, 0, 206, 0, 424, 2012,
	2038, 439, 226, 1803, 1969, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1945, 2035,
	360, 393, 233, 469, 421, 262, 1799, 0, 1802, 1797,
	1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 0,
	0, 1995, 1996, 0, 1890, 2005, 1778, 0, 1973, 0,
	0, 0, 0, 1937, 2033, 1850, 242, 0, 1774, 1775,
	1776, 0, 1880, 1881, 0, 0, 1991, 1990, 1989, 1992,
	0, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889,
	1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1908, 199,
	212, 312, 2034, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1970, 1915, 0, 1854, 1856, 1855,
	1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796,
	1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876,
	1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984,
	1986, 471, 252, 1888, 1913, 1951, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 1861,
	196, 0, 0, 202, 0, 203, 205, 1846, 201, 1993,
	2029, 1925, 1939, 1830, 2009, 0, 1971, 448, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 0, 477, 0,
	2020, 314, 1985, 0, 475, 423, 339, 0, 0, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 0, 4359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1923, 2007, 1834,
	0, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 0, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 0, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 467, 0, 278, 0, 1909,
	391, 315, 460, 1943, 2006, 466, 1845, 442, 476, 481,
	271, 1885, 234, 420, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 4362, 4363, 4364,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 470, 2032, 257, 1961, 472, 0, 406, 405, 1848,
	292, 1962, 0, 0, 385, 0, 302, 204, 1987, 485,
	220, 309, 450, 0, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 1958, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 2014,
	322, 266, 270, 286, 297, 1929, 389, 427, 473, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1954, 216, 237,
	428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209,
	1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924,
	1808, 281, 1941, 463, 464, 246, 1784, 2022, 211, 1785,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897,
	1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1899, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1803, 1969, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1945, 2035, 360, 393, 233, 469, 421, 262,
	1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018,
	2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005,
	1778, 0, 1973, 0, 0, 0, 0, 1937, 2033, 1850,
	242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0,
	1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814,
	1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823,
	1882, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1908, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1970, 1915,
	0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346,
	1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847,
	1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947,
	1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 1861, 196, 0, 0, 202, 0, 203,
	205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0,
	1971, 448, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933,
	1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768,
	1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258,
	244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883,
	0, 0, 477, 0, 2020, 314, 1985, 0, 475, 423,
	339, 0, 0, 1879, 1994, 1900, 1963, 1862, 1935, 1795,
	1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0, 0,
	0, 3167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 2007, 1834, 0, 1874, 1932, 2036, 1766, 1919,
	0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0,
	0, 0, 0, 0, 0, 1877, 1901, 1953, 1859, 0,
	468, 1938, 1948, 1966, 1851, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 1916, 0, 0,
	0, 1787, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 1794,
	1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860,
	301, 0, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844,
	311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 0,
	198, 313, 1975, 1816, 1833, 245, 0, 392, 1928, 467,
	0, 278, 0, 1909, 391, 315, 460, 1943, 2006, 466,
	1845, 442, 476, 481, 271, 1885, 234, 420, 261, 254,
	1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817,
	241, 1946, 1917, 1980, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1976, 1959, 1982, 1810, 1790,
	1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361,
	224, 1898, 1891, 1878, 1956, 470, 2032, 257, 1961, 472,
	0, 406, 405, 1848, 292, 1962, 0, 0, 385, 0,
	302, 204, 1987, 485, 220, 309, 450, 0, 277, 352,
	1930, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1958, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2014, 322, 266, 270, 286, 297, 1929,
	389, 427, 473, 1920, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1954, 216, 237, 428, 210, 2002, 1977, 1911, 1866,
	1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950,
	1821, 1837, 1809, 1924, 1808, 281, 1941, 463, 464, 246,
	1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023,
	459, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1899, 425, 320, 0, 206, 0, 424, 2012, 2038, 439,
	226, 1803, 1969, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1945, 2035, 360, 393,
	233, 469, 421, 262, 1799, 0, 1802, 1797, 1800, 1798,
	1903, 1904, 2017, 2018, 2019, 1957, 1792, 0, 0, 1995,
	1996, 0, 1890, 2005, 1778, 0, 1973, 0, 0, 0,
	0, 1937, 2033, 1850, 242, 0, 1774, 1775, 1776, 0,
	1880, 1881, 0, 0, 1991, 1990, 1989, 1992, 0, 2026,
	2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922,
	1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1908, 199, 212, 312,
	2034, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807,
	1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819,
	1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906,
	1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 471,
	252, 1888, 1913, 1951, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 1861, 196, 0,
	0, 202, 0, 203, 205, 1846, 201, 1993, 2029, 1925,
	1939, 588, 448, 582, 593, 575, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 639, 0, 0, 0,
	0, 0, 259, 0, 0, 583, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 636, 637, 0, 732, 0, 733, 735, 736, 737,
	738, 0, 0, 0, 734, 2317, 3383, 3384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 3378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 0,
	574, 573, 576, 0, 0, 0, 340, 0, 0, 0,
	581, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 585, 0,
	0, 198, 313, 589, 0, 0, 245, 0, 392, 2314,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 592,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 577, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 580, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 642, 408, 455, 222, 426, 578, 579,
	586, 587, 590, 591, 594, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 1663,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 2315, 2316, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 3395, 1066,
	0, 3385, 3386, 3388, 3396, 3397, 3387, 3389, 3390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1650, 0,
	0, 3391, 3392, 3393, 3394, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 1664, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 584, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 0, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 588, 448,
	582, 593, 575, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 567, 0, 0, 0, 0, 0, 259,
	0, 0, 583, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 0, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 0, 1665, 1666, 1667, 1647, 1646, 1678, 1648,
	1651, 1645, 1649, 1644, 0, 0, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 0, 0, 574, 573, 576,
	0, 0, 0, 340, 0, 0, 0, 581, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 585, 0, 0, 198, 313,
	589, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 592, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 577, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 1679, 257, 0, 472, 0, 406,
	405, 580, 292, 0, 0, 0, 385, 1668, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	570, 408, 455, 222, 426, 578, 579, 586, 587, 590,
	591, 594, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 584, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 2467, 2471, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 2470, 301, 191, 0, 0, 0, 2463,
	0, 2464, 2466, 2465, 311, 1165, 195, 0, 2461, 2469,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	1159, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 1478, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 497, 475, 423,
	339, 500, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1480, 1479, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 498, 0, 1474, 1475, 1473, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	496, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 495, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 477, 190,
	0, 314, 0, 497, 475, 423, 339, 500, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 1165, 195, 0,
	1161, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 1159, 392, 0, 467, 496, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 485,
	220, 309, 450, 495, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 477, 190, 0, 314, 0, 497,
	475, 423, 339, 500, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 3544, 195, 0, 0, 3543, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 496, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 485, 220, 309, 450, 495,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 0, 314, 0, 497, 475, 423, 339, 500,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3511,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 1165,
	195, 0, 0, 2469, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 496, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 495, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2918, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 1165, 195, 0, 0, 2469,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 497, 475, 423,
	339, 500, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1480, 1479, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 2271, 392, 0, 467,
	496, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 495, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 0, 196, 42,
	448, 202, 0, 203, 205, 0, 201, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 88, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 96, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 681, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 109,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	674, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 497, 475, 423, 339, 500, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3502, 0, 0, 0, 0, 0, 3504, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 496, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 495, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 497, 475,
	423, 339, 500, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 2044, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 496, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 495, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 477,
	190, 0, 314, 0, 497, 475, 423, 339, 500, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2042, 2044, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 496, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	485, 220, 309, 450, 495, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 477, 190, 0, 314, 0,
	497, 475, 423, 339, 500, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 1165, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 496, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	495, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 497, 475, 423, 339,
	500, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3356, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 496,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 495, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 497, 475, 423, 339, 500, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1706, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 496, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 495, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 497, 475,
	423, 339, 500, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3504, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 496, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 495, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 477,
	190, 0, 314, 0, 497, 475, 423, 339, 500, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 496, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	485, 220, 309, 450, 495, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 477, 190, 0, 314, 0,
	497, 475, 423, 339, 500, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1213, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 496, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	495, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 497, 475, 423, 339,
	500, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1202, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 496,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 495, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 497, 475, 423, 339, 500, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 496, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 495, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3212, 681, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 674, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 477,
	190, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	485, 220, 309, 450, 161, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 681, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 674, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 477, 190, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 547, 544, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	161, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 2541,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	2427, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 0, 196, 0, 0, 202, 0, 203, 205,
	448, 201, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 155, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 0, 0, 1502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	1163, 733, 735, 736, 737, 738, 0, 0, 0, 734,
	2317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 729, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 730, 731, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	4458, 0, 0, 0, 0, 0, 259, 4456, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 4457, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2990,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 2991, 2992,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 1626,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1625, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 2471, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 2470, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 3558, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 3556, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 3554, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 3552, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	3547, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 3534, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 3532, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 3462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3453, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 2591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 2747, 2746, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 42, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 71, 0, 0, 4270, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4263, 0, 0, 0,
	0, 4670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 4270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4263, 0, 0, 0, 0, 4664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	62, 92, 91, 0, 0, 0, 89, 57, 0, 0,
	0, 71, 4270, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4266, 4263, 0, 0, 0, 0, 4656, 0,
	0, 0, 4275, 4267, 4268, 4269, 4273, 4274, 4271, 0,
	4272, 0, 4276, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 89, 0, 0, 0, 0, 0, 4270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 69, 70, 0, 4266, 0, 0, 4263,
	0, 60, 0, 0, 4629, 0, 4275, 4267, 4268, 4269,
	4273, 4274, 4271, 0, 4272, 0, 4276, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4264, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 4277, 4265,
	0, 66, 67, 73, 0, 74, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 4277, 4265, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4275,
	4267, 4268, 4269, 4273, 4274, 4271, 0, 4272, 0, 4276,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 69, 70, 0, 4266, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 4275, 4267, 4268, 4269, 4273,
	4274, 4271, 0, 4272, 0, 4276, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 71, 0, 0, 0,
	0, 0, 93, 0, 60, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 4277, 4265, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	71, 0, 0, 4270, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 59, 61, 4263, 0, 0, 0, 87, 4611,
	0, 4277, 4265, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 4263, 0,
	0, 0, 0, 4607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 59, 61, 0, 0, 0,
	4264, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 89, 0, 0, 71,
	0, 0, 4270, 0, 0, 93, 0, 0, 47, 0,
	0, 0, 0, 85, 0, 0, 0, 69, 70, 0,
	4266, 59, 61, 4263, 0, 0, 0, 87, 4606, 0,
	4275, 4267, 4268, 4269, 4273, 4274, 4271, 0, 4272, 0,
	4276, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	89, 4603, 0, 0, 0, 0, 4270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	84, 69, 70, 0, 4266, 0, 0, 4263, 0, 60,
	0, 0, 0, 0, 4275, 4267, 4268, 4269, 4273, 4274,
	4271, 0, 4272, 0, 4276, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 84, 4264, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 4277, 4265, 0, 66,
	67, 73, 0, 74, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	4277, 4265, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4275,
	4267, 4268, 4269, 4273, 4274, 4271, 0, 4272, 0, 4276,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	69, 70, 0, 4266, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 4275, 4267, 4268, 4269, 4273, 4274, 4271,
	0, 4272, 0, 4276, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 71, 0, 0, 0, 0, 0,
	93, 0, 60, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 4277, 4265, 0, 66, 67,
	73, 0, 74, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 71, 0,
	0, 4270, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	59, 61, 4263, 0, 0, 0, 87, 4595, 0, 4277,
	4265, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 4263, 0, 0, 0,
	0, 4592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 59, 61, 0, 4264, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 89, 0, 0, 71, 0, 0,
	4270, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 85, 0, 69, 70, 0, 4266, 59,
	61, 4263, 0, 0, 0, 87, 4509, 0, 4275, 4267,
	4268, 4269, 4273, 4274, 4271, 0, 4272, 0, 4276, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 89, 0,
	0, 0, 0, 0, 4270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 84, 69,
	70, 0, 4266, 0, 0, 4263, 0, 60, 0, 0,
	0, 0, 4275, 4267, 4268, 4269, 4273, 4274, 4271, 0,
	4272, 0, 4276, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 84, 4264, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 4277, 4265, 0, 66, 67, 73,
	0, 74, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 4277, 4265,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 0, 4266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4275, 4267, 4268,
	4269, 4273, 4274, 4271, 0, 4272, 0, 4276, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 69, 70,
	0, 4266, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 4275, 4267, 4268, 4269, 4273, 4274, 4271, 4506, 4272,
	0, 4276, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 71, 0, 0, 0, 0, 0, 93, 0,
	60, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 4277, 4265, 0, 66, 67, 73, 0,
	74, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 71, 0, 0, 4270,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 59, 61,
	4263, 0, 0, 0, 87, 4501, 0, 4277, 4265, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 4263, 0, 0, 0, 0, 4499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 59, 61, 0, 4264, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 89, 0, 0, 71, 0, 0, 4270, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 85, 0, 69, 70, 0, 4266, 59, 61, 4263,
	0, 0, 0, 87, 4379, 0, 4275, 4267, 4268, 4269,
	4273, 4274, 4271, 0, 4272, 0, 4276, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 89, 0, 0, 0,
	0, 0, 4270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 84, 69, 70, 0,
	4266, 0, 0, 4263, 0, 60, 0, 0, 0, 0,
	4275, 4267, 4268, 4269, 4273, 4274, 4271, 0, 4272, 0,
	4276, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	84, 4264, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 4277, 4265, 0, 66, 67, 73, 0, 74,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 4277, 4265, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 4266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4275, 4267, 4268, 4269, 4273,
	4274, 4271, 0, 4272, 0, 4276, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 69, 70, 0, 4266,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 4275,
	4267, 4268, 4269, 4273, 4274, 4271, 0, 4272, 0, 4276,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 4277, 4265, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 4277, 4265, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85,
}

var yyPact = [...]int{
	5953, -1000, -504, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2941, -1000, 2941, 308, -1000, 447, -1000, 1381, 406,
	-1000, -1000, -1000, -1000, -1000, 701, 362, 58554, 1128, 53394,
	78426, -266, 4610, 77690, 175, -1000, 175, 410, 55602, 866,
	909, 76954, 2799, 2189, 181, 27, 24, 244, 39407, 38660,
	329, 210, 219, 215, 193, 1335, -1000, 10722, 880, -1000,
	264, -1000, -1000, -1000, -1000, -1000, 54866, 3004, 3014, 3004,
	-1000, 2889, 2934, -1000, -1000, 2889, 2319, 2319, -1000, 10722,
	13781, -1000, -1000, -1000, -1000, -1000, 31123, -1000, 1317, -1000,
	59290, 41615, 2941, -1000, 1088, 1076, -106, 1022, 1022, 844,
	1022, 1022, -468, 1127, -1000, 848, 1592, -1000, -1000, -1000,
	-1000, 1589, 59290, 65914, 1114, 75482, 1024, 1024, 1024, 1024,
	1024, 1024, 1024, 1024, 52658, 59290, -1000, 1278, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 59290, 2987, 2986,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2608, 2607, 51922, 631, 2847, 1598, 334, 1598, -1000,
	-1000, 1625, -1000, 933, 929, 908, 907, 905, 899, 31,
	1561, 1604, 2915, -1000, 2563, 2889, 2889, 1561, -1000, 897,
	-1000, -1000, -1000, -1000, -1000, -1000, 1348, -1000, -1000, 1652,
	1652, 555, 1069, 945, 950, 945, 2884, 1588, 2846, 2845,
	2201, 2843, 858, 2842, 2601, -1000, 1266, -1000, -1000, 68,
	-1000, 2188, 59290, -1000, -1000, 2025, 2008, 667, 2511, 1170,
	2649, -1000, -1000, 663, 808, 2590, 804, 2590, 2590, 2590,
	430, 2590, 2590, 18, 2590, 2590, 2590, 338, 2590, 350,
	2590, 2590, 2590, 2590, 2590, -1000, 2279, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 668,
	2509, 2561, 2648, 241, -1000, -163, 221, 2894, 541, -1000,
	-1000, -1000, 323, 1317, 60762, 2553, -1000, 2563, -1000, -1000,
	-1000, 2560, 2563, -1000, 2091, 1110, 1024, 772, -1000, 554,
	-1000, -1000, -1000, 2873, 2563, 45298, -1000, -1000, 2010, -1000,
	2563, 2563, 1317, 2898, 1317, 1317, 2896, 2891, 1317, 2837,
	28107, 18305, 2751, 1761, -1000, -1000, -1000, -1000, 1317, 2985,
	-1000, 40879, 1265, -1000, 18305, 2026, 2563, 2563, -1000, 1183,
	1281, -1000, 1158, 1238, -1000, -1000, 19059, 19059, 19059, 19059,
	19059, 19059, 19059, -1000, -1000, -1000, -1000, -1000, -1000, 2297,
	2296, 2295, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2563, 1264, 1261, 1260, 2563, 2563, 2563, 2563,
	2563, -1000, 16797, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2563, 2563, 2563, 2563, 2563,
	2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563,
	18305, 2563, 2563, 2563, 2563, 2563, -1000, 2563, 2563, 2563,
	2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563,
	2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563,
	2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563,
	2563, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2563, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2563, 2563, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2563, 1028, 1028, 57818,
	2559, -78, 30369, -1000, -1000, -1000, -1000, 28861, 63706, 1528,
	-1000, -1000, -1000, -1000, 2841, -1000, -1000, 1241, 1238, 1183,
	1179, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2941,
	310, -1000, 2436, -1000, -1000, 39085, 39085, 39085, 39085, 39085,
	39085, 48242, -1000, -1000, -1000, 2600, 2889, -1000, 75482, 59290,
	850, 2186, 1638, 2177, 76954, 76954, 1022, -1000, 799, 65914,
	65914, -370, 1022, 838, 65914, 841, 2558, 1068, 2557, 1067,
	2202, 1024, 2647, 59290, 2868, 2172, 2160, 76954, 76954, 65914,
	65914, 76954, -1000, -1000, -1000, 27353, -1000, 1321, 2546, 47506,
	46770, 51186, 51186, -1000, -1000, -1000, 893, -1000, 1598, -1000,
	10525, 18305, 1022, 1022, 59290, 59290, 59290, 59290, 59290, -1000,
	59290, -1000, -1000, 1598, -1000, -1000, 1598, 1598, 1598, 1561,
	2984, 1561, -1000, -1000, -1000, 1598, 77690, 77690, 18305, -1000,
	19059, 65178, 1361, -1000, -1000, 1598, -1000, 77690, 977, 977,
	977, -1000, 2154, 535, 327, -1000, 945, 310, -1000, -1000,
	2808, 2888, 2887, 2152, 858, 858, -1000, 2302, 858, 2549,
	-1000, 1582, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 858, 2884, 17551, 75482, -483, -1000,
	-1000, 2555, -1000, 513, -1000, -1000, 938, 2646, 938, 9264,
	65914, 65914, 65914, -1000, 2590, 75482, -1000, 2590, 2590, 2590,
	15, 2590, 2590, -1000, -1000, 2590, -1000, -1000, -1000, 2590,
	-1000, -1000, 2590, -1000, -1000, -1000, 2590, 2590, -1000, 2590,
	2590, -1000, -1000, -1000, -1000, -1000, 65914, 938, 544, 2554,
	938, 65914, 65914, 1066, 225, -1, 152, -1000, -1000, -1000,
	-1000, -1000, -1000, 322, 321, 320, 313, -1000, -1000, -1000,
	-1000, 312, 305, -1000, -1000, 59290, 59290, 927, -1000, 2553,
	60762, 2885, 22829, 880, -1000, 18305, 2851, -1000, 2851, -1000,
	-1000, -1000, 381, -1000, 59290, 65914, 76954, 54866, 54866, 54866,
	54866, -1000, 2682, 2672, -1000, 2680, 2676, 2668, 563, 60762,
	-1000, 2873, 308, 2434, 2319, 2319, 554, 45298, -1000, 2563,
	-1000, 60762, 1191, 1084, 1080, 1079, 2808, -1000, -1000, -1000,
	-1000, -1000, 2241, 2164, 2209, 13027, 19059, -1000, -1000, -1000,
	-1000, -1000, 3004, 3004, -1000, -1000, -1000, -1000, -1000, -1000,
	1692, 2999, 1480, 2514, -1000, -1000, -1000, 2552, -1000, 1688,
	1234, 1972, 1706, -1000, -1000, -1000, -1000, -1000, -1000, 13781,
	-1000, 59290, -1000, 18305, 18305, 18305, 1993, -1000, 44559, -1000,
	-1000, -1000, 23583, 1486, 19059, 1784, 1545, 19059, 19059, 19059,
	19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059,
	19059, 19059, 1483, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2144, -1000, 310, 36401, 13027, 36401, 1008, 1008, 75482,
	1340, 1340, 1340, 1340, 1340, 1340, 60026, -1000, -1000, -1000,
	2883, 34893, 75482, 36401, 2883, 2883, 2883, 2883, 2883, 2431,
	1992, 10722, 16797, 54866, 13027, 13027, 13027, 2319, 18305, 18305,
	13027, 19059, 13027, 16043, 15289, 20567, 13027, 13027, 2883, 1540,
	1992, 26599, 13027, -1000, 2319, -1000, -1000, -1000, -1000, 1811,
	-1000, -1000, -230, -230, -230, 419, 13027, 13027, 13027, 13027,
	2319, 2319, 13027, 13027, 13027, 13027, 13027, 13027, 2319, 2319,
	2319, 13027, 13027, 13027, 13027, 13027, 13027, 13027, 13027, 13027,
	13027, 13027, 13027, -1000, -1000, -1000, 1809, 57074, 54866, 59290,
	2494, 2453, -1000, -1000, 1218, 29615, 2536, -1000, -61, -45,
	-78, -1000, -1000, 1282, -1000, -1000, -1000, -1000, 14535, -1000,
	-1000, -1000, 24337, 2889, -1000, 40143, -1000, 51, -1000, -1000,
	-1000, 2580, -1000, 2583, 108, 526, 2583, 92, 91, 2583,
	2583, 2583, -1000, -1000, -1000, -1000, 104, -1000, -1000, -1000,
	-1000, -1000, 2597, 2596, -1000, 2580, 2580, 2580, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2588, 532, 2581, 2581, 2581, 2581, 2581, -1000,
	-1000, -1000, -1000, -1000, 992, -1000, -1000, -1000, 18305, 2837,
	2795, 2604, 2563, 1075, -469, 838, 2851, 2866, 2851, 913,
	-1000, 1216, 2595, 76954, 870, 2540, -1000, 559, 2424, 1125,
	56338, -1000, -1000, -1000, -1000, -1000, 59290, 59290, 65914, 65914,
	65914, 59290, 59290, 2551, -1000, -1000, -1000, -1000, -1000, -1000,
	2523, -1000, 2424, -1000, -1000, 1209, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -442,
	-445, 59290, -1000, -1000, -1000, -1000, -1000, -1000, 2550, -1000,
	2550, -1000, -1000, -1000, 2301, 1992, 2136, 2133, 2884, -1000,
	-1000, -1000, -1000, 1568, -1000, -1000, -1000, -1000, 1598, 59290,
	2884, -1000, -1000, -1000, 1992, 1861, 2606, 2563, 2319, -1000,
	-1000, -1000, 159, -1000, 154, -1000, -1000, -1000, 2130, -1000,
	-1000, -1000, -1000, -1000, 327, -1000, 19059, 2805, 2804, -1000,
	2549, 2549, -1000, 2549, 858, 61498, 2549, -1000, -1000, 2428,
	-1000, 304, 2299, 59290, -1000, 60762, 65, -1000, -67, 74010,
	-1000, -1000, -1000, 938, 74010, -1000, 338, 256, -1000, 1064,
	-1000, 2426, -1000, -1000, -1000, -1000, 2590, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 74010, 427, 529,
	74010, 2523, 2983, 213, 2547, -1000, 1580, 1579, -1000, -1000,
	148, -1000, -1000, -1000, -1000, 2914, -1000, -280, 2546, -280,
	2298, 19059, -1000, 2563, 2371, -1000, 1207, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2563, -1000, -1000, -1000, -1000, 2840,
	1528, 1528, 1528, 7567, 559, 2645, 2594, 2639, 479, -1000,
	-1000, -1000, -1000, 2665, -1000, 2664, 2662, -1000, -1000, -1000,
	2566, 60762, 54866, -1000, -1000, -1000, 2319, 75482, 1180, -1000,
	60762, 2563, 2563, 2563, 19059, 19059, 1474, -1000, 19059, 19059,
	1473, -1000, 19059, 19059, 1460, -1000, 2319, 2545, -1000, -1000,
	1992, 1204, 5241, -1000, 74746, 62, 2693, 28107, 28107, 18305,
	-1000, -1000, -1000, 24337, 2911, -1000, 2720, 2717, 2982, -1000,
	-1000, -1000, 1486, 1558, 1570, -1000, -1000, 1680, -1000, -1000,
	-1000, -1000, -1000, 1200, 2563, -1000, -1000, -1000, -1000, -1000,
	-1000, 5356, -1000, -1000, -1000, -1000, 1784, 19059, 19059, 19059,
	1861, 5356, 5172, 2114, 1938, 1340, 1398, 1398, 1337, 1337,
	1337, 1337, 1337, 1981, 1981, -1000, -1000, -1000, -1000, 2319,
	-1000, 2409, -1000, -1000, 2297, 2296, 2295, -1000, -1000, -1000,
	-1000, 13027, -1000, -1000, -1000, -1000, -1000, -1000, 13027, 13027,
	13027, 13027, 13027, 18305, -1000, 2409, 2409, 2409, -1000, 1793,
	2142, 2313, 5131, 2409, 1374, 2974, 2409, 1369, 2973, 2409,
	2068, 19059, 19059, 19059, 2409, 2409, 13027, 1626, -1000, 18305,
	2319, 1259, 2319, 1183, 1179, 2409, -1000, 2319, 2543, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2538, 2967, 2537, -1000, -1000, -1000, -1000, 2409, 2319, 2409,
	2409, -126, -126, 2319, 2409, 2319, 2409, 2409, 2319, -126,
	-126, -126, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409,
	2409, 2409, 2409, 2409, -1000, 2319, 1428, 59290, -1000, 2516,
	1428, 2507, 54866, -1000, -1000, 54866, 77690, 25845, -1000, 28861,
	-78, -16, -1000, -1000, 2536, -1000, -1000, 1571, -1000, -1000,
	2294, 1992, -1000, 1171, 2837, 412, -1000, -1000, -1000, -1000,
	2589, 43823, -1000, 2750, 1237, 1237, 1237, 64442, 76218, 2749,
	-1000, -1000, 373, 44, -1000, -1000, -1000, 1997, -1000, 331,
	511, 2583, -1000, -1000, -1000, 2583, 2583, -1000, 2583, 2583,
	-1000, -1000, -1000, -1000, 2293, 2293, -1000, -1000, -1000, -1000,
	1977, -1000, 2588, -1000, 1973, -1000, -1000, -1000, -1000, 373,
	373, 373, 373, 373, -1000, 2051, -1000, 2638, 75482, 2880,
	59290, -371, -1000, -1000, -1000, 2956, -1000, -1000, 75482, 62970,
	2637, -1000, -1000, 317, 65914, 551, 756, 343, -1000, 1631,
	-1000, -1000, 1063, -1000, 1059, -1000, -1000, 1115, -1000, 59290,
	65914, 75482, 2636, 2635, -1000, 51186, -1000, -1000, -1000, -1000,
	2947, 2126, 2113, -1000, 1561, 1598, -1000, 19059, 65914, -1000,
	901, -1000, -1000, -1000, -1000, 5356, 19059, 19059, -1000, -1000,
	-1000, -1000, 1667, -1000, -1000, -1000, -1000, -7, -1000, -1000,
	1058, 1168, 1162, 74010, 1054, -1000, 369, 65914, -1000, 75482,
	-1000, 2963, 2961, 422, 2960, 65914, 2535, -1000, 1575, 1567,
	1557, 1556, 1551, 1542, 1536, 1529, 225, 2587, 2586, -1000,
	-1000, 271, -1000, -71, -1000, -1000, 5356, -1000, -1000, 22829,
	36401, -1000, 1528, 1538, -1000, 1535, 2292, 1684, 1669, -1000,
	-1000, -1000, 2932, 1138, 1136, 1013, 1528, 998, 442, 1052,
	2812, 2810, 587, 584, -1000, 1528, 998, 1439, 656, -1000,
	1449, 1448, 1447, 1446, 1444, 1431, 1430, 1429, 647, -375,
	-1000, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, -202,
	-203, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 31877, 1528, 1528, -1000, 1131, 779,
	-1000, -1000, 18305, 2585, -1000, 18305, -1000, -1000, -1000, -1000,
	-1000, 75482, 2566, 554, -1000, 2368, -1000, -1000, 1180, 75482,
	75482, 75482, 5068, 1968, 2563, 5049, 1891, 2563, 4729, 1876,
	2563, 2873, 13027, 22075, 2291, 2534, 2290, 2289, -1000, 57,
	2691, -1000, -1000, -1000, 59290, -1000, -1000, -1000, -1000, 2947,
	54130, 13781, -1000, -1000, -1000, -1000, 34139, 13027, -1000, 1861,
	5356, 4685, -1000, 19059, -1000, -1000, 2319, 2409, 2409, 2409,
	2409, 2409, 1992, -1000, -1000, -1000, 246, 1483, 246, -1000,
	1483, 19059, -1000, 19059, 19059, -1000, 19059, 19059, -1000, -1000,
	19059, 4026, 3918, 3739, -272, -1000, 2548, 1602, -1000, 18305,
	2122, -1000, -1000, -1000, -1000, -1000, 19059, 19059, 19059, 19059,
	-1000, -1000, -1000, -1000, -1000, 73274, -1000, -126, -126, -126,
	-126, -126, -126, -1000, -1000, -1000, -126, -126, -126, -126,
	-126, -126, -126, -126, -126, -126, -126, -126, -1000, 306,
	2563, -1000, 25091, 2947, 54866, 2515, 2515, -1000, 1152, -1000,
	-1000, -1000, -81, -72, -1000, -1000, -1000, -1000, -1000, 36401,
	-1000, -1000, -1000, 5424, -1000, 1528, 1528, 1528, 398, 1528,
	1528, 1528, 1528, 1528, -204, -205, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 196, 1528, 1528, 1528, 1528, 1528, 1528,
	31877, 1528, 1528, -376, 48978, 1159, 990, -1000, -1000, -1000,
	76218, 76218, 76218, -1000, 76218, 76218, -1000, -1000, -1000, -1000,
	49714, -1000, -1000, 1697, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2563, -496, 1970, 59290, -1000, 2839, 1500, 38663,
	2996, -1000, 2748, -1000, 2745, 2744, 2286, -1000, -1000, 2471,
	2469, 2463, -1000, 2583, -1000, -1000, -1000, -1000, -1000, 2404,
	-1000, 2402, 2533, -1000, 2400, -426, 59290, -1000, -1000, 2563,
	1966, 2634, -1000, -1000, -1000, -1000, 2456, 2532, -1000, 39085,
	75482, 75482, 75482, 769, -281, 448, -1000, 65914, 389, 559,
	789, 2052, -393, 2858, 59290, 65914, -1000, -1000, -1000, -1000,
	-1000, -1000, 72538, 72538, -1000, -1000, 18305, -1000, -1000, 2884,
	-1000, 5356, 2424, -1000, -1000, 5356, 5356, 1428, 1100, -1000,
	65914, 1359, 71802, 1048, 65914, 421, 255, -1000, 65914, 65914,
	2951, 65914, 2523, 213, 2282, 2281, 2280, 1965, 1962, 1948,
	1918, 1917, -1000, 59290, 59290, 2278, 2821, -1000, -1000, 1493,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1419, 9695, 1669,
	1408, 1399, 1396, 1387, -1000, 167, 46034, 76218, 1167, 1001,
	-1000, -1000, 2563, -1000, 43087, 49714, 49714, 49714, 75482, 2741,
	2740, 75482, 49714, 49714, 75482, 49714, 942, 2111, 2835, 1528,
	98, -1000, -1000, -1000, 71066, -1000, 70330, 833, 50450, 49714,
	75482, 59290, 42351, -1000, -1000, -1000, -1000, 69594, 1886, 75482,
	75482, 68858, 68122, 67386, 66650, -1000, -262, 985, 18305, 985,
	1796, 1796, 2276, 2275, 2271, 1528, 1528, 173, 1796, 2270,
	173, 1796, 37909, 2269, 965, 985, 985, 985, 1796, 1796,
	1796, 1796, 2268, 383, 1865, 2267, 1796, 2200, 2178, 985,
	-1000, -236, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1796, 2563, 894, 1041, 864, -10, 1992,
	75482, 1992, 2398, -1000, -1000, 1466, 75482, -1000, 2340, 2340,
	2340, 19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059,
	60762, -1000, -1000, 1145, 8, 75482, -1000, 33, -1000, -1000,
	-1000, 2945, -1000, 2531, -1000, -1000, -1000, 2319, -1000, 19059,
	5356, -1000, -126, -126, -126, -126, -126, 2319, 2580, 2580,
	2580, -1000, 2580, 2581, 116, -1000, -1000, -1000, 2580, 137,
	2580, 136, -1000, 2319, 2319, 2319, 2277, 3870, 3440, 2988,
	2942, 2277, 19059, 19059, 19059, 2563, -118, -1000, 1992, 18305,
	2910, 2699, 2277, 2277, -1000, -1000, 2109, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2633, 2633, 25091, 2873,
	-1000, 21321, -1000, 880, -1000, -1000, 75482, 2522, -1000, 1528,
	1277, 1528, 1528, 2941, 2515, -1000, -1000, 1351, -1000, -1000,
	-1000, -1000, 985, 985, 985, 1528, 2832, 1528, 1796, 1796,
	2266, 2265, 2263, 1528, 1528, 173, 1796, 2261, 173, 1796,
	37909, 2260, 965, 985, 985, 985, 1796, 1796, 1796, 1796,
	2257, 383, -1000, 1773, 2256, 1796, 2146, 2097, 985, -1000,
	-238, 1796, 2563, -263, 2396, -1000, 2580, 2580, 2736, 1237,
	-1000, -1000, -1000, -1000, -1000, -1000, 2578, -1000, -1000, 19059,
	2879, -1000, 2576, 1491, -1000, -1000, -1000, -1000, 1008, 2254,
	-1000, -1000, 19059, -1000, -1000, 2563, 2563, 2563, 2563, 2563,
	2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, -33, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2253, -1000,
	1882, -1000, 1879, -1000, -1000, -1000, 2572, -1000, 2878, -1000,
	59290, 235, 62970, -1000, 39085, 39085, 39085, -10, 414, 400,
	-1000, 1644, -1000, -1000, -1000, 2252, 2251, 2249, 2424, 560,
	1641, 446, -1000, 2872, 2871, 2247, 2245, 2244, 2239, 1870,
	-1000, -1000, 2605, 75482, 2529, -1000, 1992, 1598, 33, 59290,
	255, -1000, -1000, -1000, 65914, 255, -1000, -1000, 453, 2523,
	2523, 65914, 2523, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2388, 2375, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1310, 1243, 356, 355, -226, -1000, 485, 368, -1000,
	-1000, -1000, 50450, 963, 39085, 39085, 2604, 1237, -1000, 2734,
	1382, -1000, -1000, -1000, -1000, -1000, -1000, 49714, 2527, -431,
	-435, 1299, -454, -1000, -1000, -1000, -1000, 50450, 1528, 1483,
	2831, 660, 349, 652, 347, -1000, -1000, -1000, -1000, 963,
	1231, 1040, -1000, 2733, 49714, 1039, 646, 345, -1000, 1685,
	-283, 2527, -1000, 2527, -1000, 2527, -1000, 2527, -1000, -1000,
	-1000, 1992, -1000, -1000, -1000, -1000, -1000, -1000, 2238, 2237,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -168, -1000,
	37909, 1694, -1000, 2630, 76954, -1000, 688, 2629, 1154, 1008,
	2373, -1000, 75482, -1000, -1000, -1000, -1000, -1000, 5356, 5356,
	2423, 5356, 5356, 2387, 5356, 5356, 2360, -1000, 33385, 2563,
	-1000, 1, -1000, 2943, 2931, -1000, -1000, 5356, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 428, 418, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19059, 19059,
	19059, 19059, -1000, 2277, 2277, 2277, 19059, 2319, 2236, 1992,
	19059, 19059, -1000, -1000, 1385, -1000, -1000, 2857, -1000, 2459,
	60762, 2319, 2472, 2371, 2319, 307, -1000, -1000, -1000, 10722,
	54866, 2526, -1000, 2563, 2368, 2941, 25091, 18305, 18305, 18305,
	18305, 2889, -1000, -1000, -1000, -1000, 1483, 1528, 32631, -1000,
	-1000, -1000, -1000, -1000, 2235, 2234, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -207, -1000, 37909, -1000, 237, 48978, 2855,
	2855, 76218, 76218, 75482, 2277, 2563, 75482, -1000, -1000, -1000,
	-1000, -1000, 2277, -1000, -1000, 2406, 2393, 48978, 310, -1000,
	-393, 2912, -1000, 235, -1000, 2233, 837, 812, -1000, 834,
	823, 813, 809, 792, -1000, -1000, -1000, -1000, 2629, 700,
	414, -1000, -60, 1851, 1465, 2818, 400, -1000, 1849, 1837,
	1836, 1832, 530, -1000, -1000, -1000, -1000, 330, 559, -1000,
	783, 2229, 781, 2227, -1000, -1000, 556, -1000, -1000, 2798,
	2366, -1000, 1, -1000, 2876, 255, 2876, 417, 2523, -1000,
	-1000, -251, 1827, 19059, 2563, 2563, 788, 2346, -1000, -1000,
	2106, -1000, -1000, 2571, 76218, 76218, 2343, -1000, 75482, -1000,
	-1000, -1000, -1000, -1000, 2850, 2849, -1000, -1000, 963, 1483,
	-1000, 1483, -1000, -1000, -1000, -1000, -1000, 49714, 75482, 49714,
	1033, 49714, -1000, -1000, 2563, 1097, -1000, -1000, -1000, -1000,
	2364, -1000, 566, 2225, 324, -1000, -1000, 1131, 724, -1000,
	-1000, -1000, -313, -1000, -1000, 19059, 19059, 19059, -1000, 35647,
	2775, 2773, -153, 18305, 18305, -1000, -1000, -1000, -1000, 2277,
	2277, 2277, 2277, -1000, -1000, -1000, 348, -1000, -1000, 2277,
	2277, 2941, 2930, 2704, -1000, 2566, -1000, -1000, 2472, 307,
	-1000, 880, -1000, 12273, -1000, 2889, -1000, 1992, 1992, 1992,
	1992, -1000, -1000, 1483, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2364, 237, -1000, 37909, 1528, 2219, 1528, 1528, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2354, -499, 19059, 2352,
	-1000, -1000, -1000, 2350, -1000, -1000, 882, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2784, 2783, 868, 894, -1000, 2218,
	2216, -1000, 746, 2027, 1288, -158, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 773, 2105, -1000,
	444, -1000, -1000, 429, -1000, -1000, 2928, -393, 19059, -1000,
	2775, -1000, 65914, 2876, -1000, -1000, 2563, 2927, -1000, 2277,
	75482, 19059, 2563, 1513, -1000, -1000, 373, 373, 48978, 2604,
	2569, -1000, 1382, 2715, 19059, -1000, -1000, 1339, 1338, -1000,
	-1000, 1030, 49714, -1000, 1382, 59290, 37909, -1000, -1000, -1000,
	-1000, 894, 1364, 741, 2277, 2277, 2277, 2316, -1000, 10064,
	333, -1000, -1000, 2754, 2926, -1000, 75482, -1000, 1992, 2518,
	-1000, 1992, -1000, -1000, -1000, -1000, 2319, 302, -323, -1000,
	-1000, 1423, 18305, 2995, -1000, -1000, -1000, 307, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1821, -1000, 2215, 2208, 975,
	-1000, -1000, -1000, 2277, -1000, 237, -312, 310, 879, 81220,
	-1000, -1000, -1000, -1000, 1694, -1000, -1000, -1000, -1000, 1816,
	-1000, -1000, 1841, 682, 395, -1000, 2875, -1000, -1000, 1812,
	5356, 1026, -298, -1000, -1000, 1382, -413, -1000, 2340, 2277,
	75482, 1782, 2345, 2567, 48978, -1000, 941, 5356, 1528, 1483,
	49714, -1000, 2343, 39, -1000, 81220, 1694, 1181, 737, 1154,
	-1000, -1000, -1000, 2319, 35647, 384, -460, -5, 2206, 2759,
	2770, 2756, -1000, 2199, 2513, -1000, 2874, 18305, -1000, 2689,
	-278, -337, 2319, 390, 390, 2512, 25091, 2319, -1000, -1000,
	-1000, 59290, -499, -1000, 237, -1000, 359, -1000, 859, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11519, 18305, 195, 37155, 2104, 2102, 81220,
	2210, 81220, 18305, 2096, 2095, 2752, 19059, 81166, 564, -347,
	-1000, -352, -1000, -1000, -1000, 2197, -1000, 2566, 1775, 450,
	2343, 357, -1000, -1000, 2340, -1000, 237, 48978, 2325, 932,
	1483, -1000, -1000, -1000, 654, -1000, -1000, 558, 1008, -1000,
	1154, -1000, 2873, -1000, -1000, 2196, -194, -1000, 2563, -13,
	2923, 2921, -1000, 2919, 2913, -1000, 75482, 2563, -1000, -1000,
	2609, -1000, -1000, -1000, 380, -1000, 1397, 816, 1375, -1000,
	1008, -1000, 2510, -1000, 2564, -1000, 416, 991, 984, -312,
	-1000, 2093, 2090, -1000, 1825, 1933, -1000, 18305, 1937, 625,
	618, 7515, -1000, -1000, -1000, -1000, -1000, -1000, -505, -1000,
	314, -506, 987, -1000, -1000, 2084, -1000, 2949, 5356, -1000,
	-507, -1000, -1000, -1000, -1000, 2825, 1472, 62234, -1000, 2563,
	788, -1000, -1000, 2323, 237, 2563, -1000, -1000, -1000, -1000,
	-313, -1000, 1364, 60762, 641, 2195, 35647, 2563, 2192, 2191,
	2147, 1971, -1000, -1000, -320, 1640, -1000, -1000, -1000, -1000,
	-1000, -230, 75482, -1000, 415, 409, -1000, -1000, -1000, -1000,
	1767, 1617, 81220, -1000, 1829, 81220, 2909, 2908, 2905, 33,
	36401, 81011, 80957, 81220, 81220, 18305, 80622, 81220, 1656, -1000,
	80568, 81220, -1000, 25091, -1000, -1000, -1000, -1000, 3007, 2424,
	19059, 2563, 237, -1000, 19813, 81220, -1000, 1364, -1000, 1818,
	1785, 2628, 2627, 1008, -1000, 2316, 35647, -1000, -1000, -1000,
	-1000, -332, 380, -1000, 2318, -1000, -1000, 316, 1613, 81220,
	-1000, -510, 81220, -511, 857, 310, 1023, 1282, -1000, 607,
	-1000, 2071, -512, -513, -514, 962, 18305, -515, 2070, -1000,
	-1000, 2510, 65914, 2277, 19059, -1000, 2277, 2319, -1000, -1000,
	2626, 1008, -1000, 2625, 1008, -82, -85, 2624, -1000, 2316,
	-339, -1000, 2623, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	80413, 10722, -1000, -517, 80359, -519, 7088, -1000, -1000, -1000,
	80024, -1000, -1000, -1000, -1000, 615, -1000, -1000, 2838, -1000,
	-1000, 79970, 79815, 6753, 81220, 1786, 79761, 2495, -1000, -1000,
	2424, -253, 2277, -1000, -1000, -1000, 301, 2620, -383, 2616,
	300, 293, -1000, -1000, -86, -1000, -1000, 2615, 2612, 2958,
	-1000, -521, -1000, -1000, 79426, 1608, 81220, 1021, 81220, 1620,
	-1000, 18305, -1000, 1023, -1000, 19059, 2069, 606, 18305, -522,
	590, 576, 2065, -1000, 1711, -253, 292, -385, 2611, 2610,
	-1000, -1000, -1000, 2992, -1000, 2989, 1155, 1155, 79370, 1576,
	-1000, -1000, -523, 1016, 81220, -1000, 1637, -1000, 5356, -1000,
	2049, 1574, 79217, -1000, -1000, -1000, -1000, -1000, 284, -394,
	-1000, -1000, -1000, 982, 1770, -1000, -1000, -1000, 79163, -1000,
	-524, 81220, -1000, 585, 574, -1000, -1000, -1000, -1000, -1000,
	1010, 9818, -525, 2039, 1867, -1000, 1007, 81220, -1000, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 3533, 3532, 3531, 17, 3530, 280, 297, 288, 13,
	2823, 3529, 303, 3528, 286, 3527, 32, 30, 27, 37,
	3525, 3152, 3150, 3147, 3145, 20, 3524, 23, 3523, 3522,
	3143, 3521, 3513, 3141, 3512, 3511, 3510, 3506, 3504, 3503,
	3499, 3496, 3494, 3137, 3135, 3131, 3128, 3493, 3492, 3478,
	3097, 3095, 3093, 3477, 3460, 59, 49, 47, 3459, 5,
	3458, 200, 224, 3457, 4, 3452, 3451, 11, 202, 3450,
	3448, 69, 3091, 3447, 3446, 3445, 3442, 3436, 3435, 143,
	3434, 3432, 3089, 3430, 3087, 3429, 3085, 3064, 3062, 3060,
	3057, 193, 3427, 3050, 3035, 3031, 3425, 2725, 230, 454,
	227, 3421, 140, 150, 1794, 3420, 210, 3419, 207, 3417,
	3409, 3404, 451, 225, 3403, 156, 3400, 385, 163, 159,
	194, 1484, 3399, 65, 169, 313, 3385, 8, 3384, 111,
	3382, 229, 3381, 226, 2819, 192, 294, 186, 3379, 3378,
	214, 144, 3377, 3376, 3375, 209, 3374, 3373, 228, 5483,
	3372, 3371, 181, 3370, 135, 3369, 173, 3367, 3365, 3362,
	3361, 234, 115, 92, 165, 128, 3360, 162, 3355, 3354,
	3352, 3351, 3350, 3349, 91, 36, 1737, 3342, 158, 191,
	3340, 61, 50, 34, 3339, 3338, 55, 3337, 3335, 118,
	3334, 3333, 127, 3331, 183, 71, 3329, 3327, 3326, 3324,
	117, 78, 3320, 43, 3319, 182, 3318, 3316, 3312, 3310,
	3307, 98, 3306, 85, 3304, 185, 164, 262, 3303, 3302,
	51, 48, 3301, 66, 15, 112, 108, 52, 103, 83,
	178, 167, 130, 154, 26, 153, 56, 149, 223, 3300,
	232, 168, 205, 113, 22, 3299, 3298, 215, 3297, 110,
	204, 176, 180, 203, 3290, 3288, 3287, 254, 3286, 174,
	556, 3285, 125, 244, 246, 2755, 236, 137, 3284, 3283,
	3282, 3281, 116, 54, 114, 3280, 39, 231, 233, 235,
	35, 100, 3279, 2243, 5412, 5707, 7358, 25, 63, 270,
	6191, 44, 196, 3277, 79, 3275, 3274, 3273, 213, 184,
	53, 57, 161, 3272, 157, 40, 124, 3271, 3270, 3269,
	3266, 3265, 3264, 206, 177, 3263, 3262, 68, 3261, 3260,
	46, 41, 19, 16, 3259, 151, 217, 212, 211, 3258,
	198, 64, 3257, 3255, 175, 134, 3253, 3252, 3251, 3250,
	171, 132, 201, 3248, 199, 120, 129, 3247, 121, 3246,
	3245, 95, 6458, 138, 3244, 3242, 148, 133, 146, 187,
	3240, 3219, 3217, 73, 3215, 3213, 3, 3210, 107, 77,
	60, 104, 42, 155, 3209, 3208, 190, 3206, 3205, 152,
	172, 3204, 139, 136, 70, 3203, 74, 141, 3202, 166,
	2, 7, 6, 3200, 3197, 3195, 3194, 3192, 3191, 3189,
	3188, 126, 3186, 3183, 102, 84, 76, 3182, 3181, 3179,
	3171, 3169, 195, 179, 109, 216, 145, 10, 3168, 3166,
	9, 3165, 170, 3164, 99, 3163, 122, 3162, 3161, 72,
	106, 24, 93, 3160, 3158, 94, 3157, 3156, 101, 3155,
	3154, 219, 2392, 3139, 725, 3133, 197, 188, 75, 86,
	3114, 80, 105, 3082, 87, 3069, 14, 67, 3067, 12,
	29, 1567, 3054, 0, 2658, 222, 3037, 131, 3028, 3026,
	220, 3019,
}

var yyR1 = [...]int{
	0, 462, 462, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 245, 245, 96, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 127, 127, 8, 8,
	126, 126, 126, 242, 242, 242, 242, 239, 239, 128,
	128, 125, 125, 133, 16, 16, 16, 110, 110, 17,
	18, 18, 18, 18, 465, 465, 143, 143, 140, 140,
	141, 141, 142, 142, 237, 237, 19, 19, 19, 247,
	247, 252, 252, 252, 255, 255, 255, 255, 225, 226,
	227, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 453, 453, 453, 454,
	454, 454, 454, 454, 280, 280, 280, 280, 418, 418,
	433, 433, 433, 434, 434, 432, 432, 432, 432, 432,
	436, 436, 437, 437, 435, 435, 435, 435, 439, 439,
	440, 440, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 421, 421, 421, 50,
	50, 50, 50, 50, 51, 51, 51, 51, 51, 51,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 442, 442, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 444, 444, 445, 445, 446, 446,
	446, 446, 447, 447, 447, 447, 447, 448, 448, 448,
	448, 448, 448, 448, 449, 449, 450, 450, 3, 2,
	399, 399, 400, 400, 401, 401, 401, 401, 402, 402,
	403, 403, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 31, 31, 31, 31, 31, 31, 279, 279,
	275, 275, 275, 277, 277, 278, 278, 278, 420, 420,
	420, 414, 414, 414, 416, 416, 415, 415, 415, 417,
	417, 422, 422, 422, 422, 422, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 425, 425, 425, 423,
	423, 162, 162, 426, 426, 431, 431, 427, 427, 428,
	428, 430, 430, 430, 429, 429, 429, 429, 317, 317,
	181, 181, 69, 69, 70, 70, 70, 214, 214, 214,
	20, 20, 20, 20, 20, 20, 26, 26, 28, 28,
	28, 28, 56, 56, 57, 29, 29, 29, 29, 58,
	58, 59, 32, 32, 32, 32, 32, 32, 66, 66,
	66, 65, 65, 64, 64, 64, 64, 64, 64, 34,
	35, 36, 466, 466, 466, 60, 60, 37, 37, 37,
	40, 40, 40, 41, 41, 41, 38, 39, 42, 30,
	30, 30, 30, 67, 67, 62, 62, 61, 61, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 33, 33, 33, 33, 33, 33, 25, 398, 398,
	398, 55, 55, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 77, 77, 354, 355,
	355, 355, 355, 355, 355, 341, 341, 342, 342, 342,
	342, 342, 342, 331, 331, 331, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 305, 305, 305, 305, 309, 309, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 308, 308, 308, 308, 308, 308,
	308, 308, 310, 310, 310, 310, 310, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 312, 312, 312, 312, 312, 312, 312,
	312, 340, 340, 314, 314, 313, 313, 313, 334, 334,
	335, 335, 335, 332, 332, 332, 333, 333, 318, 318,
	318, 318, 318, 318, 319, 336, 320, 320, 321, 321,
	321, 321, 321, 321, 322, 322, 323, 323, 323, 325,
	325, 330, 330, 329, 329, 329, 329, 329, 329, 326,
	326, 326, 326, 326, 326, 327, 327, 327, 328, 339,
	339, 339, 339, 339, 315, 46, 46, 52, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 376, 376, 381, 381, 269, 269, 270, 270,
	53, 53, 53, 53, 53, 168, 168, 54, 54, 54,
	377, 377, 379, 379, 379, 379, 379, 379, 379, 379,
	378, 378, 380, 380, 343, 343, 372, 372, 371, 371,
	370, 370, 370, 370, 370, 370, 370, 352, 352, 353,
	353, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	347, 347, 347, 346, 346, 348, 348, 351, 351, 351,
	369, 369, 368, 368, 344, 344, 344, 382, 382, 382,
	382, 382, 101, 101, 345, 345, 345, 383, 349, 349,
	350, 350, 350, 391, 392, 390, 390, 390, 390, 390,
	169, 169, 169, 374, 374, 374, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 102, 102, 102, 103, 103, 324,
	324, 356, 356, 356, 356, 356, 461, 461, 461, 357,
	357, 357, 357, 357, 357, 452, 452, 451, 451, 451,
	358, 358, 359, 360, 360, 360, 361, 361, 363, 363,
	276, 276, 364, 364, 365, 365, 362, 362, 362, 366,
	366, 395, 395, 395, 394, 394, 72, 72, 72, 72,
	74, 74, 73, 73, 73, 81, 81, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	71, 71, 289, 289, 76, 213, 213, 213, 274, 274,
	388, 388, 389, 389, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 385, 385, 384, 384, 386,
	386, 75, 75, 75, 75, 163, 163, 22, 22, 78,
	78, 419, 419, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 393, 393, 393, 24, 24, 82, 83,
	83, 83, 288, 288, 288, 288, 288, 86, 86, 86,
	86, 240, 240, 241, 241, 87, 87, 87, 87, 88,
	88, 88, 88, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 122, 261, 261, 260,
	260, 259, 259, 259, 262, 262, 262, 262, 303, 303,
	303, 85, 85, 85, 97, 97, 92, 92, 95, 95,
	95, 95, 98, 98, 99, 99, 100, 100, 93, 94,
	43, 44, 44, 44, 44, 45, 90, 90, 90, 91,
	91, 91, 91, 112, 112, 113, 113, 468, 468, 468,
	89, 469, 104, 105, 105, 107, 107, 107, 108, 108,
	108, 109, 109, 109, 266, 266, 266, 266, 266, 266,
	266, 106, 106, 106, 116, 116, 120, 120, 120, 120,
	119, 119, 119, 119, 216, 216, 221, 295, 295, 197,
	197, 217, 217, 222, 222, 222, 223, 223, 224, 224,
	224, 224, 224, 219, 219, 218, 218, 220, 184, 184,
	184, 184, 182, 182, 182, 182, 182, 182, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 180, 180, 293, 293, 293, 293, 292,
	292, 292, 124, 124, 129, 129, 131, 131, 131, 131,
	131, 131, 131, 131, 134, 199, 199, 470, 470, 153,
	153, 154, 154, 154, 154, 155, 155, 155, 155, 155,
	157, 157, 157, 158, 158, 158, 158, 158, 158, 159,
	160, 160, 156, 156, 156, 178, 178, 235, 235, 236,
	236, 234, 234, 238, 238, 130, 130, 132, 132, 132,
	132, 137, 137, 138, 138, 139, 139, 300, 300, 300,
	144, 144, 144, 146, 145, 145, 145, 145, 145, 145,
	147, 147, 455, 456, 456, 457, 457, 457, 457, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 459,
	459, 460, 460, 148, 148, 150, 151, 151, 149, 149,
	149, 149, 149, 149, 161, 161, 152, 164, 164, 164,
	164, 165, 165, 121, 121, 121, 121, 121, 121, 121,
	121, 258, 258, 167, 167, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 193, 193, 193, 193, 193,
	193, 170, 170, 170, 170, 170, 170, 170, 115, 115,
	194, 194, 194, 136, 135, 135, 118, 118, 117, 117,
	195, 195, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 187, 187,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 192, 192,
	192, 192, 192, 467, 467, 189, 189, 188, 188, 188,
	188, 188, 188, 111, 111, 111, 111, 111, 301, 301,
	301, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 68, 68, 206, 206, 114, 114, 204,
	204, 205, 207, 207, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 177, 177, 177, 208, 208, 196, 196, 123,
	209, 209, 210, 211, 211, 212, 212, 215, 228, 228,
	228, 229, 229, 229, 229, 179, 179, 179, 230, 230,
	230, 230, 172, 172, 171, 171, 171, 173, 173, 173,
	173, 174, 174, 471, 471, 233, 233, 232, 232, 231,
	231, 231, 231, 231, 231, 231, 243, 243, 198, 198,
	201, 201, 200, 202, 244, 244, 249, 249, 249, 249,
	246, 246, 250, 250, 250, 250, 253, 253, 254, 254,
	254, 251, 251, 251, 251, 248, 248, 248, 297, 297,
	297, 297, 256, 256, 265, 265, 263, 263, 264, 264,
	257, 257, 316, 316, 316, 271, 271, 272, 272, 273,
	273, 267, 267, 267, 267, 268, 268, 294, 294, 290,
	290, 296, 296, 291, 291, 298, 298, 299, 299, 299,
	299, 396, 396, 397, 397, 397, 337, 337, 408, 408,
	338, 338, 409, 409, 410, 410, 405, 405, 406, 406,
	407, 407, 407, 47, 411, 411, 412, 412, 413, 413,
	413, 413, 48, 49, 49, 49, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 287, 287, 287,
	287, 287, 287, 284, 284, 284, 284, 284, 284, 285,
	285, 285, 463, 464,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 0, 1,
	1, 3, 1, 3, 0, 4, 3, 4, 5, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 0, 0,
	0, 2, 3, 2, 3, 11, 11, 13, 5, 5,
	16, 12, 9, 4, 15, 1, 6, 9, 8, 0,
	3, 3, 6, 3, 0, 3, 4, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	10, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 3, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 4,
	0, 1, 1, 3, 2, 3, 3, 3, 0, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 3, 3,
	3, 3, 2, 4, 5, 4, 6, 7, 2, 3,
	3, 3, 3, 0, 3, 0, 3, 3, 1, 1,
	1, 3, 2, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 5, 4, 6, 4, 3, 3, 3,
	6, 6, 5, 5, 5, 5, 4, 3, 5, 1,
	3, 1, 3, 3, 5, 0, 5, 0, 3, 0,
	3, 0, 3, 4, 0, 1, 1, 3, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 8,
	4, 7, 1, 2, 5, 7, 10, 8, 11, 1,
	2, 5, 5, 5, 5, 6, 5, 7, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 2,
	2, 5, 0, 1, 2, 1, 3, 5, 7, 8,
	7, 9, 10, 7, 9, 10, 2, 2, 2, 2,
	4, 2, 4, 2, 3, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 3, 2, 4, 4, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 5, 5, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 6, 8,
	3, 6, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 3, 2,
	3, 3, 2, 3, 3, 2, 3, 4, 2, 2,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 4, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 3, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 2, 3,
	3, 2, 2, 4, 3, 1, 0, 1, 3, 3,
	3, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	1, 0, 1, 1, 1, 1, 2, 2, 2, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 2,
	1, 2, 1, 2, 2, 5, 5, 3, 2, 2,
	2, 2, 1, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 0, 3, 0, 3, 1, 1, 0, 1,
	5, 4, 2, 3, 3, 0, 1, 0, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 3, 5, 5, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 3, 3, 1, 1, 0, 1, 1,
	1, 3, 5, 3, 3, 3, 5, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	1, 3, 3, 3, 3, 2, 1, 11, 12, 12,
	13, 13, 0, 1, 3, 2, 1, 5, 1, 1,
	0, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 2, 3, 3, 3, 3, 4,
	5, 3, 3, 4, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 3, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	0, 1, 6, 1, 4, 5, 5, 6, 0, 1,
	0, 3, 1, 1, 0, 2, 0, 8, 9, 0,
	2, 0, 1, 2, 0, 2, 1, 1, 1, 1,
	4, 3, 7, 5, 5, 1, 3, 5, 4, 8,
	10, 9, 2, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 3, 3, 6, 5, 4, 4, 5, 5,
	8, 4, 5, 7, 2, 2, 2, 2, 3, 3,
	3, 4, 1, 3, 3, 3, 3, 4, 5, 5,
	3, 7, 6, 5, 2, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 4, 4, 3, 5, 3,
	1, 1, 1, 1, 5, 0, 1, 2, 0, 1,
	0, 1, 1, 2, 5, 3, 4, 4, 4, 4,
	4, 4, 3, 7, 6, 8, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 3, 1, 3, 8,
	8, 8, 11, 12, 15, 0, 3, 3, 3, 3,
	5, 3, 5, 6, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 0, 1, 1, 3, 2, 3, 8,
	5, 1, 1, 1, 1, 1, 1, 4, 4, 4,
	4, 1, 3, 1, 1, 2, 2, 4, 4, 3,
	3, 3, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 4, 3, 2, 2, 6, 2, 4, 3,
	3, 4, 4, 5, 8, 6, 3, 4, 4, 2,
	4, 3, 2, 4, 5, 6, 2, 6, 6, 3,
	3, 4, 2, 4, 3, 3, 3, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 3, 2, 0, 1,
	1, 2, 4, 1, 0, 1, 2, 1, 2, 4,
	4, 5, 0, 1, 0, 3, 0, 2, 4, 4,
	2, 3, 4, 4, 5, 3, 4, 5, 4, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 0, 2, 2, 2, 2, 2,
	2, 0, 1, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 2, 6, 0, 1, 0,
	3, 0, 1, 0, 2, 2, 4, 1, 2, 2,
	2, 2, 2, 0, 2, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 2, 2, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 5, 1,
	2, 3, 1, 1, 2, 2, 4, 0, 1, 2,
	6, 1, 3, 2, 4, 1, 1, 1, 1, 1,
	5, 5, 8, 5, 5, 8, 5, 5, 8, 2,
	2, 2, 3, 4, 4, 0, 1, 3, 1, 0,
	3, 1, 3, 1, 3, 4, 6, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 1, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 3, 2,
	2, 2, 12, 1, 3, 3, 3, 6, 7, 2,
	3, 3, 4, 4, 5, 5, 8, 8, 3, 3,
	4, 3, 4, 1, 3, 3, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 4, 6, 6, 6, 4,
	8, 8, 8, 8, 4, 6, 7, 7, 7, 9,
	4, 7, 5, 4, 4, 4, 4, 2, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 6, 3, 4,
	2, 2, 2, 0, 2, 1, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 1, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	0, 2, 1, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 1, 1, 1, 0, 2,
	4, 4, 1, 4, 1, 3, 4, 1, 4, 3,
	6, 2, 3, 1, 1, 0, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 0, 5, 1, 3,
	2, 3, 3, 1, 1, 3, 3, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 4, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 3, 0, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 1, 0, 1, 0, 4,
	0, 1, 0, 3, 0, 3, 0, 4, 0, 2,
	0, 4, 4, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -462, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -72, -22, -23, -24, -82, -86, -87, -88, -84,
	-85, -92, -93, -94, -90, -89, -30, -33, -25, -96,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -134, -463, 12, -128, 34, -77, 190,
	-453, -74, -73, -75, -76, 193, 192, 230, 194, 645,
	368, 646, 223, 72, 445, -95, 448, 449, -468, 306,
	307, 25, 42, 450, 452, 35, 36, 246, 334, 336,
	197, 446, 428, 429, 359, 693, -6, 651, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	762, -211, 20, -104, -469, -211, -10, -9, -4, 651,
	-104, -110, 14, 15, 13, 556, -104, -354, 28, -3,
	117, 76, -8, 11, -268, -279, 97, 547, 198, -277,
	330, 332, 208, -265, -267, -275, 256, 266, 49, 210,
	209, 267, 199, 330, -265, 200, 202, 547, 198, 239,
	238, 330, 332, 271, 645, 199, -149, -298, -284, -286,
	-285, 348, 82, -283, 576, 580, 271, 583, 584, 589,
	338, 90, 52, 368, 570, 360, 369, 220, 525, 571,
	331, 337, 340, 361, 734, 370, 372, 373, 568, 569,
	54, 202, 558, 559, 562, 213, 749, 353, 221, 648,
	267, 757, 752, 754, 342, 755, 515, 607, 445, 464,
	456, 483, 649, 705, 279, 301, 453, 385, 532, 608,
	345, 294, 366, 706, 321, 289, 521, 527, 304, 448,
	609, 610, 611, 541, 247, 277, 707, 454, 298, 300,
	299, 261, 575, 305, 41, 226, 480, 658, 646, 256,
	708, 614, 701, 613, 250, 283, 612, 328, 40, 32,
	615, 249, 544, 108, 276, 709, 376, 529, 616, 501,
	377, 245, 272, 274, 290, 711, 653, 349, 232, 528,
	430, 476, 359, 127, 254, 316, 378, 712, 502, 506,
	713, 533, 335, 315, 619, 714, 715, 379, 657, 284,
	716, 201, 341, 620, 280, 717, 257, 443, 535, 346,
	500, 211, 650, 222, 56, 236, 536, 504, 622, 510,
	513, 431, 375, 432, 718, 719, 720, 721, 357, 355,
	624, 356, 358, 626, 268, 296, 654, 623, 656, 61,
	196, 660, 508, 507, 509, 297, 674, 531, 488, 486,
	722, 723, 350, 217, 724, 725, 487, 23, 726, 727,
	539, 320, 352, 728, 729, 730, 625, 293, 630, 606,
	731, 732, 530, 503, 505, 255, 126, 645, 278, 733,
	354, 526, 363, 661, 652, 339, 291, 631, 735, 381,
	292, 235, 228, 540, 425, 426, 441, 442, 371, 736,
	429, 737, 738, 739, 740, 333, 332, 449, 364, 632,
	450, 273, 302, 655, 741, 633, 634, 742, 743, 265,
	248, 543, 534, 60, 517, 512, 367, 382, 455, 427,
	438, 433, 434, 436, 437, 440, 439, 435, 444, 520,
	446, 275, 242, 635, 636, 637, 428, 638, 12, 295,
	347, 639, 640, 641, 524, 365, 303, 266, 269, 491,
	237, 744, 745, 478, 479, 447, 240, 230, 121, 542,
	326, 700, 330, 383, 288, 59, 243, 53, 746, 747,
	270, 244, 659, 287, 451, 344, 662, 199, 82, -288,
	-283, -286, -287, -284, -285, 348, 231, 58, 95, 63,
	62, 82, -283, 645, 143, 484, 532, 190, 522, 523,
	529, -347, 530, 238, 425, 367, 241, -303, 199, -261,
	240, 521, 335, 354, 580, 244, 245, 272, 426, 432,
	200, 201, 37, 534, 533, 525, -298, -97, 451, -97,
	-97, 203, 451, -112, 232, 194, -149, 231, -67, 82,
	308, -67, 34, 82, -161, -290, -298, 82, -283, 41,
	82, 450, 524, 524, 84, 652, 247, 26, -442, -417,
	363, -441, -415, 191, 190, 15, 192, 271, 368, 369,
	334, 200, 13, 35, 734, 218, 370, 371, 11, 223,
	372, 373, 239, 14, 374, -443, -420, 386, 387, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 81, 82, -283, 26,
	-442, -417, 363, 371, 425, 447, 425, 425, -270, -269,
	384, 510, 143, -127, 704, -125, -133, -300, -298, -284,
	-285, -199, -470, 252, 547, -257, 330, -277, 204, -129,
	-131, -132, -153, -135, 702, -463, -130, -455, -149, -136,
	82, 605, -108, 10, -107, -109, 9, 8, -108, -229,
	22, 21, -266, -105, -229, -464, 78, -464, -127, -119,
	134, -121, -298, -166, 100, -176, 33, 29, -175, 348,
	231, -167, -203, -284, -202, -136, 143, -302, 132, 133,
	140, 101, 186, -187, -185, -186, -188, -190, -191, 226,
	478, 479, 81, 83, 91, 84, 85, 86, 87, 92,
	93, 94, -290, -286, -285, -282, 576, 580, 583, 584,
	589, -200, -463, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 66, 67, 574, 198, 557,
	558, 481, 559, 13, 560, 561, 562, 647, 220, 566,
	103, 55, 325, 548, 549, 553, -192, 550, 554, 555,
	568, 569, 570, 571, 205, 547, 138, 556, 593, 594,
	595, 596, 597, 598, 599, 600, 602, 603, 601, 577,
	578, 579, 581, 582, 585, 586, 587, 588, 590, 591,
	592, 676, 195, 191, 194, 99, 28, 30, 677, 253,
	102, 462, 496, 565, 21, 25, 214, 197, 484, 212,
	142, 207, 215, 310, 312, 190, 70, 678, 545, 311,
	522, 672, 669, 671, 670, 475, 473, 309, 679, 15,
	31, 224, 260, 680, 471, 192, 251, 106, 107, 681,
	46, 45, 8, 313, 225, 319, 472, 682, 683, 24,
	73, 216, 16, 210, 241, 756, 684, 334, 18, 125,
	19, 685, 666, 668, 667, 204, 119, 200, 748, 68,
	258, 686, 460, 465, 466, 467, 468, 469, 461, 96,
	687, 688, 116, 324, 64, 605, 37, 246, 702, 563,
	323, 689, 43, 42, 495, 499, 494, 322, 511, 117,
	22, 551, 552, 35, 690, 691, 234, 498, 459, 493,
	703, 692, 664, 263, 71, 384, 474, 760, 38, 74,
	229, 380, 351, 47, 97, 20, 259, 69, 39, 572,
	122, 761, 477, 206, 238, 693, 537, 262, 694, 123,
	470, 704, 218, 118, 452, 193, 362, 307, 219, 329,
	336, 695, 252, 124, 523, 663, 696, 567, 34, 223,
	306, 458, 208, 697, 264, 318, 308, 317, 698, 699,
	343, 48, 758, 675, 199, 44, 105, 497, 457, 492,
	203, 564, 239, 314, 9, 49, 36, 518, 14, 374,
	72, 75, 485, 482, 490, 489, 209, 759, 17, 327,
	573, 651, 538, 98, 673, 519, 546, -104, -104, -104,
	-246, 447, -253, -250, 533, 534, -251, -254, -248, -203,
	510, 731, 732, 532, 484, 531, -290, -298, -284, 348,
	231, 143, 577, 578, 579, 103, 481, 557, 593, 548,
	550, 545, 549, 547, 33, 594, 29, 94, 595, 574,
	205, 13, 186, 581, 582, 596, 597, 598, 66, 551,
	552, 647, 138, 100, 599, 600, 92, 602, 603, 325,
	556, 67, 601, 198, 587, 586, 585, 588, 560, 561,
	93, 553, 554, 555, 55, 591, 590, 592, -2, -6,
	-463, -149, -355, -342, -345, -290, -284, -286, -287, 227,
	-285, 215, -383, 82, -283, 212, -211, -104, 200, 202,
	556, -264, 205, -264, 239, 238, 271, -278, 264, -264,
	-264, 735, 199, -277, 109, 109, -78, -149, -419, -414,
	-420, 199, -290, -263, 205, -263, -263, -263, -263, -263,
	-263, -263, 82, -288, -149, 187, -83, -149, -141, 16,
	16, 75, 75, 82, -288, 82, 431, 375, 34, -262,
	117, 17, 547, 198, 199, 238, 239, 202, 271, -262,
	-349, 16, 119, 242, 242, 242, 242, 242, 243, 242,
	-260, 524, 526, 527, 528, -259, 16, 119, 17, -122,
	117, 24, -463, -229, -229, -259, 242, 135, -99, 99,
	-99, 82, 450, 203, -113, 233, -112, -113, -178, -156,
	28, 6, 7, 109, 34, 34, 81, 59, 34, -62,
	-61, -63, 294, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 34, -398, 76, 187, -337, 510,
	82, -411, -412, -149, 84, 84, 74, 354, 74, 77,
	203, 77, 74, -444, 364, 76, -444, 332, 364, 365,
	266, 330, 202, -444, -444, 332, -444, -444, -444, 351,
	-444, -444, 524, -444, -444, -444, 366, 367, -444, 522,
	202, -444, -444, -444, -444, -444, 79, 74, 77, 354,
	74, 16, 74, 427, 430, 537, 651, -54, 443, 444,
	-168, 26, -375, 143, 376, 377, 378, 379, 375, 354,
	380, 381, 382, 242, 383, 199, 524, 375, -6, -125,
	77, -233, -463, 77, -200, -463, 82, -330, -329, -326,
	-327, -328, -325, 33, 199, -263, 271, -144, -146, -145,
	-147, 64, 68, 70, 65, 66, 67, 525, 71, -273,
	28, -135, -463, -124, -9, -134, -129, -463, -154, 122,
	-164, -273, -155, 72, 204, 73, 28, -156, -157, -158,
	-159, -160, 6, 7, 54, -463, -463, -7, -8, 26,
	27, -14, -7, -12, -14, 26, 27, 26, 27, -7,
	-230, 24, 35, -179, 84, 87, -203, -212, -215, -121,
	-298, 58, -116, 26, 27, 65, 57, 63, 62, -226,
	89, 16, -293, 99, 97, 98, 116, -292, 28, 82,
	81, -288, 187, -121, -170, 119, 100, 117, 118, 102,
	129, 128, 139, 132, 133, 134, 135, 136, 137, 138,
	130, 131, 142, 109, 110, 111, 112, 113, 114, 115,
	-258, -463, -136, -463, 187, -463, 187, 188, 189, 187,
	-176, -176, -176, -176, -176, -176, -176, 81, 81, 81,
	-463, 187, 187, 187, -463, -463, -463, -463, -463, -195,
	-121, 651, -463, 199, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -206,
	-121, -463, -463, -467, -463, -467, -467, -189, -467, -463,
	-189, -189, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -189, -189, -189, -463, -257, -257, 16,
	-141, -142, -149, -152, -298, 77, -247, -252, 535, 537,
	447, -251, -251, -297, -290, 81, 33, 143, -353, 109,
	120, 34, 187, -211, 78, 77, -305, -309, -311, -310,
	-312, -307, -308, -68, 488, 486, 482, 481, 484, 487,
	143, 485, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 34, 226, 478, 479, 480, 662, 502,
	503, 504, 505, 506, 507, 508, 509, 456, 483, 649,
	457, 458, 459, 460, 461, 462, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, -305,
	-305, -305, -305, -305, -289, -383, 82, -288, 76, -229,
	-266, -290, -149, -279, 208, -277, 82, 100, 82, -148,
	-290, -298, -161, -264, 265, -423, -422, -414, -417, 675,
	-264, -278, -414, 270, 268, 269, 77, 203, 77, 203,
	79, -263, 74, -143, -149, 29, 82, 82, -148, -161,
	-416, -414, -417, -162, -290, -298, -299, -298, -281, -286,
	-287, 676, 195, 26, 191, 194, 99, 28, 30, 677,
	253, 102, 462, 143, 577, 578, 579, 496, 565, 21,
	25, 214, 103, 197, 481, 484, 212, 142, 207, 215,
	310, 312, 557, 593, 190, 70, 678, 548, 550, 545,
	549, 311, 547, 522, 672, 669, 671, 670, 475, 473,
	309, 33, 679, 15, 594, 31, 224, 260, 27, 680,
	136, 471, 192, 604, 251, 106, 107, 681, 46, 45,
	8, 29, 313, 225, 94, 319, 595, 472, 682, 683,
	24, 73, 216, 16, 210, 241, 756, 684, 334, 18,
	574, 125, 19, 685, 666, 668, 667, 205, 204, 119,
	200, 748, 68, 258, 13, 686, 460, 465, 466, 467,
	468, 469, 461, 186, 96, 687, 688, 116, 324, 64,
	581, 582, 605, 50, 37, 246, 596, 597, 702, 598,
	563, 323, 689, 43, 42, 495, 499, 494, 322, 511,
	66, 117, 22, 551, 552, 35, 690, 691, 647, 234,
	498, 459, 493, 703, 692, 664, 138, 263, 71, 100,
	384, 599, 600, 92, 474, 760, 38, 74, 229, 380,
	351, 47, 97, 20, 259, 69, 39, 572, 122, 761,
	602, 477, 206, 238, 693, 537, 262, 694, 123, 603,
	470, 704, 218, 118, 452, 193, 325, 556, 362, 307,
	219, 329, 336, 67, 695, 252, 124, 601, 198, 523,
	663, 11, 696, 567, 34, 223, 306, 458, 208, 697,
	264, 318, 308, 317, 698, 57, 699, 343, 48, 587,
	586, 585, 588, 758, 65, 560, 561, 675, 199, 44,
	105, 497, 457, 492, 203, 564, 239, 93, 314, 9,
	49, 36, 518, 14, 374, 72, 75, 553, 554, 555,
	55, 485, 482, 490, 591, 489, 590, 592, 209, 759,
	104, 17, 327, 573, 651, 538, 98, 673, 519, 14,
	192, 77, 81, -241, 82, -288, 81, -241, -240, -241,
	-240, 242, -262, 81, -302, -121, -264, -264, -149, -149,
	-149, -149, -149, -149, -262, -262, -262, -262, -259, 16,
	-259, -262, -298, -298, -121, -176, -414, 549, 134, -262,
	-298, -100, -98, 217, -98, -100, 82, 82, 450, -91,
	-4, -18, -16, -17, -113, -9, 38, 28, 28, 82,
	-62, -62, 81, -62, 77, 109, -62, -178, 78, -195,
	-290, -396, 748, 77, -413, 28, 537, 538, 511, -446,
	199, 241, 238, 74, -446, -441, 371, -416, -415, -414,
	-444, -445, -290, -444, -444, -444, 524, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -420, -446, 334, 77,
	-446, -416, -414, 203, -378, -380, 441, 442, 538, 539,
	454, 375, 375, 375, 375, 375, 375, -140, -141, -140,
	203, 253, -133, 28, -232, -231, -291, -284, -285, -286,
	-287, 227, -290, -281, -470, -330, -327, -326, -328, 484,
	532, 142, 544, -149, -414, -162, -131, -131, -129, -131,
	64, 64, 64, 69, 64, 69, 69, 64, 64, -145,
	-300, -273, 77, -464, -464, -464, -9, -463, -300, -164,
	-273, 200, 200, 200, 102, 16, 52, 26, 102, 16,
	52, 26, 102, 16, 52, 26, -118, -117, -120, 134,
	-121, -298, -176, -242, 96, 14, 119, 77, 23, 77,
	-228, 30, 31, 187, -177, 59, 84, 87, -242, 77,
	-119, -149, -121, -121, -121, -193, 92, 100, 93, 94,
	-292, 227, 134, -299, -291, -286, -284, -285, 348, 231,
	-281, -176, -194, -200, -136, 88, 119, 117, 118, 102,
	-176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
	-176, -176, -176, -176, -176, -301, 82, 81, 143, 82,
	-291, -117, -291, -175, 226, 478, 479, 92, -175, -290,
	-290, -106, 26, 27, -291, 525, -290, -291, -106, -106,
	-106, -106, -106, 77, -464, -117, -117, -117, -464, -121,
	-121, -117, -176, -117, -203, 81, -117, -203, 81, -117,
	-176, 563, 564, 565, -117, -117, -106, -204, -205, 104,
	-203, -284, -287, 348, 231, -117, -464, 84, -182, -183,
	654, 663, 664, 666, 669, 662, 661, 660, 658, 657,
	656, 659, 655, 673, 672, 671, 670, 668, 667, 665,
	-182, -182, -184, 226, 480, 478, 479, -117, -118, -117,
	-117, -464, -464, -120, -117, -120, -117, -117, -120, -464,
	-464, -464, -117, -117, -117, -117, -117, -117, -117, -117,
	-117, -117, -117, -117, -464, 84, -151, 96, -149, -124,
	-149, -141, -465, 16, 75, -465, 77, 187, -250, -253,
	77, 536, 538, 539, -247, -322, -323, 142, 74, 95,
	81, -121, -291, -299, -229, -374, -342, -343, -344, -345,
	-367, 215, -382, 206, 208, 210, 209, 49, -346, 216,
	200, 50, -306, -332, 517, 518, -314, 76, -313, 76,
	-68, 482, 481, 484, -313, 482, 489, -313, 489, 489,
	-313, -313, -313, 482, 76, 76, -314, -314, -314, -334,
	76, -334, 477, -335, 76, -335, -335, -335, -335, -306,
	-306, -306, -306, -306, -383, -121, -230, -294, 75, -233,
	202, 735, -330, 29, -330, -69, 253, 221, 187, 76,
	-162, 256, 257, -418, 77, 33, -424, 331, 84, 205,
	-149, 231, -149, -149, -414, -414, -420, -141, -149, 77,
	77, 187, 714, 714, -149, 77, 81, 82, 82, -178,
	-350, 16, 119, -262, -149, -178, -115, 227, 75, -467,
	-464, 452, 453, 82, -91, -176, 38, 38, -61, -175,
	-290, 78, -397, 204, 556, 81, -412, -300, 510, 538,
	-447, 134, -290, -446, -447, -450, 651, 203, 78, 77,
	-444, -447, 351, 334, -447, 16, -377, -379, 433, 435,
	436, 434, 437, 438, 439, 440, 77, 109, 109, 455,
	-381, 24, -376, 651, -376, 81, -176, -135, -464, 77,
	187, -200, 34, -352, -353, -352, -352, -81, -389, -359,
	-79, -387, 122, 195, 192, 191, 267, 197, -325, 557,
	250, 249, 283, 284, 73, 35, 196, 193, -71, -80,
	230, 289, 235, 290, 194, 229, 291, 228, 292, 651,
	287, 755, 515, 607, 608, 641, 90, 611, 247, 41,
	200, 621, 614, 544, 617, 618, 376, 616, 620, 211,
	624, 623, 625, 627, 628, 629, 340, 632, 633, 634,
	248, 635, 636, 637, 365, 642, 9, -424, -430, 74,
	-138, -137, 74, 75, -139, 74, -137, 64, 64, 64,
	-236, 76, -300, -129, -464, -238, -290, -164, -300, -463,
	-463, -463, -176, -176, 119, -176, -176, 119, -176, -176,
	119, -464, 77, 187, 77, -239, 40, 39, -290, 512,
	60, -179, -179, -215, -256, 24, 16, 55, 55, -126,
	16, -226, -226, 92, 93, 94, 187, -463, -194, -176,
	-176, -176, -115, 99, -464, -464, -118, -117, -117, -117,
	-117, -117, -121, -464, -464, -464, 77, 75, 28, -464,
	75, 119, -464, 16, 16, -464, 16, 16, -464, -464,
	16, -176, -176, -176, -464, -464, -117, -207, -205, 106,
	-121, -464, -464, -464, -464, -464, 77, 77, 16, 77,
	-464, -464, -464, -464, -216, 572, -216, -464, -464, -464,
	-464, -464, -464, -216, -216, -216, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -237,
	122, -149, 34, -237, 75, -124, -124, -152, -298, 134,
	-252, -255, 540, 537, 543, 82, 81, 143, 81, 187,
	-230, -358, -373, 77, -359, 755, 515, 607, -325, 608,
	641, 90, 611, 247, 41, 200, 621, 614, 544, 617,
	618, 376, 616, 620, 211, 624, 623, 625, 627, 628,
	629, 340, 632, 446, 633, 634, 248, 635, 636, 637,
	365, 642, 9, 651, 76, -351, -289, -382, 82, -283,
	50, -346, -348, -346, -346, -346, -351, 82, -283, -351,
	50, 717, 92, 100, -321, -323, 143, -318, -319, -336,
	-339, -315, 28, 756, 520, 218, -345, 484, 532, 33,
	74, 515, 206, 50, 49, 210, 90, -333, 519, 84,
	84, 583, -313, 489, -313, -313, -313, -313, -313, -340,
	81, -340, 84, -334, 84, 78, 74, -290, 28, -149,
	675, -70, 13, 14, 15, -290, -399, -400, -401, -290,
	119, 258, 259, 74, -433, 362, -422, 332, 341, 99,
	21, 651, -454, 100, 203, 203, -393, 219, 214, -149,
	-414, -290, 74, 74, -241, -165, 17, 82, 82, -259,
	-262, -176, -417, 244, 245, -176, -176, -150, 96, -413,
	203, 187, 187, -447, 203, 353, -416, -290, 16, 16,
	351, 16, -416, 77, 109, 109, 109, 109, 109, 109,
	109, 109, -380, 76, 76, 385, 537, -231, -291, -352,
	82, 81, 143, 82, 81, 143, 81, -388, 77, -389,
	195, 192, 283, 284, -387, 21, -274, -346, -395, -394,
	-344, -345, 122, 207, 215, 215, 212, -274, -346, 206,
	216, 122, 215, 212, -274, 200, -352, -274, 484, 142,
	203, 37, 37, 365, 122, 365, 122, -352, -274, 207,
	-346, -271, 215, -272, 203, 28, 288, 122, 122, 122,
	122, 122, 122, 122, 122, 293, 675, -352, -352, -352,
	-352, -352, -352, -352, -352, 613, 613, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-356, -451, 81, -461, 90, 271, 340, 82, -283, -281,
	84, 86, 85, -352, -352, -163, 193, 277, 273, -121,
	76, -121, -234, -290, -236, -464, 77, -164, -234, -234,
	-234, 99, 203, -463, 99, 203, -463, 99, 203, -463,
	-273, -120, 134, -299, 81, 77, 81, 81, 513, 61,
	-149, -165, 604, -124, -119, 134, -291, -118, -115, 99,
	-176, -464, -464, -464, -464, -464, -464, -304, 143, 481,
	484, 226, 480, 473, 471, 470, 472, 500, 486, 517,
	478, 518, 662, -301, -304, -301, -176, -176, -176, -176,
	-176, -176, 16, 16, 16, 648, -211, 108, -121, 105,
	-176, -176, -176, -176, -290, -221, -463, -216, -216, -216,
	-216, -216, -216, -217, -216, -217, -217, -217, -217, -217,
	-217, -217, -217, -217, -217, -217, -172, -173, 34, -171,
	-9, -463, -174, -471, 55, 59, -463, -244, -249, -203,
	-284, -287, 227, -165, -124, -165, -165, 187, 537, 541,
	542, -373, -352, -352, -352, 532, 484, 142, -352, -352,
	-352, -352, -352, 613, 613, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, 447, -352, -352, -352, -352, -352, -352, -356,
	-451, -352, -352, 675, -369, -368, 82, -288, 206, 49,
	-382, -351, -351, -351, -351, -351, -101, -289, 92, -463,
	757, 84, -149, 34, 82, 143, 81, -175, 133, -302,
	-167, -186, -463, 93, 94, 548, 549, 553, 550, 554,
	555, 568, 569, 570, 571, 545, 551, 552, 14, 50,
	50, 50, 81, 78, 78, 78, -313, 78, 77, 78,
	77, 78, 77, -169, 709, 710, -149, -225, -233, 84,
	74, 78, 77, -305, -290, -290, -290, 273, -436, 651,
	337, -434, -432, 343, 344, 345, 346, 347, -417, 342,
	-424, 339, 81, 82, 81, 674, 708, 729, 701, 29,
	-149, -414, -235, 76, -234, -235, -121, -178, -237, 199,
	-416, 134, 134, -290, 203, -416, 351, -449, 651, -416,
	-416, 16, -416, -379, 81, 81, 81, 84, 84, 84,
	84, 84, -141, -141, 81, 35, 82, 81, 143, -358,
	-79, 195, 192, 283, 284, -360, -361, -364, -363, 123,
	622, 689, 76, -341, 82, -288, -351, -267, 208, 206,
	-463, 82, -289, -289, -289, -290, 50, 50, -238, -289,
	-289, -290, -289, 33, 280, 281, 282, 82, 34, -352,
	484, -238, 26, -238, 26, 33, 337, 285, 286, -341,
	-289, -290, -149, 216, 212, -289, -238, 26, 84, -238,
	-290, -238, 26, -238, 26, -238, 26, -238, 26, 643,
	-356, -121, -356, -461, -461, 81, 81, 81, -352, -352,
	-103, 644, 217, -461, 81, -103, -461, -451, 81, -102,
	217, 220, 222, -356, -356, -356, -461, -461, -461, -461,
	81, -357, 33, 615, 476, 610, 631, 609, 82, 92,
	81, 81, -461, 33, -461, 33, -461, -356, 638, -461,
	-463, -429, 249, 250, 203, 278, 100, -426, 754, 274,
	-234, 78, 77, -154, -290, -464, -464, -464, -176, -176,
	-176, -176, -176, -176, -176, -176, -176, -300, 187, 527,
	-290, -320, -321, -208, 18, -226, -464, -176, -217, -217,
	-217, -217, -217, -464, -314, -314, -314, -314, -335, 477,
	-314, 461, -314, 461, -464, -464, -464, -464, 24, 24,
	24, 24, -464, -176, -176, -176, -463, -114, 567, -121,
	77, 77, -464, -464, -295, 82, -243, 74, -243, -244,
	-273, -9, -464, -232, -174, -463, 11, 55, 59, 651,
	199, -198, -201, -470, -238, -165, 77, -353, -353, -353,
	-353, -211, -165, -356, -356, -356, -352, 34, -352, -461,
	-461, 81, 81, 81, -352, -352, -103, -461, 81, -103,
	-461, -451, 81, -102, -356, -356, -356, -461, -461, -461,
	-461, 81, -357, 82, 92, 81, 81, -461, 33, -461,
	33, -461, -356, 638, -461, -463, 643, 78, 77, -314,
	-314, 50, -348, 76, -176, 28, 76, 82, 143, 81,
	-175, 81, -176, -192, 81, 84, 84, 76, -227, 28,
	-454, -149, -402, -403, -404, 90, 650, 100, 260, 261,
	217, 262, 263, 264, -401, -305, -305, -305, -426, -439,
	-440, -438, 340, 360, 361, 348, -437, -435, 355, 356,
	357, 358, 99, 81, 81, 81, -425, 331, 99, 340,
	21, 28, 21, 28, 81, 81, 81, 81, 84, 75,
	-234, -262, -320, -149, -449, -416, -449, 334, -416, 78,
	78, -365, 630, -463, 527, 619, 50, -341, -213, 220,
	221, -305, -305, -294, -348, 50, -384, -386, 122, -289,
	709, 710, 709, 710, 34, 192, 747, 717, -341, -352,
	-301, 34, 365, 365, 365, 365, -213, -272, 203, 50,
	-289, 203, 365, 365, 96, 651, 81, 81, 612, 626,
	-452, -451, -317, 90, 74, -162, 278, -430, 74, -181,
	-175, -186, -175, 78, -290, 77, 77, 77, 134, -463,
	-405, -260, -209, 19, 21, -320, 82, -320, 82, -176,
	-176, -176, -176, -464, -464, -464, -176, -464, 81, -176,
	-176, -197, 122, 32, -243, -300, -464, -174, -463, -464,
	-464, 77, -200, -463, -464, -211, -249, -121, -121, -121,
	-121, -229, -301, -352, -324, -451, 81, 81, 81, 612,
	626, -452, -371, -370, 75, 211, 90, 616, 634, 747,
	717, -368, -228, -228, -351, -351, -234, -464, -463, -234,
	-464, 78, 78, -369, -9, -225, 24, -226, -404, 81,
	264, 260, 264, 264, 264, 264, 265, -430, -421, 90,
	338, -438, 349, 715, 333, 362, 84, 84, 121, 35,
	36, -435, 84, 84, 84, 84, -432, 21, 651, -424,
	339, 81, 81, 339, 81, 81, 331, -454, 41, 78,
	-405, -448, 28, -449, -448, 351, -362, 639, 84, -176,
	-463, -463, -276, 267, 78, 82, -306, -306, 76, -351,
	-351, -464, 77, -290, 33, 33, -213, -301, -301, -289,
	-290, -289, 203, -289, -463, 199, 77, -464, 328, 81,
	367, -163, -431, -183, -176, -176, -176, -456, -457, -291,
	722, -406, 43, -409, 44, -219, 573, -210, -121, -196,
	-123, -121, -464, -464, -464, -464, -111, 119, 651, -464,
	-464, -211, 21, 50, -236, -174, -9, -463, -201, -464,
	-229, -301, -464, -370, -451, -352, 81, -352, -352, 78,
	-331, 759, 758, -176, 78, 78, -225, -227, 251, -227,
	41, 41, 256, 257, -429, 81, 81, 33, 350, 186,
	33, 84, 186, 575, 339, 81, 82, 340, 340, 21,
	-176, -406, -414, -448, -385, -463, 21, -464, -234, -176,
	-463, 109, -369, -294, 76, -386, 55, -176, 142, 142,
	203, -289, -384, -149, -451, -225, -429, 132, -427, 275,
	-464, -464, -464, -464, 77, -305, 24, 81, 606, -407,
	-408, -338, 47, 21, -218, -220, -290, 77, -464, 649,
	71, 652, -222, 124, 123, -195, 14, -9, 84, 81,
	81, 218, -464, -372, -371, -280, 651, -9, 252, -27,
	-4, -16, -17, -18, -19, -21, -72, -22, -23, -28,
	-29, -24, -82, -86, -87, -88, -84, -95, -93, -94,
	-90, -89, -32, -34, -35, -37, -40, -41, -38, -39,
	-36, -30, -33, -42, -25, -43, -44, -45, -50, -51,
	-31, -52, -46, 103, 205, 446, 309, 320, 321, 322,
	82, 325, 327, 323, 324, 319, 329, 445, -317, 84,
	33, 84, 33, 352, 340, 28, 84, -316, 204, 651,
	-384, -363, -464, -464, -234, 84, 78, 76, -369, 236,
	-352, -301, -289, -464, -71, 651, -27, -317, 186, -428,
	276, -181, -464, -457, -458, 606, 29, 728, 527, 81,
	48, 44, -410, 45, 46, 81, 77, 28, -123, 61,
	650, 653, -464, -223, 102, -224, 121, 575, -180, 84,
	186, -223, -244, -464, -149, -331, 212, 279, 510, -225,
	-214, 254, 255, -225, -121, -56, -57, 104, -121, 82,
	-66, -296, 312, 313, 314, -291, 82, 82, -55, -27,
	80, -55, -121, 82, 82, -466, 16, 58, -176, 108,
	-55, 328, 658, 658, 81, -236, 84, 332, -464, 619,
	50, -464, -372, -369, 78, 237, -301, 288, -225, 328,
	-175, -181, -431, -273, 81, 606, -463, 527, 21, 21,
	21, 21, -220, -221, 61, -224, 126, 127, 252, 126,
	127, -175, 76, 351, 212, 212, -280, -225, 82, 82,
	-56, 108, 106, -57, -121, 105, 310, 311, 315, -305,
	77, 762, 445, 322, 325, 327, 762, 328, 82, 16,
	762, -225, -245, 34, 43, 124, 33, 337, 26, -417,
	-463, -276, 78, -372, -463, -225, -183, -431, -300, -459,
	-460, 377, 92, 33, 81, -456, -463, 81, 81, 81,
	81, 651, 99, -182, -234, 351, 351, -227, 108, 106,
	103, -55, 105, -55, 24, 24, 24, -320, -291, 108,
	-27, 108, -55, -55, -55, -121, 326, -55, 96, 108,
	-27, -244, 8, -176, -463, -372, -176, 234, -27, -460,
	92, 33, -459, 92, 33, 74, 74, -175, -464, -456,
	652, -224, 78, -20, -26, -19, -25, -16, -17, -18,
	445, 651, 103, -55, 762, -55, 762, -67, 84, -9,
	-65, -64, 84, -67, 317, 100, 318, 82, -322, 322,
	82, 762, 762, 762, 328, -121, 762, -60, 82, -225,
	-417, -464, -176, -464, -464, -225, 74, -175, 74, -175,
	681, 377, 681, 377, 74, -464, 653, -391, -392, 74,
	-225, -55, 108, -127, 762, 108, 762, 108, 106, -58,
	-59, 107, -27, 77, 316, 33, 108, 108, 326, -55,
	108, 108, 77, -366, 640, -464, 74, 74, 377, 377,
	681, 377, -392, 74, -391, 74, 15, 14, 762, 108,
	103, 205, -55, 108, 106, -59, -121, -64, -176, 82,
	322, -121, 762, 325, 327, 82, 84, -366, 74, 74,
	-390, 219, 214, 217, 34, -390, 108, 103, 762, 205,
	-55, 105, 82, 108, 108, 377, 681, 213, 33, 92,
	108, 762, -55, 325, 327, 205, 108, 762, 82, 82,
	205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1723, 1221, 1723, 0, 1221, 0, 1221, 0, -2,
	135, 926, 927, 928, 929, 0, 1804, 0, 0, 0,
	0, 0, -2, 1183, 1184, 1187, 1184, 1184, 1213, 0,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 64, 0, 1327, 2752,
	-2, 1217, 1218, 1219, -2, -2, 0, 53, 0, 60,
	2, 1731, 0, 1234, 1223, 1731, 0, 0, 49, 0,
	0, 1221, 1221, 1221, 87, 88, 0, 121, 0, 123,
	0, 0, 1723, 1221, 0, 0, 0, 1808, 1808, 335,
	1808, 1808, 1823, 0, 1826, 333, 0, 1805, 1821, 1822,
	1824, 0, 0, 0, 0, 0, 1806, 1806, 1806, 1806,
	1806, 1806, 1806, 1806, 0, 0, 1097, 1418, 1420, 1421,
	1422, 1423, 1835, 1836, 2743, 2744, 2745, 2746, 2747, 2748,
	2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724,
	2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734,
	2735, 2736, 2749, 2750, 2751, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 0, 0, 0,
	1102, 1103, 1104, 1105, 1106, 2737, 2738, 2739, 2740, 2741,
	2742, 1115, 1116, 0, 0, 0, 1174, 0, 1174, 1134,
	1135, 0, 1137, 0, 0, 0, 0, 0, 0, 0,
	1171, 1149, 1152, 1156, 0, 1731, 1731, 1171, 1162, 0,
	780, 781, 782, 1179, 1180, 1168, 1181, 1186, 1185, 1194,
	1194, 0, 1185, 1215, -2, 1215, 1355, 0, 459, 461,
	0, 482, 0, 485, 488, 1424, 0, -2, -2, 1846,
	1200, 0, 0, 1872, 1873, 0, 0, 0, 0, 0,
	2610, 233, 349, 274, 274, 274, 274, 274, 274, 274,
	0, 274, 274, 0, 274, 274, 274, 2626, 274, 0,
	274, 274, 274, 274, 274, 232, 348, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 338, 339, 340, 0,
	0, 0, 2610, 0, 732, 1188, 737, 735, 0, 729,
	726, 727, 0, 80, 0, 67, 81, 1755, 1377, 1378,
	1379, 1324, 0, 1328, -2, 0, 1806, 0, 1811, 69,
	1314, 1315, 1316, -2, 0, 0, 1322, 1323, -2, 1474,
	1835, 0, 0, 1228, 0, 0, 1225, 1231, 0, 1738,
	0, 0, 119, 1222, 47, 48, 2753, 59, 0, 0,
	1250, 1305, 0, 1433, 2307, 1439, -2, 2220, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 2165, 0, 0, 0,
	0, 0, 2262, 1512, 1513, 1514, 1515, 1516, 1517, 2473,
	2691, 2692, 1701, 1705, 1706, 1707, 1708, 1709, 1710, -2,
	-2, -2, 1684, 1685, 1699, 0, 2743, 2744, 2746, 2747,
	2748, 1773, 0, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 2288, 2351, 2239, 2356, 2184,
	2749, 2176, 2750, 2253, 2380, 2381, 2751, 2296, 2722, 0,
	-2, 2405, 2344, -2, -2, -2, 1580, -2, -2, -2,
	2733, 2734, 2719, 2724, 2246, 2194, 2304, 2345, 2185, 2206,
	2225, 2274, 2275, 2277, 2309, 2310, 2328, 2337, 2355, 2166,
	2167, 2168, 2269, 2270, 2377, 2376, 2375, 2378, 2411, 2409,
	2412, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2169, 2170, 2171, 2172, 2173, 2175, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2186, 2187, 2188, -2, 2193,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2204, 2205,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2221, 2222, 2224, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2240,
	2241, 2242, 2243, 2244, 2245, 2247, 2248, 2249, 2250, 2251,
	2252, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2263,
	2264, 2265, 2266, 2267, 2268, 2271, 2272, 2273, 2276, 2278,
	2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2289,
	2290, -2, -2, 2293, 2294, 2295, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2305, 2306, 2308, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2338, 2339, 2340, 2341, 2342, 2343, 2346, 2347, 2348, 2349,
	2350, 2352, 2353, 2354, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2379, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2406, 2407, 2408, 2410, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 0, 1810, 1810, 0,
	106, 2693, 0, 1780, -2, -2, 1782, 0, 0, 0,
	-2, -2, -2, -2, 2177, -2, 1684, 0, 0, 0,
	0, 2165, 2166, 2167, 2168, 2174, 2176, 2184, 2185, 2189,
	2190, 2191, 2192, 2194, 2203, 2206, 2220, 2223, 2225, 2239,
	2246, 2253, 2262, 2269, 2270, 2274, 2275, 2277, 2288, 2291,
	2292, 2296, 2304, 2307, 2309, 2310, 2311, 2328, 2337, 2344,
	2345, 2351, 2355, 2356, 2375, 2376, 2377, 2378, 2380, 2381,
	2392, 2402, 2403, 2404, 2405, 2409, 2411, 2412, 122, 1723,
	0, 124, 0, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 806, 1829, 1830, 0, 1731, 1234, 0, 0,
	333, 0, 0, 0, 0, 0, 1808, 328, 0, 0,
	0, 0, 1808, 335, 0, 0, 1077, 0, 1078, 0,
	343, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 1122, 1096, 0, 1098, 100, 1101, 0,
	0, 0, 0, 1119, 1120, 1123, 0, 1165, 1174, 1125,
	0, 0, 1808, 1808, 0, 0, 0, 0, 0, 1133,
	0, 808, 809, 1174, 1139, 1140, 1174, 1174, 1174, 1171,
	0, 1171, 1146, 1169, 1170, 1174, 0, 0, 0, 1151,
	0, 0, 0, 1159, 1160, 1174, 1164, 0, -2, 1192,
	-2, 1201, 0, 0, 79, 1216, 1215, 0, 1220, 1356,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 484,
	465, 0, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 1355, 0, 0, 1841, 1847,
	1205, 1863, 1864, 0, 1874, 1875, 278, 0, 278, 0,
	0, 0, 0, 200, 274, 0, 202, 274, 274, 274,
	0, 274, 274, 209, 210, 274, 212, 213, 214, 274,
	216, 217, 274, 219, 220, 221, 274, 274, 224, 274,
	274, 227, 228, 229, 230, 231, 347, 278, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 733, 738, 739,
	734, 736, 707, 0, 0, 0, 0, 712, 713, 714,
	715, 0, 0, 718, 719, 98, 98, 0, 65, 66,
	0, 0, 0, 1327, 1325, 0, -2, 931, -2, 683,
	684, 685, 0, 680, 0, 0, 0, 0, 0, 0,
	0, 1380, 0, 0, 1383, 0, 0, 0, 0, 0,
	1820, -2, 0, 0, 0, 0, 1312, 0, 1329, 0,
	1331, 0, -2, 0, 0, 0, 1820, 1335, 1336, 1337,
	1338, 1339, 0, 0, 0, 1476, 0, 57, 58, 1229,
	1230, 54, 62, 63, 55, 1226, 1227, 1232, 1233, 56,
	73, 0, 0, 1732, 1735, 1736, 1737, 1724, 1725, 1728,
	0, 0, 73, 1235, 1236, 1237, 1238, 1239, 1240, 0,
	1224, 0, 1251, 0, 0, 0, 0, 1306, 0, 1309,
	1310, 1311, 0, 1437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1440, 0, 1454, 0, 0, 0, 0, 0, 0, 0,
	1505, 1506, 1507, 1508, 1509, 1510, 0, 1702, 1703, 1704,
	1241, 0, 0, 0, 1241, 1241, 1241, 1241, 1241, 0,
	1480, 2418, 0, 2383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	1676, 0, 0, 1577, 0, 1578, 1579, 1581, 1595, 0,
	1582, 1583, 0, 0, 0, 0, 0, 1476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 0, 100, 102, 1418, 0, 107, 109, 0, 0,
	2693, 1783, 1784, 674, 1798, 1799, 1800, 1801, 0, 769,
	770, 1796, 0, 1731, 823, 0, 556, 653, 574, 575,
	576, 643, 578, 645, 0, 645, 645, 1673, 1674, 645,
	645, 645, 620, 621, 622, 623, 624, 626, 627, 628,
	629, 630, 0, 0, 602, 643, 643, 643, 606, 633,
	634, 635, 636, 637, 638, 639, 640, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 648, 648, 650, 650, 650, 650, 650, 556,
	556, 556, 556, 556, 0, 805, 1032, 1033, 0, 1738,
	119, 1827, 1755, 0, 0, 335, -2, 0, -2, 0,
	1413, 0, 0, 0, 0, 148, 369, 351, 133, 0,
	0, 329, 334, 330, 331, 332, 0, 0, 0, 0,
	342, 0, 0, 1085, 96, 1807, 1086, 1087, 1088, 1089,
	1090, 344, 1091, 1092, 371, 0, 1419, 1837, 1838, 1839,
	1840, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 0,
	0, 0, 1107, 1109, 1113, 1114, 1108, 1110, 1117, 1111,
	1118, 1163, 1124, 1175, 0, 1177, 0, 0, 1355, 1129,
	1130, 1131, 1132, 810, 1138, 1141, 1142, 1148, 1174, 0,
	1355, 1147, 1172, 1173, 1150, 1468, 1153, 1593, 0, 1161,
	1182, 1198, 0, 1193, 0, 1199, 1203, 1202, 0, 1206,
	1209, 1210, 1211, 1212, 79, 1208, 0, 0, 0, 1214,
	460, 462, 464, 483, 0, 0, 486, 487, 489, 0,
	1425, 1843, 0, 0, 1866, 0, 1868, 1870, 0, 0,
	279, 280, 281, 278, 0, 234, 0, 296, 350, 0,
	201, 0, 276, 203, 204, 205, 274, 207, 208, 211,
	215, 218, 222, 223, 225, 226, 346, 0, 0, 0,
	0, 198, 0, 0, 731, 750, 0, 0, 1189, 1190,
	0, 708, 709, 710, 711, 724, 717, 722, 99, 722,
	0, 0, 82, 0, 0, 1757, 1760, 1761, 1762, 1763,
	1764, 1765, 1833, 1834, 0, 930, 686, 687, 688, 0,
	767, 767, 767, 679, 0, 381, 1373, 1375, 0, 1370,
	1381, 1382, 1384, 0, 1386, 0, 0, 1389, 1390, 1391,
	1359, 0, 0, 1321, 1473, 1475, 0, 0, 1427, 1333,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	0, 1350, 0, 0, 0, 1351, 0, 1477, 1478, 1246,
	1247, 0, 0, 45, 0, 1739, 0, 0, 0, 0,
	1727, 1729, 1730, 0, 0, 1712, 0, 0, 70, 119,
	119, 50, 1434, 1435, 1436, 1438, 1455, 0, 1457, 1459,
	1307, 1308, 1252, 0, 1686, -2, 1688, 1689, -2, -2,
	-2, 1445, 1446, 1470, 1471, 1472, 0, 0, 0, 0,
	1468, 1450, 0, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1504, 1608, 1609, 1610, 0,
	1697, 0, 1698, 1502, 0, 0, 0, 1711, 1503, 1692,
	1511, 1476, 1242, 1243, 1695, 1696, 1693, 1694, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 1552, 0,
	0, 0, 0, 0, 1486, 1701, 0, 1486, 1701, 0,
	0, 2278, 2390, 2170, 0, 0, 0, 1682, 1679, 0,
	0, 0, 0, 2737, 2738, 0, 1594, 0, 0, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	0, 0, 0, 1278, 1279, 1280, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1588, 0, 104, 0, 1417, 0,
	-2, 0, 0, 94, 95, 0, 0, 0, 1781, 0,
	0, 0, 112, 113, 108, 1785, 675, 0, -2, 1792,
	1701, 1794, 1686, 0, 1738, -2, 541, 542, 543, 544,
	0, 787, 796, 0, 0, 785, 0, 787, 787, 0,
	783, 784, 547, 656, 654, 655, 577, 0, 607, 0,
	645, 645, 1673, 1674, 609, 645, 645, 612, 645, 645,
	615, 618, 619, 625, 0, 0, 603, 604, 605, 594,
	0, 595, 648, 597, 0, 598, 599, 600, 601, 548,
	549, 550, 551, 552, 804, 0, 298, 0, 0, 0,
	0, 0, 128, 1809, 129, 0, 392, 393, 0, 300,
	0, 336, 337, 150, 0, 0, 352, 0, 139, 0,
	536, 537, 0, 1079, 0, 1081, 341, 1093, 1084, 0,
	0, 0, 0, 0, 101, 0, 1176, 1126, 1127, 1128,
	1431, 0, 0, 1143, 1171, 1174, 1166, 0, 0, 1154,
	0, 1197, 1195, 1204, 1207, 1352, 0, 0, 466, 467,
	468, 490, 0, 1844, 1845, 1842, 1865, 0, 1869, 1871,
	0, 282, 284, 0, 0, 192, 0, 0, 275, 0,
	206, 0, 0, 0, 0, 0, 730, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1191,
	716, 0, 720, 0, 721, 705, 706, 83, 1756, 0,
	0, 1326, 767, 0, 768, 0, 0, 1040, 933, 934,
	935, 1042, 0, -2, 1038, 1038, 767, 1038, 0, 0,
	0, 0, 0, 0, 972, 767, 1038, 1815, 0, 985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1030,
	1031, 767, 767, 767, 767, 767, 767, 767, 767, 0,
	0, 767, 767, 767, 767, 767, 767, 767, 767, 767,
	767, 767, 767, 767, 767, 767, 767, 767, 767, 767,
	767, 767, 767, 767, 0, 767, 767, 1034, 1075, 0,
	1367, 1374, 0, 0, 1368, 0, 1369, 1385, 1387, 1388,
	1317, 0, 1359, 1313, -2, 0, 1363, 1332, 1427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 0, 74, 2486, 0, 77, 0,
	0, 1733, 1734, 1726, 0, 1802, 1803, 1713, 1714, 1431,
	0, 0, 1244, 1456, 1458, 1460, 0, 1476, 1447, 1468,
	1451, 0, 1448, 0, 1442, 1550, 0, 0, 0, 0,
	0, 0, 1481, 1548, 1549, 1551, 0, 0, 0, 1555,
	0, 0, 1559, 0, 0, 1601, 0, 0, 1602, 1564,
	0, 0, 0, 0, 0, 1570, 1723, 0, 1680, 0,
	0, 1573, 1574, 1575, 1576, 1596, 0, 0, 0, 0,
	1597, 1598, 1599, 1600, 1537, 0, 1538, 0, 0, 0,
	0, 0, 0, 1545, 1546, 1547, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1589, 0,
	0, 1416, 0, 1431, 0, 1431, 1431, 103, 0, 1426,
	110, 111, 0, 0, 117, 676, 677, 678, 1793, 0,
	299, 538, 824, 679, 901, 767, 767, 767, 0, 767,
	767, 767, 767, 767, 0, 0, 767, 767, 767, 767,
	767, 767, 767, 767, 767, 767, 767, 767, 767, 767,
	767, 767, 767, 0, 767, 767, 767, 767, 767, 767,
	0, 767, 767, 0, 0, 0, 0, 795, -2, -2,
	787, 787, 787, 786, 787, 787, 778, 788, 789, 779,
	802, 557, 558, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 665, 0, 700, 702, 0, 0, 573, 657, 0,
	0, 0, 608, 645, 616, 610, 611, 613, 614, 0,
	641, 0, 0, 596, 0, 820, 0, 1828, 118, 1755,
	0, 0, 394, 395, 396, 1414, 0, 301, 302, 0,
	0, 0, 0, 0, 160, 0, 370, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 1083, 1094, 1095, 97,
	345, 372, 0, 0, 1112, 1136, 0, 811, 812, 1355,
	1145, 1469, 1155, 1157, 1158, 1353, 1354, 104, 0, 1867,
	0, 0, 0, 0, 0, 0, 294, 277, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 751, 0, 0, 0, 0, 1758, 1759, 0,
	692, 693, 694, 695, 696, 697, 698, 900, 679, 1041,
	0, 0, 0, 0, 1043, 908, 0, 787, 0, 0,
	942, 943, 0, 1039, 922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 964, 965, 966, 0, 967, 0, 0, 0, 0,
	0, 0, 0, 1816, 1817, 1818, 984, 0, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1023, 1024, 881, 882, 883, 884, 885, 897, 898, 899,
	886, 887, 888, 0, 0, 384, 0, 0, 0, 1371,
	0, 1376, 0, 1361, 1318, -2, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 1248, 0, 0, 0, 75, 666, 1740, 1741,
	46, 1715, 71, 72, 119, 1253, 1700, 0, 1449, 0,
	1452, 1518, 1261, 1261, 1261, 1261, 1261, 0, 643, 643,
	643, 1658, 643, 650, 1661, 1663, 1664, 1665, 643, 1667,
	643, 1670, 1672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 1572, 1683, 0,
	0, 0, 0, 0, 1254, 1255, 1257, 1539, 1540, 1541,
	1542, 1543, 1544, 1522, 1262, 1523, 1524, 1526, 1527, 1529,
	1530, 1531, 1532, 1534, 1535, 1536, 1766, 1766, 0, -2,
	1747, 0, 1744, 1327, 1753, 1754, 0, 1431, 1774, 0,
	0, 0, 0, 1723, 1431, 92, 93, 0, 114, 115,
	116, 825, 0, 0, 0, 767, 0, 767, 0, 0,
	0, 0, 0, 767, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 856, 0, 0, 0, 0, 0, 0, 867,
	868, 0, 0, 0, 0, 790, 643, 643, 0, 785,
	794, 771, 773, 774, 775, 777, 0, 803, 559, 0,
	0, 570, 0, 0, 671, 672, 673, 658, 0, 0,
	661, 662, 0, 1443, 1444, 1593, 1593, 1593, 1593, 1593,
	1593, 0, 0, 0, 0, 1593, 1593, 1593, 0, 699,
	701, 703, 704, 644, 646, 647, 617, 631, 0, 632,
	0, 651, 0, 807, 821, 822, 0, 120, 0, 139,
	0, 308, 0, 304, 0, 0, 0, 0, 168, 0,
	151, 152, 153, 155, 156, 0, 0, 0, 149, 0,
	354, 0, 357, 358, 359, 0, 0, 0, 0, 0,
	1080, 1082, 0, 0, 1358, 1100, 1432, 1174, 666, 0,
	294, 283, 285, 286, 0, 294, 297, 193, 0, 194,
	196, 0, 195, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 0, 0, 725, 723, 689, 690, 691, 932,
	936, -2, 1038, 0, 0, 914, 903, 0, 0, 912,
	913, 909, 0, 1035, 0, 0, 1827, 785, 1823, 0,
	0, -2, 944, 945, 968, 969, 970, 0, 1045, 0,
	0, 0, 0, 950, 951, 952, 953, 0, 767, 0,
	0, 0, 0, 0, 0, 973, 974, 975, 976, 1035,
	0, 0, 980, 0, 0, 0, 0, 0, 1052, 0,
	0, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1029,
	986, 987, 988, 989, 990, 991, 992, 993, 0, 0,
	996, 877, 878, 997, 998, 999, 1000, 1001, 1002, 1003,
	874, 875, 876, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 889, 890, 891, 892, 893, 894, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 0, 1027,
	0, 388, 385, 386, 0, 382, 0, 381, 0, 0,
	0, 1360, 0, 1330, 1364, 1428, 1429, 1430, 1340, 1341,
	0, 1343, 1344, 0, 1346, 1347, 0, 1366, 0, 0,
	78, 1856, 667, 1720, 0, 1245, 1519, 1453, 1521, 1525,
	1520, 1528, 1533, 1553, 1653, 666, 666, 1659, 1660, 1662,
	1666, 1668, 1669, 1671, 1557, 1554, 1556, 1558, 0, 0,
	0, 0, 1565, 0, 0, 0, 0, 0, 0, 1681,
	0, 0, 1586, 1587, 1259, 1258, 84, 0, 85, 1766,
	0, 0, 0, 0, 0, 0, -2, -2, -2, 2149,
	2113, 1751, 1768, 0, 0, 1723, 0, 0, 0, 0,
	0, 1731, 91, 826, 827, 828, 0, 767, 0, 831,
	832, 834, 835, 836, 0, 0, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 0, 871, 0, 873, 755, 0, 1728,
	1728, 787, 787, 0, 0, 0, 0, 668, 669, 670,
	659, 660, 0, 664, 642, 0, 0, 0, 0, 118,
	138, 0, 119, 309, 310, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 303, 305, 306, 307, 381, 186,
	169, 170, 0, 0, 0, 0, 161, 162, 0, 0,
	0, 0, 0, 157, 158, 159, 353, 0, 0, 356,
	0, 0, 0, 0, 140, 141, 0, 143, 139, 0,
	0, 1144, 1856, 1415, 287, 294, 287, 0, 197, 752,
	753, 916, 0, 0, 0, 0, 910, 0, 938, 1036,
	0, 556, 556, 0, 787, 787, 0, 1067, 0, 971,
	946, 948, 947, 949, 0, 0, 956, 957, 1035, 0,
	961, 0, 1046, 1047, 1048, 1049, 977, 0, 0, 0,
	0, 0, 1050, 1051, 0, 0, 994, 995, 1025, 1026,
	0, 895, 1071, 0, 0, 1076, 383, 1075, 0, 375,
	390, 391, 0, 1372, 1362, 0, 0, 0, 1249, 0,
	1858, 1852, 1273, 0, 0, 1654, 1655, 1656, 1657, 0,
	0, 0, 0, 1566, 1567, 1568, 1603, 1571, 1678, 0,
	0, 1723, 0, 0, 86, 1359, -2, 1745, 0, 0,
	1752, 1327, 1770, 0, 105, 1731, 1775, 1776, 1777, 1778,
	1779, 90, 829, 0, 833, 879, 880, 837, 838, 869,
	870, 0, 754, 758, 0, 767, 0, 767, 767, 765,
	766, 791, 792, 793, 772, 776, 0, 553, 0, 0,
	663, 649, 652, 0, 118, 120, 0, 120, 311, 312,
	313, 314, 316, 317, 0, 0, 0, 384, 132, 0,
	0, 171, 0, 0, 0, 0, 181, 182, 183, 184,
	185, 163, 164, 165, 166, 167, 154, 0, 0, 355,
	0, 362, 364, 0, 363, 365, 0, 137, 0, 1357,
	1858, 189, 0, 287, 191, 295, 1065, 0, 915, 0,
	0, 0, 0, 0, 937, 1037, 545, 546, 0, 1827,
	0, 1044, 0, 0, 0, 955, 958, 959, 962, 978,
	979, 0, 0, 983, 0, 0, 0, 1028, 118, 389,
	387, 384, 373, 377, 0, 0, 0, 0, 1393, 0,
	2578, 76, 1860, -2, 0, 68, 0, 1721, 1722, 1716,
	1717, 1719, 1560, 1562, 1561, 1563, 0, 0, 0, 1584,
	1585, 1263, 0, 0, 1743, 1746, 1748, 0, 1769, 1771,
	89, 830, 872, 759, 760, 0, 762, 0, 0, 0,
	568, 554, 555, 0, 571, 756, 144, 0, 0, 79,
	318, 319, 320, 321, 388, 187, 188, 172, 173, 0,
	175, 176, 0, 0, 0, 367, 0, 360, 361, 0,
	1099, 1812, 288, 190, 902, 0, 908, 904, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 954, 767, 0,
	0, 982, 0, 1054, 896, 79, 388, 0, 379, 0,
	1342, 1345, 1348, 0, 0, 0, 0, 0, 0, 1859,
	1854, 0, 1851, 0, 1274, 1275, 0, 0, 1569, 0,
	0, 0, 0, 0, 0, 1260, 0, 0, 761, 763,
	764, 0, 553, 125, 757, 126, 0, 118, 397, 118,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 79,
	0, 79, 0, 0, 0, 442, 0, 79, 0, 0,
	177, 0, 179, 180, 366, 0, 142, 1359, 0, 0,
	0, 0, 905, 906, 0, 911, 756, 0, 0, 0,
	0, 963, 981, 1053, 0, 1030, 118, 1072, 0, 374,
	0, 375, 1819, 1394, 1395, 0, 0, 1396, 0, 0,
	0, 0, 1857, 0, 0, 1853, 0, 0, 1718, 1604,
	0, 1607, 1256, 1264, 0, 1267, 0, 0, 0, 1303,
	0, 1265, 1767, -2, 0, 569, 0, 0, 0, 144,
	118, 0, 0, 131, 0, 0, 412, 0, 0, 1829,
	0, 0, -2, -2, -2, 1831, 439, 440, 0, 491,
	0, 0, 0, 456, 457, 0, 443, 0, 458, 322,
	0, 118, 174, 178, 368, 42, 0, 0, 1066, 0,
	910, 907, 939, 0, 756, 0, 960, 1055, 1073, 118,
	0, 375, 378, 0, 1399, 0, 0, 0, 0, 0,
	0, 0, 1276, 1277, 1605, 0, 1268, 1269, 1270, 1271,
	1272, 0, 0, 145, 0, 0, 127, 120, 398, 399,
	0, 0, 79, 413, 0, 79, 0, 0, 0, 666,
	0, 79, 79, 79, 79, 0, 79, 79, 0, 444,
	79, 79, 44, 0, 1813, 1814, 289, 290, 291, 293,
	0, 0, 756, 941, 0, 79, 376, 380, 1392, 1400,
	1401, 0, 0, 0, 1408, 0, 0, 1861, 1862, 1855,
	1849, 0, 0, 1304, 0, 146, 147, 79, 0, 79,
	410, 0, 79, 0, 0, 0, 0, 674, 1832, 0,
	492, 323, 0, 0, 0, 0, 0, 0, 0, 325,
	118, 43, 0, 0, 0, 940, 0, 2297, 118, 1402,
	0, 0, 1403, 0, 0, 0, 0, 0, 1397, 0,
	0, 1266, 797, 118, 400, 401, 402, 403, 404, 405,
	79, 0, 408, 0, 79, 0, 79, 422, 423, 424,
	79, 431, 433, 434, 435, 0, 437, 438, 426, 447,
	324, 79, 79, 79, 79, 0, 79, 441, 445, 134,
	292, 919, 0, 1069, 1070, 1074, 0, 0, 0, 0,
	1404, 1405, 1409, 1411, 0, 1398, 1606, 798, 799, 0,
	130, 0, 407, 80, 79, 0, -2, 0, 79, 0,
	419, 0, 425, 0, 436, 0, 326, 0, 0, 0,
	0, 0, 0, 917, 0, 919, 0, 0, 0, 0,
	1410, 1412, 800, 0, 801, 0, 0, 0, 79, 0,
	411, 415, 0, 0, 79, 420, 0, 432, 427, 327,
	448, 0, 79, 450, 453, 446, 920, 918, 0, 0,
	813, 815, 816, 0, 0, 814, 406, 409, 79, 417,
	0, 79, 449, 0, 0, 1406, 1407, 817, 818, 819,
	0, 79, 0, 451, 454, 416, 0, -2, 452, 455,
	418,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 762,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:556
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:607
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:616
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:622
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:644
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:656
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:687
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:703
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:750
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:758
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:802
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:811
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:833
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:841
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:854
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:862
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:881
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:909
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:934
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:959
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1004
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1022
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1045
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1058
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1071
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1105
		{
			yyVAL.val = TableNames{}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.val = yyDollar[1].val
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1119
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1129
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1134
		{
			yyVAL.val = Partitions(nil)
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1138
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1148
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1155
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1200
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1210
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1215
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1221
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 125:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1249
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 126:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1276
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1296
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1317
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1335
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1353
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1377
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1399
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1431
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1446
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1480
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1492
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1505
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1519
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1541
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1551
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1562
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1566
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1570
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1574
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.val = []AccountName(nil)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1588
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1620
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1624
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1633
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1637
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1653
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1657
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1670
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1698
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1702
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1706
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1710
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1714
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1718
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1722
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1726
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1738
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1747
		{
			yyVAL.val = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1756
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1762
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1778
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1794
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1809
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1821
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1835
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				Privileges:     allPriv,
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1849
		{
			yyVAL.val = &RevokePrivilege{
				Privileges:     yyDollar[2].val.([]Privilege),
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1862
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1872
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1882
		{
			yyVAL.val = &RevokeRole{
				Roles: yyDollar[2].val.([]AccountName),
				From:  yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 199:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1893
		{
			yyVAL.val = &RevokeProxy{
				On:   yyDollar[4].val.(AccountName),
				From: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1910
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1914
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1918
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1926
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1930
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1938
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1954
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1974
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1978
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2010
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2090
		{
			yyVAL.val = []string(nil)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2094
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2104
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2148
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2156
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2160
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2164
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 292:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2168
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2172
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2177
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2186
		{
			yyVAL.val = false
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2190
		{
			yyVAL.val = true
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2197
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2210
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2222
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2236
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2242
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2250
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2259
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2269
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2273
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2283
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2287
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2295
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2299
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2325
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2329
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2338
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2342
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 327:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2346
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2357
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2361
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2389
		{
			yyVAL.val = ""
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2393
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2397
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2425
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2439
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2445
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2453
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2475
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2485
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2489
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2493
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2497
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2503
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2507
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2515
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 360:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2519
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 361:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2523
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2527
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2531
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2535
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2539
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2545
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2549
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2553
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2563
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2583
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2588
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2592
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2606
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2615
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2623
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2628
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2632
		{
			yyVAL.val = EventStatus_Enable
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.val = EventStatus_Disable
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2645
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.val = BeforeStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.val = AfterStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.val = InsertStr
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.val = UpdateStr
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.val = DeleteStr
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2688
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2692
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2713
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2717
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2723
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2727
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2731
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2735
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2745
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2751
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2757
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2762
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2767
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 418:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2773
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2785
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2791
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2797
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2801
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2805
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2809
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2813
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2820
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2854
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2866
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2880
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2886
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2892
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2897
		{
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2914
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2918
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2922
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2933
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 451:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2937
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 452:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2941
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 453:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2952
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2956
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 455:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2960
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2971
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2977
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2983
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2993
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3001
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3007
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3011
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3017
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3021
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3031
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3041
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3087
		{
			yyVAL.val = &Resignal{}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3095
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3103
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3107
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3113
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3129
		{
			yyVAL.val = Exprs(nil)
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			yyVAL.val = Exprs(nil)
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3137
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3147
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3153
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3201
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3228
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3258
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3268
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3307
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3387
		{
			yyVAL.val = BoolVal(false)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.val = BoolVal(false)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.val = BoolVal(true)
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3400
		{
			yyVAL.val = ColumnType{}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3404
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3430
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3462
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3506
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3517
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3528
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3551
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3562
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3575
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3587
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3599
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3603
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3607
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3611
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3623
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3668
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3689
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3710
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3723
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3727
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3735
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3741
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3753
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3757
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3765
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3769
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3781
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3801
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3837
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3842
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3882
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3892
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3909
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3914
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3918
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3926
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3930
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3936
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3944
		{
			yyVAL.val = BoolVal(false)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3948
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3957
		{
			yyVAL.val = BoolVal(false)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3961
		{
			yyVAL.val = BoolVal(true)
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3967
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3971
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3985
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3989
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3993
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3997
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.val = BoolVal(true)
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4014
		{
			yyVAL.val = ""
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4024
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4050
		{
			yyVAL.val = ""
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4054
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4064
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4068
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.val = false
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.val = true
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4108
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4118
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4122
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4126
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4130
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4134
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4138
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4144
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4148
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4152
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4158
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4164
		{
			yyVAL.val = colKeyPrimary
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.val = colKey
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4172
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.val = colKeyUnique
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4186
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4192
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4196
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4202
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4216
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4220
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4228
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4248
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4268
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4273
		{
			yyVAL.val = false
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4275
		{
			yyVAL.val = true
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.val = ""
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4289
		{
			yyVAL.val = ""
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4295
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4305
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4315
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4324
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4344
		{
			yyVAL.val = false
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.val = true
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4349
		{
			yyVAL.bytes = nil
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4377
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4385
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4389
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4417
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4421
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4427
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4431
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4436
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4450
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4456
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4465
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4469
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4473
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4487
		{
			yyVAL.val = ""
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.val = ":="
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4513
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4517
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4529
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4542
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4546
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4575
		{
			yyVAL.val = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4584
		{
			yyVAL.val = ""
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4592
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4602
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4608
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4612
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4618
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4622
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 797:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4632
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4636
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4640
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4644
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4648
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4653
		{
			yyVAL.bytes = []byte(nil)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4663
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4667
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4677
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4692
		{
			yyVAL.val = ""
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4696
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4700
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4706
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4712
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4718
		{
			yyVAL.val = Restrict
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4722
		{
			yyVAL.val = Cascade
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4726
		{
			yyVAL.val = NoAction
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4730
		{
			yyVAL.val = SetDefault
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4734
		{
			yyVAL.val = SetNull
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4739
		{
			yyVAL.val = true
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4743
		{
			yyVAL.val = true
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4747
		{
			yyVAL.val = false
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4752
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4756
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4760
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4766
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4770
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4774
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4778
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4782
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4786
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4790
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4794
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4798
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4802
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4806
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4810
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4814
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4818
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4822
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4834
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4850
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4854
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4886
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4910
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4926
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4930
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4934
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4938
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4942
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4946
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4950
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4960
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4964
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4968
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4974
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4978
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4988
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4994
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5003
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5011
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5017
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5021
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5057
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5061
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5072
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5082
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5091
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5095
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5102
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5111
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5119
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5129
		{
			yyVAL.val = false
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5133
		{
			yyVAL.val = true
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5138
		{
			yyVAL.val = ""
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5142
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5148
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5152
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5157
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5161
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5166
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 917:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5170
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 918:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5179
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5190
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5194
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5199
		{
			yyVAL.val = ""
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.val = ""
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5207
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5212
		{
			yyVAL.val = string("")
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5216
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5228
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5242
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 932:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5257
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5277
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5290
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5304
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5308
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5314
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5332
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 939:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5351
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5368
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5392
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5414
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5428
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5442
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5460
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5479
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5489
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5499
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5509
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5529
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5539
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5549
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5559
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5574
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5590
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5600
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5610
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5626
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5640
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5654
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5668
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5682
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5696
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5709
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5722
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5732
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5742
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5754
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5768
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5782
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5799
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5809
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5819
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5829
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5839
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5849
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5866
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5879
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5894
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5908
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5929
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5950
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5969
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5979
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5991
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5995
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5999
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6003
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6007
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6011
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6019
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6023
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6027
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6031
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6035
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6039
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6043
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6047
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6051
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6055
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6059
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6083
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6095
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6103
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6115
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6123
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6139
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6143
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6147
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6151
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6169
		{
			yyVAL.val = true
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6173
		{
			yyVAL.val = false
		}
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6183
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
			}
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6203
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6211
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6216
		{
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6221
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6225
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6231
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6235
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6241
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6245
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6249
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6253
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6257
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6261
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6265
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6269
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6273
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1053:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6277
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6281
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1055:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6285
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6289
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6293
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6306
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6310
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6314
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6318
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6322
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6326
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6330
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6335
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6339
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6345
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6349
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1069:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6355
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1070:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6359
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1071:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6365
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1072:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6395
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1073:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6421
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1074:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6449
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6479
		{
			yyVAL.val = EventName{}
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6483
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6489
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6493
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6505
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6529
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6545
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6549
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6555
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6580
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6600
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6618
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6635
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6652
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6672
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6692
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6707
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6722
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6741
		{

		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6745
		{
			yyVAL.val = Restrict
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6749
		{
			yyVAL.val = Cascade
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6755
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6768
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6783
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1099:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6789
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6793
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6797
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6810
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6814
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6818
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6822
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6828
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6832
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6839
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6843
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6849
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6853
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6857
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6861
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6867
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6871
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6875
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6879
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6885
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6896
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6907
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6918
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6930
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6942
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6955
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6968
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6979
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6990
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7001
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7012
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7022
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7032
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7045
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7055
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7066
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7076
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7086
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7097
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7109
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7121
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7135
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7148
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7159
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7173
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7185
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7195
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7206
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7219
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7229
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7241
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7252
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7265
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7274
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7285
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7296
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7307
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7318
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7332
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7342
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7352
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7362
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7374
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7380
		{
			yyVAL.val = false
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7384
		{
			yyVAL.val = true
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7390
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7394
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7400
		{
			yyVAL.val = ""
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7404
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7408
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7414
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7418
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7422
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7426
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7432
		{
			yyVAL.val = ""
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7436
		{
			yyVAL.val = SessionStr
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7440
		{
			yyVAL.val = GlobalStr
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7446
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7458
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7471
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7483
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7487
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7493
		{
			yyVAL.val = &Begin{}
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7497
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7503
		{
			yyVAL.val = &Begin{}
		}
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7507
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7511
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7515
		{
			yyVAL.val = &Begin{}
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7520
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7524
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7529
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7533
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7538
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7542
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7548
		{
			yyVAL.val = &Commit{}
		}
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7554
		{
			yyVAL.val = &Rollback{}
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7560
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7566
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7570
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7574
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7578
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7584
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7590
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7594
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7598
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7604
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7612
		{
			yyVAL.val = ""
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7616
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7621
		{
			yyVAL.val = false
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7625
		{
			yyVAL.val = true
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7637
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7657
		{
			setAllowComments(yylex, true)
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7661
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7669
		{
			yyVAL.val = Comments(nil)
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7673
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7679
		{
			yyVAL.val = UnionStr
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7683
		{
			yyVAL.val = UnionAllStr
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7687
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7693
		{
			yyVAL.val = IntersectStr
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7697
		{
			yyVAL.val = IntersectAllStr
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7701
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7707
		{
			yyVAL.val = ExceptStr
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7711
		{
			yyVAL.val = ExceptAllStr
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7715
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7720
		{
			yyVAL.val = QueryOpts{}
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7724
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7735
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7746
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7757
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7768
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7779
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7791
		{
			yyVAL.val = ""
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7795
		{
			yyVAL.val = AllStr
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7799
		{
			yyVAL.val = DistinctStr
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7805
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7813
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7824
		{
			yyVAL.val = &StarExpr{}
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7828
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7832
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7836
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7842
		{
			yyVAL.val = &StarExpr{}
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7846
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7850
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7854
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7860
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7864
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7870
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7875
		{
			yyVAL.val = ColIdent{}
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7878
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7883
		{
			yyVAL.val = Exprs(nil)
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7887
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7892
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7896
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7901
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7905
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7909
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7916
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7939
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7954
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7958
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7962
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7966
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7973
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7981
		{
			yyVAL.val = Window(nil)
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7984
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7990
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7993
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7999
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8039
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8043
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8048
		{
			yyVAL.val = ColIdent{}
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8052
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8056
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8060
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8066
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8070
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8074
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8080
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8084
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8094
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8098
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1318:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8113
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8128
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8134
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8140
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8148
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8154
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8158
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8163
		{
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8165
		{
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8169
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8179
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8194
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8198
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8202
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8206
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8212
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8216
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8220
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8224
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8228
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8234
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8238
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1342:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8242
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8248
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8252
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1345:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8256
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8260
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8264
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8268
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8274
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8280
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8284
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8290
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8294
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8298
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8303
		{
			yyVAL.val = Expr(nil)
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8307
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8313
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8317
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8322
		{
			yyVAL.val = Columns(nil)
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8326
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8332
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8336
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8342
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8346
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8352
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8356
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8370
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8374
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8378
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8382
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8388
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8390
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8394
		{
			yyVAL.val = JoinCondition{}
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8396
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8400
		{
			yyVAL.val = JoinCondition{}
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8402
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8407
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8411
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8417
		{
			yyVAL.val = JoinStr
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8421
		{
			yyVAL.val = JoinStr
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8425
		{
			yyVAL.val = JoinStr
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8431
		{
			yyVAL.val = StraightJoinStr
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8437
		{
			yyVAL.val = LeftJoinStr
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8441
		{
			yyVAL.val = LeftJoinStr
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8445
		{
			yyVAL.val = RightJoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8449
		{
			yyVAL.val = RightJoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8453
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8457
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8463
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8467
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1392:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8477
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8484
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8489
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8495
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8499
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8503
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1398:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8508
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8515
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8519
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8523
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1402:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8527
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8531
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1404:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8535
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1405:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8539
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1406:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8543
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8547
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8551
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8557
		{
			yyVAL.val = &NullVal{}
		}
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8561
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8567
		{
			yyVAL.val = &NullVal{}
		}
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8571
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8577
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8581
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8587
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8593
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8597
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8603
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8607
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8611
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8615
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8619
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8623
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8629
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8633
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8639
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8644
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8648
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8652
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8656
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8661
		{
			yyVAL.val = Expr(nil)
		}
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8665
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8671
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8675
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8679
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8683
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8687
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8691
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8695
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8699
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8705
		{
			yyVAL.val = ""
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8709
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8715
		{
			yyVAL.val = BoolVal(true)
		}
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8719
		{
			yyVAL.val = BoolVal(false)
		}
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8725
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8729
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8733
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8737
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8741
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8745
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8749
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8753
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1453:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8757
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8761
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8767
		{
			yyVAL.val = IsNullStr
		}
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8771
		{
			yyVAL.val = IsNotNullStr
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8775
		{
			yyVAL.val = IsTrueStr
		}
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8779
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8783
		{
			yyVAL.val = IsFalseStr
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8787
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8793
		{
			yyVAL.val = EqualStr
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8797
		{
			yyVAL.val = LessThanStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8801
		{
			yyVAL.val = GreaterThanStr
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8805
		{
			yyVAL.val = LessEqualStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8809
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8813
		{
			yyVAL.val = NotEqualStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8817
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8822
		{
			yyVAL.val = Expr(nil)
		}
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8826
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8832
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8836
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8840
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8846
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8852
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8856
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8861
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8868
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8872
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8878
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8882
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8888
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8892
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8896
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8900
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8904
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8908
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8912
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8916
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8920
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8924
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8928
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8932
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8936
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8940
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8944
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8948
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8952
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8956
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8960
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8964
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8968
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8972
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8976
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8980
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8984
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8988
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8996
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9010
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9014
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9018
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1518:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9038
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1519:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9042
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1520:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9052
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1521:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9056
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9060
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9064
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9068
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9072
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9076
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9080
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9084
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9088
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9092
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9096
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9100
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9104
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9108
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9112
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9116
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9125
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9129
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9133
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9137
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9141
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9145
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9149
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9153
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9157
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9161
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9165
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9176
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9180
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9184
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9188
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9192
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1553:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9196
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1554:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9200
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9204
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1556:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9208
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1557:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9212
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1558:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9216
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9220
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1560:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9224
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1561:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9228
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1562:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9232
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1563:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9236
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9240
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1565:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9244
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1566:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9248
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1567:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9252
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1568:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9256
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1569:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9260
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9264
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1571:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9268
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1572:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9272
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9276
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9280
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9285
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9289
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9300
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9304
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9308
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9313
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9317
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9321
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9325
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1584:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9329
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9333
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1586:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9337
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1587:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9341
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9349
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9353
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9357
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9361
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9365
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9378
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9382
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9392
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9396
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9400
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9404
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9408
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9412
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9418
		{
			yyVAL.val = ""
		}
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9422
		{
			yyVAL.val = BooleanModeStr
		}
	case 1605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9426
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1606:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9430
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9434
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9440
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9444
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9448
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9454
		{
			yyVAL.val = Armscii8Str
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9458
		{
			yyVAL.val = AsciiStr
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9462
		{
			yyVAL.val = Big5Str
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9466
		{
			yyVAL.val = UBinaryStr
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9470
		{
			yyVAL.val = Cp1250Str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9474
		{
			yyVAL.val = Cp1251Str
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9478
		{
			yyVAL.val = Cp1256Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9482
		{
			yyVAL.val = Cp1257Str
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9486
		{
			yyVAL.val = Cp850Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9490
		{
			yyVAL.val = Cp852Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9494
		{
			yyVAL.val = Cp866Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9498
		{
			yyVAL.val = Cp932Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9502
		{
			yyVAL.val = Dec8Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9506
		{
			yyVAL.val = EucjpmsStr
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9510
		{
			yyVAL.val = EuckrStr
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9514
		{
			yyVAL.val = Gb18030Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9518
		{
			yyVAL.val = Gb2312Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9522
		{
			yyVAL.val = GbkStr
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9526
		{
			yyVAL.val = Geostd8Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9530
		{
			yyVAL.val = GreekStr
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9534
		{
			yyVAL.val = HebrewStr
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9538
		{
			yyVAL.val = Hp8Str
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9542
		{
			yyVAL.val = Keybcs2Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9546
		{
			yyVAL.val = Koi8rStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9550
		{
			yyVAL.val = Koi8uStr
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9554
		{
			yyVAL.val = Latin1Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9558
		{
			yyVAL.val = Latin2Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9562
		{
			yyVAL.val = Latin5Str
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9566
		{
			yyVAL.val = Latin7Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9570
		{
			yyVAL.val = MacceStr
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9574
		{
			yyVAL.val = MacromanStr
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9578
		{
			yyVAL.val = SjisStr
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9582
		{
			yyVAL.val = Swe7Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9586
		{
			yyVAL.val = Tis620Str
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9590
		{
			yyVAL.val = Ucs2Str
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9594
		{
			yyVAL.val = UjisStr
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9598
		{
			yyVAL.val = Utf16Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9602
		{
			yyVAL.val = Utf16leStr
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9606
		{
			yyVAL.val = Utf32Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9610
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9614
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9618
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9624
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9628
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9632
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9636
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9640
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9644
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9648
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9652
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9659
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9663
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9667
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9671
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9675
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9679
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9683
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9687
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9691
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9695
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9699
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9703
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9709
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9713
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9718
		{
			yyVAL.val = Expr(nil)
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9722
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9727
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9731
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9737
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9741
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9747
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9752
		{
			yyVAL.val = Expr(nil)
		}
	case 1683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9756
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9762
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9766
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9770
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9774
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9778
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9782
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9786
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9790
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9794
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9798
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9802
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9806
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9810
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9814
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9818
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9822
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1700:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9826
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9832
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9836
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9840
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9844
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9848
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9852
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9856
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9860
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9864
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9868
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9872
		{
			yyVAL.val = &NullVal{}
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9878
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9882
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9886
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9891
		{
			yyVAL.val = Exprs(nil)
		}
	case 1716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9895
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9901
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9905
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9911
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9916
		{
			yyVAL.val = Expr(nil)
		}
	case 1721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9920
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9926
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9931
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9941
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9945
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9951
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9956
		{
			yyVAL.val = AscScr
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9960
		{
			yyVAL.val = AscScr
		}
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9964
		{
			yyVAL.val = DescScr
		}
	case 1731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9969
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9973
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9977
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9981
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9987
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9991
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9995
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10000
		{
			yyVAL.val = ""
		}
	case 1739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10004
		{
			yyVAL.val = ForUpdateStr
		}
	case 1740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10008
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10012
		{
			yyVAL.val = ShareModeStr
		}
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10018
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10022
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10042
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10046
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10051
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10058
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10062
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10066
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1750:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10071
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10078
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10082
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10091
		{
			yyVAL.val = Columns(nil)
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10095
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10101
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10105
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10111
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10115
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10119
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10123
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10127
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10131
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10135
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10140
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1767:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10144
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10150
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10154
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10160
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10164
		{
			yyVAL.val = ValTuple{}
		}
	case 1772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10170
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10176
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10186
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10190
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10196
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10199
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10203
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10207
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10213
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10217
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10223
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10234
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10247
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10260
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10266
		{
			yyVAL.val = SetScope_Global
		}
	case 1787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10270
		{
			yyVAL.val = SetScope_Session
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10276
		{
			yyVAL.val = SetScope_Session
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10280
		{
			yyVAL.val = SetScope_Persist
		}
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10284
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10290
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10294
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10298
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10308
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10315
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10322
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10326
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10330
		{
			yyVAL.val = &Default{}
		}
	case 1801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10334
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10343
		{
			yyVAL.val = 0
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10345
		{
			yyVAL.val = 1
		}
	case 1806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10348
		{
			yyVAL.val = 0
		}
	case 1807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10350
		{
			yyVAL.val = 1
		}
	case 1808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10353
		{
			yyVAL.val = 0
		}
	case 1809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10355
		{
			yyVAL.val = 1
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10358
		{
			yyVAL.val = ""
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10360
		{
			yyVAL.val = IgnoreStr
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10363
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10365
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10367
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10370
		{
			yyVAL.val = struct{}{}
		}
	case 1816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10372
		{
			yyVAL.val = struct{}{}
		}
	case 1817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10376
		{
			yyVAL.val = struct{}{}
		}
	case 1818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10378
		{
			yyVAL.val = struct{}{}
		}
	case 1819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10381
		{
			yyVAL.val = struct{}{}
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10383
		{
			yyVAL.val = struct{}{}
		}
	case 1821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10387
		{
			yyVAL.val = UniqueStr
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10389
		{
			yyVAL.val = FulltextStr
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10391
		{
			yyVAL.val = SpatialStr
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10393
		{
			yyVAL.val = VectorStr
		}
	case 1825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10396
		{
			yyVAL.val = ""
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10398
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10401
		{
			yyVAL.val = ColIdent{}
		}
	case 1828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10403
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10407
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10411
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10417
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10421
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10428
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10434
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10438
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10445
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10449
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10453
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10458
		{
			yyVAL.val = string("")
		}
	case 1842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10460
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10463
		{
			yyVAL.val = string("")
		}
	case 1844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10465
		{
			yyVAL.val = IgnoreStr
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10467
		{
			yyVAL.val = ReplaceStr
		}
	case 1846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10470
		{
			yyVAL.val = BoolVal(false)
		}
	case 1847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10472
		{
			yyVAL.val = BoolVal(true)
		}
	case 1848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10475
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10479
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10484
		{
			yyVAL.val = BoolVal(false)
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10488
		{
			yyVAL.val = BoolVal(true)
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10493
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10497
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10502
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10506
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10514
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10518
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10523
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10527
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10532
		{
			yyVAL.val = &Lines{}
		}
	case 1861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10536
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1862:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10545
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10556
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10562
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10566
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10572
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10587
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10605
		{
			yyVAL.val = LockRead
		}
	case 1869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10609
		{
			yyVAL.val = LockReadLocal
		}
	case 1870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10613
		{
			yyVAL.val = LockWrite
		}
	case 1871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10617
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10623
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10629
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10640
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10650
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11578
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11587
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
