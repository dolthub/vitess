// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_ARMSCII8 = 57457
const UNDERSCORE_ASCII = 57458
const UNDERSCORE_BIG5 = 57459
const UNDERSCORE_BINARY = 57460
const UNDERSCORE_CP1250 = 57461
const UNDERSCORE_CP1251 = 57462
const UNDERSCORE_CP1256 = 57463
const UNDERSCORE_CP1257 = 57464
const UNDERSCORE_CP850 = 57465
const UNDERSCORE_CP852 = 57466
const UNDERSCORE_CP866 = 57467
const UNDERSCORE_CP932 = 57468
const UNDERSCORE_DEC8 = 57469
const UNDERSCORE_EUCJPMS = 57470
const UNDERSCORE_EUCKR = 57471
const UNDERSCORE_GB18030 = 57472
const UNDERSCORE_GB2312 = 57473
const UNDERSCORE_GBK = 57474
const UNDERSCORE_GEOSTD8 = 57475
const UNDERSCORE_GREEK = 57476
const UNDERSCORE_HEBREW = 57477
const UNDERSCORE_HP8 = 57478
const UNDERSCORE_KEYBCS2 = 57479
const UNDERSCORE_KOI8R = 57480
const UNDERSCORE_KOI8U = 57481
const UNDERSCORE_LATIN1 = 57482
const UNDERSCORE_LATIN2 = 57483
const UNDERSCORE_LATIN5 = 57484
const UNDERSCORE_LATIN7 = 57485
const UNDERSCORE_MACCE = 57486
const UNDERSCORE_MACROMAN = 57487
const UNDERSCORE_SJIS = 57488
const UNDERSCORE_SWE7 = 57489
const UNDERSCORE_TIS620 = 57490
const UNDERSCORE_UCS2 = 57491
const UNDERSCORE_UJIS = 57492
const UNDERSCORE_UTF16 = 57493
const UNDERSCORE_UTF16LE = 57494
const UNDERSCORE_UTF32 = 57495
const UNDERSCORE_UTF8 = 57496
const UNDERSCORE_UTF8MB3 = 57497
const UNDERSCORE_UTF8MB4 = 57498
const INTERVAL = 57499
const JSON_EXTRACT_OP = 57500
const JSON_UNQUOTE_EXTRACT_OP = 57501
const CREATE = 57502
const ALTER = 57503
const DROP = 57504
const RENAME = 57505
const ANALYZE = 57506
const ADD = 57507
const MODIFY = 57508
const CHANGE = 57509
const SCHEMA = 57510
const TABLE = 57511
const INDEX = 57512
const INDEXES = 57513
const VIEW = 57514
const TO = 57515
const IGNORE = 57516
const IF = 57517
const PRIMARY = 57518
const COLUMN = 57519
const SPATIAL = 57520
const FULLTEXT = 57521
const KEY_BLOCK_SIZE = 57522
const CHECK = 57523
const ACTION = 57524
const CASCADE = 57525
const CONSTRAINT = 57526
const FOREIGN = 57527
const NO = 57528
const REFERENCES = 57529
const RESTRICT = 57530
const FIRST = 57531
const AFTER = 57532
const SHOW = 57533
const DESCRIBE = 57534
const EXPLAIN = 57535
const DATE = 57536
const ESCAPE = 57537
const REPAIR = 57538
const OPTIMIZE = 57539
const TRUNCATE = 57540
const FORMAT = 57541
const MAXVALUE = 57542
const REORGANIZE = 57543
const LESS = 57544
const THAN = 57545
const PROCEDURE = 57546
const TRIGGER = 57547
const TRIGGERS = 57548
const FUNCTION = 57549
const STATUS = 57550
const VARIABLES = 57551
const WARNINGS = 57552
const ERRORS = 57553
const KILL = 57554
const CONNECTION = 57555
const SEQUENCE = 57556
const ENABLE = 57557
const DISABLE = 57558
const EACH = 57559
const ROW = 57560
const BEFORE = 57561
const FOLLOWS = 57562
const PRECEDES = 57563
const DEFINER = 57564
const INVOKER = 57565
const INOUT = 57566
const OUT = 57567
const DETERMINISTIC = 57568
const CONTAINS = 57569
const READS = 57570
const MODIFIES = 57571
const SQL = 57572
const SECURITY = 57573
const TEMPORARY = 57574
const ALGORITHM = 57575
const MERGE = 57576
const TEMPTABLE = 57577
const UNDEFINED = 57578
const CLASS_ORIGIN = 57579
const SUBCLASS_ORIGIN = 57580
const MESSAGE_TEXT = 57581
const MYSQL_ERRNO = 57582
const CONSTRAINT_CATALOG = 57583
const CONSTRAINT_SCHEMA = 57584
const CONSTRAINT_NAME = 57585
const CATALOG_NAME = 57586
const SCHEMA_NAME = 57587
const TABLE_NAME = 57588
const COLUMN_NAME = 57589
const CURSOR_NAME = 57590
const SIGNAL = 57591
const RESIGNAL = 57592
const SQLSTATE = 57593
const DECLARE = 57594
const CONDITION = 57595
const CURSOR = 57596
const CONTINUE = 57597
const EXIT = 57598
const UNDO = 57599
const HANDLER = 57600
const FOUND = 57601
const SQLWARNING = 57602
const SQLEXCEPTION = 57603
const USER = 57604
const IDENTIFIED = 57605
const ROLE = 57606
const REUSE = 57607
const GRANT = 57608
const GRANTS = 57609
const REVOKE = 57610
const NONE = 57611
const ATTRIBUTE = 57612
const RANDOM = 57613
const PASSWORD = 57614
const INITIAL = 57615
const AUTHENTICATION = 57616
const SSL = 57617
const X509 = 57618
const CIPHER = 57619
const ISSUER = 57620
const SUBJECT = 57621
const ACCOUNT = 57622
const EXPIRE = 57623
const NEVER = 57624
const DAY = 57625
const OPTION = 57626
const OPTIONAL = 57627
const EXCEPT = 57628
const ADMIN = 57629
const PRIVILEGES = 57630
const MAX_QUERIES_PER_HOUR = 57631
const MAX_UPDATES_PER_HOUR = 57632
const MAX_CONNECTIONS_PER_HOUR = 57633
const MAX_USER_CONNECTIONS = 57634
const FLUSH = 57635
const FAILED_LOGIN_ATTEMPTS = 57636
const PASSWORD_LOCK_TIME = 57637
const REQUIRE = 57638
const PROXY = 57639
const ROUTINE = 57640
const TABLESPACE = 57641
const CLIENT = 57642
const SLAVE = 57643
const EVENT = 57644
const EXECUTE = 57645
const FILE = 57646
const RELOAD = 57647
const REPLICATION = 57648
const SHUTDOWN = 57649
const SUPER = 57650
const USAGE = 57651
const LOGS = 57652
const ENGINE = 57653
const ERROR = 57654
const GENERAL = 57655
const HOSTS = 57656
const OPTIMIZER_COSTS = 57657
const RELAY = 57658
const SLOW = 57659
const USER_RESOURCES = 57660
const NO_WRITE_TO_BINLOG = 57661
const CHANNEL = 57662
const BEGIN = 57663
const START = 57664
const TRANSACTION = 57665
const COMMIT = 57666
const ROLLBACK = 57667
const SAVEPOINT = 57668
const WORK = 57669
const RELEASE = 57670
const BIT = 57671
const TINYINT = 57672
const SMALLINT = 57673
const MEDIUMINT = 57674
const INT = 57675
const INTEGER = 57676
const BIGINT = 57677
const INTNUM = 57678
const SERIAL = 57679
const REAL = 57680
const DOUBLE = 57681
const FLOAT_TYPE = 57682
const DECIMAL = 57683
const NUMERIC = 57684
const DEC = 57685
const FIXED = 57686
const PRECISION = 57687
const TIME = 57688
const TIMESTAMP = 57689
const DATETIME = 57690
const YEAR = 57691
const CHAR = 57692
const VARCHAR = 57693
const BOOL = 57694
const CHARACTER = 57695
const VARBINARY = 57696
const NCHAR = 57697
const NVARCHAR = 57698
const NATIONAL = 57699
const VARYING = 57700
const TEXT = 57701
const TINYTEXT = 57702
const MEDIUMTEXT = 57703
const LONGTEXT = 57704
const LONG = 57705
const BLOB = 57706
const TINYBLOB = 57707
const MEDIUMBLOB = 57708
const LONGBLOB = 57709
const JSON = 57710
const ENUM = 57711
const GEOMETRY = 57712
const POINT = 57713
const LINESTRING = 57714
const POLYGON = 57715
const GEOMETRYCOLLECTION = 57716
const MULTIPOINT = 57717
const MULTILINESTRING = 57718
const MULTIPOLYGON = 57719
const LOCAL = 57720
const LOW_PRIORITY = 57721
const NULLX = 57722
const AUTO_INCREMENT = 57723
const APPROXNUM = 57724
const SIGNED = 57725
const UNSIGNED = 57726
const ZEROFILL = 57727
const COLLATION = 57728
const DATABASES = 57729
const SCHEMAS = 57730
const TABLES = 57731
const FULL = 57732
const PROCESSLIST = 57733
const COLUMNS = 57734
const FIELDS = 57735
const ENGINES = 57736
const PLUGINS = 57737
const NAMES = 57738
const CHARSET = 57739
const GLOBAL = 57740
const SESSION = 57741
const ISOLATION = 57742
const LEVEL = 57743
const READ = 57744
const WRITE = 57745
const ONLY = 57746
const REPEATABLE = 57747
const COMMITTED = 57748
const UNCOMMITTED = 57749
const SERIALIZABLE = 57750
const ENCRYPTION = 57751
const CURRENT_TIMESTAMP = 57752
const DATABASE = 57753
const CURRENT_DATE = 57754
const CURRENT_USER = 57755
const CURRENT_TIME = 57756
const LOCALTIME = 57757
const LOCALTIMESTAMP = 57758
const UTC_DATE = 57759
const UTC_TIME = 57760
const UTC_TIMESTAMP = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const TRIM = 57767
const LEADING = 57768
const TRAILING = 57769
const BOTH = 57770
const GROUP_CONCAT = 57771
const SEPARATOR = 57772
const TIMESTAMPADD = 57773
const TIMESTAMPDIFF = 57774
const OVER = 57775
const WINDOW = 57776
const GROUPING = 57777
const CURRENT = 57778
const AVG = 57779
const BIT_AND = 57780
const BIT_OR = 57781
const BIT_XOR = 57782
const COUNT = 57783
const JSON_ARRAYAGG = 57784
const JSON_OBJECTAGG = 57785
const MAX = 57786
const MIN = 57787
const STDDEV_POP = 57788
const STDDEV = 57789
const STD = 57790
const STDDEV_SAMP = 57791
const SUM = 57792
const VAR_POP = 57793
const VARIANCE = 57794
const VAR_SAMP = 57795
const CUME_DIST = 57796
const DENSE_RANK = 57797
const FIRST_VALUE = 57798
const LAG = 57799
const LAST_VALUE = 57800
const LEAD = 57801
const NTH_VALUE = 57802
const NTILE = 57803
const ROW_NUMBER = 57804
const PERCENT_RANK = 57805
const RANK = 57806
const MATCH = 57807
const AGAINST = 57808
const BOOLEAN = 57809
const LANGUAGE = 57810
const WITH = 57811
const QUERY = 57812
const EXPANSION = 57813
const UNUSED = 57814
const ARRAY = 57815
const DESCRIPTION = 57816
const EMPTY = 57817
const JSON_TABLE = 57818
const LATERAL = 57819
const MEMBER = 57820
const RECURSIVE = 57821
const ACTIVE = 57822
const BUCKETS = 57823
const CLONE = 57824
const COMPONENT = 57825
const DEFINITION = 57826
const ENFORCED = 57827
const EXCLUDE = 57828
const GEOMCOLLECTION = 57829
const GET_MASTER_PUBLIC_KEY = 57830
const HISTOGRAM = 57831
const HISTORY = 57832
const INACTIVE = 57833
const INVISIBLE = 57834
const LOCKED = 57835
const MASTER_COMPRESSION_ALGORITHMS = 57836
const MASTER_PUBLIC_KEY_PATH = 57837
const MASTER_TLS_CIPHERSUITES = 57838
const MASTER_ZSTD_COMPRESSION_LEVEL = 57839
const NESTED = 57840
const NETWORK_NAMESPACE = 57841
const NOWAIT = 57842
const NULLS = 57843
const OJ = 57844
const OLD = 57845
const ORDINALITY = 57846
const ORGANIZATION = 57847
const OTHERS = 57848
const PATH = 57849
const PERSIST = 57850
const PERSIST_ONLY = 57851
const PRIVILEGE_CHECKS_USER = 57852
const PROCESS = 57853
const REFERENCE = 57854
const REQUIRE_ROW_FORMAT = 57855
const RESOURCE = 57856
const RESPECT = 57857
const RESTART = 57858
const RETAIN = 57859
const SECONDARY = 57860
const SECONDARY_ENGINE = 57861
const SECONDARY_LOAD = 57862
const SECONDARY_UNLOAD = 57863
const SKIP = 57864
const SRID = 57865
const THREAD_PRIORITY = 57866
const TIES = 57867
const VCPU = 57868
const VISIBLE = 57869
const SYSTEM = 57870
const INFILE = 57871
const GENERATED = 57872
const ALWAYS = 57873
const STORED = 57874
const VIRTUAL = 57875
const NVAR = 57876
const PASSWORD_LOCK = 57877

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 54,
	-2, 1126,
	-1, 43,
	187, 1190,
	188, 1208,
	-2, 241,
	-1, 49,
	226, 714,
	227, 714,
	-2, 703,
	-1, 557,
	175, 1218,
	-2, 1212,
	-1, 558,
	175, 1219,
	-2, 1213,
	-1, 703,
	98, 1505,
	175, 1505,
	-2, 1174,
	-1, 704,
	98, 1624,
	175, 1624,
	-2, 1175,
	-1, 709,
	98, 1529,
	175, 1529,
	-2, 1176,
	-1, 710,
	98, 1577,
	175, 1577,
	-2, 1177,
	-1, 711,
	98, 1578,
	175, 1578,
	-2, 1178,
	-1, 712,
	98, 1451,
	175, 1451,
	-2, 1182,
	-1, 714,
	98, 1554,
	175, 1554,
	-2, 1184,
	-1, 1235,
	1, 811,
	5, 811,
	12, 811,
	13, 811,
	14, 811,
	15, 811,
	17, 811,
	19, 811,
	27, 811,
	30, 811,
	31, 811,
	56, 811,
	57, 811,
	58, 811,
	59, 811,
	60, 811,
	62, 811,
	63, 811,
	66, 811,
	67, 811,
	69, 811,
	70, 811,
	452, 811,
	554, 811,
	-2, 843,
	-1, 1241,
	67, 71,
	69, 71,
	-2, 75,
	-1, 1337,
	1, 493,
	554, 493,
	-2, 491,
	-1, 1339,
	1, 493,
	554, 493,
	-2, 491,
	-1, 1499,
	175, 1221,
	-2, 1217,
	-1, 1665,
	44, 559,
	-2, 1463,
	-1, 1669,
	68, 557,
	72, 557,
	-2, 1499,
	-1, 1670,
	68, 559,
	-2, 1409,
	-1, 1673,
	68, 555,
	72, 555,
	-2, 1326,
	-1, 1674,
	68, 556,
	72, 556,
	-2, 1336,
	-1, 1721,
	1, 494,
	554, 494,
	-2, 491,
	-1, 1805,
	44, 602,
	194, 604,
	196, 602,
	197, 602,
	-2, 639,
	-1, 1881,
	5, 55,
	-2, 913,
	-1, 2193,
	69, 1383,
	70, 1383,
	175, 1383,
	-2, 745,
	-1, 2216,
	1, 868,
	5, 868,
	12, 868,
	13, 868,
	14, 868,
	15, 868,
	17, 868,
	19, 868,
	27, 868,
	30, 868,
	31, 868,
	56, 868,
	57, 868,
	58, 868,
	59, 868,
	60, 868,
	62, 868,
	63, 868,
	66, 868,
	67, 868,
	69, 868,
	70, 868,
	452, 868,
	554, 868,
	-2, 843,
	-1, 2326,
	194, 605,
	-2, 603,
	-1, 2388,
	5, 55,
	-2, 1146,
	-1, 2605,
	41, 1228,
	-2, 1226,
	-1, 2716,
	5, 55,
	-2, 1149,
}

const yyPrivate = 57344

const yyLast = 38288

var yyAct = [...]int{
	623, 80, 2942, 2918, 2949, 2900, 429, 2818, 2901, 2920,
	2817, 928, 2792, 2696, 2400, 2720, 2725, 3, 2852, 2135,
	2728, 7, 2727, 6, 2783, 560, 2726, 5, 2729, 8,
	2270, 2694, 2506, 1272, 2625, 2547, 2701, 1946, 2790, 1716,
	2654, 2230, 2605, 2210, 2118, 1916, 2107, 1190, 728, 549,
	2487, 2024, 2186, 1675, 2607, 83, 1740, 1623, 2287, 2463,
	2457, 1617, 2187, 2117, 2231, 1621, 2310, 412, 415, 2441,
	1967, 558, 2183, 1691, 460, 1973, 2320, 1372, 454, 454,
	1477, 80, 1666, 563, 542, 961, 2721, 2040, 575, 1917,
	106, 93, 944, 1830, 1535, 1804, 1656, 541, 984, 2195,
	1655, 2202, 2157, 1470, 1524, 475, 1533, 1485, 1767, 622,
	1374, 723, 2085, 1596, 1662, 1392, 1420, 1600, 1348, 129,
	1724, 726, 129, 1723, 1722, 1089, 1974, 2015, 129, 1703,
	1707, 1232, 1252, 1501, 1590, 705, 1096, 1607, 457, 457,
	1235, 1013, 565, 1784, 1092, 992, 1206, 1720, 1251, 722,
	701, 129, 702, 545, 1109, 474, 697, 1231, 1425, 432,
	431, 991, 129, 911, 567, 1343, 129, 731, 1340, 1100,
	102, 694, 98, 1243, 916, 708, 85, 1207, 1987, 1657,
	2981, 2977, 551, 2972, 1989, 2957, 129, 457, 2955, 731,
	2937, 2913, 1645, 927, 2860, 82, 2244, 129, 2428, 1994,
	1993, 2656, 2655, 2128, 447, 1418, 441, 452, 435, 2928,
	2801, 2584, 2268, 2899, 87, 88, 89, 90, 91, 424,
	36, 1990, 2714, 36, 2442, 1371, 36, 2582, 36, 442,
	1753, 36, 2444, 72, 39, 40, 1996, 2597, 1980, 2052,
	1753, 2641, 2585, 2877, 1981, 2774, 2284, 1911, 2800, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 2532, 2178, 1135, 1912, 913, 472, 918, 919, 1619,
	2713, 69, 2796, 2674, 2697, 724, 1852, 2382, 921, 910,
	1783, 1955, 81, 2225, 1954, 81, 2796, 1956, 81, 1253,
	81, 1254, 678, 81, 684, 686, 685, 682, 683, 681,
	680, 679, 2791, 72, 39, 40, 2793, 1424, 120, 116,
	117, 1641, 118, 2420, 2421, 2226, 2227, 1082, 948, 949,
	2793, 964, 952, 1642, 1643, 41, 1421, 1466, 1467, 1049,
	1422, 1423, 965, 966, 1441, 1677, 110, 1041, 423, 422,
	2031, 1998, 464, 1782, 122, 121, 1010, 2447, 1679, 1992,
	1692, 1679, 1995, 2518, 950, 951, 2369, 406, 1812, 1806,
	1807, 2367, 1805, 1808, 1809, 718, 1683, 1685, 1697, 1684,
	1692, 2797, 1404, 974, 421, 426, 434, 433, 436, 99,
	471, 2082, 1704, 1462, 1461, 2797, 440, 2445, 2446, 2448,
	2449, 2450, 1460, 1459, 1458, 1457, 2047, 971, 1815, 1045,
	1046, 465, 123, 444, 124, 1025, 2074, 448, 2892, 80,
	80, 2458, 1814, 1813, 2464, 2465, 2466, 2467, 2610, 2461,
	2762, 451, 2309, 2294, 1056, 978, 982, 1057, 2668, 979,
	2079, 981, 2285, 2459, 2460, 980, 2583, 1795, 2288, 2289,
	2290, 2291, 2292, 2820, 2051, 2826, 2764, 2819, 1025, 2678,
	129, 2288, 2289, 2290, 2291, 2292, 2483, 2475, 1796, 2579,
	1452, 2946, 2049, 1741, 2473, 114, 2857, 2915, 1078, 108,
	2855, 2856, 2576, 108, 915, 914, 1086, 2577, 101, 1346,
	2676, 2660, 972, 973, 113, 2575, 416, 2574, 112, 111,
	2573, 2601, 2571, 917, 129, 2572, 2297, 2664, 2665, 1025,
	917, 413, 1735, 1736, 962, 2842, 963, 965, 966, 2805,
	2806, 407, 1355, 1356, 1354, 2723, 960, 1023, 437, 438,
	439, 445, 1431, 449, 450, 453, 1731, 2402, 417, 1937,
	1426, 2924, 108, 2895, 2919, 2065, 2066, 958, 959, 957,
	2158, 956, 109, 113, 1048, 129, 2869, 1063, 2922, 409,
	2967, 119, 2488, 2489, 1991, 1730, 2653, 1144, 115, 1271,
	1146, 947, 2234, 2093, 1271, 1428, 2091, 1271, 1427, 2325,
	1032, 2093, 103, 2670, 104, 2982, 1271, 110, 1811, 1270,
	2979, 2029, 2953, 1244, 410, 2680, 1626, 1628, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	2642, 2160, 1188, 1112, 1192, 2030, 2267, 2973, 2958, 2443,
	1030, 912, 425, 930, 2909, 1021, 2548, 2032, 470, 1097,
	1189, 2498, 1073, 1075, 1405, 975, 2499, 2050, 2311, 1116,
	2550, 2794, 1692, 1024, 2073, 2070, 2005, 2055, 1789, 1682,
	1031, 414, 1027, 73, 1058, 2794, 2580, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1706, 1205, 1208,
	1208, 1208, 1214, 1208, 1208, 1214, 1208, 1214, 1223, 1224,
	1225, 1226, 2712, 1236, 2763, 2675, 1028, 1029, 414, 2669,
	1424, 79, 1145, 1988, 79, 1972, 2600, 79, 2598, 79,
	2053, 2296, 79, 1035, 1627, 1750, 1972, 2054, 1191, 1790,
	1749, 100, 1069, 1422, 1423, 414, 1360, 443, 414, 112,
	111, 1358, 1977, 73, 976, 1719, 909, 2921, 2923, 1077,
	1084, 1944, 1943, 1942, 1068, 1064, 1065, 1066, 1067, 1070,
	1071, 1072, 1074, 2951, 1230, 1972, 2952, 1020, 2950, 1972,
	908, 2068, 2104, 129, 129, 129, 1081, 2549, 2162, 920,
	378, 1204, 2502, 2166, 1265, 2161, 1890, 2159, 1887, 731,
	1147, 1148, 2164, 2352, 1972, 708, 2343, 2072, 2071, 1959,
	708, 1951, 1847, 2565, 1835, 2163, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1820, 2497,
	2165, 2167, 1734, 1732, 1480, 1264, 1249, 1115, 940, 2673,
	1125, 1646, 1135, 1135, 2305, 1637, 1209, 1211, 1213, 1215,
	1217, 1219, 1220, 1222, 1269, 1239, 2435, 1256, 2433, 1402,
	2257, 1393, 1257, 2695, 555, 2843, 2844, 1331, 1971, 2840,
	2841, 2514, 2566, 2587, 2709, 2708, 2112, 1210, 1212, 1971,
	1216, 1218, 1601, 1221, 1473, 1242, 2091, 1759, 1108, 1247,
	1271, 1106, 2108, 2092, 2093, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 2588, 1108, 1135,
	1885, 954, 1884, 946, 929, 2436, 1266, 2434, 1971, 2258,
	2200, 96, 1971, 1508, 2099, 2091, 2199, 1593, 967, 2096,
	1107, 1106, 2095, 2098, 1107, 1106, 1413, 561, 1506, 1507,
	1505, 2975, 2503, 1478, 1479, 2180, 1350, 1971, 1108, 1262,
	2103, 454, 1108, 983, 2100, 2961, 2943, 2960, 1394, 923,
	922, 1147, 1148, 1147, 1148, 1373, 95, 1591, 1107, 1106,
	454, 2971, 1026, 1033, 1034, 1036, 1037, 1038, 1039, 1040,
	2910, 1042, 1043, 1044, 1760, 1047, 1108, 1050, 1051, 1052,
	1053, 1054, 1768, 1338, 1128, 1129, 1130, 1131, 1132, 1125,
	731, 129, 1135, 469, 94, 1107, 1106, 945, 955, 1376,
	457, 457, 2875, 2474, 457, 1886, 1349, 477, 2468, 2242,
	1353, 129, 969, 1108, 129, 1591, 1103, 1902, 1093, 457,
	457, 1094, 129, 932, 933, 934, 935, 936, 937, 938,
	2767, 129, 129, 129, 129, 129, 2759, 1107, 1106, 1107,
	1106, 2717, 81, 454, 2912, 2853, 1377, 1107, 1106, 1107,
	1106, 1380, 457, 1504, 2854, 1108, 2182, 1108, 1400, 1388,
	1389, 1390, 1391, 2021, 2968, 1108, 1416, 1108, 2862, 1107,
	1106, 2853, 1398, 2881, 2595, 2880, 2861, 1450, 1088, 2594,
	1107, 1106, 691, 692, 1832, 1833, 1834, 1108, 1396, 80,
	1397, 1336, 1482, 1335, 1351, 1491, 1493, 1494, 1108, 2760,
	2671, 1492, 457, 457, 457, 1464, 1352, 731, 2593, 2592,
	1434, 1362, 1370, 1191, 1369, 2586, 1483, 2427, 2969, 1484,
	1379, 1381, 1382, 2426, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 2020, 457, 1135, 1525,
	2018, 1526, 457, 457, 1999, 2761, 2672, 1016, 1957, 1456,
	1958, 580, 579, 582, 583, 584, 585, 80, 1408, 1409,
	581, 586, 1411, 129, 1015, 129, 989, 2823, 731, 2821,
	2773, 2667, 2666, 1189, 1499, 2652, 2602, 2570, 1414, 2528,
	2471, 2470, 2469, 1528, 1529, 2437, 129, 1429, 2424, 988,
	1430, 1433, 1112, 1133, 1134, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1125, 1192, 2316, 1135, 2250, 2016, 1779, 1754,
	1410, 1488, 1489, 2850, 2849, 2677, 2650, 2619, 1977, 1571,
	1609, 1612, 1613, 1614, 1610, 1451, 1611, 1615, 1454, 2613,
	2203, 2204, 2495, 2355, 2339, 2335, 1497, 731, 1502, 1463,
	2327, 2298, 2060, 2059, 1772, 2346, 1947, 1620, 1756, 1468,
	1755, 1629, 1527, 2127, 1236, 1406, 1432, 1403, 1236, 1368,
	1367, 2345, 1339, 1189, 731, 731, 1337, 1011, 942, 420,
	418, 1503, 2539, 2878, 1088, 1495, 1471, 2411, 2868, 2780,
	1088, 1543, 2411, 2778, 2411, 2776, 1548, 2411, 2658, 2539,
	2646, 2612, 1577, 1580, 2539, 2555, 1455, 1191, 1361, 1592,
	1055, 1575, 1576, 2347, 1021, 1498, 2539, 1088, 1376, 2561,
	129, 2560, 2629, 1947, 1947, 1632, 2539, 2538, 129, 1634,
	129, 2411, 2410, 1499, 2277, 129, 129, 2392, 1088, 129,
	129, 129, 1819, 1088, 2265, 2264, 1531, 1616, 2261, 2262,
	1539, 2261, 2260, 2251, 708, 1845, 1088, 1604, 1088, 731,
	731, 1550, 1551, 1947, 1625, 1792, 1791, 1739, 1678, 2611,
	1652, 1569, 1776, 2539, 1563, 1569, 1088, 1649, 1567, 1630,
	2539, 1604, 1693, 1694, 1695, 1696, 1268, 1267, 1245, 1603,
	1475, 2184, 1588, 1747, 2198, 1651, 1631, 2833, 1244, 1239,
	1663, 84, 1059, 1060, 1245, 1019, 1239, 1738, 2198, 1569,
	1239, 477, 1331, 1018, 2785, 1671, 1019, 2386, 1753, 2278,
	2198, 1639, 1214, 1638, 1644, 1635, 2263, 2347, 1604, 2212,
	2084, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1660, 1961,
	1653, 1474, 1640, 129, 1246, 1845, 1248, 1715, 1874, 129,
	129, 457, 457, 457, 1873, 1845, 129, 1745, 1746, 1775,
	1246, 1021, 1244, 1412, 1650, 1752, 1476, 1083, 724, 1087,
	1453, 1713, 1714, 1705, 1419, 1359, 1709, 1710, 1711, 1712,
	1357, 1250, 719, 81, 2802, 129, 129, 129, 2777, 1113,
	1817, 2211, 1609, 1612, 1613, 1614, 1610, 2375, 1611, 1615,
	2618, 2616, 1757, 2429, 428, 1761, 1679, 1728, 2398, 1708,
	1766, 129, 2241, 129, 1704, 1765, 1965, 731, 1025, 1836,
	1733, 731, 1699, 1119, 1698, 1122, 2203, 2204, 1831, 1332,
	1008, 1717, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1769,
	1120, 1121, 1118, 731, 81, 2932, 731, 1781, 2930, 1499,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 1435, 2902, 1135, 1438, 1439, 1440, 1770, 1442,
	1443, 2276, 459, 1444, 2206, 2184, 2022, 1364, 1774, 1445,
	1061, 1780, 1022, 1446, 1447, 1017, 1448, 1449, 2209, 2208,
	1926, 1097, 1925, 1787, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 1821, 1929, 1135, 1927,
	2846, 1651, 1930, 2799, 1928, 1794, 2115, 1931, 1797, 1613,
	1614, 1913, 1915, 546, 547, 1236, 1236, 1236, 1236, 1236,
	1816, 1486, 1239, 1824, 96, 1502, 2832, 1914, 1841, 1822,
	1823, 1620, 2389, 1938, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 1236, 1801, 1135, 1829, 1828, 1571, 2529, 1837,
	1101, 1102, 2494, 1330, 2414, 2334, 2333, 1979, 1503, 2249,
	2248, 2247, 1919, 1969, 2236, 1626, 1628, 2682, 2685, 2772,
	1498, 2771, 2606, 2822, 1880, 2604, 2663, 2662, 419, 1099,
	1949, 1407, 1950, 2589, 2590, 2272, 129, 129, 129, 129,
	129, 1879, 2111, 1941, 2110, 1090, 1903, 1918, 129, 2009,
	1263, 1006, 129, 1948, 990, 987, 129, 1091, 986, 943,
	2888, 2623, 2622, 129, 1726, 2384, 2874, 1124, 1123, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 1478,
	1479, 1135, 1933, 708, 1901, 2504, 1778, 731, 2476, 1727,
	1940, 1363, 2834, 2765, 2608, 2477, 2418, 1921, 1922, 985,
	1924, 1976, 1978, 1945, 1851, 1853, 2271, 1239, 1239, 1239,
	1239, 1239, 1962, 1932, 2000, 2001, 1718, 1865, 1866, 1867,
	1868, 2007, 1920, 1239, 96, 1923, 1101, 1102, 2887, 1469,
	2886, 2014, 1964, 1952, 1239, 1256, 2064, 1827, 1960, 1079,
	1080, 454, 2885, 1627, 2567, 1826, 1800, 1331, 970, 731,
	543, 129, 2825, 2824, 2769, 1970, 2058, 1975, 2686, 2633,
	2627, 544, 84, 2626, 731, 731, 731, 2507, 1947, 2314,
	457, 2034, 2035, 2036, 1399, 2080, 1349, 2078, 80, 2934,
	2933, 468, 2077, 1891, 129, 457, 1888, 2017, 1798, 1395,
	1104, 2057, 2933, 2934, 1189, 2643, 2019, 2246, 1472, 719,
	466, 457, 2028, 2739, 52, 2026, 2027, 2741, 19, 2740,
	18, 2742, 20, 2136, 2743, 21, 86, 2048, 2062, 2738,
	15, 55, 457, 1, 731, 2737, 14, 2731, 10, 1788,
	457, 2754, 34, 2752, 33, 2751, 32, 2750, 28, 1436,
	2061, 2749, 27, 2456, 2008, 2455, 2010, 2011, 2012, 2013,
	2462, 731, 731, 2748, 26, 2067, 1499, 129, 2069, 2283,
	621, 2746, 23, 2745, 22, 2747, 24, 731, 2286, 2083,
	2736, 13, 2046, 2189, 80, 2733, 12, 2089, 2472, 2094,
	2088, 2105, 2106, 1347, 731, 2109, 2732, 11, 2730, 9,
	2190, 2578, 2086, 2097, 2102, 926, 1737, 1012, 2214, 2770,
	2681, 2683, 2603, 2218, 2219, 2220, 2479, 2122, 2440, 2439,
	2121, 2039, 2126, 2038, 2197, 2179, 1007, 2185, 2130, 1793,
	1919, 1417, 1500, 2087, 2090, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1748, 1810, 2693, 1799, 1062, 731, 2224, 731, 2243, 2169,
	2168, 1664, 715, 1654, 721, 1918, 727, 2181, 2217, 2113,
	2114, 477, 2222, 92, 1758, 953, 386, 1661, 1985, 2684,
	731, 1009, 1984, 1997, 1676, 2120, 2075, 2192, 931, 1721,
	1725, 1983, 2188, 1982, 2081, 2207, 2679, 1498, 1113, 1986,
	1276, 731, 1274, 731, 1275, 731, 1273, 731, 2215, 1278,
	1277, 2238, 2223, 390, 2239, 1583, 2240, 2213, 1258, 2235,
	2812, 2237, 2354, 1594, 1105, 107, 2293, 56, 2496, 2137,
	2229, 454, 2228, 2140, 2141, 2142, 2101, 462, 2145, 1540,
	1541, 463, 97, 105, 392, 2279, 2254, 2273, 2274, 2275,
	1143, 1825, 1553, 1554, 1555, 1556, 1953, 706, 1713, 707,
	1714, 699, 2873, 1471, 129, 1085, 2707, 1568, 1570, 2782,
	2804, 1095, 2698, 1574, 1900, 1203, 1589, 564, 2295, 1936,
	2513, 1894, 2700, 1490, 731, 731, 731, 578, 577, 576,
	573, 457, 574, 2795, 1481, 1910, 129, 457, 1117, 2266,
	562, 553, 1234, 2300, 1227, 1777, 1608, 1606, 1605, 2120,
	129, 2302, 457, 1365, 731, 457, 695, 2205, 2201, 457,
	457, 1618, 457, 1233, 1237, 2344, 477, 2323, 70, 968,
	2301, 408, 2381, 2640, 38, 467, 548, 25, 2348, 731,
	1088, 17, 977, 129, 731, 16, 1803, 2317, 2324, 2380,
	2318, 731, 2338, 924, 731, 42, 44, 2033, 1330, 1729,
	2811, 2917, 993, 2252, 2253, 2941, 2851, 31, 30, 29,
	2256, 2744, 2340, 2753, 2735, 2734, 2904, 2259, 2903, 4,
	1076, 71, 35, 551, 1331, 717, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 2, 0,
	1135, 0, 0, 2406, 2407, 2408, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 1919, 0, 1135,
	0, 0, 1773, 2393, 0, 0, 2416, 0, 2385, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 80, 0, 0, 2404, 0, 0, 2383, 0, 0,
	0, 0, 1918, 731, 1191, 0, 0, 2430, 2394, 0,
	731, 731, 731, 2365, 2395, 2396, 2304, 1597, 2397, 2308,
	731, 2399, 0, 2312, 2313, 0, 2315, 2409, 2405, 1191,
	1771, 0, 2415, 731, 2452, 2453, 2454, 0, 0, 2432,
	0, 0, 0, 2431, 0, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 2423, 2419, 2425, 0, 0, 477,
	0, 0, 0, 0, 0, 0, 0, 1236, 129, 0,
	731, 1838, 1839, 1840, 0, 2490, 2491, 0, 0, 0,
	2508, 0, 0, 2492, 0, 0, 2451, 0, 0, 0,
	0, 2481, 1802, 0, 0, 2482, 0, 0, 1818, 0,
	0, 2485, 0, 0, 0, 0, 457, 2189, 2480, 2500,
	2189, 2534, 2510, 2511, 2478, 0, 2486, 0, 0, 0,
	2493, 0, 0, 2214, 0, 0, 0, 2533, 2509, 2235,
	0, 0, 0, 2537, 0, 731, 2501, 731, 129, 2557,
	0, 1182, 1183, 0, 731, 0, 0, 0, 0, 1895,
	1896, 1897, 0, 0, 0, 1843, 0, 2517, 0, 0,
	1846, 0, 2531, 0, 0, 1848, 1849, 2422, 1713, 2530,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 0, 0,
	1864, 0, 2564, 0, 731, 1869, 1870, 1871, 1872, 2541,
	731, 2562, 1876, 1877, 1878, 129, 2551, 129, 2536, 1881,
	1882, 1883, 2563, 731, 2568, 0, 2554, 1889, 0, 1239,
	1892, 1893, 0, 2552, 2553, 1898, 2188, 2546, 0, 2188,
	1904, 731, 1905, 1906, 1907, 2624, 1908, 1909, 0, 1625,
	2569, 2542, 2540, 0, 0, 0, 0, 2581, 0, 0,
	0, 0, 2591, 2505, 0, 1934, 1935, 2596, 0, 0,
	0, 2599, 2120, 2189, 477, 80, 0, 2609, 0, 0,
	2484, 0, 477, 0, 2614, 2615, 2628, 2630, 0, 0,
	0, 2645, 2621, 0, 0, 0, 0, 0, 0, 0,
	2631, 0, 0, 0, 2617, 80, 0, 0, 0, 2632,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2659, 2649, 1968, 0, 2644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2651, 0, 0, 2661,
	2648, 0, 715, 0, 0, 551, 0, 715, 1259, 0,
	0, 731, 1236, 2063, 0, 0, 2558, 0, 2559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 1681,
	1236, 1686, 1687, 1688, 1689, 1690, 0, 0, 0, 0,
	0, 0, 2188, 0, 0, 0, 0, 0, 0, 1700,
	1701, 1702, 0, 0, 0, 0, 0, 2690, 2689, 0,
	2691, 2703, 80, 2705, 0, 0, 0, 0, 0, 2724,
	0, 0, 0, 2688, 0, 0, 2706, 0, 0, 0,
	457, 2710, 0, 129, 0, 0, 2687, 2124, 731, 2715,
	731, 2704, 1919, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2722, 0, 0, 0, 0, 0, 0, 2150, 2151,
	0, 2699, 2702, 2766, 2768, 129, 2775, 1918, 1191, 0,
	0, 0, 2170, 2171, 0, 2172, 2173, 0, 2786, 2174,
	2788, 0, 2787, 0, 0, 0, 0, 0, 2798, 0,
	0, 0, 2125, 0, 1239, 0, 0, 2649, 2133, 80,
	2803, 0, 0, 0, 0, 0, 0, 731, 0, 731,
	2143, 2144, 1239, 0, 0, 0, 2807, 0, 0, 0,
	0, 0, 0, 2152, 2216, 0, 0, 2156, 0, 0,
	0, 0, 2828, 0, 2830, 0, 0, 0, 0, 0,
	2836, 0, 2838, 0, 2839, 0, 0, 0, 2827, 1333,
	0, 0, 2831, 0, 0, 1341, 1344, 2847, 0, 2829,
	2837, 2191, 2835, 2845, 0, 0, 0, 0, 0, 731,
	0, 0, 0, 2866, 2245, 2136, 1341, 1344, 454, 0,
	0, 0, 0, 0, 0, 0, 2858, 0, 0, 731,
	2808, 2809, 0, 2221, 2871, 80, 2848, 0, 2870, 0,
	0, 80, 2867, 0, 0, 2884, 0, 0, 2891, 0,
	2882, 0, 2872, 0, 731, 0, 0, 0, 0, 2879,
	2702, 2893, 80, 2233, 2894, 0, 2896, 80, 2898, 2897,
	0, 0, 2911, 2374, 0, 2914, 2927, 0, 457, 2926,
	2908, 0, 2907, 2916, 454, 731, 2906, 2931, 2905, 2929,
	80, 0, 0, 80, 80, 0, 0, 731, 80, 0,
	2936, 2891, 0, 2938, 0, 2944, 1437, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 2816, 80, 2954,
	0, 80, 0, 2373, 2962, 2891, 731, 0, 2883, 2964,
	0, 2959, 0, 0, 0, 2935, 80, 0, 80, 0,
	0, 0, 80, 2891, 457, 2891, 0, 0, 2350, 0,
	0, 0, 2974, 80, 0, 0, 80, 0, 80, 0,
	2891, 0, 80, 0, 0, 2891, 2978, 727, 0, 2891,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 0, 2322, 1135, 0, 0, 0, 0, 0,
	1968, 0, 0, 2329, 2331, 0, 727, 0, 0, 0,
	2377, 2378, 2379, 2322, 0, 0, 0, 2372, 0, 2349,
	0, 2002, 2003, 2004, 2006, 0, 0, 0, 2963, 2889,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 0, 0, 1135, 0, 1530, 0, 0, 0,
	401, 0, 0, 0, 0, 2361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2370, 2371, 0, 0,
	0, 0, 2376, 1561, 1562, 0, 0, 0, 2417, 0,
	0, 0, 2131, 2132, 0, 0, 0, 2387, 2388, 0,
	2390, 2138, 2139, 2391, 0, 0, 715, 0, 0, 0,
	0, 0, 477, 2146, 2147, 2148, 2149, 0, 0, 0,
	2153, 2154, 2155, 2403, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 2359, 0, 1135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 0, 1238, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 727, 0, 0, 727, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1098, 0, 1124, 1123, 1133, 1134, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1125, 0, 0, 1135, 0, 0,
	0, 126, 0, 2515, 2516, 382, 0, 0, 0, 0,
	411, 0, 0, 0, 391, 399, 400, 2519, 2520, 2521,
	2522, 0, 0, 0, 0, 2526, 0, 0, 0, 127,
	0, 0, 405, 0, 0, 0, 0, 2322, 127, 0,
	0, 0, 0, 0, 696, 0, 0, 0, 720, 388,
	0, 2177, 389, 0, 0, 397, 398, 2322, 0, 0,
	0, 476, 0, 0, 0, 0, 0, 0, 925, 552,
	0, 0, 698, 716, 0, 0, 127, 0, 0, 939,
	0, 0, 0, 0, 0, 2523, 2524, 2525, 2358, 2527,
	0, 0, 0, 0, 0, 0, 127, 0, 2176, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 394, 0, 2543, 2544, 2545, 0, 0, 0,
	0, 477, 0, 477, 0, 2556, 1786, 0, 0, 2233,
	1786, 0, 0, 395, 0, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 2233, 0, 1135,
	0, 0, 1786, 0, 2255, 1786, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 2351,
	1135, 0, 0, 0, 0, 0, 0, 2353, 0, 0,
	0, 727, 0, 0, 0, 0, 0, 2356, 2357, 0,
	0, 0, 0, 0, 0, 0, 2360, 0, 380, 0,
	0, 0, 2657, 1124, 1123, 1133, 1134, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1125, 0, 0, 1135, 0, 0,
	0, 0, 0, 2634, 2635, 0, 0, 2636, 2637, 2638,
	2639, 393, 383, 384, 0, 404, 0, 0, 0, 385,
	387, 0, 381, 403, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1532, 1537, 1538, 0, 0,
	0, 1542, 0, 1544, 1545, 1546, 1547, 2692, 1549, 0,
	0, 1552, 0, 0, 0, 0, 1557, 1558, 1559, 1560,
	2175, 0, 0, 1564, 1565, 1566, 396, 0, 0, 0,
	0, 1572, 1573, 0, 0, 0, 1579, 1582, 0, 1587,
	0, 0, 0, 0, 715, 0, 0, 2362, 2363, 0,
	2364, 0, 0, 2366, 0, 2368, 0, 0, 0, 0,
	0, 1595, 0, 1598, 1599, 0, 0, 0, 0, 0,
	0, 0, 941, 0, 2233, 0, 2233, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 2711, 0,
	0, 0, 0, 2716, 0, 0, 727, 0, 0, 0,
	127, 0, 0, 0, 0, 2719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1014, 0, 0, 0,
	0, 2412, 2413, 0, 0, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 0, 1135,
	0, 2779, 0, 0, 127, 0, 0, 0, 2123, 0,
	0, 0, 0, 0, 0, 2789, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 2037, 2041, 2045, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 0,
	1135, 0, 0, 0, 0, 476, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 0,
	1135, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1125, 0, 0, 1135, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 2233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2925, 0, 0, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 727, 0,
	0, 0, 0, 2134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2326, 715, 0, 727, 0, 2196, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 491, 1850, 0, 2196,
	0, 0, 0, 0, 0, 1229, 0, 1241, 1862, 1863,
	0, 0, 0, 0, 499, 2965, 2966, 0, 0, 0,
	727, 1875, 727, 0, 727, 0, 2232, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 0, 0, 0, 0,
	0, 0, 0, 716, 0, 0, 1899, 0, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 2280, 2281, 2282, 497, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 492, 0,
	487, 0, 0, 2307, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2332, 0,
	0, 0, 0, 2337, 0, 0, 0, 0, 0, 0,
	2341, 0, 0, 2342, 0, 504, 502, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 513, 481, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 519, 0, 0, 0, 0, 0, 0, 493,
	494, 496, 523, 1334, 525, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 0, 0, 1366, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 1342, 1345, 0, 715,
	0, 0, 0, 1383, 1384, 1385, 1386, 1387, 0, 0,
	0, 127, 2401, 0, 127, 0, 0, 1342, 1345, 2401,
	2401, 2401, 1375, 0, 0, 0, 0, 0, 0, 727,
	0, 127, 127, 127, 127, 127, 0, 0, 482, 0,
	0, 0, 2401, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 533,
	0, 0, 0, 0, 483, 484, 485, 486, 488, 506,
	507, 511, 512, 529, 528, 527, 530, 534, 537, 536,
	538, 489, 490, 498, 508, 509, 510, 514, 515, 524,
	520, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1465, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 0, 2401, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 127, 0, 476, 0, 0, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 516, 518, 2535, 0, 0, 0, 1375, 0, 2401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2232, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	1536, 1536, 0, 0, 0, 1536, 1536, 1536, 1536, 1536,
	1536, 1536, 1536, 0, 0, 1536, 0, 0, 0, 0,
	1536, 1536, 1536, 1536, 0, 0, 0, 1536, 1536, 1536,
	0, 0, 0, 0, 0, 1536, 1536, 0, 0, 0,
	1536, 1536, 1602, 1536, 0, 0, 0, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 0,
	2620, 0, 0, 0, 0, 1536, 1536, 1536, 1536, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	476, 0, 0, 0, 535, 127, 127, 0, 0, 127,
	1636, 1375, 716, 0, 0, 0, 0, 0, 0, 0,
	2647, 2319, 0, 0, 0, 2321, 1375, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 1743, 1744, 0, 0, 0, 0, 2232, 1751, 2232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 127,
	127, 0, 0, 0, 715, 0, 127, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1014, 0, 1762, 1763, 127, 0, 0,
	497, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 0, 2781, 0, 2784, 526,
	0, 127, 492, 476, 487, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 0, 505, 0, 0, 0, 727, 0,
	513, 481, 1375, 517, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 0, 0, 0, 0, 2232, 0,
	0, 0, 0, 0, 0, 495, 519, 0, 0, 0,
	0, 0, 0, 493, 494, 496, 523, 0, 525, 531,
	0, 0, 0, 2401, 0, 0, 36, 0, 72, 39,
	40, 0, 0, 1536, 0, 0, 0, 0, 0, 0,
	59, 1536, 0, 0, 0, 0, 78, 0, 0, 0,
	41, 0, 1536, 1536, 2784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 2876, 0, 0, 1536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1536, 0, 482, 0, 0, 2401, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 716, 127, 127, 127, 127,
	127, 0, 2755, 0, 0, 2940, 2943, 2939, 476, 0,
	0, 0, 127, 0, 0, 0, 476, 0, 0, 0,
	0, 1536, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 716, 532, 533, 0, 0, 0, 0, 483, 484,
	485, 486, 488, 506, 507, 511, 512, 529, 528, 527,
	530, 534, 537, 536, 538, 489, 490, 498, 508, 509,
	510, 514, 515, 524, 520, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2025, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2756, 0, 0, 0, 535, 0, 0,
	0, 127, 521, 0, 0, 0, 2056, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 1966, 0,
	0, 0, 0, 0, 0, 516, 518, 540, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 57, 58, 0,
	2757, 0, 0, 0, 0, 0, 0, 0, 0, 2116,
	0, 0, 0, 0, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 1536, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 1375,
	0, 0, 0, 0, 0, 0, 539, 0, 0, 2758,
	75, 0, 53, 54, 61, 1271, 62, 0, 0, 0,
	0, 0, 0, 497, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 492, 0, 487, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 36, 0, 72,
	39, 40, 0, 716, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 513, 481, 0, 517, 0, 73, 0,
	0, 0, 0, 0, 479, 0, 0, 1298, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 519,
	0, 0, 0, 0, 0, 0, 493, 494, 496, 523,
	0, 525, 531, 2755, 0, 0, 2269, 0, 2980, 0,
	0, 0, 0, 0, 0, 0, 2859, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 2299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 1285, 0,
	127, 0, 0, 0, 503, 2336, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2756, 0, 0, 0, 1298, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 532, 533, 47, 0, 0,
	552, 483, 484, 485, 486, 488, 506, 507, 511, 512,
	529, 528, 527, 530, 534, 537, 536, 538, 489, 490,
	498, 508, 509, 510, 514, 515, 524, 520, 522, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 521, 476, 0, 0, 1285,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 516, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2758, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	2438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	1299, 0, 0, 0, 1312, 1315, 1316, 1317, 1318, 1319,
	1320, 0, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	0, 1300, 1301, 1302, 1303, 1279, 1283, 1313, 1280, 1286,
	1282, 1284, 1281, 0, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 476, 0, 0,
	0, 0, 0, 0, 0, 1312, 1315, 1316, 1317, 1318,
	1319, 1320, 1314, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 0, 1300, 1301, 1302, 1303, 1279, 1283, 1313, 1280,
	1286, 1282, 1284, 1281, 0, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 887, 862,
	339, 807, 890, 764, 790, 905, 795, 799, 842, 748,
	820, 265, 786, 749, 0, 768, 738, 778, 739, 765,
	809, 182, 763, 864, 823, 889, 221, 837, 0, 171,
	229, 227, 552, 0, 0, 272, 338, 888, 815, 0,
	897, 224, 0, 832, 898, 326, 249, 0, 0, 811,
	874, 818, 860, 806, 844, 757, 831, 892, 787, 839,
	893, 0, 0, 0, 0, 2810, 0, 0, 0, 0,
	0, 0, 0, 1314, 752, 0, 835, 886, 781, 838,
	841, 736, 834, 0, 743, 750, 904, 881, 771, 772,
	773, 0, 0, 0, 0, 0, 0, 0, 810, 819,
	854, 803, 359, 276, 293, 314, 797, 284, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 769, 0, 829,
	0, 0, 0, 751, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2718, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 0, 808, 0, 0,
	0, 756, 735, 770, 856, 127, 733, 250, 148, 861,
	880, 805, 212, 902, 884, 802, 801, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 853, 308,
	783, 734, 865, 766, 779, 172, 775, 300, 269, 358,
	788, 826, 299, 225, 348, 849, 885, 357, 792, 868,
	367, 372, 774, 816, 754, 323, 184, 180, 183, 0,
	137, 785, 283, 177, 217, 804, 843, 767, 168, 851,
	830, 867, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 2813, 2814, 2815, 798,
	789, 0, 0, 363, 800, 311, 310, 794, 207, 859,
	833, 740, 292, 846, 213, 136, 336, 375, 154, 219,
	341, 732, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 780, 848, 858, 290, 313,
	343, 156, 330, 776, 777, 782, 855, 302, 866, 878,
	891, 232, 187, 190, 201, 208, 840, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 741, 0, 328, 361, 377, 158, 762, 316,
	342, 791, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 760, 761, 758, 0, 759, 821, 822, 894, 895,
	896, 857, 753, 0, 875, 876, 0, 0, 0, 0,
	0, 863, 882, 883, 845, 906, 796, 169, 742, 745,
	746, 747, 755, 812, 813, 825, 828, 871, 870, 869,
	872, 877, 900, 899, 901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 133, 144, 223,
	907, 291, 193, 362, 737, 179, 0, 814, 817, 827,
	852, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 850, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 879,
	0, 793, 135, 873, 903, 836, 847, 887, 862, 339,
	807, 890, 764, 790, 905, 795, 799, 842, 748, 820,
	265, 786, 749, 0, 768, 738, 778, 739, 765, 809,
	182, 763, 864, 823, 889, 221, 837, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 888, 815, 0, 897,
	224, 0, 832, 898, 326, 249, 0, 0, 811, 874,
	818, 860, 806, 844, 757, 831, 892, 787, 839, 893,
	0, 0, 0, 0, 730, 0, 1658, 1659, 0, 0,
	0, 0, 0, 752, 0, 835, 886, 781, 838, 841,
	736, 834, 0, 743, 750, 904, 881, 771, 772, 773,
	1963, 0, 0, 0, 0, 0, 0, 810, 819, 854,
	803, 359, 276, 293, 314, 797, 284, 784, 0, 0,
	0, 0, 0, 0, 0, 0, 769, 0, 829, 0,
	0, 0, 751, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	756, 735, 770, 856, 0, 733, 250, 148, 861, 880,
	805, 212, 902, 884, 802, 801, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 853, 308, 783,
	734, 865, 766, 779, 172, 775, 300, 269, 358, 788,
	826, 299, 225, 348, 849, 885, 357, 792, 868, 367,
	372, 774, 816, 754, 323, 184, 180, 183, 0, 137,
	785, 283, 177, 217, 804, 843, 767, 168, 851, 830,
	867, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 798, 789,
	0, 0, 363, 800, 311, 310, 794, 207, 859, 833,
	740, 292, 846, 213, 136, 336, 375, 154, 219, 341,
	732, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 780, 848, 858, 290, 313, 343,
	156, 330, 776, 777, 782, 855, 302, 866, 878, 891,
	232, 187, 190, 201, 208, 840, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 741, 0, 328, 361, 377, 158, 762, 316, 342,
	791, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	760, 761, 758, 0, 759, 821, 822, 894, 895, 896,
	857, 753, 0, 875, 876, 0, 0, 0, 0, 0,
	863, 882, 883, 845, 906, 796, 169, 742, 745, 746,
	747, 755, 812, 813, 825, 828, 871, 870, 869, 872,
	877, 900, 899, 901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 133, 144, 223, 907,
	291, 193, 362, 737, 179, 0, 814, 817, 827, 852,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 850, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 879, 0,
	793, 135, 873, 903, 836, 847, 887, 862, 339, 807,
	890, 764, 790, 905, 795, 799, 842, 748, 820, 265,
	786, 749, 0, 768, 738, 778, 739, 765, 809, 182,
	763, 864, 823, 889, 221, 837, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 888, 815, 0, 897, 224,
	0, 832, 898, 326, 249, 0, 0, 811, 874, 818,
	860, 806, 844, 757, 831, 892, 787, 839, 893, 0,
	0, 0, 0, 730, 0, 1658, 1659, 0, 0, 0,
	0, 0, 752, 0, 835, 886, 781, 838, 841, 736,
	834, 0, 743, 750, 904, 881, 771, 772, 773, 0,
	0, 0, 0, 0, 0, 0, 810, 819, 854, 803,
	359, 276, 293, 314, 797, 284, 784, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 0, 829, 0, 0,
	0, 751, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 0, 0, 756,
	735, 770, 856, 0, 733, 250, 148, 861, 880, 805,
	212, 902, 884, 802, 801, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 853, 308, 783, 734,
	865, 766, 779, 172, 775, 300, 269, 358, 788, 826,
	299, 225, 348, 849, 885, 357, 792, 868, 367, 372,
	774, 816, 754, 323, 184, 180, 183, 0, 137, 785,
	283, 177, 217, 804, 843, 767, 168, 851, 830, 867,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 798, 789, 0,
	0, 363, 800, 311, 310, 794, 207, 859, 833, 740,
	292, 846, 213, 136, 336, 375, 154, 219, 341, 732,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 780, 848, 858, 290, 313, 343, 156,
	330, 776, 777, 782, 855, 302, 866, 878, 891, 232,
	187, 190, 201, 208, 840, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	741, 0, 328, 361, 377, 158, 762, 316, 342, 791,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 760,
	761, 758, 0, 759, 821, 822, 894, 895, 896, 857,
	753, 0, 875, 876, 0, 0, 0, 0, 0, 863,
	882, 883, 845, 906, 796, 169, 742, 745, 746, 747,
	755, 812, 813, 825, 828, 871, 870, 869, 872, 877,
	900, 899, 901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 824, 133, 144, 223, 907, 291,
	193, 362, 737, 179, 0, 814, 817, 827, 852, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	850, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 879, 0, 793,
	135, 873, 903, 836, 847, 887, 2193, 339, 807, 890,
	764, 790, 905, 795, 799, 842, 748, 820, 265, 786,
	749, 0, 768, 738, 778, 739, 765, 809, 182, 763,
	864, 823, 889, 221, 837, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 888, 815, 0, 897, 224, 0,
	832, 898, 326, 249, 0, 0, 811, 874, 818, 860,
	806, 844, 757, 831, 892, 787, 839, 893, 81, 0,
	1088, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 835, 886, 781, 838, 841, 736, 834,
	0, 743, 750, 904, 881, 771, 772, 773, 0, 0,
	0, 0, 0, 0, 0, 810, 819, 854, 803, 359,
	276, 293, 314, 797, 284, 784, 0, 0, 0, 0,
	0, 0, 0, 0, 769, 0, 829, 0, 0, 0,
	751, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 756, 735,
	770, 856, 0, 733, 250, 148, 861, 880, 805, 212,
	902, 884, 802, 801, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 853, 308, 783, 734, 865,
	766, 779, 172, 775, 300, 269, 358, 788, 826, 299,
	225, 348, 849, 885, 357, 792, 868, 367, 372, 774,
	816, 754, 323, 184, 180, 183, 0, 137, 785, 283,
	177, 217, 804, 843, 767, 168, 851, 830, 867, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 798, 789, 0, 0,
	363, 800, 311, 310, 794, 207, 859, 833, 740, 292,
	846, 213, 136, 336, 375, 154, 219, 341, 732, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 780, 848, 858, 290, 313, 343, 156, 330,
	776, 777, 782, 855, 302, 866, 878, 891, 232, 187,
	190, 201, 208, 840, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 741,
	0, 328, 361, 377, 158, 762, 316, 342, 791, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 760, 761,
	758, 0, 759, 821, 822, 894, 895, 896, 857, 753,
	0, 875, 876, 0, 0, 0, 0, 0, 863, 882,
	883, 845, 906, 796, 169, 742, 745, 746, 747, 755,
	812, 813, 825, 828, 871, 870, 869, 872, 877, 900,
	899, 901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 824, 133, 144, 223, 2194, 291, 193,
	362, 737, 179, 0, 814, 817, 827, 852, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 850,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 879, 0, 793, 135,
	873, 903, 836, 847, 887, 862, 339, 807, 890, 764,
	790, 905, 795, 799, 842, 748, 820, 265, 786, 749,
	0, 768, 738, 778, 739, 765, 809, 182, 763, 864,
	823, 889, 221, 837, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 888, 815, 0, 897, 224, 0, 832,
	898, 326, 249, 0, 0, 811, 874, 818, 860, 806,
	844, 757, 831, 892, 787, 839, 893, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	752, 0, 835, 886, 781, 838, 841, 736, 834, 0,
	743, 750, 904, 881, 771, 772, 773, 0, 0, 0,
	0, 0, 0, 0, 810, 819, 854, 803, 359, 276,
	293, 314, 797, 284, 784, 0, 0, 0, 0, 0,
	0, 2512, 0, 769, 0, 829, 0, 0, 0, 751,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 0, 0, 756, 735, 770,
	856, 0, 733, 250, 148, 861, 880, 805, 212, 902,
	884, 802, 801, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 853, 308, 783, 734, 865, 766,
	779, 172, 775, 300, 269, 358, 788, 826, 299, 225,
	348, 849, 885, 357, 792, 868, 367, 372, 774, 816,
	754, 323, 184, 180, 183, 0, 137, 785, 283, 177,
	217, 804, 843, 767, 168, 851, 830, 867, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 798, 789, 0, 0, 363,
	800, 311, 310, 794, 207, 859, 833, 740, 292, 846,
	213, 136, 336, 375, 154, 219, 341, 732, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 780, 848, 858, 290, 313, 343, 156, 330, 776,
	777, 782, 855, 302, 866, 878, 891, 232, 187, 190,
	201, 208, 840, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 741, 0,
	328, 361, 377, 158, 762, 316, 342, 791, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 760, 761, 758,
	0, 759, 821, 822, 894, 895, 896, 857, 753, 0,
	875, 876, 0, 0, 0, 0, 0, 863, 882, 883,
	845, 906, 796, 169, 742, 745, 746, 747, 755, 812,
	813, 825, 828, 871, 870, 869, 872, 877, 900, 899,
	901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 133, 144, 223, 907, 291, 193, 362,
	737, 179, 0, 814, 817, 827, 852, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 850, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 879, 0, 793, 135, 873,
	903, 836, 847, 887, 862, 339, 807, 890, 764, 790,
	905, 795, 799, 842, 748, 820, 265, 786, 749, 0,
	768, 738, 778, 739, 765, 809, 182, 763, 864, 823,
	889, 221, 837, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 888, 815, 0, 897, 224, 0, 832, 898,
	326, 249, 0, 0, 811, 874, 818, 860, 806, 844,
	757, 831, 892, 787, 839, 893, 0, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 835, 886, 781, 838, 841, 736, 834, 0, 743,
	750, 904, 881, 771, 772, 773, 0, 0, 0, 0,
	0, 0, 0, 810, 819, 854, 803, 359, 276, 293,
	314, 797, 284, 784, 0, 0, 0, 0, 0, 0,
	2129, 0, 769, 0, 829, 0, 0, 0, 751, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 0, 0, 0, 756, 735, 770, 856,
	0, 733, 250, 148, 861, 880, 805, 212, 902, 884,
	802, 801, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 853, 308, 783, 734, 865, 766, 779,
	172, 775, 300, 269, 358, 788, 826, 299, 225, 348,
	849, 885, 357, 792, 868, 367, 372, 774, 816, 754,
	323, 184, 180, 183, 0, 137, 785, 283, 177, 217,
	804, 843, 767, 168, 851, 830, 867, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 798, 789, 0, 0, 363, 800,
	311, 310, 794, 207, 859, 833, 740, 292, 846, 213,
	136, 336, 375, 154, 219, 341, 732, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	780, 848, 858, 290, 313, 343, 156, 330, 776, 777,
	782, 855, 302, 866, 878, 891, 232, 187, 190, 201,
	208, 840, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 741, 0, 328,
	361, 377, 158, 762, 316, 342, 791, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 760, 761, 758, 0,
	759, 821, 822, 894, 895, 896, 857, 753, 0, 875,
	876, 0, 0, 0, 0, 0, 863, 882, 883, 845,
	906, 796, 169, 742, 745, 746, 747, 755, 812, 813,
	825, 828, 871, 870, 869, 872, 877, 900, 899, 901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 824, 133, 144, 223, 907, 291, 193, 362, 737,
	179, 0, 814, 817, 827, 852, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 850, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 879, 0, 793, 135, 873, 903,
	836, 847, 887, 862, 339, 807, 890, 764, 790, 905,
	795, 799, 842, 748, 820, 265, 786, 749, 0, 768,
	738, 778, 739, 765, 809, 182, 763, 864, 823, 889,
	221, 837, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 888, 815, 0, 897, 224, 0, 832, 898, 326,
	249, 0, 0, 811, 874, 818, 860, 806, 844, 757,
	831, 892, 787, 839, 893, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 0,
	835, 886, 781, 838, 841, 736, 834, 0, 743, 750,
	904, 881, 771, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 810, 819, 854, 803, 359, 276, 293, 314,
	797, 284, 784, 0, 0, 0, 0, 0, 0, 2119,
	0, 769, 0, 829, 0, 0, 0, 751, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 756, 735, 770, 856, 0,
	733, 250, 148, 861, 880, 805, 212, 902, 884, 802,
	801, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 853, 308, 783, 734, 865, 766, 779, 172,
	775, 300, 269, 358, 788, 826, 299, 225, 348, 849,
	885, 357, 792, 868, 367, 372, 774, 816, 754, 323,
	184, 180, 183, 0, 137, 785, 283, 177, 217, 804,
	843, 767, 168, 851, 830, 867, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 798, 789, 0, 0, 363, 800, 311,
	310, 794, 207, 859, 833, 740, 292, 846, 213, 136,
	336, 375, 154, 219, 341, 732, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 780,
	848, 858, 290, 313, 343, 156, 330, 776, 777, 782,
	855, 302, 866, 878, 891, 232, 187, 190, 201, 208,
	840, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 741, 0, 328, 361,
	377, 158, 762, 316, 342, 791, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 760, 761, 758, 0, 759,
	821, 822, 894, 895, 896, 857, 753, 0, 875, 876,
	0, 0, 0, 0, 0, 863, 882, 883, 845, 906,
	796, 169, 742, 745, 746, 747, 755, 812, 813, 825,
	828, 871, 870, 869, 872, 877, 900, 899, 901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	824, 133, 144, 223, 907, 291, 193, 362, 737, 179,
	0, 814, 817, 827, 852, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 850, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 879, 0, 793, 135, 873, 903, 836,
	847, 887, 862, 339, 807, 890, 764, 790, 905, 795,
	799, 842, 748, 820, 265, 786, 749, 0, 768, 738,
	778, 739, 765, 809, 182, 763, 864, 823, 889, 221,
	837, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	888, 815, 0, 897, 224, 0, 832, 898, 326, 249,
	0, 0, 811, 874, 818, 860, 806, 844, 757, 831,
	892, 787, 839, 893, 0, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 752, 0, 835,
	886, 781, 838, 841, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 1637, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 736, 834, 0, 743, 750, 904, 881,
	771, 772, 773, 0, 0, 0, 0, 0, 0, 0,
	810, 819, 854, 803, 359, 276, 293, 314, 797, 284,
	784, 0, 0, 0, 0, 0, 0, 1496, 0, 769,
	0, 829, 0, 0, 0, 751, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 808,
	0, 0, 0, 756, 735, 770, 856, 0, 733, 250,
	148, 861, 880, 805, 212, 902, 884, 802, 801, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	853, 308, 783, 734, 865, 766, 779, 172, 775, 300,
	269, 358, 788, 826, 299, 225, 348, 849, 885, 357,
	792, 868, 367, 372, 774, 816, 754, 323, 184, 180,
	183, 0, 137, 785, 283, 177, 217, 804, 843, 767,
	168, 851, 830, 867, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 798, 789, 0, 0, 363, 800, 311, 310, 794,
	207, 859, 833, 740, 292, 846, 213, 136, 336, 375,
	154, 219, 341, 732, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 780, 848, 858,
	290, 313, 343, 156, 330, 776, 777, 782, 855, 302,
	866, 878, 891, 232, 187, 190, 201, 208, 840, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 741, 0, 328, 361, 377, 158,
	762, 316, 342, 791, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 760, 761, 758, 0, 759, 821, 822,
	894, 895, 896, 857, 753, 0, 875, 876, 0, 0,
	0, 0, 0, 863, 882, 883, 845, 906, 796, 169,
	742, 745, 746, 747, 755, 812, 813, 825, 828, 871,
	870, 869, 872, 877, 900, 899, 901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 824, 133,
	144, 223, 907, 291, 193, 362, 737, 179, 0, 814,
	817, 827, 852, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 850, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 879, 0, 793, 135, 873, 903, 836, 847, 887,
	862, 339, 807, 890, 764, 790, 905, 795, 799, 842,
	748, 820, 265, 786, 749, 0, 768, 738, 778, 739,
	765, 809, 182, 763, 864, 823, 889, 221, 837, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 888, 815,
	0, 897, 224, 0, 832, 898, 326, 249, 0, 0,
	811, 874, 818, 860, 806, 844, 757, 831, 892, 787,
	839, 893, 0, 0, 0, 0, 730, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 0, 835, 886, 781,
	838, 841, 736, 834, 0, 743, 750, 904, 881, 771,
	772, 773, 0, 0, 0, 0, 0, 0, 0, 810,
	819, 854, 803, 359, 276, 293, 314, 797, 284, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	829, 0, 0, 0, 751, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 808, 0,
	0, 0, 756, 735, 770, 856, 0, 733, 250, 148,
	861, 880, 805, 212, 902, 884, 802, 801, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 853,
	308, 783, 734, 865, 766, 779, 172, 775, 300, 269,
	358, 788, 826, 299, 225, 348, 849, 885, 357, 792,
	868, 367, 372, 774, 816, 754, 323, 184, 180, 183,
	0, 137, 785, 283, 177, 217, 804, 843, 767, 168,
	851, 830, 867, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	798, 789, 0, 0, 363, 800, 311, 310, 794, 207,
	859, 833, 740, 292, 846, 213, 136, 336, 375, 154,
	219, 341, 732, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 780, 848, 858, 290,
	313, 343, 156, 330, 776, 777, 782, 855, 302, 866,
	878, 891, 232, 187, 190, 201, 208, 840, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 741, 0, 328, 361, 377, 158, 762,
	316, 342, 791, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 760, 761, 758, 0, 759, 821, 822, 894,
	895, 896, 857, 753, 0, 875, 876, 0, 0, 0,
	0, 0, 863, 882, 883, 845, 906, 796, 169, 742,
	745, 746, 747, 755, 812, 813, 825, 828, 871, 870,
	869, 872, 877, 900, 899, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 133, 144,
	223, 907, 291, 193, 362, 737, 179, 0, 814, 817,
	827, 852, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 850, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	879, 0, 793, 135, 873, 903, 836, 847, 887, 862,
	339, 807, 890, 764, 790, 905, 795, 799, 842, 748,
	820, 265, 786, 749, 0, 768, 738, 778, 739, 765,
	809, 182, 763, 864, 823, 889, 221, 837, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 888, 815, 0,
	897, 224, 0, 832, 898, 326, 249, 0, 0, 811,
	874, 818, 860, 806, 844, 757, 831, 892, 787, 839,
	893, 0, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 0, 835, 886, 781, 838,
	841, 736, 834, 0, 743, 750, 904, 881, 771, 772,
	773, 0, 0, 0, 0, 0, 0, 0, 810, 819,
	854, 803, 359, 276, 293, 314, 797, 284, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 769, 0, 829,
	0, 0, 0, 751, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 808, 0, 0,
	0, 756, 735, 770, 856, 0, 733, 250, 148, 861,
	880, 805, 212, 902, 884, 802, 801, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 853, 308,
	783, 734, 865, 766, 779, 172, 775, 300, 269, 358,
	788, 826, 299, 225, 348, 849, 885, 357, 792, 868,
	367, 372, 774, 816, 754, 323, 184, 180, 183, 0,
	137, 785, 283, 177, 217, 804, 843, 767, 168, 851,
	830, 867, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 798,
	789, 0, 0, 363, 800, 311, 310, 794, 207, 859,
	833, 740, 292, 846, 213, 136, 336, 375, 154, 219,
	341, 732, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 780, 848, 858, 290, 313,
	343, 156, 330, 776, 777, 782, 855, 302, 866, 878,
	891, 232, 187, 190, 201, 208, 840, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 741, 0, 328, 361, 377, 158, 762, 316,
	342, 791, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 760, 761, 758, 0, 759, 821, 822, 894, 895,
	896, 857, 753, 0, 875, 876, 0, 0, 0, 0,
	0, 863, 882, 883, 845, 906, 796, 169, 742, 745,
	746, 747, 755, 812, 813, 825, 828, 871, 870, 869,
	872, 877, 900, 899, 901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 133, 144, 223,
	907, 291, 193, 362, 737, 179, 0, 814, 817, 827,
	852, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 850, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 879,
	0, 793, 135, 873, 903, 836, 847, 887, 862, 339,
	807, 890, 764, 790, 905, 795, 799, 842, 748, 820,
	265, 786, 749, 0, 768, 738, 778, 739, 765, 809,
	182, 763, 864, 823, 889, 221, 837, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 1670, 1674, 0, 897,
	224, 0, 832, 898, 326, 249, 0, 0, 811, 874,
	818, 860, 806, 844, 757, 831, 892, 787, 839, 893,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 835, 886, 781, 838, 841,
	736, 834, 0, 743, 750, 904, 881, 771, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 810, 819, 854,
	803, 359, 276, 293, 314, 797, 284, 784, 0, 0,
	0, 0, 0, 0, 0, 0, 769, 0, 829, 0,
	0, 0, 751, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	756, 735, 770, 856, 0, 733, 250, 148, 861, 880,
	1673, 212, 902, 884, 802, 801, 1667, 0, 1668, 1669,
	222, 729, 130, 146, 1665, 1672, 261, 853, 308, 783,
	734, 865, 766, 779, 172, 775, 300, 269, 358, 788,
	826, 299, 225, 348, 849, 885, 357, 792, 868, 367,
	372, 774, 816, 754, 323, 184, 180, 183, 0, 137,
	785, 283, 177, 217, 804, 843, 767, 168, 851, 830,
	867, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 798, 789,
	0, 0, 363, 800, 311, 310, 794, 207, 859, 833,
	740, 292, 846, 213, 136, 336, 375, 154, 219, 341,
	732, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 780, 848, 858, 290, 313, 343,
	156, 330, 776, 777, 782, 855, 302, 866, 878, 891,
	232, 187, 190, 201, 208, 840, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 741, 0, 328, 361, 377, 158, 762, 316, 342,
	791, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	760, 761, 758, 0, 759, 821, 822, 894, 895, 896,
	857, 753, 0, 875, 876, 0, 0, 0, 0, 0,
	863, 882, 883, 845, 906, 796, 169, 742, 745, 746,
	747, 755, 812, 813, 825, 828, 871, 870, 869, 872,
	877, 900, 899, 901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 133, 144, 223, 907,
	291, 193, 362, 737, 179, 0, 814, 817, 827, 852,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 850, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 879, 0,
	793, 135, 873, 903, 836, 847, 887, 862, 339, 807,
	890, 764, 790, 905, 795, 799, 842, 748, 820, 265,
	786, 749, 0, 768, 738, 778, 739, 765, 809, 182,
	763, 864, 823, 889, 221, 837, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 888, 815, 0, 897, 224,
	0, 832, 898, 326, 249, 0, 0, 811, 874, 818,
	860, 806, 844, 757, 831, 892, 787, 839, 893, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 0, 835, 886, 781, 838, 841, 736,
	834, 0, 743, 750, 904, 881, 771, 772, 773, 0,
	0, 0, 0, 0, 0, 0, 810, 819, 854, 803,
	359, 276, 293, 314, 797, 284, 784, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 0, 829, 0, 0,
	0, 751, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 0, 0, 756,
	735, 770, 856, 0, 733, 250, 148, 861, 880, 805,
	212, 902, 884, 802, 801, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 853, 308, 783, 734,
	865, 766, 779, 172, 775, 300, 269, 358, 788, 826,
	299, 225, 348, 849, 885, 357, 792, 868, 367, 372,
	774, 816, 754, 323, 184, 180, 183, 0, 137, 785,
	283, 177, 217, 804, 843, 767, 168, 851, 830, 867,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 798, 789, 0,
	0, 363, 800, 311, 310, 794, 207, 859, 833, 740,
	292, 846, 213, 136, 336, 375, 154, 219, 341, 732,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 780, 848, 858, 290, 313, 343, 156,
	330, 776, 777, 782, 855, 302, 866, 878, 891, 232,
	187, 190, 201, 208, 840, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	741, 0, 328, 361, 377, 158, 762, 316, 342, 791,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 760,
	761, 758, 0, 759, 821, 822, 894, 895, 896, 857,
	753, 0, 875, 876, 0, 0, 0, 0, 0, 863,
	882, 883, 845, 906, 796, 169, 742, 745, 746, 747,
	755, 812, 813, 825, 828, 871, 870, 869, 872, 877,
	900, 899, 901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 824, 133, 144, 223, 907, 291,
	193, 362, 737, 179, 0, 814, 817, 827, 852, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	850, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 879, 0, 793,
	135, 873, 903, 836, 847, 887, 862, 339, 807, 890,
	764, 790, 905, 795, 799, 842, 748, 820, 265, 786,
	749, 0, 768, 738, 778, 739, 765, 809, 182, 763,
	864, 823, 889, 221, 837, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 888, 815, 0, 897, 224, 0,
	832, 898, 326, 249, 0, 0, 811, 874, 818, 860,
	806, 844, 757, 831, 892, 787, 839, 893, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 835, 886, 781, 838, 841, 736, 834,
	0, 743, 750, 904, 881, 771, 772, 773, 0, 0,
	0, 0, 0, 0, 0, 810, 819, 854, 803, 359,
	276, 293, 314, 797, 284, 784, 0, 0, 0, 0,
	0, 0, 0, 0, 769, 0, 829, 0, 0, 0,
	751, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 756, 735,
	770, 856, 0, 733, 250, 148, 861, 880, 805, 212,
	902, 884, 802, 801, 286, 0, 333, 200, 222, 729,
	130, 146, 725, 199, 261, 853, 308, 783, 734, 865,
	766, 779, 172, 775, 300, 269, 358, 788, 826, 299,
	225, 348, 849, 885, 357, 792, 868, 367, 372, 774,
	816, 754, 323, 184, 180, 183, 0, 137, 785, 283,
	177, 217, 804, 843, 767, 168, 851, 830, 867, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 798, 789, 0, 0,
	363, 800, 311, 310, 794, 207, 859, 833, 740, 292,
	846, 213, 136, 336, 375, 154, 219, 341, 732, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 780, 848, 858, 290, 313, 343, 156, 330,
	776, 777, 782, 855, 302, 866, 878, 891, 232, 187,
	190, 201, 208, 840, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 741,
	0, 328, 361, 377, 158, 762, 316, 342, 791, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 760, 761,
	758, 0, 759, 821, 822, 894, 895, 896, 857, 753,
	0, 875, 876, 0, 0, 0, 0, 0, 863, 882,
	883, 845, 906, 796, 169, 742, 745, 746, 747, 755,
	812, 813, 825, 828, 871, 870, 869, 872, 877, 900,
	899, 901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 824, 133, 144, 223, 907, 291, 193,
	362, 737, 179, 0, 814, 817, 827, 852, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 850,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 879, 339, 793, 135,
	873, 903, 836, 847, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 182, 556,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 677, 224, 0,
	0, 535, 326, 249, 0, 0, 0, 0, 666, 667,
	0, 0, 0, 0, 0, 0, 1647, 0, 81, 0,
	0, 0, 557, 580, 579, 582, 583, 584, 585, 0,
	0, 540, 581, 586, 619, 620, 1648, 0, 0, 554,
	571, 0, 676, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 499, 0, 0, 0, 0,
	568, 569, 0, 0, 0, 0, 689, 0, 570, 0,
	0, 566, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 668, 0, 0, 212,
	539, 0, 0, 687, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 594, 480, 0,
	0, 0, 172, 0, 300, 269, 358, 596, 0, 299,
	225, 348, 0, 0, 357, 0, 526, 367, 372, 492,
	0, 487, 323, 184, 180, 183, 0, 137, 500, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 504, 502, 0, 0,
	363, 505, 311, 310, 0, 207, 0, 513, 481, 292,
	517, 213, 136, 336, 375, 154, 219, 341, 479, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 495, 519, 0, 290, 313, 343, 156, 330,
	493, 494, 496, 523, 302, 525, 531, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 482,
	0, 328, 361, 377, 158, 0, 316, 342, 503, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 678, 688,
	684, 686, 685, 682, 683, 681, 680, 679, 690, 669,
	670, 671, 672, 673, 0, 0, 0, 675, 0, 613,
	614, 0, 0, 0, 169, 587, 588, 589, 590, 591,
	597, 598, 602, 603, 611, 610, 609, 612, 615, 617,
	616, 618, 592, 593, 595, 599, 600, 601, 604, 605,
	608, 606, 607, 674, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 521,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 36, 339, 0, 135,
	0, 0, 516, 518, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 182, 556,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 677, 224, 0,
	0, 535, 326, 249, 0, 0, 0, 0, 666, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 557, 580, 579, 582, 583, 584, 585, 0,
	0, 540, 581, 586, 619, 620, 0, 0, 0, 554,
	571, 0, 676, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 499, 0, 0, 0, 0,
	568, 569, 0, 0, 0, 0, 689, 0, 570, 0,
	0, 566, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 668, 0, 0, 212,
	539, 0, 0, 687, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 594, 480, 0,
	0, 0, 172, 0, 300, 269, 358, 596, 0, 299,
	225, 348, 0, 0, 357, 0, 526, 367, 372, 492,
	0, 487, 323, 184, 180, 183, 0, 137, 500, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 504, 502, 0, 0,
	363, 505, 311, 310, 0, 207, 0, 513, 481, 292,
	517, 213, 136, 336, 375, 154, 219, 341, 479, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 495, 519, 0, 290, 313, 343, 156, 330,
	493, 494, 496, 523, 302, 525, 531, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 482,
	0, 328, 361, 377, 158, 0, 316, 342, 503, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 678, 688,
	684, 686, 685, 682, 683, 681, 680, 679, 690, 669,
	670, 671, 672, 673, 0, 0, 0, 675, 0, 613,
	614, 0, 0, 0, 169, 587, 588, 589, 590, 591,
	597, 598, 602, 603, 611, 610, 609, 612, 615, 617,
	616, 618, 592, 593, 595, 599, 600, 601, 604, 605,
	608, 606, 607, 674, 133, 144, 223, 79, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 521,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 516, 518, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 182, 556, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 677, 224, 0, 0,
	535, 326, 249, 0, 0, 0, 0, 666, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 557, 580, 579, 582, 583, 584, 585, 0, 0,
	540, 581, 586, 619, 620, 0, 0, 0, 554, 571,
	0, 676, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 499, 0, 0, 0, 0, 568,
	569, 550, 0, 0, 0, 689, 0, 570, 0, 0,
	566, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 668, 0, 0, 212, 539,
	0, 0, 687, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 594, 480, 0, 0,
	0, 172, 0, 300, 269, 358, 596, 0, 299, 225,
	348, 0, 0, 357, 0, 526, 367, 372, 492, 0,
	487, 323, 184, 180, 183, 0, 137, 500, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 363,
	505, 311, 310, 0, 207, 0, 513, 481, 292, 517,
	213, 136, 336, 375, 154, 219, 341, 479, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 495, 519, 0, 290, 313, 343, 156, 330, 493,
	494, 496, 523, 302, 525, 531, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 482, 0,
	328, 361, 377, 158, 0, 316, 342, 503, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 678, 688, 684,
	686, 685, 682, 683, 681, 680, 679, 690, 669, 670,
	671, 672, 673, 0, 0, 0, 675, 0, 613, 614,
	0, 0, 0, 169, 587, 588, 589, 590, 591, 597,
	598, 602, 603, 611, 610, 609, 612, 615, 617, 616,
	618, 592, 593, 595, 599, 600, 601, 604, 605, 608,
	606, 607, 674, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 521, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 516, 518, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 182, 556, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 677, 224, 0, 0, 535,
	326, 249, 0, 0, 0, 0, 666, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 1088, 0,
	557, 580, 579, 582, 583, 584, 585, 0, 0, 540,
	581, 586, 619, 620, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 554, 571, 0, 676,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 499, 0, 0, 0, 0, 568, 569, 1534,
	0, 0, 0, 689, 0, 570, 0, 0, 566, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 668, 0, 0, 212, 539, 0, 0,
	687, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 594, 480, 0, 0, 0, 172,
	0, 300, 269, 358, 596, 0, 299, 225, 348, 0,
	0, 357, 0, 526, 367, 372, 492, 0, 487, 323,
	184, 180, 183, 0, 137, 500, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 363, 505, 311,
	310, 0, 207, 0, 513, 481, 292, 517, 213, 136,
	336, 375, 154, 219, 341, 479, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 495,
	519, 0, 290, 313, 343, 156, 330, 493, 494, 496,
	523, 302, 525, 531, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 482, 0, 328, 361,
	377, 158, 0, 316, 342, 503, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 678, 688, 684, 686, 685,
	682, 683, 681, 680, 679, 690, 669, 670, 671, 672,
	673, 0, 0, 0, 675, 0, 613, 614, 0, 0,
	0, 169, 587, 588, 589, 590, 591, 597, 598, 602,
	603, 611, 610, 609, 612, 615, 617, 616, 618, 592,
	593, 595, 599, 600, 601, 604, 605, 608, 606, 607,
	674, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 521, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 182, 556, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 677, 224, 0, 0, 535, 326, 249,
	0, 0, 0, 0, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 557, 580,
	1581, 582, 583, 584, 585, 0, 0, 540, 581, 586,
	619, 620, 0, 0, 0, 554, 571, 0, 676, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 499, 0, 0, 0, 0, 568, 569, 1534, 0,
	0, 0, 689, 0, 570, 0, 0, 566, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 668, 0, 0, 212, 539, 0, 0, 687,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 594, 480, 0, 0, 0, 172, 0,
	300, 269, 358, 596, 0, 299, 225, 348, 0, 0,
	357, 0, 526, 367, 372, 492, 0, 487, 323, 184,
	180, 183, 0, 137, 500, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 363, 505, 311, 310,
	0, 207, 0, 513, 481, 292, 517, 213, 136, 336,
	375, 154, 219, 341, 479, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 495, 519,
	0, 290, 313, 343, 156, 330, 493, 494, 496, 523,
	302, 525, 531, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 482, 0, 328, 361, 377,
	158, 0, 316, 342, 503, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 678, 688, 684, 686, 685, 682,
	683, 681, 680, 679, 690, 669, 670, 671, 672, 673,
	0, 0, 0, 675, 0, 613, 614, 0, 0, 0,
	169, 587, 588, 589, 590, 591, 597, 598, 602, 603,
	611, 610, 609, 612, 615, 617, 616, 618, 592, 593,
	595, 599, 600, 601, 604, 605, 608, 606, 607, 674,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 521, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 516, 518,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 182, 556, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 677, 224, 0, 0, 535, 326, 249, 0,
	0, 0, 0, 666, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 557, 580, 1578,
	582, 583, 584, 585, 0, 0, 540, 581, 586, 619,
	620, 0, 0, 0, 554, 571, 0, 676, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	499, 0, 0, 0, 0, 568, 569, 1534, 0, 0,
	0, 689, 0, 570, 0, 0, 566, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 668, 0, 0, 212, 539, 0, 0, 687, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 594, 480, 0, 0, 0, 172, 0, 300,
	269, 358, 596, 0, 299, 225, 348, 0, 0, 357,
	0, 526, 367, 372, 492, 0, 487, 323, 184, 180,
	183, 0, 137, 500, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 363, 505, 311, 310, 0,
	207, 0, 513, 481, 292, 517, 213, 136, 336, 375,
	154, 219, 341, 479, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 495, 519, 0,
	290, 313, 343, 156, 330, 493, 494, 496, 523, 302,
	525, 531, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 482, 0, 328, 361, 377, 158,
	0, 316, 342, 503, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 678, 688, 684, 686, 685, 682, 683,
	681, 680, 679, 690, 669, 670, 671, 672, 673, 0,
	0, 0, 675, 0, 613, 614, 0, 0, 0, 169,
	587, 588, 589, 590, 591, 597, 598, 602, 603, 611,
	610, 609, 612, 615, 617, 616, 618, 592, 593, 595,
	599, 600, 601, 604, 605, 608, 606, 607, 674, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 521, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 516, 518, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 182, 556, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 677, 224, 0, 0, 535, 326, 249, 0, 0,
	0, 0, 666, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 1415, 0, 557, 580, 579, 582,
	583, 584, 585, 0, 0, 540, 581, 586, 619, 620,
	0, 0, 0, 554, 571, 0, 676, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 499,
	0, 0, 0, 0, 568, 569, 0, 0, 0, 0,
	689, 0, 570, 0, 0, 566, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	668, 0, 0, 212, 539, 0, 0, 687, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 594, 480, 0, 0, 0, 172, 0, 300, 269,
	358, 596, 0, 299, 225, 348, 0, 0, 357, 0,
	526, 367, 372, 492, 0, 487, 323, 184, 180, 183,
	0, 137, 500, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	504, 502, 0, 0, 363, 505, 311, 310, 0, 207,
	0, 513, 481, 292, 517, 213, 136, 336, 375, 154,
	219, 341, 479, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 495, 519, 0, 290,
	313, 343, 156, 330, 493, 494, 496, 523, 302, 525,
	531, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 482, 0, 328, 361, 377, 158, 0,
	316, 342, 503, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 678, 688, 684, 686, 685, 682, 683, 681,
	680, 679, 690, 669, 670, 671, 672, 673, 0, 0,
	0, 675, 0, 613, 614, 0, 0, 0, 169, 587,
	588, 589, 590, 591, 597, 598, 602, 603, 611, 610,
	609, 612, 615, 617, 616, 618, 592, 593, 595, 599,
	600, 601, 604, 605, 608, 606, 607, 674, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 521, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 516, 518, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 182, 556, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	677, 224, 0, 0, 535, 326, 249, 0, 0, 0,
	0, 666, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 557, 580, 579, 582, 583,
	584, 585, 0, 0, 540, 581, 586, 619, 620, 0,
	0, 0, 554, 571, 0, 676, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 499, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 689,
	0, 570, 0, 0, 566, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 668,
	0, 0, 212, 539, 0, 0, 687, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	594, 480, 0, 0, 0, 172, 0, 300, 269, 358,
	596, 0, 299, 225, 348, 0, 0, 357, 0, 526,
	367, 372, 492, 0, 487, 323, 184, 180, 183, 0,
	137, 500, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 363, 505, 311, 310, 0, 207, 0,
	513, 481, 292, 517, 213, 136, 336, 375, 154, 219,
	341, 479, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 495, 519, 0, 290, 313,
	343, 156, 330, 493, 494, 496, 523, 302, 525, 531,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 482, 0, 328, 361, 377, 158, 0, 316,
	342, 503, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 678, 688, 684, 686, 685, 682, 683, 681, 680,
	679, 690, 669, 670, 671, 672, 673, 0, 0, 0,
	675, 0, 613, 614, 0, 0, 0, 169, 587, 588,
	589, 590, 591, 597, 598, 602, 603, 611, 610, 609,
	612, 615, 617, 616, 618, 592, 593, 595, 599, 600,
	601, 604, 605, 608, 606, 607, 674, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 521, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 516, 518, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 677,
	224, 0, 0, 535, 326, 249, 0, 0, 0, 0,
	666, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 557, 580, 579, 582, 583, 584,
	585, 0, 0, 540, 581, 586, 619, 620, 0, 0,
	0, 0, 571, 0, 676, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 499, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 689, 0,
	570, 0, 0, 566, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 668, 0,
	0, 212, 539, 0, 0, 687, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 594,
	480, 0, 0, 0, 172, 0, 300, 269, 358, 596,
	0, 299, 225, 348, 0, 0, 357, 0, 526, 367,
	372, 492, 0, 487, 323, 184, 180, 183, 0, 137,
	500, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 363, 505, 311, 310, 0, 207, 0, 513,
	481, 292, 517, 213, 136, 336, 375, 154, 219, 341,
	479, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 495, 519, 0, 290, 313, 343,
	156, 330, 493, 494, 496, 523, 302, 525, 531, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 482, 0, 328, 361, 377, 158, 0, 316, 342,
	503, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	678, 688, 684, 686, 685, 682, 683, 681, 680, 679,
	690, 669, 670, 671, 672, 673, 1584, 1585, 1586, 675,
	0, 613, 614, 0, 0, 0, 169, 587, 588, 589,
	590, 591, 597, 598, 602, 603, 611, 610, 609, 612,
	615, 617, 616, 618, 592, 593, 595, 599, 600, 601,
	604, 605, 608, 606, 607, 674, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 521, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 516, 518, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 677, 224,
	0, 0, 535, 326, 249, 0, 0, 0, 0, 666,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 557, 580, 579, 582, 583, 584, 585,
	0, 0, 540, 581, 586, 619, 620, 0, 0, 0,
	0, 571, 0, 676, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 499, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 689, 0, 570,
	0, 0, 566, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 668, 0, 0,
	212, 539, 0, 0, 687, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 594, 480,
	0, 0, 0, 172, 0, 300, 269, 358, 596, 2948,
	299, 225, 348, 0, 0, 357, 0, 526, 367, 372,
	492, 0, 487, 323, 184, 180, 183, 0, 137, 500,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 363, 505, 311, 310, 0, 207, 0, 513, 481,
	292, 517, 213, 136, 336, 375, 154, 219, 341, 479,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 495, 519, 0, 290, 313, 343, 156,
	330, 493, 494, 496, 523, 302, 525, 531, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	482, 0, 328, 361, 377, 158, 0, 316, 342, 503,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 678,
	688, 684, 686, 685, 682, 683, 681, 680, 679, 690,
	669, 670, 671, 672, 673, 0, 0, 0, 675, 0,
	613, 614, 0, 0, 0, 169, 587, 588, 589, 590,
	591, 597, 598, 602, 603, 611, 610, 609, 612, 615,
	617, 616, 618, 592, 593, 595, 599, 600, 601, 604,
	605, 608, 606, 607, 674, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	521, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 516, 518, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 677, 224, 0,
	0, 535, 326, 249, 0, 0, 0, 0, 666, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1088, 0, 557, 580, 579, 582, 583, 584, 585, 0,
	0, 540, 581, 586, 619, 620, 0, 0, 0, 0,
	571, 0, 676, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 499, 0, 0, 0, 0,
	568, 569, 0, 0, 0, 0, 689, 0, 570, 0,
	0, 566, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 668, 0, 0, 212,
	539, 0, 0, 687, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 594, 480, 0,
	0, 0, 172, 0, 300, 269, 358, 596, 0, 299,
	225, 348, 0, 0, 357, 0, 526, 367, 372, 492,
	0, 487, 323, 184, 180, 183, 0, 137, 500, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 504, 502, 0, 0,
	363, 505, 311, 310, 0, 207, 0, 513, 481, 292,
	517, 213, 136, 336, 375, 154, 219, 341, 479, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 495, 519, 0, 290, 313, 343, 156, 330,
	493, 494, 496, 523, 302, 525, 531, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 482,
	0, 328, 361, 377, 158, 0, 316, 342, 503, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 678, 688,
	684, 686, 685, 682, 683, 681, 680, 679, 690, 669,
	670, 671, 672, 673, 0, 0, 0, 675, 0, 613,
	614, 0, 0, 0, 169, 587, 588, 589, 590, 591,
	597, 598, 602, 603, 611, 610, 609, 612, 615, 617,
	616, 618, 592, 593, 595, 599, 600, 601, 604, 605,
	608, 606, 607, 674, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 521,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 516, 518, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 677, 224, 0, 0,
	535, 326, 249, 0, 0, 0, 0, 666, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 557, 580, 579, 582, 583, 584, 585, 0, 0,
	540, 581, 586, 619, 620, 0, 0, 0, 0, 571,
	0, 676, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 499, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 689, 0, 570, 0, 0,
	566, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 668, 0, 0, 212, 539,
	0, 0, 687, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 594, 480, 0, 0,
	0, 172, 0, 300, 269, 358, 596, 0, 299, 225,
	348, 0, 0, 357, 0, 526, 367, 372, 492, 0,
	487, 323, 184, 180, 183, 0, 137, 500, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 363,
	505, 311, 310, 0, 207, 0, 513, 481, 292, 517,
	213, 136, 336, 375, 154, 219, 341, 479, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 495, 519, 0, 290, 313, 343, 156, 330, 493,
	494, 496, 523, 302, 525, 531, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 482, 0,
	328, 361, 377, 158, 0, 316, 342, 503, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 678, 688, 684,
	686, 685, 682, 683, 681, 680, 679, 690, 669, 670,
	671, 672, 673, 0, 0, 0, 675, 0, 613, 614,
	0, 0, 0, 169, 587, 588, 589, 590, 591, 597,
	598, 602, 603, 611, 610, 609, 612, 615, 617, 616,
	618, 592, 593, 595, 599, 600, 601, 604, 605, 608,
	606, 607, 674, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 521, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 516, 518, 0, 0, 0, 265, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 0, 224, 0, 0, 535,
	326, 249, 0, 0, 0, 0, 1378, 0, 0, 0,
	0, 0, 1626, 1628, 0, 0, 0, 0, 0, 0,
	128, 0, 478, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	1627, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 1628, 0, 0, 0, 0, 0, 0, 128,
	0, 478, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 1622, 293, 314,
	0, 284, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 0, 0, 0, 212, 539, 0, 1627,
	0, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 497, 480, 0, 0, 0, 172,
	0, 300, 269, 358, 501, 0, 299, 225, 348, 0,
	0, 357, 0, 526, 367, 372, 492, 0, 487, 323,
	184, 180, 183, 0, 137, 500, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 363, 505, 311,
	310, 0, 207, 0, 513, 481, 292, 517, 213, 136,
	336, 375, 154, 219, 341, 479, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 495,
	519, 0, 290, 313, 343, 156, 330, 493, 494, 496,
	523, 302, 525, 531, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 482, 0, 328, 361,
	377, 158, 0, 316, 342, 503, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 533, 0, 0,
	0, 169, 483, 484, 485, 486, 488, 506, 507, 511,
	512, 529, 528, 527, 530, 534, 537, 536, 538, 489,
	490, 498, 508, 509, 510, 514, 515, 524, 520, 522,
	0, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 521, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 265, 0, 0, 0, 0, 1110,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 535, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1111, 0,
	1114, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 1107, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 1108, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 0, 0, 0, 212, 539, 0, 0, 0,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 497, 480, 0, 0, 0, 172, 0,
	300, 269, 358, 501, 0, 299, 225, 348, 0, 0,
	357, 0, 526, 367, 372, 492, 0, 487, 323, 184,
	180, 183, 0, 137, 500, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 363, 505, 311, 310,
	0, 207, 0, 513, 481, 292, 517, 213, 136, 336,
	375, 154, 219, 341, 479, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 495, 519,
	0, 290, 313, 343, 156, 330, 493, 494, 496, 523,
	302, 525, 531, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 482, 0, 328, 361, 377,
	158, 0, 316, 342, 503, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 533, 0, 0, 0,
	169, 483, 484, 485, 486, 488, 506, 507, 511, 512,
	529, 528, 527, 530, 534, 537, 536, 538, 489, 490,
	498, 508, 509, 510, 514, 515, 524, 520, 522, 0,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 521, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 516, 518,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 0, 224, 0, 0, 535, 326, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 0, 478,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 0, 0, 0, 212, 539, 0, 0, 0, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 497, 480, 0, 0, 0, 172, 0, 300,
	269, 358, 501, 0, 299, 225, 348, 0, 0, 357,
	0, 526, 367, 372, 492, 0, 487, 323, 184, 180,
	183, 0, 137, 500, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 363, 505, 311, 310, 0,
	207, 0, 513, 481, 292, 517, 213, 136, 336, 375,
	154, 219, 341, 479, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 495, 519, 0,
	290, 313, 343, 156, 330, 493, 494, 496, 523, 302,
	525, 531, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 482, 0, 328, 361, 377, 158,
	0, 316, 342, 503, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 533, 0, 0, 0, 169,
	483, 484, 485, 486, 488, 506, 507, 511, 512, 529,
	528, 527, 530, 534, 537, 536, 538, 489, 490, 498,
	508, 509, 510, 514, 515, 524, 520, 522, 0, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 473, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 521, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 516, 518, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 221, 1939, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 0, 224, 0, 0, 535, 326, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 478, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	0, 0, 0, 212, 539, 0, 0, 0, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 497, 480, 0, 0, 0, 172, 0, 300, 269,
	358, 501, 0, 299, 225, 348, 0, 0, 357, 0,
	526, 367, 372, 492, 0, 487, 323, 184, 180, 183,
	0, 137, 500, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	504, 502, 0, 0, 363, 505, 311, 310, 0, 207,
	0, 513, 481, 292, 517, 213, 136, 336, 375, 154,
	219, 341, 479, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 495, 519, 0, 290,
	313, 343, 156, 330, 493, 494, 496, 523, 302, 525,
	531, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 482, 0, 328, 361, 377, 158, 0,
	316, 342, 503, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 533, 0, 0, 0, 169, 483,
	484, 485, 486, 488, 506, 507, 511, 512, 529, 528,
	527, 530, 534, 537, 536, 538, 489, 490, 498, 508,
	509, 510, 514, 515, 524, 520, 522, 0, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 521, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 516, 518, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	0, 224, 0, 0, 535, 326, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 478, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 539, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	497, 480, 0, 0, 0, 172, 0, 300, 269, 358,
	501, 0, 299, 225, 348, 0, 0, 357, 0, 526,
	367, 372, 492, 0, 487, 323, 184, 180, 183, 0,
	137, 500, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 363, 505, 311, 310, 0, 207, 0,
	513, 481, 292, 517, 213, 136, 336, 375, 154, 219,
	341, 479, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 495, 519, 0, 290, 313,
	343, 156, 330, 493, 494, 496, 523, 302, 525, 531,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 482, 0, 328, 361, 377, 158, 0, 316,
	342, 503, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 533, 0, 0, 0, 169, 483, 484,
	485, 486, 488, 506, 507, 511, 512, 529, 528, 527,
	530, 534, 537, 536, 538, 489, 490, 498, 508, 509,
	510, 514, 515, 524, 520, 522, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 521, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 516, 518, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 535, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1111, 0, 1114, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 539, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 497,
	480, 0, 0, 0, 172, 0, 300, 269, 358, 501,
	0, 299, 225, 348, 0, 0, 357, 0, 526, 367,
	372, 492, 0, 487, 323, 184, 180, 183, 0, 137,
	500, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 363, 505, 311, 310, 0, 207, 0, 513,
	481, 292, 517, 213, 136, 336, 375, 154, 219, 341,
	479, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 495, 519, 0, 290, 313, 343,
	156, 330, 493, 494, 496, 523, 302, 525, 531, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 482, 0, 328, 361, 377, 158, 0, 316, 342,
	503, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 533, 0, 0, 0, 169, 483, 484, 485,
	486, 488, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 489, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 521, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 516, 518, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 535, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 0, 0, 0,
	212, 539, 0, 0, 0, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 497, 480,
	0, 0, 0, 172, 0, 300, 269, 358, 501, 0,
	299, 225, 348, 0, 0, 357, 0, 526, 367, 372,
	492, 0, 487, 323, 184, 180, 183, 0, 137, 500,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 363, 505, 311, 310, 0, 207, 0, 513, 481,
	292, 517, 213, 136, 336, 375, 154, 219, 341, 479,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 495, 519, 0, 290, 313, 343, 156,
	330, 493, 494, 496, 523, 302, 525, 531, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	482, 0, 328, 361, 377, 158, 0, 316, 342, 503,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 533, 0, 0, 0, 169, 483, 484, 485, 486,
	488, 506, 507, 511, 512, 529, 528, 527, 530, 534,
	537, 536, 538, 489, 490, 498, 508, 509, 510, 514,
	515, 524, 520, 522, 0, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	521, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 0, 0, 0,
	135, 0, 0, 516, 518, 447, 339, 441, 452, 435,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	458, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	442, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 0, 224, 0, 0,
	0, 326, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 433, 436,
	0, 0, 0, 250, 148, 0, 0, 440, 212, 0,
	0, 0, 0, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 444, 308, 0, 0, 448, 0,
	0, 172, 0, 300, 269, 358, 0, 0, 299, 225,
	348, 0, 451, 357, 0, 0, 367, 372, 0, 0,
	0, 323, 184, 180, 183, 0, 137, 0, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 311, 310, 0, 207, 0, 0, 0, 292, 0,
	213, 136, 336, 375, 154, 219, 341, 0, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 0, 0, 0, 461, 313, 343, 156, 330, 437,
	438, 439, 445, 446, 449, 450, 453, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 0, 0,
	328, 361, 377, 158, 0, 316, 342, 0, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 443, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 0, 0, 0, 135, 447,
	339, 441, 452, 435, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 427, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 442, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	0, 224, 0, 0, 0, 326, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 433, 436, 0, 0, 0, 250, 148, 0,
	0, 440, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 444, 308,
	0, 0, 448, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 451, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 430, 313,
	343, 156, 330, 437, 438, 439, 445, 446, 449, 450,
	453, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 443, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 1124, 1123,
	1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125,
	0, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 0,
	0, 0, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 0, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 0,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 290, 313, 343,
	156, 330, 0, 0, 0, 0, 302, 0, 0, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 0, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 2865, 0, 0, 0, 0, 0, 0, 182,
	2863, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 0, 0, 0,
	212, 0, 0, 0, 0, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 0, 0,
	0, 0, 0, 172, 0, 300, 269, 358, 0, 0,
	299, 225, 348, 0, 0, 357, 0, 0, 367, 372,
	0, 0, 0, 323, 184, 180, 183, 0, 137, 0,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 311, 310, 0, 207, 0, 2864, 0,
	292, 0, 213, 136, 336, 375, 154, 219, 341, 0,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 0, 0, 0, 290, 313, 343, 156,
	330, 0, 0, 0, 0, 302, 0, 0, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	0, 0, 328, 361, 377, 158, 0, 316, 342, 0,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	0, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 36, 339, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 1619, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 0, 0, 0,
	212, 0, 0, 0, 0, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 0, 0,
	0, 0, 0, 172, 0, 300, 269, 358, 0, 0,
	299, 225, 348, 0, 0, 357, 0, 0, 367, 372,
	0, 0, 0, 323, 184, 180, 183, 0, 137, 0,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 311, 310, 0, 207, 0, 0, 0,
	292, 0, 213, 136, 336, 375, 154, 219, 341, 0,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 0, 0, 0, 290, 313, 343, 156,
	330, 0, 0, 0, 0, 302, 0, 0, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	0, 0, 328, 361, 377, 158, 0, 316, 342, 0,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 223, 79, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	0, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 0, 224, 0,
	0, 0, 326, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2042, 359,
	276, 293, 314, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 0, 0, 0, 212,
	0, 0, 0, 0, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 0, 0, 0,
	0, 0, 172, 0, 300, 269, 358, 0, 0, 299,
	225, 348, 0, 0, 357, 0, 0, 367, 372, 0,
	0, 0, 323, 184, 180, 183, 0, 137, 0, 283,
	177, 217, 2043, 2044, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 311, 310, 0, 207, 0, 0, 0, 292,
	0, 213, 136, 336, 375, 154, 219, 341, 0, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 0, 0, 0, 290, 313, 343, 156, 330,
	0, 0, 0, 0, 302, 0, 0, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 0,
	0, 328, 361, 377, 158, 0, 316, 342, 0, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 0,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 0, 224, 0, 0,
	0, 326, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 0, 0, 0, 212, 0,
	0, 0, 0, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 0, 0, 0, 0,
	0, 172, 0, 300, 269, 358, 0, 0, 299, 225,
	348, 0, 0, 357, 0, 0, 367, 372, 0, 0,
	0, 323, 184, 180, 183, 0, 137, 0, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 311, 310, 0, 207, 0, 0, 0, 292, 0,
	213, 136, 336, 375, 154, 219, 341, 0, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 0, 0, 0, 290, 313, 343, 156, 330, 0,
	0, 0, 0, 302, 0, 0, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 0, 0,
	328, 361, 377, 158, 0, 316, 342, 0, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 0, 0, 0,
	1401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 0, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 1261, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 0, 224, 0, 0, 0,
	326, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 1260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 0, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 0, 0, 0, 0, 0,
	172, 0, 300, 269, 358, 0, 0, 299, 225, 348,
	0, 0, 357, 0, 0, 367, 372, 0, 0, 0,
	323, 184, 180, 183, 0, 137, 0, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	311, 310, 0, 207, 0, 0, 0, 292, 0, 213,
	136, 336, 375, 154, 219, 341, 0, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	0, 0, 0, 290, 313, 343, 156, 330, 0, 0,
	0, 0, 302, 0, 0, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 0, 0, 328,
	361, 377, 158, 0, 316, 342, 0, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 0, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 0, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 0, 0, 0, 212, 0, 0, 0,
	0, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 0, 0, 0, 0, 0, 172,
	0, 300, 269, 358, 0, 0, 299, 225, 348, 0,
	0, 357, 0, 0, 367, 372, 0, 0, 0, 323,
	184, 180, 183, 0, 137, 0, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 311,
	310, 0, 207, 0, 0, 0, 292, 0, 213, 136,
	336, 375, 154, 219, 341, 0, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 0,
	0, 0, 290, 313, 343, 156, 330, 0, 0, 0,
	0, 302, 0, 0, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 0, 0, 328, 361,
	377, 158, 0, 316, 342, 0, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 0, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 0, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 0, 0, 0, 212, 0, 0, 0, 0,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 0, 0, 0, 0, 0, 172, 0,
	300, 269, 358, 0, 0, 299, 225, 348, 0, 0,
	357, 0, 0, 367, 372, 0, 0, 0, 323, 184,
	180, 183, 0, 137, 0, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 311, 310,
	0, 207, 0, 0, 0, 292, 0, 213, 136, 336,
	375, 154, 219, 341, 0, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 0, 0,
	0, 290, 313, 343, 156, 330, 0, 0, 0, 0,
	302, 0, 0, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 0, 0, 328, 361, 377,
	158, 0, 316, 342, 0, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 0, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 0, 224, 0, 0, 0, 326, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 2306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 0, 0, 0, 212, 0, 0, 0, 0, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 0, 0, 0, 0, 0, 172, 0, 300,
	269, 358, 0, 0, 299, 225, 348, 0, 0, 357,
	0, 0, 367, 372, 0, 0, 0, 323, 184, 180,
	183, 0, 137, 0, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 311, 310, 0,
	207, 0, 0, 0, 292, 0, 213, 136, 336, 375,
	154, 219, 341, 0, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 0, 0, 0,
	290, 313, 343, 156, 330, 0, 0, 0, 0, 302,
	0, 0, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 0, 0, 328, 361, 377, 158,
	0, 316, 342, 0, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 0, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 0, 224, 0, 0, 0, 326, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	0, 0, 0, 212, 0, 0, 0, 0, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 0, 0, 0, 0, 0, 172, 0, 300, 269,
	358, 0, 0, 299, 225, 348, 0, 0, 357, 0,
	0, 367, 372, 0, 0, 0, 323, 184, 180, 183,
	0, 137, 0, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 311, 310, 0, 207,
	0, 0, 0, 292, 0, 213, 136, 336, 375, 154,
	219, 341, 0, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 0, 0, 0, 290,
	313, 343, 156, 330, 0, 0, 0, 0, 302, 0,
	0, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 0, 0, 328, 361, 377, 158, 0,
	316, 342, 0, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 0, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	0, 224, 0, 0, 0, 326, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 0,
	0, 0, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 0, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 0,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 290, 313, 343,
	156, 330, 0, 0, 0, 0, 302, 0, 0, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 0, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 693, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 0, 0, 0,
	212, 0, 0, 0, 0, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 0, 0,
	0, 0, 0, 172, 0, 300, 269, 358, 0, 0,
	299, 225, 348, 0, 0, 357, 0, 0, 367, 372,
	0, 0, 0, 323, 184, 180, 183, 0, 137, 0,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 311, 310, 0, 207, 0, 0, 0,
	292, 0, 213, 136, 336, 375, 154, 219, 341, 0,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 0, 0, 0, 290, 313, 343, 156,
	330, 0, 0, 0, 0, 302, 0, 0, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	0, 0, 328, 361, 377, 158, 0, 316, 342, 0,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	0, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 0, 224, 0,
	0, 0, 326, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 0, 125, 0, 212,
	0, 0, 0, 0, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 0, 0, 0,
	0, 0, 172, 0, 300, 269, 358, 0, 0, 299,
	225, 348, 0, 0, 357, 0, 0, 367, 372, 0,
	0, 0, 323, 184, 180, 183, 0, 137, 0, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 311, 310, 0, 207, 0, 0, 0, 292,
	0, 213, 136, 336, 375, 154, 219, 341, 0, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 0, 0, 0, 290, 313, 343, 156, 330,
	0, 0, 0, 0, 302, 0, 0, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 0,
	0, 328, 361, 377, 158, 0, 316, 342, 0, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 0,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 0, 224, 0, 0,
	0, 326, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 0, 0, 0, 212, 0,
	0, 0, 0, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 0, 0, 0, 0,
	0, 172, 0, 300, 269, 358, 0, 0, 299, 225,
	348, 0, 0, 357, 0, 0, 367, 372, 0, 0,
	0, 323, 184, 180, 183, 0, 137, 0, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 311, 310, 0, 207, 0, 0, 0, 292, 0,
	213, 136, 336, 375, 154, 219, 341, 0, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 0, 0, 0, 290, 313, 343, 156, 330, 0,
	0, 0, 0, 302, 0, 0, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 0, 0,
	328, 361, 377, 158, 0, 316, 342, 0, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 0, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 0, 224, 0, 0, 0,
	326, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 0, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 0, 0, 0, 0, 0,
	172, 0, 300, 269, 358, 0, 0, 299, 225, 348,
	0, 0, 357, 0, 0, 367, 372, 0, 0, 0,
	323, 184, 180, 183, 0, 137, 0, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	311, 310, 0, 207, 0, 0, 0, 292, 0, 213,
	136, 336, 375, 154, 219, 341, 0, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	0, 0, 0, 290, 313, 343, 156, 330, 0, 0,
	0, 0, 302, 0, 0, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 0, 0, 328,
	361, 377, 158, 0, 316, 342, 0, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 0, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 0, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 0, 0, 0, 212, 0, 0, 0,
	0, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 0, 0, 0, 0, 0, 172,
	0, 300, 269, 358, 0, 0, 299, 225, 348, 0,
	0, 357, 0, 0, 367, 372, 0, 0, 0, 323,
	184, 180, 183, 0, 137, 0, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 311,
	310, 0, 207, 0, 0, 0, 292, 0, 213, 136,
	336, 375, 154, 219, 341, 0, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 0,
	0, 0, 290, 313, 343, 156, 330, 0, 0, 0,
	0, 302, 0, 0, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 0, 0, 328, 361,
	377, 158, 0, 316, 342, 0, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 0, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 0, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 0, 0, 0, 212, 0, 0, 0, 0,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 0, 0, 0, 0, 0, 172, 0,
	300, 269, 358, 0, 0, 299, 225, 348, 0, 0,
	357, 0, 0, 367, 372, 0, 0, 0, 323, 184,
	180, 183, 0, 137, 0, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 311, 310,
	0, 207, 0, 0, 0, 292, 0, 213, 136, 336,
	375, 154, 219, 341, 0, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 0, 0,
	0, 290, 313, 343, 156, 330, 0, 0, 0, 0,
	302, 0, 0, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 713, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 709, 235, 0, 0, 0, 328, 361, 377,
	158, 0, 316, 342, 0, 289, 159, 195, 188, 280,
	714, 712, 703, 704, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 710, 711, 287, 0, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 0, 224, 0, 0, 0, 326, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 0, 0, 0, 212, 0, 0, 0, 0, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 0, 0, 0, 0, 0, 172, 0, 300,
	269, 358, 0, 0, 299, 225, 348, 0, 0, 357,
	0, 0, 367, 372, 0, 0, 0, 323, 184, 180,
	183, 0, 137, 0, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 311, 310, 0,
	207, 0, 0, 0, 292, 0, 213, 136, 336, 375,
	154, 219, 341, 0, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 0, 0, 0,
	290, 313, 343, 156, 330, 0, 0, 0, 0, 302,
	0, 0, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 1255, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 0, 0, 328, 361, 377, 158,
	0, 316, 342, 0, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 0, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 0, 224, 0, 0, 0, 326, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	0, 0, 0, 212, 0, 0, 0, 0, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 0, 0, 0, 0, 0, 172, 0, 300, 269,
	358, 0, 0, 299, 225, 348, 0, 0, 357, 0,
	0, 367, 372, 0, 0, 0, 323, 184, 180, 183,
	0, 137, 0, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 311, 310, 0, 207,
	0, 0, 0, 292, 0, 213, 136, 336, 375, 154,
	219, 341, 0, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 0, 0, 0, 290,
	313, 343, 156, 330, 0, 0, 0, 0, 302, 0,
	0, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 700, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 713, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	709, 235, 0, 0, 0, 328, 361, 377, 158, 0,
	316, 342, 0, 289, 159, 195, 188, 280, 714, 712,
	703, 704, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1329, 0, 0, 0, 169, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 499, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	710, 711, 287, 0, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 497,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	0, 492, 0, 487, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 0, 505, 0, 0, 0, 2321, 0, 513,
	481, 0, 517, 0, 0, 0, 540, 0, 0, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 495, 519, 0, 0, 0, 0,
	0, 0, 493, 494, 496, 523, 0, 525, 531, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2330, 0, 0, 0, 0, 0,
	0, 482, 0, 540, 0, 539, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 497, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 499, 0, 0,
	0, 526, 0, 0, 492, 0, 487, 0, 0, 0,
	0, 532, 533, 500, 0, 0, 0, 483, 484, 485,
	486, 488, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 489, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 513, 481, 0, 517, 0, 0, 0, 0,
	0, 0, 539, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 519, 497,
	480, 521, 0, 0, 0, 493, 494, 496, 523, 501,
	525, 531, 0, 0, 0, 0, 0, 0, 526, 0,
	0, 492, 0, 487, 516, 518, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 0, 505, 0, 0, 0, 2328, 0, 513,
	481, 0, 517, 0, 482, 0, 540, 0, 0, 0,
	479, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 495, 519, 0, 0, 0, 0,
	0, 0, 493, 494, 496, 523, 0, 525, 531, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 533, 0, 0, 0, 0,
	483, 484, 485, 486, 488, 506, 507, 511, 512, 529,
	528, 527, 530, 534, 537, 536, 538, 489, 490, 498,
	508, 509, 510, 514, 515, 524, 520, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 539, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 480, 521, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 0, 492, 0, 487, 516, 518, 0,
	0, 532, 533, 500, 0, 0, 0, 483, 484, 485,
	486, 488, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 489, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 513, 481, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 519, 0,
	0, 521, 0, 0, 0, 493, 494, 496, 523, 0,
	525, 531, 36, 37, 72, 39, 40, 0, 0, 0,
	0, 0, 0, 0, 516, 518, 59, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 41, 63, 64, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	0, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 41, 532, 533, 0, 0, 0, 0,
	483, 484, 485, 486, 488, 506, 507, 511, 512, 529,
	528, 527, 530, 534, 537, 536, 538, 489, 490, 498,
	508, 509, 510, 514, 515, 524, 520, 522, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 43, 74, 46, 45, 48, 36,
	0, 72, 39, 40, 0, 2755, 0, 0, 0, 0,
	2976, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 41, 521, 49, 77, 76, 0, 0,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 65, 516, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 58, 2755, 0, 0, 0, 0,
	2970, 43, 74, 46, 45, 48, 0, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 2756, 0, 0, 0,
	0, 0, 0, 0, 36, 0, 72, 39, 40, 0,
	0, 0, 49, 77, 76, 0, 0, 68, 59, 47,
	0, 0, 0, 0, 78, 0, 0, 0, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 75, 0, 53, 54,
	61, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 81, 0, 0, 0,
	57, 58, 0, 2757, 0, 0, 2756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	2755, 0, 49, 77, 76, 2956, 0, 0, 0, 47,
	0, 36, 0, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2758, 75, 73, 53, 54, 61, 0, 62,
	57, 58, 0, 2757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 2945, 0, 0, 66, 0, 67,
	0, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 36, 0, 72, 39, 40, 0, 2755, 0, 0,
	0, 2756, 0, 79, 68, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 2758, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 2755, 2757, 0,
	0, 0, 2890, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 2756, 0,
	79, 0, 0, 0, 0, 0, 36, 0, 72, 39,
	40, 0, 0, 0, 49, 77, 76, 0, 0, 68,
	59, 47, 0, 0, 0, 0, 78, 0, 0, 0,
	41, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2758, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 81, 0,
	0, 0, 57, 58, 0, 2757, 0, 0, 2756, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 2755, 0, 49, 77, 76, 0, 0, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2758, 75, 73, 53, 54, 61,
	0, 62, 57, 58, 0, 2757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2756, 0, 79, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 2758, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 67, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2758,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	37216, -1000, -359, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1787, -1000, -1000, -1000, -1000,
	-1000, -1000, 878, 292, -1000, 278, 122, 32750, 583, 3027,
	33828, -1000, -1000, -1000, 166, 367, 33828, 429, 456, 1188,
	1632, 1187, 30, -68, -69, 144, 25203, 24659, 5, -1000,
	1834, 1816, -1000, -1000, 446, 39, -1000, -1000, -1000, 21955,
	220, -1000, -1000, 1773, 1785, 1549, -1000, 14409, 446, 446,
	32211, 35984, -1000, 1833, 33828, 12790, -1000, 572, 546, -159,
	438, 438, 252, 438, 438, 582, -1000, 229, 842, -1000,
	-1000, -1000, -1000, 841, 33828, 28977, 440, 33289, 440, 440,
	440, 440, 440, 440, 440, 33828, -1000, 643, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33828, 1186,
	1669, 881, 132, -1000, -1000, -1000, 880, -1000, 315, 313,
	311, 290, 97, 896, 1769, -1000, 1395, 1773, 1773, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 301, 543, 225, 220,
	835, 1716, 1668, 1665, 1105, 1664, 541, 1661, 1442, -50,
	-1000, 1185, 33828, -1000, -1000, 1079, 1062, 1499, 1327, 566,
	1496, -1000, -1000, 337, 380, 1430, 431, 1430, 1430, 1430,
	1430, 1430, -70, 1430, 1430, 1430, 81, 1430, 139, 1430,
	1430, 1430, 1430, 1430, 1219, -1000, -1000, -1000, 358, 1316,
	1372, 1494, 416, -1000, -1000, -1000, -1000, 1456, 1758, 579,
	-1000, -103, 1378, 23033, -1000, 1395, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1194, 1666, 933, 17643, 1619, -1000, -1000, 926, 1819,
	-1000, 21416, 642, -1000, 17643, 1414, 1395, -1000, -1000, 1395,
	-1000, -1000, -1000, 604, -1000, -1000, 19799, 19799, 19799, 19799,
	19799, 19799, 19799, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1395, 1395, 1395,
	1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
	1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
	1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, -1000,
	-1000, 1395, -1000, 13870, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1395, 1395, 1395, 1395,
	1395, 1395, 1395, 1395, 1395, 1395, 17643, 1395, 1395, 1395,
	1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395, 1395,
	1395, 31672, 29516, 33828, 1373, 1357, -1000, -1000, 641, 1392,
	-129, 35445, -1000, -1000, -1000, -1000, 34367, 28438, 831, -1000,
	-1000, -1000, -1000, 1660, -1000, -1000, 640, -1000, 1787, -1000,
	-1000, 1297, 377, -1000, 5248, 36362, -1000, -1000, -1000, 1441,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33289, 33828,
	233, 1184, 884, 1180, 34367, 34367, -1000, 230, 28977, 28977,
	438, 245, 28977, 260, 1391, 540, 1386, 535, 1217, 33828,
	1707, 1491, 33828, 1178, 1177, 34367, 34367, 28977, 28977, -1000,
	12241, -1000, -1000, 881, -1000, 20322, 17643, 438, 438, 33828,
	33828, 33828, 33828, 33828, -1000, -1000, 881, 881, 881, 881,
	830, 1818, 830, -1000, 830, -1000, -1000, 17643, -1000, 19799,
	27899, 717, -1000, -1000, -1000, 1175, 300, -1000, -1000, -1000,
	-1000, -1000, -1000, 1173, -1000, 1637, 541, 541, -1000, 1126,
	541, 1374, -1000, 818, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 541, -1000, 17104, -342,
	-1000, -1000, 1385, -1000, 303, -1000, -1000, 343, 343, 198,
	28977, 28977, 28977, -1000, 1430, 33289, -1000, 1430, 1430, 1430,
	-73, 1430, 1430, -1000, -1000, 1430, -1000, -1000, -1000, -1000,
	-1000, 1430, -1000, -1000, -1000, 1430, 1430, -1000, 1430, 1430,
	-1000, -1000, -1000, -1000, -1000, 28977, 343, 176, 1381, 343,
	28977, 28977, -1000, 67, 66, 65, 64, -1000, -1000, -1000,
	-1000, 56, 55, -1000, -1000, 1549, -1000, -1000, 220, -1000,
	-1000, 33828, -94, 23033, 1378, 1746, 10594, -1000, -1000, -1000,
	1829, 756, 1352, -1000, -1000, 1377, -1000, 898, 639, 1031,
	1562, -1000, -1000, -1000, 33828, -1000, 17643, 17643, 1002, -1000,
	23572, -1000, -1000, -1000, -1000, 10045, 763, 19799, 964, 812,
	19799, 19799, 19799, 19799, 19799, 19799, 19799, 19799, 19799, 19799,
	19799, 19799, 19799, 19799, 19799, 1057, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1170, -1000, 220, 1068, 1068, 692,
	692, 692, 692, 692, 692, 25742, 1745, 15487, 15487, 15487,
	1745, 1194, 1194, 15487, 15487, 15487, 15487, 15487, 15487, 15487,
	15487, 1745, 1745, 15487, 1194, 1194, 1194, 1194, 15487, 15487,
	15487, 15487, 33289, 33289, 1745, 15487, 15487, 15487, 1745, 1194,
	1286, 861, 13870, 15487, 15487, 1194, 17643, 17643, 16565, 16026,
	18182, 15487, 1745, 854, 861, 34367, -1000, -1000, 19260, -1000,
	-1000, -1000, -1000, -1000, 1194, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 15487, 15487, 15487, 15487, 752, 33828, -1000,
	1339, 1416, -1000, -1000, -1000, 1741, 26821, -1000, 20877, -1000,
	1395, 752, 1309, 29516, 33828, -1000, -1000, 29516, 33828, 9496,
	34906, 1353, -1000, -108, -98, -129, -1000, -1000, 691, -1000,
	-1000, -1000, 13330, -1000, 11143, 1773, 1549, 6751, 11692, -1000,
	36362, 1441, -1000, -67, -1000, -1000, -1000, 1418, -1000, 1418,
	283, -2, 1418, 1418, 1418, 1418, 1418, -21, -21, -21,
	-21, -1, -1000, -1000, -1000, -1000, -1000, 1436, 1434, -1000,
	1418, 1418, 1418, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1426, 314, 1421, 1421, 1421, 1421, 1421, 365,
	365, -1000, 17643, 1444, 1733, 545, 245, 1675, 1705, 1675,
	318, -1000, 638, 1432, -1000, 637, 262, 1318, -1000, 182,
	1225, 33828, -1000, -1000, -1000, -1000, -1000, 33828, 33828, 28977,
	28977, 28977, 514, -1000, 33828, 1376, -1000, -1000, -1000, -1000,
	-1000, 1329, -1000, 1225, -1000, -1000, -1000, -1000, -1000, 1125,
	861, 1168, 1166, 1716, -1000, -1000, -1000, 856, -1000, -1000,
	-1000, -1000, 881, 33828, 33828, 33828, 1716, 881, 861, 759,
	1452, 1395, 1194, -1000, -1000, 1162, -1000, 19799, 1374, 1374,
	-1000, 1374, 541, 1068, 1374, -1000, 1282, 1699, 1124, 33828,
	-1000, 23033, -53, -1000, -141, 31133, -1000, -1000, -1000, 31133,
	-1000, 81, 171, -1000, 528, -1000, 1276, -1000, -1000, -1000,
	-1000, 1430, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 31133, 135, 174, 31133, 1329, 1817, -1000, -1000, -1000,
	-1000, 1767, -1000, 1745, 1194, 179, -1000, -1000, -1000, 1395,
	1253, 633, -1000, 1534, 933, 933, 17643, -1000, -1000, -1000,
	11143, 1766, -1000, 1589, 1588, 1451, -1000, -1000, 763, 783,
	-1000, -1000, 991, -1000, -1000, -1000, -1000, 619, 1395, -1000,
	3555, -1000, -1000, -1000, -1000, 964, 19799, 19799, 19799, 759,
	3555, 3540, 1065, 2119, 692, 852, 852, 693, 693, 693,
	693, 693, 1504, 1504, -1000, -1000, -1000, 1194, -1000, -1000,
	-1000, 15487, 1266, -1000, -1000, 861, 617, 1266, 1266, 15487,
	-175, -175, 1266, 1194, 1266, 1266, 1266, 1266, 1194, 1266,
	15487, 15487, 1266, -175, -175, -175, -175, 1266, 1266, 1266,
	1266, 1365, 1359, 15487, 1266, 1266, 1266, 15487, -1000, 17643,
	-1000, 1194, 1266, 1266, -1000, 823, 972, 767, 1815, 1266,
	765, 1812, 1266, 2100, 19799, 19799, 19799, 1266, 15487, 912,
	-1000, 17643, 1194, -1000, 998, 1266, 1194, 1356, 1266, 1266,
	217, 1395, -1000, 11143, 29516, 29516, 29516, 29516, 29516, -1000,
	1516, 1514, -1000, 1533, 1531, 1541, 23033, 1268, 1194, 293,
	26821, -1000, 1395, -1000, 22494, 522, 555, 554, 553, 15487,
	1796, 29516, 1292, -1000, 1292, -1000, 616, -1000, -1000, 34367,
	-129, -139, -1000, -1000, 1353, -1000, 1066, -1000, -1000, 861,
	-1000, 614, 1666, 1745, 1350, 6202, -1000, -1000, -1000, -1000,
	377, -1000, -1000, -1000, 1428, 4846, -1000, 1608, 714, 714,
	660, 1136, 1602, -1000, -1000, 155, -62, -1000, -1000, 1059,
	-21, -21, 1418, 1418, 280, 1418, -1000, -21, -1000, -1000,
	-1000, 691, 1659, 691, 691, 691, 691, -21, 1123, 1123,
	-1000, -1000, -1000, -1000, 1055, -1000, 1426, -1000, 1051, -1000,
	-1000, -1000, -1000, -1000, -1000, 983, 1490, 33289, -1000, 33828,
	-1000, 1675, -1000, -1000, -1000, 210, -1000, -1000, -1000, 1803,
	-1000, -1000, 33289, 27360, 33289, -1000, -1000, 82, 28977, 180,
	356, 223, -1000, 526, -1000, 466, -1000, -1000, -1000, -1000,
	-1000, -1000, 33828, 28977, -1000, -1000, -1000, -1000, 1796, 1161,
	1160, -1000, -1000, -1000, 830, 881, -1000, -1000, 19799, 28977,
	-1000, 307, -1000, 3555, -1000, -1000, -1000, 752, 574, -1000,
	-1000, -90, -1000, -1000, 464, 613, 612, 463, -1000, 101,
	28977, -1000, 33289, -1000, 1811, 1806, 128, 1804, 28977, -1000,
	43, 1562, -1000, 1341, -1000, 671, 710, 739, 371, 371,
	-1000, 774, 371, 1651, 1649, 746, -1000, 222, -1000, 10594,
	10594, 1543, -1000, -1000, -1000, 33828, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8947, 15487, -1000, 759, 3555,
	3520, -1000, 19799, -1000, 1266, 15487, -175, 8398, -175, -175,
	1266, -1000, 30594, -1000, -1000, -175, -1000, -175, -175, -175,
	-175, -175, 1266, 1266, -175, -1000, -1000, -1000, -1000, -175,
	-175, -175, -175, 19799, 19799, 1266, -175, -175, -175, 1194,
	861, -1000, -1000, -1000, 409, 1057, 409, 19799, 19799, -1000,
	19799, 19799, -1000, -1000, 19799, 3469, 3287, 3240, -222, 1366,
	828, -1000, 17643, 952, -1000, -1000, -1000, -1000, -1000, -1000,
	1489, 11143, 1395, 7300, -1000, 33289, 1331, -1000, 808, 802,
	1416, 1440, 1488, 1154, -1000, -1000, -1000, -1000, 1513, -1000,
	1512, -1000, -1000, 1403, -1000, -1000, 1340, 1395, 33289, 19799,
	522, -1000, 1395, 1395, 1395, 1194, 1787, 17643, 1292, -1000,
	-1000, 703, -1000, -1000, -137, -109, -1000, -1000, -1000, 10594,
	-1000, 6751, -1000, 6751, -1000, 24111, 368, 1610, 360, -1000,
	1136, -1000, -1000, 1136, -1000, 1136, -1000, -1000, -1000, 1424,
	-1000, 916, -1000, -1000, -1000, -1000, -1000, 1395, -353, 19799,
	1828, -1000, 1606, -1000, 1605, 1604, 1122, -1000, -1000, 1263,
	691, 691, -21, -1000, -1000, 1418, -1000, 691, -1000, 768,
	-1000, -1000, -1000, -1000, 691, 1262, -1000, 1259, 1337, -1000,
	1255, 123, 33828, -1000, -1000, 1723, -1000, -1000, -1000, 1645,
	774, 774, 774, 1485, -1000, -1000, -1000, -1000, 1244, 1330,
	-1000, 5248, 33289, 33289, 33289, -1000, -241, 145, -1000, 28977,
	131, 182, 422, 1159, 33828, 28977, -1000, -1000, -1000, -1000,
	-1000, 1716, -1000, 3555, 1225, -1000, -1000, -21, 33828, -1000,
	28977, 702, 30055, 28977, 120, 161, -1000, 28977, 28977, 1798,
	28977, 1329, 1120, 1451, 179, 4373, 1136, 533, -1000, -1000,
	375, -1000, 3739, 1602, 1158, 36895, 36682, 33289, 1601, 1600,
	1153, 33828, 33289, -1000, -1000, 36575, 1152, 17643, -1000, 33289,
	-1000, -1000, 33289, 611, -1000, -1000, -1000, 1224, 14409, -1000,
	-1000, 1194, -1000, 19799, 3555, -175, -1000, -1000, -1000, -1000,
	608, -1000, -1000, -175, -1000, -1000, 1151, -1000, -1000, -1000,
	-1000, -1000, -1000, -175, -175, -1000, -1000, -1000, -1000, -1000,
	3219, 3067, -175, -1000, -1000, -1000, -1000, 1194, 1418, 1418,
	-1000, 1418, 1421, -1000, 1418, 9, 1418, 4, 1194, 1194,
	3008, 2924, 2874, 1458, 998, 19799, 19799, 19799, 1395, -171,
	-1000, 861, 17643, -1000, 1677, 1305, 1328, -1000, -1000, 14948,
	1194, 1575, 1253, -1000, 21955, 1248, -1000, 1787, 11143, 17643,
	17643, -1000, -1000, 17643, 1420, -1000, 17643, -1000, -1000, -1000,
	-1000, 33289, 291, -1000, 17643, 1248, 1591, -1000, 33289, 33289,
	33289, -1000, 1773, 861, -1000, -1000, -1000, -1000, 6202, -1000,
	1242, -1000, 1418, 1418, 1599, -1000, 714, -1000, -1000, -1000,
	-1000, 33289, -1000, 19799, 1713, 3555, -136, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 691, -1000, -1000, -1000, -1000, -1000,
	-21, 1104, -21, 1038, -1000, 1032, -1000, -1000, -305, 1415,
	220, -1000, 774, 766, 764, 1101, 33828, 143, 27360, -1000,
	5248, 5248, 5248, 121, 107, -1000, 910, -1000, -1000, -1000,
	1098, 1097, 1096, 1225, 183, 905, 167, -1000, 1712, -1000,
	-1000, 881, -78, -1000, 161, -1000, -1000, -1000, 161, -1000,
	-1000, 172, 1329, 1329, 28977, 1329, -1000, -1000, -1000, 36575,
	345, 5248, 5248, 1444, 714, 1597, 360, -1000, -1000, -1000,
	-1000, -1000, -1000, 1150, -1000, 618, -1000, 455, 345, 36575,
	861, 742, 1698, 10594, 1794, 33289, 29516, -1000, -1000, -1000,
	3555, -1000, 7849, -1000, 741, -1000, -1000, -1000, 19799, 19799,
	-1000, -1000, -1000, 281, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19799, 19799, 19799, 19799, -1000, 998, 998, 998,
	19799, 1194, 1095, 861, 1593, -1000, 1395, -1000, -1000, 1395,
	214, -1000, 33289, 1773, -1000, 861, 861, 861, 33289, 861,
	1237, -1000, 1395, 20338, -1000, 23033, 1227, 1227, 1227, -1000,
	569, 24111, 1694, 1694, -1000, 1136, 1215, 998, 1395, -1000,
	1395, 1395, -1000, 691, -1000, 691, 1231, 1229, -1000, 24111,
	-1000, -1000, 721, -1000, -1000, -1000, -1000, -1000, 1765, -1000,
	143, -1000, 1093, 244, 251, -1000, 242, 239, 237, 224,
	228, -1000, -1000, -1000, -1000, 378, 121, -1000, -72, 1030,
	778, 1642, 107, -1000, 1024, 1023, 994, 989, 158, -1000,
	-1000, -1000, -1000, 221, 182, -1000, 417, 1092, -1000, 1627,
	1623, 1711, 1711, 116, 1329, 1338, 1211, -1000, -1000, 1147,
	-1000, -1000, 1413, 1136, 1412, -1000, 1135, -1000, -1000, 33289,
	-1000, 345, 1673, 1672, 1395, -1000, 1789, 1784, 1291, 1292,
	14409, -1000, -1000, 1787, 1783, 998, 998, -1000, -1000, 998,
	998, 998, 998, -1000, -1000, -1000, 133, -1000, -1000, 1826,
	-1000, 1328, 1395, -1000, 220, -1000, -1000, 1210, -1000, 33289,
	-1000, -1000, 522, -1000, -1000, -1000, 569, -1000, 1134, 774,
	1091, -1000, -1000, -1000, -1000, 351, -349, 19799, -1000, -1000,
	-1000, -1000, 1208, -1000, 220, -1000, -1000, 246, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1631, 1630, 257, -1000, 1088,
	1087, -1000, 399, 1061, 645, -181, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 406, 1133, -1000,
	159, -1000, -1000, 393, 1614, 1616, 1782, -1000, 28977, -1000,
	-1000, 29516, -1000, -1000, 155, 155, 24111, 1444, 24111, -1000,
	-1000, -1000, 19799, -1000, 733, -178, 17643, 17643, 1794, 29516,
	1794, -1000, 743, 17643, -1000, -1000, -1000, -1000, -1000, -1000,
	1194, 207, -266, 11143, 1328, 1194, -1000, -1000, -1000, -1000,
	-1000, 956, -1000, 33828, -1000, -1000, -1000, 998, 569, -1000,
	279, 37800, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	951, -1000, -1000, 1060, 391, 156, -1000, 1710, -1000, 1403,
	945, 1623, 1778, 1621, 1618, -1000, 1086, -242, 1292, 1205,
	1400, 1203, 3555, 1200, -1000, 33289, -1000, 33289, -1000, 861,
	1325, -1000, 861, 1789, 1292, 1789, -1000, 1194, 211, 211,
	1320, -1000, 1540, -238, -279, 1319, -1000, -1000, 1396, -349,
	-1000, 569, -1000, 271, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 17643, 17643, 5653, 37800, 146,
	-1000, 142, -1000, -1000, -1000, 1085, -1000, 1625, -1000, 1083,
	-1000, 1777, 1776, -1000, 163, 1794, 569, 24111, 569, -1000,
	733, 1569, 1308, -1000, 1709, 17643, -178, 1794, -178, -1000,
	-1000, 197, -1000, 735, 269, 731, -1000, 1068, -1000, -1000,
	1537, -1000, 33289, -1000, -1000, 1132, 1131, -1000, 942, 950,
	199, 190, 5117, -1000, -1000, -1000, -1000, -360, -1000, -1000,
	-1000, -1000, -1000, -1000, 992, 984, 26281, 1789, -1000, 1198,
	-1000, -1000, 326, 33289, 1395, -1000, -1000, 1789, 1679, 904,
	-1000, -1000, -1000, -1000, -1000, 33289, -244, 1193, -1000, -1000,
	-1000, 968, -1000, 17643, 37800, 1763, 1751, 1749, 1671, 10594,
	37685, -1000, -1000, -1000, -1000, 104, 1225, -178, 569, 312,
	-1000, -1000, -178, -1000, 33289, 197, -1000, -275, 1477, 295,
	868, 37800, -1000, 940, -363, 392, 220, 459, 19799, -1000,
	-1000, -1000, 28977, -1000, -1000, 1395, -1000, 1284, -1000, -280,
	1462, 1459, 1810, -1000, -1000, -1000, -1000, -1000, -1000, 37800,
	-1000, -364, 37800, 4700, -1000, -1000, -1000, 37605, -1000, -1000,
	-1000, -1000, 184, -1000, -1000, 3555, 1225, 18721, -1000, -1000,
	1824, -1000, 1822, 552, 552, -1000, -366, 37508, -369, 435,
	37800, 840, -1000, 17643, -1000, 459, -1000, 998, 1194, -1000,
	-1000, -1000, 350, 1025, -1000, 37393, 859, 37800, -1000, -371,
	434, 37800, -1000, 827, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37313, -1000, -373, 37800, 387, 5081, -374, -1000,
	382, 37800, -1000,
}

var yyPgo = [...]int{
	0, 2228, 2215, 16, 2212, 271, 2211, 2210, 2209, 26,
	22, 20, 28, 2208, 1928, 1926, 1915, 1910, 1905, 2206,
	7, 2205, 2204, 1903, 2203, 2201, 1901, 1893, 1881, 1877,
	2199, 2198, 2197, 1875, 1873, 1871, 10, 2196, 18, 2195,
	2, 145, 161, 2192, 3, 2191, 2190, 9, 2189, 2187,
	1867, 2186, 2185, 2183, 95, 2176, 1865, 1859, 2175, 1854,
	1851, 2172, 2171, 1849, 1847, 1843, 2167, 176, 2166, 2165,
	2164, 169, 93, 153, 2163, 2162, 2161, 108, 63, 2297,
	113, 49, 106, 94, 2159, 36, 61, 266, 2158, 157,
	2154, 131, 2153, 155, 2151, 140, 142, 101, 2148, 2147,
	171, 2146, 2143, 2138, 137, 2137, 2136, 168, 3153, 2135,
	2134, 156, 2132, 65, 165, 57, 37, 2131, 2130, 2129,
	2128, 2125, 25, 844, 2124, 98, 144, 2123, 2122, 88,
	2120, 2119, 177, 2118, 2117, 2113, 133, 47, 2112, 2110,
	52, 2109, 109, 62, 2107, 83, 2106, 134, 2105, 2104,
	32, 34, 2102, 55, 2101, 50, 2100, 136, 203, 1243,
	2099, 13, 24, 19, 2096, 38, 12, 51, 44, 30,
	80, 84, 125, 103, 2095, 14, 43, 2092, 117, 99,
	72, 45, 2091, 148, 2089, 89, 152, 135, 132, 150,
	2087, 2086, 2081, 983, 2080, 115, 85, 2074, 92, 894,
	163, 107, 2073, 90, 2072, 2071, 2067, 2066, 2058, 91,
	112, 2057, 2055, 170, 174, 172, 48, 71, 917, 1900,
	179, 154, 2054, 39, 2052, 2050, 2048, 3181, 110, 105,
	104, 164, 2043, 102, 33, 53, 2040, 2039, 2036, 2034,
	2032, 2030, 1348, 2029, 2026, 2023, 2021, 73, 192, 2020,
	124, 123, 120, 2019, 147, 40, 2014, 2013, 129, 130,
	2012, 2011, 2009, 2008, 127, 76, 149, 2007, 114, 111,
	126, 2006, 75, 2005, 2004, 70, 46, 2003, 1994, 1993,
	100, 96, 1991, 64, 41, 35, 86, 15, 1984, 1983,
	82, 121, 1982, 31, 1981, 4, 5, 8, 1980, 1964,
	1963, 1961, 1956, 1953, 1951, 87, 1949, 1948, 69, 1946,
	1942, 1941, 42, 1940, 1939, 1937, 141, 116, 77, 159,
	225, 6, 1936, 1935, 11, 1931, 118, 1923, 56, 1918,
	58, 1912, 1908, 59, 1899, 1890, 60, 1885, 1883, 160,
	1484, 517, 1879, 158, 143, 54, 66, 1869, 1863, 0,
	907, 173, 146, 1861, 1856,
}

var yyR1 = [...]int{
	0, 348, 348, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 5, 5, 177, 177, 88,
	88, 87, 87, 93, 6, 6, 7, 7, 9, 9,
	70, 70, 10, 11, 11, 11, 11, 351, 351, 102,
	102, 100, 100, 101, 101, 178, 178, 12, 12, 12,
	183, 183, 188, 188, 188, 191, 191, 191, 191, 167,
	168, 169, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 322, 322, 331, 331, 331, 332,
	332, 330, 330, 330, 330, 330, 334, 334, 335, 335,
	333, 333, 333, 333, 337, 337, 338, 338, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 325, 325, 325, 33, 33, 33, 33, 34,
	34, 34, 34, 34, 34, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 340, 340, 341, 341,
	342, 342, 343, 343, 343, 343, 344, 344, 344, 344,
	344, 345, 345, 345, 345, 345, 345, 345, 346, 346,
	347, 347, 2, 303, 303, 304, 304, 305, 305, 305,
	305, 306, 306, 307, 307, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 24, 215, 215, 212, 212,
	212, 213, 213, 214, 214, 214, 324, 324, 324, 318,
	318, 318, 320, 320, 319, 319, 319, 321, 321, 326,
	326, 326, 326, 326, 328, 328, 328, 328, 328, 328,
	329, 329, 329, 327, 327, 48, 48, 49, 49, 49,
	156, 156, 156, 13, 13, 13, 13, 13, 19, 21,
	21, 37, 37, 38, 22, 22, 22, 22, 39, 39,
	40, 25, 25, 25, 25, 25, 25, 46, 46, 46,
	45, 45, 44, 44, 44, 44, 44, 44, 23, 23,
	23, 23, 47, 47, 42, 42, 41, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 26,
	26, 26, 26, 26, 26, 18, 302, 302, 302, 36,
	36, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 52, 277, 278, 278, 278, 278, 278, 278, 278,
	278, 265, 265, 266, 255, 255, 255, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 234, 234, 234,
	234, 238, 238, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 237, 237, 237, 237, 237, 237, 237,
	237, 239, 239, 239, 239, 239, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 241, 241, 241, 241, 241, 241, 241, 241, 264,
	264, 242, 242, 258, 258, 259, 259, 259, 256, 256,
	257, 257, 245, 246, 260, 247, 247, 247, 248, 248,
	248, 249, 249, 254, 254, 253, 253, 253, 253, 253,
	253, 250, 250, 250, 250, 251, 251, 252, 263, 263,
	263, 263, 263, 243, 35, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 289, 289, 205,
	205, 206, 206, 267, 267, 287, 287, 286, 286, 285,
	285, 285, 276, 276, 282, 282, 282, 282, 282, 282,
	282, 282, 271, 271, 271, 270, 270, 272, 272, 275,
	275, 284, 284, 283, 283, 268, 268, 268, 290, 290,
	290, 290, 290, 269, 269, 269, 269, 291, 273, 273,
	274, 274, 274, 296, 297, 295, 295, 295, 295, 295,
	119, 119, 119, 279, 279, 279, 280, 280, 280, 281,
	281, 281, 300, 300, 299, 299, 50, 51, 55, 55,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 155, 155, 155, 210,
	210, 294, 292, 292, 293, 293, 15, 15, 53, 53,
	323, 323, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 298, 298, 298, 17, 17, 56, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 84, 197, 197, 196, 196, 195, 195, 195,
	198, 198, 198, 198, 232, 232, 232, 58, 58, 62,
	62, 65, 65, 65, 63, 64, 27, 28, 28, 28,
	28, 29, 211, 211, 60, 60, 61, 61, 61, 61,
	76, 76, 353, 353, 59, 354, 67, 68, 68, 69,
	69, 69, 201, 201, 73, 73, 73, 71, 71, 71,
	72, 72, 78, 78, 82, 82, 82, 82, 81, 81,
	81, 81, 158, 158, 163, 224, 224, 139, 139, 159,
	159, 164, 164, 164, 165, 165, 166, 166, 166, 166,
	166, 161, 161, 160, 160, 162, 127, 127, 222, 222,
	222, 221, 221, 221, 221, 86, 86, 89, 89, 91,
	91, 91, 91, 91, 94, 141, 141, 112, 112, 113,
	113, 113, 113, 113, 125, 125, 176, 176, 175, 175,
	179, 179, 90, 92, 92, 92, 92, 97, 97, 98,
	98, 99, 99, 209, 209, 229, 229, 229, 103, 103,
	103, 105, 104, 104, 104, 104, 106, 106, 107, 107,
	109, 110, 110, 108, 108, 114, 114, 111, 115, 115,
	115, 115, 116, 116, 83, 83, 83, 83, 83, 83,
	83, 194, 194, 118, 118, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 135, 135, 135, 135, 135,
	135, 120, 120, 120, 120, 120, 120, 120, 77, 77,
	136, 136, 136, 96, 95, 95, 80, 80, 79, 79,
	137, 137, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 130, 130, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 352, 352, 132, 131, 131, 131,
	131, 131, 131, 74, 74, 74, 74, 74, 230, 230,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 148, 148, 75, 75, 146,
	146, 147, 149, 149, 145, 145, 145, 122, 122, 122,
	122, 122, 122, 122, 122, 124, 124, 124, 150, 150,
	138, 138, 85, 151, 151, 152, 153, 153, 154, 154,
	157, 170, 170, 170, 171, 171, 171, 171, 126, 126,
	172, 172, 172, 121, 121, 121, 121, 121, 121, 121,
	174, 174, 173, 173, 173, 173, 180, 180, 140, 140,
	143, 143, 142, 144, 181, 181, 185, 185, 182, 182,
	186, 186, 186, 186, 189, 189, 190, 190, 190, 187,
	187, 187, 184, 184, 184, 226, 226, 226, 192, 192,
	202, 202, 199, 199, 200, 200, 193, 193, 244, 244,
	208, 208, 207, 207, 207, 203, 203, 203, 204, 204,
	223, 223, 219, 219, 225, 225, 220, 220, 227, 227,
	228, 228, 301, 301, 261, 261, 311, 311, 262, 262,
	312, 312, 314, 314, 309, 309, 310, 310, 313, 313,
	30, 315, 315, 316, 316, 317, 317, 317, 317, 31,
	32, 32, 32, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 349,
	350,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 14, 15, 0, 2, 2,
	3, 1, 3, 4, 1, 3, 1, 3, 7, 8,
	1, 1, 9, 8, 7, 6, 6, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 4, 5,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 0,
	0, 0, 2, 3, 3, 11, 9, 11, 5, 5,
	16, 12, 9, 4, 0, 3, 0, 2, 2, 1,
	3, 1, 1, 2, 2, 2, 0, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 2, 3, 3,
	5, 3, 3, 4, 5, 4, 4, 2, 2, 2,
	2, 2, 0, 2, 2, 9, 9, 5, 7, 7,
	7, 7, 8, 4, 6, 2, 3, 2, 3, 3,
	3, 4, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 2, 2, 2, 3, 3, 2, 3,
	3, 2, 2, 2, 2, 2, 1, 3, 0, 3,
	1, 3, 0, 1, 1, 1, 1, 3, 1, 3,
	3, 0, 2, 5, 5, 5, 7, 5, 0, 3,
	0, 3, 4, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 4, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 6, 5, 5,
	4, 3, 5, 1, 3, 1, 1, 1, 1, 1,
	0, 2, 2, 1, 1, 1, 1, 1, 4, 5,
	8, 1, 2, 5, 7, 10, 8, 11, 1, 2,
	5, 5, 5, 5, 6, 3, 5, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 1, 1, 2, 4,
	2, 4, 2, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 3, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 5, 4, 1, 1, 2, 3, 4, 3, 3,
	3, 3, 3, 3, 0, 1, 1, 0, 2, 3,
	2, 2, 2, 2, 2, 6, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 3, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 1, 4, 4, 3, 3,
	2, 4, 5, 2, 3, 4, 2, 2, 3, 3,
	3, 3, 3, 4, 1, 1, 1, 1, 1, 6,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 4, 4, 4, 4, 4, 2, 1,
	2, 1, 2, 2, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 3, 1,
	1, 0, 1, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 2, 4, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 3, 2, 1, 5, 1, 1,
	0, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 0, 2, 0, 2, 1, 5, 1, 3,
	5, 4, 3, 5, 3, 8, 10, 3, 3, 3,
	3, 3, 5, 4, 5, 1, 2, 2, 4, 3,
	6, 5, 3, 8, 2, 2, 0, 1, 2, 0,
	1, 7, 1, 3, 8, 8, 3, 3, 3, 5,
	3, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 0, 1, 1, 3, 2, 3, 3, 4, 3,
	5, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 4, 5, 8, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 3, 2, 0, 1, 1, 2, 1, 1,
	1, 2, 4, 4, 1, 1, 2, 3, 4, 4,
	5, 3, 1, 1, 3, 3, 1, 1, 1, 1,
	0, 3, 1, 1, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 2, 6, 0, 1, 0, 3, 0,
	1, 0, 2, 2, 4, 1, 2, 2, 2, 2,
	2, 0, 2, 1, 3, 3, 1, 3, 0, 1,
	2, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 1, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 3, 0, 5,
	5, 5, 0, 2, 1, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 6, 8, 8, 8, 8, 4, 6, 7,
	7, 7, 9, 4, 7, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	1, 3, 1, 0, 2, 1, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 4, 1, 3, 5, 4, 6,
	0, 3, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 3,
	3, 1, 3, 2, 4, 1, 2, 1, 2, 2,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -348, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 178, -51, 181, 180, 216, 182, 209,
	64, 339, -65, 342, 343, -353, -211, 267, 268, 20,
	37, 344, 346, 31, 32, 230, 284, 286, 311, -5,
	-88, -6, 8, 438, 179, 340, 211, 210, 26, 487,
	-349, 68, 554, -153, 15, -67, -354, -67, -67, -67,
	-67, -67, -277, -209, 106, 68, 23, -204, -215, 87,
	429, 186, -213, 280, 282, -202, -203, -212, 240, 250,
	44, 197, 196, 251, 187, 280, 187, 188, 190, 429,
	186, 223, 222, 280, 282, 187, -108, -227, 72, -217,
	200, 498, 305, 484, 251, 549, 292, 237, 339, 353,
	355, 347, 382, 370, 485, 499, 201, 262, 185, 338,
	368, 371, 415, 199, 295, 255, 318, 500, 404, 410,
	265, 342, 424, 501, 202, 259, 261, 260, 245, 454,
	266, 36, 212, 366, 301, 359, 270, 240, 502, 492,
	234, 357, 28, 235, 233, 427, 503, 329, 412, 387,
	330, 304, 504, 489, 299, 411, 362, 358, 311, 203,
	197, 331, 505, 388, 392, 506, 416, 285, 332, 507,
	508, 509, 189, 291, 351, 352, 510, 241, 418, 296,
	386, 33, 198, 486, 48, 220, 419, 38, 390, 37,
	396, 511, 328, 385, 380, 397, 512, 513, 514, 515,
	309, 307, 308, 310, 384, 350, 379, 252, 257, 53,
	184, 394, 393, 395, 258, 414, 375, 373, 516, 517,
	300, 204, 518, 519, 360, 18, 520, 521, 422, 215,
	302, 303, 42, 522, 523, 524, 110, 525, 526, 527,
	413, 389, 391, 239, 114, 363, 194, 528, 306, 409,
	315, 488, 289, 111, 420, 356, 530, 334, 346, 219,
	214, 423, 324, 531, 268, 532, 533, 534, 206, 535,
	283, 282, 343, 316, 112, 344, 406, 263, 536, 537,
	538, 539, 249, 232, 426, 417, 52, 267, 401, 540,
	319, 335, 349, 196, 269, 541, 293, 340, 43, 7,
	256, 297, 407, 317, 264, 250, 253, 377, 221, 542,
	543, 364, 365, 383, 348, 378, 341, 224, 216, 109,
	425, 402, 490, 280, 336, 372, 369, 227, 376, 544,
	545, 254, 228, 345, 421, 294, 367, 403, 187, 131,
	371, 415, 178, 405, 406, 412, -271, 413, 222, 225,
	-232, 187, -197, 404, 285, 306, 459, 228, 229, 188,
	189, 33, 417, 416, 408, -227, 191, 345, -76, 182,
	217, -108, -47, 72, 269, -47, 30, 72, 72, 36,
	72, 344, 407, 407, 75, 488, 231, 21, -340, -321,
	315, -339, -319, 179, 178, 10, 180, 320, 321, 322,
	188, 8, 31, 529, 205, 323, 324, 6, 209, 325,
	326, 223, 9, 327, -324, 74, 72, -217, 21, -340,
	-321, 315, -206, -205, 337, 396, 6, -69, 5, -193,
	192, 341, -87, 497, -93, -229, -227, -218, 74, 298,
	208, 288, 399, 455, 456, 457, 458, 231, 459, 472,
	473, 97, 229, 320, 321, 312, 322, 207, 474, 115,
	238, 217, 277, 408, 276, 281, 460, 461, 475, 476,
	477, 462, 463, 287, 478, 479, 552, 290, 553, 313,
	481, 529, 482, 323, 480, 325, 226, 466, 465, 464,
	467, 326, 449, 450, 468, 51, 470, 469, 471, 190,
	81, -3, -171, 17, 16, -73, 54, 55, -68, -81,
	122, -83, -227, -117, 89, -123, 29, 72, -217, 24,
	-122, -218, -118, -145, -144, -96, 131, -231, 120, 121,
	128, 90, 174, -130, -128, -129, -131, -133, -134, 74,
	73, 82, 75, 76, 77, 78, 83, 455, 456, 457,
	458, 459, 472, 473, 207, 474, 217, 460, 461, 475,
	476, 477, 462, 463, 478, 479, 481, 482, 480, 466,
	465, 464, 467, 449, 450, 468, 470, 469, 471, 84,
	85, -219, -142, -349, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 58, 59, 186, 439,
	440, 441, 442, 443, 483, 447, 92, 47, 428, 437,
	436, 435, 433, 434, 430, 432, 431, 193, 429, 126,
	438, -193, -193, 11, -100, -101, -108, -111, -227, -182,
	341, -189, -186, 416, 417, -187, -190, -184, -145, 396,
	526, 527, 415, 371, 414, -219, -227, -2, -5, 6,
	-108, -278, -266, -269, -220, 202, -291, -219, -216, 199,
	72, -217, 298, 183, 208, 179, 88, 491, 23, 25,
	288, 399, 455, 91, 131, 456, 457, 458, 16, 20,
	92, 130, 81, 439, 231, 459, 178, 62, 430, 432,
	428, 429, 405, 29, 10, 26, 210, 244, 22, 124,
	180, 95, 96, 97, 229, 213, 320, 321, 24, 211,
	312, 85, 322, 207, 115, 238, 19, 65, 217, 277,
	11, 408, 225, 548, 284, 13, 453, 113, 276, 14,
	281, 193, 192, 108, 242, 188, 60, 8, 174, 27,
	105, 56, 460, 461, 494, 45, 230, 495, 58, 106,
	17, 433, 434, 31, 483, 462, 218, 496, 463, 126,
	247, 63, 50, 287, 89, 83, 552, 34, 86, 66,
	333, 87, 15, 243, 61, 451, 290, 553, 313, 222,
	529, 246, 497, 205, 107, 323, 181, 438, 314, 286,
	59, 186, 6, 448, 30, 209, 325, 248, 226, 466,
	465, 464, 467, 550, 57, 441, 442, 468, 326, 546,
	187, 94, 449, 450, 191, 223, 84, 5, 44, 32,
	9, 327, 64, 67, 435, 436, 437, 47, 51, 470,
	469, 471, 190, 551, 93, 12, 452, 487, 188, 190,
	438, -200, 193, -200, 223, 222, -214, 248, -200, -200,
	187, -213, 98, 98, -53, -108, -323, -318, -324, -199,
	193, -219, -199, -199, -199, -199, -199, -199, -199, -108,
	175, -108, 72, 30, -198, 106, 12, 429, 186, 187,
	222, 223, 190, -273, 11, 108, 226, 226, 226, 227,
	226, -196, 407, 409, 224, 410, 411, 12, -84, 106,
	19, -349, -171, -171, 72, 344, 191, -61, -3, -11,
	-9, -10, -3, 98, -125, 23, 30, 30, 74, 51,
	30, -42, -41, -43, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 30, -302, 68, -261,
	396, 72, -315, -316, -108, 75, 75, 66, 66, 69,
	191, 69, 66, -341, 316, 68, -341, 282, 316, 317,
	250, 280, 190, -341, -341, 282, -341, -341, -341, -341,
	-341, 407, -341, -341, -341, 318, 319, -341, 405, 190,
	-341, -341, -341, -341, -341, 71, 66, 69, 306, 66,
	11, 66, -288, 131, 329, 330, 331, 332, 328, 306,
	333, 334, 335, 226, 336, -67, -7, -5, -349, 21,
	22, 187, 420, 69, -87, -174, -349, -350, 70, -172,
	19, 31, -126, 75, 78, -154, -157, -83, -227, 50,
	-71, 21, 22, 80, 11, -222, 88, 87, 105, -221,
	23, 72, -217, -218, 74, 175, -83, -120, 108, 89,
	106, 107, 91, 117, 116, 127, 120, 121, 122, 123,
	124, 125, 126, 118, 119, 130, 98, 99, 100, 101,
	102, 103, 104, -194, -349, -96, -349, 176, 177, -123,
	-123, -123, -123, -123, -123, -123, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -3,
	-137, -83, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -148, -83, -349, -352, -132, -349, -352,
	-132, -352, -132, -352, -349, -352, -132, -352, -132, -352,
	-352, -132, -352, -349, -349, -349, -349, -110, 27, -108,
	-86, -89, -91, -92, -112, -95, -349, -90, -108, -96,
	72, -108, -100, -351, 69, 11, 67, -351, 69, 175,
	69, -183, -188, 418, 420, 341, -187, -187, -226, -219,
	74, 29, 98, 30, 175, -153, -67, 70, 69, -269,
	202, 199, -234, -238, -240, -239, -241, -236, -237, 368,
	371, 375, 373, 369, 374, 131, 372, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 30, 212,
	364, 365, 366, 367, 388, 389, 390, 391, 392, 393,
	394, 395, 347, 370, 485, 348, 349, 350, 351, 352,
	353, 355, 356, 357, 358, 359, 360, 361, 362, 72,
	-218, -291, 68, -219, -108, -215, -213, 72, 89, 72,
	-107, -219, -227, -114, -219, -227, 249, -327, -326, -318,
	-321, -200, -214, -318, 254, 252, 253, 69, 191, 69,
	191, 71, -100, 24, 66, -102, -108, 72, 72, -107,
	-114, -320, -318, -321, -228, -227, -216, -198, 74, -231,
	-83, -200, -200, -108, -108, -108, -108, -108, -198, -198,
	-198, -198, -195, 11, 108, 11, -195, -195, -83, -123,
	-318, 431, 122, 72, 72, 344, 72, 34, -42, -42,
	74, -42, 69, 98, -42, 70, -137, -301, 547, 69,
	-317, 23, 420, 421, 397, -343, 187, 225, 222, -343,
	-339, 324, -320, -319, -318, -341, -342, -219, -341, -341,
	-341, 407, -341, -341, -341, -341, -341, -341, -341, -341,
	-324, -343, 284, 69, -343, -320, -318, 328, 328, 328,
	328, 328, 328, -73, -3, -108, 421, 422, -93, 23,
	-173, -220, 9, 108, 69, 18, 69, -170, 25, 26,
	175, -124, 51, 75, 78, -201, 49, -108, -83, -83,
	-135, 83, 89, 84, 85, -221, 122, -228, -220, -216,
	-123, -136, -142, -96, 79, 108, 106, 107, 91, -123,
	-123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
	-123, -123, -123, -123, -230, 72, 74, 72, -122, -122,
	-219, -71, -79, -82, 122, -83, -227, -79, -79, -71,
	-350, -350, -79, -82, -79, -79, -79, -79, -82, -79,
	-71, -71, -79, -350, -350, -350, -350, -79, -79, -79,
	-79, -219, -219, -71, -79, -79, -79, -71, -350, 69,
	-350, -3, -79, -79, -350, -83, -83, -145, 74, -79,
	-145, 74, -79, -123, 444, 445, 446, -79, -71, -146,
	-147, 93, -145, -350, -123, -79, -80, -79, -79, -79,
	-178, 110, -108, 30, 69, -103, -105, -104, -106, 56,
	60, 62, 57, 58, 59, 63, -209, -86, -94, 47,
	-349, -113, 110, -115, 23, -229, 64, 192, 65, -349,
	-178, 67, -86, -108, -86, -111, -227, 122, -186, -189,
	69, 419, 421, 422, -183, -248, 130, 66, 86, -83,
	-220, -228, -171, -73, -279, -280, -281, -220, 74, 75,
	-266, -267, -268, -269, -282, 202, -290, 194, 196, 197,
	44, -270, 203, 188, 45, -235, -256, 402, -242, 68,
	-242, -242, 376, 368, 371, 369, -242, -242, -242, -242,
	-242, -247, 371, -247, -247, -247, -247, 369, 68, 68,
	-242, -242, -242, -258, 68, -258, 363, -259, 68, -259,
	-259, -259, -259, -291, -291, -83, -223, 67, 23, 190,
	-254, -253, -250, -251, -252, -249, 29, 24, -254, -48,
	237, 208, 175, 68, 175, 240, 241, -322, 69, 29,
	-328, 281, -108, -108, -108, -318, -318, -324, -298, 206,
	201, -108, 69, 69, 74, 72, 72, -125, -274, 11,
	108, -198, -227, -227, -108, -125, -198, -77, 213, 67,
	-352, -350, 72, -123, -41, -122, 70, -109, 27, 74,
	-316, -229, 396, 421, -344, 122, -219, -344, -347, 487,
	191, 70, 69, -341, -344, 302, 284, -344, 11, -289,
	19, -71, -350, -55, -54, 183, 180, 181, 184, 185,
	-294, 399, 179, 234, 233, 219, -95, -349, -350, 69,
	175, 52, -126, -126, -157, -192, 19, 11, 47, 47,
	-72, 57, 83, 84, 85, 175, -349, -136, -123, -123,
	-123, -77, 88, -350, -79, 69, -350, 175, -350, -350,
	-79, -158, 451, -158, -350, -350, -350, -350, -350, -350,
	-350, -350, -79, -79, -350, -158, -158, -158, -158, -350,
	-350, -350, -350, 69, 69, -79, -350, -350, -350, -80,
	-83, -350, -350, -350, 69, 67, 23, 11, 11, -350,
	11, 11, -350, -350, 11, -123, -123, -123, -350, -79,
	-149, -147, 95, -83, -350, -350, -350, -350, -350, -350,
	-121, 30, 47, -349, -3, -349, -181, -185, -145, -216,
	-89, -91, -91, -89, -91, 56, 56, 56, 61, 56,
	61, 56, -104, -229, -350, -350, -141, 236, -349, 34,
	-229, -115, 188, 188, 188, -80, -116, 12, -86, -116,
	-116, 175, -188, -191, 423, 420, 426, 72, 74, 175,
	-172, 69, -281, 98, -269, 68, 72, -275, -218, 45,
	-270, 188, 45, -272, -270, -270, -275, 72, -275, 45,
	83, 89, -245, -246, -260, -263, -243, 23, 548, 29,
	66, 399, 194, 45, 44, 197, 81, -257, 403, 75,
	-247, -247, -242, -242, -242, 376, -242, -247, -248, 30,
	-248, -248, -248, -248, -247, -264, 74, -264, 75, -258,
	75, 70, 66, -219, -167, -108, -251, -250, -252, 371,
	415, 130, 427, -49, 8, 9, 10, -219, -303, -304,
	-305, -219, 108, 242, 243, -219, -331, 314, -326, 282,
	291, 88, 16, 487, 191, 191, -108, -318, -116, 72,
	72, -195, -198, -123, -321, 228, 229, -178, 187, -317,
	191, 175, 175, 191, 305, -320, -219, 11, 11, 302,
	11, -320, 338, -201, 69, -210, -270, -300, -268, -269,
	-299, 195, 202, 203, -210, 202, 199, -270, 203, 194,
	195, -207, -270, 191, 23, -210, -210, -276, 98, -210,
	33, 33, 110, -220, -220, 53, -108, -78, -168, 122,
	-220, -80, -77, 88, -123, -350, -82, -159, -158, 122,
	-228, -159, -159, -350, -219, -163, -349, -158, -159, -159,
	-158, -158, -158, -350, -350, -158, -159, -159, -159, -159,
	-123, -123, -350, -159, -159, -159, -350, -233, 131, 368,
	212, 366, 359, 386, 373, 401, 364, 402, -230, -233,
	-123, -123, -123, -123, -123, 11, 11, 11, 484, -153,
	97, -83, 94, -180, 66, -181, -140, -143, -142, -349,
	-3, -350, -173, 6, 487, -179, -219, -116, 69, 98,
	98, -98, -97, 66, 67, -99, 66, -97, 56, 56,
	-176, 68, 69, -142, -349, -179, -123, -115, -349, -349,
	-349, -350, -153, -83, -116, 420, 424, 425, -280, -281,
	-284, -283, -219, -218, 194, -290, 44, -290, -275, -275,
	-275, 68, 83, -349, 549, -123, 9, 45, 45, 45,
	74, 70, -248, -248, -247, -242, -248, 72, 131, -248,
	70, 69, 70, 69, 70, 69, -119, 503, 89, -108,
	-169, 23, 30, -276, -276, -276, 66, 70, 69, -234,
	-219, -219, -219, -334, 487, 287, -332, -330, 293, 294,
	295, 296, 297, -321, 292, -328, 289, 74, 72, -108,
	-318, -125, -247, -108, -320, 122, 122, -219, -320, 302,
	-346, 487, -320, -320, 11, -320, 74, -72, -54, 68,
	-265, 72, -218, -275, -203, 194, 72, 72, 72, -218,
	72, -218, -219, 45, 45, 72, -108, -219, -265, 72,
	-83, -219, -219, 175, -116, 27, 11, 69, -81, -350,
	-123, -159, 175, -159, -224, 72, -159, -159, 69, 69,
	-159, -350, -242, -242, -242, -259, -242, 352, -242, 352,
	-350, -350, 19, 19, 19, 19, -350, -123, -123, -123,
	-349, -75, 448, -83, 28, -180, 69, -350, -350, 47,
	-350, -350, 69, -153, -185, -83, -83, -83, 68, -83,
	-175, -219, 236, -350, -115, -209, -175, -175, -175, -171,
	70, 69, -242, -242, 45, -272, -175, -123, 23, -129,
	449, 450, -248, -247, 74, -247, 75, 75, 503, 68,
	-3, -167, -276, 72, 131, 72, 131, 74, -108, -306,
	-307, -308, 81, 486, 89, 244, 245, 204, 246, 247,
	248, -305, -234, -234, -234, -337, -338, -336, 290, 312,
	313, 298, -335, -333, 307, 308, 309, 310, 88, 74,
	74, 74, -329, 281, 88, 290, 16, 23, -198, -309,
	-196, -346, -346, 284, -320, -78, -265, -155, 207, 208,
	-234, -234, -223, -272, 45, 72, -208, 191, 23, 191,
	-155, -265, 30, 180, 27, -220, -150, 13, -175, -86,
	-168, -168, 122, -139, 110, -123, -123, -247, 72, -123,
	-123, -123, -123, -350, -350, -350, -123, -350, 74, 45,
	-143, -140, 47, -3, -349, -219, -171, -175, 70, 69,
	-142, -113, -229, -350, -350, -350, -286, -285, 67, 198,
	81, -283, -170, -170, -275, 70, -350, -349, -248, -248,
	70, 70, -284, -167, -169, 72, 131, 19, -168, -308,
	74, 248, 244, 248, 248, 248, 248, 249, -325, 81,
	288, -336, 299, 508, 283, 314, 75, 75, 109, 31,
	32, -333, 75, 75, 75, 75, -330, 16, 487, -328,
	289, 74, 74, -310, 38, -312, 39, -345, 23, -345,
	302, 11, 70, 72, -235, -235, 68, -275, 68, 72,
	-219, -155, 29, 29, -349, -151, 14, 16, -116, 11,
	-116, -81, -153, 16, -350, -350, -350, -350, -350, -350,
	-74, 108, 487, 9, -140, -3, 70, -219, -115, -285,
	72, -276, 74, 205, -255, 551, 550, -123, 70, -3,
	235, -169, 36, 36, 240, 241, 74, 74, 29, 300,
	174, 29, 75, 174, 454, 289, 74, 72, 290, -244,
	192, -313, 43, -311, -262, 42, 16, -318, -86, -284,
	-223, -284, -123, -292, -293, 110, -161, 452, -152, -83,
	-138, -85, -83, -150, -86, -150, -168, -164, 112, 111,
	-137, -350, 485, 63, 488, -181, -350, 75, -108, -350,
	-287, -286, -167, 236, -20, -3, -9, -10, -11, -12,
	-14, -50, -15, -16, -21, -22, -17, -56, -57, -65,
	-63, -64, -60, -59, -25, -23, -26, -18, -27, -28,
	-29, -33, -34, -24, -35, 92, 193, 270, 339, 75,
	29, 75, 29, 303, 290, 23, -176, 75, -312, 16,
	-314, 40, 41, 74, 487, -116, 70, 68, 70, -350,
	69, -219, -160, -162, -219, 69, -151, -116, -151, -350,
	-165, 91, -166, 109, 454, -127, 75, 174, -165, 53,
	486, 489, 68, -255, -156, 238, 239, -167, -83, -83,
	72, -46, -225, 273, 274, 275, -220, -36, -20, 301,
	301, 74, 38, 74, 16, 16, 282, -150, -287, -284,
	-287, -293, 47, 69, 23, -85, -161, -150, -161, -166,
	114, 115, 236, 114, 115, -122, 53, -175, -167, 72,
	72, -37, -38, 93, 94, 271, 272, 276, -234, 69,
	554, 74, 74, 29, 287, 21, -321, -151, 70, 220,
	-162, -163, -151, -177, 27, 88, -219, 487, 70, -169,
	97, 95, -38, -83, -36, 19, 19, 19, 29, -220,
	97, -20, 304, -161, -287, 221, -161, -175, -166, 488,
	-296, -297, 66, -13, -19, -12, -9, -10, -11, 339,
	92, -36, 94, 554, -47, 75, -3, -45, -44, 75,
	-47, 278, 89, 279, 72, -123, -321, -349, 489, -297,
	66, -296, 66, 10, 9, -167, -36, 554, -36, 97,
	95, -39, -40, 96, -20, 69, 277, -123, 218, -295,
	206, 201, 204, 30, -295, 554, 97, 554, 193, -36,
	97, 95, -40, -83, -44, -350, -350, 200, 29, 83,
	97, 92, 554, 193, -36, 94, 97, 554, -36, 193,
	97, 554, 193,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 745, 745, 745, 745,
	745, 745, 843, -2, 606, 0, 0, 0, 0, -2,
	718, 719, 720, 724, 725, 740, 742, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 40,
	0, 0, 60, 61, 1196, 0, 743, 732, 733, 0,
	0, 1739, 2, 1134, 0, 754, 747, 0, 1196, 1196,
	0, 0, 92, 0, 0, 0, 844, 0, 0, 0,
	1194, 1194, 243, 1194, 1194, 0, 1209, 241, 0, 1191,
	1205, 1206, 1207, 0, 0, 0, 1192, 0, 1192, 1192,
	1192, 1192, 1192, 1192, 1192, 0, 665, 863, 1218, 1219,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 0, 0,
	0, 710, 0, 676, 677, 678, 0, 680, 0, 0,
	0, 0, 0, 690, 693, 697, 0, 1134, 1134, 552,
	553, 554, 715, 716, 704, 717, 0, 0, 0, 0,
	0, 824, 318, 320, 0, 340, 0, 343, 346, 1224,
	726, 0, 0, 1249, 1250, 0, 0, 0, 0, 0,
	1589, 186, 257, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 0, 188, 188, 188, 1601, 188, 0, 188,
	188, 188, 188, 188, 256, 246, 247, 248, 0, 0,
	0, 1589, 0, 532, 529, 530, 745, 0, 749, 0,
	1197, 721, 49, 0, 51, 1150, 845, 846, 847, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 0, 1140, 0, 0, 757, 755, 756, 746, 0,
	768, 798, 0, 874, 0, 879, 881, -2, -2, 0,
	922, 923, 924, 925, 926, 927, 0, 0, 0, 0,
	0, 0, 0, 950, 951, 952, 953, 954, 955, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1681, 1682, 1683,
	1684, 1686, 1687, 1688, 1695, 1696, 1699, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1712, 1713, 1718, 1720, 1722, 1725,
	1726, 1727, 1728, 1730, 1731, 1732, 1734, 1735, 1736, 883,
	884, 1104, 1163, 0, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 0, 1024, 1024,
	1024, 1024, 1024, 1024, 1024, 1024, 1024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 73, 863, 77,
	1655, 0, 1168, -2, -2, 1170, 0, 0, 0, -2,
	-2, -2, -2, 1450, -2, 1104, 0, 93, 1126, 745,
	94, 0, 383, 384, 0, 1463, 576, 1216, 1217, 1452,
	1212, 1213, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 0, 0,
	241, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	1194, 243, 0, 0, 646, 0, 647, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	0, 666, 667, 710, 669, 0, 0, 1194, 1194, 0,
	0, 0, 0, 0, 578, 579, 710, 710, 710, 710,
	707, 0, 707, 687, 707, 705, 706, 0, 692, 0,
	0, 0, 700, 701, 727, 0, 0, 734, 736, 737,
	738, 739, 735, 0, 744, 0, 0, 0, 322, 0,
	0, 342, 324, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 335, 336, 337, 338, 0, 345, 0, 1222,
	1225, 731, 1240, 1241, 0, 1251, 1252, 192, 192, 0,
	0, 0, 0, 155, 188, 0, 157, 188, 188, 188,
	0, 188, 188, 164, 165, 188, 167, 168, 169, 170,
	171, 188, 173, 174, 175, 188, 188, 178, 188, 188,
	181, 182, 183, 184, 185, 255, 192, 0, 0, 192,
	0, 0, 514, 0, 0, 0, 0, 519, 520, 521,
	522, 0, 0, 525, 526, 754, 42, 56, 0, 750,
	751, 0, 0, 0, 50, 0, 0, 55, 1740, 37,
	0, 0, 1135, 1138, 1139, 1127, 1128, 1131, 0, 0,
	752, 758, 759, 748, 0, 769, 0, 0, 0, 799,
	0, 801, 802, 803, 804, 0, 877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 901, 902, 903, 904,
	905, 906, 907, 880, 0, 894, 0, 0, 0, 943,
	944, 945, 946, 947, 948, 0, 757, 0, 0, 0,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 757, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 757, 0, 0, 0, 757, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 757, 0, 1096, 0, 1007, 1016, 0, 1008,
	1017, 1009, 1018, 1010, 0, 1011, 1019, 1012, 1020, 1013,
	1014, 1021, 1015, 0, 916, 0, 0, 75, 0, 862,
	0, 805, 807, 808, 809, -2, 0, 813, 868, 914,
	1218, -2, 0, 0, 0, 67, 68, 0, 0, 0,
	0, 78, 80, 0, 0, 1655, 1171, 1172, 488, 1185,
	1186, 1187, 0, 1183, 0, 1134, 754, 593, 0, 385,
	0, 0, 397, 478, 408, 409, 410, 471, 412, 471,
	471, 0, 471, 471, 471, 471, 471, 485, 485, 485,
	485, 485, 454, 455, 456, 457, 458, 0, 0, 431,
	471, 471, 471, 435, 461, 462, 463, 464, 465, 466,
	467, 468, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 473, 473, 475, 475, 475, 475, 475, 0,
	0, 575, 0, 1210, 0, 0, 243, -2, 0, -2,
	0, 858, 0, 0, 865, 0, 0, 104, 273, 259,
	103, 0, 237, 242, 238, 239, 240, 0, 0, 0,
	0, 250, 661, 1193, 0, 654, 69, 655, 656, 657,
	658, 659, 252, 660, 864, 1220, 1221, 668, 711, 0,
	713, 0, 0, 824, 673, 674, 675, 580, 681, 682,
	683, 689, 710, 0, 0, 0, 824, 710, 691, 908,
	694, 1024, 0, 729, 728, 0, 741, 0, 319, 321,
	323, 341, 0, 0, 344, 347, 0, 0, 0, 0,
	1243, 0, 1245, 1247, 0, 0, 193, 194, 195, 0,
	187, 0, 210, 258, 0, 156, 0, 190, 158, 159,
	160, 188, 162, 163, 166, 172, 176, 177, 179, 180,
	254, 0, 0, 0, 0, 153, 0, 515, 516, 517,
	518, 527, 524, 757, 0, 0, 722, 723, 52, 0,
	0, 1152, 1141, 0, 0, 0, 0, 1130, 1132, 1133,
	0, 0, 1115, 0, 0, 760, 753, 39, 875, 876,
	878, 895, 0, 897, 899, 800, 770, 0, 1105, -2,
	885, 886, 910, 911, 912, 0, 0, 0, 0, 908,
	890, 0, 928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 942, 1038, 1039, 0, 940, 941,
	949, 0, 0, 918, 764, 765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 916, 913, 0,
	1162, 0, 0, 0, 989, 0, 0, 925, 1107, 0,
	925, 1107, 0, 0, 0, 0, 0, 0, 0, 1102,
	1099, 0, 0, 1025, 0, 0, 0, 917, 0, 0,
	0, 0, 861, 0, 0, 0, 0, 0, 0, 848,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 0,
	0, 817, 1575, 819, 0, 868, 0, 0, 0, 916,
	872, 0, 872, 72, 872, 74, 0, 867, 1169, 0,
	0, 0, 83, 84, 79, 1173, 0, 1179, 1180, 1181,
	1105, 0, 1140, 757, 382, 594, 596, 599, 600, 601,
	386, 388, 389, 390, 0, -2, 567, 1585, 1632, -2,
	-2, 559, 1498, -2, -2, 393, 480, 479, 411, 0,
	485, 485, 471, 471, 471, 471, 440, 485, 443, 446,
	447, 488, 0, 488, 488, 488, 488, 485, 0, 0,
	432, 433, 434, 423, 0, 424, 473, 426, 0, 427,
	428, 429, 430, 573, 574, 0, 0, 0, 89, 0,
	98, -2, 495, 496, 497, 0, 492, 1195, 99, 0,
	275, 276, 0, 213, 0, 244, 245, 106, 0, 0,
	260, 0, 381, 0, 648, 0, 650, 249, 652, 662,
	663, 653, 0, 0, 712, 670, 671, 672, 872, 0,
	0, 684, 708, 709, 707, 710, 688, 702, 0, 0,
	695, 0, 730, 825, 325, 326, 348, 75, 0, 1223,
	1242, 0, 1246, 1248, 0, 196, 198, 0, 147, 0,
	0, 189, 0, 161, 0, 0, 0, 0, 0, 523,
	0, 752, 57, 607, 608, -2, 639, 1202, 639, 639,
	625, 542, 639, 0, 0, 0, 53, 0, 1151, 0,
	0, 0, 1136, 1137, 1129, 0, 1188, 1189, 1116, 1117,
	90, 761, 896, 898, 900, 0, 916, 887, 908, 891,
	0, 888, 0, 882, 0, 0, 779, 0, 779, 779,
	0, 975, 0, 976, 1003, 0, 988, 779, 779, 0,
	0, 0, 0, 0, 0, 982, 983, 984, 985, 779,
	779, 779, 779, 0, 0, 0, 779, 779, 779, 0,
	921, -2, 986, 987, 0, 0, 0, 0, 0, 1031,
	0, 0, 1032, 997, 0, 0, 0, 0, 0, 1126,
	0, 1100, 0, 0, 1006, 1026, 1027, 1028, 1029, 1030,
	1156, 0, 0, 0, 1145, 0, 872, 1164, 0, 0,
	806, 839, 841, 0, 836, 849, 850, 852, 0, 854,
	0, 856, 857, 826, 812, 915, 814, 0, 0, 0,
	868, 823, 0, 0, 0, 0, 1126, 0, 872, 65,
	66, 0, 81, 82, 0, 0, 88, 489, 490, 0,
	212, 0, 597, 0, 387, 0, 560, 0, 0, 544,
	559, 555, 556, 559, 558, 559, 550, 560, 551, 0,
	398, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 484, 0, 509, 511, 0, 0, 407, 481, 0,
	488, 488, 485, 438, 439, 471, 444, 488, 448, 0,
	449, 450, 451, 452, 488, 0, 469, 0, 0, 425,
	0, 590, 0, 1211, 91, 0, 498, 499, 500, 0,
	542, 542, 542, 0, 277, 278, 279, 859, 0, 214,
	215, 0, 0, 0, 0, 866, 116, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 70, 253, 679, 581,
	582, 824, 686, 909, 696, 698, 699, 485, 0, 1244,
	0, 0, 0, 0, 0, 208, 191, 0, 0, 0,
	0, 154, 0, 760, 0, 0, 559, 0, 626, 627,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 1204, 0, 0, 0, 543, 0,
	634, 635, 0, 1154, 1153, 1142, 38, 872, 0, 771,
	1106, 0, 889, 0, 892, 779, 919, 960, 780, 766,
	0, 961, 962, 779, 772, 773, 775, 977, 964, 965,
	978, 979, 980, 779, 779, 981, 969, 968, 967, 970,
	0, 0, 779, 973, 972, 974, 956, 0, 471, 471,
	1085, 471, 475, 1088, 471, 1090, 471, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	1005, 1103, 0, 58, 0, 1156, 1143, 1158, 1160, 0,
	0, 0, 0, -2, 1428, 0, 830, 1126, 0, 0,
	0, 833, 840, 0, 0, 834, 0, 835, 853, 855,
	810, 0, 0, 815, 0, 0, -2, 822, 0, 0,
	0, 832, 1134, 873, 64, 85, 86, 87, 595, 598,
	0, 561, 471, 471, 0, 565, 557, 566, 546, 547,
	549, 0, 399, 0, 0, 482, 0, 508, 510, 512,
	513, 472, 436, 437, 488, 445, 441, 486, 487, 453,
	485, 0, 485, 0, 476, 0, 577, 591, 0, 0,
	0, 89, 542, 0, 0, 0, 0, 221, 0, 217,
	0, 0, 0, 124, 0, 107, 108, 109, 111, 112,
	0, 0, 0, 105, 0, 262, 0, 265, 266, 649,
	651, 710, 1234, 860, 208, 197, 199, 200, 208, 211,
	148, 0, 149, 151, 0, 150, 528, 90, 609, 0,
	636, 0, 0, 1210, 557, 0, -2, 612, 617, 618,
	619, 620, 621, 0, 632, 0, 614, 0, 636, 0,
	629, 0, 0, 0, 1118, 0, 0, 90, 90, 957,
	893, 959, 0, 963, 777, 776, 958, 966, 0, 0,
	971, 990, 1082, 485, 1086, 1087, 1089, 1091, 1092, 1094,
	992, 991, 0, 0, 0, 0, 998, 0, 0, 0,
	0, 0, 0, 1101, 0, 59, 0, 1161, -2, 0,
	0, 76, 0, 1134, 1165, 1166, 1167, 837, 0, 842,
	0, 828, 0, 868, 820, 0, 0, 0, 0, 63,
	534, 0, 1131, 1131, 545, 559, 0, 0, 0, 483,
	0, 0, 442, 488, 470, 488, 0, 0, 592, 0,
	89, 91, 0, 503, 504, 505, 506, 507, 0, 90,
	222, 223, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 216, 218, 219, 220, 142, 125, 126, 0, 0,
	0, 0, 117, 118, 0, 0, 0, 0, 0, 113,
	114, 115, 261, 0, 0, 264, 0, 0, 685, 1236,
	1230, 201, 201, 0, 152, 0, 0, 611, 637, 0,
	397, 397, 0, 559, 0, 628, 0, 1200, 1201, 0,
	623, 636, 0, 0, 0, 1155, 1123, 0, 872, 872,
	0, 762, 767, 1126, 0, 0, 0, 1083, 1084, 0,
	0, 0, 0, 999, 1000, 1001, 1033, 1004, 1098, 0,
	1159, 1144, 0, 1148, 0, 831, 62, 0, 827, 0,
	816, 818, 868, 869, 870, 871, 533, 537, 0, 542,
	0, 562, 563, 564, 548, 0, 394, 0, 459, 460,
	474, 477, 0, 96, 0, 501, 502, 0, 91, 224,
	225, 226, 227, 229, 230, 0, 0, 0, 102, 0,
	0, 127, 0, 0, 0, 0, 137, 138, 139, 140,
	141, 119, 120, 121, 122, 123, 110, 0, 0, 263,
	0, 268, 269, 1198, 1238, -2, 0, 145, 0, 146,
	209, 0, 610, 638, 391, 392, 0, 1210, 0, 613,
	622, 624, 0, 631, 0, 791, 0, 0, 1118, 0,
	1118, 90, 781, 0, 1022, 1023, 993, 995, 994, 996,
	0, 0, 0, 0, 1147, 0, 838, 829, 821, 538,
	539, 0, 541, 0, 405, 395, 396, 0, 535, 89,
	0, 0, 231, 232, 233, 234, 143, 144, 128, 129,
	0, 131, 132, 0, 0, 0, 271, 0, 267, 826,
	0, 1230, 0, 1232, 0, 1229, 0, 202, 872, 0,
	0, 0, 630, 0, 642, 0, 43, 0, 1124, 1125,
	1119, 1120, 1122, 1123, 872, 1123, 763, 0, 0, 0,
	778, 1002, 0, 0, 0, 1157, -2, 540, 0, 394,
	95, 536, 97, 280, 89, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 0, 0, 0, 0,
	133, 0, 135, 136, 270, 0, 36, 0, 1237, 0,
	1235, 0, 0, 1231, 0, 1118, 535, 0, 535, 641,
	0, 0, 792, 793, 0, 0, 791, 1118, 791, 774,
	782, 0, 785, 0, 0, 0, 796, 0, 783, 1034,
	0, 1037, 0, 406, 89, 0, 0, 101, 0, 0,
	1212, 0, 0, 307, 308, 309, 1214, 0, 349, 130,
	134, 272, 1199, 1239, 0, 0, 0, 1123, 615, 0,
	633, 643, 0, 0, 0, 1121, 44, 1123, 47, 0,
	786, 787, 788, 789, 790, 0, 1035, 0, 91, 281,
	282, 0, 291, 0, 0, 0, 0, 0, 305, 0,
	0, 1233, 1227, 203, 204, 205, 207, 791, 535, 0,
	794, 795, 791, 45, 0, 0, 797, 0, 568, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 0, 1215,
	235, 350, 0, 41, 616, 0, 46, 48, 784, 0,
	569, 570, 0, 89, 283, 284, 285, 286, 287, 0,
	289, 0, 0, 0, 301, 302, 303, 0, 310, 312,
	313, 314, 0, 316, 317, 306, 206, 0, 1036, 571,
	0, 572, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 298, 0, 304, 0, 315, 0, 0, 583,
	585, 586, 0, 0, 584, 0, 0, 293, 294, 0,
	0, 0, 299, 0, 311, 644, 645, 587, 588, 589,
	288, 290, 0, 296, 0, 0, 0, 0, 0, 295,
	0, 300, 297,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 175, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 554,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:511
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:515
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:522
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:557
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:563
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:569
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:576
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:582
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:593
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:600
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:606
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:613
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[9].columns}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:620
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[14].columns}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 46:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:627
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[11].tableExprs, Where: NewWhere(WhereStr, yyDollar[12].expr), GroupBy: GroupBy(yyDollar[13].exprs), Having: NewWhere(HavingStr, yyDollar[14].expr), Window: yyDollar[15].window, Into: yyDollar[9].columns}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:635
		{
			yyVAL.columns = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:639
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:645
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:655
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:665
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:685
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:691
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:703
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.str = InsertStr
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			yyVAL.str = ReplaceStr
		}
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:725
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 63:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:731
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:735
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:739
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:743
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:748
		{
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:749
		{
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:757
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:763
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:767
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:777
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:782
		{
			yyVAL.partitions = nil
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:786
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:796
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:803
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:812
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:816
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:822
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:826
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:840
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:844
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:848
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:858
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:863
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:869
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:878
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:883
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:888
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:892
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:898
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:904
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:912
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 100:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:920
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 101:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:924
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:928
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:947
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:956
		{
			yyVAL.accountNames = nil
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:965
		{
			yyVAL.tlsOptionItems = nil
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:969
		{
			yyVAL.tlsOptionItems = nil
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:989
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:993
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:997
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1001
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1005
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1010
		{
			yyVAL.accountLimitItems = nil
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1014
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1030
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1038
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1047
		{
			yyVAL.passLockItems = nil
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1057
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1061
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1067
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1075
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1087
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1091
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1095
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1099
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1124
		{
			yyVAL.str = ""
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1133
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 145:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1139
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 146:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1144
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1148
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1152
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1158
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1163
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1167
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1171
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1175
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1179
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1189
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1193
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1197
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1201
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1209
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1213
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1217
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1221
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1245
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1249
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1253
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1257
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1265
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1301
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1320
		{
			yyVAL.strs = nil
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1357
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1365
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1378
		{
			yyVAL.grantAssumption = nil
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1382
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1386
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1390
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 205:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1394
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 206:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1398
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1402
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1407
		{
			yyVAL.boolean = false
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.boolean = true
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1416
		{
			yyVAL.boolean = false
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.boolean = true
		}
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1427
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1435
		{
			yyVAL.procedureParams = nil
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1455
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1472
		{
			yyVAL.characteristics = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1486
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1492
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1496
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1500
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1508
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1512
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1520
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1534
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1540
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1544
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = ""
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = ""
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1608
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1628
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1636
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1658
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1668
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1672
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1676
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1680
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1686
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1698
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1702
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1706
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1712
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1716
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1720
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1730
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = BeforeStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = AfterStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = InsertStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = UpdateStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = DeleteStr
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1759
		{
			yyVAL.triggerOrder = nil
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1783
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1789
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 290:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1793
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1809
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1815
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 295:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1820
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 296:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1825
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 297:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1831
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1849
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1859
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1863
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 304:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1867
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1875
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1900
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1950
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Resignal{}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2034
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2038
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2046
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2052
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2057
		{
			yyVAL.exprs = nil
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.exprs = nil
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2065
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2116
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2132
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2159
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2168
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2178
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2196
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2205
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2231
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2240
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2249
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2285
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2294
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2305
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2387
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2489
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2493
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2497
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2501
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2505
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2509
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2525
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2533
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2578
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2588
		{
			yyVAL.sqlVal = nil
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2601
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2609
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2619
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2627
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2636
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2646
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = ""
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2676
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2680
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2684
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2689
		{
			yyVAL.boolean = false
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.boolean = true
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2698
		{
			yyVAL.charsetCollates = nil
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2720
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2734
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2738
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2742
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2746
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2752
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2756
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2762
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.colKeyOpt = colKey
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2784
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2796
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2802
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2806
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2810
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2814
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2838
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2851
		{
			yyVAL.str = ""
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2859
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = ""
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = yyDollar[1].str
		}
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2868
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2872
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2877
		{
			yyVAL.indexOptions = nil
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2891
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2901
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2906
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2926
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2930
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2934
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2938
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2947
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2951
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2955
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2965
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2969
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2979
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2984
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = yyDollar[1].str
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2993
		{
			yyVAL.str = ""
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2997
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3013
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3023
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 568:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3037
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 569:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3041
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 570:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3045
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 571:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3049
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 572:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3053
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3063
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3067
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3077
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3083
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3087
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3092
		{
			yyVAL.str = ""
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3122
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3126
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3130
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3134
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3139
		{
			yyVAL.boolean = true
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.boolean = true
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.boolean = false
		}
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3152
		{
			yyVAL.str = ""
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3156
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3160
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3168
		{
			yyVAL.str = yyDollar[1].str
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3172
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3176
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3186
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3195
		{
			yyVAL.str = ""
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3204
		{
			yyVAL.str = string("")
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3208
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3217
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3234
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3240
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3247
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3254
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3258
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3262
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3267
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 616:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3271
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3275
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3280
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3285
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3299
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3303
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3310
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3326
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3332
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3337
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 630:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3341
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3345
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 633:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3353
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3359
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3363
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3368
		{
			yyVAL.columnOrder = nil
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3376
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3381
		{
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
		}
	case 641:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3387
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3397
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 644:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3403
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 645:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3407
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3413
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3417
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3423
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3427
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3439
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3445
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3453
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3457
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3465
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3473
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3481
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3489
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3497
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3505
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3514
		{

		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3532
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3548
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3556
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3560
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3564
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3569
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3573
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3577
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3581
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3589
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3593
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3597
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3601
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3605
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3609
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3613
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 685:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3617
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3622
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3627
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3631
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3635
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3639
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3643
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3649
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3661
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3666
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3670
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 698:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3679
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3683
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3687
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3697
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3703
		{
			yyVAL.boolean = false
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.boolean = true
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3713
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3737
		{
			yyVAL.showFilter = nil
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3741
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = SessionStr
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.str = GlobalStr
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3769
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3773
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.statement = &Begin{}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.statement = &Begin{}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3793
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3797
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.statement = &Commit{}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.statement = &Rollback{}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3815
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3821
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3825
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3829
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3833
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3839
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3849
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3853
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3882
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3888
		{
			setAllowComments(yylex, true)
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3892
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3898
		{
			yyVAL.bytes2 = nil
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3902
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = UnionStr
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3912
		{
			yyVAL.str = UnionAllStr
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3916
		{
			yyVAL.str = UnionDistinctStr
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3921
		{
			yyVAL.byt = 0
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3925
		{
			yyVAL.byt = 1
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3930
		{
			yyVAL.str = ""
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3934
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.str = SQLCacheStr
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3943
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3947
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = DistinctStr
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = ""
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = StraightJoinHint
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3966
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3974
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3985
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3997
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4007
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4011
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4015
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4021
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 774:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4031
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4036
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4044
		{
			yyVAL.exprs = nil
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4048
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4053
		{
			yyVAL.over = nil
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.over = yyDollar[1].over
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4062
		{
			yyVAL.frame = nil
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4070
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4077
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4115
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4123
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4127
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4134
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.window = nil
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4145
		{
			yyVAL.window = yyDollar[2].window
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4154
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4160
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4178
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4186
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4214
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4228
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4244
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4257
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4261
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4272
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4287
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4291
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4295
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4299
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4310
		{
			yyVAL.expr = nil
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4314
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.columns = nil
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4343
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4349
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4362
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4366
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4370
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4374
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4382
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4386
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4392
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4394
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4397
		{
			yyVAL.empty = struct{}{}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.empty = struct{}{}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.str = JoinStr
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4418
		{
			yyVAL.str = JoinStr
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4422
		{
			yyVAL.str = JoinStr
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.str = StraightJoinStr
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4434
		{
			yyVAL.str = LeftJoinStr
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = LeftJoinStr
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = RightJoinStr
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4446
		{
			yyVAL.str = RightJoinStr
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = NaturalJoinStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4456
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4470
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4482
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4496
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4506
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4512
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4517
		{
			yyVAL.indexHints = nil
		}
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4521
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4525
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4529
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4534
		{
			yyVAL.expr = nil
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4538
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4548
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4552
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4556
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4560
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4568
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4594
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4602
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4606
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4610
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4614
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4622
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4626
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.str = IsNullStr
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.str = IsNotNullStr
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = IsTrueStr
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4648
		{
			yyVAL.str = IsNotTrueStr
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = IsFalseStr
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = IsNotFalseStr
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = EqualStr
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.str = LessThanStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			yyVAL.str = GreaterThanStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.str = LessEqualStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = GreaterEqualStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.str = NotEqualStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4691
		{
			yyVAL.expr = nil
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4695
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4701
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4715
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4725
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4731
		{
			yyVAL.selectExprs = nil
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4742
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4748
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4752
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4758
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4762
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4766
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4774
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4782
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4786
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4790
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4798
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4802
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4806
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4810
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4814
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4818
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4822
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4834
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4850
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4858
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4900
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4904
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4918
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4922
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4926
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4930
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4934
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4938
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4942
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4946
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4950
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4954
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4958
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4962
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4966
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4970
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4991
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4995
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4999
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5003
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5007
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5011
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5015
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5019
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5023
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5027
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5038
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5042
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5046
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5050
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5054
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5058
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5062
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 993:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5066
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 994:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5070
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 995:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5074
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5078
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5082
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5086
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 999:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5090
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1000:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5094
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1001:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5098
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1002:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5102
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5106
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1004:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5110
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5114
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5118
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5132
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5136
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5141
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5151
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5157
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5179
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5189
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5194
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1022:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5213
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5227
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5231
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5235
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5239
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5243
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5249
		{
			yyVAL.str = ""
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5253
		{
			yyVAL.str = BooleanModeStr
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5257
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1036:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5261
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5265
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5271
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5275
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = Armscii8Str
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
			yyVAL.str = AsciiStr
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5289
		{
			yyVAL.str = Big5Str
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5293
		{
			yyVAL.str = UBinaryStr
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.str = Cp1250Str
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = Cp1251Str
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = Cp1256Str
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = Cp1257Str
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5313
		{
			yyVAL.str = Cp850Str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5317
		{
			yyVAL.str = Cp852Str
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5321
		{
			yyVAL.str = Cp866Str
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = Cp932Str
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5329
		{
			yyVAL.str = Dec8Str
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5333
		{
			yyVAL.str = EucjpmsStr
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5337
		{
			yyVAL.str = EuckrStr
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5341
		{
			yyVAL.str = Gb18030Str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5345
		{
			yyVAL.str = Gb2312Str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5349
		{
			yyVAL.str = GbkStr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = Geostd8Str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5357
		{
			yyVAL.str = GreekStr
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5361
		{
			yyVAL.str = HebrewStr
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5365
		{
			yyVAL.str = Hp8Str
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5369
		{
			yyVAL.str = Keybcs2Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5373
		{
			yyVAL.str = Koi8rStr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5377
		{
			yyVAL.str = Koi8uStr
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.str = Latin1Str
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5385
		{
			yyVAL.str = Latin2Str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.str = Latin5Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = Latin7Str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = MacceStr
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.str = MacromanStr
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			yyVAL.str = SjisStr
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5409
		{
			yyVAL.str = Swe7Str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5413
		{
			yyVAL.str = Tis620Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5417
		{
			yyVAL.str = Ucs2Str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5421
		{
			yyVAL.str = UjisStr
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = Utf16Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = Utf16leStr
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5433
		{
			yyVAL.str = Utf32Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5437
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5441
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5451
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5455
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5459
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5467
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5471
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5477
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5481
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5485
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5489
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5493
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5501
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5506
		{
			yyVAL.expr = nil
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5510
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5515
		{
			yyVAL.str = string("")
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5519
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5525
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5529
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5535
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5540
		{
			yyVAL.expr = nil
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5544
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5554
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5558
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5564
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5568
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5572
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5576
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5580
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5588
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5592
		{
			yyVAL.expr = &NullVal{}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5602
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5606
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5611
		{
			yyVAL.exprs = nil
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5615
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5625
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5631
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5636
		{
			yyVAL.expr = nil
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5640
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5646
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5651
		{
			yyVAL.orderBy = nil
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5655
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5661
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5665
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5671
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5676
		{
			yyVAL.str = AscScr
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5680
		{
			yyVAL.str = AscScr
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5684
		{
			yyVAL.str = DescScr
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5689
		{
			yyVAL.limit = nil
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5693
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5697
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5701
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5707
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5711
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5716
		{
			yyVAL.str = ""
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5720
		{
			yyVAL.str = ForUpdateStr
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5724
		{
			yyVAL.str = ShareModeStr
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5737
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5741
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5745
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5749
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5754
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5758
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5762
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5768
		{
			yyVAL.columns = nil
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5772
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5782
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5786
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5790
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5795
		{
			yyVAL.assignExprs = nil
		}
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5799
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5805
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5809
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5815
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5819
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5825
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5831
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5841
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5845
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5851
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5854
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5860
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5864
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5870
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5881
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5894
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5907
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5913
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5917
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5923
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5927
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5931
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5937
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5941
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5945
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5952
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5959
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5963
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5967
		{
			yyVAL.expr = &Default{}
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5976
		{
			yyVAL.byt = 0
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5978
		{
			yyVAL.byt = 1
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5981
		{
			yyVAL.byt = 0
		}
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5983
		{
			yyVAL.byt = 1
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5986
		{
			yyVAL.byt = 0
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5988
		{
			yyVAL.byt = 1
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5991
		{
			yyVAL.str = ""
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.str = IgnoreStr
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5996
		{
			yyVAL.sqlVal = nil
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5998
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6002
		{
			yyVAL.empty = struct{}{}
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6004
		{
			yyVAL.empty = struct{}{}
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6007
		{
			yyVAL.empty = struct{}{}
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6009
		{
			yyVAL.empty = struct{}{}
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6011
		{
			yyVAL.empty = struct{}{}
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = UniqueStr
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6017
		{
			yyVAL.str = FulltextStr
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6019
		{
			yyVAL.str = SpatialStr
		}
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6022
		{
			yyVAL.str = ""
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6024
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6027
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6029
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6033
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6037
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6043
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6047
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6054
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6060
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6064
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6071
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6076
		{
			yyVAL.str = string("")
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6078
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6081
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6083
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6086
		{
			yyVAL.EnclosedBy = nil
		}
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6090
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6095
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6099
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6104
		{
			yyVAL.sqlVal = nil
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6108
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6113
		{
			yyVAL.sqlVal = nil
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6117
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6122
		{
			yyVAL.Fields = nil
		}
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6126
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6131
		{
			yyVAL.Lines = nil
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6140
		{
			yyVAL.sqlVal = nil
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6144
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6150
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6156
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6160
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6166
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6170
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6176
		{
			yyVAL.lockType = LockRead
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6180
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6184
		{
			yyVAL.lockType = LockWrite
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6188
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6194
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6200
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6204
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6208
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6731
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6740
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
