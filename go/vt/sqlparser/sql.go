// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
	aliasedExprs             []*AliasedExpr
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const EXTENDED = 57545
const MAXVALUE = 57546
const REORGANIZE = 57547
const LESS = 57548
const THAN = 57549
const PROCEDURE = 57550
const TRIGGER = 57551
const TRIGGERS = 57552
const FUNCTION = 57553
const STATUS = 57554
const VARIABLES = 57555
const WARNINGS = 57556
const ERRORS = 57557
const KILL = 57558
const CONNECTION = 57559
const SEQUENCE = 57560
const ENABLE = 57561
const DISABLE = 57562
const EACH = 57563
const ROW = 57564
const BEFORE = 57565
const FOLLOWS = 57566
const PRECEDES = 57567
const DEFINER = 57568
const INVOKER = 57569
const INOUT = 57570
const OUT = 57571
const DETERMINISTIC = 57572
const CONTAINS = 57573
const READS = 57574
const MODIFIES = 57575
const SQL = 57576
const SECURITY = 57577
const TEMPORARY = 57578
const ALGORITHM = 57579
const MERGE = 57580
const TEMPTABLE = 57581
const UNDEFINED = 57582
const CLASS_ORIGIN = 57583
const SUBCLASS_ORIGIN = 57584
const MESSAGE_TEXT = 57585
const MYSQL_ERRNO = 57586
const CONSTRAINT_CATALOG = 57587
const CONSTRAINT_SCHEMA = 57588
const CONSTRAINT_NAME = 57589
const CATALOG_NAME = 57590
const SCHEMA_NAME = 57591
const TABLE_NAME = 57592
const COLUMN_NAME = 57593
const CURSOR_NAME = 57594
const SIGNAL = 57595
const RESIGNAL = 57596
const SQLSTATE = 57597
const DECLARE = 57598
const CONDITION = 57599
const CURSOR = 57600
const CONTINUE = 57601
const EXIT = 57602
const UNDO = 57603
const HANDLER = 57604
const FOUND = 57605
const SQLWARNING = 57606
const SQLEXCEPTION = 57607
const FETCH = 57608
const OPEN = 57609
const CLOSE = 57610
const LOOP = 57611
const LEAVE = 57612
const ITERATE = 57613
const USER = 57614
const IDENTIFIED = 57615
const ROLE = 57616
const REUSE = 57617
const GRANT = 57618
const GRANTS = 57619
const REVOKE = 57620
const NONE = 57621
const ATTRIBUTE = 57622
const RANDOM = 57623
const PASSWORD = 57624
const INITIAL = 57625
const AUTHENTICATION = 57626
const SSL = 57627
const X509 = 57628
const CIPHER = 57629
const ISSUER = 57630
const SUBJECT = 57631
const ACCOUNT = 57632
const EXPIRE = 57633
const NEVER = 57634
const DAY = 57635
const OPTION = 57636
const OPTIONAL = 57637
const EXCEPT = 57638
const ADMIN = 57639
const PRIVILEGES = 57640
const MAX_QUERIES_PER_HOUR = 57641
const MAX_UPDATES_PER_HOUR = 57642
const MAX_CONNECTIONS_PER_HOUR = 57643
const MAX_USER_CONNECTIONS = 57644
const FLUSH = 57645
const FAILED_LOGIN_ATTEMPTS = 57646
const PASSWORD_LOCK_TIME = 57647
const REQUIRE = 57648
const PROXY = 57649
const ROUTINE = 57650
const TABLESPACE = 57651
const CLIENT = 57652
const SLAVE = 57653
const EVENT = 57654
const EXECUTE = 57655
const FILE = 57656
const RELOAD = 57657
const REPLICATION = 57658
const SHUTDOWN = 57659
const SUPER = 57660
const USAGE = 57661
const LOGS = 57662
const ENGINE = 57663
const ERROR = 57664
const GENERAL = 57665
const HOSTS = 57666
const OPTIMIZER_COSTS = 57667
const RELAY = 57668
const SLOW = 57669
const USER_RESOURCES = 57670
const NO_WRITE_TO_BINLOG = 57671
const CHANNEL = 57672
const BEGIN = 57673
const START = 57674
const TRANSACTION = 57675
const COMMIT = 57676
const ROLLBACK = 57677
const SAVEPOINT = 57678
const WORK = 57679
const RELEASE = 57680
const CHAIN = 57681
const BIT = 57682
const TINYINT = 57683
const SMALLINT = 57684
const MEDIUMINT = 57685
const INT = 57686
const INTEGER = 57687
const BIGINT = 57688
const INTNUM = 57689
const SERIAL = 57690
const REAL = 57691
const DOUBLE = 57692
const FLOAT_TYPE = 57693
const DECIMAL = 57694
const NUMERIC = 57695
const DEC = 57696
const FIXED = 57697
const PRECISION = 57698
const TIME = 57699
const TIMESTAMP = 57700
const DATETIME = 57701
const YEAR = 57702
const CHAR = 57703
const VARCHAR = 57704
const BOOL = 57705
const CHARACTER = 57706
const VARBINARY = 57707
const NCHAR = 57708
const NVARCHAR = 57709
const NATIONAL = 57710
const VARYING = 57711
const TEXT = 57712
const TINYTEXT = 57713
const MEDIUMTEXT = 57714
const LONGTEXT = 57715
const LONG = 57716
const BLOB = 57717
const TINYBLOB = 57718
const MEDIUMBLOB = 57719
const LONGBLOB = 57720
const JSON = 57721
const ENUM = 57722
const GEOMETRY = 57723
const POINT = 57724
const LINESTRING = 57725
const POLYGON = 57726
const GEOMETRYCOLLECTION = 57727
const MULTIPOINT = 57728
const MULTILINESTRING = 57729
const MULTIPOLYGON = 57730
const LOCAL = 57731
const LOW_PRIORITY = 57732
const NULLX = 57733
const AUTO_INCREMENT = 57734
const APPROXNUM = 57735
const SIGNED = 57736
const UNSIGNED = 57737
const ZEROFILL = 57738
const SRID = 57739
const COLLATION = 57740
const DATABASES = 57741
const SCHEMAS = 57742
const TABLES = 57743
const FULL = 57744
const PROCESSLIST = 57745
const COLUMNS = 57746
const FIELDS = 57747
const ENGINES = 57748
const PLUGINS = 57749
const NAMES = 57750
const CHARSET = 57751
const GLOBAL = 57752
const SESSION = 57753
const ISOLATION = 57754
const LEVEL = 57755
const READ = 57756
const WRITE = 57757
const ONLY = 57758
const REPEATABLE = 57759
const COMMITTED = 57760
const UNCOMMITTED = 57761
const SERIALIZABLE = 57762
const ENCRYPTION = 57763
const CURRENT_TIMESTAMP = 57764
const NOW = 57765
const DATABASE = 57766
const CURRENT_DATE = 57767
const CURRENT_USER = 57768
const CURRENT_TIME = 57769
const LOCALTIME = 57770
const LOCALTIMESTAMP = 57771
const UTC_DATE = 57772
const UTC_TIME = 57773
const UTC_TIMESTAMP = 57774
const REPLACE = 57775
const CONVERT = 57776
const CAST = 57777
const SUBSTR = 57778
const SUBSTRING = 57779
const TRIM = 57780
const LEADING = 57781
const TRAILING = 57782
const BOTH = 57783
const GROUP_CONCAT = 57784
const SEPARATOR = 57785
const TIMESTAMPADD = 57786
const TIMESTAMPDIFF = 57787
const OVER = 57788
const WINDOW = 57789
const GROUPING = 57790
const CURRENT = 57791
const AVG = 57792
const BIT_AND = 57793
const BIT_OR = 57794
const BIT_XOR = 57795
const COUNT = 57796
const JSON_ARRAYAGG = 57797
const JSON_OBJECTAGG = 57798
const MAX = 57799
const MIN = 57800
const STDDEV_POP = 57801
const STDDEV = 57802
const STD = 57803
const STDDEV_SAMP = 57804
const SUM = 57805
const VAR_POP = 57806
const VARIANCE = 57807
const VAR_SAMP = 57808
const CUME_DIST = 57809
const DENSE_RANK = 57810
const FIRST_VALUE = 57811
const LAG = 57812
const LAST_VALUE = 57813
const LEAD = 57814
const NTH_VALUE = 57815
const NTILE = 57816
const ROW_NUMBER = 57817
const PERCENT_RANK = 57818
const RANK = 57819
const DUAL = 57820
const JSON_TABLE = 57821
const PATH = 57822
const AVG_ROW_LENGTH = 57823
const CHECKSUM = 57824
const COMPRESSION = 57825
const DIRECTORY = 57826
const DELAY_KEY_WRITE = 57827
const ENGINE_ATTRIBUTE = 57828
const INSERT_METHOD = 57829
const MAX_ROWS = 57830
const MIN_ROWS = 57831
const PACK_KEYS = 57832
const ROW_FORMAT = 57833
const SECONDARY_ENGINE_ATTRIBUTE = 57834
const STATS_AUTO_RECALC = 57835
const STATS_PERSISTENT = 57836
const STATS_SAMPLE_PAGES = 57837
const STORAGE = 57838
const DISK = 57839
const MEMORY = 57840
const DYNAMIC = 57841
const COMPRESSED = 57842
const REDUNDANT = 57843
const COMPACT = 57844
const LIST = 57845
const HASH = 57846
const PARTITIONS = 57847
const SUBPARTITION = 57848
const SUBPARTITIONS = 57849
const PREPARE = 57850
const DEALLOCATE = 57851
const MATCH = 57852
const AGAINST = 57853
const BOOLEAN = 57854
const LANGUAGE = 57855
const WITH = 57856
const QUERY = 57857
const EXPANSION = 57858
const ACCESSIBLE = 57859
const ASENSITIVE = 57860
const CUBE = 57861
const DAY_HOUR = 57862
const DAY_MICROSECOND = 57863
const DAY_MINUTE = 57864
const DAY_SECOND = 57865
const DELAYED = 57866
const DISTINCTROW = 57867
const EMPTY = 57868
const FLOAT4 = 57869
const FLOAT8 = 57870
const GET = 57871
const HIGH_PRIORITY = 57872
const HOUR_MICROSECOND = 57873
const HOUR_MINUTE = 57874
const HOUR_SECOND = 57875
const INSENSITIVE = 57876
const INT1 = 57877
const INT2 = 57878
const INT3 = 57879
const INT4 = 57880
const INT8 = 57881
const IO_AFTER_GTIDS = 57882
const IO_BEFORE_GTIDS = 57883
const LINEAR = 57884
const MASTER_BIND = 57885
const MASTER_SSL_VERIFY_SERVER_CERT = 57886
const MIDDLEINT = 57887
const MINUTE_MICROSECOND = 57888
const MINUTE_SECOND = 57889
const PURGE = 57890
const READ_WRITE = 57891
const REPEAT = 57892
const RETURN = 57893
const RLIKE = 57894
const SECOND_MICROSECOND = 57895
const SENSITIVE = 57896
const SPECIFIC = 57897
const SQL_BIG_RESULT = 57898
const SQL_SMALL_RESULT = 57899
const VARCHARACTER = 57900
const WHILE = 57901
const YEAR_MONTH = 57902
const UNUSED = 57903
const DESCRIPTION = 57904
const LATERAL = 57905
const MEMBER = 57906
const RECURSIVE = 57907
const BUCKETS = 57908
const CLONE = 57909
const COMPONENT = 57910
const DEFINITION = 57911
const ENFORCED = 57912
const EXCLUDE = 57913
const GEOMCOLLECTION = 57914
const GET_MASTER_PUBLIC_KEY = 57915
const HISTOGRAM = 57916
const HISTORY = 57917
const INACTIVE = 57918
const INVISIBLE = 57919
const LOCKED = 57920
const MASTER_COMPRESSION_ALGORITHMS = 57921
const MASTER_PUBLIC_KEY_PATH = 57922
const MASTER_TLS_CIPHERSUITES = 57923
const MASTER_ZSTD_COMPRESSION_LEVEL = 57924
const NESTED = 57925
const NETWORK_NAMESPACE = 57926
const NOWAIT = 57927
const NULLS = 57928
const OJ = 57929
const OLD = 57930
const ORDINALITY = 57931
const ORGANIZATION = 57932
const OTHERS = 57933
const PERSIST = 57934
const PERSIST_ONLY = 57935
const PRIVILEGE_CHECKS_USER = 57936
const PROCESS = 57937
const REFERENCE = 57938
const REQUIRE_ROW_FORMAT = 57939
const RESOURCE = 57940
const RESPECT = 57941
const RESTART = 57942
const RETAIN = 57943
const SECONDARY = 57944
const SECONDARY_ENGINE = 57945
const SECONDARY_LOAD = 57946
const SECONDARY_UNLOAD = 57947
const SKIP = 57948
const THREAD_PRIORITY = 57949
const TIES = 57950
const VCPU = 57951
const VISIBLE = 57952
const SYSTEM = 57953
const INFILE = 57954
const ACTIVE = 57955
const AGGREGATE = 57956
const ANY = 57957
const ARRAY = 57958
const ASCII = 57959
const AT = 57960
const AUTOEXTEND_SIZE = 57961
const ENDS = 57962
const EVENTS = 57963
const GENERATED = 57964
const ALWAYS = 57965
const STORED = 57966
const VIRTUAL = 57967
const NVAR = 57968
const PASSWORD_LOCK = 57969

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 38,
	647, 38,
	-2, 60,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	190, 1396,
	191, 1415,
	-2, 253,
	-1, 54,
	231, 865,
	232, 865,
	-2, 854,
	-1, 73,
	5, 65,
	-2, 46,
	-1, 440,
	1, 2076,
	23, 2076,
	178, 2076,
	647, 2076,
	-2, 899,
	-1, 453,
	178, 1425,
	-2, 1419,
	-1, 454,
	178, 1426,
	-2, 1420,
	-1, 510,
	1, 554,
	647, 554,
	-2, 552,
	-1, 533,
	178, 1786,
	-2, 1063,
	-1, 563,
	178, 1894,
	-2, 1314,
	-1, 564,
	178, 1975,
	-2, 1065,
	-1, 565,
	178, 1806,
	-2, 1066,
	-1, 632,
	178, 1757,
	-2, 1284,
	-1, 635,
	178, 1774,
	-2, 1213,
	-1, 636,
	178, 1987,
	-2, 1213,
	-1, 637,
	178, 1986,
	-2, 1213,
	-1, 638,
	178, 1985,
	-2, 1213,
	-1, 639,
	178, 1874,
	-2, 1213,
	-1, 640,
	178, 1875,
	-2, 1213,
	-1, 641,
	178, 1772,
	-2, 1213,
	-1, 642,
	178, 1773,
	-2, 1213,
	-1, 643,
	178, 1775,
	-2, 1213,
	-1, 891,
	101, 2088,
	178, 2088,
	-2, 1380,
	-1, 892,
	101, 2197,
	178, 2197,
	-2, 1381,
	-1, 897,
	101, 2112,
	178, 2112,
	-2, 1382,
	-1, 898,
	101, 2156,
	178, 2156,
	-2, 1383,
	-1, 899,
	101, 2157,
	178, 2157,
	-2, 1384,
	-1, 900,
	101, 2025,
	178, 2025,
	-2, 1388,
	-1, 902,
	101, 2133,
	178, 2133,
	-2, 1390,
	-1, 1065,
	357, 878,
	-2, 882,
	-1, 1067,
	357, 878,
	-2, 882,
	-1, 1172,
	5, 65,
	-2, 47,
	-1, 1177,
	1, 554,
	647, 554,
	-2, 552,
	-1, 1179,
	1, 555,
	647, 555,
	-2, 552,
	-1, 1443,
	1, 554,
	647, 554,
	-2, 552,
	-1, 1445,
	1, 554,
	647, 554,
	-2, 552,
	-1, 1917,
	178, 1428,
	-2, 1424,
	-1, 2037,
	1, 974,
	5, 974,
	12, 974,
	13, 974,
	14, 974,
	15, 974,
	17, 974,
	19, 974,
	29, 974,
	30, 974,
	56, 974,
	57, 974,
	58, 974,
	59, 974,
	60, 974,
	62, 974,
	63, 974,
	66, 974,
	67, 974,
	69, 974,
	70, 974,
	88, 974,
	421, 974,
	466, 974,
	647, 974,
	-2, 1007,
	-1, 2045,
	67, 82,
	69, 82,
	-2, 86,
	-1, 2063,
	178, 1898,
	-2, 1385,
	-1, 2224,
	44, 732,
	197, 734,
	199, 732,
	200, 732,
	-2, 778,
	-1, 2273,
	5, 66,
	-2, 1095,
	-1, 2831,
	197, 735,
	-2, 733,
	-1, 2904,
	69, 1670,
	70, 1670,
	178, 1670,
	-2, 905,
	-1, 2930,
	1, 1049,
	5, 1049,
	12, 1049,
	13, 1049,
	14, 1049,
	15, 1049,
	17, 1049,
	19, 1049,
	29, 1049,
	30, 1049,
	56, 1049,
	57, 1049,
	58, 1049,
	59, 1049,
	60, 1049,
	62, 1049,
	63, 1049,
	66, 1049,
	67, 1049,
	69, 1049,
	70, 1049,
	88, 1049,
	421, 1049,
	466, 1049,
	647, 1049,
	-2, 1007,
	-1, 3119,
	5, 66,
	-2, 1346,
	-1, 3222,
	41, 1435,
	-2, 1433,
	-1, 3461,
	5, 66,
	-2, 1349,
	-1, 3484,
	281, 320,
	-2, 1490,
	-1, 3485,
	281, 321,
	-2, 1531,
	-1, 3486,
	281, 322,
	-2, 1707,
	-1, 3682,
	96, 305,
	98, 305,
	100, 305,
	-2, 60,
	-1, 3718,
	98, 312,
	99, 312,
	100, 312,
	-2, 60,
}

const yyPrivate = 57344

const yyLast = 54122

var yyAct = [...]int{
	575, 82, 3659, 3625, 3606, 1194, 3674, 3491, 2472, 3563,
	3607, 3627, 2434, 1008, 3498, 2613, 465, 3518, 3372, 3,
	2433, 506, 3375, 7, 3374, 6, 3367, 2060, 2804, 3453,
	3373, 5, 3463, 3540, 1277, 3335, 3160, 3376, 8, 2775,
	3291, 2940, 2639, 535, 3334, 3222, 2728, 3451, 2924, 1373,
	2358, 2128, 2567, 1476, 2993, 1278, 3224, 574, 2897, 2356,
	519, 3076, 539, 526, 2898, 2788, 2145, 85, 2499, 3046,
	3030, 2352, 3052, 444, 447, 2718, 2729, 1889, 1942, 2825,
	502, 3368, 2640, 82, 490, 490, 1869, 2894, 496, 978,
	97, 1051, 2814, 2077, 1033, 2481, 2086, 552, 2906, 1863,
	1861, 517, 1301, 2424, 2915, 110, 2223, 1078, 1882, 538,
	2041, 2383, 2341, 1948, 2002, 2583, 1478, 516, 2090, 2034,
	2092, 971, 2175, 2073, 2425, 2033, 2194, 2114, 1862, 1815,
	2334, 1779, 1452, 2463, 2110, 1351, 1195, 1993, 1919, 1202,
	2037, 893, 1355, 1198, 542, 1820, 2420, 1109, 1087, 522,
	1354, 970, 2047, 1182, 2621, 1216, 889, 2717, 896, 890,
	131, 505, 1023, 1181, 468, 1180, 1178, 467, 1086, 1071,
	532, 442, 2643, 1007, 1475, 2535, 1791, 991, 1792, 450,
	1761, 544, 1446, 996, 511, 106, 102, 87, 73, 3718,
	2441, 3713, 3704, 3682, 3680, 2445, 3654, 3634, 3620, 3552,
	3548, 84, 3293, 3292, 2743, 1813, 3201, 2773, 3023, 968,
	2944, 2450, 2449, 3715, 483, 3711, 477, 488, 471, 3709,
	460, 3641, 3199, 3449, 3599, 3343, 42, 39, 89, 1005,
	95, 2159, 2159, 2446, 3566, 3031, 39, 3202, 478, 3437,
	2785, 1021, 3448, 3342, 2605, 3033, 405, 3533, 3275, 2452,
	2634, 2431, 3144, 2985, 3150, 3157, 3158, 2700, 2003, 2432,
	2699, 80, 3573, 3604, 3315, 3514, 2941, 2311, 2635, 39,
	39, 2888, 975, 990, 2193, 2456, 512, 3260, 884, 885,
	886, 3214, 39, 993, 2492, 998, 999, 439, 1065, 83,
	2831, 1356, 3457, 1357, 1206, 504, 1816, 1001, 83, 3251,
	2062, 2435, 93, 91, 92, 1876, 2681, 1233, 1232, 1242,
	1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 2376,
	1186, 1244, 2375, 2354, 2056, 2377, 2682, 2683, 3454, 2057,
	2058, 83, 83, 3273, 1037, 1038, 1879, 1880, 1041, 1120,
	1837, 1819, 1138, 3457, 83, 124, 120, 121, 3009, 122,
	83, 3015, 3017, 3016, 3013, 3014, 3012, 3011, 3010, 966,
	3036, 3452, 459, 1054, 2448, 1817, 1818, 2451, 1055, 1056,
	3018, 3019, 1039, 1040, 83, 458, 1146, 2454, 2192, 3454,
	462, 2088, 2089, 126, 125, 500, 1106, 2444, 2093, 470,
	469, 472, 2093, 3458, 1950, 2104, 2111, 2874, 2973, 476,
	3100, 2181, 3034, 3035, 3037, 3038, 3039, 2096, 2098, 2872,
	2097, 2218, 2180, 437, 434, 457, 480, 1399, 1797, 987,
	1068, 484, 2712, 513, 1061, 2525, 1858, 1857, 1856, 1855,
	1854, 1853, 1142, 1143, 2487, 2517, 487, 3593, 2692, 1122,
	82, 1113, 82, 3228, 3458, 501, 2813, 127, 1435, 128,
	3425, 3047, 2522, 2660, 2206, 2347, 2348, 3547, 1072, 3050,
	517, 3500, 1073, 3499, 1075, 2343, 2346, 2347, 2348, 2344,
	1074, 2345, 2350, 3048, 3049, 3427, 1077, 3053, 3054, 3055,
	3056, 2795, 2786, 3319, 528, 1062, 1063, 3064, 2789, 2790,
	2791, 2792, 2793, 3672, 3507, 2231, 2225, 2226, 2491, 2224,
	2227, 2228, 1399, 82, 2489, 1042, 3200, 1176, 3073, 3317,
	3196, 1024, 2146, 2207, 3062, 1189, 2789, 2790, 2791, 2792,
	2793, 1848, 1386, 3692, 510, 3633, 3664, 3549, 3545, 3543,
	3544, 3194, 118, 1450, 1253, 1255, 3193, 2234, 1257, 473,
	474, 475, 481, 1827, 485, 486, 489, 3615, 3192, 3671,
	2444, 2233, 2232, 83, 1052, 1874, 1053, 1055, 1056, 1459,
	1460, 1458, 3191, 995, 994, 3190, 3189, 1269, 2419, 1110,
	1272, 1273, 1274, 1275, 1276, 438, 1281, 3218, 2447, 2798,
	112, 3524, 1122, 2443, 3188, 997, 3305, 3306, 1036, 997,
	1050, 117, 3476, 3477, 517, 2140, 2141, 112, 3370, 123,
	1875, 1145, 3134, 2666, 1400, 3622, 3301, 1386, 1048, 1049,
	1153, 1047, 1877, 1154, 2507, 2508, 1046, 3595, 3561, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 119, 1298, 1299, 1302, 1302, 1302, 1308,
	1302, 1302, 1308, 1302, 1308, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 2942, 2457, 443, 3289, 461, 1254,
	3699, 445, 1819, 129, 3455, 3032, 138, 448, 2691, 1400,
	139, 1172, 1114, 140, 141, 2815, 2200, 987, 1121, 142,
	1798, 1223, 1069, 2113, 2772, 3148, 1817, 1818, 2461, 2490,
	2444, 3341, 2095, 2944, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 3252, 1793, 2584, 2230, 1067, 1435, 3197, 1076, 3146,
	3616, 449, 3149, 2690, 3316, 3455, 3426, 3572, 1300, 1304,
	1306, 3283, 1310, 1312, 2975, 1315, 94, 1413, 1416, 1417,
	1418, 1419, 1420, 1421, 518, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 518, 1401, 1402, 1403, 1404, 1380, 1384,
	1414, 1381, 1387, 1383, 1385, 1382, 1188, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 518, 74, 3215, 1173,
	3309, 2493, 3217, 446, 2797, 2586, 3673, 1132, 2442, 518,
	1123, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 2349, 1139,
	1140, 1141, 479, 1144, 114, 1147, 1148, 1149, 1150, 1151,
	2349, 454, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 3678,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 2085, 1401,
	1402, 1403, 1404, 1380, 1384, 1414, 1381, 1387, 1383, 1385,
	1382, 1155, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 137, 446, 402, 404, 1821, 2137, 137, 2974, 2976,
	2977, 2978, 137, 1758, 2343, 2346, 2347, 2348, 2344, 987,
	2345, 2350, 493, 493, 2916, 2917, 137, 2719, 2720, 987,
	1434, 3077, 3078, 2083, 2721, 2541, 1203, 2136, 114, 1415,
	2361, 2363, 1823, 1122, 3631, 1822, 1225, 3626, 2830, 2085,
	137, 980, 446, 2964, 987, 2732, 2965, 977, 2966, 3719,
	987, 3716, 3705, 3629, 2083, 3683, 992, 1010, 3321, 3311,
	137, 493, 896, 980, 512, 3087, 1118, 896, 3088, 2811,
	2588, 1020, 137, 103, 138, 2592, 2131, 2587, 139, 2585,
	1279, 140, 141, 2516, 2590, 2512, 2495, 142, 3161, 116,
	115, 2494, 2201, 1464, 1462, 2553, 1070, 2589, 989, 2673,
	2085, 2085, 2672, 3163, 2084, 2671, 988, 1024, 2510, 1185,
	2548, 2541, 2591, 2593, 1415, 2545, 1000, 2085, 2544, 2547,
	400, 2286, 83, 490, 3676, 3091, 1454, 3677, 2428, 3675,
	2283, 1259, 1260, 1430, 1431, 1432, 1433, 1297, 2156, 2911,
	1258, 1359, 490, 2155, 1368, 1477, 1360, 1256, 2860, 987,
	2680, 2514, 2513, 2380, 2265, 2254, 2216, 2138, 1129, 1349,
	2052, 2362, 1453, 1892, 1261, 1367, 1457, 1271, 1270, 1224,
	1104, 1022, 3314, 105, 2062, 1064, 1244, 1437, 1435, 1346,
	1347, 3336, 2372, 116, 115, 2084, 2808, 82, 2997, 2821,
	3114, 1117, 2541, 3310, 2531, 1234, 987, 3502, 1244, 2542,
	2083, 1789, 1372, 3525, 3526, 1072, 2529, 3522, 3523, 1073,
	1440, 1075, 3346, 3345, 2560, 2335, 1261, 1074, 1885, 1480,
	1127, 3204, 3162, 1780, 1787, 1215, 2620, 3363, 2219, 112,
	1024, 2913, 1258, 1470, 2607, 446, 3086, 1764, 2912, 113,
	117, 2167, 490, 2723, 3628, 3630, 2084, 2084, 1044, 2998,
	2822, 1775, 1776, 1777, 1778, 2532, 1128, 3205, 1124, 1770,
	1771, 1772, 1773, 2084, 1774, 1369, 2552, 2530, 2910, 1810,
	2549, 1035, 1807, 2722, 3503, 107, 1846, 108, 1057, 3092,
	1890, 1891, 1466, 1830, 1212, 1449, 1442, 1441, 1455, 1259,
	1260, 1365, 1125, 1126, 1783, 1456, 1784, 1080, 1259, 1260,
	82, 1215, 3686, 3660, 3685, 82, 1474, 1003, 1473, 1002,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 517, 1763,
	1244, 1926, 1852, 1781, 1768, 1769, 1766, 1237, 1238, 1239,
	1240, 1241, 1234, 3703, 1881, 1244, 1924, 1925, 1923, 1994,
	1786, 2168, 137, 3617, 1213, 1214, 1212, 1030, 1045, 1009,
	2278, 3567, 2277, 1444, 1795, 1794, 1799, 1213, 1214, 1212,
	1802, 1803, 3063, 1215, 1805, 3707, 82, 3057, 1034, 2349,
	1066, 1825, 1213, 1214, 1212, 1059, 1215, 1213, 1214, 1212,
	1808, 3591, 2279, 100, 517, 3619, 3093, 1209, 1213, 1214,
	1212, 1215, 1281, 1829, 1826, 1920, 1215, 1214, 1212, 1994,
	137, 2299, 1828, 1213, 1214, 1212, 1878, 1215, 2188, 1847,
	517, 3542, 1850, 1953, 1955, 1215, 138, 1213, 1214, 1212,
	139, 1917, 1215, 140, 141, 2609, 1970, 104, 99, 142,
	1883, 1899, 3574, 2856, 1912, 2741, 1215, 1213, 1214, 1212,
	3644, 3700, 1851, 1873, 3541, 137, 1859, 3423, 1213, 1214,
	1212, 1911, 1883, 1871, 1870, 1872, 1215, 3472, 2038, 1866,
	137, 3430, 1199, 1979, 1982, 1200, 1946, 1215, 1952, 98,
	1219, 1995, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 3422,
	1959, 1961, 1921, 1908, 2061, 1303, 1305, 1307, 1309, 1311,
	1313, 1314, 1316, 1172, 3541, 3424, 3579, 3701, 3578, 3364,
	1223, 1904, 1906, 1907, 2251, 2252, 2253, 1918, 3312, 1905,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1894, 896, 2469, 3276, 2032,
	83, 3212, 1762, 1762, 3211, 3210, 2982, 2980, 3603, 2068,
	1767, 1943, 1922, 1944, 1160, 3209, 1213, 1214, 1212, 2008,
	1895, 2010, 3203, 1896, 3022, 3021, 3313, 2970, 2960, 2953,
	2744, 2468, 1785, 2466, 1917, 1215, 2455, 2031, 2378, 2045,
	2379, 1831, 1112, 1985, 1834, 1835, 1836, 2066, 1838, 1839,
	1111, 1084, 1840, 1998, 2983, 2981, 3554, 3553, 1841, 2153,
	3504, 3501, 1842, 1843, 2067, 1844, 1845, 3436, 3308, 3307,
	3288, 3219, 2042, 2074, 3187, 1083, 2082, 3156, 1279, 3155,
	3141, 3110, 2094, 2050, 2099, 2100, 2101, 2102, 2103, 2059,
	2054, 2046, 3060, 2053, 3059, 3058, 1947, 2151, 2152, 2069,
	2107, 2108, 2109, 2071, 2124, 2125, 2126, 2120, 2121, 2122,
	2123, 1170, 3020, 2979, 428, 2971, 2963, 2961, 2957, 2956,
	2955, 1971, 1972, 1973, 975, 2820, 2760, 1977, 1978, 1981,
	1984, 2563, 1989, 1990, 2116, 2117, 2118, 2119, 1996, 2112,
	2562, 2533, 2464, 2189, 1958, 2162, 2147, 1962, 1963, 1964,
	1965, 1966, 2149, 2150, 1804, 1760, 1759, 3708, 2001, 2157,
	2004, 2005, 1184, 3693, 3636, 2009, 3550, 2011, 2012, 3538,
	1991, 3537, 3494, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 3493, 3489, 1900, 1901, 1902,
	2132, 3488, 2134, 3318, 83, 3236, 2428, 1166, 3230, 3492,
	557, 556, 559, 560, 561, 562, 3084, 1177, 2893, 558,
	1954, 2754, 2755, 2850, 2846, 2832, 406, 2799, 2502, 1165,
	1161, 1162, 1163, 1164, 1167, 1168, 1169, 1171, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234,
	2747, 100, 1244, 2501, 2182, 2164, 1279, 2163, 1945, 1801,
	1796, 1975, 1976, 409, 1472, 1471, 1445, 1443, 1107, 1031,
	456, 464, 418, 426, 427, 1233, 1232, 1242, 1243, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1234, 1465, 2281, 1244,
	2263, 1193, 2361, 2363, 3170, 1193, 3170, 3576, 137, 2988,
	3559, 3442, 1193, 3529, 1193, 2988, 3510, 980, 1152, 415,
	39, 40, 416, 1193, 1118, 424, 425, 3361, 557, 556,
	559, 560, 561, 562, 63, 3229, 3710, 558, 1954, 3180,
	79, 2988, 3438, 42, 67, 68, 3170, 3351, 2988, 3299,
	2065, 64, 3179, 495, 2263, 1193, 2778, 1233, 1232, 1242,
	1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 3170,
	3266, 1244, 3170, 3169, 3123, 1193, 2215, 1193, 55, 1308,
	2988, 2987, 83, 2176, 2770, 2769, 2766, 2767, 421, 1233,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 2766, 2765, 1244, 2338, 1193, 2203, 2202, 2763, 422,
	980, 137, 1968, 2186, 2048, 2048, 1968, 1193, 1371, 1370,
	493, 493, 2895, 2127, 493, 2909, 86, 2500, 2191, 2762,
	2500, 137, 2761, 2362, 137, 2367, 2337, 1758, 2144, 493,
	493, 2185, 1887, 1157, 137, 557, 556, 559, 560, 561,
	562, 2213, 3667, 1156, 558, 1954, 1116, 3596, 3565, 2160,
	137, 137, 137, 137, 2169, 137, 1997, 2909, 2165, 2174,
	2049, 2049, 2051, 1758, 1115, 407, 2338, 1116, 3117, 2143,
	2263, 2173, 493, 2172, 2338, 1968, 137, 2909, 2338, 2159,
	2926, 2779, 2768, 1886, 2561, 44, 75, 48, 47, 50,
	2534, 1118, 2055, 2255, 2263, 2305, 2304, 1806, 2161, 420,
	410, 411, 2158, 431, 1888, 1110, 1174, 412, 414, 967,
	408, 430, 429, 1849, 1814, 1758, 980, 54, 78, 77,
	1463, 1461, 1353, 83, 49, 3473, 3439, 2925, 3332, 493,
	493, 493, 2198, 3233, 980, 2184, 3131, 3024, 2091, 69,
	2916, 2917, 2190, 2115, 2093, 2740, 2111, 2418, 1122, 2139,
	2197, 2183, 2106, 2105, 2205, 423, 1438, 2208, 1103, 1917,
	2129, 1920, 2177, 1028, 493, 1027, 3698, 2749, 2752, 493,
	493, 83, 1912, 2750, 2751, 3696, 61, 62, 3648, 3646,
	3608, 2212, 2919, 2895, 2777, 2042, 137, 2470, 980, 2067,
	1824, 1468, 1158, 1119, 2250, 2659, 2923, 137, 2656, 70,
	2658, 71, 2654, 2657, 433, 2922, 2921, 2655, 2243, 2653,
	2241, 2242, 2652, 523, 524, 3520, 3447, 2564, 2240, 2355,
	1207, 1208, 137, 3496, 2364, 2365, 72, 1898, 2038, 1219,
	2260, 2038, 3512, 3120, 2248, 2247, 52, 517, 3257, 3083,
	2991, 2845, 2256, 2360, 3435, 2844, 2759, 2758, 1921, 1205,
	2757, 2430, 2422, 2266, 56, 76, 3323, 58, 59, 65,
	2734, 66, 3497, 435, 436, 3326, 3434, 3223, 980, 3221,
	980, 3304, 3303, 980, 455, 2257, 2258, 2259, 1800, 2559,
	980, 2558, 980, 980, 3206, 3207, 2950, 1196, 2745, 2693,
	2217, 1366, 137, 1101, 1085, 1082, 1081, 896, 1197, 2368,
	1032, 3665, 2369, 3240, 3239, 1184, 1890, 1891, 2351, 3115,
	2298, 3065, 2133, 1467, 3597, 3428, 3225, 2996, 3066, 1480,
	1079, 2336, 2776, 1207, 1208, 2246, 100, 2130, 1860, 980,
	980, 1190, 1191, 2245, 3585, 3584, 3583, 2291, 2292, 2293,
	3184, 2310, 2312, 2211, 1060, 520, 1437, 3506, 2318, 2319,
	2320, 2321, 3505, 3446, 3432, 3355, 2366, 2204, 137, 137,
	137, 3327, 3256, 2042, 2685, 521, 86, 2370, 3445, 3338,
	2500, 490, 2042, 2417, 2506, 2042, 1359, 1453, 2373, 2475,
	2476, 2477, 3649, 980, 2423, 2381, 2426, 3650, 3649, 967,
	3551, 3095, 2818, 2497, 82, 2523, 2458, 2459, 2460, 2462,
	2521, 2267, 2268, 2269, 2270, 2271, 2520, 2287, 2427, 2429,
	2284, 2209, 517, 1782, 1210, 1026, 1025, 3650, 3348, 2756,
	2465, 1884, 2473, 515, 3389, 57, 3391, 22, 2467, 3670,
	2296, 51, 53, 3390, 21, 3392, 23, 74, 3393, 24,
	3387, 17, 3386, 16, 3385, 15, 3388, 18, 2504, 2496,
	3384, 14, 3378, 10, 3410, 37, 2488, 3408, 36, 3407,
	35, 3406, 31, 1203, 3405, 30, 88, 137, 2220, 2221,
	3404, 29, 60, 137, 137, 493, 493, 493, 3402, 26,
	137, 3401, 25, 3495, 2503, 3403, 27, 2290, 3383, 13,
	3380, 12, 2614, 3379, 11, 1, 2527, 2199, 2509, 3377,
	9, 2511, 1832, 3045, 2515, 3044, 3051, 2784, 2787, 2486,
	3061, 1451, 3195, 1006, 2142, 2636, 2638, 1108, 3433, 2038,
	2038, 2038, 2038, 2038, 2526, 3322, 2539, 2505, 2538, 2536,
	2546, 2551, 1917, 517, 2569, 2565, 2355, 2594, 2667, 3324,
	2596, 3220, 3068, 2272, 2606, 1912, 1193, 3029, 2038, 2637,
	2570, 3028, 2480, 2662, 517, 2479, 2518, 2574, 1102, 1812,
	2571, 2669, 2576, 2537, 2524, 2540, 2154, 2229, 1866, 2300,
	1970, 2210, 1159, 1192, 2075, 2595, 3532, 3274, 3143, 2943,
	2641, 2543, 2939, 2554, 2555, 2382, 2972, 2557, 2070, 3462,
	969, 2670, 96, 2166, 1043, 1233, 1232, 1242, 1243, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1234, 413, 2072, 1244,
	2439, 3325, 2573, 1105, 2438, 2676, 2453, 2678, 2679, 2677,
	2087, 1179, 2742, 1183, 2437, 2436, 2753, 3320, 2440, 1377,
	1375, 1376, 1374, 1379, 2597, 2598, 1378, 2599, 2600, 2648,
	2649, 2601, 2651, 2661, 2647, 3643, 3571, 2650, 2615, 2616,
	2617, 2618, 2619, 417, 1361, 2610, 2611, 3483, 2892, 2674,
	2569, 1211, 568, 2042, 2042, 2042, 2042, 2042, 1193, 2746,
	111, 3085, 2550, 2881, 498, 499, 2684, 101, 109, 1897,
	2042, 419, 2726, 490, 1252, 2244, 2794, 2374, 894, 2124,
	895, 2126, 2042, 2733, 887, 2735, 1232, 1242, 1243, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1234, 2178, 2236, 1244,
	2805, 1175, 2780, 3344, 3513, 3562, 2675, 1233, 1232, 1242,
	1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 2801,
	3475, 1244, 1201, 3515, 3444, 2748, 2498, 3337, 2796, 2297,
	1296, 1992, 541, 2665, 3113, 3517, 1903, 555, 554, 2736,
	2737, 2738, 553, 2739, 550, 551, 3456, 1893, 2633, 1226,
	2771, 2774, 2764, 530, 2036, 2029, 2187, 2342, 2340, 2339,
	137, 1469, 1350, 1233, 1232, 1242, 1243, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1234, 2800, 2886, 1244, 2918, 2914,
	2353, 2803, 137, 137, 137, 2040, 2035, 2039, 41, 3094,
	1058, 2806, 2566, 2887, 3250, 2880, 2249, 90, 514, 2528,
	525, 2857, 1437, 28, 2849, 20, 2900, 82, 19, 2222,
	1004, 2823, 2556, 2829, 43, 45, 137, 46, 137, 2474,
	2135, 3482, 980, 3624, 1088, 517, 3635, 980, 3658, 3539,
	34, 2847, 33, 32, 3399, 3398, 3397, 2928, 3400, 3396,
	3395, 2901, 2932, 2933, 2934, 2855, 3394, 2896, 3409, 980,
	3382, 3381, 980, 2828, 3610, 3609, 4, 2807, 1187, 81,
	38, 2812, 965, 2899, 2608, 2816, 2817, 2641, 2819, 2,
	0, 0, 0, 2867, 2868, 0, 2869, 0, 2908, 2871,
	0, 2873, 0, 0, 0, 980, 2870, 2837, 2842, 0,
	2931, 0, 0, 0, 2927, 1233, 1232, 1242, 1243, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1234, 2903, 0, 1244,
	0, 0, 0, 2859, 2937, 0, 2938, 0, 0, 0,
	3001, 3003, 3005, 3006, 0, 2920, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2929, 0, 2948, 0,
	0, 2954, 0, 2883, 2884, 2885, 82, 0, 0, 2962,
	0, 0, 2726, 0, 0, 3026, 0, 0, 0, 0,
	2726, 2999, 0, 0, 517, 0, 0, 0, 2686, 2687,
	2688, 2689, 0, 0, 2694, 2695, 2696, 2697, 2698, 1866,
	3025, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 0, 2713, 2714, 2715, 2716, 0, 2727, 0,
	0, 3041, 3042, 3043, 0, 0, 0, 0, 2992, 2930,
	0, 0, 0, 0, 2945, 2946, 2947, 0, 0, 2989,
	2990, 0, 0, 0, 3008, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 2967, 2968, 2969, 0, 0, 0,
	137, 0, 0, 137, 2984, 3040, 3079, 3080, 0, 137,
	3081, 0, 137, 137, 137, 2986, 0, 0, 3027, 2805,
	0, 0, 0, 0, 0, 2802, 3069, 3099, 3067, 0,
	3070, 0, 0, 0, 3075, 3072, 0, 0, 0, 3096,
	3097, 3089, 0, 2995, 0, 0, 0, 0, 0, 0,
	0, 2124, 0, 0, 3007, 2733, 0, 0, 0, 0,
	3090, 0, 0, 3082, 0, 0, 0, 0, 0, 0,
	0, 0, 3145, 3147, 0, 0, 0, 0, 0, 0,
	0, 2851, 0, 0, 0, 0, 0, 0, 0, 0,
	2569, 980, 528, 137, 0, 0, 0, 0, 0, 0,
	980, 980, 2641, 0, 0, 493, 3124, 0, 0, 0,
	3133, 3136, 0, 0, 3116, 0, 3071, 3138, 3139, 3140,
	137, 493, 3125, 3074, 0, 0, 0, 3172, 3142, 0,
	0, 0, 0, 0, 2889, 0, 0, 0, 0, 493,
	1302, 1302, 1302, 1308, 1302, 1302, 1308, 1302, 1308, 1317,
	1318, 3137, 0, 0, 0, 0, 0, 3153, 3151, 980,
	0, 3154, 0, 493, 3182, 980, 0, 0, 2726, 0,
	0, 493, 0, 0, 0, 0, 0, 980, 980, 3101,
	3102, 3103, 3104, 0, 0, 0, 0, 3108, 0, 0,
	0, 3111, 3112, 0, 0, 3164, 3183, 3165, 3166, 3159,
	0, 3181, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 3185, 0, 0, 0, 0, 980, 0, 0, 0,
	0, 0, 0, 0, 3241, 0, 2038, 0, 0, 0,
	3186, 0, 2949, 0, 2951, 2952, 0, 0, 0, 0,
	0, 2958, 2959, 1304, 1306, 3198, 1310, 1312, 2900, 1315,
	0, 2900, 3262, 3213, 3208, 0, 0, 0, 0, 3227,
	3216, 0, 0, 0, 0, 2928, 0, 0, 3167, 3168,
	517, 0, 0, 980, 0, 0, 0, 3278, 0, 3280,
	3281, 3282, 3238, 0, 1967, 1969, 3261, 2360, 0, 3269,
	3245, 0, 1974, 3242, 3226, 0, 0, 3244, 0, 0,
	137, 137, 137, 137, 137, 2899, 3231, 3232, 2899, 3259,
	0, 3255, 3258, 137, 82, 3264, 3265, 137, 0, 0,
	0, 137, 3267, 0, 0, 3268, 3285, 0, 0, 137,
	2006, 2007, 517, 0, 0, 0, 0, 2013, 2014, 2015,
	2016, 0, 980, 0, 0, 0, 0, 0, 3300, 0,
	0, 3277, 0, 3279, 0, 3302, 0, 0, 0, 3234,
	3235, 3284, 2726, 0, 2726, 0, 0, 3286, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 2725, 2726, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3173, 2900, 3174, 82, 3175, 3177, 0, 0, 0, 0,
	0, 0, 0, 0, 3353, 3354, 0, 0, 0, 3328,
	3330, 517, 0, 3329, 0, 0, 3331, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 0, 3350, 3339, 0,
	0, 0, 137, 82, 0, 3126, 3127, 3128, 3129, 3369,
	3371, 3130, 3347, 0, 3132, 980, 980, 980, 2899, 3349,
	3352, 493, 0, 1279, 0, 3360, 137, 493, 0, 0,
	0, 0, 0, 3357, 0, 3359, 0, 3362, 0, 0,
	0, 0, 137, 3294, 493, 0, 980, 0, 493, 0,
	0, 0, 493, 493, 0, 493, 0, 0, 0, 0,
	0, 0, 3152, 0, 0, 0, 0, 2827, 3431, 3429,
	0, 0, 0, 0, 0, 0, 2835, 2840, 980, 3440,
	3478, 0, 137, 980, 0, 0, 2827, 0, 0, 980,
	0, 3460, 980, 980, 3459, 0, 0, 3466, 0, 3465,
	3365, 0, 0, 0, 0, 3285, 0, 3474, 0, 0,
	3333, 2641, 0, 0, 0, 0, 0, 82, 0, 0,
	0, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 3490, 0, 0, 0, 0, 0, 0, 0, 0,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 0, 0, 3464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3508, 0, 0, 980, 0,
	980, 0, 0, 3534, 0, 0, 0, 0, 3511, 0,
	0, 0, 3521, 0, 3536, 0, 3509, 0, 3000, 3002,
	3004, 528, 0, 0, 0, 0, 0, 0, 0, 980,
	0, 0, 3527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3487, 3530, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 3558, 0, 0, 2725, 3535, 0,
	0, 0, 0, 3546, 0, 2725, 0, 3560, 0, 0,
	0, 0, 0, 82, 0, 0, 0, 0, 0, 82,
	82, 0, 0, 82, 0, 0, 3589, 3582, 0, 0,
	3589, 0, 3570, 0, 3590, 0, 0, 2805, 0, 0,
	0, 0, 980, 3580, 3287, 3586, 3577, 0, 0, 0,
	82, 0, 0, 3598, 0, 82, 3594, 0, 0, 3575,
	0, 3602, 0, 0, 3618, 3621, 3638, 3600, 2614, 2061,
	3614, 0, 3613, 517, 1204, 0, 3639, 490, 3612, 137,
	3637, 980, 3647, 3640, 3632, 3611, 82, 3645, 3651, 3623,
	82, 82, 3653, 3642, 0, 82, 0, 0, 3589, 3464,
	3652, 0, 3661, 0, 3655, 82, 0, 0, 0, 0,
	0, 0, 3589, 493, 0, 0, 0, 3587, 0, 0,
	493, 1279, 0, 0, 132, 82, 2827, 3679, 82, 0,
	432, 3687, 3589, 82, 0, 132, 2179, 3690, 452, 0,
	0, 0, 3684, 0, 0, 0, 0, 0, 0, 507,
	0, 82, 2827, 82, 0, 0, 0, 82, 3589, 0,
	3589, 0, 980, 0, 529, 2861, 2862, 2863, 2864, 2865,
	904, 3706, 0, 132, 0, 82, 0, 0, 82, 0,
	0, 0, 3589, 0, 82, 0, 0, 0, 0, 82,
	0, 3589, 3714, 132, 0, 0, 3589, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 137, 2214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	1305, 1307, 1309, 1311, 1313, 1314, 1316, 980, 2235, 1228,
	0, 1231, 0, 0, 980, 980, 980, 0, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 0, 1229, 1230, 1227, 0,
	0, 0, 0, 2725, 0, 0, 1233, 1232, 1242, 1243,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 0, 0,
	1244, 0, 0, 0, 0, 0, 3479, 3480, 0, 3668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	980, 0, 2262, 0, 2264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3691, 0, 0, 0,
	3516, 3519, 0, 3697, 0, 0, 0, 2273, 2274, 2275,
	2276, 0, 0, 0, 2280, 2282, 980, 0, 2285, 0,
	0, 2288, 2289, 0, 0, 0, 2294, 2295, 0, 0,
	0, 0, 2301, 2302, 0, 2303, 0, 0, 2306, 2307,
	0, 2308, 2309, 0, 0, 2313, 2314, 2315, 2316, 2317,
	2936, 0, 0, 0, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 0, 0, 2416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	980, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 2390, 0, 0, 0, 0, 3581, 0, 0, 2397,
	1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1234, 0, 0, 1244, 980, 0, 0, 0, 0,
	3519, 0, 0, 980, 0, 0, 0, 137, 0, 137,
	0, 0, 2384, 2891, 0, 0, 0, 2725, 0, 2725,
	0, 0, 2879, 0, 0, 2394, 0, 0, 0, 0,
	0, 0, 0, 2725, 0, 0, 0, 0, 0, 0,
	0, 0, 980, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2385, 2890, 0, 0,
	0, 2416, 0, 1233, 1232, 1242, 1243, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1234, 0, 2393, 1244, 0, 0,
	0, 0, 0, 0, 2390, 0, 0, 0, 0, 0,
	0, 2878, 2397, 0, 0, 3688, 0, 493, 0, 0,
	0, 0, 2604, 132, 0, 980, 0, 1233, 1232, 1242,
	1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 0,
	0, 1244, 1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1234, 2398, 0, 1244, 0, 2394, 0,
	0, 0, 0, 0, 2404, 0, 0, 0, 507, 0,
	980, 0, 980, 0, 980, 0, 0, 0, 0, 0,
	0, 137, 0, 507, 1233, 1232, 1242, 1243, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1234, 540, 0, 1244, 2396,
	0, 0, 0, 2577, 2578, 2579, 2580, 2581, 2582, 2393,
	0, 1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1234, 0, 980, 1244, 2603, 0, 980, 566,
	1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1234, 0, 0, 1244, 980, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 2408, 0, 0, 2398, 0, 0,
	2602, 508, 0, 0, 0, 0, 0, 2404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2663,
	2664, 2415, 905, 451, 0, 133, 973, 0, 0, 0,
	0, 0, 0, 2401, 0, 980, 0, 0, 0, 0,
	0, 0, 2396, 0, 2410, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 2572, 903, 0, 133, 0, 972,
	0, 980, 0, 0, 1233, 1232, 1242, 1243, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1234, 2391, 0, 1244, 0,
	0, 1011, 1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1234, 0, 980, 1244, 0, 0, 0,
	0, 0, 0, 0, 2387, 0, 0, 2408, 1233, 1232,
	1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234,
	0, 2389, 1244, 0, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 2400, 2415, 0, 980, 0, 0, 0,
	0, 0, 2261, 0, 0, 0, 2401, 0, 0, 980,
	0, 980, 0, 0, 0, 0, 980, 2410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 980,
	1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1234, 0, 0, 1244, 0, 0, 0, 0, 2391,
	0, 137, 0, 2388, 2392, 2395, 0, 2399, 2402, 2403,
	2405, 2406, 2407, 2409, 2411, 2412, 2413, 2414, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 2387, 980, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2389, 0, 0, 2858, 137, 0,
	0, 0, 0, 0, 0, 0, 2400, 0, 0, 0,
	2866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2875, 2876, 2877, 0, 0, 0, 0, 2882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 1765, 0, 904, 0, 0, 0, 0, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2902, 0, 0, 2388, 2392, 2395, 0,
	2399, 2402, 2403, 2405, 2406, 2407, 2409, 2411, 2412, 2413,
	2414, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 2386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2935, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 132, 133, 0, 0, 0, 1448,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 132, 0, 0,
	1448, 452, 0, 0, 0, 0, 0, 1479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 0, 0, 132, 132, 132, 132, 0, 132, 0,
	0, 0, 0, 0, 2386, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1220, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3105, 3106, 3107, 0, 3109, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 0, 0, 0, 3118, 3119, 507,
	3121, 0, 0, 3122, 0, 0, 0, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3135, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 1479,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 0,
	134, 974, 3171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3176, 3178, 507, 0, 1951, 1951, 1951,
	134, 0, 0, 1951, 1951, 1951, 1951, 0, 1951, 1951,
	0, 0, 134, 904, 1951, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 1951, 1951, 1951, 1951, 0, 63,
	1951, 1951, 1951, 1951, 1951, 79, 0, 0, 42, 1951,
	1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
	1951, 132, 132, 132, 0, 0, 0, 0, 904, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1479, 0, 0, 0, 0, 83, 3246, 3247,
	3248, 3249, 3417, 0, 0, 0, 0, 0, 3253, 3254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3411, 0, 0, 3657, 3660, 3656,
	0, 0, 0, 0, 0, 3270, 3271, 3272, 0, 0,
	0, 0, 0, 133, 0, 0, 905, 0, 0, 0,
	0, 905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3295, 3296, 3297, 0, 3298, 0, 0, 0, 0, 903,
	132, 0, 0, 0, 903, 1362, 132, 132, 0, 0,
	0, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	44, 75, 48, 47, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3412, 0, 0, 0, 0,
	0, 0, 0, 0, 1436, 0, 0, 0, 0, 0,
	0, 0, 54, 78, 77, 0, 133, 3340, 0, 49,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 133,
	0, 0, 0, 0, 3356, 0, 3358, 0, 1439, 0,
	0, 0, 0, 0, 1447, 451, 0, 0, 0, 0,
	0, 3366, 134, 0, 0, 133, 133, 133, 133, 0,
	133, 61, 62, 0, 3413, 1447, 451, 0, 0, 0,
	0, 0, 0, 0, 3420, 3414, 3415, 3416, 3418, 3419,
	0, 0, 0, 0, 70, 0, 71, 0, 0, 0,
	0, 3441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3450, 0, 0, 0, 0, 0, 3461, 0, 0,
	134, 72, 0, 0, 3467, 0, 3468, 3469, 3470, 3471,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3421,
	76, 0, 58, 59, 65, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 39, 0, 0, 0, 3528,
	0, 0, 3531, 0, 0, 0, 1868, 133, 0, 63,
	0, 0, 0, 0, 1220, 79, 0, 0, 42, 0,
	0, 1914, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 2171, 132, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 83, 0, 0,
	0, 0, 3417, 0, 0, 3569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 0, 132,
	0, 507, 0, 0, 3411, 0, 1868, 0, 1868, 3717,
	0, 1956, 0, 0, 0, 905, 51, 53, 1957, 0,
	1868, 1868, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 133, 133, 0, 1999, 2000, 0,
	905, 0, 0, 0, 0, 0, 0, 1479, 0, 0,
	0, 0, 0, 0, 1914, 0, 0, 0, 973, 0,
	44, 75, 48, 47, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 0, 3412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 972, 54, 78, 77, 3694, 3695, 0, 0, 49,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1951, 0, 0, 0, 1951, 1951, 1951,
	1951, 1951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 1951, 0, 133, 133,
	0, 61, 62, 0, 3413, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 3420, 3414, 3415, 3416, 3418, 3419,
	0, 0, 0, 0, 70, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 132, 0, 0, 507, 0, 0, 0,
	0, 72, 132, 0, 0, 132, 2371, 1479, 134, 904,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3421,
	76, 0, 58, 59, 65, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 0, 0, 63,
	0, 0, 0, 0, 0, 79, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 134, 0, 0, 83, 0, 0,
	0, 0, 3417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 134, 134, 134, 3411, 134, 0, 0, 0, 3712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 51, 53, 0, 0,
	1951, 0, 74, 0, 0, 0, 0, 0, 1951, 0,
	1479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	44, 75, 48, 47, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3412, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 78, 77, 0, 0, 0, 0, 49,
	0, 0, 904, 132, 132, 132, 132, 132, 1865, 0,
	0, 133, 0, 508, 0, 0, 507, 134, 0, 0,
	132, 0, 0, 0, 507, 0, 0, 0, 0, 1951,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 1222,
	2196, 61, 62, 0, 3413, 2196, 1913, 0, 0, 0,
	0, 0, 0, 0, 3420, 3414, 3415, 3416, 3418, 3419,
	0, 0, 0, 0, 70, 0, 71, 2196, 0, 0,
	2196, 0, 0, 0, 0, 0, 0, 0, 0, 1914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 0, 2239, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 3421,
	76, 0, 58, 59, 65, 132, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 134, 134,
	134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1913,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 529, 0, 0, 133, 0, 0, 508, 0,
	0, 0, 0, 0, 133, 0, 0, 133, 0, 0,
	0, 905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 134, 0, 0,
	0, 0, 0, 134, 134, 0, 39, 0, 0, 904,
	134, 0, 0, 0, 0, 0, 51, 53, 0, 0,
	63, 0, 74, 0, 0, 0, 79, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 83, 2471,
	0, 0, 0, 3417, 0, 0, 0, 0, 2478, 2482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3411, 0, 0, 0, 0,
	3702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2196, 0, 0,
	0, 0, 0, 2519, 0, 0, 0, 0, 0, 0,
	0, 133, 132, 0, 0, 1868, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1914, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 75, 48, 47, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 3412, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 54, 78, 77, 0, 0, 0, 0,
	49, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2642, 133, 133, 133, 133, 133,
	0, 2612, 0, 0, 0, 0, 0, 0, 508, 0,
	0, 0, 133, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 61, 62, 133, 3413, 0, 903, 0, 0,
	507, 0, 0, 0, 904, 3420, 3414, 3415, 3416, 3418,
	3419, 0, 0, 0, 0, 70, 0, 71, 0, 0,
	134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 72, 0, 134, 2731, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3421, 76, 0, 58, 59, 65, 134, 66, 2730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1951, 133, 1951, 0,
	1951, 1951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 2781, 2782, 2783, 0, 39, 0, 0,
	0, 0, 0, 0, 1913, 0, 0, 0, 0, 0,
	0, 63, 0, 0, 0, 0, 0, 79, 0, 2421,
	42, 2834, 2839, 0, 2810, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2843, 0, 0, 83,
	0, 2848, 0, 0, 3417, 0, 0, 2852, 0, 0,
	2853, 2854, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 0, 507, 0, 0, 0, 3411, 0, 0, 0,
	0, 3689, 0, 0, 0, 0, 0, 51, 53, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 2642, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 903, 0, 1868, 0, 2907, 0,
	134, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 75, 48, 47, 50, 2907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 78, 77, 0, 0, 0,
	0, 49, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	2994, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 61, 62, 0, 3413, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 3420, 3414, 3415, 3416,
	3418, 3419, 0, 0, 0, 0, 70, 0, 71, 2482,
	0, 0, 0, 904, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3421, 76, 0, 58, 59, 65, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 1913, 0, 0,
	0, 0, 508, 0, 0, 0, 2642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 63, 0, 0, 0, 0, 0,
	79, 0, 0, 42, 0, 2994, 0, 0, 0, 0,
	0, 0, 2994, 2994, 2994, 0, 0, 0, 0, 0,
	134, 134, 134, 134, 134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2731, 0, 134, 0, 0,
	0, 0, 83, 0, 0, 0, 0, 3417, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2730, 3411,
	0, 2731, 0, 0, 3681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 51, 53,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 44, 75, 48, 47, 50,
	0, 0, 0, 0, 0, 0, 0, 0, 3237, 0,
	3412, 0, 0, 0, 0, 0, 134, 0, 0, 0,
	0, 0, 508, 0, 508, 0, 0, 54, 78, 77,
	0, 0, 134, 0, 49, 0, 0, 0, 0, 0,
	0, 0, 0, 3263, 0, 0, 0, 0, 0, 0,
	0, 2994, 0, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2836, 2841, 0, 63,
	0, 0, 134, 0, 0, 79, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 61, 62, 0, 3413,
	3290, 0, 0, 0, 0, 0, 0, 0, 0, 3420,
	3414, 3415, 3416, 3418, 3419, 0, 0, 0, 0, 70,
	0, 71, 0, 0, 0, 0, 0, 83, 0, 0,
	2731, 0, 3417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 72, 0, 0, 0,
	0, 0, 0, 0, 3411, 0, 52, 0, 0, 3666,
	0, 0, 0, 2730, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 3421, 76, 0, 58, 59, 65,
	0, 66, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2994, 0,
	2994, 0, 2994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	44, 75, 48, 47, 50, 2642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3412, 0, 0, 0, 0,
	0, 0, 2730, 0, 0, 0, 3443, 0, 0, 0,
	0, 0, 54, 78, 77, 0, 0, 0, 903, 49,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 61, 62, 0, 3413, 0, 2731, 0, 0, 0,
	0, 0, 0, 1868, 3420, 3414, 3415, 3416, 3418, 3419,
	0, 51, 53, 0, 70, 0, 71, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2994, 0, 0, 0, 0, 0, 3421,
	76, 0, 58, 59, 65, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3568, 0, 1868,
	0, 0, 0, 0, 2994, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 53, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 863, 0, 367, 625,
	867, 710, 733, 876, 739, 741, 804, 686, 781, 301,
	730, 687, 0, 0, 678, 534, 679, 711, 218, 533,
	837, 782, 865, 767, 797, 807, 217, 205, 774, 773,
	854, 722, 721, 802, 850, 864, 0, 0, 633, 264,
	0, 0, 391, 355, 284, 0, 0, 765, 0, 618,
	619, 750, 806, 698, 793, 869, 731, 798, 870, 83,
	0, 1193, 0, 0, 453, 557, 556, 559, 560, 561,
	562, 0, 0, 144, 558, 563, 564, 565, 0, 760,
	803, 881, 677, 531, 548, 682, 632, 0, 855, 718,
	719, 222, 0, 0, 0, 0, 0, 0, 0, 763,
	780, 822, 747, 386, 809, 818, 832, 740, 319, 237,
	0, 0, 0, 0, 545, 546, 1949, 0, 0, 0,
	648, 0, 547, 0, 692, 543, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 549, 0,
	0, 134, 697, 675, 716, 824, 676, 674, 285, 689,
	621, 853, 748, 253, 161, 859, 746, 646, 812, 693,
	841, 734, 261, 691, 162, 688, 694, 732, 296, 821,
	827, 630, 165, 263, 838, 712, 725, 206, 0, 331,
	799, 385, 537, 233, 785, 330, 265, 378, 813, 861,
	384, 735, 362, 392, 396, 229, 768, 197, 352, 220,
	215, 717, 831, 681, 238, 318, 210, 257, 751, 805,
	713, 202, 816, 792, 843, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 839, 826, 845, 708, 695, 700, 696,
	724, 862, 247, 239, 846, 844, 726, 305, 188, 778,
	771, 764, 389, 151, 340, 339, 738, 246, 829, 152,
	143, 326, 153, 254, 170, 849, 398, 184, 259, 369,
	536, 232, 295, 208, 801, 306, 723, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 825, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 868,
	271, 224, 228, 240, 251, 800, 329, 359, 390, 794,
	181, 173, 361, 383, 192, 341, 344, 397, 823, 180,
	175, 857, 840, 787, 753, 759, 683, 0, 174, 819,
	715, 727, 707, 795, 706, 235, 811, 381, 382, 207,
	399, 624, 872, 176, 690, 871, 292, 300, 291, 874,
	377, 858, 788, 777, 775, 684, 856, 786, 776, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	779, 0, 171, 0, 356, 866, 883, 360, 189, 701,
	833, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 815, 880, 304, 332, 196, 387,
	353, 221, 635, 297, 647, 641, 643, 642, 639, 640,
	638, 637, 636, 649, 622, 623, 626, 627, 628, 770,
	860, 685, 631, 836, 644, 645, 808, 878, 620, 203,
	569, 661, 662, 663, 570, 664, 665, 571, 572, 666,
	667, 668, 669, 573, 670, 671, 672, 650, 651, 652,
	653, 654, 655, 656, 657, 660, 658, 659, 0, 766,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	629, 166, 177, 262, 879, 325, 231, 673, 680, 699,
	702, 703, 704, 705, 709, 714, 720, 728, 729, 737,
	742, 743, 744, 745, 752, 754, 755, 756, 757, 758,
	761, 762, 772, 783, 784, 790, 791, 0, 814, 817,
	634, 828, 830, 834, 835, 842, 847, 848, 873, 877,
	882, 388, 213, 769, 789, 820, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 852, 749, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 736, 168, 851, 875, 796, 810, 863, 0,
	367, 625, 867, 710, 733, 876, 739, 741, 804, 686,
	781, 301, 730, 687, 0, 0, 678, 534, 679, 711,
	218, 533, 837, 782, 865, 767, 797, 807, 217, 205,
	774, 773, 854, 722, 721, 802, 850, 864, 0, 0,
	633, 264, 0, 0, 391, 355, 284, 0, 0, 765,
	0, 618, 619, 750, 806, 698, 793, 869, 731, 798,
	870, 83, 0, 0, 0, 0, 453, 557, 556, 559,
	560, 561, 562, 0, 0, 144, 558, 563, 564, 565,
	0, 760, 803, 881, 677, 531, 548, 682, 632, 0,
	855, 718, 719, 222, 0, 0, 0, 0, 0, 0,
	0, 763, 780, 822, 747, 386, 809, 818, 832, 740,
	319, 237, 0, 0, 0, 0, 545, 546, 527, 0,
	0, 0, 648, 0, 547, 0, 692, 543, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	549, 0, 0, 0, 697, 675, 716, 824, 676, 674,
	285, 689, 621, 853, 748, 253, 161, 859, 746, 646,
	812, 693, 841, 734, 261, 691, 162, 688, 694, 732,
	296, 821, 827, 630, 165, 263, 838, 712, 725, 206,
	0, 331, 799, 385, 537, 233, 785, 330, 265, 378,
	813, 861, 384, 735, 362, 392, 396, 229, 768, 197,
	352, 220, 215, 717, 831, 681, 238, 318, 210, 257,
	751, 805, 713, 202, 816, 792, 843, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 839, 826, 845, 708, 695,
	700, 696, 724, 862, 247, 239, 846, 844, 726, 305,
	188, 778, 771, 764, 389, 151, 340, 339, 738, 246,
	829, 152, 143, 326, 153, 254, 170, 849, 398, 184,
	259, 369, 536, 232, 295, 208, 801, 306, 723, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 825, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 868, 271, 224, 228, 240, 251, 800, 329, 359,
	390, 794, 181, 173, 361, 383, 192, 341, 344, 397,
	823, 180, 175, 857, 840, 787, 753, 759, 683, 0,
	174, 819, 715, 727, 707, 795, 706, 235, 811, 381,
	382, 207, 399, 624, 872, 176, 690, 871, 292, 300,
	291, 874, 377, 858, 788, 777, 775, 684, 856, 786,
	776, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 779, 0, 171, 0, 356, 866, 883, 360,
	189, 701, 833, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 815, 880, 304, 332,
	196, 387, 353, 221, 635, 297, 647, 641, 643, 642,
	639, 640, 638, 637, 636, 649, 622, 623, 626, 627,
	628, 770, 860, 685, 631, 836, 644, 645, 808, 878,
	620, 203, 569, 661, 662, 663, 570, 664, 665, 571,
	572, 666, 667, 668, 669, 573, 670, 671, 672, 650,
	651, 652, 653, 654, 655, 656, 657, 660, 658, 659,
	0, 766, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 629, 166, 177, 262, 879, 325, 231, 673,
	680, 699, 702, 703, 704, 705, 709, 714, 720, 728,
	729, 737, 742, 743, 744, 745, 752, 754, 755, 756,
	757, 758, 761, 762, 772, 783, 784, 790, 791, 0,
	814, 817, 634, 828, 830, 834, 835, 842, 847, 848,
	873, 877, 882, 388, 213, 769, 789, 820, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 852, 749, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 736, 168, 851, 875, 796, 810,
	863, 0, 367, 625, 867, 710, 733, 876, 739, 741,
	804, 686, 781, 301, 730, 687, 0, 0, 678, 534,
	679, 711, 218, 533, 837, 782, 865, 767, 797, 807,
	217, 205, 774, 773, 854, 722, 721, 802, 850, 864,
	0, 0, 633, 264, 0, 0, 391, 355, 284, 0,
	0, 765, 0, 618, 619, 750, 806, 698, 793, 869,
	731, 798, 870, 83, 0, 1193, 0, 0, 453, 557,
	556, 559, 560, 561, 562, 0, 0, 144, 558, 563,
	564, 565, 0, 760, 803, 881, 677, 531, 548, 682,
	632, 0, 855, 718, 719, 222, 0, 0, 0, 0,
	0, 0, 0, 763, 780, 822, 747, 386, 809, 818,
	832, 740, 319, 237, 0, 0, 0, 0, 545, 546,
	0, 0, 0, 0, 648, 0, 547, 0, 692, 543,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 549, 0, 0, 0, 697, 675, 716, 824,
	676, 674, 285, 689, 621, 853, 748, 253, 161, 859,
	746, 646, 812, 693, 841, 734, 261, 691, 162, 688,
	694, 732, 296, 821, 827, 630, 165, 263, 838, 712,
	725, 206, 0, 331, 799, 385, 537, 233, 785, 330,
	265, 378, 813, 861, 384, 735, 362, 392, 396, 229,
	768, 197, 352, 220, 215, 717, 831, 681, 238, 318,
	210, 257, 751, 805, 713, 202, 816, 792, 843, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 839, 826, 845,
	708, 695, 700, 696, 724, 862, 247, 239, 846, 844,
	726, 305, 188, 778, 771, 764, 389, 151, 340, 339,
	738, 246, 829, 152, 143, 326, 153, 254, 170, 849,
	398, 184, 259, 369, 536, 232, 295, 208, 801, 306,
	723, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	825, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 868, 271, 224, 228, 240, 251, 800,
	329, 359, 390, 794, 181, 173, 361, 383, 192, 341,
	344, 397, 823, 180, 175, 857, 840, 787, 753, 759,
	683, 0, 174, 819, 715, 727, 707, 795, 706, 235,
	811, 381, 382, 207, 399, 624, 872, 176, 690, 871,
	292, 300, 291, 874, 377, 858, 788, 777, 775, 684,
	856, 786, 776, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 779, 0, 171, 0, 356, 866,
	883, 360, 189, 701, 833, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 815, 880,
	304, 332, 196, 387, 353, 221, 635, 297, 647, 641,
	643, 642, 639, 640, 638, 637, 636, 649, 622, 623,
	626, 627, 628, 770, 860, 685, 631, 836, 644, 645,
	808, 878, 620, 203, 569, 661, 662, 663, 570, 664,
	665, 571, 572, 666, 667, 668, 669, 573, 670, 671,
	672, 650, 651, 652, 653, 654, 655, 656, 657, 660,
	658, 659, 0, 766, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 629, 166, 177, 262, 879, 325,
	231, 673, 680, 699, 702, 703, 704, 705, 709, 714,
	720, 728, 729, 737, 742, 743, 744, 745, 752, 754,
	755, 756, 757, 758, 761, 762, 772, 783, 784, 790,
	791, 0, 814, 817, 634, 828, 830, 834, 835, 842,
	847, 848, 873, 877, 882, 388, 213, 769, 789, 820,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 852, 749, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 736, 168, 851, 875,
	796, 810, 863, 0, 367, 625, 867, 710, 733, 876,
	739, 741, 804, 686, 781, 301, 730, 687, 0, 0,
	678, 534, 679, 711, 218, 533, 837, 782, 865, 767,
	797, 807, 217, 205, 774, 773, 854, 722, 721, 802,
	850, 864, 0, 0, 633, 264, 0, 0, 391, 355,
	284, 0, 0, 765, 0, 618, 619, 750, 806, 698,
	793, 869, 731, 798, 870, 83, 0, 0, 0, 0,
	453, 557, 556, 559, 560, 561, 562, 0, 0, 144,
	558, 563, 564, 565, 0, 760, 803, 881, 677, 531,
	548, 682, 632, 0, 855, 718, 719, 222, 0, 0,
	0, 0, 0, 0, 0, 763, 780, 822, 747, 386,
	809, 818, 832, 740, 319, 237, 0, 0, 0, 0,
	545, 546, 1949, 0, 0, 0, 648, 0, 547, 0,
	692, 543, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 549, 0, 0, 0, 697, 675,
	716, 824, 676, 674, 285, 689, 621, 853, 748, 253,
	161, 859, 746, 646, 812, 693, 841, 734, 261, 691,
	162, 688, 694, 732, 296, 821, 827, 630, 165, 263,
	838, 712, 725, 206, 0, 331, 799, 385, 537, 233,
	785, 330, 265, 378, 813, 861, 384, 735, 362, 392,
	396, 229, 768, 197, 352, 220, 215, 717, 831, 681,
	238, 318, 210, 257, 751, 805, 713, 202, 816, 792,
	843, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 839,
	826, 845, 708, 695, 700, 696, 724, 862, 247, 239,
	846, 844, 726, 305, 188, 778, 771, 764, 389, 151,
	340, 339, 738, 246, 829, 152, 143, 326, 153, 254,
	170, 849, 398, 184, 259, 369, 536, 232, 295, 208,
	801, 306, 723, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 825, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 868, 271, 224, 228, 240,
	251, 800, 329, 359, 390, 794, 181, 173, 361, 383,
	192, 341, 344, 397, 823, 180, 175, 857, 840, 787,
	753, 759, 683, 0, 174, 819, 715, 727, 707, 795,
	706, 235, 811, 381, 382, 207, 399, 624, 872, 176,
	690, 871, 292, 300, 291, 874, 377, 858, 788, 777,
	775, 684, 856, 786, 776, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 779, 0, 171, 0,
	356, 866, 883, 360, 189, 701, 833, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	815, 880, 304, 332, 196, 387, 353, 221, 635, 297,
	647, 641, 643, 642, 639, 640, 638, 637, 636, 649,
	622, 623, 626, 627, 628, 770, 860, 685, 631, 836,
	644, 645, 808, 878, 620, 203, 569, 661, 662, 663,
	570, 664, 665, 571, 572, 666, 667, 668, 669, 573,
	670, 671, 672, 650, 651, 652, 653, 654, 655, 656,
	657, 660, 658, 659, 0, 766, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 629, 166, 177, 262,
	879, 325, 231, 673, 680, 699, 702, 703, 704, 705,
	709, 714, 720, 728, 729, 737, 742, 743, 744, 745,
	752, 754, 755, 756, 757, 758, 761, 762, 772, 783,
	784, 790, 791, 0, 814, 817, 634, 828, 830, 834,
	835, 842, 847, 848, 873, 877, 882, 388, 213, 769,
	789, 820, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 852, 749, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 736, 168,
	851, 875, 796, 810, 863, 0, 367, 625, 867, 710,
	733, 876, 739, 741, 804, 686, 781, 301, 730, 687,
	0, 0, 678, 534, 679, 711, 218, 533, 837, 782,
	865, 767, 797, 807, 217, 205, 774, 773, 854, 722,
	721, 802, 850, 864, 0, 0, 633, 264, 0, 0,
	391, 355, 284, 0, 0, 765, 0, 618, 619, 750,
	806, 698, 793, 869, 731, 2063, 870, 83, 0, 0,
	0, 0, 453, 557, 556, 559, 560, 561, 562, 0,
	0, 144, 558, 563, 564, 565, 2064, 760, 803, 881,
	677, 531, 548, 682, 632, 0, 855, 718, 719, 222,
	0, 0, 0, 0, 0, 0, 0, 763, 780, 822,
	747, 386, 809, 818, 832, 740, 319, 237, 0, 0,
	0, 0, 545, 546, 0, 0, 0, 0, 648, 0,
	547, 0, 692, 543, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 549, 0, 0, 0,
	697, 675, 716, 824, 676, 674, 285, 689, 621, 853,
	748, 253, 161, 859, 746, 646, 812, 693, 841, 734,
	261, 691, 162, 688, 694, 732, 296, 821, 827, 630,
	165, 263, 838, 712, 725, 206, 0, 331, 799, 385,
	537, 233, 785, 330, 265, 378, 813, 861, 384, 735,
	362, 392, 396, 229, 768, 197, 352, 220, 215, 717,
	831, 681, 238, 318, 210, 257, 751, 805, 713, 202,
	816, 792, 843, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 839, 826, 845, 708, 695, 700, 696, 724, 862,
	247, 239, 846, 844, 726, 305, 188, 778, 771, 764,
	389, 151, 340, 339, 738, 246, 829, 152, 143, 326,
	153, 254, 170, 849, 398, 184, 259, 369, 536, 232,
	295, 208, 801, 306, 723, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 825, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 868, 271, 224,
	228, 240, 251, 800, 329, 359, 390, 794, 181, 173,
	361, 383, 192, 341, 344, 397, 823, 180, 175, 857,
	840, 787, 753, 759, 683, 0, 174, 819, 715, 727,
	707, 795, 706, 235, 811, 381, 382, 207, 399, 624,
	872, 176, 690, 871, 292, 300, 291, 874, 377, 858,
	788, 777, 775, 684, 856, 786, 776, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 779, 0,
	171, 0, 356, 866, 883, 360, 189, 701, 833, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 815, 880, 304, 332, 196, 387, 353, 221,
	635, 297, 647, 641, 643, 642, 639, 640, 638, 637,
	636, 649, 622, 623, 626, 627, 628, 770, 860, 685,
	631, 836, 644, 645, 808, 878, 620, 203, 569, 661,
	662, 663, 570, 664, 665, 571, 572, 666, 667, 668,
	669, 573, 670, 671, 672, 650, 651, 652, 653, 654,
	655, 656, 657, 660, 658, 659, 0, 766, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 629, 166,
	177, 262, 879, 325, 231, 673, 680, 699, 702, 703,
	704, 705, 709, 714, 720, 728, 729, 737, 742, 743,
	744, 745, 752, 754, 755, 756, 757, 758, 761, 762,
	772, 783, 784, 790, 791, 0, 814, 817, 634, 828,
	830, 834, 835, 842, 847, 848, 873, 877, 882, 388,
	213, 769, 789, 820, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 852,
	749, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	736, 168, 851, 875, 796, 810, 863, 0, 367, 625,
	867, 710, 733, 876, 739, 741, 804, 686, 781, 301,
	730, 687, 0, 0, 678, 923, 679, 711, 218, 921,
	837, 782, 865, 767, 797, 807, 217, 205, 774, 773,
	854, 722, 721, 802, 850, 864, 0, 0, 633, 264,
	0, 0, 391, 355, 284, 0, 0, 765, 0, 618,
	619, 750, 806, 698, 793, 869, 731, 798, 870, 83,
	0, 1193, 0, 0, 453, 557, 556, 559, 560, 561,
	562, 0, 0, 144, 558, 563, 564, 565, 0, 760,
	803, 881, 677, 940, 548, 682, 632, 0, 855, 718,
	719, 222, 0, 0, 0, 0, 0, 0, 0, 763,
	780, 822, 747, 386, 809, 818, 832, 740, 319, 237,
	0, 0, 0, 0, 545, 546, 0, 0, 0, 0,
	648, 0, 547, 0, 692, 543, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 549, 0,
	0, 0, 697, 675, 716, 824, 676, 674, 285, 689,
	621, 853, 748, 253, 161, 859, 746, 646, 812, 693,
	841, 734, 261, 691, 162, 688, 694, 732, 296, 821,
	827, 630, 165, 263, 838, 712, 725, 206, 0, 331,
	799, 385, 537, 233, 785, 330, 265, 378, 813, 861,
	384, 735, 362, 392, 396, 229, 768, 197, 352, 220,
	215, 717, 831, 681, 238, 318, 210, 257, 751, 805,
	713, 202, 816, 792, 843, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 839, 826, 845, 708, 695, 700, 696,
	724, 862, 247, 239, 846, 844, 726, 305, 188, 778,
	771, 764, 389, 151, 340, 339, 738, 246, 829, 152,
	143, 326, 153, 254, 170, 849, 398, 184, 259, 369,
	536, 232, 295, 208, 801, 306, 723, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 825, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 868,
	271, 224, 228, 240, 251, 800, 329, 359, 390, 794,
	181, 173, 361, 383, 192, 341, 344, 397, 823, 180,
	175, 857, 840, 787, 753, 759, 683, 0, 174, 819,
	715, 727, 707, 795, 706, 235, 811, 381, 382, 207,
	399, 624, 872, 176, 690, 871, 292, 300, 291, 874,
	377, 858, 788, 777, 775, 684, 856, 786, 776, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	779, 0, 171, 0, 356, 866, 883, 360, 189, 701,
	833, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 815, 880, 304, 332, 196, 387,
	353, 221, 635, 297, 647, 641, 643, 642, 639, 640,
	638, 637, 636, 649, 622, 623, 626, 627, 628, 770,
	860, 685, 631, 836, 644, 645, 808, 878, 620, 203,
	569, 661, 662, 663, 570, 664, 665, 571, 572, 666,
	667, 668, 669, 573, 670, 671, 672, 650, 651, 652,
	653, 654, 655, 656, 657, 660, 658, 659, 0, 766,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	629, 166, 177, 262, 879, 325, 231, 673, 680, 699,
	702, 703, 704, 705, 709, 714, 720, 728, 729, 737,
	742, 743, 744, 745, 752, 754, 755, 756, 757, 758,
	761, 762, 772, 783, 784, 790, 791, 0, 814, 817,
	634, 828, 830, 834, 835, 842, 847, 848, 873, 877,
	882, 388, 213, 769, 789, 820, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 852, 749, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 736, 168, 851, 875, 796, 810, 863, 0,
	367, 625, 867, 710, 733, 876, 739, 741, 804, 686,
	781, 301, 730, 687, 0, 0, 678, 534, 679, 711,
	218, 533, 837, 782, 865, 767, 797, 807, 217, 205,
	774, 773, 854, 722, 721, 802, 850, 864, 0, 0,
	633, 264, 0, 0, 391, 355, 284, 0, 0, 765,
	0, 618, 619, 750, 806, 698, 793, 869, 731, 798,
	870, 83, 0, 0, 0, 0, 453, 557, 1983, 559,
	560, 561, 562, 0, 0, 144, 558, 563, 564, 565,
	0, 760, 803, 881, 677, 531, 548, 682, 632, 0,
	855, 718, 719, 222, 0, 0, 0, 0, 0, 0,
	0, 763, 780, 822, 747, 386, 809, 818, 832, 740,
	319, 237, 0, 0, 0, 0, 545, 546, 1949, 0,
	0, 0, 648, 0, 547, 0, 692, 543, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	549, 0, 0, 0, 697, 675, 716, 824, 676, 674,
	285, 689, 621, 853, 748, 253, 161, 859, 746, 646,
	812, 693, 841, 734, 261, 691, 162, 688, 694, 732,
	296, 821, 827, 630, 165, 263, 838, 712, 725, 206,
	0, 331, 799, 385, 537, 233, 785, 330, 265, 378,
	813, 861, 384, 735, 362, 392, 396, 229, 768, 197,
	352, 220, 215, 717, 831, 681, 238, 318, 210, 257,
	751, 805, 713, 202, 816, 792, 843, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 839, 826, 845, 708, 695,
	700, 696, 724, 862, 247, 239, 846, 844, 726, 305,
	188, 778, 771, 764, 389, 151, 340, 339, 738, 246,
	829, 152, 143, 326, 153, 254, 170, 849, 398, 184,
	259, 369, 536, 232, 295, 208, 801, 306, 723, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 825, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 868, 271, 224, 228, 240, 251, 800, 329, 359,
	390, 794, 181, 173, 361, 383, 192, 341, 344, 397,
	823, 180, 175, 857, 840, 787, 753, 759, 683, 0,
	174, 819, 715, 727, 707, 795, 706, 235, 811, 381,
	382, 207, 399, 624, 872, 176, 690, 871, 292, 300,
	291, 874, 377, 858, 788, 777, 775, 684, 856, 786,
	776, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 779, 0, 171, 0, 356, 866, 883, 360,
	189, 701, 833, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 815, 880, 304, 332,
	196, 387, 353, 221, 635, 297, 647, 641, 643, 642,
	639, 640, 638, 637, 636, 649, 622, 623, 626, 627,
	628, 770, 860, 685, 631, 836, 644, 645, 808, 878,
	620, 203, 569, 661, 662, 663, 570, 664, 665, 571,
	572, 666, 667, 668, 669, 573, 670, 671, 672, 650,
	651, 652, 653, 654, 655, 656, 657, 660, 658, 659,
	0, 766, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 629, 166, 177, 262, 879, 325, 231, 673,
	680, 699, 702, 703, 704, 705, 709, 714, 720, 728,
	729, 737, 742, 743, 744, 745, 752, 754, 755, 756,
	757, 758, 761, 762, 772, 783, 784, 790, 791, 0,
	814, 817, 634, 828, 830, 834, 835, 842, 847, 848,
	873, 877, 882, 388, 213, 769, 789, 820, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 852, 749, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 736, 168, 851, 875, 796, 810,
	863, 0, 367, 625, 867, 710, 733, 876, 739, 741,
	804, 686, 781, 301, 730, 687, 0, 0, 678, 534,
	679, 711, 218, 533, 837, 782, 865, 767, 797, 807,
	217, 205, 774, 773, 854, 722, 721, 802, 850, 864,
	0, 0, 633, 264, 0, 0, 391, 355, 284, 0,
	0, 765, 0, 618, 619, 750, 806, 698, 793, 869,
	731, 798, 870, 83, 0, 0, 0, 0, 453, 557,
	1980, 559, 560, 561, 562, 0, 0, 144, 558, 563,
	564, 565, 0, 760, 803, 881, 677, 531, 548, 682,
	632, 0, 855, 718, 719, 222, 0, 0, 0, 0,
	0, 0, 0, 763, 780, 822, 747, 386, 809, 818,
	832, 740, 319, 237, 0, 0, 0, 0, 545, 546,
	1949, 0, 0, 0, 648, 0, 547, 0, 692, 543,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 549, 0, 0, 0, 697, 675, 716, 824,
	676, 674, 285, 689, 621, 853, 748, 253, 161, 859,
	746, 646, 812, 693, 841, 734, 261, 691, 162, 688,
	694, 732, 296, 821, 827, 630, 165, 263, 838, 712,
	725, 206, 0, 331, 799, 385, 537, 233, 785, 330,
	265, 378, 813, 861, 384, 735, 362, 392, 396, 229,
	768, 197, 352, 220, 215, 717, 831, 681, 238, 318,
	210, 257, 751, 805, 713, 202, 816, 792, 843, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 839, 826, 845,
	708, 695, 700, 696, 724, 862, 247, 239, 846, 844,
	726, 305, 188, 778, 771, 764, 389, 151, 340, 339,
	738, 246, 829, 152, 143, 326, 153, 254, 170, 849,
	398, 184, 259, 369, 536, 232, 295, 208, 801, 306,
	723, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	825, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 868, 271, 224, 228, 240, 251, 800,
	329, 359, 390, 794, 181, 173, 361, 383, 192, 341,
	344, 397, 823, 180, 175, 857, 840, 787, 753, 759,
	683, 0, 174, 819, 715, 727, 707, 795, 706, 235,
	811, 381, 382, 207, 399, 624, 872, 176, 690, 871,
	292, 300, 291, 874, 377, 858, 788, 777, 775, 684,
	856, 786, 776, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 779, 0, 171, 0, 356, 866,
	883, 360, 189, 701, 833, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 815, 880,
	304, 332, 196, 387, 353, 221, 635, 297, 647, 641,
	643, 642, 639, 640, 638, 637, 636, 649, 622, 623,
	626, 627, 628, 770, 860, 685, 631, 836, 644, 645,
	808, 878, 620, 203, 569, 661, 662, 663, 570, 664,
	665, 571, 572, 666, 667, 668, 669, 573, 670, 671,
	672, 650, 651, 652, 653, 654, 655, 656, 657, 660,
	658, 659, 0, 766, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 629, 166, 177, 262, 879, 325,
	231, 673, 680, 699, 702, 703, 704, 705, 709, 714,
	720, 728, 729, 737, 742, 743, 744, 745, 752, 754,
	755, 756, 757, 758, 761, 762, 772, 783, 784, 790,
	791, 0, 814, 817, 634, 828, 830, 834, 835, 842,
	847, 848, 873, 877, 882, 388, 213, 769, 789, 820,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 852, 749, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 736, 168, 851, 875,
	796, 810, 863, 39, 367, 625, 867, 710, 733, 876,
	739, 741, 804, 686, 781, 301, 730, 687, 0, 0,
	678, 534, 679, 711, 218, 533, 837, 782, 865, 767,
	797, 807, 217, 205, 774, 773, 854, 722, 721, 802,
	850, 864, 0, 0, 633, 264, 0, 0, 391, 355,
	284, 0, 0, 765, 0, 618, 619, 750, 806, 698,
	793, 869, 731, 798, 870, 83, 0, 0, 0, 0,
	453, 557, 556, 559, 560, 561, 562, 0, 0, 144,
	558, 563, 564, 565, 0, 760, 803, 881, 677, 531,
	548, 682, 632, 0, 855, 718, 719, 222, 0, 0,
	0, 0, 0, 0, 0, 763, 780, 822, 747, 386,
	809, 818, 832, 740, 319, 237, 0, 0, 0, 0,
	545, 546, 0, 0, 0, 0, 648, 0, 547, 0,
	692, 543, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 549, 0, 0, 0, 697, 675,
	716, 824, 676, 674, 285, 689, 621, 853, 748, 253,
	161, 859, 746, 646, 812, 693, 841, 734, 261, 691,
	162, 688, 694, 732, 296, 821, 827, 630, 165, 263,
	838, 712, 725, 206, 0, 331, 799, 385, 537, 233,
	785, 330, 265, 378, 813, 861, 384, 735, 362, 392,
	396, 229, 768, 197, 352, 220, 215, 717, 831, 681,
	238, 318, 210, 257, 751, 805, 713, 202, 816, 792,
	843, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 839,
	826, 845, 708, 695, 700, 696, 724, 862, 247, 239,
	846, 844, 726, 305, 188, 778, 771, 764, 389, 151,
	340, 339, 738, 246, 829, 152, 143, 326, 153, 254,
	170, 849, 398, 184, 259, 369, 536, 232, 295, 208,
	801, 306, 723, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 825, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 868, 271, 224, 228, 240,
	251, 800, 329, 359, 390, 794, 181, 173, 361, 383,
	192, 341, 344, 397, 823, 180, 175, 857, 840, 787,
	753, 759, 683, 0, 174, 819, 715, 727, 707, 795,
	706, 235, 811, 381, 382, 207, 399, 624, 872, 176,
	690, 871, 292, 300, 291, 874, 377, 858, 788, 777,
	775, 684, 856, 786, 776, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 779, 0, 171, 0,
	356, 866, 883, 360, 189, 701, 833, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	815, 880, 304, 332, 196, 387, 353, 221, 635, 297,
	647, 641, 643, 642, 639, 640, 638, 637, 636, 649,
	622, 623, 626, 627, 628, 770, 860, 685, 631, 836,
	644, 645, 808, 878, 620, 203, 569, 661, 662, 663,
	570, 664, 665, 571, 572, 666, 667, 668, 669, 573,
	670, 671, 672, 650, 651, 652, 653, 654, 655, 656,
	657, 660, 658, 659, 0, 766, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 629, 166, 177, 262,
	1280, 325, 231, 673, 680, 699, 702, 703, 704, 705,
	709, 714, 720, 728, 729, 737, 742, 743, 744, 745,
	752, 754, 755, 756, 757, 758, 761, 762, 772, 783,
	784, 790, 791, 0, 814, 817, 634, 828, 830, 834,
	835, 842, 847, 848, 873, 877, 882, 388, 213, 769,
	789, 820, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 852, 749, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 736, 168,
	851, 875, 796, 810, 863, 0, 367, 625, 867, 710,
	733, 876, 739, 741, 804, 686, 781, 301, 730, 687,
	0, 0, 678, 534, 679, 711, 218, 533, 837, 782,
	865, 767, 797, 807, 217, 205, 774, 773, 854, 722,
	721, 802, 850, 864, 0, 0, 633, 264, 0, 0,
	391, 355, 284, 0, 0, 765, 0, 618, 619, 750,
	806, 698, 793, 869, 731, 798, 870, 83, 0, 1809,
	0, 0, 453, 557, 556, 559, 560, 561, 562, 0,
	0, 144, 558, 563, 564, 565, 0, 760, 803, 881,
	677, 531, 548, 682, 632, 0, 855, 718, 719, 222,
	0, 0, 0, 0, 0, 0, 0, 763, 780, 822,
	747, 386, 809, 818, 832, 740, 319, 237, 0, 0,
	0, 0, 545, 546, 0, 0, 0, 0, 648, 0,
	547, 0, 692, 543, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 549, 0, 0, 0,
	697, 675, 716, 824, 676, 674, 285, 689, 621, 853,
	748, 253, 161, 859, 746, 646, 812, 693, 841, 734,
	261, 691, 162, 688, 694, 732, 296, 821, 827, 630,
	165, 263, 838, 712, 725, 206, 0, 331, 799, 385,
	537, 233, 785, 330, 265, 378, 813, 861, 384, 735,
	362, 392, 396, 229, 768, 197, 352, 220, 215, 717,
	831, 681, 238, 318, 210, 257, 751, 805, 713, 202,
	816, 792, 843, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 839, 826, 845, 708, 695, 700, 696, 724, 862,
	247, 239, 846, 844, 726, 305, 188, 778, 771, 764,
	389, 151, 340, 339, 738, 246, 829, 152, 143, 326,
	153, 254, 170, 849, 398, 184, 259, 369, 536, 232,
	295, 208, 801, 306, 723, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 825, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 868, 271, 224,
	228, 240, 251, 800, 329, 359, 390, 794, 181, 173,
	361, 383, 192, 341, 344, 397, 823, 180, 175, 857,
	840, 787, 753, 759, 683, 0, 174, 819, 715, 727,
	707, 795, 706, 235, 811, 381, 382, 207, 399, 624,
	872, 176, 690, 871, 292, 300, 291, 874, 377, 858,
	788, 777, 775, 684, 856, 786, 776, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 779, 0,
	171, 0, 356, 866, 883, 360, 189, 701, 833, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 815, 880, 304, 332, 196, 387, 353, 221,
	635, 297, 647, 641, 643, 642, 639, 640, 638, 637,
	636, 649, 622, 623, 626, 627, 628, 770, 860, 685,
	631, 836, 644, 645, 808, 878, 620, 203, 569, 661,
	662, 663, 570, 664, 665, 571, 572, 666, 667, 668,
	669, 573, 670, 671, 672, 650, 651, 652, 653, 654,
	655, 656, 657, 660, 658, 659, 0, 766, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 629, 166,
	177, 262, 879, 325, 231, 673, 680, 699, 702, 703,
	704, 705, 709, 714, 720, 728, 729, 737, 742, 743,
	744, 745, 752, 754, 755, 756, 757, 758, 761, 762,
	772, 783, 784, 790, 791, 0, 814, 817, 634, 828,
	830, 834, 835, 842, 847, 848, 873, 877, 882, 388,
	213, 769, 789, 820, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 852,
	749, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	736, 168, 851, 875, 796, 810, 863, 0, 367, 625,
	867, 710, 733, 876, 739, 741, 804, 686, 781, 301,
	730, 687, 0, 0, 678, 923, 679, 711, 218, 921,
	837, 782, 865, 767, 797, 807, 217, 205, 774, 773,
	854, 722, 721, 802, 850, 864, 0, 0, 633, 264,
	0, 0, 391, 355, 284, 0, 0, 765, 0, 618,
	619, 750, 806, 698, 793, 869, 731, 798, 870, 83,
	0, 0, 0, 0, 453, 557, 556, 559, 560, 561,
	562, 0, 0, 144, 558, 563, 564, 565, 0, 760,
	803, 881, 677, 940, 548, 682, 632, 0, 855, 718,
	719, 222, 0, 0, 0, 0, 0, 0, 0, 763,
	780, 822, 747, 386, 809, 818, 832, 740, 319, 237,
	0, 0, 0, 0, 545, 546, 0, 0, 0, 0,
	648, 0, 547, 0, 692, 543, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 549, 0,
	0, 0, 697, 675, 716, 824, 676, 674, 285, 689,
	621, 853, 748, 253, 161, 859, 746, 646, 812, 693,
	841, 734, 261, 691, 162, 688, 694, 732, 296, 821,
	827, 630, 165, 263, 838, 712, 725, 206, 0, 331,
	799, 385, 537, 233, 785, 330, 265, 378, 813, 861,
	384, 735, 362, 392, 396, 229, 768, 197, 352, 220,
	215, 717, 831, 681, 238, 318, 210, 257, 751, 805,
	713, 202, 816, 792, 843, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 839, 826, 845, 708, 695, 700, 696,
	724, 862, 247, 239, 846, 844, 726, 305, 188, 778,
	771, 764, 389, 151, 340, 339, 738, 246, 829, 152,
	143, 326, 153, 254, 170, 849, 398, 184, 259, 369,
	536, 232, 295, 208, 801, 306, 723, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 825, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 868,
	271, 224, 228, 240, 251, 800, 329, 359, 390, 794,
	181, 173, 361, 383, 192, 341, 344, 397, 823, 180,
	175, 857, 840, 787, 753, 759, 683, 0, 174, 819,
	715, 727, 707, 795, 706, 235, 811, 381, 382, 207,
	399, 624, 872, 176, 690, 871, 292, 300, 291, 874,
	377, 858, 788, 777, 775, 684, 856, 786, 776, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	779, 0, 171, 0, 356, 866, 883, 360, 189, 701,
	833, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 815, 880, 304, 332, 196, 387,
	353, 221, 635, 297, 647, 641, 643, 642, 639, 640,
	638, 637, 636, 649, 622, 623, 626, 627, 628, 770,
	860, 685, 631, 836, 644, 645, 808, 878, 620, 203,
	569, 661, 662, 663, 570, 664, 665, 571, 572, 666,
	667, 668, 669, 573, 670, 671, 672, 650, 651, 652,
	653, 654, 655, 656, 657, 660, 658, 659, 0, 766,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	629, 166, 177, 262, 879, 325, 231, 673, 680, 699,
	702, 703, 704, 705, 709, 714, 720, 728, 729, 737,
	742, 743, 744, 745, 752, 754, 755, 756, 757, 758,
	761, 762, 772, 783, 784, 790, 791, 0, 814, 817,
	634, 828, 830, 834, 835, 842, 847, 848, 873, 877,
	882, 388, 213, 769, 789, 820, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 852, 749, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 736, 168, 851, 875, 796, 810, 863, 0,
	367, 625, 867, 710, 733, 876, 739, 741, 804, 686,
	781, 301, 730, 687, 0, 0, 678, 534, 679, 711,
	218, 533, 837, 782, 865, 767, 797, 807, 217, 205,
	774, 773, 854, 722, 721, 802, 850, 864, 0, 0,
	633, 264, 0, 0, 391, 355, 284, 0, 0, 765,
	0, 618, 619, 750, 806, 698, 793, 869, 731, 798,
	870, 83, 0, 0, 0, 0, 453, 557, 556, 559,
	560, 561, 562, 0, 0, 144, 558, 563, 564, 565,
	0, 760, 803, 881, 677, 531, 548, 682, 632, 0,
	855, 718, 719, 222, 0, 0, 0, 0, 0, 0,
	0, 763, 780, 822, 747, 386, 809, 818, 832, 740,
	319, 237, 0, 0, 0, 0, 545, 546, 0, 0,
	0, 0, 648, 0, 547, 0, 692, 543, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	549, 0, 0, 0, 697, 675, 716, 824, 676, 674,
	285, 689, 621, 853, 748, 253, 161, 859, 746, 646,
	812, 693, 841, 734, 261, 691, 162, 688, 694, 732,
	296, 821, 827, 630, 165, 263, 838, 712, 725, 206,
	0, 331, 799, 385, 537, 233, 785, 330, 265, 378,
	813, 861, 384, 735, 362, 392, 396, 229, 768, 197,
	352, 220, 215, 717, 831, 681, 238, 318, 210, 257,
	751, 805, 713, 202, 816, 792, 843, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 839, 826, 845, 708, 695,
	700, 696, 724, 862, 247, 239, 846, 844, 726, 305,
	188, 778, 771, 764, 389, 151, 340, 339, 738, 246,
	829, 152, 143, 326, 153, 254, 170, 849, 398, 184,
	259, 369, 536, 232, 295, 208, 801, 306, 723, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 825, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 868, 271, 224, 228, 240, 251, 800, 329, 359,
	390, 794, 181, 173, 361, 383, 192, 341, 344, 397,
	823, 180, 175, 857, 840, 787, 753, 759, 683, 0,
	174, 819, 715, 727, 707, 795, 706, 235, 811, 381,
	382, 207, 399, 624, 872, 176, 690, 871, 292, 300,
	291, 874, 377, 858, 788, 777, 775, 684, 856, 786,
	776, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 779, 0, 171, 0, 356, 866, 883, 360,
	189, 701, 833, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 815, 880, 304, 332,
	196, 387, 353, 221, 635, 297, 647, 641, 643, 642,
	639, 640, 638, 637, 636, 649, 622, 623, 626, 627,
	628, 770, 860, 685, 631, 836, 644, 645, 808, 878,
	620, 203, 569, 661, 662, 663, 570, 664, 665, 571,
	572, 666, 667, 668, 669, 573, 670, 671, 672, 650,
	651, 652, 653, 654, 655, 656, 657, 660, 658, 659,
	0, 766, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 629, 166, 177, 262, 879, 325, 231, 673,
	680, 699, 702, 703, 704, 705, 709, 714, 720, 728,
	729, 737, 742, 743, 744, 745, 752, 754, 755, 756,
	757, 758, 761, 762, 772, 783, 784, 790, 791, 0,
	814, 817, 634, 828, 830, 834, 835, 842, 847, 848,
	873, 877, 882, 388, 213, 769, 789, 820, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 852, 749, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 736, 168, 851, 875, 796, 810,
	863, 0, 367, 625, 867, 710, 733, 876, 739, 741,
	804, 686, 781, 301, 730, 687, 0, 0, 678, 923,
	679, 711, 218, 921, 837, 782, 865, 767, 797, 807,
	217, 205, 774, 773, 854, 722, 721, 802, 850, 864,
	0, 0, 633, 264, 0, 0, 391, 355, 284, 0,
	0, 765, 0, 618, 619, 750, 806, 698, 793, 869,
	731, 798, 870, 83, 0, 0, 0, 0, 453, 557,
	556, 559, 560, 561, 562, 0, 0, 144, 558, 563,
	564, 565, 0, 760, 803, 881, 677, 940, 548, 682,
	632, 0, 855, 718, 719, 222, 0, 0, 0, 0,
	0, 0, 0, 763, 780, 822, 747, 386, 809, 818,
	832, 740, 319, 237, 0, 0, 0, 0, 545, 546,
	0, 0, 0, 0, 648, 0, 547, 0, 692, 543,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 549, 0, 0, 0, 697, 675, 716, 824,
	676, 674, 285, 689, 621, 853, 748, 253, 161, 859,
	746, 646, 812, 693, 841, 734, 261, 691, 162, 688,
	694, 732, 296, 821, 827, 630, 165, 263, 838, 712,
	725, 206, 0, 331, 799, 385, 537, 233, 3669, 330,
	265, 378, 813, 861, 384, 735, 362, 392, 396, 229,
	768, 197, 352, 220, 215, 717, 831, 681, 238, 318,
	210, 257, 751, 805, 713, 202, 816, 792, 843, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 839, 826, 845,
	708, 695, 700, 696, 724, 862, 247, 239, 846, 844,
	726, 305, 188, 778, 771, 764, 389, 151, 340, 339,
	738, 246, 829, 152, 143, 326, 153, 254, 170, 849,
	398, 184, 259, 369, 536, 232, 295, 208, 801, 306,
	723, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	825, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 868, 271, 224, 228, 240, 251, 800,
	329, 359, 390, 794, 181, 173, 361, 383, 192, 341,
	344, 397, 823, 180, 175, 857, 840, 787, 753, 759,
	683, 0, 174, 819, 715, 727, 707, 795, 706, 235,
	811, 381, 382, 207, 399, 624, 872, 176, 690, 871,
	292, 300, 291, 874, 377, 858, 788, 777, 775, 684,
	856, 786, 776, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 779, 0, 171, 0, 356, 866,
	883, 360, 189, 701, 833, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 815, 880,
	304, 332, 196, 387, 353, 221, 635, 297, 647, 641,
	643, 642, 639, 640, 638, 637, 636, 649, 622, 623,
	626, 627, 628, 770, 860, 685, 631, 836, 644, 645,
	808, 878, 620, 203, 569, 661, 662, 663, 570, 664,
	665, 571, 572, 666, 667, 668, 669, 573, 670, 671,
	672, 650, 651, 652, 653, 654, 655, 656, 657, 660,
	658, 659, 0, 766, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 629, 166, 177, 262, 879, 325,
	231, 673, 680, 699, 702, 703, 704, 705, 709, 714,
	720, 728, 729, 737, 742, 743, 744, 745, 752, 754,
	755, 756, 757, 758, 761, 762, 772, 783, 784, 790,
	791, 0, 814, 817, 634, 828, 830, 834, 835, 842,
	847, 848, 873, 877, 882, 388, 213, 769, 789, 820,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 852, 749, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 736, 168, 851, 875,
	796, 810, 863, 0, 367, 625, 867, 710, 733, 876,
	739, 741, 804, 686, 781, 301, 730, 687, 0, 0,
	678, 923, 679, 711, 218, 921, 837, 782, 865, 767,
	797, 807, 217, 205, 774, 773, 854, 722, 721, 802,
	850, 864, 0, 0, 633, 264, 0, 0, 391, 355,
	284, 0, 0, 765, 0, 618, 619, 750, 806, 698,
	793, 869, 731, 798, 870, 83, 0, 0, 0, 0,
	453, 557, 556, 559, 560, 561, 562, 0, 0, 144,
	558, 563, 564, 565, 0, 760, 803, 881, 677, 940,
	548, 682, 632, 0, 855, 718, 719, 222, 0, 0,
	0, 0, 0, 0, 0, 763, 780, 822, 747, 386,
	809, 818, 832, 740, 319, 237, 0, 0, 0, 0,
	545, 546, 0, 0, 0, 0, 648, 0, 547, 0,
	692, 543, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 549, 0, 0, 0, 697, 675,
	716, 824, 676, 674, 285, 689, 621, 853, 748, 253,
	161, 859, 746, 646, 812, 693, 841, 734, 261, 691,
	162, 688, 694, 732, 296, 821, 827, 630, 165, 263,
	838, 712, 725, 206, 0, 331, 799, 385, 537, 233,
	785, 330, 265, 378, 813, 861, 384, 735, 362, 392,
	396, 229, 768, 197, 352, 220, 215, 717, 831, 681,
	238, 318, 210, 257, 751, 805, 713, 202, 816, 792,
	843, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 839,
	826, 845, 708, 695, 700, 696, 724, 862, 247, 239,
	846, 844, 726, 305, 188, 778, 771, 764, 389, 151,
	340, 339, 738, 246, 829, 152, 143, 326, 153, 254,
	170, 849, 398, 184, 259, 369, 536, 232, 295, 208,
	801, 306, 723, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 825, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 868, 271, 224, 228, 240,
	251, 800, 329, 359, 390, 794, 181, 173, 361, 383,
	192, 341, 344, 397, 823, 180, 175, 857, 840, 787,
	753, 759, 683, 0, 174, 819, 715, 727, 707, 795,
	706, 235, 811, 381, 382, 207, 399, 624, 872, 176,
	690, 871, 292, 300, 291, 874, 377, 858, 788, 777,
	775, 684, 856, 786, 776, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 779, 0, 171, 0,
	356, 866, 883, 360, 189, 701, 833, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	815, 880, 304, 332, 196, 387, 353, 221, 635, 297,
	647, 641, 643, 642, 639, 640, 638, 637, 636, 649,
	622, 623, 626, 627, 628, 1986, 1987, 1988, 631, 836,
	644, 645, 808, 878, 620, 203, 569, 661, 662, 663,
	570, 664, 665, 571, 572, 666, 667, 668, 669, 573,
	670, 671, 672, 650, 651, 652, 653, 654, 655, 656,
	657, 660, 658, 659, 0, 766, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 629, 166, 177, 262,
	879, 325, 231, 673, 680, 699, 702, 703, 704, 705,
	709, 714, 720, 728, 729, 737, 742, 743, 744, 745,
	752, 754, 755, 756, 757, 758, 761, 762, 772, 783,
	784, 790, 791, 0, 814, 817, 634, 828, 830, 834,
	835, 842, 847, 848, 873, 877, 882, 388, 213, 769,
	789, 820, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 852, 749, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 736, 168,
	851, 875, 796, 810, 1729, 2904, 367, 1584, 1733, 1533,
	1563, 1750, 1569, 1572, 1653, 1499, 1622, 301, 1560, 1500,
	1483, 1538, 1487, 1551, 1488, 1535, 218, 1531, 1694, 1625,
	1731, 1604, 1646, 1656, 217, 205, 1614, 1613, 1719, 1549,
	1548, 1651, 1708, 1730, 1603, 0, 1740, 264, 1705, 983,
	391, 355, 284, 986, 985, 1599, 1714, 1620, 1683, 1582,
	1655, 1515, 1638, 1735, 1561, 1647, 1736, 83, 0, 1193,
	0, 0, 979, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 1643, 1727, 1554, 984, 1594, 1652, 1755,
	1486, 1639, 0, 1491, 1502, 1749, 1720, 1545, 1546, 222,
	0, 0, 0, 0, 0, 0, 0, 1597, 1621, 1673,
	1579, 386, 1658, 1668, 1686, 1571, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 0, 1636, 0,
	0, 0, 1507, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	1514, 1484, 1542, 1675, 1485, 1482, 285, 1503, 1688, 1718,
	1580, 253, 161, 1724, 1578, 1577, 1662, 1508, 1698, 1564,
	261, 1506, 162, 1501, 1509, 1562, 296, 1672, 1680, 149,
	165, 263, 1695, 1536, 1553, 206, 1867, 331, 1648, 385,
	982, 233, 1629, 330, 265, 378, 1663, 1726, 384, 1565,
	362, 392, 396, 229, 1605, 197, 352, 220, 215, 1544,
	1685, 1490, 238, 318, 210, 257, 1583, 1654, 1537, 202,
	1666, 1637, 1700, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728,
	247, 239, 1703, 1701, 1555, 305, 188, 1618, 1611, 1598,
	389, 151, 340, 339, 1568, 246, 1682, 152, 143, 326,
	153, 254, 170, 1707, 398, 184, 259, 369, 981, 232,
	295, 208, 1650, 306, 1550, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 1678, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 1734, 271, 224,
	228, 240, 251, 1649, 329, 359, 390, 1640, 181, 173,
	361, 383, 192, 341, 344, 397, 1674, 180, 175, 1722,
	1697, 1631, 1586, 1592, 1492, 0, 174, 1670, 1541, 1557,
	1529, 1644, 1528, 235, 1661, 381, 382, 207, 399, 1504,
	1742, 176, 1505, 1741, 292, 300, 291, 1745, 377, 1723,
	1632, 1617, 1615, 1497, 1721, 1630, 1616, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 1619, 0,
	171, 0, 356, 1732, 1757, 360, 189, 1523, 1689, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 1665, 1754, 304, 332, 196, 387, 353, 221,
	1519, 297, 1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738,
	1739, 1677, 1512, 0, 1715, 1716, 0, 1610, 1725, 1498,
	0, 1693, 159, 160, 1657, 1752, 1570, 203, 138, 1494,
	1495, 1496, 139, 1600, 1601, 140, 141, 1711, 1710, 1709,
	1712, 142, 1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607,
	1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 1628, 166,
	177, 262, 2905, 325, 231, 1481, 1489, 1516, 1524, 1525,
	1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574,
	1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596,
	1612, 1626, 1627, 1634, 1635, 0, 1664, 1667, 1676, 1681,
	1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756, 388,
	213, 1608, 1633, 1671, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 1717,
	1581, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	1566, 168, 1713, 1748, 1645, 1659, 1729, 1691, 367, 1584,
	1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622, 301,
	1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535, 218, 1531,
	1694, 1625, 1731, 1604, 1646, 1656, 217, 205, 1614, 1613,
	1719, 1549, 1548, 1651, 1708, 1730, 1603, 0, 1740, 264,
	1705, 983, 391, 355, 284, 986, 985, 1599, 1714, 1620,
	1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736, 0,
	0, 0, 0, 0, 979, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 1643, 1727, 1554, 984, 1594,
	1652, 1755, 1486, 1639, 0, 1491, 1502, 1749, 1720, 1545,
	1546, 222, 0, 0, 0, 0, 0, 0, 0, 1597,
	1621, 1673, 1579, 386, 1658, 1668, 1686, 1571, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 1540, 0,
	1636, 0, 0, 0, 1507, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 1514, 1484, 1542, 1675, 1485, 1482, 285, 1503,
	1688, 1718, 1580, 253, 161, 1724, 1578, 1577, 1662, 1508,
	1698, 1564, 261, 1506, 162, 1501, 1509, 1562, 296, 1672,
	1680, 149, 165, 263, 1695, 1536, 1553, 206, 1867, 331,
	1648, 385, 982, 233, 1629, 330, 265, 378, 1663, 1726,
	384, 1565, 362, 392, 396, 229, 1605, 197, 352, 220,
	215, 1544, 1685, 1490, 238, 318, 210, 257, 1583, 1654,
	1537, 202, 1666, 1637, 1700, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 1696, 1679, 1702, 1530, 1510, 1521, 1511,
	1552, 1728, 247, 239, 1703, 1701, 1555, 305, 188, 1618,
	1611, 1598, 389, 151, 340, 339, 1568, 246, 1682, 152,
	143, 326, 153, 254, 170, 1707, 398, 184, 259, 369,
	981, 232, 295, 208, 1650, 306, 1550, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 1678, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 1734,
	271, 224, 228, 240, 251, 1649, 329, 359, 390, 1640,
	181, 173, 361, 383, 192, 341, 344, 397, 1674, 180,
	175, 1722, 1697, 1631, 1586, 1592, 1492, 0, 174, 1670,
	1541, 1557, 1529, 1644, 1528, 235, 1661, 381, 382, 207,
	399, 1504, 1742, 176, 1505, 1741, 292, 300, 291, 1745,
	377, 1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	1619, 0, 171, 0, 356, 1732, 1757, 360, 189, 1523,
	1689, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 1665, 1754, 304, 332, 196, 387,
	353, 221, 1519, 297, 1522, 1517, 1520, 1518, 1623, 1624,
	1737, 1738, 1739, 1677, 1512, 0, 1715, 1716, 0, 1610,
	1725, 1498, 0, 1693, 159, 160, 1657, 1752, 1570, 203,
	138, 1494, 1495, 1496, 139, 1600, 1601, 140, 141, 1711,
	1710, 1709, 1712, 142, 1746, 1744, 1747, 1513, 1534, 1556,
	1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	1628, 166, 177, 262, 1753, 325, 231, 1481, 1489, 1516,
	1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567,
	1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591,
	1595, 1596, 1612, 1626, 1627, 1634, 1635, 0, 1664, 1667,
	1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751,
	1756, 388, 213, 1608, 1633, 1671, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 1717, 1581, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 1566, 168, 1713, 1748, 1645, 1659, 1729, 1691,
	367, 1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499,
	1622, 301, 1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535,
	218, 1531, 1694, 1625, 1731, 1604, 1646, 1656, 217, 205,
	1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603, 0,
	1740, 264, 1705, 0, 391, 355, 284, 0, 0, 1599,
	1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647,
	1736, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 1643, 1727, 1554,
	0, 1594, 1652, 1755, 1486, 1639, 0, 1491, 1502, 1749,
	1720, 1545, 1546, 222, 0, 0, 0, 0, 0, 0,
	0, 1597, 1621, 1673, 1579, 386, 1658, 1668, 1686, 1571,
	319, 237, 0, 0, 0, 0, 0, 0, 2575, 0,
	1540, 0, 1636, 0, 0, 0, 1507, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 1514, 1484, 1542, 1675, 1485, 1482,
	285, 1503, 1688, 1718, 1580, 253, 161, 1724, 1578, 1577,
	1662, 1508, 1698, 1564, 261, 1506, 162, 1501, 1509, 1562,
	296, 1672, 1680, 149, 165, 263, 1695, 1536, 1553, 206,
	0, 331, 1648, 385, 1916, 233, 1629, 330, 265, 378,
	1663, 1726, 384, 1565, 362, 392, 396, 229, 1605, 197,
	352, 220, 215, 1544, 1685, 1490, 238, 318, 210, 257,
	1583, 1654, 1537, 202, 1666, 1637, 1700, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 1696, 1679, 1702, 1530, 1510,
	1521, 1511, 1552, 1728, 247, 239, 1703, 1701, 1555, 305,
	188, 1618, 1611, 1598, 389, 151, 340, 339, 1568, 246,
	1682, 152, 143, 326, 153, 254, 170, 1707, 398, 184,
	259, 369, 1915, 232, 295, 208, 1650, 306, 1550, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 1678, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 1734, 271, 224, 228, 240, 251, 1649, 329, 359,
	390, 1640, 181, 173, 361, 383, 192, 341, 344, 397,
	1674, 180, 175, 1722, 1697, 1631, 1586, 1592, 1492, 0,
	174, 1670, 1541, 1557, 1529, 1644, 1528, 235, 1661, 381,
	382, 207, 399, 1504, 1742, 176, 1505, 1741, 292, 300,
	291, 1745, 377, 1723, 1632, 1617, 1615, 1497, 1721, 1630,
	1616, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 1619, 0, 171, 0, 356, 1732, 1757, 360,
	189, 1523, 1689, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 1665, 1754, 304, 332,
	196, 387, 353, 221, 1519, 297, 1522, 1517, 1520, 1518,
	1623, 1624, 1737, 1738, 1739, 1677, 1512, 0, 1715, 1716,
	0, 1610, 1725, 1498, 0, 1693, 159, 160, 1657, 1752,
	1570, 203, 138, 1494, 1495, 1496, 139, 1600, 1601, 140,
	141, 1711, 1710, 1709, 1712, 142, 1746, 1744, 1747, 1513,
	1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669,
	1543, 1602, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 1628, 166, 177, 262, 1753, 325, 231, 1481,
	1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558,
	1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589,
	1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635, 0,
	1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706,
	1743, 1751, 1756, 388, 213, 1608, 1633, 1671, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 1717, 1581, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 1566, 168, 1713, 1748, 1645, 1659,
	1729, 1691, 367, 1584, 1733, 1533, 1563, 1750, 1569, 1572,
	1653, 1499, 1622, 301, 1560, 1500, 1483, 1538, 1487, 1551,
	1488, 1535, 218, 1531, 1694, 1625, 1731, 1604, 1646, 1656,
	217, 205, 1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730,
	1603, 0, 1740, 264, 1705, 0, 391, 355, 284, 0,
	0, 1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735,
	1561, 1647, 1736, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 1643,
	1727, 1554, 0, 1594, 1652, 1755, 1486, 1639, 0, 1491,
	1502, 1749, 1720, 1545, 1546, 222, 0, 0, 0, 0,
	0, 0, 0, 1597, 1621, 1673, 1579, 386, 1658, 1668,
	1686, 1571, 319, 237, 0, 0, 0, 0, 0, 0,
	1910, 0, 1540, 0, 1636, 0, 0, 0, 1507, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 1514, 1484, 1542, 1675,
	1485, 1482, 285, 1503, 1688, 1718, 1580, 253, 161, 1724,
	1578, 1577, 1662, 1508, 1698, 1564, 261, 1506, 162, 1501,
	1509, 1562, 296, 1672, 1680, 149, 165, 263, 1695, 1536,
	1553, 206, 0, 331, 1648, 385, 1916, 233, 1629, 330,
	265, 378, 1663, 1726, 384, 1565, 362, 392, 396, 229,
	1605, 197, 352, 220, 215, 1544, 1685, 1490, 238, 318,
	210, 257, 1583, 1654, 1537, 202, 1666, 1637, 1700, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 1696, 1679, 1702,
	1530, 1510, 1521, 1511, 1552, 1728, 247, 239, 1703, 1701,
	1555, 305, 188, 1618, 1611, 1598, 389, 151, 340, 339,
	1568, 246, 1682, 152, 143, 326, 153, 254, 170, 1707,
	398, 184, 259, 369, 1915, 232, 295, 208, 1650, 306,
	1550, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	1678, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 1734, 271, 224, 228, 240, 251, 1649,
	329, 359, 390, 1640, 181, 173, 361, 383, 192, 341,
	344, 397, 1674, 180, 175, 1722, 1697, 1631, 1586, 1592,
	1492, 0, 174, 1670, 1541, 1557, 1529, 1644, 1528, 235,
	1661, 381, 382, 207, 399, 1504, 1742, 176, 1505, 1741,
	292, 300, 291, 1745, 377, 1723, 1632, 1617, 1615, 1497,
	1721, 1630, 1616, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 1619, 0, 171, 0, 356, 1732,
	1757, 360, 189, 1523, 1689, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 1665, 1754,
	304, 332, 196, 387, 353, 221, 1519, 297, 1522, 1517,
	1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512, 0,
	1715, 1716, 0, 1610, 1725, 1498, 0, 1693, 159, 160,
	1657, 1752, 1570, 203, 138, 1494, 1495, 1496, 139, 1600,
	1601, 140, 141, 1711, 1710, 1709, 1712, 142, 1746, 1744,
	1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687,
	1660, 1669, 1543, 1602, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 1628, 166, 177, 262, 1753, 325,
	231, 1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539,
	1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587,
	1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634,
	1635, 0, 1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699,
	1704, 1706, 1743, 1751, 1756, 388, 213, 1608, 1633, 1671,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 1717, 1581, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 1566, 168, 1713, 1748,
	1645, 1659, 1729, 1691, 367, 1584, 1733, 1533, 1563, 1750,
	1569, 1572, 1653, 1499, 1622, 301, 1560, 1500, 1483, 1538,
	1487, 1551, 1488, 1535, 218, 1531, 1694, 1625, 1731, 1604,
	1646, 1656, 217, 205, 1614, 1613, 1719, 1549, 1548, 1651,
	1708, 1730, 1603, 0, 1740, 264, 1705, 0, 391, 355,
	284, 0, 0, 1599, 1714, 1620, 1683, 1582, 1655, 1515,
	1638, 1735, 1561, 1647, 1736, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 1643, 1727, 1554, 0, 1594, 1652, 1755, 1486, 1639,
	0, 1491, 1502, 1749, 1720, 1545, 1546, 222, 0, 0,
	0, 0, 0, 0, 0, 1597, 1621, 1673, 1579, 386,
	1658, 1668, 1686, 1571, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 1540, 0, 1636, 0, 0, 0,
	1507, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 1514, 1484,
	1542, 1675, 1485, 1482, 285, 1503, 1688, 1718, 1580, 253,
	161, 1724, 1578, 1577, 1662, 1508, 1698, 1564, 261, 1506,
	162, 1501, 1509, 1562, 296, 1672, 1680, 149, 165, 263,
	1695, 1536, 1553, 206, 0, 331, 1648, 385, 1916, 233,
	1629, 330, 265, 378, 1663, 1726, 384, 1565, 362, 392,
	396, 229, 1605, 197, 352, 220, 215, 1544, 1685, 1490,
	238, 318, 210, 257, 1583, 1654, 1537, 202, 1666, 1637,
	1700, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 1696,
	1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728, 247, 239,
	1703, 1701, 1555, 305, 188, 1618, 1611, 1598, 389, 151,
	340, 339, 1568, 246, 1682, 152, 143, 326, 153, 254,
	170, 1707, 398, 184, 259, 369, 1915, 232, 295, 208,
	1650, 306, 1550, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 1678, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 1734, 271, 224, 228, 240,
	251, 1649, 329, 359, 390, 1640, 181, 173, 361, 383,
	192, 341, 344, 397, 1674, 180, 175, 1722, 1697, 1631,
	1586, 1592, 1492, 0, 174, 1670, 1541, 1557, 1529, 1644,
	1528, 235, 1661, 381, 382, 207, 399, 1504, 1742, 176,
	1505, 1741, 292, 300, 291, 1745, 377, 1723, 1632, 1617,
	1615, 1497, 1721, 1630, 1616, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 1619, 0, 171, 0,
	356, 1732, 1757, 360, 189, 1523, 1689, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	1665, 1754, 304, 332, 196, 387, 353, 221, 1519, 297,
	1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677,
	1512, 0, 1715, 1716, 0, 1610, 1725, 1498, 0, 1693,
	159, 160, 1657, 1752, 1570, 203, 138, 1494, 1495, 1496,
	139, 1600, 1601, 140, 141, 1711, 1710, 1709, 1712, 142,
	1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641,
	1642, 1687, 1660, 1669, 1543, 1602, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 1628, 166, 177, 262,
	1753, 325, 231, 1481, 1489, 1516, 1524, 1525, 1526, 1527,
	1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576,
	1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626,
	1627, 1634, 1635, 0, 1664, 1667, 1676, 1681, 1684, 1690,
	1692, 1699, 1704, 1706, 1743, 1751, 1756, 388, 213, 1608,
	1633, 1671, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 1717, 1581, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 1566, 168,
	1713, 1748, 1645, 1659, 863, 0, 367, 928, 867, 710,
	733, 876, 739, 741, 804, 686, 781, 301, 730, 687,
	0, 0, 678, 923, 679, 711, 218, 921, 837, 782,
	865, 767, 797, 807, 217, 205, 774, 773, 854, 722,
	721, 802, 850, 864, 0, 0, 961, 264, 0, 983,
	391, 355, 284, 986, 985, 765, 0, 935, 948, 750,
	806, 698, 793, 869, 731, 798, 870, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 943, 957, 924, 984, 760, 803, 881,
	677, 940, 0, 682, 912, 0, 855, 718, 719, 222,
	0, 0, 0, 0, 0, 0, 0, 763, 780, 822,
	747, 386, 809, 818, 832, 740, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 692, 908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 929, 0, 0, 0,
	697, 675, 716, 824, 676, 674, 285, 689, 950, 853,
	748, 253, 161, 859, 746, 927, 812, 693, 841, 734,
	261, 691, 162, 688, 694, 732, 296, 821, 827, 149,
	165, 263, 838, 712, 725, 206, 2644, 331, 799, 385,
	2646, 233, 785, 330, 265, 378, 813, 861, 384, 735,
	362, 392, 396, 229, 768, 197, 352, 220, 215, 717,
	831, 681, 238, 318, 210, 257, 751, 805, 713, 202,
	816, 792, 843, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 839, 826, 845, 708, 695, 700, 696, 724, 862,
	247, 239, 846, 844, 726, 305, 188, 778, 771, 764,
	389, 151, 340, 339, 738, 246, 829, 152, 143, 326,
	153, 254, 170, 849, 398, 184, 259, 369, 2645, 232,
	295, 208, 801, 306, 723, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 825, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 868, 271, 224,
	228, 240, 251, 800, 329, 359, 390, 794, 181, 173,
	361, 383, 192, 341, 344, 397, 823, 180, 175, 857,
	840, 787, 753, 759, 683, 0, 174, 819, 715, 727,
	707, 795, 706, 235, 811, 381, 382, 207, 399, 913,
	872, 176, 690, 871, 292, 300, 291, 874, 377, 858,
	788, 777, 775, 684, 856, 786, 776, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 779, 0,
	171, 0, 356, 866, 883, 360, 189, 701, 833, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 815, 880, 304, 332, 196, 387, 353, 221,
	918, 297, 920, 916, 919, 917, 936, 937, 958, 959,
	960, 947, 914, 0, 955, 956, 0, 770, 860, 685,
	0, 836, 159, 160, 808, 878, 926, 203, 138, 909,
	910, 911, 139, 930, 931, 140, 141, 953, 952, 951,
	954, 142, 963, 962, 964, 915, 922, 925, 932, 933,
	934, 941, 942, 949, 944, 945, 0, 766, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 938, 166,
	177, 262, 879, 325, 231, 673, 680, 699, 702, 703,
	704, 705, 709, 714, 720, 728, 729, 737, 742, 743,
	744, 745, 752, 754, 755, 756, 757, 758, 761, 762,
	772, 783, 784, 790, 791, 0, 814, 817, 946, 828,
	830, 834, 835, 842, 847, 848, 873, 877, 882, 388,
	213, 769, 789, 820, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 852,
	749, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	736, 168, 851, 875, 796, 810, 863, 0, 367, 928,
	867, 710, 733, 876, 739, 741, 804, 686, 781, 301,
	730, 687, 0, 0, 678, 923, 679, 711, 218, 921,
	837, 782, 865, 767, 797, 807, 217, 205, 774, 773,
	854, 722, 721, 802, 850, 864, 0, 0, 961, 264,
	0, 0, 391, 355, 284, 0, 0, 765, 0, 935,
	948, 750, 806, 698, 793, 869, 731, 798, 870, 0,
	0, 0, 0, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 943, 957, 924, 0, 760,
	803, 881, 677, 940, 0, 682, 912, 0, 855, 718,
	719, 222, 0, 0, 0, 0, 0, 0, 0, 763,
	780, 822, 747, 386, 809, 818, 832, 740, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 692, 908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 929, 0,
	0, 0, 697, 675, 716, 824, 676, 674, 285, 689,
	950, 853, 748, 253, 161, 859, 746, 927, 812, 693,
	841, 734, 261, 691, 162, 688, 694, 732, 296, 821,
	827, 149, 165, 263, 838, 712, 725, 206, 0, 331,
	799, 385, 907, 233, 785, 330, 265, 378, 813, 861,
	384, 735, 362, 392, 396, 229, 768, 197, 352, 220,
	215, 717, 831, 681, 238, 318, 210, 257, 751, 805,
	713, 202, 816, 792, 843, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 839, 826, 845, 708, 695, 700, 696,
	724, 862, 247, 239, 846, 844, 726, 305, 188, 778,
	771, 764, 389, 151, 340, 339, 738, 246, 829, 152,
	143, 326, 153, 254, 170, 849, 398, 184, 259, 369,
	906, 232, 295, 208, 801, 306, 723, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 825, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 868,
	271, 224, 228, 240, 251, 800, 329, 359, 390, 794,
	181, 173, 361, 383, 192, 341, 344, 397, 823, 180,
	175, 857, 840, 787, 753, 759, 683, 0, 174, 819,
	715, 727, 707, 795, 706, 235, 811, 381, 382, 207,
	399, 913, 872, 176, 690, 871, 292, 300, 291, 874,
	377, 858, 788, 777, 775, 684, 856, 786, 776, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	779, 0, 171, 0, 356, 866, 883, 360, 189, 701,
	833, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 815, 880, 304, 332, 196, 387,
	353, 221, 918, 297, 920, 916, 919, 917, 936, 937,
	958, 959, 960, 947, 914, 0, 955, 956, 0, 770,
	860, 685, 0, 836, 159, 160, 808, 878, 926, 203,
	138, 909, 910, 911, 139, 930, 931, 140, 141, 953,
	952, 951, 954, 142, 963, 962, 964, 915, 922, 925,
	932, 933, 934, 941, 942, 949, 944, 945, 0, 766,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	938, 166, 177, 262, 879, 325, 231, 673, 680, 699,
	702, 703, 704, 705, 709, 714, 720, 728, 729, 737,
	742, 743, 744, 745, 752, 754, 755, 756, 757, 758,
	761, 762, 772, 783, 784, 790, 791, 0, 814, 817,
	946, 828, 830, 834, 835, 842, 847, 848, 873, 877,
	882, 388, 213, 769, 789, 820, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 852, 749, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 736, 168, 851, 875, 796, 810, 863, 0,
	367, 928, 867, 710, 733, 876, 739, 741, 804, 686,
	781, 301, 730, 687, 0, 0, 678, 923, 679, 711,
	218, 921, 837, 782, 865, 767, 797, 807, 217, 205,
	774, 773, 854, 722, 721, 802, 850, 864, 0, 0,
	961, 264, 0, 0, 391, 355, 284, 0, 0, 765,
	0, 935, 948, 750, 806, 698, 793, 869, 731, 798,
	870, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 943, 957, 924,
	0, 760, 803, 881, 677, 940, 0, 682, 912, 0,
	855, 718, 719, 222, 0, 0, 0, 0, 0, 0,
	0, 763, 780, 822, 747, 386, 809, 818, 832, 740,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 692, 908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	929, 0, 0, 0, 697, 675, 716, 824, 676, 674,
	285, 689, 950, 853, 748, 253, 161, 859, 746, 927,
	812, 693, 841, 734, 261, 691, 162, 688, 694, 732,
	296, 821, 827, 149, 165, 263, 838, 712, 725, 206,
	0, 331, 799, 385, 907, 233, 785, 330, 265, 378,
	813, 861, 384, 735, 362, 392, 396, 229, 768, 197,
	352, 220, 215, 717, 831, 681, 238, 318, 210, 257,
	751, 805, 713, 202, 816, 792, 843, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 839, 826, 845, 708, 695,
	700, 696, 724, 862, 247, 239, 846, 844, 726, 305,
	188, 778, 771, 764, 389, 151, 340, 339, 738, 246,
	829, 152, 143, 326, 153, 254, 170, 849, 398, 184,
	259, 369, 906, 232, 295, 208, 801, 306, 723, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 825, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 868, 271, 224, 228, 240, 251, 800, 329, 359,
	390, 794, 181, 173, 361, 383, 192, 341, 344, 397,
	823, 180, 175, 857, 840, 787, 753, 759, 683, 0,
	174, 819, 715, 727, 707, 795, 706, 235, 811, 381,
	382, 207, 399, 913, 872, 176, 901, 871, 292, 300,
	291, 874, 377, 858, 788, 777, 775, 684, 856, 786,
	776, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 897, 779, 0, 171, 0, 356, 866, 883, 360,
	189, 701, 833, 372, 150, 323, 190, 234, 225, 315,
	902, 900, 891, 892, 258, 266, 815, 880, 304, 332,
	196, 387, 353, 221, 918, 297, 920, 916, 919, 917,
	936, 937, 958, 959, 960, 947, 914, 0, 955, 956,
	0, 770, 860, 685, 0, 836, 159, 160, 808, 878,
	926, 203, 138, 909, 910, 911, 139, 930, 931, 140,
	141, 953, 952, 951, 954, 142, 963, 962, 964, 915,
	922, 925, 932, 933, 934, 941, 942, 949, 944, 945,
	0, 766, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 938, 166, 177, 262, 879, 325, 231, 673,
	680, 699, 702, 703, 704, 705, 709, 714, 720, 728,
	729, 737, 742, 743, 744, 745, 752, 754, 755, 756,
	757, 758, 761, 762, 772, 783, 784, 790, 791, 0,
	814, 817, 946, 828, 830, 834, 835, 842, 847, 848,
	873, 877, 882, 388, 213, 769, 789, 820, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 898, 899, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 852, 749, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 736, 168, 851, 875, 796, 810,
	863, 0, 367, 928, 867, 710, 733, 876, 739, 741,
	804, 686, 781, 301, 730, 687, 0, 0, 678, 923,
	679, 711, 218, 921, 837, 782, 865, 767, 797, 807,
	217, 205, 774, 773, 854, 722, 721, 802, 850, 864,
	0, 0, 961, 264, 0, 0, 391, 355, 284, 0,
	0, 765, 0, 935, 948, 750, 806, 698, 793, 869,
	731, 798, 870, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 943,
	957, 924, 0, 760, 803, 881, 677, 940, 0, 682,
	912, 0, 855, 718, 719, 222, 0, 0, 0, 0,
	0, 0, 0, 763, 780, 822, 747, 386, 809, 818,
	832, 740, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 692, 908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 929, 0, 0, 0, 697, 675, 716, 824,
	676, 674, 285, 689, 950, 853, 748, 253, 161, 859,
	746, 927, 812, 693, 841, 734, 261, 691, 162, 688,
	694, 732, 296, 821, 827, 149, 165, 263, 838, 712,
	725, 206, 0, 331, 799, 385, 907, 233, 785, 330,
	265, 378, 813, 861, 384, 735, 362, 392, 396, 229,
	768, 197, 352, 220, 215, 717, 831, 681, 238, 318,
	210, 257, 751, 805, 713, 202, 816, 792, 843, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 839, 826, 845,
	708, 695, 700, 696, 724, 862, 247, 239, 846, 844,
	726, 305, 188, 778, 771, 764, 389, 151, 340, 339,
	738, 246, 829, 152, 143, 326, 153, 254, 170, 849,
	398, 184, 259, 369, 906, 232, 295, 208, 801, 306,
	723, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	825, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 868, 271, 224, 228, 240, 251, 800,
	329, 359, 390, 794, 181, 173, 361, 1358, 192, 341,
	344, 397, 823, 180, 175, 857, 840, 787, 753, 759,
	683, 0, 174, 819, 715, 727, 707, 795, 706, 235,
	811, 381, 382, 207, 399, 913, 872, 176, 690, 871,
	292, 300, 291, 874, 377, 858, 788, 777, 775, 684,
	856, 786, 776, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 779, 0, 171, 0, 356, 866,
	883, 360, 189, 701, 833, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 815, 880,
	304, 332, 196, 387, 353, 221, 918, 297, 920, 916,
	919, 917, 936, 937, 958, 959, 960, 947, 914, 0,
	955, 956, 0, 770, 860, 685, 0, 836, 159, 160,
	808, 878, 926, 203, 138, 909, 910, 911, 139, 930,
	931, 140, 141, 953, 952, 951, 954, 142, 963, 962,
	964, 915, 922, 925, 932, 933, 934, 941, 942, 949,
	944, 945, 0, 766, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 938, 166, 177, 262, 879, 325,
	231, 673, 680, 699, 702, 703, 704, 705, 709, 714,
	720, 728, 729, 737, 742, 743, 744, 745, 752, 754,
	755, 756, 757, 758, 761, 762, 772, 783, 784, 790,
	791, 0, 814, 817, 946, 828, 830, 834, 835, 842,
	847, 848, 873, 877, 882, 388, 213, 769, 789, 820,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 852, 749, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 736, 168, 851, 875,
	796, 810, 863, 0, 367, 928, 867, 710, 733, 876,
	739, 741, 804, 686, 781, 301, 730, 687, 0, 0,
	678, 923, 679, 711, 218, 921, 837, 782, 865, 767,
	797, 807, 217, 205, 774, 773, 854, 722, 721, 802,
	850, 864, 0, 0, 961, 264, 0, 0, 391, 355,
	284, 0, 0, 765, 0, 935, 948, 750, 806, 698,
	793, 869, 731, 798, 870, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 943, 957, 924, 0, 760, 803, 881, 677, 940,
	0, 682, 912, 0, 855, 718, 719, 222, 0, 0,
	0, 0, 0, 0, 0, 763, 780, 822, 747, 386,
	809, 818, 832, 740, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	692, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 0, 697, 675,
	716, 824, 676, 674, 285, 689, 950, 853, 748, 253,
	161, 859, 746, 927, 812, 693, 841, 734, 261, 691,
	162, 688, 694, 732, 296, 821, 827, 149, 165, 263,
	838, 712, 725, 206, 0, 331, 799, 385, 907, 233,
	785, 330, 265, 378, 813, 861, 384, 735, 362, 392,
	396, 229, 768, 197, 352, 220, 215, 717, 831, 681,
	238, 318, 210, 257, 751, 805, 713, 202, 816, 792,
	843, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 839,
	826, 845, 708, 695, 700, 696, 724, 862, 247, 239,
	846, 844, 726, 305, 188, 778, 771, 764, 389, 151,
	340, 339, 738, 246, 829, 152, 143, 326, 153, 254,
	170, 849, 398, 184, 259, 369, 906, 232, 295, 208,
	801, 306, 723, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 825, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 868, 271, 224, 228, 240,
	251, 800, 329, 359, 390, 794, 181, 173, 361, 888,
	192, 341, 344, 397, 823, 180, 175, 857, 840, 787,
	753, 759, 683, 0, 174, 819, 715, 727, 707, 795,
	706, 235, 811, 381, 382, 207, 399, 913, 872, 176,
	901, 871, 292, 300, 291, 874, 377, 858, 788, 777,
	775, 684, 856, 786, 776, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 897, 779, 0, 171, 0,
	356, 866, 883, 360, 189, 701, 833, 372, 150, 323,
	190, 234, 225, 315, 902, 900, 891, 892, 258, 266,
	815, 880, 304, 332, 196, 387, 353, 221, 918, 297,
	920, 916, 919, 917, 936, 937, 958, 959, 960, 947,
	914, 0, 955, 956, 0, 770, 860, 685, 0, 836,
	159, 160, 808, 878, 926, 203, 138, 909, 910, 911,
	139, 930, 931, 140, 141, 953, 952, 951, 954, 142,
	963, 962, 964, 915, 922, 925, 932, 933, 934, 941,
	942, 949, 944, 945, 0, 766, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 938, 166, 177, 262,
	879, 325, 231, 673, 680, 699, 702, 703, 704, 705,
	709, 714, 720, 728, 729, 737, 742, 743, 744, 745,
	752, 754, 755, 756, 757, 758, 761, 762, 772, 783,
	784, 790, 791, 0, 814, 817, 946, 828, 830, 834,
	835, 842, 847, 848, 873, 877, 882, 388, 213, 769,
	789, 820, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 898, 899,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 852, 749, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 736, 168,
	851, 875, 796, 810, 1729, 1691, 367, 1584, 1733, 1533,
	1563, 1750, 1569, 1572, 1653, 1499, 1622, 301, 1560, 1500,
	1483, 1538, 1487, 1551, 1488, 1535, 218, 1531, 1694, 1625,
	1731, 1604, 1646, 1656, 217, 205, 1614, 1613, 1719, 1549,
	1548, 1651, 1708, 1730, 1603, 0, 1740, 264, 1705, 0,
	391, 355, 284, 0, 0, 1599, 1714, 1620, 1683, 1582,
	1655, 1515, 1638, 1735, 1561, 1647, 1736, 0, 0, 0,
	0, 0, 2724, 0, 2719, 2720, 0, 0, 0, 0,
	0, 2721, 0, 1643, 1727, 1554, 0, 1594, 1652, 1755,
	1486, 1639, 0, 1491, 1502, 1749, 1720, 1545, 1546, 222,
	0, 0, 0, 0, 0, 0, 0, 1597, 1621, 1673,
	1579, 386, 1658, 1668, 1686, 1571, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 0, 1636, 0,
	0, 0, 1507, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	1514, 1484, 1542, 1675, 1485, 1482, 285, 1503, 1688, 1718,
	1580, 253, 0, 1724, 1578, 1577, 1662, 1508, 1698, 1564,
	261, 1506, 162, 1501, 1509, 1562, 296, 1672, 1680, 0,
	165, 263, 1695, 1536, 1553, 206, 0, 331, 1648, 385,
	0, 233, 1629, 330, 265, 378, 1663, 1726, 384, 1565,
	362, 392, 396, 229, 1605, 197, 352, 220, 215, 1544,
	1685, 1490, 238, 318, 210, 257, 1583, 1654, 1537, 202,
	1666, 1637, 1700, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728,
	247, 239, 1703, 1701, 1555, 305, 188, 1618, 1611, 1598,
	389, 0, 340, 339, 1568, 246, 1682, 0, 0, 326,
	2723, 254, 170, 1707, 398, 184, 259, 369, 0, 232,
	295, 208, 1650, 306, 1550, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 1678, 324, 342, 373, 186, 358,
	2722, 0, 0, 0, 333, 0, 0, 1734, 271, 224,
	228, 240, 251, 1649, 329, 359, 390, 1640, 181, 173,
	361, 383, 192, 341, 344, 397, 1674, 180, 175, 1722,
	1697, 1631, 1586, 1592, 1492, 0, 174, 1670, 1541, 1557,
	1529, 1644, 1528, 235, 1661, 381, 382, 207, 399, 1504,
	1742, 176, 1505, 1741, 292, 300, 291, 1745, 377, 1723,
	1632, 1617, 1615, 1497, 1721, 1630, 1616, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 1619, 0,
	171, 0, 356, 1732, 1757, 360, 189, 1523, 1689, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 1665, 1754, 304, 332, 196, 387, 353, 221,
	1519, 297, 1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738,
	1739, 1677, 1512, 0, 1715, 1716, 0, 1610, 1725, 1498,
	0, 1693, 0, 0, 1657, 1752, 1570, 203, 0, 1494,
	1495, 1496, 0, 1600, 1601, 0, 0, 1711, 1710, 1709,
	1712, 0, 1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607,
	1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 1628, 166,
	177, 262, 1753, 325, 231, 1481, 1489, 1516, 1524, 1525,
	1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574,
	1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596,
	1612, 1626, 1627, 1634, 1635, 0, 1664, 1667, 1676, 1681,
	1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756, 388,
	213, 1608, 1633, 1671, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 1717,
	1581, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	1566, 168, 1713, 1748, 1645, 1659, 1729, 1691, 367, 1584,
	1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622, 301,
	1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535, 218, 1531,
	1694, 1625, 1731, 1604, 1646, 1656, 217, 205, 1614, 1613,
	1719, 1549, 1548, 1651, 1708, 1730, 1603, 0, 1740, 264,
	1705, 0, 391, 355, 284, 0, 0, 1599, 1714, 1620,
	1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736, 0,
	0, 0, 0, 0, 979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 1727, 1554, 0, 1594,
	1652, 1755, 1486, 1639, 0, 1491, 1502, 1749, 1720, 1545,
	1546, 222, 0, 0, 0, 0, 0, 0, 0, 1597,
	1621, 1673, 1579, 386, 1658, 1668, 1686, 1571, 319, 237,
	0, 0, 0, 0, 0, 0, 3098, 0, 1540, 0,
	1636, 0, 0, 0, 1507, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 1514, 1484, 1542, 1675, 1485, 1482, 285, 1503,
	1688, 1718, 1580, 253, 0, 1724, 1578, 1577, 1662, 1508,
	1698, 1564, 261, 1506, 162, 1501, 1509, 1562, 296, 1672,
	1680, 0, 165, 263, 1695, 1536, 1553, 206, 0, 331,
	1648, 385, 0, 233, 1629, 330, 265, 378, 1663, 1726,
	384, 1565, 362, 392, 396, 229, 1605, 197, 352, 220,
	215, 1544, 1685, 1490, 238, 318, 210, 257, 1583, 1654,
	1537, 202, 1666, 1637, 1700, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 1696, 1679, 1702, 1530, 1510, 1521, 1511,
	1552, 1728, 247, 239, 1703, 1701, 1555, 305, 188, 1618,
	1611, 1598, 389, 0, 340, 339, 1568, 246, 1682, 0,
	0, 326, 0, 254, 170, 1707, 398, 184, 259, 369,
	0, 232, 295, 208, 1650, 306, 1550, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 1678, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 1734,
	271, 224, 228, 240, 251, 1649, 329, 359, 390, 1640,
	181, 173, 361, 383, 192, 341, 344, 397, 1674, 180,
	175, 1722, 1697, 1631, 1586, 1592, 1492, 0, 174, 1670,
	1541, 1557, 1529, 1644, 1528, 235, 1661, 381, 382, 207,
	399, 1504, 1742, 176, 1505, 1741, 292, 300, 291, 1745,
	377, 1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	1619, 0, 171, 0, 356, 1732, 1757, 360, 189, 1523,
	1689, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 1665, 1754, 304, 332, 196, 387,
	353, 221, 1519, 297, 1522, 1517, 1520, 1518, 1623, 1624,
	1737, 1738, 1739, 1677, 1512, 0, 1715, 1716, 0, 1610,
	1725, 1498, 0, 1693, 0, 0, 1657, 1752, 1570, 203,
	0, 1494, 1495, 1496, 0, 1600, 1601, 0, 0, 1711,
	1710, 1709, 1712, 0, 1746, 1744, 1747, 1513, 1534, 1556,
	1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	1628, 166, 177, 262, 1753, 325, 231, 1481, 1489, 1516,
	1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567,
	1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591,
	1595, 1596, 1612, 1626, 1627, 1634, 1635, 0, 1664, 1667,
	1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751,
	1756, 388, 213, 1608, 1633, 1671, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 1717, 1581, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 1566, 168, 1713, 1748, 1645, 1659, 1729, 1691,
	367, 1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499,
	1622, 301, 1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535,
	218, 1531, 1694, 1625, 1731, 1604, 1646, 1656, 217, 205,
	1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603, 0,
	1740, 264, 1705, 0, 391, 355, 284, 0, 0, 1599,
	1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647,
	1736, 0, 0, 0, 0, 0, 979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 1727, 1554,
	0, 1594, 1652, 1755, 1486, 1639, 0, 1491, 1502, 1749,
	1720, 1545, 1546, 222, 0, 0, 0, 0, 0, 0,
	0, 1597, 1621, 1673, 1579, 386, 1658, 1668, 1686, 1571,
	319, 237, 0, 0, 0, 0, 0, 0, 2568, 0,
	1540, 0, 1636, 0, 0, 0, 1507, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 1514, 1484, 1542, 1675, 1485, 1482,
	285, 1503, 1688, 1718, 1580, 253, 0, 1724, 1578, 1577,
	1662, 1508, 1698, 1564, 261, 1506, 162, 1501, 1509, 1562,
	296, 1672, 1680, 0, 165, 263, 1695, 1536, 1553, 206,
	0, 331, 1648, 385, 0, 233, 1629, 330, 265, 378,
	1663, 1726, 384, 1565, 362, 392, 396, 229, 1605, 197,
	352, 220, 215, 1544, 1685, 1490, 238, 318, 210, 257,
	1583, 1654, 1537, 202, 1666, 1637, 1700, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 1696, 1679, 1702, 1530, 1510,
	1521, 1511, 1552, 1728, 247, 239, 1703, 1701, 1555, 305,
	188, 1618, 1611, 1598, 389, 0, 340, 339, 1568, 246,
	1682, 0, 0, 326, 0, 254, 170, 1707, 398, 184,
	259, 369, 0, 232, 295, 208, 1650, 306, 1550, 164,
	322, 277, 279, 276, 280, 236, 0, 0, 1678, 324,
	342, 373, 186, 358, 0, 0, 0, 0, 333, 0,
	0, 1734, 271, 224, 228, 240, 251, 1649, 329, 359,
	390, 1640, 181, 173, 361, 383, 192, 341, 344, 397,
	1674, 180, 175, 1722, 1697, 1631, 1586, 1592, 1492, 0,
	174, 1670, 1541, 1557, 1529, 1644, 1528, 235, 1661, 381,
	382, 207, 399, 1504, 1742, 176, 1505, 1741, 292, 300,
	291, 1745, 377, 1723, 1632, 1617, 1615, 1497, 1721, 1630,
	1616, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 1619, 0, 171, 0, 356, 1732, 1757, 360,
	189, 1523, 1689, 372, 0, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 1665, 1754, 304, 332,
	196, 387, 353, 221, 1519, 297, 1522, 1517, 1520, 1518,
	1623, 1624, 1737, 1738, 1739, 1677, 1512, 0, 1715, 1716,
	0, 1610, 1725, 1498, 0, 1693, 0, 0, 1657, 1752,
	1570, 203, 0, 1494, 1495, 1496, 0, 1600, 1601, 0,
	0, 1711, 1710, 1709, 1712, 0, 1746, 1744, 1747, 1513,
	1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669,
	1543, 1602, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 1628, 166, 177, 262, 1753, 325, 231, 1481,
	1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558,
	1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589,
	1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635, 0,
	1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706,
	1743, 1751, 1756, 388, 213, 1608, 1633, 1671, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 0, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 1717, 1581, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 1566, 168, 1713, 1748, 1645, 1659,
	1729, 1691, 367, 1584, 1733, 1533, 1563, 1750, 1569, 1572,
	1653, 1499, 1622, 301, 1560, 1500, 1483, 1538, 1487, 1551,
	1488, 1535, 218, 1531, 1694, 1625, 1731, 1604, 1646, 1656,
	217, 205, 1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730,
	1603, 0, 1740, 264, 1705, 0, 391, 355, 284, 0,
	0, 1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735,
	1561, 1647, 1736, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	1727, 1554, 0, 1594, 1652, 1755, 1486, 1639, 0, 1491,
	1502, 1749, 1720, 1545, 1546, 222, 0, 0, 0, 0,
	0, 0, 0, 1597, 1621, 1673, 1579, 386, 1658, 1668,
	1686, 1571, 319, 237, 0, 0, 0, 0, 0, 0,
	2372, 0, 1540, 0, 1636, 0, 0, 0, 1507, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 1514, 1484, 1542, 1675,
	1485, 1482, 285, 1503, 1688, 1718, 1580, 253, 0, 1724,
	1578, 1577, 1662, 1508, 1698, 1564, 261, 1506, 162, 1501,
	1509, 1562, 296, 1672, 1680, 0, 165, 263, 1695, 1536,
	1553, 206, 0, 331, 1648, 385, 0, 233, 1629, 330,
	265, 378, 1663, 1726, 384, 1565, 362, 392, 396, 229,
	1605, 197, 352, 220, 215, 1544, 1685, 1490, 238, 318,
	210, 257, 1583, 1654, 1537, 202, 1666, 1637, 1700, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 1696, 1679, 1702,
	1530, 1510, 1521, 1511, 1552, 1728, 247, 239, 1703, 1701,
	1555, 305, 188, 1618, 1611, 1598, 389, 0, 340, 339,
	1568, 246, 1682, 0, 0, 326, 0, 254, 170, 1707,
	398, 184, 259, 369, 0, 232, 295, 208, 1650, 306,
	1550, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	1678, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 1734, 271, 224, 228, 240, 251, 1649,
	329, 359, 390, 1640, 181, 173, 361, 383, 192, 341,
	344, 397, 1674, 180, 175, 1722, 1697, 1631, 1586, 1592,
	1492, 0, 174, 1670, 1541, 1557, 1529, 1644, 1528, 235,
	1661, 381, 382, 207, 399, 1504, 1742, 176, 1505, 1741,
	292, 300, 291, 1745, 377, 1723, 1632, 1617, 1615, 1497,
	1721, 1630, 1616, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 1619, 0, 171, 0, 356, 1732,
	1757, 360, 189, 1523, 1689, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 1665, 1754,
	304, 332, 196, 387, 353, 221, 1519, 297, 1522, 1517,
	1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512, 0,
	1715, 1716, 0, 1610, 1725, 1498, 0, 1693, 0, 0,
	1657, 1752, 1570, 203, 0, 1494, 1495, 1496, 0, 1600,
	1601, 0, 0, 1711, 1710, 1709, 1712, 0, 1746, 1744,
	1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687,
	1660, 1669, 1543, 1602, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 1628, 166, 177, 262, 1753, 325,
	231, 1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539,
	1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587,
	1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634,
	1635, 0, 1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699,
	1704, 1706, 1743, 1751, 1756, 388, 213, 1608, 1633, 1671,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 1717, 1581, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 1566, 168, 1713, 1748,
	1645, 1659, 1729, 1691, 367, 1584, 1733, 1533, 1563, 1750,
	1569, 1572, 1653, 1499, 1622, 301, 1560, 1500, 1483, 1538,
	1487, 1551, 1488, 1535, 218, 1531, 1694, 1625, 1731, 1604,
	1646, 1656, 217, 205, 1614, 1613, 1719, 1549, 1548, 1651,
	1708, 1730, 1603, 0, 1740, 264, 1705, 0, 391, 355,
	284, 0, 0, 1599, 1714, 1620, 1683, 1582, 1655, 1515,
	1638, 1735, 1561, 1647, 1736, 0, 0, 0, 0, 0,
	979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 1727, 1554, 0, 1594, 1652, 1755, 1486, 1639,
	0, 1491, 1502, 1749, 1720, 1545, 1546, 222, 0, 0,
	0, 0, 0, 0, 0, 1597, 1621, 1673, 1579, 386,
	1658, 1668, 1686, 1571, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 1540, 0, 1636, 0, 0, 0,
	1507, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 1514, 1484,
	1542, 1675, 1485, 1482, 285, 1503, 1688, 1718, 1580, 253,
	0, 1724, 1578, 1577, 1662, 1508, 1698, 1564, 261, 1506,
	162, 1501, 1509, 1562, 296, 1672, 1680, 0, 165, 263,
	1695, 1536, 1553, 206, 0, 331, 1648, 385, 0, 233,
	1629, 330, 265, 378, 1663, 1726, 384, 1565, 362, 392,
	396, 229, 1605, 197, 352, 220, 215, 1544, 1685, 1490,
	238, 318, 210, 257, 1583, 1654, 1537, 202, 1666, 1637,
	1700, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 1696,
	1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728, 247, 239,
	1703, 1701, 1555, 305, 188, 1618, 1611, 1598, 389, 0,
	340, 339, 1568, 246, 1682, 0, 0, 326, 0, 254,
	170, 1707, 398, 184, 259, 369, 0, 232, 295, 208,
	1650, 306, 1550, 164, 322, 277, 279, 276, 280, 236,
	0, 0, 1678, 324, 342, 373, 186, 358, 0, 0,
	0, 0, 333, 0, 0, 1734, 271, 224, 228, 240,
	251, 1649, 329, 359, 390, 1640, 181, 173, 361, 383,
	192, 341, 344, 397, 1674, 180, 175, 1722, 1697, 1631,
	1586, 1592, 1492, 0, 174, 1670, 1541, 1557, 1529, 1644,
	1528, 235, 1661, 381, 382, 207, 399, 1504, 1742, 176,
	1505, 1741, 292, 300, 291, 1745, 377, 1723, 1632, 1617,
	1615, 1497, 1721, 1630, 1616, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 1619, 0, 171, 0,
	356, 1732, 1757, 360, 189, 1523, 1689, 372, 1960, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	1665, 1754, 304, 332, 196, 387, 353, 221, 1519, 297,
	1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677,
	1512, 0, 1715, 1716, 0, 1610, 1725, 1498, 0, 1693,
	0, 0, 1657, 1752, 1570, 203, 0, 1494, 1495, 1496,
	0, 1600, 1601, 0, 0, 1711, 1710, 1709, 1712, 0,
	1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641,
	1642, 1687, 1660, 1669, 1543, 1602, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 1628, 166, 177, 262,
	1753, 325, 231, 1481, 1489, 1516, 1524, 1525, 1526, 1527,
	1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576,
	1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626,
	1627, 1634, 1635, 0, 1664, 1667, 1676, 1681, 1684, 1690,
	1692, 1699, 1704, 1706, 1743, 1751, 1756, 388, 213, 1608,
	1633, 1671, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 0, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 1717, 1581, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 1566, 168,
	1713, 1748, 1645, 1659, 1729, 1691, 367, 1584, 1733, 1533,
	1563, 1750, 1569, 1572, 1653, 1499, 1622, 301, 1560, 1500,
	1483, 1538, 1487, 1551, 1488, 1535, 218, 1531, 1694, 1625,
	1731, 1604, 1646, 1656, 217, 205, 1614, 1613, 1719, 1549,
	1548, 1651, 1708, 1730, 1603, 0, 1740, 264, 1705, 0,
	391, 355, 284, 0, 0, 1599, 1714, 1620, 1683, 1582,
	1655, 1515, 1638, 1735, 1561, 1647, 1736, 0, 0, 0,
	0, 0, 979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 1727, 1554, 0, 1594, 1652, 1755,
	1486, 1639, 0, 1491, 1502, 1749, 1720, 1545, 1546, 222,
	0, 0, 0, 0, 0, 0, 0, 1597, 1621, 1673,
	1579, 386, 1658, 1668, 1686, 1571, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 0, 1636, 0,
	0, 0, 1507, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	1514, 1484, 1542, 1675, 1485, 1482, 285, 1503, 1688, 1718,
	1580, 253, 0, 1724, 1578, 1577, 1662, 1508, 1698, 1564,
	261, 1506, 162, 1501, 1509, 1562, 296, 1672, 1680, 0,
	165, 263, 1695, 1536, 1553, 206, 0, 331, 1648, 385,
	0, 233, 1629, 330, 265, 378, 1663, 1726, 384, 1565,
	362, 392, 396, 229, 1605, 197, 352, 220, 215, 1544,
	1685, 1490, 238, 318, 210, 257, 1583, 1654, 1537, 202,
	1666, 1637, 1700, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728,
	247, 239, 1703, 1701, 1555, 305, 188, 1618, 1611, 1598,
	389, 0, 340, 339, 1568, 246, 1682, 0, 0, 326,
	0, 254, 170, 1707, 398, 184, 259, 369, 0, 232,
	295, 208, 1650, 306, 1550, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 1678, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 1734, 271, 224,
	228, 240, 251, 1649, 329, 359, 390, 1640, 181, 173,
	361, 383, 192, 341, 344, 397, 1674, 180, 175, 1722,
	1697, 1631, 1586, 1592, 1492, 0, 174, 1670, 1541, 1557,
	1529, 1644, 1528, 235, 1661, 381, 382, 207, 399, 1504,
	1742, 176, 1505, 1741, 292, 300, 291, 1745, 377, 1723,
	1632, 1617, 1615, 1497, 1721, 1630, 1616, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 1619, 0,
	171, 0, 356, 1732, 1757, 360, 189, 1523, 1689, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 1665, 1754, 304, 332, 196, 387, 353, 221,
	1519, 297, 1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738,
	1739, 1677, 1512, 0, 1715, 1716, 0, 1610, 1725, 1498,
	0, 1693, 0, 0, 1657, 1752, 1570, 203, 0, 1494,
	1495, 1496, 0, 1600, 1601, 0, 0, 1711, 1710, 1709,
	1712, 0, 1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607,
	1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 1628, 166,
	177, 262, 1753, 325, 231, 1481, 1489, 1516, 1524, 1525,
	1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574,
	1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596,
	1612, 1626, 1627, 1634, 1635, 0, 1664, 1667, 1676, 1681,
	1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756, 388,
	213, 1608, 1633, 1671, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 1717,
	1581, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	1566, 168, 1713, 1748, 1645, 1659, 1729, 1691, 367, 1584,
	1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622, 301,
	1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535, 218, 1531,
	1694, 1625, 1731, 1604, 1646, 1656, 217, 205, 1614, 1613,
	1719, 1549, 1548, 1651, 1708, 1730, 1603, 0, 1740, 264,
	1705, 0, 391, 355, 284, 0, 0, 1599, 1714, 1620,
	1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736, 0,
	0, 0, 0, 0, 3481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 1727, 1554, 0, 1594,
	1652, 1755, 1486, 1639, 0, 1491, 1502, 1749, 1720, 1545,
	1546, 222, 0, 0, 0, 0, 0, 0, 0, 1597,
	1621, 1673, 1579, 386, 1658, 1668, 1686, 1571, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 1540, 0,
	1636, 0, 0, 0, 1507, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 1514, 1484, 1542, 1675, 1485, 1482, 285, 1503,
	1688, 1718, 1580, 253, 0, 1724, 1578, 1577, 1662, 1508,
	1698, 1564, 261, 1506, 162, 1501, 1509, 1562, 296, 1672,
	1680, 0, 165, 263, 1695, 1536, 1553, 206, 0, 331,
	1648, 385, 0, 233, 1629, 330, 265, 378, 1663, 1726,
	384, 1565, 362, 392, 396, 229, 1605, 197, 352, 220,
	215, 1544, 1685, 1490, 238, 318, 210, 257, 1583, 1654,
	1537, 202, 1666, 1637, 1700, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 1696, 1679, 1702, 1530, 1510, 1521, 3484,
	3485, 3486, 247, 239, 1703, 1701, 1555, 305, 188, 1618,
	1611, 1598, 389, 0, 340, 339, 1568, 246, 1682, 0,
	0, 326, 0, 254, 170, 1707, 398, 184, 259, 369,
	0, 232, 295, 208, 1650, 306, 1550, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 1678, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 1734,
	271, 224, 228, 240, 251, 1649, 329, 359, 390, 1640,
	181, 173, 361, 383, 192, 341, 344, 397, 1674, 180,
	175, 1722, 1697, 1631, 1586, 1592, 1492, 0, 174, 1670,
	1541, 1557, 1529, 1644, 1528, 235, 1661, 381, 382, 207,
	399, 1504, 1742, 176, 1505, 1741, 292, 300, 291, 1745,
	377, 1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	1619, 0, 171, 0, 356, 1732, 1757, 360, 189, 1523,
	1689, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 1665, 1754, 304, 332, 196, 387,
	353, 221, 1519, 297, 1522, 1517, 1520, 1518, 1623, 1624,
	1737, 1738, 1739, 1677, 1512, 0, 1715, 1716, 0, 1610,
	1725, 1498, 0, 1693, 0, 0, 1657, 1752, 1570, 203,
	0, 1494, 1495, 1496, 0, 1600, 1601, 0, 0, 1711,
	1710, 1709, 1712, 0, 1746, 1744, 1747, 1513, 1534, 1556,
	1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	1628, 166, 177, 262, 1753, 325, 231, 1481, 1489, 1516,
	1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567,
	1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591,
	1595, 1596, 1612, 1626, 1627, 1634, 1635, 0, 1664, 1667,
	1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751,
	1756, 388, 213, 1608, 1633, 1671, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 1717, 1581, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 1566, 168, 1713, 1748, 1645, 1659, 1729, 1691,
	367, 1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499,
	1622, 301, 1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535,
	218, 1531, 1694, 1625, 1731, 1604, 1646, 1656, 217, 205,
	1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603, 0,
	1740, 264, 1705, 0, 391, 355, 284, 0, 0, 1599,
	1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647,
	1736, 0, 0, 0, 0, 0, 2724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 1727, 1554,
	0, 1594, 1652, 1755, 1486, 1639, 0, 1491, 1502, 1749,
	1720, 1545, 1546, 222, 0, 0, 0, 0, 0, 0,
	0, 1597, 1621, 1673, 1579, 386, 1658, 1668, 1686, 1571,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	1540, 0, 1636, 0, 0, 0, 1507, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 1514, 1484, 1542, 1675, 1485, 1482,
	285, 1503, 1688, 1718, 1580, 253, 0, 1724, 1578, 1577,
	1662, 1508, 1698, 1564, 261, 1506, 162, 1501, 1509, 1562,
	296, 1672, 1680, 0, 165, 263, 1695, 1536, 1553, 206,
	0, 331, 1648, 385, 0, 233, 1629, 330, 265, 378,
	1663, 1726, 384, 1565, 362, 392, 396, 229, 1605, 197,
	352, 220, 215, 1544, 1685, 1490, 238, 318, 210, 257,
	1583, 1654, 1537, 202, 1666, 1637, 1700, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 1696, 1679, 1702, 1530, 1510,
	1521, 1511, 1552, 1728, 247, 239, 1703, 1701, 1555, 305,
	188, 1618, 1611, 1598, 389, 0, 340, 339, 1568, 246,
	1682, 0, 0, 326, 0, 254, 170, 1707, 398, 184,
	259, 369, 0, 232, 295, 208, 1650, 306, 1550, 164,
	322, 277, 279, 276, 280, 236, 0, 0, 1678, 324,
	342, 373, 186, 358, 0, 0, 0, 0, 333, 0,
	0, 1734, 271, 224, 228, 240, 251, 1649, 329, 359,
	390, 1640, 181, 173, 361, 383, 192, 341, 344, 397,
	1674, 180, 175, 1722, 1697, 1631, 1586, 1592, 1492, 0,
	174, 1670, 1541, 1557, 1529, 1644, 1528, 235, 1661, 381,
	382, 207, 399, 1504, 1742, 176, 1505, 1741, 292, 300,
	291, 1745, 377, 1723, 1632, 1617, 1615, 1497, 1721, 1630,
	1616, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 1619, 0, 171, 0, 356, 1732, 1757, 360,
	189, 1523, 1689, 372, 0, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 1665, 1754, 304, 332,
	196, 387, 353, 221, 1519, 297, 1522, 1517, 1520, 1518,
	1623, 1624, 1737, 1738, 1739, 1677, 1512, 0, 1715, 1716,
	0, 1610, 1725, 1498, 0, 1693, 0, 0, 1657, 1752,
	1570, 203, 0, 1494, 1495, 1496, 0, 1600, 1601, 0,
	0, 1711, 1710, 1709, 1712, 0, 1746, 1744, 1747, 1513,
	1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669,
	1543, 1602, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 1628, 166, 177, 262, 1753, 325, 231, 1481,
	1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558,
	1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589,
	1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635, 0,
	1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706,
	1743, 1751, 1756, 388, 213, 1608, 1633, 1671, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 0, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 1717, 1581, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 1566, 168, 1713, 1748, 1645, 1659,
	1729, 1691, 367, 1584, 1733, 1533, 1563, 1750, 1569, 1572,
	1653, 1499, 1622, 301, 1560, 1500, 1483, 1538, 1487, 1551,
	1488, 1535, 218, 1531, 1694, 1625, 1731, 1604, 1646, 1656,
	217, 205, 1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730,
	1603, 0, 1740, 264, 1705, 0, 391, 355, 284, 0,
	0, 1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735,
	1561, 1647, 1736, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	1727, 1554, 0, 1594, 1652, 1755, 1486, 1639, 0, 1491,
	1502, 1749, 1720, 1545, 1546, 222, 0, 0, 0, 0,
	0, 0, 0, 1597, 1621, 1673, 1579, 386, 1658, 1668,
	1686, 1571, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 1636, 0, 0, 0, 1507, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 1514, 1484, 1542, 1675,
	1485, 1482, 285, 1503, 1688, 1718, 1580, 253, 0, 1724,
	1578, 1577, 1662, 1508, 1698, 1564, 261, 1506, 162, 1501,
	1509, 1562, 296, 1672, 1680, 0, 165, 263, 1695, 1536,
	1553, 206, 0, 331, 1648, 385, 0, 233, 1629, 330,
	265, 378, 1663, 1726, 384, 1565, 362, 392, 396, 229,
	1605, 197, 352, 220, 215, 1544, 1685, 1490, 238, 318,
	210, 257, 1583, 1654, 1537, 202, 1666, 1637, 1700, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 1696, 1679, 1702,
	1530, 1510, 1521, 1511, 1552, 1728, 247, 239, 1703, 1701,
	1555, 305, 188, 1618, 1611, 1598, 389, 0, 340, 339,
	1568, 246, 1682, 0, 0, 326, 0, 254, 170, 1707,
	398, 184, 259, 369, 0, 232, 295, 208, 1650, 306,
	1550, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	1678, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 1734, 271, 224, 228, 240, 251, 1649,
	329, 359, 390, 1640, 181, 173, 361, 383, 192, 341,
	344, 397, 1674, 180, 175, 1722, 1697, 1631, 1586, 1592,
	1492, 0, 174, 1670, 1541, 1557, 1529, 1644, 1528, 235,
	1661, 381, 382, 207, 399, 1504, 1742, 176, 1505, 1741,
	292, 300, 291, 1745, 377, 1723, 1632, 1617, 1615, 1497,
	1721, 1630, 1616, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 1619, 0, 171, 0, 356, 1732,
	1757, 360, 189, 1523, 1689, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 1665, 1754,
	304, 332, 196, 387, 353, 221, 1519, 297, 1522, 1517,
	1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512, 0,
	1715, 1716, 0, 1610, 1725, 1498, 0, 1693, 0, 0,
	1657, 1752, 1570, 203, 0, 1494, 1495, 1496, 0, 1600,
	1601, 0, 0, 1711, 1710, 1709, 1712, 0, 1746, 1744,
	1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687,
	1660, 1669, 1543, 1602, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 1628, 166, 177, 262, 1753, 325,
	231, 1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539,
	1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587,
	1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634,
	1635, 0, 1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699,
	1704, 1706, 1743, 1751, 1756, 388, 213, 1608, 1633, 1671,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 1717, 1581, 163, 0, 0,
	169, 367, 0, 0, 0, 0, 1566, 168, 1713, 1748,
	1645, 1659, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 2081, 2085,
	0, 0, 264, 0, 983, 391, 355, 284, 986, 985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 979, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 2084, 253, 161, 0, 0,
	0, 2078, 0, 2079, 2080, 261, 987, 162, 0, 2076,
	2083, 296, 0, 0, 149, 165, 263, 0, 0, 0,
	206, 976, 331, 0, 385, 982, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 151, 340, 339, 0,
	246, 0, 152, 143, 326, 153, 254, 170, 0, 398,
	184, 259, 369, 981, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 147, 154, 0,
	324, 342, 373, 186, 358, 145, 146, 148, 156, 333,
	157, 158, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 150, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 160, 0,
	0, 0, 203, 138, 0, 0, 0, 139, 0, 0,
	140, 141, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 155, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 367, 0, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 301, 168, 0, 0, 0,
	1217, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 983, 391, 355,
	284, 986, 985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1218, 0, 1221, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 984, 0, 1213, 1214, 1212, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 0, 386,
	0, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 253,
	161, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 149, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 982, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 151,
	340, 339, 0, 246, 0, 152, 143, 326, 153, 254,
	170, 0, 398, 184, 259, 369, 981, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 0, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 160, 0, 0, 0, 203, 138, 0, 0, 0,
	139, 0, 0, 140, 141, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 367, 0, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 301, 168,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	983, 391, 355, 284, 986, 985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 979, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 253, 161, 0, 0, 0, 0, 0, 0,
	0, 261, 987, 162, 0, 977, 0, 296, 0, 0,
	149, 165, 263, 0, 0, 0, 206, 976, 331, 0,
	385, 982, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 151, 340, 339, 0, 246, 0, 152, 143,
	326, 153, 254, 170, 0, 398, 184, 259, 369, 981,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 0, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 160, 0, 0, 0, 203, 138,
	0, 0, 0, 139, 0, 0, 140, 141, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	367, 0, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 301, 168, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 217, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 983, 391, 355, 284, 986, 985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1218, 0, 1221, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 253, 161, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 162, 0, 0, 0,
	296, 0, 0, 149, 165, 263, 0, 0, 0, 206,
	1909, 331, 0, 385, 982, 233, 0, 330, 265, 378,
	0, 0, 384, 0, 362, 392, 396, 229, 0, 197,
	352, 220, 215, 0, 0, 0, 238, 318, 210, 257,
	0, 0, 0, 202, 0, 0, 0, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 239, 0, 0, 0, 305,
	188, 0, 0, 0, 389, 151, 340, 339, 0, 246,
	0, 152, 143, 326, 153, 254, 170, 0, 398, 184,
	259, 369, 981, 232, 295, 208, 0, 306, 0, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 0, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 0, 271, 224, 228, 240, 251, 0, 329, 359,
	390, 0, 181, 173, 361, 383, 192, 341, 344, 397,
	0, 180, 175, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 235, 0, 381,
	382, 207, 399, 0, 0, 176, 0, 0, 292, 300,
	291, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 0, 0, 171, 0, 356, 0, 0, 360,
	189, 0, 0, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 0, 0, 304, 332,
	196, 387, 353, 221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 160, 0, 0,
	0, 203, 138, 0, 0, 0, 139, 0, 0, 140,
	141, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 0, 166, 177, 262, 0, 325, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 213, 0, 0, 0, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 367, 0, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 301, 168, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 983, 391, 355, 284,
	986, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2838,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 0, 0, 984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 253, 161,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 149, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 982, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 151, 340,
	339, 0, 246, 0, 152, 143, 326, 153, 254, 170,
	0, 398, 184, 259, 369, 981, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 0, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	160, 0, 0, 0, 203, 138, 0, 0, 0, 139,
	0, 0, 140, 141, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 367, 0, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 301, 168, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 983,
	391, 355, 284, 986, 985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2833, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 253, 161, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 149,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	982, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 151, 340, 339, 0, 246, 0, 152, 143, 326,
	153, 254, 170, 0, 398, 184, 259, 369, 981, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 0, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 160, 0, 0, 0, 203, 138, 0,
	0, 0, 139, 0, 0, 140, 141, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 0,
	0, 163, 39, 367, 169, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2354, 264, 0, 0, 391, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 0, 0, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 253, 161,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 149, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 151, 340,
	339, 0, 246, 0, 152, 143, 326, 153, 254, 170,
	0, 398, 184, 259, 369, 135, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 0, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	160, 0, 0, 0, 203, 138, 0, 0, 0, 139,
	0, 0, 140, 141, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 518,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 367, 0, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 301, 168, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 83, 0, 0,
	0, 0, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 253, 161, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 149,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 151, 340, 339, 0, 246, 0, 152, 143, 326,
	153, 254, 170, 0, 398, 184, 259, 369, 135, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 0, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 160, 0, 0, 0, 203, 138, 0,
	0, 0, 139, 0, 0, 140, 141, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3243, 2044, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	83, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 161, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 149, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 151, 340, 339, 0, 246, 0,
	152, 143, 326, 153, 254, 170, 0, 398, 184, 259,
	369, 135, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 0, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 150, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 160, 0, 0, 0,
	203, 138, 0, 0, 0, 139, 0, 0, 140, 141,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 285, 0, 0, 0, 0, 253, 161, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 149, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 443, 440, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 151, 340, 339,
	0, 246, 0, 152, 143, 326, 153, 254, 170, 0,
	398, 184, 259, 369, 135, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	0, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 160,
	0, 0, 0, 203, 138, 0, 0, 0, 139, 0,
	0, 140, 141, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 367, 0, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 301, 168, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 0,
	253, 161, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 149, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 2148,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	151, 340, 339, 0, 246, 0, 152, 143, 326, 153,
	254, 170, 0, 398, 184, 259, 369, 135, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 147, 154, 0, 324, 342, 373, 186, 358, 145,
	146, 148, 156, 333, 157, 158, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 150,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 160, 0, 0, 0, 203, 138, 0, 0,
	0, 139, 0, 0, 140, 141, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 155, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 367, 0,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 301,
	168, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 391, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 253, 161, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 149, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 0, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 151, 340, 339, 0, 246, 0, 152,
	143, 326, 153, 254, 170, 0, 398, 184, 259, 369,
	135, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 0, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 160, 0, 0, 0, 203,
	138, 0, 0, 0, 139, 0, 0, 140, 141, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 367, 0, 163, 0, 1348, 169, 0, 0, 0,
	0, 0, 301, 168, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 253, 161, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 149, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 151, 340, 339, 0,
	246, 0, 152, 143, 326, 153, 254, 170, 0, 398,
	184, 259, 369, 135, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 147, 154, 0,
	324, 342, 373, 186, 358, 145, 146, 148, 156, 333,
	157, 158, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 150, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 160, 0,
	0, 0, 203, 138, 0, 0, 0, 139, 0, 0,
	140, 141, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 155, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 367, 0, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 301, 168, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 391, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 130, 0, 253,
	161, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 149, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 0, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 151,
	340, 339, 0, 246, 0, 152, 143, 326, 153, 254,
	170, 0, 398, 184, 259, 369, 135, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 0, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 160, 0, 0, 0, 203, 138, 0, 0, 0,
	139, 0, 0, 140, 141, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 367, 0, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 301, 168,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 253, 161, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	149, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 151, 340, 339, 0, 246, 0, 152, 143,
	326, 153, 254, 170, 0, 398, 184, 259, 369, 135,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 0, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 160, 0, 0, 0, 203, 138,
	0, 0, 0, 139, 0, 0, 140, 141, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	0, 0, 163, 0, 0, 169, 483, 367, 477, 488,
	471, 0, 168, 0, 0, 0, 0, 0, 301, 0,
	0, 494, 0, 0, 0, 0, 0, 218, 0, 0,
	478, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 469, 472, 0, 0, 0, 285, 0, 0,
	0, 476, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 480, 0,
	0, 165, 263, 484, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 487, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 0, 340, 339, 0, 246, 0, 0, 0,
	326, 0, 254, 170, 0, 398, 184, 259, 369, 0,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 0, 497, 342, 373, 186,
	358, 473, 474, 475, 481, 482, 485, 486, 489, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 479, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	0, 0, 163, 0, 0, 169, 483, 367, 477, 488,
	471, 0, 168, 0, 0, 0, 0, 0, 301, 0,
	0, 463, 0, 0, 0, 0, 0, 218, 0, 0,
	478, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 469, 472, 0, 0, 0, 285, 0, 0,
	0, 476, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 480, 0,
	0, 165, 263, 484, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 487, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 0, 340, 339, 0, 246, 0, 0, 0,
	326, 0, 254, 170, 0, 398, 184, 259, 369, 0,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 0, 466, 342, 373, 186,
	358, 473, 474, 475, 481, 482, 485, 486, 489, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 203, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 979, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 1233, 1232, 1242, 1243, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1234, 0, 0, 1244, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 479, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	0, 285, 163, 0, 0, 169, 253, 0, 0, 0,
	0, 0, 168, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 0, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 0, 340, 339, 0,
	246, 0, 0, 0, 326, 0, 254, 170, 0, 398,
	184, 259, 369, 0, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 0,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 367, 0, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 301, 168, 0, 0, 0,
	2359, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 391, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2361, 2363, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	2357, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 253,
	0, 0, 2362, 0, 0, 0, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 0, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 0, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 0,
	340, 339, 0, 246, 0, 0, 0, 326, 0, 254,
	170, 0, 398, 184, 259, 369, 0, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	0, 0, 0, 324, 342, 373, 186, 358, 0, 0,
	0, 0, 333, 0, 0, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 0, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 138, 0, 0, 0,
	139, 0, 0, 140, 141, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 0, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 367, 0, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 301, 168,
	0, 0, 0, 2359, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2361, 2363, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 253, 0, 0, 2362, 0, 0, 0, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	0, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 0, 340, 339, 0, 246, 0, 0, 0,
	326, 0, 254, 170, 0, 398, 184, 259, 369, 0,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 0, 324, 342, 373, 186,
	358, 0, 0, 0, 0, 333, 0, 0, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 138,
	0, 0, 0, 139, 0, 0, 140, 141, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 0, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	367, 0, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 301, 168, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 217, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 391, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 162, 0, 0, 0,
	296, 0, 0, 0, 165, 263, 0, 0, 0, 206,
	0, 331, 0, 385, 0, 233, 0, 330, 265, 378,
	0, 0, 384, 0, 362, 392, 396, 229, 0, 197,
	352, 220, 215, 0, 0, 0, 238, 318, 210, 257,
	0, 0, 0, 202, 0, 0, 0, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 239, 0, 0, 0, 305,
	188, 0, 0, 0, 389, 0, 340, 339, 0, 246,
	0, 0, 0, 326, 0, 254, 170, 0, 398, 184,
	259, 369, 0, 232, 295, 208, 0, 306, 0, 164,
	322, 277, 279, 276, 280, 236, 0, 0, 0, 324,
	342, 373, 186, 358, 0, 0, 0, 0, 333, 0,
	0, 0, 271, 224, 228, 240, 251, 0, 329, 359,
	390, 0, 181, 173, 361, 383, 192, 341, 344, 397,
	0, 180, 175, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 235, 0, 381,
	382, 207, 399, 0, 0, 176, 0, 0, 292, 300,
	291, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 0, 0, 171, 0, 356, 0, 0, 360,
	189, 0, 0, 372, 0, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 0, 0, 304, 332,
	196, 387, 353, 221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 138, 0, 0, 0, 139, 0, 0, 140,
	141, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 0, 166, 177, 262, 0, 325, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 213, 0, 0, 503, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 0, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 367, 0, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 301, 168, 0, 0, 0, 3601,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 0, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 138, 0, 0, 0, 139,
	0, 0, 140, 141, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 367, 0, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 301, 168, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 2668, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 0,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 0, 340, 339, 0, 246, 0, 0, 0, 326,
	0, 254, 170, 0, 398, 184, 259, 369, 0, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 0, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 138, 0,
	0, 0, 139, 0, 0, 140, 141, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	203, 138, 0, 218, 0, 139, 0, 0, 140, 141,
	0, 217, 205, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 979,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 0, 285, 163, 0, 0, 169, 253, 0,
	0, 0, 0, 0, 168, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 0, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 138, 0, 0, 0, 139,
	0, 0, 140, 141, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 367, 0, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 301, 168, 0,
	3557, 0, 0, 0, 0, 0, 218, 3555, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 0,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 0, 340, 339, 0, 246, 0, 3556, 0, 326,
	0, 254, 170, 0, 398, 184, 259, 369, 0, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 0, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 203, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 217, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 391, 355, 284, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 979, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2483, 386, 0, 0, 0, 0,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 0,
	285, 163, 0, 0, 169, 253, 0, 0, 0, 0,
	0, 168, 0, 0, 261, 0, 162, 0, 0, 0,
	296, 0, 0, 0, 165, 263, 0, 0, 0, 206,
	0, 331, 0, 385, 0, 233, 0, 330, 265, 378,
	0, 0, 384, 0, 362, 392, 396, 229, 0, 197,
	352, 220, 215, 0, 0, 0, 238, 318, 210, 257,
	2484, 2485, 0, 202, 0, 0, 0, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 239, 0, 0, 0, 305,
	188, 0, 0, 0, 389, 0, 340, 339, 0, 246,
	0, 0, 0, 326, 0, 254, 170, 0, 398, 184,
	259, 369, 0, 232, 295, 208, 0, 306, 0, 164,
	322, 277, 279, 276, 280, 236, 0, 0, 0, 324,
	342, 373, 186, 358, 0, 0, 0, 0, 333, 0,
	0, 0, 271, 224, 228, 240, 251, 0, 329, 359,
	390, 0, 181, 173, 361, 383, 192, 341, 344, 397,
	0, 180, 175, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 235, 0, 381,
	382, 207, 399, 0, 0, 176, 0, 0, 292, 300,
	291, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 0, 0, 171, 0, 356, 0, 0, 360,
	189, 0, 0, 372, 0, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 0, 0, 304, 332,
	196, 387, 353, 221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 0, 166, 177, 262, 0, 325, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 213, 0, 0, 0, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 0, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 367, 0, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 301, 168, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 0, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 367, 0, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 301, 168, 0,
	0, 0, 0, 0, 0, 0, 218, 1364, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 979, 0, 1363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 0,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 0, 340, 339, 0, 246, 0, 0, 0, 326,
	0, 254, 170, 0, 398, 184, 259, 369, 0, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 0, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2824, 0, 0, 0, 0, 2826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 0, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 0, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 203, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 979, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 2809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 0, 285, 163, 0, 0,
	169, 253, 0, 0, 0, 0, 0, 168, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 0,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 0, 340, 339, 0, 246, 0, 0, 0, 326,
	0, 254, 170, 0, 398, 184, 259, 369, 0, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 0, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	83, 0, 0, 0, 0, 979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	203, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 979,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 2195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 0, 285, 163, 0, 0, 169, 253, 0,
	0, 0, 0, 0, 168, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 0, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 203, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 2237, 2238, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 979, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 0, 285, 163, 0,
	0, 169, 253, 0, 0, 0, 0, 0, 168, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	0, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 0, 340, 339, 0, 246, 0, 0, 0,
	326, 0, 254, 170, 0, 398, 184, 259, 369, 0,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 0, 324, 342, 373, 186,
	358, 0, 0, 0, 0, 333, 0, 0, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 203, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 979, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 0, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	0, 285, 163, 0, 0, 169, 253, 0, 0, 0,
	0, 0, 168, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 0, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 0, 340, 339, 0,
	246, 0, 0, 0, 326, 0, 254, 170, 0, 398,
	184, 259, 369, 0, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 0,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 203, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 2826, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 0, 285, 163, 0, 0, 169,
	253, 0, 0, 0, 0, 0, 168, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 0, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	0, 340, 339, 0, 246, 0, 0, 0, 326, 0,
	254, 170, 0, 398, 184, 259, 369, 0, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 0, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 203, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 136, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 0, 285,
	163, 0, 0, 169, 253, 0, 0, 0, 0, 0,
	168, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	203, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 453,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 0, 285, 163, 0, 0, 169, 253, 0,
	0, 0, 0, 0, 168, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 0, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 203, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 1029, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 0, 285, 163, 0,
	0, 169, 253, 0, 0, 0, 0, 0, 168, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	0, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 0, 340, 339, 0, 246, 0, 0, 0,
	326, 0, 254, 170, 0, 398, 184, 259, 369, 0,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 0, 324, 342, 373, 186,
	358, 0, 0, 0, 0, 333, 0, 0, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 203, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 1019, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 0, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	0, 285, 163, 0, 0, 169, 253, 0, 0, 0,
	0, 0, 168, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 0, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 0, 340, 339, 0,
	246, 0, 0, 0, 326, 0, 254, 170, 0, 398,
	184, 259, 369, 0, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 0,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 203, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 403, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 0, 285, 163, 0, 0, 169,
	253, 0, 0, 0, 0, 0, 168, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 0, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	0, 340, 339, 0, 246, 0, 0, 0, 326, 0,
	254, 170, 0, 398, 184, 259, 369, 0, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 0, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 203, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 401, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 0, 285,
	163, 0, 0, 169, 253, 0, 0, 0, 0, 0,
	168, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	63, 0, 0, 0, 0, 0, 79, 0, 0, 42,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 83, 3663,
	0, 0, 0, 3417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 0, 0, 163, 0, 39, 169, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	63, 44, 75, 48, 47, 50, 79, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 3412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 78, 77, 0, 0, 0, 0,
	49, 0, 0, 0, 0, 0, 0, 0, 83, 0,
	0, 0, 0, 3417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3411, 0, 0, 0, 0,
	3592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 62, 0, 3413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3420, 3414, 3415, 3416, 3418,
	3419, 0, 0, 0, 0, 70, 0, 71, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 0, 79, 0,
	0, 42, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 75, 48, 47, 50, 0, 0, 0, 0,
	3662, 76, 0, 58, 59, 65, 3412, 66, 0, 0,
	83, 0, 0, 0, 0, 3417, 0, 0, 0, 0,
	0, 0, 0, 54, 78, 77, 0, 0, 0, 0,
	49, 0, 0, 0, 0, 0, 0, 3411, 0, 0,
	0, 0, 3588, 0, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	0, 0, 0, 0, 79, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 62, 0, 3413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3420, 3414, 3415, 3416, 3418,
	3419, 0, 0, 0, 0, 70, 83, 71, 0, 0,
	0, 3417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 75, 48, 47, 50, 0, 0,
	0, 0, 72, 3411, 0, 0, 0, 0, 3412, 0,
	0, 0, 52, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 78, 77, 0, 0,
	3421, 76, 49, 58, 59, 65, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 53, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 61, 62, 0, 3413, 0, 44,
	75, 48, 47, 50, 0, 0, 0, 3420, 3414, 3415,
	3416, 3418, 3419, 0, 3412, 0, 0, 70, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 78, 77, 0, 0, 0, 0, 49, 0,
	0, 0, 0, 0, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3421, 76, 0, 58, 59, 65, 0, 66,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	61, 62, 0, 3413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3420, 3414, 3415, 3416, 3418, 3419, 0,
	0, 0, 0, 70, 0, 71, 0, 51, 53, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3421, 76,
	0, 58, 59, 65, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	53, 0, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 53, 0, 0, 0,
	0, 74,
}

var yyPact = [...]int{
	1724, -1000, -446, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2171, -1000,
	-1000, 294, -1000, 1250, 874, -1000, -1000, 342, 156, 37157,
	820, 52732, 52288, -281, 1502, 50512, 58, -1000, 58, 219,
	34665, 608, 658, 50956, 2058, 1617, 60, -45, -58, 144,
	39040, 38410, 37, -1000, 41353, 81, 71, -1000, -1000, -1000,
	-1000, 2238, 263, -1000, -1000, 2148, 2169, 1979, -1000, 8523,
	-1000, -1000, -1000, -1000, -1000, 22647, -1000, 2203, 37780, 30300,
	-1000, 805, 795, -179, 750, 750, 336, 750, 750, 816,
	-1000, 352, 1098, -1000, -1000, -1000, -1000, 1096, 37780, 46602,
	751, 49624, 751, 751, 751, 751, 751, 751, 751, 51844,
	37780, -1000, 883, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	37780, 2225, 2224, 1918, 1916, 51400, 1616, 2091, 1149, 145,
	1149, -1000, -1000, 1127, -1000, 385, 380, 377, 359, 134,
	1156, 2145, -1000, 1875, 2148, 2148, -1000, -1000, -1000, -1000,
	-1000, -1000, 939, -1000, -1000, 1169, 1169, 347, 792, 264,
	455, 263, 2117, 1086, 2087, 2086, 1420, 2085, 1388, 2084,
	1910, -1000, 882, -1000, -1000, -22, -1000, 1615, 37780, -1000,
	-1000, 1394, 1386, 375, 1818, 887, 1947, -1000, -1000, 371,
	855, 1900, 514, 1900, 1900, 1900, 1900, 1900, -78, 1900,
	1900, 1900, 103, 1900, 183, 1900, 1900, 1900, 1900, 1900,
	1657, -1000, -1000, -1000, 544, 1797, 1842, 1946, 1300, -1000,
	-1000, -1000, 1923, 43222, 1857, -1000, 1875, -1000, -1000, -1000,
	1554, 809, -1000, -113, 1923, 2130, 1663, -1000, 41353, 2088,
	1276, 14943, 2019, -1000, -1000, 1196, 2223, -1000, 29677, 881,
	-1000, 14943, 3667, 1875, 1875, -1000, 859, 944, -1000, 842,
	876, -1000, -1000, 14301, 14301, 14301, 14301, 14301, 14301, 14301,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1875, 880, 879, 1875,
	1875, 1875, 1875, 1875, -1000, 13017, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 14943, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 759, 759, 36534, 1873, -140, 22005,
	-1000, -1000, -1000, -1000, 20721, 45979, 1080, -1000, -1000, -1000,
	-1000, 2082, -1000, -1000, 877, 876, 859, 852, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2171, -1000, -1000, 1759,
	732, -1000, 473, 473, 473, 473, 473, 837, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1908, 49624, 37780,
	335, 1614, 1151, 1613, 50956, 50956, -1000, 279, 46602, 46602,
	750, 332, 46602, 302, 1872, 790, 1871, 789, 1636, 37780,
	2109, 1945, 37780, 1612, 1611, 50956, 50956, 46602, 46602, -1000,
	-1000, -1000, 28425, 1866, -1000, 1501, 1500, 14943, 14943, -1000,
	-1000, -1000, 1149, -1000, 4417, 14943, 750, 750, 37780, 37780,
	37780, 37780, -1000, 37780, -1000, -1000, 1149, 1149, 1149, 1149,
	1102, 2222, 1102, -1000, 1102, -1000, -1000, 14943, -1000, 14301,
	45356, 966, -1000, -1000, 50512, 515, 515, 515, -1000, 1607,
	345, -1000, -1000, -1000, -1000, -1000, 264, -1000, -1000, 2065,
	1606, 1388, 1388, -1000, 1499, 1388, 1848, -1000, 1061, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1388, -1000, 13659, 49624, -426, -1000, -1000, 1865, -1000,
	273, -1000, -1000, 695, 1944, 695, 208, 46602, 46602, 46602,
	-1000, 1900, 49624, -1000, 1900, 1900, 1900, -80, 1900, 1900,
	-1000, -1000, 1900, -1000, -1000, -1000, -1000, -1000, 1900, -1000,
	-1000, -1000, 1900, 1900, -1000, 1900, 1900, -1000, -1000, -1000,
	-1000, -1000, 46602, 695, 226, 1864, 695, 46602, 46602, -1000,
	92, 91, 90, 89, -1000, -1000, -1000, -1000, 88, 87,
	-1000, -1000, -1000, 1857, 43222, 2125, 17511, 2097, -1000, 2097,
	-1000, -1000, -1000, 172, -1000, 37780, -98, -1000, -1000, 263,
	-1000, -1000, -1000, -1000, 1923, 1232, 2232, 997, 1834, -1000,
	-1000, 1855, -1000, 1145, 875, 1364, 1998, -1000, -1000, -1000,
	37780, -1000, 14943, 14943, 14943, 1307, -1000, 30923, -1000, -1000,
	-1000, -1000, -1000, -1000, 18795, 1007, 14301, 1352, 1117, 14301,
	14301, 14301, 14301, 14301, 14301, 14301, 14301, 14301, 14301, 14301,
	14301, 14301, 14301, 14301, 1358, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1605, -1000, 263, 26499, 9807, 26499, 1781,
	1781, 49624, 933, 933, 933, 933, 933, 933, 39484, 2122,
	25857, 26499, 2122, 2122, 2122, 2122, 2122, 1663, 1757, 1189,
	41353, 13017, 9807, 9807, 9807, 1663, 14943, 14943, 9807, 9807,
	12375, 11733, 16227, 9807, 9807, 2122, 1133, 1189, 20721, 9807,
	-1000, -1000, 11091, -1000, -1000, -1000, -1000, -1000, 1663, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49624, 49624, 9807,
	9807, 9807, 9807, 1663, 1663, 9807, 9807, 9807, 9807, 9807,
	1663, 1663, 1663, 1663, 9807, 9807, 9807, 9807, 9807, 9807,
	9807, 9807, 9807, 9807, 9807, 9807, 35911, 34042, 37780, 1814,
	1813, -1000, 872, 21363, 1843, -1000, -108, -105, -140, -1000,
	-1000, 931, -1000, -1000, -1000, 10449, -1000, 19437, 2148, 1979,
	-1000, 29054, -1000, -1000, -32, -1000, -1000, -1000, 1890, -1000,
	1896, 324, 27, 1896, 1896, 1896, 1896, 1896, -1000, -1000,
	-1000, -1000, 14, -1000, -1000, -1000, -1000, -1000, 1905, 1904,
	-1000, 1890, 1890, 1890, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1898, 328, 1895, 1895, 1895, 1895, 1895,
	-1000, -1000, -1000, -1000, 697, 697, 697, -1000, 14943, 1913,
	2124, 773, 332, 2097, 2108, 2097, 675, -1000, 869, 1901,
	350, 1820, -1000, 220, 1665, 35288, -1000, -1000, -1000, -1000,
	-1000, 37780, 37780, 46602, 46602, 46602, 824, -1000, 37780, 1853,
	-1000, -1000, -1000, -1000, -1000, 1830, -1000, 1665, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37780, -1000,
	-1000, 1849, 1189, 1849, -1000, -1000, 1490, 1189, 1604, 1602,
	2117, -1000, -1000, -1000, 1120, -1000, -1000, -1000, -1000, 1149,
	50512, 50512, 37780, 2117, 1149, 1189, 1576, 1915, 1875, 1663,
	-1000, -1000, 55, -1000, 43, -1000, -1000, -1000, 1601, -1000,
	14301, -1000, 1848, 1848, -1000, 1848, 1388, 1781, 1848, -1000,
	1753, -1000, 1210, 1488, 37780, -1000, 43222, -30, -1000, -160,
	48736, -1000, -1000, -1000, 695, 48736, -1000, 103, 163, -1000,
	788, -1000, 1747, -1000, -1000, -1000, -1000, 1900, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48736, 141, 218,
	48736, 1830, 2220, -1000, -1000, -1000, -1000, 2144, -1000, -1000,
	1875, 1717, -1000, 868, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2081, 1017, 1017, 1017, 313, -1000,
	-1000, 1663, -1000, 49180, -1000, 1986, 1276, 1276, 14943, -1000,
	-1000, -1000, 19437, 2134, -1000, 2008, 2007, 1957, -1000, -1000,
	1007, 1197, 1083, -1000, -1000, 1310, -1000, -1000, -1000, -1000,
	-1000, 867, 1875, -1000, -1000, -1000, -1000, -1000, 4005, -1000,
	-1000, -1000, -1000, 1352, 14301, 14301, 14301, 1576, 4005, 4261,
	1539, 2396, 933, 1092, 1092, 955, 955, 955, 955, 955,
	1077, 1077, -1000, -1000, -1000, 1663, -1000, 1695, -1000, -1000,
	1189, 866, -1000, -1000, -1000, -1000, -1000, -1000, 9807, -1000,
	-1000, -1000, 9807, 9807, 9807, 9807, 9807, -1000, 14943, -1000,
	1663, 1695, 1695, 1695, -1000, 1173, 1249, 1641, 1695, 1009,
	2219, 1695, 1000, 2216, 1695, 2296, 14301, 14301, 14301, 1695,
	1695, 9807, 1193, -1000, 14943, 1663, 1695, -1000, 2418, 1847,
	1846, 1695, 1663, 1845, 1695, 1695, -198, -198, 1663, 1695,
	1663, 1695, 1695, -198, -198, -198, -198, 1695, 1695, 1695,
	1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 992,
	37780, -1000, 1817, 409, -1000, -1000, -1000, 2123, 32796, -1000,
	-1000, 40107, -1000, 1875, 1875, 992, 1778, 34042, -1000, -1000,
	34042, 50512, 25215, -1000, 20721, -140, -114, -1000, -1000, 1843,
	-1000, -1000, 1385, -1000, -1000, 1189, -1000, 865, 2088, 2122,
	3903, 732, -1000, -1000, -1000, 1899, 495, -1000, 2027, 946,
	946, 945, 1543, 2026, -1000, -1000, 167, -38, -1000, -1000,
	-1000, 1380, -1000, 199, -1000, 1896, 1896, 320, 1896, -1000,
	-1000, -1000, -1000, -1000, -1000, 1487, 1487, -1000, -1000, -1000,
	-1000, 1377, -1000, 1898, -1000, 1375, -1000, -1000, -1000, -1000,
	167, 167, 167, 167, -1000, -1000, -1000, 1347, 1941, 49624,
	-1000, 37780, -1000, -1000, -1000, 2191, -1000, -1000, 49624, 44733,
	-1000, -1000, 109, 46602, 211, 407, 268, -1000, -1000, 787,
	-1000, 782, -1000, -1000, -1000, -1000, -1000, -1000, 37780, 46602,
	-1000, 14943, -1000, -1000, -1000, -1000, 2178, 1600, 1565, -1000,
	-1000, -1000, 1102, 1149, -1000, -1000, 14301, 46602, -1000, 381,
	-1000, -1000, -1000, 4005, -1000, -1000, -1000, 992, 808, -1000,
	-1000, -68, -1000, -1000, 781, 864, 863, 48736, 779, -1000,
	119, 46602, -1000, 49624, -1000, 2215, 2209, 139, 2204, 46602,
	-1000, 76, -1000, 276, -1000, 17511, 26499, 1017, 1023, -1000,
	1011, 1486, 1841, -1000, 884, 803, 962, 717, 717, -1000,
	1017, 717, 2069, 2067, 991, -1000, 1835, 1485, 1476, -1000,
	1984, -1000, -1000, -1000, 37780, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 24573, 9807, -1000, 1576, 4005, 4173,
	-1000, 14301, -1000, 9807, -1000, 18153, 1663, 1695, 1695, 1695,
	1695, 1695, 1189, -1000, -1000, -1000, -1000, 589, 1358, 589,
	-1000, 1358, -1000, 14301, 14301, -1000, 14301, 14301, -1000, -1000,
	14301, 4199, 4155, 4051, -286, -1000, 1821, 1024, -1000, 14943,
	1218, -1000, -1000, -1000, 14301, 14301, -1000, -1000, -1000, -1000,
	-1000, 48292, -1000, -198, -198, -198, -198, -198, -1000, -1000,
	-1000, -1000, -198, -198, -198, -198, -198, -198, -198, -198,
	-198, -198, -198, -198, 221, 1875, -1000, 20079, 34042, 34042,
	34042, 34042, 34042, -1000, 1976, 1973, -1000, 1966, 1962, 1959,
	397, 43222, 1745, 1663, 362, 32796, -1000, 1875, -1000, 42599,
	856, 804, 801, 798, 9807, 14301, 2178, 34042, 1825, 1825,
	-1000, 862, -1000, -1000, -1000, -127, -111, -1000, -1000, -1000,
	26499, -1000, -1000, -1000, 4016, 2168, 1017, 1017, 1017, 1017,
	305, 2080, 1017, 1017, 1017, 1017, 1017, -243, -246, 1017,
	1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017,
	70, 1017, 1017, 1017, 1017, 23289, 1017, -1000, 43666, 738,
	2036, 707, 1543, 1543, 1543, -1000, 1543, -1000, -1000, -1000,
	1897, -1000, 1241, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1875, -438, 1374, 2079, 1546, 2230, -1000, 2025, -1000,
	2022, 2021, 1471, -1000, -1000, 1772, 1769, 1748, -1000, -1000,
	-1000, 1896, -1000, 1742, -1000, 1727, 1833, -1000, 1725, 115,
	37780, -1000, -1000, 2119, 1938, -1000, -1000, -1000, -1000, 1696,
	1832, -1000, 473, 49624, 49624, 49624, -293, 184, -1000, 46602,
	178, 220, 504, 1564, 37780, 46602, -1000, -1000, 1189, -1000,
	14943, -1000, -1000, 2117, -1000, 4005, 1665, -1000, -1000, 4,
	37780, -1000, 46602, 951, 47669, 765, 46602, 133, 162, -1000,
	46602, 46602, 2201, 46602, 1830, 1470, -1000, -1000, 1006, -1000,
	-1000, -1000, -1000, -1000, 313, 47225, 1543, 780, -1000, -1000,
	731, -1000, 217, 1562, 32169, 31546, 49624, 2020, 2016, 1561,
	37780, 49624, -1000, -1000, 50068, 1560, 14943, 49624, -1000, -1000,
	49624, 49624, -1000, -1000, -1000, -1000, 1254, 8523, -1000, -1000,
	1663, -1000, 14301, 4005, -1000, -1000, 860, -1000, -198, -198,
	-198, -198, -198, 1663, 1890, 1890, -1000, 1890, 1895, -1000,
	1890, 45, 1890, 33, 1663, 1663, 1663, 4032, 3963, 2606,
	2474, 2418, 14301, 14301, 14301, 1875, -191, -1000, 1189, 14943,
	3948, 3904, -1000, -1000, 1555, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1937, 20079, 1875, 16869, -1000, 49624, 1828,
	-1000, 1057, 928, 1027, 1020, 859, 852, 409, 1894, 1936,
	838, -1000, -1000, -1000, -1000, 1970, -1000, 1969, 1960, -1000,
	-1000, -1000, 1879, -1000, -1000, 1831, 1875, 49624, 14301, 856,
	-1000, 1875, 1875, 1875, 1663, 3821, 2171, 1825, -1000, -1000,
	947, -1000, -1000, -1000, -1000, 152, 832, 832, 832, 1358,
	1017, 2077, 1017, 1017, 1373, 27783, 1465, 1464, 1463, 1017,
	1017, 1372, 1462, 27783, 1461, 726, 832, 832, 832, 1371,
	1460, 370, -1000, 1458, 1399, 1398, 832, -1000, -262, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 832, 1721, -1000,
	1890, 1890, 2015, -1000, 946, -1000, -1000, -1000, -1000, -1000,
	49624, -1000, 14301, 2114, -1000, 1005, -1000, 1781, -1000, 1875,
	1875, 1875, 1875, 14301, -1000, -1000, -93, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1457, -1000, 1369, -1000,
	1368, -1000, -1000, -381, 1889, 263, -1000, 37780, 153, 44733,
	-1000, 473, 473, 473, 150, 159, -1000, 1166, -1000, -1000,
	-1000, 1440, 1439, 1437, 1665, 222, 1161, 186, -1000, 2115,
	-1000, -1000, 1189, 1149, -55, -1000, -1000, 162, -1000, -1000,
	-1000, 46602, 162, -1000, -1000, 213, 1830, 1830, 46602, 1830,
	-1000, -1000, -1000, -1000, 50068, 701, 473, 473, 1913, 946,
	2014, 707, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1553, -1000, 932, -1000, 764, 701,
	50068, 1189, 986, 1188, -1000, 2200, -1000, -1000, -1000, 4005,
	23931, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 327, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14301, 14301,
	14301, 14301, -1000, 2418, 2418, 2418, 14301, 1663, 1426, 1189,
	14301, 14301, 967, -1000, -1000, 2102, 1766, 1819, -1000, -1000,
	9165, 1663, 2006, 1717, -1000, 41353, 1715, -1000, 2171, 20079,
	14943, 14943, 14943, 14943, -1000, -1000, 14943, 1888, -1000, 14943,
	-1000, -1000, -1000, -1000, -1000, 49624, 361, -1000, 14943, 1715,
	1648, -1000, 49624, 49624, 49624, -1000, 1425, 2148, -1000, -272,
	-1000, 306, 282, 209, -1000, -1000, -1000, -1000, -1000, 1358,
	1017, 27783, 1358, -1000, -1000, -1000, -1000, -1000, 1424, 1422,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -261, -1000, 911, 43666, 2101,
	2101, 1543, 1543, 1713, -1000, 2418, 1875, -1000, -1000, -1000,
	-1000, 7881, -1000, 7881, -1000, 7881, 7881, 2418, -1000, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	-1000, 1692, 1679, -1000, 43666, -1000, -1000, 2141, -1000, 153,
	-1000, 1419, 331, 317, -1000, 312, 309, 295, 283, 277,
	-1000, -1000, -1000, -1000, 428, 150, -1000, -88, 1366, 1035,
	2074, 159, -1000, 1359, 1349, 1348, 1345, 212, -1000, -1000,
	-1000, -1000, 265, 220, -1000, 502, 1416, -1000, 2051, 2048,
	2113, 162, 2113, 130, 1830, 1675, -1000, -1000, 1545, -1000,
	-1000, 1885, 1543, 1543, -1000, 1542, -1000, -1000, 49624, -1000,
	701, 2096, 2095, 1875, 2178, 33419, 8523, -1000, -1000, -1000,
	-1000, 2418, 2418, 2418, 2418, -1000, -1000, -1000, 188, -1000,
	-1000, 2418, 2418, 2171, 2166, 2013, -1000, 1875, -1000, -1000,
	1875, 230, -1000, 49624, 2148, -1000, 1189, 1189, 1189, 1189,
	1189, 49624, 1189, 1710, 1875, 40730, -1000, 43222, 1645, 1645,
	1645, -90, -1000, -277, 1342, 27783, 1875, 27783, 1875, 1875,
	485, -1000, 1358, -1000, -1000, -1000, -1000, -1000, -1000, 911,
	-1000, 27783, 1017, 1415, -1000, -1000, -1000, -1000, -1000, 469,
	49624, -441, 14301, 1695, 1695, 1695, -1000, 1695, -1000, -1000,
	-1000, 1689, -1000, 263, 366, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2056, 2055, 341, -1000, 1414, 1413, -1000, 772,
	1370, 885, -204, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 434, 1540, -1000, 182, -1000, -1000,
	753, 2033, 2043, 2165, -1000, 46602, 2113, -1000, -1000, -1000,
	-1000, 167, 167, 43666, 1913, 1880, -1000, -1000, -1000, 14301,
	-1000, 958, 2176, -1000, 1829, -1000, -1000, -1000, -1000, -1000,
	1663, 180, -309, -1000, -1000, 988, 14943, 2229, -1000, 1819,
	1875, -1000, 263, -1000, -1000, 1687, -1000, -1000, -1000, 856,
	-1000, -1000, -1000, 1875, 1875, 2159, -1000, 1663, 49624, 1663,
	49624, 1664, 49624, 1016, -1000, -1000, -1000, 1313, -1000, 37780,
	-1000, -1000, -1000, -1000, 2418, -1000, -1000, -1000, -1000, 911,
	-1000, 357, 53588, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1293, -1000, -1000, 1309, 422, 174, -1000, 2112, -1000,
	1879, 1275, 2048, 2158, 2046, 2023, -1000, 1412, -294, -1000,
	1682, 1878, 43666, 4005, 1652, -1000, 49624, 2174, 2157, -1000,
	-1000, 1983, -290, -312, 1663, 267, 267, 1826, 20079, 1819,
	1663, -1000, -1000, 26499, 958, -351, -1000, 1645, -1000, 1645,
	1663, 1663, 1645, 1271, -1000, 1877, -441, -1000, 911, -1000,
	349, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 14943, 14943, 27141, 1538, 1533, 53588, 1547, 1532, 1519,
	2032, 53588, 151, -1000, 149, -1000, -1000, -1000, 1406, -1000,
	1049, -1000, 1405, -1000, 2156, 2151, -1000, 201, 911, 43666,
	1656, -1000, 958, 2005, -201, 14943, 14943, -1000, 1982, -1000,
	-1000, -1000, 216, -1000, 980, 340, 976, -1000, 1781, -1000,
	1808, -1000, 1654, -1000, 473, 1652, -279, -1000, -1000, -1000,
	-1000, -1000, 1875, 49624, -1000, -1000, 1518, 1516, -1000, 1238,
	1204, 253, 247, 388, -1000, -1000, -1000, -1000, -1000, -1000,
	-447, -1000, 239, -1000, -1000, 1513, -1000, 2199, -448, -1000,
	-1000, -1000, -1000, -1000, -1000, 1402, 1401, 44289, -1000, 1650,
	911, -1000, 393, -1000, 49624, -1000, 1189, 1799, -1000, 1189,
	-299, 1150, -1000, -1000, -1000, -1000, -1000, 49624, 1663, 26499,
	238, -1000, -1000, 1246, 49624, 1647, -1000, -1000, -1000, 1288,
	-1000, 14943, 53588, 2137, 2136, 2135, 4, 26499, 53492, 53588,
	1183, -1000, 53360, -1000, -1000, -1000, -1000, 122, 1665, 911,
	-1000, 391, 1798, -1000, 2111, 14943, -310, 216, -1000, 41976,
	-1000, -1000, 1353, -236, -1000, 1645, 1934, 197, 1138, 53588,
	-1000, 1178, -449, 529, 263, 851, 931, -1000, 237, -1000,
	-450, 1511, -1000, 46602, -1000, 1875, 49624, 1875, -1000, -314,
	-1000, 43222, -1000, -1000, 1255, -1000, 1933, 1932, 2198, -1000,
	-1000, -1000, -1000, -1000, -1000, 53588, 41353, -1000, -451, 53588,
	4909, -1000, -1000, -1000, 53200, -1000, -1000, -1000, -1000, 244,
	-1000, -1000, 2093, -1000, 7299, 1793, -1000, 1665, 15585, -1000,
	-1000, -1000, -1000, 465, -1000, -1000, 2228, -1000, 2192, 810,
	810, -1000, -453, -1000, 7064, -454, 749, 53588, 1094, -1000,
	14943, -1000, 6651, 851, -1000, 14301, 235, 1510, 2418, 1663,
	-1000, 1929, 14301, 1920, -1000, -1000, -1000, 477, 1303, -1000,
	6230, 1128, 53588, -1000, -455, 746, 53588, -1000, 1158, -1000,
	-1000, 4005, 1504, -1000, -1000, -1000, -326, 1680, -330, -1000,
	-1000, -1000, -1000, -1000, 5719, -1000, -456, 53588, -1000, -1000,
	-332, -1000, 745, 5329, -458, -1000, -1000, 743, 53588, -1000,
}

var yyPgo = [...]int{
	0, 2699, 2692, 18, 188, 2690, 261, 2689, 2688, 34,
	2686, 30, 24, 22, 37, 2685, 2319, 2313, 2310, 2308,
	2305, 2684, 7, 2681, 2680, 2301, 2678, 2676, 2298, 2670,
	2669, 2668, 2666, 2665, 2664, 2290, 2284, 2281, 2663, 2662,
	2660, 2279, 2277, 2274, 14, 2659, 33, 2658, 2, 2656,
	148, 168, 2654, 3, 2653, 2651, 11, 2650, 2649, 2272,
	2647, 2645, 2644, 2640, 106, 2639, 2270, 2266, 2638, 2264,
	2262, 2260, 2258, 2255, 169, 2635, 2253, 2246, 2244, 2633,
	2024, 178, 288, 176, 187, 2630, 2628, 2627, 294, 2626,
	149, 2624, 2623, 287, 122, 2622, 258, 114, 63, 113,
	394, 2620, 17, 71, 295, 2619, 5, 2618, 125, 2617,
	119, 2616, 2615, 161, 2610, 140, 144, 104, 2609, 2608,
	162, 2592, 2591, 2589, 112, 2588, 2587, 182, 110, 2586,
	2585, 135, 2584, 59, 179, 50, 68, 2583, 109, 2580,
	2579, 2578, 43, 170, 2577, 107, 143, 2576, 2575, 97,
	2574, 2572, 102, 2568, 2567, 2566, 138, 55, 2565, 2564,
	58, 2563, 57, 64, 2562, 62, 2561, 137, 2560, 2559,
	2557, 2554, 2553, 67, 2552, 61, 2550, 139, 154, 1116,
	2535, 2534, 9, 15, 2533, 47, 29, 8, 52, 39,
	77, 60, 136, 128, 100, 2531, 54, 48, 130, 98,
	2528, 108, 87, 42, 2514, 150, 2510, 82, 159, 141,
	142, 156, 2508, 2507, 2505, 184, 2504, 131, 91, 2501,
	94, 1239, 177, 2499, 2498, 105, 2497, 2495, 2494, 2492,
	2491, 90, 175, 2490, 185, 183, 186, 86, 2482, 831,
	4136, 4771, 172, 4169, 99, 155, 2481, 51, 2478, 2477,
	2474, 3604, 116, 21, 78, 181, 2473, 115, 49, 96,
	2466, 2465, 2456, 2453, 2452, 2451, 2450, 2449, 120, 118,
	2448, 2447, 2445, 2444, 28, 20, 27, 12, 2443, 165,
	163, 153, 2441, 166, 40, 2440, 2436, 134, 127, 2434,
	2433, 2431, 2430, 133, 79, 151, 32, 2428, 123, 121,
	124, 2427, 103, 2414, 2413, 146, 411, 2412, 2410, 2409,
	2408, 111, 157, 2406, 2405, 2402, 41, 2399, 2398, 2397,
	2396, 2394, 76, 46, 36, 81, 26, 2392, 2391, 93,
	89, 44, 35, 2387, 6, 4, 10, 2386, 2385, 2383,
	2379, 2378, 2375, 2372, 95, 2371, 2367, 70, 2362, 2361,
	2359, 45, 2345, 2338, 2337, 147, 129, 53, 164, 174,
	16, 2334, 2333, 13, 2332, 132, 2331, 66, 2330, 65,
	2329, 2328, 72, 2327, 2326, 69, 2325, 2323, 167, 1691,
	339, 2322, 145, 126, 56, 92, 2317, 75, 180, 2315,
	0, 1876, 152, 2303, 738, 2292, 2286, 2249,
}

var yyR1 = [...]int{
	0, 389, 389, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 79,
	3, 3, 9, 10, 4, 4, 5, 5, 106, 106,
	6, 105, 105, 105, 201, 201, 201, 201, 200, 200,
	107, 107, 104, 104, 113, 7, 7, 8, 8, 11,
	11, 87, 87, 12, 13, 13, 13, 13, 392, 392,
	122, 122, 120, 120, 121, 121, 198, 198, 14, 14,
	14, 205, 205, 210, 210, 210, 213, 213, 213, 213,
	187, 188, 189, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 361, 361, 370, 370, 370,
	371, 371, 369, 369, 369, 369, 369, 373, 373, 374,
	374, 372, 372, 372, 372, 376, 376, 377, 377, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 364, 364, 364, 41, 41, 41, 41,
	41, 42, 42, 42, 42, 42, 42, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 379, 379,
	380, 380, 381, 381, 382, 382, 382, 382, 383, 383,
	383, 383, 383, 384, 384, 384, 384, 384, 384, 384,
	385, 385, 386, 386, 2, 342, 342, 343, 343, 344,
	344, 344, 344, 345, 345, 346, 346, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 26, 236, 236,
	233, 233, 233, 234, 234, 235, 235, 235, 363, 363,
	363, 357, 357, 357, 359, 359, 358, 358, 358, 360,
	360, 365, 365, 365, 365, 365, 367, 367, 367, 367,
	367, 367, 368, 368, 368, 366, 366, 57, 57, 58,
	58, 58, 176, 176, 176, 15, 15, 15, 15, 15,
	21, 23, 23, 45, 45, 46, 24, 24, 24, 24,
	47, 47, 48, 27, 27, 27, 27, 27, 27, 27,
	55, 55, 55, 54, 54, 53, 53, 53, 53, 53,
	53, 29, 30, 31, 393, 393, 393, 49, 49, 32,
	32, 32, 33, 34, 25, 25, 25, 25, 56, 56,
	51, 51, 50, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 28, 28, 28, 28, 28,
	28, 20, 341, 341, 341, 44, 44, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 62, 62, 307, 308,
	308, 308, 308, 308, 308, 308, 308, 294, 294, 295,
	295, 295, 295, 295, 284, 284, 284, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 258, 258, 258, 258, 264, 264, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 263, 263, 263,
	263, 263, 263, 263, 263, 265, 265, 265, 265, 265,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 267, 267, 267, 267, 267,
	267, 267, 267, 293, 293, 269, 269, 268, 268, 268,
	287, 287, 288, 288, 288, 285, 285, 285, 286, 286,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 273, 289, 274, 274, 275, 275, 276, 276,
	277, 277, 278, 278, 283, 283, 282, 282, 282, 282,
	282, 282, 279, 279, 279, 279, 280, 280, 281, 292,
	292, 292, 292, 292, 270, 43, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 328, 328,
	227, 227, 228, 228, 297, 297, 326, 326, 325, 325,
	324, 324, 324, 306, 306, 321, 321, 321, 321, 321,
	321, 321, 321, 301, 301, 301, 300, 300, 302, 302,
	305, 305, 323, 323, 322, 322, 298, 298, 298, 329,
	329, 329, 329, 329, 299, 299, 299, 299, 299, 330,
	303, 303, 304, 304, 304, 335, 336, 334, 334, 334,
	334, 334, 139, 139, 139, 310, 310, 310, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 312, 312,
	312, 312, 312, 313, 313, 313, 313, 313, 313, 387,
	387, 387, 314, 314, 314, 315, 315, 315, 315, 315,
	316, 316, 316, 316, 317, 317, 318, 318, 319, 319,
	320, 320, 339, 339, 338, 338, 59, 59, 61, 61,
	60, 65, 65, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 175, 175, 175, 232, 232,
	333, 331, 331, 332, 332, 17, 17, 63, 63, 362,
	362, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	337, 337, 337, 19, 19, 66, 69, 69, 388, 388,
	70, 70, 70, 70, 71, 71, 71, 71, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 101, 219, 219, 218, 218, 217, 217,
	217, 220, 220, 220, 220, 256, 256, 256, 68, 68,
	68, 80, 80, 75, 75, 78, 78, 78, 81, 81,
	82, 82, 83, 83, 76, 77, 35, 36, 36, 36,
	36, 37, 73, 73, 73, 74, 74, 74, 74, 93,
	93, 395, 395, 395, 72, 396, 84, 85, 85, 86,
	86, 86, 223, 223, 90, 90, 90, 88, 88, 88,
	89, 89, 95, 95, 99, 99, 99, 99, 98, 98,
	98, 98, 178, 178, 183, 248, 248, 159, 159, 179,
	179, 184, 184, 184, 185, 185, 186, 186, 186, 186,
	186, 181, 181, 180, 180, 182, 147, 147, 246, 246,
	246, 246, 245, 245, 245, 245, 245, 245, 103, 103,
	108, 108, 110, 110, 110, 110, 110, 110, 114, 161,
	161, 132, 132, 133, 133, 133, 133, 133, 145, 145,
	197, 197, 196, 196, 199, 199, 109, 111, 111, 111,
	111, 117, 117, 118, 118, 119, 119, 231, 231, 253,
	253, 253, 123, 123, 123, 125, 124, 124, 124, 124,
	124, 124, 126, 126, 112, 112, 309, 309, 296, 260,
	260, 261, 397, 397, 397, 397, 127, 127, 129, 130,
	130, 128, 128, 128, 128, 128, 134, 134, 131, 135,
	135, 135, 135, 136, 136, 100, 100, 100, 100, 100,
	100, 100, 100, 216, 216, 138, 138, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 155, 155, 155,
	155, 155, 155, 140, 140, 140, 140, 140, 140, 140,
	94, 94, 156, 156, 156, 116, 115, 115, 97, 97,
	96, 96, 157, 157, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	150, 150, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 394, 394, 152, 151, 151, 151, 151,
	151, 151, 91, 91, 91, 91, 91, 254, 254, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 168, 168, 92, 92, 166, 166,
	167, 169, 169, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 142, 142, 142,
	142, 142, 142, 142, 142, 144, 144, 144, 170, 170,
	158, 158, 102, 171, 171, 172, 173, 173, 174, 174,
	177, 190, 190, 190, 191, 191, 191, 191, 146, 146,
	192, 192, 192, 141, 141, 141, 141, 141, 141, 141,
	195, 195, 194, 194, 193, 193, 193, 193, 193, 193,
	202, 202, 160, 160, 163, 163, 162, 164, 203, 203,
	207, 207, 207, 207, 204, 204, 208, 208, 208, 208,
	211, 211, 212, 212, 212, 209, 209, 209, 206, 206,
	206, 250, 250, 250, 214, 214, 224, 224, 221, 221,
	222, 222, 215, 215, 271, 271, 271, 230, 230, 229,
	229, 229, 225, 225, 225, 226, 226, 247, 247, 243,
	243, 249, 249, 244, 244, 251, 251, 252, 252, 340,
	340, 290, 290, 350, 350, 291, 291, 351, 351, 353,
	353, 348, 348, 349, 349, 352, 352, 38, 354, 354,
	355, 355, 356, 356, 356, 356, 39, 40, 40, 40,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 242, 242, 242, 242, 242, 242, 240, 240,
	240, 240, 240, 390, 391,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	5, 7, 1, 5, 1, 3, 1, 3, 2, 1,
	13, 0, 2, 2, 0, 2, 3, 3, 1, 3,
	0, 2, 1, 3, 4, 1, 3, 1, 3, 8,
	9, 1, 1, 10, 9, 8, 7, 7, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	0, 0, 0, 2, 3, 3, 11, 9, 11, 5,
	5, 16, 12, 9, 4, 0, 3, 0, 2, 2,
	1, 3, 1, 1, 2, 2, 2, 0, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 2, 3,
	3, 5, 3, 3, 4, 5, 4, 4, 2, 2,
	2, 2, 2, 0, 2, 2, 9, 10, 9, 5,
	7, 7, 7, 7, 8, 4, 6, 2, 3, 2,
	3, 3, 3, 4, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 2, 2, 2, 3, 3,
	2, 3, 3, 2, 2, 2, 2, 2, 1, 3,
	0, 3, 1, 3, 0, 1, 1, 1, 1, 3,
	1, 3, 3, 0, 2, 5, 5, 5, 7, 5,
	0, 3, 0, 3, 4, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 4, 2, 3,
	3, 3, 3, 0, 3, 0, 3, 3, 1, 1,
	1, 3, 2, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 5, 4, 6, 4, 3, 3, 6,
	5, 5, 4, 3, 5, 1, 3, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	4, 5, 8, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 5, 5, 5, 6, 7, 5, 7,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 2, 2, 5, 0, 1, 2, 1, 3, 5,
	7, 8, 2, 2, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 5, 5, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 1, 1, 0, 2, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 3, 3, 2, 2, 3, 2, 3, 4,
	2, 2, 1, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 4, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 3, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	2, 3, 2, 3, 5, 3, 5, 3, 5, 4,
	5, 4, 3, 1, 0, 1, 3, 3, 0, 1,
	2, 2, 0, 1, 0, 1, 1, 1, 1, 2,
	2, 2, 5, 5, 4, 4, 4, 4, 4, 2,
	1, 2, 1, 2, 2, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 0, 3,
	1, 1, 0, 1, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 0, 1, 3, 5, 3, 3, 5,
	3, 2, 2, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 1, 10,
	11, 11, 12, 12, 3, 3, 3, 2, 1, 5,
	1, 1, 0, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 0, 2, 3, 3, 3,
	3, 3, 4, 4, 5, 3, 3, 4, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 2, 2, 4, 4, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 5, 8, 1, 4, 5, 4, 5,
	5, 5, 5, 8, 0, 1, 0, 2, 0, 4,
	0, 2, 0, 2, 0, 2, 1, 1, 4, 3,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 4, 5, 1, 2, 2, 4, 3, 6,
	5, 3, 9, 2, 2, 0, 1, 2, 0, 1,
	7, 1, 3, 8, 8, 3, 3, 3, 5, 3,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 4, 4, 1, 3,
	2, 2, 4, 4, 3, 3, 3, 3, 3, 4,
	3, 5, 5, 5, 4, 4, 4, 3, 2, 2,
	6, 2, 4, 4, 4, 5, 8, 6, 3, 5,
	4, 2, 4, 3, 2, 4, 5, 6, 2, 6,
	6, 3, 3, 3, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 3, 2, 0, 1, 1, 2, 4,
	1, 0, 1, 2, 1, 2, 4, 4, 0, 1,
	0, 3, 0, 2, 4, 4, 2, 3, 4, 4,
	5, 3, 3, 4, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 1, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 2, 6, 0, 1, 0, 3, 0,
	1, 0, 2, 2, 4, 1, 2, 2, 2, 2,
	2, 0, 2, 1, 3, 3, 1, 3, 0, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 1, 1, 2, 2,
	4, 2, 6, 1, 4, 6, 3, 2, 0, 3,
	0, 3, 1, 3, 1, 3, 4, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 2, 2, 2, 12, 11, 1, 3, 3, 4,
	3, 0, 0, 3, 4, 3, 1, 3, 3, 2,
	1, 1, 3, 1, 1, 1, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 4, 6, 6,
	4, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	1, 3, 1, 0, 2, 1, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 4, 1, 3, 5, 4, 6,
	0, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 3, 1, 1, 0,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 0, 4, 0, 1, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 3, 3, 1, 3,
	2, 4, 1, 2, 1, 2, 2, 2, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -389, -1, -3, -10, -11, -12, -13, -14, -16,
	-59, -17, -18, -19, -66, -69, -70, -71, -67, -68,
	-75, -76, -77, -73, -72, -25, -28, -20, -79, -35,
	-36, -37, -38, -39, -40, -41, -42, -43, -5, 6,
	7, -107, 29, -62, 181, -61, -60, 184, 183, 220,
	185, 527, 332, 528, 213, 64, 350, -78, 353, 354,
	-395, 272, 273, 20, 37, 355, 357, 30, 31, 235,
	295, 297, 322, -4, 533, 182, 351, 215, 214, 26,
	-6, -7, -390, 68, 647, -173, 15, -84, -396, -84,
	-87, 9, 10, 8, 452, -84, -307, -231, 109, 68,
	23, -226, -236, 89, 443, 189, -234, 291, 293, -224,
	-225, -233, 245, 255, 44, 200, 199, 256, 190, 291,
	190, 191, 193, 443, 189, 228, 227, 291, 293, 527,
	190, -128, -251, -240, -241, 309, 73, -239, 469, 473,
	476, 477, 482, 299, 82, 331, 332, 323, 333, 210,
	421, 292, 298, 301, 324, 614, 334, 336, 337, 463,
	464, 193, 203, 632, 316, 211, 530, 256, 642, 635,
	303, 411, 500, 350, 367, 359, 382, 531, 585, 267,
	358, 349, 428, 501, 306, 260, 329, 586, 287, 417,
	423, 270, 353, 521, 519, 502, 437, 236, 587, 264,
	266, 265, 250, 468, 271, 36, 216, 378, 312, 528,
	245, 588, 504, 581, 503, 239, 516, 35, 27, 518,
	238, 440, 100, 589, 340, 425, 505, 399, 341, 234,
	590, 535, 310, 222, 424, 374, 322, 118, 243, 282,
	342, 591, 400, 404, 592, 429, 296, 281, 523, 593,
	594, 343, 595, 192, 302, 506, 596, 246, 431, 307,
	398, 201, 532, 212, 48, 225, 432, 402, 522, 408,
	597, 339, 598, 599, 600, 601, 320, 318, 507, 319,
	321, 257, 262, 508, 53, 187, 406, 405, 407, 263,
	427, 387, 385, 602, 603, 311, 207, 442, 604, 605,
	386, 18, 606, 607, 435, 286, 314, 608, 609, 610,
	509, 524, 499, 611, 612, 426, 401, 403, 244, 117,
	527, 613, 317, 422, 326, 534, 300, 520, 615, 345,
	224, 218, 436, 335, 616, 617, 618, 619, 620, 294,
	293, 354, 327, 510, 355, 268, 621, 622, 511, 623,
	624, 254, 237, 439, 430, 52, 413, 625, 330, 346,
	416, 351, 231, 512, 513, 514, 515, 7, 261, 308,
	525, 526, 420, 328, 269, 255, 258, 389, 226, 626,
	627, 376, 377, 352, 229, 220, 112, 438, 580, 291,
	347, 51, 232, 628, 629, 259, 233, 356, 305, 379,
	190, 73, -239, 73, -239, 527, 134, 383, 428, 181,
	418, 419, 425, -301, 426, 227, 230, -256, 190, -219,
	417, 296, 317, 473, 233, 234, 191, 192, 32, 430,
	429, 421, -251, -80, 356, -80, -80, 194, 356, -93,
	222, 185, -128, 221, -56, 73, 274, -56, 29, 73,
	-134, -243, -251, 73, -239, 36, 73, 355, 420, 420,
	76, 534, 236, 21, -379, -360, 326, -378, -358, 182,
	181, 10, 183, 331, 332, 333, 191, 8, 30, 614,
	208, 334, 335, 6, 213, 336, 337, 228, 9, 338,
	-363, 75, 73, -239, 21, -379, -360, 326, -228, -227,
	348, 408, -106, 584, -104, -113, -253, -251, -240, 75,
	443, -215, 195, 352, -86, 5, -9, -3, 533, -191,
	17, 16, -90, 54, 55, -85, -98, 125, -100, -251,
	-137, 92, -143, 28, 24, -142, 309, 221, -138, -165,
	-240, -164, -116, 134, -255, 123, 124, 131, 93, 177,
	-150, -148, -149, -151, -153, -154, 75, 74, 83, 76,
	77, 78, 79, 84, 85, 86, -243, -241, -238, 469,
	473, 476, 477, 482, -162, -390, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 58, 59,
	467, 189, 453, 454, 380, 8, 455, 456, 457, 529,
	210, 461, 95, 47, 569, 441, 451, 450, 449, 447,
	448, 444, 446, 445, 463, 464, 196, 443, 129, 452,
	486, 487, 488, 489, 490, 491, 492, 493, 495, 496,
	494, 470, 471, 472, 474, 475, 478, 479, 480, 481,
	483, 484, 485, 536, 186, 182, 185, 91, 23, 25,
	537, 242, 94, 365, 394, 460, 16, 20, 204, 188,
	383, 202, 133, 198, 205, 276, 278, 181, 62, 538,
	277, 418, 539, 540, 541, 542, 373, 371, 275, 543,
	10, 26, 214, 249, 544, 369, 183, 240, 98, 99,
	545, 41, 40, 315, 279, 215, 285, 370, 546, 547,
	19, 65, 206, 11, 200, 230, 641, 548, 295, 13,
	116, 14, 549, 550, 551, 552, 195, 111, 191, 631,
	60, 247, 553, 363, 554, 555, 556, 557, 558, 364,
	88, 559, 560, 108, 290, 56, 498, 32, 235, 582,
	458, 289, 561, 38, 37, 393, 397, 392, 288, 409,
	109, 17, 30, 562, 563, 223, 396, 362, 391, 583,
	564, 565, 252, 63, 348, 372, 645, 33, 66, 219,
	344, 313, 42, 89, 15, 248, 61, 34, 465, 113,
	646, 375, 197, 227, 567, 433, 251, 568, 114, 368,
	584, 208, 110, 357, 184, 325, 273, 209, 570, 297,
	571, 241, 115, 419, 572, 573, 462, 29, 213, 272,
	361, 199, 574, 253, 284, 274, 283, 575, 576, 304,
	43, 643, 630, 190, 39, 97, 395, 360, 390, 194,
	459, 228, 280, 5, 44, 31, 414, 9, 338, 64,
	67, 384, 381, 577, 388, 644, 12, 578, 466, 533,
	434, 90, 579, 415, -84, -84, -84, -204, 352, -211,
	-208, 429, 430, -209, -212, -206, -165, 408, 611, 612,
	428, 383, 427, -243, -251, -240, 309, 221, 134, 470,
	471, 472, 95, 380, 453, 486, 444, 446, 441, 445,
	443, 28, 487, 24, 86, 488, 467, 196, 8, 177,
	474, 475, 489, 490, 491, 58, 447, 448, 529, 129,
	92, 492, 493, 84, 495, 496, 569, 452, 59, 494,
	189, 480, 479, 478, 481, 455, 456, 85, 449, 450,
	451, 47, 484, 483, 485, -2, -6, 6, -128, -308,
	-295, -299, -243, -240, -241, -242, 217, 205, -330, 73,
	-239, 309, 221, 50, 87, 55, 54, 202, 191, 193,
	452, -222, 196, -222, 228, 227, -235, 253, -222, -222,
	190, -234, 101, 101, -63, -128, -362, -357, -363, -221,
	196, -243, -221, -221, -221, -221, -221, -221, -221, 73,
	-239, -128, 178, -120, -128, 11, 11, 67, 67, 73,
	-239, 73, 29, -220, 109, 12, 443, 189, 190, 227,
	228, 193, -220, -303, 11, 111, 231, 231, 231, 232,
	231, -218, 420, 422, 229, 423, 424, 12, -101, 109,
	19, -390, -191, -191, 126, -82, 91, -82, 73, 355,
	194, -74, -3, -13, -11, -12, -93, -9, -145, 23,
	101, 29, 29, 75, 51, 29, -51, -50, -52, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 29, -341, 68, 178, -290, 408, 73, -354, -355,
	-128, 76, 76, 66, 317, 66, 69, 194, 69, 66,
	-380, 327, 68, -380, 293, 327, 328, 255, 291, 193,
	-380, -380, 293, -380, -380, -380, -380, -380, 420, -380,
	-380, -380, 329, 330, -380, 418, 193, -380, -380, -380,
	-380, -380, 71, 66, 69, 317, 66, 11, 66, -327,
	134, 340, 341, 342, 343, 339, 317, 344, 345, 346,
	231, 347, -4, -104, 69, -195, -390, 73, -283, -282,
	-279, -280, -281, -278, 28, 190, 433, -8, -6, -390,
	21, 22, -391, 70, -106, -192, 19, 30, -146, 76,
	79, -174, -177, -100, -251, 50, -88, 21, 22, 81,
	11, -246, 91, 89, 90, 108, -245, 23, 73, -239,
	-240, 75, -241, -242, 178, -100, -140, 111, 92, 109,
	110, 94, 120, 119, 130, 123, 124, 125, 126, 127,
	128, 129, 121, 122, 133, 101, 102, 103, 104, 105,
	106, 107, -216, -390, -116, -390, 178, -390, 178, 179,
	180, 178, -143, -143, -143, -143, -143, -143, -143, -390,
	178, 178, -390, -390, -390, -390, -390, -9, -157, -100,
	533, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -168, -100, -390, -390,
	-394, -152, -390, -394, -152, -394, -152, -394, -390, -394,
	-152, -394, -152, -394, -394, -152, -394, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -215, -215, 11, -120,
	-121, -131, -251, 69, -205, -210, 431, 433, 352, -209,
	-209, -250, -243, 75, 28, 101, 29, 178, -173, -84,
	70, 69, -299, -258, -264, -266, -265, -267, -262, -263,
	380, 383, 387, 385, 381, 386, 134, 384, 389, 390,
	391, 392, 393, 394, 395, 396, 397, 398, 399, 29,
	216, 376, 377, 378, 379, 400, 401, 402, 403, 404,
	405, 406, 407, 359, 382, 531, 360, 361, 362, 363,
	364, 365, 367, 368, 369, 370, 371, 372, 373, 374,
	-258, -258, -258, -258, 73, 231, -240, -330, 68, -243,
	-128, -236, -234, 73, 92, 73, -127, -243, -251, -134,
	254, -366, -365, -357, -360, -222, -235, -357, 259, 257,
	258, 69, 194, 69, 194, 71, -120, 24, 66, -122,
	-128, 73, 73, -127, -134, -359, -357, -360, -252, -251,
	-237, 536, 186, 21, 182, 185, 91, 23, 25, 537,
	242, 94, 365, 134, 470, 471, 472, 394, 460, 16,
	20, 204, 95, 188, 380, 383, 202, 133, 198, 205,
	276, 278, 453, 486, 181, 62, 538, 444, 446, 441,
	445, 277, 443, 418, 539, 540, 541, 542, 373, 371,
	275, 28, 543, 10, 487, 26, 214, 249, 22, 544,
	127, 369, 183, 497, 240, 98, 99, 545, 41, 40,
	315, 24, 279, 215, 86, 285, 488, 370, 546, 547,
	19, 65, 206, 11, 200, 230, 641, 548, 295, 13,
	467, 116, 14, 549, 550, 551, 552, 196, 195, 111,
	191, 631, 60, 247, 8, 553, 363, 554, 555, 556,
	557, 558, 364, 177, 88, 559, 560, 108, 290, 56,
	474, 475, 498, 45, 32, 235, 489, 490, 582, 491,
	458, 289, 561, 38, 37, 393, 397, 392, 288, 409,
	58, 109, 17, 447, 448, 30, 562, 563, 529, 223,
	396, 362, 391, 583, 564, 565, 129, 252, 63, 92,
	348, 492, 493, 84, 372, 645, 33, 66, 219, 344,
	313, 42, 89, 15, 248, 61, 34, 465, 113, 646,
	495, 375, 197, 227, 567, 433, 251, 568, 114, 496,
	368, 584, 208, 110, 357, 184, 569, 452, 325, 273,
	209, 570, 297, 59, 571, 241, 115, 494, 189, 419,
	572, 6, 573, 462, 29, 213, 272, 361, 199, 574,
	253, 284, 274, 283, 575, 49, 576, 304, 43, 480,
	479, 478, 481, 643, 57, 455, 456, 630, 190, 39,
	97, 395, 360, 390, 194, 459, 228, 85, 280, 5,
	44, 31, 414, 9, 338, 64, 67, 449, 450, 451,
	47, 384, 381, 577, 484, 388, 483, 485, 644, 96,
	12, 578, 466, 533, 434, 90, 579, 415, 69, 75,
	75, -388, -100, -388, -220, 75, -255, -100, -222, -222,
	-128, -128, -128, -128, -128, -220, -220, -220, -220, -217,
	11, 111, 11, -217, -217, -100, -143, -357, 445, 125,
	-251, -83, -81, 207, -81, -83, 73, 73, 355, -74,
	33, 73, -51, -51, 75, -51, 69, 101, -51, 70,
	-157, -243, -340, 631, 69, -356, 23, 433, 434, 409,
	-382, 190, 230, 227, 66, -382, -378, 335, -359, -358,
	-357, -380, -381, -243, -380, -380, -380, 420, -380, -380,
	-380, -380, -380, -380, -380, -380, -363, -382, 295, 69,
	-382, -359, -357, 339, 339, 339, 339, 339, 339, -113,
	23, -194, -193, -244, -240, -241, -242, 217, -243, -237,
	-283, -280, -279, -281, 383, 428, 133, 440, -128, 434,
	435, -9, -201, 88, 9, 111, 69, 18, 69, -190,
	25, 26, 178, -144, 51, 76, 79, -223, 49, -128,
	-100, -100, -100, -155, 84, 92, 85, 86, -245, 217,
	125, -252, -244, -241, -240, 309, 221, -237, -143, -156,
	-162, -116, 80, 111, 109, 110, 94, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -254, 73, 75, 73, -244, -96, -99, 125,
	-100, -251, -244, -142, 84, -142, -243, -243, -88, -244,
	421, -244, -88, -88, -88, -88, -88, -391, 69, -391,
	-9, -96, -96, -96, -391, -100, -100, -96, -96, -165,
	75, -96, -165, 75, -96, -143, 458, 459, 460, -96,
	-96, -88, -166, -167, 96, -165, -96, -391, -143, -243,
	-243, -96, -97, -96, -96, -96, -391, -391, -99, -96,
	-99, -96, -96, -391, -391, -391, -391, -96, -96, -96,
	-96, -96, -96, -96, -96, -96, -96, -96, -96, -130,
	88, -128, -103, -108, -110, -111, -132, -115, -390, -109,
	-112, -128, -116, 73, 498, -128, -120, -392, 11, 67,
	-392, 69, 178, -208, -211, 69, 432, 434, 435, -205,
	-276, -277, 133, 66, 87, -100, -244, -252, -191, -90,
	-310, -295, -297, -298, -299, -321, 205, -329, 197, 199,
	200, 44, -300, 206, 191, 45, -259, -285, 413, 414,
	-269, 68, -268, 68, -268, 388, 380, 383, 381, -268,
	-268, -268, -268, -268, 381, 68, 68, -269, -269, -269,
	-287, 68, -287, 375, -288, 68, -288, -288, -288, -288,
	-259, -259, -259, -259, -330, -330, -330, -100, -247, 67,
	23, 193, -283, 24, -283, -57, 242, 211, 178, 68,
	245, 246, -361, 69, 28, -367, 292, -128, 221, -128,
	-128, -357, -357, -363, -337, 209, 204, -128, 69, 69,
	-128, 69, 75, 73, 73, -145, -304, 11, 111, -220,
	-251, -251, -128, -145, -220, -94, 217, 67, -394, -391,
	357, 358, 73, -143, -50, -142, 70, -129, 88, 75,
	-355, -253, 408, 434, -383, 125, -243, -382, -383, -386,
	533, 194, 70, 69, -380, -383, 313, 295, -383, 11,
	-328, 19, -115, -390, -391, 69, 178, 29, -306, 101,
	-306, -306, -65, -64, 186, 183, 184, 187, 188, -333,
	411, 182, 239, 238, 224, -391, -200, 34, 35, -243,
	52, -146, -146, -177, -214, 19, 11, 47, 47, -89,
	57, 84, 85, 86, 178, -390, -156, -143, -143, -143,
	-94, 91, -391, 69, -391, 178, -97, -96, -96, -96,
	-96, -96, -100, -391, -391, -391, -391, 69, 67, 23,
	-391, 67, -391, 11, 11, -391, 11, 11, -391, -391,
	11, -143, -143, -143, -391, -391, -96, -169, -167, 98,
	-100, -391, -391, -391, 69, 69, -391, -391, -391, -391,
	-178, 465, -178, -391, -391, -391, -391, -391, -178, -178,
	-178, -178, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -198, 113, -128, 29, 69, -123,
	-125, -124, -126, 56, 60, 62, 57, 58, 59, 421,
	63, -231, -103, -114, 47, -390, -133, 113, -135, 23,
	-253, 64, 195, 65, -390, -390, -198, 67, -103, -103,
	-131, -251, 125, -210, -213, 436, 433, 439, 73, 75,
	178, -192, -314, -311, 69, 113, 638, 411, 500, 428,
	28, 383, 501, 133, 82, 502, 236, 36, 191, 504,
	440, 340, 505, 506, 201, 507, 508, 509, 301, 510,
	351, 511, 512, 513, 514, 328, 5, -299, 68, 73,
	-305, -240, 45, -300, -302, -300, -300, -305, 73, -305,
	45, 84, 92, -275, -277, 134, -272, -273, -289, -292,
	-270, 23, 641, 416, 383, 28, 66, 411, 197, 45,
	44, 200, 82, -286, 415, 76, 76, 476, -268, -268,
	-268, 388, -268, -293, 75, -293, 76, -287, 76, 70,
	66, -243, -187, -128, -58, 8, 9, 10, -243, -342,
	-343, -344, -243, 111, 247, 248, -370, 325, -365, 293,
	302, 91, 16, 533, 194, 194, -128, -357, -100, -136,
	12, 73, 73, -217, -220, -143, -360, 233, 234, -198,
	190, -356, 194, 178, 178, -383, 194, 316, -359, -243,
	11, 11, 313, 11, -359, 349, -193, -244, -306, 73,
	134, 73, 134, 75, 69, -232, -300, -339, -298, -299,
	-338, 198, 205, -232, 205, 202, -300, 206, 197, 198,
	-229, -300, 194, 23, -232, -232, -306, -232, 32, 32,
	113, 69, 75, 75, 53, -128, -95, -188, 125, -244,
	-97, -94, 91, -143, -99, 125, -252, -391, -391, -391,
	-391, -391, -391, -257, 134, 380, 216, 378, 371, 398,
	385, 413, 376, 414, -254, -257, -254, -143, -143, -143,
	-143, -143, 11, 11, 11, 530, -173, 100, -100, 97,
	-143, -143, -243, -183, -390, -178, -178, -178, -178, -178,
	-179, -178, -179, -179, -179, -179, -179, -179, -179, -179,
	-179, -179, -179, -141, 29, 47, -390, -9, -390, -203,
	-207, -165, -240, -242, 217, 309, 221, -108, -110, -110,
	-108, -110, 56, 56, 56, 61, 56, 61, 61, 56,
	56, -124, -253, -391, -391, -161, 241, -390, 33, -253,
	-135, 191, 191, 191, -97, -143, -136, -103, -136, -136,
	178, 433, 437, 438, -311, 16, -306, -306, -306, -306,
	428, 383, 133, 29, -306, -306, -306, -306, -306, 503,
	503, -306, -306, -306, -306, -306, -306, -306, -306, -306,
	-306, -306, 352, -306, -306, -306, -306, -312, -387, 75,
	76, 82, 331, 301, 73, -239, -237, -306, -323, -322,
	-243, -240, 197, -329, 44, -329, -305, -305, -305, -305,
	68, 84, -390, 642, 76, 29, -142, 124, -138, 441,
	447, 448, 442, -390, 85, 86, 9, 45, 45, 45,
	75, 70, 70, 70, -268, 70, 69, 70, 69, 70,
	69, -139, 589, 92, -128, -189, 23, 66, 70, 69,
	-258, -243, -243, -243, -373, 533, 298, -371, -369, 304,
	305, 306, 307, 308, -360, 303, -367, 300, 75, 73,
	-128, -357, -100, -145, -274, -275, -128, -359, 125, 125,
	-243, 194, -359, 313, -385, 533, -359, -359, 11, -359,
	75, 73, 134, -64, 68, -294, 73, -239, -305, -225,
	197, 73, 73, 73, -240, -239, -241, -242, 73, -240,
	-239, -241, -242, -243, 45, 45, 73, -128, -243, -294,
	73, -100, -243, -243, -243, -201, 69, -98, -391, -143,
	178, -179, -179, -179, -179, -179, -391, -269, -269, -269,
	-288, -269, 364, -269, 364, -391, -391, -391, 19, 19,
	19, 19, -391, -143, -143, -143, -390, -92, 462, -100,
	69, 69, -248, 73, -202, 66, -203, -160, -163, -162,
	-390, -9, -391, -194, 6, 533, -199, -243, -136, 69,
	101, 101, 101, 101, -118, -117, 66, 67, -119, 66,
	-117, 56, 56, 56, -197, 68, 69, -162, -390, -199,
	-143, -135, -390, -390, -390, -391, 69, -173, -136, -315,
	-316, 114, 522, -317, 561, -312, -312, -312, -254, -306,
	29, -306, -306, 76, -387, 75, 75, 75, -306, -306,
	76, 75, -387, 75, 207, 210, 212, -312, -312, -312,
	76, 75, -313, 28, 518, 374, 519, 520, 521, 75,
	28, 76, 28, 76, -312, 515, -312, 70, 69, -269,
	-269, 45, -302, -196, -243, -143, 23, 73, 134, -142,
	-394, -390, -394, -390, -394, -390, -390, -143, -149, 441,
	451, 450, 449, 447, 448, 444, 446, 445, 463, 464,
	75, 76, 76, 589, 68, -9, -187, -128, -345, -346,
	-347, 82, 532, 92, 249, 250, 207, 251, 252, 253,
	-344, -258, -258, -258, -376, -377, -375, 301, 323, 324,
	309, -374, -372, 318, 319, 320, 321, 91, 75, 75,
	75, -368, 292, 91, 301, 16, 23, -220, -348, -218,
	-385, -359, -385, 295, -359, -294, -175, 210, 211, -258,
	-258, -247, -302, 45, 73, -230, 194, 23, 194, -175,
	-294, 29, 183, 88, -105, 11, -188, -188, 125, -274,
	73, -143, -143, -143, -143, -391, -391, -391, -143, -391,
	75, -143, -143, -159, 113, 27, -202, 69, -391, -391,
	47, -391, -391, 69, -173, -207, -100, -100, -100, -100,
	-100, 68, -100, -196, 241, -391, -135, -231, -196, -196,
	-196, 75, -191, -318, 524, -390, 423, -390, 423, 523,
	45, -254, -306, -387, -254, 75, 75, 516, 517, -325,
	-324, 67, 201, 82, -322, -190, -190, -305, -305, 70,
	69, -391, -390, -96, -96, -96, -391, -96, -391, 70,
	70, -323, -187, -189, 19, -188, -347, 75, 253, 249,
	253, 253, 253, 253, 254, -364, 82, 299, -375, 310,
	594, 294, 325, 76, 76, 112, 30, 31, -372, 76,
	76, 76, 76, -369, 16, 533, -367, 300, 75, 75,
	-349, 38, -351, 39, -384, 23, -385, -384, 313, 70,
	73, -259, -259, 68, -305, -305, 73, -243, -175, 28,
	28, -390, -136, 497, -103, -98, -391, -391, -391, -391,
	-91, 111, 533, -391, -391, -173, 16, 45, -163, -160,
	47, -9, -390, -243, -191, -196, 70, -162, -133, -253,
	-391, -391, -391, 423, -319, 525, 76, -387, -390, -387,
	-390, -390, -390, 256, -254, -324, -387, -306, 75, 208,
	-243, -284, 644, 643, -143, -391, -391, -391, -391, 70,
	-9, 240, -189, 36, 36, 245, 246, 75, 75, 28,
	311, 177, 28, 76, 177, 468, 300, 75, 73, 301,
	-271, 195, -352, 43, -350, -291, 42, 16, -357, -384,
	-323, -247, 68, -143, -331, -332, 113, -170, 13, -188,
	-391, 531, 63, 534, -184, 115, 114, -157, 9, -160,
	-9, 70, -135, -390, -390, 16, -391, -196, -391, -196,
	-142, 73, -196, 101, 76, -128, -391, -326, -325, -187,
	241, -22, -3, -11, -12, -13, -14, -16, -59, -17,
	-18, -23, -24, -19, -66, -69, -70, -71, -67, -78,
	-76, -77, -73, -72, -27, -29, -30, -32, -33, -34,
	-31, -25, -28, -20, -35, -36, -37, -41, -42, -26,
	-43, 95, 196, 275, 286, 287, 288, 73, 289, 290,
	285, 350, 76, 28, 76, 28, 314, 301, 23, -197,
	76, -351, 16, -353, 40, 41, 75, 533, 70, 68,
	-323, -391, 69, -243, -171, 14, 16, 53, 532, 535,
	-391, -185, 94, -186, 112, 468, -147, 76, 177, -185,
	-203, -391, -309, -296, -244, -331, -316, -391, -391, -391,
	-391, -391, 76, 68, -284, -176, 243, 244, -187, -100,
	-100, 73, -55, -249, 278, 279, 280, -244, 73, 73,
	-44, -22, 72, 73, 73, -393, 11, 50, -44, 312,
	312, 75, 38, 115, 75, 16, 16, 293, -326, -323,
	70, -332, 47, -181, 466, -172, -100, -158, -102, -100,
	53, -186, 117, 118, 241, 117, 118, -142, -391, 69,
	-258, -391, -320, 526, -390, -196, -187, 73, 73, -45,
	-46, 96, 97, 276, 277, 281, -258, 69, 647, 288,
	73, 11, 647, 75, 75, 28, 298, 21, -360, 70,
	-326, 225, -180, -182, -243, 69, 533, 91, -243, -391,
	-296, -260, 499, 24, 76, -196, 70, -189, 100, 98,
	-46, -100, -44, 19, 19, 19, -274, -244, 100, -22,
	-44, 88, 100, 315, -326, 226, 69, 23, -102, 534,
	-186, 23, -253, 75, 499, -391, -335, -336, 66, -15,
	-21, -14, -11, -12, -13, 350, 533, 95, -44, 97,
	647, -56, 76, -9, -54, -53, 76, -56, 283, 92,
	284, 73, -276, 288, 647, -49, 73, -360, -390, -182,
	-183, 535, -253, -261, 75, -336, 66, -335, 66, 10,
	9, -187, -44, -106, 647, -44, 100, 98, -47, -48,
	99, -22, 350, 69, 282, 28, 100, 69, -143, 223,
	-397, 84, 28, 341, -334, 209, 204, 207, 29, -334,
	647, 100, 647, 196, -44, 100, 98, -48, -100, 100,
	-53, -143, 288, 73, -391, -391, 66, -143, 66, 203,
	28, 84, 100, 95, 647, 196, -44, 97, 73, 545,
	66, 545, 100, 647, -44, 545, 196, 100, 647, 196,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 1326, 905,
	905, 0, 905, 1007, -2, 736, 737, 0, 0, 0,
	0, 0, 0, 0, -2, 870, 871, 874, 871, 871,
	899, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, -2, 0, 1402, 0, 901, 902, 903,
	44, 0, 0, 2273, 2, 1334, 0, 914, 907, 0,
	905, 905, 905, 71, 72, 0, 103, 0, 0, 0,
	1008, 0, 0, 0, 1400, 1400, 255, 1400, 1400, 0,
	1416, 253, 0, 1397, 1412, 1413, 1414, 0, 0, 0,
	1398, 0, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 0,
	0, 804, 1041, 1043, 1044, 1045, 1425, 1426, 2268, 2269,
	2270, 2271, 2272, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	0, 0, 0, 810, 811, 0, 0, 0, 861, 0,
	861, 828, 829, 0, 831, 0, 0, 0, 0, 0,
	841, 844, 848, 0, 1334, 1334, 613, 614, 615, 866,
	867, 855, 868, 873, 872, 880, 880, 0, 872, 60,
	-2, 0, 988, 0, 344, 346, 0, 366, 0, 369,
	372, 1046, 0, -2, -2, 1431, 886, 0, 0, 1456,
	1457, 0, 0, 0, 0, 0, 2167, 198, 269, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 0, 200,
	200, 200, 2176, 200, 0, 200, 200, 200, 200, 200,
	268, 258, 259, 260, 0, 0, 0, 2167, 0, 593,
	590, 591, 61, 0, 49, 62, 1350, 1009, 1010, 1011,
	-2, 0, 1403, 875, 0, 909, 0, 42, 0, 1340,
	0, 0, 917, 915, 916, 906, 0, 928, 958, 0,
	1055, 1890, 1061, -2, 1803, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1748, 0, 0, 0, 0, 0, 1845,
	1134, 1135, 1136, 1137, 1138, 1139, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, -2, -2, -2, 1293, 1294, 0, 2268,
	2269, 2270, 2271, 2272, 1367, 0, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1871, 1934,
	1822, 1939, 1767, 0, 1759, 1836, 1963, 1964, 0, 1879,
	2249, 0, -2, 1988, 1927, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 2259, 2260, 1829, 1777, 1887, 1928,
	1768, 1789, 1808, 1857, 1858, 1860, 1892, 1893, 1911, 1920,
	1938, 1749, 1750, 1751, 1852, 1853, 1960, 1959, 1958, 1961,
	1994, 1992, 1995, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1758,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1769, 1770, 1771,
	1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787,
	1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1804, 1805, 1807, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1823, 1824, 1825, 1826, 1827, 1828, 1830, 1831, 1832, 1833,
	1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1846, 1847, 1848, 1849, 1850, 1851, 1854, 1855, 1856, 1859,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1872, 1873, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1888, 1889, 1891, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921,
	1922, 1923, 1924, 1925, 1926, 1929, 1930, 1931, 1932, 1933,
	1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1962, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1989, 1990, 1991, 1993, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 1402, 1402, 0, 88, 2226, 0,
	1374, -2, -2, 1376, 0, 0, 0, -2, -2, -2,
	-2, 1760, -2, 1293, 0, 0, 0, 0, 1748, 1749,
	1750, 1751, 1757, 1759, 1767, 1768, 1772, 1773, 1774, 1775,
	1777, 1786, 1789, 1803, 1806, 1808, 1822, 1829, 1836, 1845,
	1852, 1853, 1857, 1858, 1860, 1871, 1874, 1875, 1879, 1887,
	1890, 1892, 1893, 1894, 1911, 1920, 1927, 1928, 1934, 1938,
	1939, 1958, 1959, 1960, 1961, 1963, 1964, 1975, 1985, 1986,
	1987, 1988, 1992, 1994, 1995, 104, 1326, 905, 105, 0,
	419, 420, 0, 0, 0, 0, 0, 0, 638, 1419,
	1420, 2262, 2263, 2264, 2265, 2266, 2267, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	1400, 255, 0, 0, 785, 0, 786, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 816,
	817, 803, 0, 805, 82, 0, 0, 0, 0, 814,
	815, 818, 861, 820, 0, 0, 1400, 1400, 0, 0,
	0, 0, 827, 0, 640, 641, 861, 861, 861, 861,
	858, 0, 858, 838, 858, 856, 857, 0, 843, 0,
	0, 0, 851, 852, 0, -2, 878, -2, 887, 0,
	0, 892, 895, 896, 897, 898, 60, 894, 904, 0,
	0, 0, 0, 348, 0, 0, 368, 350, 0, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 371, 0, 0, 1429, 1432, 891, 1447, 1448,
	0, 1458, 1459, 204, 0, 204, 0, 0, 0, 0,
	167, 200, 0, 169, 200, 200, 200, 0, 200, 200,
	176, 177, 200, 179, 180, 181, 182, 183, 200, 185,
	186, 187, 200, 200, 190, 200, 200, 193, 194, 195,
	196, 197, 267, 204, 0, 0, 204, 0, 0, 575,
	0, 0, 0, 0, 580, 581, 582, 583, 0, 0,
	586, 587, -2, 48, 0, 0, 0, -2, 739, -2,
	556, 557, 558, 0, 553, 0, 0, 45, 67, 0,
	910, 911, 66, 2274, 0, 54, 0, 0, 1335, 1338,
	1339, 1327, 1328, 1331, 0, 0, 912, 918, 919, 908,
	0, 929, 0, 0, 0, 0, 959, 0, 962, 963,
	964, 965, 966, 967, 0, 1059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1083, 1084, 1085, 1086, 1087,
	1088, 1089, 1062, 0, 1076, 0, 0, 0, 0, 0,
	0, 0, 1127, 1128, 1129, 1130, 1131, 1132, 0, 917,
	0, 0, 917, 917, 917, 917, 917, 0, 0, 1102,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 917, 0, 1285, 0, 0,
	1196, 1205, 0, 1197, 1206, 1198, 1207, 1199, 0, 1200,
	1208, 1201, 1209, 1202, 1203, 1210, 1204, 0, 0, 0,
	1098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 1041, 0, 89, 91, 0, 0, 2226, 1377,
	1378, 548, 1391, 1392, 1393, 0, 1389, 0, 1334, 914,
	655, 0, 421, 437, 525, 452, 453, 454, 515, 456,
	517, 517, 0, 517, 517, 517, 517, 517, 492, 493,
	494, 495, 496, 498, 499, 500, 501, 502, 0, 0,
	475, 515, 515, 515, 479, 505, 506, 507, 508, 509,
	510, 511, 512, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 520, 520, 522, 522, 522, 522, 522,
	437, 437, 437, 437, 0, 0, 0, 637, 0, 1417,
	0, 0, 255, -2, 0, -2, 0, 1036, 0, 0,
	0, 115, 285, 271, 114, 0, 249, 254, 250, 251,
	252, 0, 0, 0, 0, 262, 800, 1399, 0, 793,
	80, 794, 795, 796, 797, 798, 264, 799, 1042, 1427,
	1428, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 0, 806,
	807, 812, 808, 813, 819, 862, 0, 864, 0, 0,
	988, 824, 825, 826, 642, 832, 833, 834, 840, 861,
	0, 0, 0, 988, 861, 842, 1090, 845, 1213, 0,
	869, 884, 0, 879, 0, 885, 889, 888, 0, 893,
	0, 900, 345, 347, 349, 367, 0, 0, 370, 373,
	0, 1047, 0, 0, 0, 1450, 0, 1452, 1454, 0,
	0, 205, 206, 207, 204, 0, 199, 0, 222, 270,
	0, 168, 0, 202, 170, 171, 172, 200, 174, 175,
	178, 184, 188, 189, 191, 192, 266, 0, 0, 0,
	0, 165, 0, 576, 577, 578, 579, 588, 585, 63,
	0, 0, 1352, 1355, 1356, 1357, 1358, 1359, 1423, 1424,
	738, 559, 560, 561, 0, 603, 603, 603, 0, 876,
	877, 0, 40, 0, 1341, 0, 0, 0, 0, 1330,
	1332, 1333, 0, 0, 1315, 0, 0, 920, 913, 43,
	1056, 1057, 1058, 1060, 1077, 0, 1079, 1081, 960, 961,
	930, 0, 1295, 1296, 1297, 1298, 1299, -2, 1067, 1068,
	1092, 1093, 1094, 0, 0, 0, 0, 1090, 1072, 0,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1126, 1227, 1228, 0, 1304, 0, 1100, 924,
	925, 0, 1305, 1124, 1314, 1125, 1300, 1133, 1098, 1302,
	1303, 1301, 0, 0, 0, 0, 0, 1095, 0, 1366,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 1108,
	1307, 0, 1108, 1307, 0, 0, 1861, 1973, 1753, 0,
	0, 0, 1291, 1288, 0, 0, 0, 1214, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 1040, 0, 968, 970, 971, 972, -2, 0, 976,
	977, 1049, 1096, 1425, 0, -2, 0, 0, 78, 79,
	0, 0, 0, 1375, 0, 0, 0, 94, 95, 90,
	1379, 549, 0, -2, 1386, 1387, 1295, 0, 1340, 917,
	712, 422, 424, 425, 426, 0, 620, 628, 0, 0,
	618, 620, 620, 0, 616, 617, 429, 528, 526, 527,
	455, 0, 480, 0, 481, 517, 517, 517, 517, 484,
	485, 487, 490, 491, 497, 0, 0, 476, 477, 478,
	467, 0, 468, 520, 470, 0, 471, 472, 473, 474,
	430, 431, 432, 433, 634, 635, 636, 0, 0, 0,
	100, 0, 109, 1401, 110, 0, 287, 288, 0, 225,
	256, 257, 117, 0, 0, 272, 0, 416, 417, 0,
	787, 0, 789, 261, 791, 801, 802, 792, 0, 0,
	83, 0, 863, 821, 822, 823, 1053, 0, 0, 835,
	859, 860, 858, 861, 839, 853, 0, 0, 846, 0,
	883, 881, 890, 989, 351, 352, 374, 86, 0, 1430,
	1449, 0, 1453, 1455, 0, 208, 210, 0, 0, 159,
	0, 0, 201, 0, 173, 0, 0, 0, 0, 0,
	584, 0, 64, 0, 1351, 0, 0, 603, 0, 604,
	0, 0, 740, 741, -2, 778, 1409, 778, 778, 764,
	603, 778, 0, 0, 0, 68, 55, 0, 2060, 58,
	0, 1336, 1337, 1329, 0, 1394, 1395, 1316, 1317, 101,
	921, 1078, 1080, 1082, 0, 1098, 1069, 1090, 1073, 0,
	1070, 0, 1064, 0, 1172, 0, 0, 0, 0, 0,
	0, 0, 1103, -2, 1170, 1171, 1173, 0, 0, 0,
	1177, 0, 1180, 0, 0, 1220, 0, 0, 1221, 1185,
	0, 0, 0, 0, 0, 1191, 1326, 0, 1289, 0,
	0, 1194, 1195, 1215, 0, 0, 1216, 1217, 1218, 1219,
	1159, 0, 1160, 0, 0, 0, 0, 0, 1166, 1167,
	1168, 1169, 939, 939, 939, 939, 939, 939, 939, 939,
	939, 939, 939, 939, 0, 0, 1039, 0, 0, 0,
	0, 0, 0, 1012, 0, 0, 1015, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 981, 0, 983, 0,
	1049, 0, 0, 0, 1098, 0, 1053, 0, 1053, 1053,
	85, 0, 1048, 92, 93, 0, 0, 99, 550, 551,
	0, 224, 418, 656, 0, 0, 603, 603, 603, 603,
	0, 0, 603, 603, 603, 603, 603, 0, 0, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	0, 603, 603, 603, 603, 0, 603, 423, 0, 621,
	0, 0, 620, 620, 620, 619, 620, 611, 621, 612,
	0, 438, 0, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 0, 0, 0, 0, 0, 543, 0, 570,
	572, 0, 0, 451, 529, 0, 0, 0, 486, 482,
	483, 517, 488, 0, 513, 0, 0, 469, 0, 652,
	0, 1418, 102, 0, 0, 289, 290, 291, 1037, 0,
	226, 227, 0, 0, 0, 0, 127, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 81, 265, 809, 830,
	0, 643, 644, 988, 837, 1091, 847, 849, 850, 544,
	0, 1451, 0, 0, 0, 0, 0, 0, 220, 203,
	0, 0, 0, 0, 166, 0, 1353, 1354, 0, 564,
	565, 566, 567, 568, 0, 0, 620, 0, 765, 766,
	0, 779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 1411, 0, 0, 0, 0, 773, 774,
	0, 0, 56, 57, 1342, 41, 54, 0, 931, 1306,
	0, 1071, 0, 1074, 1101, 926, 0, 1140, 939, 939,
	939, 939, 939, 0, 515, 515, 1274, 515, 522, 1277,
	515, 1279, 515, 1282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1286, 1193, 1292, 0,
	0, 0, 932, 933, 935, 1161, 1162, 1163, 1164, 1165,
	1144, 940, 1145, 1146, 1148, 1149, 1151, 1152, 1153, 1154,
	1156, 1157, 1158, 1360, 0, 0, 0, 1345, 0, 1053,
	1368, 0, 0, 0, 0, 2262, 2263, 969, 1003, 1005,
	0, 1000, 1013, 1014, 1016, 0, 1018, 0, 0, 1021,
	1022, 1023, 990, 975, 1097, 978, 0, 0, 0, 1049,
	987, 0, 0, 0, 0, 0, 1326, 1053, 76, 77,
	0, 96, 97, 98, 657, 724, 0, 0, 0, 0,
	603, 0, 603, 603, 0, 0, 0, 0, 0, 603,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 0, 693, 694, 698,
	699, 700, 701, 702, 709, 710, 711, 0, 0, 622,
	515, 515, 0, 626, 618, 627, 605, 607, 608, 610,
	0, 439, 0, 0, 450, 0, 530, 0, 532, 1213,
	1213, 1213, 0, 0, 1065, 1066, 0, 569, 571, 573,
	574, 516, 518, 519, 489, 503, 0, 504, 0, 523,
	0, 639, 653, 0, 0, 0, 100, 0, 233, 0,
	229, 0, 0, 0, 135, 0, 118, 119, 120, 122,
	123, 0, 0, 0, 116, 0, 274, 0, 277, 278,
	788, 790, 1054, 861, 1441, 545, 1038, 220, 209, 211,
	212, 0, 220, 223, 160, 0, 161, 163, 0, 162,
	589, 562, 563, 742, 0, 775, 0, 0, 1417, 618,
	0, -2, 745, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 0, 771, 0, 747, 0, 775,
	0, 768, 0, 0, 59, 51, 101, 101, 1141, 1075,
	0, 1143, 1147, 1142, 1150, 1155, 1175, 1271, 544, 1275,
	1276, 1278, 1280, 1281, 1283, 1179, 1176, 1178, 0, 0,
	0, 0, 1186, 0, 0, 0, 0, 0, 0, 1290,
	0, 0, 937, 936, 69, 0, 1360, 1343, 1362, 1364,
	0, 0, 0, 0, -2, 1732, 0, 994, 1326, 0,
	0, 0, 0, 0, 997, 1004, 0, 0, 998, 0,
	999, 1017, 1019, 1020, 973, 0, 0, 979, 0, 0,
	-2, 986, 0, 0, 0, 996, 0, 1334, 75, 726,
	715, 0, 0, 0, 725, 658, 659, 660, 661, 0,
	603, 0, 0, 665, 666, 668, 669, 670, 0, 0,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 703, 704, 705, 706, 707, 708, 687,
	688, 689, 690, 691, 692, 0, 697, 595, 0, 1331,
	1331, 620, 620, 0, 992, 0, 0, 546, 547, 531,
	533, 0, 535, 0, 537, 0, 0, 0, 542, 1213,
	1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 0, 0,
	514, 0, 0, 654, 0, 100, 102, 0, 101, 234,
	235, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	228, 230, 231, 232, 153, 136, 137, 0, 0, 0,
	0, 128, 129, 0, 0, 0, 0, 0, 124, 125,
	126, 273, 0, 0, 276, 0, 0, 836, 1443, 1437,
	213, 220, 213, 0, 164, 0, 744, 776, 0, 437,
	437, 0, 620, 620, 767, 0, 1407, 1408, 0, 762,
	775, 0, 0, 0, 1053, 0, 0, 922, 927, 1272,
	1273, 0, 0, 0, 0, 1187, 1188, 1189, 1222, 1192,
	1287, 0, 0, 1326, 0, 0, 70, 0, 1365, -2,
	0, 0, 87, 0, 1334, 1369, 1370, 1371, 1372, 1373,
	1001, 0, 1006, 0, 0, 1049, 984, 0, 0, 0,
	0, 0, 74, 728, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 667, 663, 671, 672, 695, 696, 594,
	598, 0, 603, 0, 623, 624, 625, 606, 609, 0,
	0, 434, 0, 0, 0, 0, 539, 0, 541, 521,
	524, 0, 107, 0, 0, 102, 236, 237, 238, 239,
	241, 242, 0, 0, 0, 113, 0, 0, 138, 0,
	0, 0, 0, 148, 149, 150, 151, 152, 130, 131,
	132, 133, 134, 121, 0, 0, 275, 0, 280, 281,
	1404, 1445, -2, 0, 156, 0, 213, 158, 221, 743,
	777, 427, 428, 0, 1417, 0, 746, 761, 763, 0,
	770, 0, 1318, 52, 53, 101, 1181, 1183, 1182, 1184,
	0, 0, 0, 1211, 1212, 941, 0, 0, 1363, 1344,
	0, 1348, 0, 995, 73, 0, 991, 980, 982, 1049,
	1050, 1051, 1052, 0, 713, 0, 727, 0, 0, 0,
	0, 0, 0, 0, 664, 599, 600, 0, 602, 0,
	993, 448, 435, 436, 0, 534, 536, 538, 540, 596,
	100, 0, 60, 243, 244, 245, 246, 154, 155, 139,
	140, 0, 142, 143, 0, 0, 0, 283, 0, 279,
	990, 0, 1437, 0, 1439, 0, 1436, 0, 214, 157,
	0, 0, 0, 769, 0, 781, 0, 1323, 0, 923,
	1190, 0, 0, 0, 0, 0, 0, 938, 0, 1347,
	0, 1002, 985, 0, 0, 724, 716, 0, 718, 0,
	0, 0, 0, 0, 601, 0, 434, 106, 597, 108,
	292, 100, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	334, 60, 0, 144, 0, 146, 147, 282, 0, 39,
	0, 1444, 0, 1442, 0, 0, 1438, 0, 596, 0,
	0, 780, 0, 0, 951, 0, 0, 1223, 0, 1226,
	934, 942, 0, 945, 0, 0, 0, 956, 0, 943,
	1361, -2, 0, 1026, 0, 0, 730, 717, 719, 720,
	721, 722, 0, 0, 449, 100, 0, 0, 112, 0,
	0, 1419, 0, 0, -2, -2, -2, 1421, 331, 332,
	0, 375, 0, 342, 343, 0, 335, 0, 0, 141,
	145, 284, 1405, 1406, 1446, 0, 0, 0, 748, 0,
	596, 782, 0, 50, 0, 1324, 1325, 1319, 1320, 1322,
	1224, 0, 946, 947, 948, 949, 950, 0, 0, 0,
	0, 714, 729, 0, 0, 0, 102, 293, 294, 0,
	303, 0, 60, 0, 0, 0, 544, 0, 60, 60,
	0, 336, 60, 1440, 1434, 215, 216, 217, 219, 596,
	772, 0, 952, 953, 0, 0, 0, 0, 957, 0,
	1027, 1028, 0, 0, 731, 0, 629, 60, 0, 60,
	304, 0, 0, 0, 0, 0, 548, 1422, 0, 376,
	0, 0, 247, 0, 749, 0, 0, 0, 1321, 0,
	944, 0, 1025, 1031, 0, 723, 630, 631, 0, 100,
	295, 296, 297, 298, 299, 60, 0, 301, 0, 60,
	60, 313, 314, 315, 60, 323, 325, 326, 327, 0,
	329, 330, 318, 339, 60, 333, 337, 218, 0, 954,
	955, 1225, 1024, 1032, 1030, 632, 0, 633, 0, 0,
	0, 111, 0, 61, 60, 0, 0, 60, 0, 310,
	0, 316, 60, 0, 328, 0, 0, 0, 0, 1880,
	1029, 0, 0, 0, 645, 647, 648, 0, 0, 646,
	60, 0, -2, 306, 0, 0, 60, 311, 0, 317,
	324, 319, 340, 338, 783, 784, 0, 0, 0, 649,
	650, 651, 300, 302, 60, 308, 0, 60, 341, 1033,
	0, 1035, 0, 60, 0, 1034, 307, 0, -2, 309,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 93, 3, 3, 3, 128, 120, 3,
	68, 70, 125, 123, 69, 124, 178, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 72, 647,
	102, 101, 103, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 94, 95, 96, 97,
	98, 99, 100, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 121, 122,
	127, 129, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:557
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:561
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:606
		{
			setParseTree(yylex, nil)
		}
	case 39:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:612
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:618
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:629
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:645
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:673
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 50:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:682
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:690
		{
			yyVAL.tableExprs = nil
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:694
		{
			yyVAL.tableExprs = nil
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:707
		{
			yyVAL.into = nil
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:711
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:734
		{
			yyVAL.with = nil
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:738
		{
			yyVAL.with = yyDollar[2].with
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:744
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:748
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:754
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:782
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:788
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:801
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:813
		{
			yyVAL.str = InsertStr
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:817
		{
			yyVAL.str = ReplaceStr
		}
	case 73:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:823
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:829
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:833
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:837
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:841
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:861
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.partitions = nil
		}
	case 87:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:884
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 89:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:894
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:901
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:924
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:946
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:951
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:956
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:961
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:976
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:981
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 106:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:986
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 107:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:990
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:996
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1002
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1010
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 111:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1018
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 112:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1022
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 113:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1026
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1045
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.accountNames = nil
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1063
		{
			yyVAL.tlsOptionItems = nil
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			yyVAL.tlsOptionItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1108
		{
			yyVAL.accountLimitItems = nil
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItems = nil
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1169
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1173
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1181
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1185
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1189
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1193
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1197
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1222
		{
			yyVAL.str = ""
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 156:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1237
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 157:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1242
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 158:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1247
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 160:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1261
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1266
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1270
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 164:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1274
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1282
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1380
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1392
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1396
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1400
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1423
		{
			yyVAL.strs = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1437
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1442
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1464
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1476
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1481
		{
			yyVAL.grantAssumption = nil
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1485
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1489
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 216:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1493
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1497
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1501
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1505
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.boolean = false
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.boolean = true
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1519
		{
			yyVAL.boolean = false
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyVAL.boolean = true
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1530
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1542
		{
			yyVAL.procedureParams = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1566
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1570
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.characteristics = nil
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1627
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1631
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1641
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = ""
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1715
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1735
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1779
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1783
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1787
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1793
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1797
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1801
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1805
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1809
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1813
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1819
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1823
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1827
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1837
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = BeforeStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = AfterStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = InsertStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = UpdateStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = DeleteStr
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1866
		{
			yyVAL.triggerOrder = nil
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1890
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1896
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1900
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1916
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 306:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1922
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 307:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1927
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 308:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1932
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 309:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1938
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1946
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1950
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1956
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 316:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1978
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: &BeginEndBlock{}}}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1982
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1988
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2015
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.statement = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].strs}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2064
		{
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.strs = []string{string(yyDollar[1].bytes)}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[3].bytes))
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2081
		{
			yyVAL.statement = &Loop{Label: "", Statements: yyDollar[2].statements}
		}
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2085
		{
			yyVAL.statement = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements}
		}
	case 341:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2089
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &Loop{Label: label, Statements: yyDollar[4].statements}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.statement = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.statement = &Resignal{}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2210
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2214
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2226
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2232
		{
			yyVAL.statement = &Call{ProcName: yyDollar[2].procedureName, Params: yyDollar[3].exprs}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2237
		{
			yyVAL.exprs = nil
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			yyVAL.exprs = nil
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2305
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2319
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2335
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2362
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2381
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2399
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2407
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2415
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2423
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2457
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2475
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2511
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2547
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2556
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2587
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2859
		{
			yyVAL.sqlVal = nil
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2868
		{
			yyVAL.sqlVal = nil
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2885
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2893
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2903
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2924
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2938
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2960
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2964
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2968
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2976
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2980
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2984
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2988
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2994
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = ""
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = yyDollar[1].str
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = yyDollar[1].str
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3043
		{
			yyVAL.boolean = false
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3047
		{
			yyVAL.boolean = true
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3052
		{
			yyVAL.charsetCollates = nil
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3074
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3078
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3088
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3092
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3096
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3100
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3106
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3110
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3116
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.colKeyOpt = colKey
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3130
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3138
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3144
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3150
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3188
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3192
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3196
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3200
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3205
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3211
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3216
		{
			yyVAL.str = ""
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = yyDollar[1].str
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3222
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3226
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3231
		{
			yyVAL.indexOptions = nil
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3241
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3245
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3251
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3255
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3260
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3266
		{
			yyVAL.str = ""
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3282
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3294
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3307
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3311
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3325
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3331
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3335
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3340
		{
			yyVAL.str = ""
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3344
		{
			yyVAL.str = yyDollar[1].str
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3349
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3359
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 629:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3393
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 630:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3397
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 631:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3401
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 632:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3405
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 633:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3409
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3415
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3420
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3424
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3428
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3438
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3444
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3448
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3453
		{
			yyVAL.str = ""
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3457
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3461
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3483
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3487
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3491
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3500
		{
			yyVAL.boolean = true
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3504
		{
			yyVAL.boolean = true
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3508
		{
			yyVAL.boolean = false
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3513
		{
			yyVAL.str = ""
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3563
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3575
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3579
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3627
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3631
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3663
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3712
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3720
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3743
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 714:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = yyDollar[1].str
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3761
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3779
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 723:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3796
		{
			yyVAL.str = ""
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3805
		{
			yyVAL.str = ""
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3809
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3814
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = ""
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3836
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = string("")
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3855
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].bytes), CharsetCollate: yyDollar[4].charsetCollates}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3859
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, CharsetCollate: yyDollar[3].charsetCollates}
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3865
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3882
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3888
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3895
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3902
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3906
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 748:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3915
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 749:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3919
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3928
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3938
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3943
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3948
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3953
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3958
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3963
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3973
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3977
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3981
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3988
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4004
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4010
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 769:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4019
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4023
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4027
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 772:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4033
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4048
		{
			yyVAL.columnOrder = nil
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4056
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4061
		{
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
		}
	case 780:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4067
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4077
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 783:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4083
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 784:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4087
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4093
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4103
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4107
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4119
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4125
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4133
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4137
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4145
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4153
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4161
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4169
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4177
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4185
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4194
		{

		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4208
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4212
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4218
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4224
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4228
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.aliasedExprs = []*AliasedExpr{{Expr: yyDollar[1].expr}}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4238
		{
			yyVAL.aliasedExprs = append(yyDollar[1].aliasedExprs, &AliasedExpr{Expr: yyDollar[3].expr})
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4244
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4252
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].aliasedExprs}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4256
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].aliasedExprs}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4262
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4270
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4274
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4280
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4285
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4289
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4293
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4297
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4301
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4306
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4310
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4314
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4322
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4326
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 830:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4330
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4334
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4338
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4342
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4346
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4350
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 836:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4354
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 837:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4359
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4368
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4372
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4380
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4386
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4394
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4398
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4403
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4407
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4412
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4416
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4420
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4424
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4434
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4440
		{
			yyVAL.boolean = false
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.boolean = true
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4460
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4474
		{
			yyVAL.showFilter = nil
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4478
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4486
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4492
		{
			yyVAL.str = ""
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.str = SessionStr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.str = GlobalStr
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4506
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4510
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.bytes = nil
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4529
		{
			yyVAL.statement = &Begin{}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4539
		{
			yyVAL.statement = &Begin{}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4543
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4547
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4552
		{
			yyVAL.bytes = nil
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.bytes = nil
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4561
		{
			yyVAL.bytes = nil
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yyVAL.bytes = nil
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4570
		{
			yyVAL.bytes = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4574
		{
			yyVAL.bytes = nil
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4580
		{
			yyVAL.statement = &Commit{}
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4586
		{
			yyVAL.statement = &Rollback{}
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4592
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4602
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4606
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4610
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4616
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4622
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4626
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[3].str, Statement: yyDollar[4].statement}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4630
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = ""
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4648
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4660
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4666
		{
			setAllowComments(yylex, true)
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4670
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4676
		{
			yyVAL.bytes2 = nil
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4680
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = UnionStr
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = UnionAllStr
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = UnionDistinctStr
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4699
		{
			yyVAL.byt = 0
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.byt = 1
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.str = SQLCacheStr
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4721
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4729
		{
			yyVAL.str = DistinctStr
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4734
		{
			yyVAL.str = ""
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.str = StraightJoinHint
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4744
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4752
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4767
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4771
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4775
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4781
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4785
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4793
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4799
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 934:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4809
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4814
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4822
		{
			yyVAL.exprs = nil
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4831
		{
			yyVAL.over = nil
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.over = yyDollar[1].over
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4840
		{
			yyVAL.frame = nil
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4844
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4848
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4855
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4893
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4897
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4905
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4912
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4920
		{
			yyVAL.window = nil
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			yyVAL.window = yyDollar[2].window
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4929
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4932
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4938
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4956
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4960
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4964
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4968
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4974
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4978
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4982
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4986
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4990
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4994
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5000
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5004
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5014
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5018
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5034
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5042
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5048
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5052
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5058
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5063
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5078
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5082
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5086
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5090
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5101
		{
			yyVAL.expr = nil
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5105
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5110
		{
			yyVAL.columns = nil
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5114
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5124
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5134
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5140
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5154
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5158
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5162
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5166
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5172
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5174
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5178
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5180
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5184
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5186
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5189
		{
			yyVAL.empty = struct{}{}
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5191
		{
			yyVAL.empty = struct{}{}
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5196
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
			yyVAL.str = JoinStr
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5210
		{
			yyVAL.str = JoinStr
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5214
		{
			yyVAL.str = JoinStr
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5220
		{
			yyVAL.str = StraightJoinStr
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5226
		{
			yyVAL.str = LeftJoinStr
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5230
		{
			yyVAL.str = LeftJoinStr
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5234
		{
			yyVAL.str = RightJoinStr
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5238
		{
			yyVAL.str = RightJoinStr
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5242
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5252
		{
			yyVAL.str = NaturalJoinStr
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5256
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 1024:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5266
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 1025:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5270
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5276
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5281
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5289
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5301
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5305
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5311
		{

		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5329
		{

		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5333
		{

		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5337
		{

		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5341
		{

		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5351
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5357
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5363
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5367
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5373
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5377
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5385
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5395
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5399
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5405
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5410
		{
			yyVAL.indexHints = nil
		}
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5414
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5418
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5422
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5427
		{
			yyVAL.expr = nil
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5431
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5437
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5441
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5445
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5449
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5453
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5457
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5461
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5465
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = ""
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5485
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5491
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5495
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5499
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5503
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5507
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5511
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5515
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5519
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5523
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5527
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5533
		{
			yyVAL.str = IsNullStr
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5537
		{
			yyVAL.str = IsNotNullStr
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5541
		{
			yyVAL.str = IsTrueStr
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5545
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5549
		{
			yyVAL.str = IsFalseStr
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5553
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5559
		{
			yyVAL.str = EqualStr
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5563
		{
			yyVAL.str = LessThanStr
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5567
		{
			yyVAL.str = GreaterThanStr
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5571
		{
			yyVAL.str = LessEqualStr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5575
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5579
		{
			yyVAL.str = NotEqualStr
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5588
		{
			yyVAL.expr = nil
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5592
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5602
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5606
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5612
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5622
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5628
		{
			yyVAL.selectExprs = nil
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5635
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5639
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5645
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5649
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5655
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5659
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5663
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5667
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5675
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5683
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5687
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5691
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5695
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5699
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5707
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5711
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5715
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5719
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5723
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5727
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5731
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5735
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5739
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5743
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5747
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5751
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5755
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5763
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5777
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5781
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5785
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5805
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5809
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5819
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5823
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5827
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5831
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5835
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5839
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5843
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5847
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5851
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5855
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5859
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5863
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5867
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5871
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5875
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5879
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5883
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5892
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5896
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5900
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5904
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5908
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5912
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5916
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5920
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5924
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5928
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5932
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5943
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5955
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5959
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5963
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5967
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5975
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5979
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5983
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5987
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1182:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5991
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5995
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5999
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6003
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6007
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1187:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6011
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1188:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6015
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1189:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6019
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1190:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:6023
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6027
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6031
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6035
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6039
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6043
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6053
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6057
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6061
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6066
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6076
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6082
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6091
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6096
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6100
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6104
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6109
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6114
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6119
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1211:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6123
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1212:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6127
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6138
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6148
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6152
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6156
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6160
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6164
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6168
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6174
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6178
		{
			yyVAL.str = BooleanModeStr
		}
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6182
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1225:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6186
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6190
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6196
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6200
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6206
		{
			yyVAL.str = Armscii8Str
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.str = AsciiStr
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6214
		{
			yyVAL.str = Big5Str
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.str = UBinaryStr
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.str = Cp1250Str
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.str = Cp1251Str
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6230
		{
			yyVAL.str = Cp1256Str
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.str = Cp1257Str
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.str = Cp850Str
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6242
		{
			yyVAL.str = Cp852Str
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6246
		{
			yyVAL.str = Cp866Str
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6250
		{
			yyVAL.str = Cp932Str
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6254
		{
			yyVAL.str = Dec8Str
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6258
		{
			yyVAL.str = EucjpmsStr
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6262
		{
			yyVAL.str = EuckrStr
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6266
		{
			yyVAL.str = Gb18030Str
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6270
		{
			yyVAL.str = Gb2312Str
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6274
		{
			yyVAL.str = GbkStr
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6278
		{
			yyVAL.str = Geostd8Str
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6282
		{
			yyVAL.str = GreekStr
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6286
		{
			yyVAL.str = HebrewStr
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6290
		{
			yyVAL.str = Hp8Str
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6294
		{
			yyVAL.str = Keybcs2Str
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6298
		{
			yyVAL.str = Koi8rStr
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6302
		{
			yyVAL.str = Koi8uStr
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6306
		{
			yyVAL.str = Latin1Str
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6310
		{
			yyVAL.str = Latin2Str
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6314
		{
			yyVAL.str = Latin5Str
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6318
		{
			yyVAL.str = Latin7Str
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6322
		{
			yyVAL.str = MacceStr
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6326
		{
			yyVAL.str = MacromanStr
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6330
		{
			yyVAL.str = SjisStr
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6334
		{
			yyVAL.str = Swe7Str
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6338
		{
			yyVAL.str = Tis620Str
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6342
		{
			yyVAL.str = Ucs2Str
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6346
		{
			yyVAL.str = UjisStr
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6350
		{
			yyVAL.str = Utf16Str
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6354
		{
			yyVAL.str = Utf16leStr
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6358
		{
			yyVAL.str = Utf32Str
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6362
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6366
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6370
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6376
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6384
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6388
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6392
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6396
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6402
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6406
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6410
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6414
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6418
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6422
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6426
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6431
		{
			yyVAL.expr = nil
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6435
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6440
		{
			yyVAL.str = string("")
		}
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6444
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6450
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6454
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6460
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6465
		{
			yyVAL.expr = nil
		}
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6469
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6475
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6479
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6483
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6487
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6491
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6495
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6499
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6503
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6507
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6511
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6515
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6519
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6523
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6527
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6533
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6537
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6541
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6545
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6549
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6553
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6557
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6561
		{
			yyVAL.expr = &NullVal{}
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6567
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6571
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6575
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6580
		{
			yyVAL.exprs = nil
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6584
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6590
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6594
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6600
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6605
		{
			yyVAL.expr = nil
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6609
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6615
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6620
		{
			yyVAL.orderBy = nil
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6624
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6630
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6634
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6640
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6645
		{
			yyVAL.str = AscScr
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6649
		{
			yyVAL.str = AscScr
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6653
		{
			yyVAL.str = DescScr
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6658
		{
			yyVAL.limit = nil
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6662
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6666
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6670
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6676
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6680
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6685
		{
			yyVAL.str = ""
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6689
		{
			yyVAL.str = ForUpdateStr
		}
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6693
		{
			yyVAL.str = ShareModeStr
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6706
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6710
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6714
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6718
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6723
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6727
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6731
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6737
		{
			yyVAL.columns = nil
		}
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6741
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6747
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6751
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6757
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6761
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6765
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6769
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6773
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6777
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6782
		{
			yyVAL.assignExprs = nil
		}
	case 1361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6786
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6792
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6796
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6802
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6806
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6812
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6818
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6828
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6832
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6838
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6841
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6845
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6849
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6855
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6859
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6865
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6876
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6889
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6902
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6908
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6912
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6918
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6922
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6926
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6932
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6936
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6940
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6947
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6954
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6958
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6962
		{
			yyVAL.expr = &Default{}
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6971
		{
			yyVAL.byt = 0
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6973
		{
			yyVAL.byt = 1
		}
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6976
		{
			yyVAL.byt = 0
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6978
		{
			yyVAL.byt = 1
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6981
		{
			yyVAL.byt = 0
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6983
		{
			yyVAL.byt = 1
		}
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6986
		{
			yyVAL.str = ""
		}
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6988
		{
			yyVAL.str = IgnoreStr
		}
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6991
		{
			yyVAL.sqlVal = nil
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6993
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6995
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6999
		{
			yyVAL.empty = struct{}{}
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7001
		{
			yyVAL.empty = struct{}{}
		}
	case 1409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7004
		{
			yyVAL.empty = struct{}{}
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7006
		{
			yyVAL.empty = struct{}{}
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7008
		{
			yyVAL.empty = struct{}{}
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7012
		{
			yyVAL.str = UniqueStr
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7014
		{
			yyVAL.str = FulltextStr
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7016
		{
			yyVAL.str = SpatialStr
		}
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7019
		{
			yyVAL.str = ""
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7021
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7024
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7026
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7030
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7034
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7040
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7044
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7051
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7057
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7061
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7068
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7073
		{
			yyVAL.str = string("")
		}
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7075
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7078
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7080
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7083
		{
			yyVAL.EnclosedBy = nil
		}
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7087
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7092
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7096
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7101
		{
			yyVAL.sqlVal = nil
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7105
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7110
		{
			yyVAL.sqlVal = nil
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7114
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7119
		{
			yyVAL.Fields = nil
		}
	case 1442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7123
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7128
		{
			yyVAL.Lines = nil
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7132
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7137
		{
			yyVAL.sqlVal = nil
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7141
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7147
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7153
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7157
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7163
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7167
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7173
		{
			yyVAL.lockType = LockRead
		}
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7177
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7181
		{
			yyVAL.lockType = LockWrite
		}
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7185
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7191
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7197
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7201
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7205
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8060
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8069
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
