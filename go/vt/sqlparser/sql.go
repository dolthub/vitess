// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetDefOpt            *Charset
	collateDefOpt            *Collate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const EACH = 57517
const ROW = 57518
const BEFORE = 57519
const FOLLOWS = 57520
const PRECEDES = 57521
const DEFINER = 57522
const INVOKER = 57523
const INOUT = 57524
const OUT = 57525
const DETERMINISTIC = 57526
const CONTAINS = 57527
const READS = 57528
const MODIFIES = 57529
const SQL = 57530
const SECURITY = 57531
const TEMPORARY = 57532
const CLASS_ORIGIN = 57533
const SUBCLASS_ORIGIN = 57534
const MESSAGE_TEXT = 57535
const MYSQL_ERRNO = 57536
const CONSTRAINT_CATALOG = 57537
const CONSTRAINT_SCHEMA = 57538
const CONSTRAINT_NAME = 57539
const CATALOG_NAME = 57540
const SCHEMA_NAME = 57541
const TABLE_NAME = 57542
const COLUMN_NAME = 57543
const CURSOR_NAME = 57544
const SIGNAL = 57545
const RESIGNAL = 57546
const SQLSTATE = 57547
const DECLARE = 57548
const CONDITION = 57549
const CURSOR = 57550
const CONTINUE = 57551
const EXIT = 57552
const UNDO = 57553
const HANDLER = 57554
const FOUND = 57555
const SQLWARNING = 57556
const SQLEXCEPTION = 57557
const USER = 57558
const IDENTIFIED = 57559
const ROLE = 57560
const REUSE = 57561
const GRANT = 57562
const GRANTS = 57563
const REVOKE = 57564
const NONE = 57565
const ATTRIBUTE = 57566
const RANDOM = 57567
const PASSWORD = 57568
const INITIAL = 57569
const AUTHENTICATION = 57570
const SSL = 57571
const X509 = 57572
const CIPHER = 57573
const ISSUER = 57574
const SUBJECT = 57575
const ACCOUNT = 57576
const EXPIRE = 57577
const NEVER = 57578
const DAY = 57579
const OPTION = 57580
const OPTIONAL = 57581
const EXCEPT = 57582
const ADMIN = 57583
const PRIVILEGES = 57584
const MAX_QUERIES_PER_HOUR = 57585
const MAX_UPDATES_PER_HOUR = 57586
const MAX_CONNECTIONS_PER_HOUR = 57587
const MAX_USER_CONNECTIONS = 57588
const FLUSH = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const LOGS = 57606
const ENGINE = 57607
const ERROR = 57608
const GENERAL = 57609
const HOSTS = 57610
const OPTIMIZER_COSTS = 57611
const RELAY = 57612
const SLOW = 57613
const USER_RESOURCES = 57614
const NO_WRITE_TO_BINLOG = 57615
const CHANNEL = 57616
const BEGIN = 57617
const START = 57618
const TRANSACTION = 57619
const COMMIT = 57620
const ROLLBACK = 57621
const SAVEPOINT = 57622
const WORK = 57623
const RELEASE = 57624
const BIT = 57625
const TINYINT = 57626
const SMALLINT = 57627
const MEDIUMINT = 57628
const INT = 57629
const INTEGER = 57630
const BIGINT = 57631
const INTNUM = 57632
const SERIAL = 57633
const REAL = 57634
const DOUBLE = 57635
const FLOAT_TYPE = 57636
const DECIMAL = 57637
const NUMERIC = 57638
const DEC = 57639
const FIXED = 57640
const PRECISION = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const NVARCHAR = 57652
const NATIONAL = 57653
const VARYING = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const LONG = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const ENUM = 57665
const GEOMETRY = 57666
const POINT = 57667
const LINESTRING = 57668
const POLYGON = 57669
const GEOMETRYCOLLECTION = 57670
const MULTIPOINT = 57671
const MULTILINESTRING = 57672
const MULTIPOLYGON = 57673
const LOCAL = 57674
const LOW_PRIORITY = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const COLLATION = 57682
const DATABASES = 57683
const SCHEMAS = 57684
const TABLES = 57685
const FULL = 57686
const PROCESSLIST = 57687
const COLUMNS = 57688
const FIELDS = 57689
const ENGINES = 57690
const PLUGINS = 57691
const NAMES = 57692
const CHARSET = 57693
const GLOBAL = 57694
const SESSION = 57695
const ISOLATION = 57696
const LEVEL = 57697
const READ = 57698
const WRITE = 57699
const ONLY = 57700
const REPEATABLE = 57701
const COMMITTED = 57702
const UNCOMMITTED = 57703
const SERIALIZABLE = 57704
const CURRENT_TIMESTAMP = 57705
const DATABASE = 57706
const CURRENT_DATE = 57707
const CURRENT_USER = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const UTC_DATE = 57712
const UTC_TIME = 57713
const UTC_TIMESTAMP = 57714
const REPLACE = 57715
const CONVERT = 57716
const CAST = 57717
const SUBSTR = 57718
const SUBSTRING = 57719
const TRIM = 57720
const LEADING = 57721
const TRAILING = 57722
const BOTH = 57723
const GROUP_CONCAT = 57724
const SEPARATOR = 57725
const TIMESTAMPADD = 57726
const TIMESTAMPDIFF = 57727
const OVER = 57728
const WINDOW = 57729
const GROUPING = 57730
const CURRENT = 57731
const AVG = 57732
const BIT_AND = 57733
const BIT_OR = 57734
const BIT_XOR = 57735
const COUNT = 57736
const JSON_ARRAYAGG = 57737
const JSON_OBJECTAGG = 57738
const MAX = 57739
const MIN = 57740
const STDDEV_POP = 57741
const STDDEV = 57742
const STD = 57743
const STDDEV_SAMP = 57744
const SUM = 57745
const VAR_POP = 57746
const VARIANCE = 57747
const VAR_SAMP = 57748
const CUME_DIST = 57749
const DENSE_RANK = 57750
const FIRST_VALUE = 57751
const LAG = 57752
const LAST_VALUE = 57753
const LEAD = 57754
const NTH_VALUE = 57755
const NTILE = 57756
const ROW_NUMBER = 57757
const PERCENT_RANK = 57758
const RANK = 57759
const MATCH = 57760
const AGAINST = 57761
const BOOLEAN = 57762
const LANGUAGE = 57763
const WITH = 57764
const QUERY = 57765
const EXPANSION = 57766
const UNUSED = 57767
const ARRAY = 57768
const DESCRIPTION = 57769
const EMPTY = 57770
const JSON_TABLE = 57771
const LATERAL = 57772
const MEMBER = 57773
const RECURSIVE = 57774
const ACTIVE = 57775
const BUCKETS = 57776
const CLONE = 57777
const COMPONENT = 57778
const DEFINITION = 57779
const ENFORCED = 57780
const EXCLUDE = 57781
const GEOMCOLLECTION = 57782
const GET_MASTER_PUBLIC_KEY = 57783
const HISTOGRAM = 57784
const HISTORY = 57785
const INACTIVE = 57786
const INVISIBLE = 57787
const LOCKED = 57788
const MASTER_COMPRESSION_ALGORITHMS = 57789
const MASTER_PUBLIC_KEY_PATH = 57790
const MASTER_TLS_CIPHERSUITES = 57791
const MASTER_ZSTD_COMPRESSION_LEVEL = 57792
const NESTED = 57793
const NETWORK_NAMESPACE = 57794
const NOWAIT = 57795
const NULLS = 57796
const OJ = 57797
const OLD = 57798
const ORDINALITY = 57799
const ORGANIZATION = 57800
const OTHERS = 57801
const PATH = 57802
const PERSIST = 57803
const PERSIST_ONLY = 57804
const PRIVILEGE_CHECKS_USER = 57805
const PROCESS = 57806
const REFERENCE = 57807
const REQUIRE_ROW_FORMAT = 57808
const RESOURCE = 57809
const RESPECT = 57810
const RESTART = 57811
const RETAIN = 57812
const SECONDARY = 57813
const SECONDARY_ENGINE = 57814
const SECONDARY_LOAD = 57815
const SECONDARY_UNLOAD = 57816
const SKIP = 57817
const SRID = 57818
const THREAD_PRIORITY = 57819
const TIES = 57820
const VCPU = 57821
const VISIBLE = 57822
const SYSTEM = 57823
const INFILE = 57824
const NVAR = 57825
const PASSWORD_LOCK = 57826

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1043,
	-1, 43,
	147, 1107,
	148, 1125,
	-2, 231,
	-1, 49,
	186, 677,
	187, 677,
	-2, 667,
	-1, 547,
	135, 1135,
	-2, 1129,
	-1, 548,
	135, 1136,
	-2, 1130,
	-1, 639,
	98, 1413,
	135, 1413,
	-2, 1091,
	-1, 640,
	98, 1531,
	135, 1531,
	-2, 1092,
	-1, 645,
	98, 1437,
	135, 1437,
	-2, 1093,
	-1, 646,
	98, 1484,
	135, 1484,
	-2, 1094,
	-1, 647,
	98, 1485,
	135, 1485,
	-2, 1095,
	-1, 648,
	98, 1363,
	135, 1363,
	-2, 1099,
	-1, 650,
	98, 1461,
	135, 1461,
	-2, 1101,
	-1, 1149,
	1, 774,
	5, 774,
	12, 774,
	13, 774,
	14, 774,
	15, 774,
	17, 774,
	19, 774,
	30, 774,
	31, 774,
	56, 774,
	57, 774,
	58, 774,
	59, 774,
	60, 774,
	62, 774,
	63, 774,
	66, 774,
	67, 774,
	69, 774,
	70, 774,
	405, 774,
	503, 774,
	-2, 806,
	-1, 1155,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1400,
	135, 1138,
	-2, 1134,
	-1, 1545,
	44, 526,
	-2, 1375,
	-1, 1549,
	68, 524,
	72, 524,
	-2, 1407,
	-1, 1550,
	68, 526,
	-2, 1325,
	-1, 1553,
	68, 522,
	72, 522,
	-2, 1243,
	-1, 1554,
	68, 523,
	72, 523,
	-2, 1253,
	-1, 1674,
	44, 569,
	154, 571,
	156, 569,
	157, 569,
	-2, 604,
	-1, 1746,
	5, 51,
	-2, 872,
	-1, 2001,
	69, 1300,
	70, 1300,
	135, 1300,
	-2, 708,
	-1, 2024,
	1, 827,
	5, 827,
	12, 827,
	13, 827,
	14, 827,
	15, 827,
	17, 827,
	19, 827,
	30, 827,
	31, 827,
	56, 827,
	57, 827,
	58, 827,
	59, 827,
	60, 827,
	62, 827,
	63, 827,
	66, 827,
	67, 827,
	69, 827,
	70, 827,
	405, 827,
	503, 827,
	-2, 806,
	-1, 2131,
	154, 572,
	-2, 570,
	-1, 2169,
	5, 51,
	-2, 1063,
	-1, 2360,
	41, 1145,
	-2, 1143,
	-1, 2485,
	5, 51,
	-2, 1066,
}

const yyPrivate = 57344

const yyLast = 33156

var yyAct = [...]int{
	611, 80, 2673, 2625, 2648, 2502, 2638, 2534, 2471, 2488,
	2627, 545, 2639, 1969, 419, 2527, 857, 2406, 7, 2380,
	1598, 2403, 3, 2501, 2546, 2469, 2181, 550, 2407, 8,
	2038, 2476, 2532, 2360, 2405, 6, 2404, 5, 2018, 2307,
	1760, 553, 1115, 1497, 2279, 1790, 1943, 1994, 1596, 1555,
	1952, 2362, 539, 83, 664, 1611, 2091, 1503, 2231, 2237,
	1501, 2215, 1378, 2260, 2125, 2039, 1817, 532, 402, 405,
	1995, 2489, 889, 2115, 1951, 1876, 565, 1761, 1536, 93,
	1697, 80, 450, 444, 444, 1991, 2003, 1811, 106, 1276,
	1673, 610, 465, 1436, 1535, 1546, 1600, 1371, 873, 1637,
	2010, 1278, 531, 659, 1386, 1186, 1525, 1434, 1474, 1321,
	1542, 1294, 662, 1857, 1152, 1256, 1480, 1487, 1015, 1146,
	1402, 1583, 641, 1018, 1149, 1166, 1022, 939, 918, 658,
	637, 1145, 535, 644, 1118, 1165, 633, 1035, 1653, 1587,
	464, 638, 1326, 422, 421, 844, 1921, 630, 1157, 1119,
	2695, 85, 2691, 1275, 2681, 2663, 2661, 2643, 1818, 2620,
	2554, 82, 124, 1319, 2339, 917, 462, 1026, 2074, 2207,
	414, 401, 1624, 69, 437, 555, 431, 442, 425, 2518,
	2337, 541, 1624, 2088, 2449, 2352, 2472, 391, 2216, 87,
	88, 89, 90, 91, 1719, 2340, 2218, 2538, 36, 432,
	843, 36, 36, 856, 1652, 632, 36, 2538, 2033, 656,
	1887, 1008, 612, 842, 618, 620, 619, 616, 617, 615,
	614, 613, 1755, 2533, 2034, 2035, 36, 854, 72, 39,
	40, 2535, 1521, 2199, 2200, 1522, 1523, 1342, 868, 1756,
	967, 2535, 2292, 1499, 975, 1799, 1325, 846, 1798, 849,
	850, 1800, 1367, 1368, 413, 1167, 2539, 1168, 1537, 412,
	81, 1840, 1962, 81, 81, 1557, 2539, 654, 81, 1323,
	1324, 2221, 72, 39, 40, 893, 894, 1572, 1651, 454,
	892, 936, 1559, 877, 878, 369, 416, 880, 81, 1559,
	1563, 1565, 372, 1564, 41, 118, 114, 115, 1577, 116,
	1572, 381, 389, 390, 396, 1584, 424, 423, 426, 2219,
	2220, 2222, 2223, 2224, 548, 1322, 430, 411, 461, 1306,
	879, 1918, 902, 1681, 1675, 1676, 1363, 1674, 1677, 1678,
	1362, 120, 119, 434, 989, 1361, 378, 438, 455, 379,
	1360, 1359, 387, 388, 1358, 971, 972, 951, 1882, 1910,
	2232, 441, 2508, 2556, 660, 2633, 2365, 2114, 2235, 2453,
	1915, 982, 127, 1682, 983, 127, 1664, 2555, 109, 2098,
	2249, 127, 2233, 2234, 2256, 2238, 2239, 2240, 2241, 2334,
	1831, 447, 447, 121, 1886, 122, 1665, 899, 2338, 999,
	1571, 951, 2451, 384, 127, 1836, 1835, 1353, 2562, 80,
	80, 1884, 1612, 2652, 2551, 127, 2247, 2356, 2101, 127,
	667, 99, 2443, 127, 385, 2622, 907, 1832, 1471, 2506,
	906, 910, 2092, 2093, 2094, 2095, 2096, 127, 447, 2332,
	667, 112, 1838, 909, 1824, 908, 2549, 2550, 127, 2331,
	1825, 2330, 427, 428, 429, 435, 1332, 439, 440, 443,
	2329, 2328, 397, 974, 2326, 900, 901, 890, 1004, 891,
	893, 894, 2327, 995, 406, 2576, 1012, 2439, 2440, 1606,
	101, 2543, 2544, 2401, 98, 2490, 2183, 1781, 2636, 370,
	111, 110, 2604, 870, 2399, 994, 990, 991, 992, 993,
	996, 997, 998, 1000, 2089, 403, 1605, 1901, 1902, 888,
	2092, 2093, 2094, 2095, 2096, 1834, 407, 885, 1837, 848,
	847, 884, 383, 373, 374, 2687, 394, 2445, 113, 876,
	375, 377, 107, 371, 393, 392, 1185, 940, 1927, 2536,
	399, 117, 108, 886, 887, 2073, 415, 1680, 2130, 2536,
	2335, 1885, 2677, 2116, 1847, 1307, 2217, 1070, 903, 950,
	1072, 1562, 1185, 1658, 1586, 984, 1929, 2616, 103, 961,
	104, 2450, 1158, 404, 1185, 400, 386, 1184, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 2355, 2100, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1001, 2353,
	1113, 73, 1117, 1120, 1120, 1120, 1126, 1120, 1120, 1126,
	1120, 1126, 1135, 1136, 1137, 1138, 1139, 1140, 1023, 1150,
	1010, 1003, 79, 1114, 1888, 79, 79, 2444, 1042, 2631,
	79, 2696, 2626, 1325, 951, 2693, 404, 2507, 2261, 2262,
	433, 2682, 2664, 1877, 1621, 73, 2629, 404, 1327, 1620,
	79, 36, 37, 72, 39, 40, 1323, 1324, 2308, 1816,
	1506, 1508, 1144, 2675, 845, 59, 2676, 859, 2674, 644,
	2455, 78, 2310, 127, 644, 41, 63, 64, 947, 1878,
	2271, 460, 60, 1329, 2272, 1940, 1328, 1909, 2042, 1816,
	1906, 1890, 109, 1185, 1833, 1116, 100, 1929, 1179, 1889,
	1659, 1264, 1262, 904, 1249, 1904, 1816, 1816, 1816, 50,
	1788, 1787, 1786, 81, 1007, 1071, 958, 127, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	841, 851, 1143, 1821, 1155, 368, 2156, 2275, 1121, 1123,
	1125, 1127, 1129, 1131, 1132, 1134, 1073, 1074, 1507, 2309,
	1170, 2148, 1183, 1122, 1124, 1171, 1128, 1130, 1908, 1133,
	946, 1907, 1815, 1803, 1245, 1795, 1714, 1156, 127, 1927,
	1161, 1879, 1880, 1185, 956, 1702, 1928, 1929, 1687, 1526,
	404, 1381, 1178, 43, 74, 46, 45, 48, 1163, 2628,
	2630, 1041, 1815, 869, 1153, 2063, 1061, 1180, 1935, 1927,
	957, 2448, 953, 1932, 111, 110, 1931, 1934, 2270, 1815,
	1815, 1815, 2110, 1939, 49, 77, 76, 1936, 1558, 1051,
	1517, 47, 1061, 96, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1051, 1304, 1374, 1061, 65, 954, 955, 2577, 2578,
	1054, 1055, 1056, 1057, 1058, 1051, 1038, 2276, 1061, 2574,
	2575, 2482, 2481, 1409, 2064, 1258, 2470, 444, 2286, 1946,
	1481, 1295, 1032, 1628, 1506, 1508, 57, 58, 1407, 1408,
	1406, 2342, 1277, 882, 444, 1034, 2667, 2649, 2666, 1034,
	2547, 1944, 2585, 66, 2584, 67, 96, 1050, 1049, 1059,
	1060, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1051, 1301,
	2008, 1061, 2007, 858, 1314, 2343, 1176, 911, 852, 2680,
	68, 2617, 1251, 2607, 1280, 2248, 1050, 1049, 1059, 1060,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1051, 2242, 1257,
	1061, 95, 127, 127, 127, 1029, 875, 2688, 51, 75,
	1013, 53, 54, 61, 1638, 62, 1033, 1032, 667, 895,
	2050, 1014, 1507, 2684, 444, 2511, 2597, 459, 1296, 1283,
	1629, 1281, 1019, 632, 1034, 1020, 1270, 1317, 2503, 94,
	883, 1033, 1032, 1290, 1291, 1292, 1293, 2547, 1302, 1300,
	1699, 1700, 1701, 1286, 1287, 1288, 1289, 1259, 1351, 1034,
	1383, 2689, 1298, 2486, 1299, 80, 1266, 1050, 1049, 1059,
	1060, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1051, 1033,
	1032, 1061, 1284, 1285, 1384, 2350, 1365, 1385, 1116, 551,
	861, 862, 863, 864, 865, 866, 867, 1034, 1335, 1961,
	874, 1379, 1380, 1392, 1394, 1395, 73, 2349, 2348, 1393,
	2347, 2504, 2341, 897, 2206, 1401, 627, 628, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 80, 1033, 1032, 2205, 1357, 1309, 1310,
	1862, 2619, 1312, 2446, 1860, 1841, 942, 1330, 81, 941,
	1331, 1334, 1034, 2596, 1114, 79, 1400, 2505, 1315, 1405,
	1333, 1429, 1430, 1033, 1032, 1033, 1032, 2559, 1801, 467,
	1802, 2557, 2548, 1863, 1426, 915, 1427, 1014, 1117, 2517,
	2442, 1034, 1366, 1034, 2441, 1352, 1389, 1390, 1355, 2447,
	1033, 1032, 1472, 2398, 1364, 2357, 1403, 2325, 914, 1470,
	1356, 2245, 2244, 1398, 2243, 1388, 2203, 2121, 1034, 2056,
	1369, 1500, 1858, 1648, 1311, 1509, 667, 1282, 1150, 2583,
	2582, 2452, 1150, 2396, 447, 447, 2374, 1821, 2368, 2268,
	2159, 2144, 1114, 127, 1396, 2140, 127, 2132, 2102, 2086,
	2085, 447, 447, 2084, 127, 1895, 1894, 1642, 1597, 1626,
	1625, 1428, 1308, 127, 127, 127, 127, 1305, 1443, 1274,
	1273, 1512, 1447, 1272, 1271, 1514, 644, 1260, 1254, 1253,
	1252, 1116, 1250, 447, 937, 871, 410, 408, 1280, 1791,
	1404, 570, 569, 572, 573, 574, 575, 2299, 2609, 1496,
	571, 576, 1265, 1400, 1059, 1060, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1051, 981, 1505, 1061, 1532, 2192, 2603,
	2367, 1432, 2524, 1014, 2319, 1440, 2318, 1482, 2192, 2522,
	2081, 447, 447, 447, 1449, 1450, 667, 2192, 2520, 2057,
	1529, 1372, 1510, 1513, 2192, 2400, 1484, 1462, 2299, 2392,
	1531, 1466, 1618, 2299, 2315, 1610, 1543, 2299, 1014, 2299,
	2298, 2192, 2191, 2173, 1014, 1519, 447, 1245, 947, 1515,
	1399, 447, 447, 2569, 1126, 1524, 1518, 1686, 1014, 2150,
	1791, 2366, 1540, 1533, 2071, 2070, 2067, 2068, 2067, 2066,
	1712, 1014, 127, 2006, 127, 1609, 1153, 667, 1489, 1492,
	1493, 1494, 1490, 1153, 1491, 1495, 1159, 1153, 2011, 2012,
	1595, 1551, 1644, 1484, 1014, 127, 1661, 1660, 1511, 1603,
	1158, 1038, 1992, 1616, 1617, 2006, 1593, 1594, 986, 1585,
	1468, 1645, 1468, 1014, 1599, 1182, 1181, 2151, 1159, 2151,
	1791, 1684, 985, 1468, 1613, 945, 1614, 1615, 1483, 1589,
	1590, 1591, 1592, 1622, 944, 2529, 2167, 945, 1376, 1624,
	2082, 2069, 1160, 1630, 1162, 2020, 1920, 667, 1636, 1805,
	1703, 1049, 1059, 1060, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1051, 1633, 609, 1061, 1650, 947, 1484, 1520, 1705,
	1706, 1707, 667, 667, 1160, 1712, 1158, 2006, 1739, 1738,
	1313, 1623, 1377, 1009, 1354, 940, 1400, 1530, 1640, 1375,
	1320, 660, 1643, 1489, 1492, 1493, 1494, 1490, 1649, 1491,
	1495, 1263, 1261, 1164, 655, 418, 81, 127, 2541, 2521,
	2019, 2373, 2371, 2208, 1559, 127, 2179, 127, 2049, 1656,
	1584, 1023, 127, 127, 2011, 2012, 127, 127, 127, 1809,
	951, 1757, 1759, 1531, 1607, 1150, 1150, 1150, 1150, 1150,
	1588, 1663, 1579, 467, 1666, 1683, 667, 667, 1403, 1689,
	1690, 1500, 1758, 1782, 1691, 651, 1578, 1441, 1442, 663,
	1708, 1246, 1150, 934, 1639, 2658, 81, 2656, 1452, 1453,
	1454, 1455, 1470, 449, 2640, 1762, 2080, 1704, 2014, 860,
	1992, 1864, 1670, 1467, 1469, 1268, 987, 948, 1763, 943,
	1773, 1775, 1771, 1493, 1494, 1774, 1153, 1772, 1698, 2017,
	2016, 1770, 1769, 536, 537, 1792, 1949, 1688, 1793, 1387,
	1794, 644, 1745, 1785, 127, 2568, 2170, 1696, 1695, 1027,
	1028, 1039, 2289, 2267, 127, 1744, 127, 127, 447, 447,
	447, 2195, 1404, 127, 2139, 2138, 1823, 2055, 2054, 1777,
	2053, 1813, 2457, 1573, 1574, 1575, 1576, 1784, 1025, 80,
	2044, 2460, 2516, 2515, 2361, 1765, 1766, 2558, 1768, 2359,
	127, 127, 127, 1776, 1806, 2438, 1764, 2437, 1789, 1767,
	1866, 409, 1050, 1049, 1059, 1060, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1051, 1898, 127, 1061, 127, 1820, 1822,
	1399, 667, 1170, 1016, 1808, 667, 1796, 2344, 2345, 1851,
	1899, 1804, 1177, 932, 1900, 1017, 444, 916, 1245, 913,
	1153, 1153, 1153, 1153, 1153, 912, 872, 667, 2592, 2378,
	667, 2377, 1601, 1893, 2165, 2277, 1153, 1647, 1850, 1602,
	1852, 1853, 1854, 1855, 1267, 80, 2591, 1153, 1379, 1380,
	2250, 1244, 2570, 1859, 2509, 2363, 1867, 2251, 1635, 1257,
	1027, 1028, 2590, 96, 1718, 1720, 1114, 1814, 1861, 1819,
	1370, 1248, 1475, 2589, 1892, 1730, 1731, 1732, 1733, 2322,
	1970, 1958, 1694, 1641, 533, 1883, 1005, 1006, 1669, 898,
	1693, 2561, 2560, 1897, 2513, 2461, 2386, 2382, 1891, 534,
	84, 2381, 2280, 1791, 2119, 1896, 1871, 1872, 1873, 2659,
	1984, 1985, 2660, 2659, 458, 1916, 1914, 1997, 80, 1913,
	1905, 1667, 1297, 1903, 1030, 2660, 2389, 2052, 1373, 1400,
	655, 456, 2417, 52, 86, 1919, 2419, 19, 1925, 1998,
	2418, 18, 2022, 55, 1671, 1924, 1, 2026, 2027, 2028,
	1685, 2420, 20, 2421, 21, 2024, 1993, 1762, 1657, 127,
	127, 127, 127, 127, 1337, 1956, 2005, 1950, 2416, 15,
	1763, 127, 1955, 1911, 2230, 127, 1964, 2415, 14, 127,
	1960, 1917, 1930, 2229, 1941, 1942, 127, 2236, 1945, 2409,
	10, 2432, 34, 1922, 1933, 1938, 2430, 33, 2032, 2429,
	32, 2087, 2025, 2051, 2030, 2428, 28, 1710, 1996, 2090,
	667, 1881, 1713, 2427, 27, 2000, 2246, 1715, 1716, 2426,
	26, 1255, 1721, 1722, 1723, 1724, 1725, 1726, 2015, 2023,
	1729, 2424, 23, 2021, 2333, 1734, 1735, 1736, 1737, 2163,
	2423, 22, 1741, 1742, 1743, 2031, 2037, 2076, 2077, 1746,
	855, 1747, 1748, 1749, 1608, 1750, 1751, 1752, 1753, 2097,
	2036, 444, 2046, 2425, 24, 2047, 2043, 2048, 2045, 938,
	2106, 2514, 667, 2414, 13, 2456, 1778, 1779, 2411, 12,
	2410, 11, 2458, 1593, 447, 1594, 1050, 1049, 1059, 1060,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1051, 127, 447,
	1061, 2358, 2099, 2408, 9, 1947, 1948, 2252, 2214, 2058,
	2059, 1842, 1843, 2213, 447, 1875, 2062, 1874, 1849, 933,
	1318, 1954, 1923, 2065, 1926, 2078, 2079, 1619, 1856, 2154,
	1679, 2468, 1668, 1399, 447, 988, 667, 1544, 1534, 2075,
	2104, 657, 447, 2083, 1971, 92, 1627, 1974, 1975, 1976,
	881, 1868, 1979, 376, 1869, 2105, 1541, 2149, 1829, 2459,
	2122, 667, 667, 935, 2103, 2152, 2143, 127, 1828, 1839,
	2128, 2123, 2129, 1556, 1827, 1826, 1372, 667, 2454, 2108,
	1830, 1190, 1560, 1561, 1188, 1566, 1567, 1568, 1569, 1570,
	1189, 1187, 1192, 1191, 667, 380, 1425, 2145, 1172, 467,
	2496, 1245, 2158, 1580, 1581, 1582, 541, 1031, 1762, 102,
	56, 651, 2141, 2187, 2188, 2189, 651, 1173, 2269, 2174,
	2109, 1763, 1954, 2113, 1937, 452, 1039, 2117, 2118, 453,
	2120, 97, 667, 105, 667, 382, 2197, 1069, 80, 2166,
	1692, 1797, 2185, 642, 2175, 643, 635, 1011, 2480, 2526,
	2542, 1116, 1021, 2473, 554, 1780, 2285, 667, 2190, 2209,
	2475, 2176, 2177, 1391, 2186, 2178, 568, 567, 2180, 566,
	564, 2196, 2537, 1634, 1382, 1806, 1116, 1754, 667, 1043,
	667, 2072, 667, 552, 667, 543, 1148, 1141, 1646, 2198,
	1959, 1488, 1486, 1485, 1269, 631, 1967, 2013, 2009, 1498,
	1147, 1151, 70, 896, 398, 38, 1977, 1978, 457, 538,
	25, 1150, 17, 905, 16, 1672, 853, 42, 2225, 1986,
	44, 1870, 1604, 1990, 2495, 2624, 919, 2201, 1997, 2647,
	2545, 1997, 2294, 31, 2287, 2288, 1999, 2265, 30, 127,
	2253, 29, 467, 2254, 2022, 2210, 2211, 2255, 2422, 2259,
	2226, 2227, 2228, 2293, 2281, 2212, 2266, 2258, 2431, 447,
	1107, 1108, 2282, 2283, 127, 447, 2297, 2273, 2029, 2274,
	2413, 2412, 2611, 2610, 1244, 4, 1002, 71, 2291, 127,
	35, 447, 653, 667, 447, 2, 0, 2043, 447, 447,
	2321, 447, 2263, 2264, 2323, 2060, 0, 0, 2290, 2320,
	0, 0, 2296, 0, 1593, 2301, 0, 0, 667, 0,
	0, 0, 127, 667, 0, 1247, 2312, 2313, 2311, 1996,
	667, 667, 1996, 2306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2257, 0, 2300, 2324, 1505, 2379, 2302,
	0, 0, 0, 0, 2314, 0, 0, 0, 0, 2336,
	0, 0, 0, 1997, 2107, 80, 2346, 0, 0, 2351,
	0, 0, 0, 0, 2354, 0, 0, 2364, 0, 2316,
	0, 2317, 0, 2369, 2370, 0, 2391, 127, 0, 0,
	0, 0, 0, 0, 80, 0, 1153, 2383, 0, 2402,
	0, 0, 0, 0, 667, 2384, 0, 0, 2376, 2385,
	2390, 667, 667, 667, 0, 0, 2395, 0, 0, 0,
	0, 667, 467, 0, 2372, 0, 2397, 0, 0, 0,
	2394, 0, 0, 0, 667, 1338, 0, 1150, 0, 0,
	0, 0, 0, 0, 2153, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 2467,
	0, 1844, 1845, 1846, 1848, 127, 0, 0, 0, 0,
	0, 0, 2464, 0, 2466, 0, 0, 2278, 0, 0,
	2463, 0, 0, 0, 0, 1954, 2168, 2169, 0, 2171,
	0, 2465, 2172, 2491, 0, 0, 663, 0, 2478, 2483,
	2484, 1762, 0, 0, 447, 2479, 0, 80, 0, 0,
	0, 0, 2184, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 2462, 0, 663, 0, 2202, 0, 2204,
	0, 0, 0, 667, 0, 127, 0, 0, 0, 0,
	0, 667, 0, 0, 0, 2474, 2477, 0, 0, 0,
	1116, 0, 0, 0, 0, 0, 0, 0, 667, 0,
	2512, 0, 0, 2510, 667, 0, 1431, 0, 2530, 127,
	949, 127, 0, 0, 0, 0, 0, 667, 0, 2519,
	0, 0, 0, 0, 2487, 2540, 0, 0, 0, 0,
	0, 1460, 1461, 667, 0, 0, 467, 2492, 2493, 2395,
	2564, 0, 2566, 0, 467, 0, 0, 0, 0, 2572,
	0, 2573, 1153, 0, 0, 0, 0, 0, 0, 80,
	2567, 0, 2565, 0, 0, 80, 0, 0, 0, 0,
	2595, 2571, 0, 2581, 2563, 0, 0, 2579, 2580, 0,
	2586, 1970, 2588, 0, 0, 1812, 0, 2601, 651, 444,
	0, 0, 0, 2602, 2606, 2605, 80, 667, 0, 0,
	0, 80, 663, 0, 0, 663, 663, 0, 0, 2615,
	2621, 0, 2552, 0, 2632, 0, 2303, 2304, 2305, 2618,
	2612, 2634, 2623, 2635, 667, 2637, 2614, 80, 2613, 0,
	80, 80, 0, 2477, 0, 80, 2595, 0, 0, 0,
	2650, 2641, 0, 0, 0, 0, 0, 2654, 0, 0,
	2642, 2587, 0, 2644, 80, 0, 2657, 80, 2653, 2595,
	444, 2655, 2668, 0, 1024, 2670, 0, 0, 0, 0,
	0, 0, 80, 2678, 80, 0, 2671, 2595, 80, 2595,
	2665, 2162, 0, 0, 0, 0, 2061, 0, 447, 0,
	0, 127, 80, 0, 0, 80, 667, 2595, 667, 0,
	0, 2683, 80, 0, 2500, 0, 80, 2595, 0, 0,
	0, 2595, 125, 0, 0, 395, 2387, 2388, 2692, 0,
	0, 125, 0, 0, 127, 0, 0, 0, 1050, 1049,
	1059, 1060, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1051,
	0, 0, 1061, 0, 466, 0, 0, 0, 0, 0,
	1655, 0, 542, 2669, 1655, 634, 652, 0, 0, 125,
	667, 0, 0, 125, 0, 1965, 1966, 0, 0, 0,
	0, 0, 1972, 1973, 0, 0, 1655, 125, 0, 1655,
	0, 0, 0, 0, 1980, 1981, 1982, 1983, 125, 0,
	0, 1987, 1988, 1989, 0, 667, 0, 667, 0, 0,
	0, 0, 0, 0, 0, 663, 0, 1433, 1438, 1439,
	0, 0, 0, 0, 1444, 1445, 1446, 0, 1448, 0,
	2485, 1451, 2593, 0, 0, 0, 1456, 1457, 1458, 1459,
	0, 0, 0, 1463, 1464, 1465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 1473, 0,
	1476, 1477, 1478, 1479, 0, 0, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 2193,
	2194, 0, 1957, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 667, 0, 0, 2523, 0, 0,
	0, 0, 0, 0, 667, 0, 0, 651, 0, 2531,
	1050, 1049, 1059, 1060, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1051, 0, 0, 1061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 952, 959, 960, 962, 963,
	964, 965, 966, 651, 968, 969, 970, 0, 973, 0,
	976, 977, 978, 979, 980, 0, 0, 0, 447, 663,
	0, 2127, 0, 0, 0, 1045, 0, 1048, 1812, 0,
	1212, 2134, 2136, 0, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 2127, 1046, 1047, 1044, 0, 0, 0, 0, 0,
	0, 0, 1050, 1049, 1059, 1060, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1051, 0, 0, 1061, 0, 0, 2155,
	0, 0, 0, 0, 0, 1709, 0, 2157, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 2160, 2161, 0,
	0, 0, 0, 125, 0, 0, 2164, 0, 0, 0,
	0, 0, 467, 1050, 1049, 1059, 1060, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1051, 0, 0, 1061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 1912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2685, 2686, 0, 0, 0, 0, 0, 0, 0, 0,
	663, 663, 1213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 663, 0, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 663, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 0, 0, 1717, 2127, 0, 0, 0, 0, 0,
	0, 0, 1727, 1728, 0, 0, 0, 0, 0, 651,
	0, 663, 0, 2004, 2127, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 0, 467, 663, 0, 663,
	0, 663, 2041, 2040, 0, 0, 0, 0, 0, 0,
	0, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 2041, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 0, 1214, 1215,
	1216, 1217, 1193, 1197, 1227, 1194, 1200, 1196, 1198, 1195,
	0, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	0, 0, 125, 125, 125, 0, 0, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2137, 0, 0,
	0, 0, 2142, 0, 0, 0, 0, 0, 0, 2146,
	2147, 0, 0, 0, 0, 0, 0, 36, 1228, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	2651, 0, 0, 2182, 0, 0, 0, 0, 0, 0,
	2182, 2182, 2182, 0, 0, 0, 0, 0, 0, 0,
	663, 1336, 0, 2433, 1339, 1340, 1341, 0, 1343, 1344,
	0, 0, 1345, 2182, 0, 0, 0, 0, 1346, 0,
	0, 0, 1347, 1348, 0, 1349, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 2434, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 0, 0, 0, 0,
	49, 77, 76, 125, 125, 125, 125, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 663, 0, 0, 0, 0, 0, 0, 0,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 58, 0, 2435, 0, 2295, 0, 0,
	0, 0, 0, 2182, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2436, 75, 0, 53, 54, 61,
	0, 62, 125, 0, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 2375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1437,
	1437, 1437, 0, 0, 0, 1437, 1437, 1437, 1437, 1437,
	1437, 0, 73, 1437, 0, 0, 0, 0, 1437, 1437,
	1437, 1437, 0, 0, 0, 1437, 1437, 1437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 2040, 0, 0,
	1437, 1437, 1437, 1437, 1437, 1437, 0, 125, 0, 0,
	0, 79, 0, 651, 0, 125, 0, 466, 0, 0,
	0, 0, 125, 125, 0, 0, 125, 1516, 1279, 652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1662, 0, 0, 0, 0, 0, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2525, 0, 2528, 0, 0, 0,
	0, 0, 0, 0, 2131, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 125, 125, 0, 482,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 1632, 125, 0, 0, 2182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 466, 0, 0,
	0, 1185, 0, 2528, 0, 0, 0, 0, 0, 488,
	470, 0, 0, 2608, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 0,
	0, 483, 0, 477, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 504, 471, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1437, 486, 510,
	0, 0, 0, 0, 0, 1437, 484, 485, 487, 514,
	0, 516, 522, 0, 1437, 1437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1437, 0, 0,
	0, 1437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 652, 125,
	125, 125, 125, 125, 0, 0, 0, 0, 0, 0,
	0, 466, 0, 0, 0, 125, 0, 0, 0, 466,
	0, 0, 0, 0, 1437, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 652, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 0,
	0, 0, 526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 2124,
	0, 0, 0, 2126, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 509, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1437, 0,
	0, 0, 0, 0, 0, 0, 0, 1437, 0, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 488, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 0, 0,
	483, 0, 477, 0, 0, 0, 0, 491, 0, 0,
	652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 504, 471, 0, 508, 0, 1212, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 510, 0,
	0, 0, 0, 0, 0, 484, 485, 487, 514, 0,
	516, 522, 0, 0, 0, 0, 2553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 125,
	0, 0, 0, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 1213,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 523, 524, 0, 0, 0, 480, 473,
	474, 475, 476, 478, 497, 498, 502, 503, 520, 519,
	518, 521, 525, 528, 527, 529, 479, 481, 489, 499,
	500, 501, 505, 506, 515, 511, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 0, 0,
	0, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 1229,
	1230, 1231, 1232, 1233, 1234, 125, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 0, 1214, 1215, 1216, 1217, 1193,
	1197, 1227, 1194, 1200, 1196, 1198, 1195, 0, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	0, 466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	822, 798, 330, 743, 825, 701, 727, 838, 731, 735,
	778, 684, 756, 256, 723, 685, 0, 705, 674, 715,
	675, 702, 745, 176, 700, 800, 759, 824, 213, 773,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 823,
	751, 125, 832, 216, 0, 768, 833, 317, 240, 0,
	0, 747, 809, 754, 796, 742, 780, 693, 767, 827,
	724, 775, 828, 0, 652, 0, 0, 2494, 0, 0,
	0, 0, 0, 0, 125, 0, 688, 0, 771, 821,
	718, 774, 777, 672, 770, 0, 679, 686, 837, 816,
	708, 709, 710, 0, 0, 0, 0, 0, 0, 0,
	746, 755, 790, 739, 349, 267, 284, 305, 733, 275,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	0, 765, 0, 0, 0, 687, 680, 0, 0, 744,
	0, 0, 0, 692, 671, 707, 792, 0, 669, 241,
	144, 797, 815, 741, 204, 360, 819, 738, 737, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	789, 299, 720, 670, 801, 703, 716, 167, 712, 291,
	260, 348, 725, 762, 290, 217, 338, 785, 820, 347,
	729, 804, 357, 362, 711, 752, 690, 314, 177, 0,
	133, 722, 274, 172, 209, 740, 779, 704, 164, 787,
	766, 803, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 2497, 2498, 2499, 734, 726, 0, 0, 353,
	736, 302, 301, 730, 199, 795, 769, 676, 283, 782,
	205, 132, 327, 365, 150, 211, 332, 668, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 717, 784, 794, 281, 304, 334, 152, 321, 713,
	714, 719, 791, 293, 802, 813, 826, 224, 179, 182,
	193, 200, 776, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 677, 0,
	319, 351, 367, 154, 699, 307, 333, 728, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 697, 698, 695, 0,
	696, 757, 758, 829, 830, 831, 793, 689, 0, 810,
	811, 0, 0, 0, 0, 0, 799, 817, 818, 781,
	839, 732, 694, 678, 681, 682, 683, 691, 748, 749,
	761, 764, 807, 806, 805, 808, 812, 835, 834, 836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 760, 131, 140, 215, 840, 282, 185, 352, 673,
	174, 0, 750, 753, 763, 788, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 786, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 814, 0, 772, 783, 822, 798,
	330, 743, 825, 701, 727, 838, 731, 735, 778, 684,
	756, 256, 723, 685, 0, 705, 674, 715, 675, 702,
	745, 176, 700, 800, 759, 824, 213, 773, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 823, 751, 0,
	832, 216, 0, 768, 833, 317, 240, 0, 0, 747,
	809, 754, 796, 742, 780, 693, 767, 827, 724, 775,
	828, 0, 0, 0, 0, 666, 0, 1538, 1539, 0,
	0, 0, 0, 0, 688, 0, 771, 821, 718, 774,
	777, 672, 770, 0, 679, 686, 837, 816, 708, 709,
	710, 1807, 0, 0, 0, 0, 0, 0, 746, 755,
	790, 739, 349, 267, 284, 305, 733, 275, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 765,
	0, 0, 0, 687, 680, 0, 0, 744, 0, 0,
	0, 692, 671, 707, 792, 0, 669, 241, 144, 797,
	815, 741, 204, 360, 819, 738, 737, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 789, 299,
	720, 670, 801, 703, 716, 167, 712, 291, 260, 348,
	725, 762, 290, 217, 338, 785, 820, 347, 729, 804,
	357, 362, 711, 752, 690, 314, 177, 0, 133, 722,
	274, 172, 209, 740, 779, 704, 164, 787, 766, 803,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 734, 726, 0, 0, 353, 736, 302,
	301, 730, 199, 795, 769, 676, 283, 782, 205, 132,
	327, 365, 150, 211, 332, 668, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 717,
	784, 794, 281, 304, 334, 152, 321, 713, 714, 719,
	791, 293, 802, 813, 826, 224, 179, 182, 193, 200,
	776, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 677, 0, 319, 351,
	367, 154, 699, 307, 333, 728, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 697, 698, 695, 0, 696, 757,
	758, 829, 830, 831, 793, 689, 0, 810, 811, 0,
	0, 0, 0, 0, 799, 817, 818, 781, 839, 732,
	694, 678, 681, 682, 683, 691, 748, 749, 761, 764,
	807, 806, 805, 808, 812, 835, 834, 836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 760,
	131, 140, 215, 840, 282, 185, 352, 673, 174, 0,
	750, 753, 763, 788, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 786, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 814, 0, 772, 783, 822, 798, 330, 743,
	825, 701, 727, 838, 731, 735, 778, 684, 756, 256,
	723, 685, 0, 705, 674, 715, 675, 702, 745, 176,
	700, 800, 759, 824, 213, 773, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 823, 751, 0, 832, 216,
	0, 768, 833, 317, 240, 0, 0, 747, 809, 754,
	796, 742, 780, 693, 767, 827, 724, 775, 828, 0,
	0, 0, 0, 666, 0, 1538, 1539, 0, 0, 0,
	0, 0, 688, 0, 771, 821, 718, 774, 777, 672,
	770, 0, 679, 686, 837, 816, 708, 709, 710, 0,
	0, 0, 0, 0, 0, 0, 746, 755, 790, 739,
	349, 267, 284, 305, 733, 275, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 706, 0, 765, 0, 0,
	0, 687, 680, 0, 0, 744, 0, 0, 0, 692,
	671, 707, 792, 0, 669, 241, 144, 797, 815, 741,
	204, 360, 819, 738, 737, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 789, 299, 720, 670,
	801, 703, 716, 167, 712, 291, 260, 348, 725, 762,
	290, 217, 338, 785, 820, 347, 729, 804, 357, 362,
	711, 752, 690, 314, 177, 0, 133, 722, 274, 172,
	209, 740, 779, 704, 164, 787, 766, 803, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 734, 726, 0, 0, 353, 736, 302, 301, 730,
	199, 795, 769, 676, 283, 782, 205, 132, 327, 365,
	150, 211, 332, 668, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 717, 784, 794,
	281, 304, 334, 152, 321, 713, 714, 719, 791, 293,
	802, 813, 826, 224, 179, 182, 193, 200, 776, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 677, 0, 319, 351, 367, 154,
	699, 307, 333, 728, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 697, 698, 695, 0, 696, 757, 758, 829,
	830, 831, 793, 689, 0, 810, 811, 0, 0, 0,
	0, 0, 799, 817, 818, 781, 839, 732, 694, 678,
	681, 682, 683, 691, 748, 749, 761, 764, 807, 806,
	805, 808, 812, 835, 834, 836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 131, 140,
	215, 840, 282, 185, 352, 673, 174, 0, 750, 753,
	763, 788, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 786, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	814, 0, 772, 783, 822, 2001, 330, 743, 825, 701,
	727, 838, 731, 735, 778, 684, 756, 256, 723, 685,
	0, 705, 674, 715, 675, 702, 745, 176, 700, 800,
	759, 824, 213, 773, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 823, 751, 0, 832, 216, 0, 768,
	833, 317, 240, 0, 0, 747, 809, 754, 796, 742,
	780, 693, 767, 827, 724, 775, 828, 81, 0, 1014,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 0, 771, 821, 718, 774, 777, 672, 770, 0,
	679, 686, 837, 816, 708, 709, 710, 0, 0, 0,
	0, 0, 0, 0, 746, 755, 790, 739, 349, 267,
	284, 305, 733, 275, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 706, 0, 765, 0, 0, 0, 687,
	680, 0, 0, 744, 0, 0, 0, 692, 671, 707,
	792, 0, 669, 241, 144, 797, 815, 741, 204, 360,
	819, 738, 737, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 789, 299, 720, 670, 801, 703,
	716, 167, 712, 291, 260, 348, 725, 762, 290, 217,
	338, 785, 820, 347, 729, 804, 357, 362, 711, 752,
	690, 314, 177, 0, 133, 722, 274, 172, 209, 740,
	779, 704, 164, 787, 766, 803, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 734,
	726, 0, 0, 353, 736, 302, 301, 730, 199, 795,
	769, 676, 283, 782, 205, 132, 327, 365, 150, 211,
	332, 668, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 717, 784, 794, 281, 304,
	334, 152, 321, 713, 714, 719, 791, 293, 802, 813,
	826, 224, 179, 182, 193, 200, 776, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 677, 0, 319, 351, 367, 154, 699, 307,
	333, 728, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	697, 698, 695, 0, 696, 757, 758, 829, 830, 831,
	793, 689, 0, 810, 811, 0, 0, 0, 0, 0,
	799, 817, 818, 781, 839, 732, 694, 678, 681, 682,
	683, 691, 748, 749, 761, 764, 807, 806, 805, 808,
	812, 835, 834, 836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 131, 140, 215, 2002,
	282, 185, 352, 673, 174, 0, 750, 753, 763, 788,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 786, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 814, 0,
	772, 783, 822, 798, 330, 743, 825, 701, 727, 838,
	731, 735, 778, 684, 756, 256, 723, 685, 0, 705,
	674, 715, 675, 702, 745, 176, 700, 800, 759, 824,
	213, 773, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 823, 751, 0, 832, 216, 0, 768, 833, 317,
	240, 0, 0, 747, 809, 754, 796, 742, 780, 693,
	767, 827, 724, 775, 828, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	771, 821, 718, 774, 777, 672, 770, 0, 679, 686,
	837, 816, 708, 709, 710, 0, 0, 0, 0, 0,
	0, 0, 746, 755, 790, 739, 349, 267, 284, 305,
	733, 275, 721, 0, 0, 0, 0, 0, 0, 2284,
	0, 706, 0, 765, 0, 0, 0, 687, 680, 0,
	0, 744, 0, 0, 0, 692, 671, 707, 792, 0,
	669, 241, 144, 797, 815, 741, 204, 360, 819, 738,
	737, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 789, 299, 720, 670, 801, 703, 716, 167,
	712, 291, 260, 348, 725, 762, 290, 217, 338, 785,
	820, 347, 729, 804, 357, 362, 711, 752, 690, 314,
	177, 0, 133, 722, 274, 172, 209, 740, 779, 704,
	164, 787, 766, 803, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 734, 726, 0,
	0, 353, 736, 302, 301, 730, 199, 795, 769, 676,
	283, 782, 205, 132, 327, 365, 150, 211, 332, 668,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 717, 784, 794, 281, 304, 334, 152,
	321, 713, 714, 719, 791, 293, 802, 813, 826, 224,
	179, 182, 193, 200, 776, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	677, 0, 319, 351, 367, 154, 699, 307, 333, 728,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 697, 698,
	695, 0, 696, 757, 758, 829, 830, 831, 793, 689,
	0, 810, 811, 0, 0, 0, 0, 0, 799, 817,
	818, 781, 839, 732, 694, 678, 681, 682, 683, 691,
	748, 749, 761, 764, 807, 806, 805, 808, 812, 835,
	834, 836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 131, 140, 215, 840, 282, 185,
	352, 673, 174, 0, 750, 753, 763, 788, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 786,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 814, 0, 772, 783,
	822, 798, 330, 743, 825, 701, 727, 838, 731, 735,
	778, 684, 756, 256, 723, 685, 0, 705, 674, 715,
	675, 702, 745, 176, 700, 800, 759, 824, 213, 773,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 823,
	751, 0, 832, 216, 0, 768, 833, 317, 240, 0,
	0, 747, 809, 754, 796, 742, 780, 693, 767, 827,
	724, 775, 828, 0, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 0, 771, 821,
	718, 774, 777, 672, 770, 0, 679, 686, 837, 816,
	708, 709, 710, 0, 0, 0, 0, 0, 0, 0,
	746, 755, 790, 739, 349, 267, 284, 305, 733, 275,
	721, 0, 0, 0, 0, 0, 0, 1963, 0, 706,
	0, 765, 0, 0, 0, 687, 680, 0, 0, 744,
	0, 0, 0, 692, 671, 707, 792, 0, 669, 241,
	144, 797, 815, 741, 204, 360, 819, 738, 737, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	789, 299, 720, 670, 801, 703, 716, 167, 712, 291,
	260, 348, 725, 762, 290, 217, 338, 785, 820, 347,
	729, 804, 357, 362, 711, 752, 690, 314, 177, 0,
	133, 722, 274, 172, 209, 740, 779, 704, 164, 787,
	766, 803, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 734, 726, 0, 0, 353,
	736, 302, 301, 730, 199, 795, 769, 676, 283, 782,
	205, 132, 327, 365, 150, 211, 332, 668, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 717, 784, 794, 281, 304, 334, 152, 321, 713,
	714, 719, 791, 293, 802, 813, 826, 224, 179, 182,
	193, 200, 776, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 677, 0,
	319, 351, 367, 154, 699, 307, 333, 728, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 697, 698, 695, 0,
	696, 757, 758, 829, 830, 831, 793, 689, 0, 810,
	811, 0, 0, 0, 0, 0, 799, 817, 818, 781,
	839, 732, 694, 678, 681, 682, 683, 691, 748, 749,
	761, 764, 807, 806, 805, 808, 812, 835, 834, 836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 760, 131, 140, 215, 840, 282, 185, 352, 673,
	174, 0, 750, 753, 763, 788, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 786, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 814, 0, 772, 783, 822, 798,
	330, 743, 825, 701, 727, 838, 731, 735, 778, 684,
	756, 256, 723, 685, 0, 705, 674, 715, 675, 702,
	745, 176, 700, 800, 759, 824, 213, 773, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 823, 751, 0,
	832, 216, 0, 768, 833, 317, 240, 0, 0, 747,
	809, 754, 796, 742, 780, 693, 767, 827, 724, 775,
	828, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 771, 821, 718, 774,
	777, 672, 770, 0, 679, 686, 837, 816, 708, 709,
	710, 0, 0, 0, 0, 0, 0, 0, 746, 755,
	790, 739, 349, 267, 284, 305, 733, 275, 721, 0,
	0, 0, 0, 0, 0, 1953, 0, 706, 0, 765,
	0, 0, 0, 687, 680, 0, 0, 744, 0, 0,
	0, 692, 671, 707, 792, 0, 669, 241, 144, 797,
	815, 741, 204, 360, 819, 738, 737, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 789, 299,
	720, 670, 801, 703, 716, 167, 712, 291, 260, 348,
	725, 762, 290, 217, 338, 785, 820, 347, 729, 804,
	357, 362, 711, 752, 690, 314, 177, 0, 133, 722,
	274, 172, 209, 740, 779, 704, 164, 787, 766, 803,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 734, 726, 0, 0, 353, 736, 302,
	301, 730, 199, 795, 769, 676, 283, 782, 205, 132,
	327, 365, 150, 211, 332, 668, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 717,
	784, 794, 281, 304, 334, 152, 321, 713, 714, 719,
	791, 293, 802, 813, 826, 224, 179, 182, 193, 200,
	776, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 677, 0, 319, 351,
	367, 154, 699, 307, 333, 728, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 697, 698, 695, 0, 696, 757,
	758, 829, 830, 831, 793, 689, 0, 810, 811, 0,
	0, 0, 0, 0, 799, 817, 818, 781, 839, 732,
	694, 678, 681, 682, 683, 691, 748, 749, 761, 764,
	807, 806, 805, 808, 812, 835, 834, 836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 760,
	131, 140, 215, 840, 282, 185, 352, 673, 174, 0,
	750, 753, 763, 788, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 786, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 814, 0, 772, 783, 822, 798, 330, 743,
	825, 701, 727, 838, 731, 735, 778, 684, 756, 256,
	723, 685, 0, 705, 674, 715, 675, 702, 745, 176,
	700, 800, 759, 824, 213, 773, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 823, 751, 0, 832, 216,
	0, 768, 833, 317, 240, 0, 0, 747, 809, 754,
	796, 742, 780, 693, 767, 827, 724, 775, 828, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 771, 821, 718, 774, 777, 672,
	770, 0, 679, 686, 837, 816, 708, 709, 710, 0,
	0, 0, 0, 0, 0, 0, 746, 755, 790, 739,
	349, 267, 284, 305, 733, 275, 721, 0, 0, 0,
	0, 0, 0, 1517, 0, 706, 0, 765, 0, 0,
	0, 687, 680, 0, 0, 744, 0, 0, 0, 692,
	671, 707, 792, 0, 669, 241, 144, 797, 815, 741,
	204, 360, 819, 738, 737, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 789, 299, 720, 670,
	801, 703, 716, 167, 712, 291, 260, 348, 725, 762,
	290, 217, 338, 785, 820, 347, 729, 804, 357, 362,
	711, 752, 690, 314, 177, 0, 133, 722, 274, 172,
	209, 740, 779, 704, 164, 787, 766, 803, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 734, 726, 0, 0, 353, 736, 302, 301, 730,
	199, 795, 769, 676, 283, 782, 205, 132, 327, 365,
	150, 211, 332, 668, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 717, 784, 794,
	281, 304, 334, 152, 321, 713, 714, 719, 791, 293,
	802, 813, 826, 224, 179, 182, 193, 200, 776, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 677, 0, 319, 351, 367, 154,
	699, 307, 333, 728, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 697, 698, 695, 0, 696, 757, 758, 829,
	830, 831, 793, 689, 0, 810, 811, 0, 0, 0,
	0, 0, 799, 817, 818, 781, 839, 732, 694, 678,
	681, 682, 683, 691, 748, 749, 761, 764, 807, 806,
	805, 808, 812, 835, 834, 836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 131, 140,
	215, 840, 282, 185, 352, 673, 174, 0, 750, 753,
	763, 788, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 786, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	814, 0, 772, 783, 822, 798, 330, 743, 825, 701,
	727, 838, 731, 735, 778, 684, 756, 256, 723, 685,
	0, 705, 674, 715, 675, 702, 745, 176, 700, 800,
	759, 824, 213, 773, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 823, 751, 0, 832, 216, 0, 768,
	833, 317, 240, 0, 0, 747, 809, 754, 796, 742,
	780, 693, 767, 827, 724, 775, 828, 0, 0, 0,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 0, 771, 821, 718, 774, 777, 672, 770, 0,
	679, 686, 837, 816, 708, 709, 710, 0, 0, 0,
	0, 0, 0, 0, 746, 755, 790, 739, 349, 267,
	284, 305, 733, 275, 721, 0, 0, 0, 0, 0,
	0, 1397, 0, 706, 0, 765, 0, 0, 0, 687,
	680, 0, 0, 744, 0, 0, 0, 692, 671, 707,
	792, 0, 669, 241, 144, 797, 815, 741, 204, 360,
	819, 738, 737, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 789, 299, 720, 670, 801, 703,
	716, 167, 712, 291, 260, 348, 725, 762, 290, 217,
	338, 785, 820, 347, 729, 804, 357, 362, 711, 752,
	690, 314, 177, 0, 133, 722, 274, 172, 209, 740,
	779, 704, 164, 787, 766, 803, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 734,
	726, 0, 0, 353, 736, 302, 301, 730, 199, 795,
	769, 676, 283, 782, 205, 132, 327, 365, 150, 211,
	332, 668, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 717, 784, 794, 281, 304,
	334, 152, 321, 713, 714, 719, 791, 293, 802, 813,
	826, 224, 179, 182, 193, 200, 776, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 677, 0, 319, 351, 367, 154, 699, 307,
	333, 728, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	697, 698, 695, 0, 696, 757, 758, 829, 830, 831,
	793, 689, 0, 810, 811, 0, 0, 0, 0, 0,
	799, 817, 818, 781, 839, 732, 694, 678, 681, 682,
	683, 691, 748, 749, 761, 764, 807, 806, 805, 808,
	812, 835, 834, 836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 131, 140, 215, 840,
	282, 185, 352, 673, 174, 0, 750, 753, 763, 788,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 786, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 814, 0,
	772, 783, 822, 798, 330, 743, 825, 701, 727, 838,
	731, 735, 778, 684, 756, 256, 723, 685, 0, 705,
	674, 715, 675, 702, 745, 176, 700, 800, 759, 824,
	213, 773, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 823, 751, 0, 832, 216, 0, 768, 833, 317,
	240, 0, 0, 747, 809, 754, 796, 742, 780, 693,
	767, 827, 724, 775, 828, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	771, 821, 718, 774, 777, 672, 770, 0, 679, 686,
	837, 816, 708, 709, 710, 0, 0, 0, 0, 0,
	0, 0, 746, 755, 790, 739, 349, 267, 284, 305,
	733, 275, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 706, 0, 765, 0, 0, 0, 687, 680, 0,
	0, 744, 0, 0, 0, 692, 671, 707, 792, 0,
	669, 241, 144, 797, 815, 741, 204, 360, 819, 738,
	737, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 789, 299, 720, 670, 801, 703, 716, 167,
	712, 291, 260, 348, 725, 762, 290, 217, 338, 785,
	820, 347, 729, 804, 357, 362, 711, 752, 690, 314,
	177, 0, 133, 722, 274, 172, 209, 740, 779, 704,
	164, 787, 766, 803, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 734, 726, 0,
	0, 353, 736, 302, 301, 730, 199, 795, 769, 676,
	283, 782, 205, 132, 327, 365, 150, 211, 332, 668,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 717, 784, 794, 281, 304, 334, 152,
	321, 713, 714, 719, 791, 293, 802, 813, 826, 224,
	179, 182, 193, 200, 776, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	677, 0, 319, 351, 367, 154, 699, 307, 333, 728,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 697, 698,
	695, 0, 696, 757, 758, 829, 830, 831, 793, 689,
	0, 810, 811, 0, 0, 0, 0, 0, 799, 817,
	818, 781, 839, 732, 694, 678, 681, 682, 683, 691,
	748, 749, 761, 764, 807, 806, 805, 808, 812, 835,
	834, 836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 131, 140, 215, 840, 282, 185,
	352, 673, 174, 0, 750, 753, 763, 788, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 786,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 814, 0, 772, 783,
	822, 798, 330, 743, 825, 701, 727, 838, 731, 735,
	778, 684, 756, 256, 723, 685, 0, 705, 674, 715,
	675, 702, 745, 176, 700, 800, 759, 824, 213, 773,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 823,
	751, 0, 832, 216, 0, 768, 833, 317, 240, 0,
	0, 747, 809, 754, 796, 742, 780, 693, 767, 827,
	724, 775, 828, 0, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 0, 771, 821,
	718, 774, 777, 672, 770, 0, 679, 686, 837, 816,
	708, 709, 710, 0, 0, 0, 0, 0, 0, 0,
	746, 755, 790, 739, 349, 267, 284, 305, 733, 275,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	0, 765, 0, 0, 0, 687, 680, 0, 0, 744,
	0, 0, 0, 692, 671, 707, 792, 0, 669, 241,
	144, 797, 815, 741, 204, 360, 819, 738, 737, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	789, 299, 720, 670, 801, 703, 716, 167, 712, 291,
	260, 348, 725, 762, 290, 217, 338, 785, 820, 347,
	729, 804, 357, 362, 711, 752, 690, 314, 177, 0,
	133, 722, 274, 172, 209, 740, 779, 704, 164, 787,
	766, 803, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 734, 726, 0, 0, 353,
	736, 302, 301, 730, 199, 795, 769, 676, 283, 782,
	205, 132, 327, 365, 150, 211, 332, 668, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 717, 784, 794, 281, 304, 334, 152, 321, 713,
	714, 719, 791, 293, 802, 813, 826, 224, 179, 182,
	193, 200, 776, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 677, 0,
	319, 351, 367, 154, 699, 307, 333, 728, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 697, 698, 695, 0,
	696, 757, 758, 829, 830, 831, 793, 689, 0, 810,
	811, 0, 0, 0, 0, 0, 799, 817, 818, 781,
	839, 732, 694, 678, 681, 682, 683, 691, 748, 749,
	761, 764, 807, 806, 805, 808, 812, 835, 834, 836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 760, 131, 140, 215, 840, 282, 185, 352, 673,
	174, 0, 750, 753, 763, 788, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 786, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 814, 0, 772, 783, 822, 798,
	330, 743, 825, 701, 727, 838, 731, 735, 778, 684,
	756, 256, 723, 685, 0, 705, 674, 715, 675, 702,
	745, 176, 700, 800, 759, 824, 213, 773, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 1550, 1554, 0,
	832, 216, 0, 768, 833, 317, 240, 0, 0, 747,
	809, 754, 796, 742, 780, 693, 767, 827, 724, 775,
	828, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 771, 821, 718, 774,
	777, 672, 770, 0, 679, 686, 837, 816, 708, 709,
	710, 0, 0, 0, 0, 0, 0, 0, 746, 755,
	790, 739, 349, 267, 284, 305, 733, 275, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 765,
	0, 0, 0, 687, 680, 0, 0, 744, 0, 0,
	0, 692, 671, 707, 792, 0, 669, 241, 144, 797,
	815, 1553, 204, 360, 819, 738, 737, 1547, 0, 1548,
	1549, 214, 665, 128, 142, 1545, 1552, 252, 789, 299,
	720, 670, 801, 703, 716, 167, 712, 291, 260, 348,
	725, 762, 290, 217, 338, 785, 820, 347, 729, 804,
	357, 362, 711, 752, 690, 314, 177, 0, 133, 722,
	274, 172, 209, 740, 779, 704, 164, 787, 766, 803,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 734, 726, 0, 0, 353, 736, 302,
	301, 730, 199, 795, 769, 676, 283, 782, 205, 132,
	327, 365, 150, 211, 332, 668, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 717,
	784, 794, 281, 304, 334, 152, 321, 713, 714, 719,
	791, 293, 802, 813, 826, 224, 179, 182, 193, 200,
	776, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 677, 0, 319, 351,
	367, 154, 699, 307, 333, 728, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 697, 698, 695, 0, 696, 757,
	758, 829, 830, 831, 793, 689, 0, 810, 811, 0,
	0, 0, 0, 0, 799, 817, 818, 781, 839, 732,
	694, 678, 681, 682, 683, 691, 748, 749, 761, 764,
	807, 806, 805, 808, 812, 835, 834, 836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 760,
	131, 140, 215, 840, 282, 185, 352, 673, 174, 0,
	750, 753, 763, 788, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 786, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 814, 0, 772, 783, 822, 798, 330, 743,
	825, 701, 727, 838, 731, 735, 778, 684, 756, 256,
	723, 685, 0, 705, 674, 715, 675, 702, 745, 176,
	700, 800, 759, 824, 213, 773, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 823, 751, 0, 832, 216,
	0, 768, 833, 317, 240, 0, 0, 747, 809, 754,
	796, 742, 780, 693, 767, 827, 724, 775, 828, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 771, 821, 718, 774, 777, 672,
	770, 0, 679, 686, 837, 816, 708, 709, 710, 0,
	0, 0, 0, 0, 0, 0, 746, 755, 790, 739,
	349, 267, 284, 305, 733, 275, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 706, 0, 765, 0, 0,
	0, 687, 680, 0, 0, 744, 0, 0, 0, 692,
	671, 707, 792, 0, 669, 241, 144, 797, 815, 741,
	204, 360, 819, 738, 737, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 789, 299, 720, 670,
	801, 703, 716, 167, 712, 291, 260, 348, 725, 762,
	290, 217, 338, 785, 820, 347, 729, 804, 357, 362,
	711, 752, 690, 314, 177, 0, 133, 722, 274, 172,
	209, 740, 779, 704, 164, 787, 766, 803, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 734, 726, 0, 0, 353, 736, 302, 301, 730,
	199, 795, 769, 676, 283, 782, 205, 132, 327, 365,
	150, 211, 332, 668, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 717, 784, 794,
	281, 304, 334, 152, 321, 713, 714, 719, 791, 293,
	802, 813, 826, 224, 179, 182, 193, 200, 776, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 677, 0, 319, 351, 367, 154,
	699, 307, 333, 728, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 697, 698, 695, 0, 696, 757, 758, 829,
	830, 831, 793, 689, 0, 810, 811, 0, 0, 0,
	0, 0, 799, 817, 818, 781, 839, 732, 694, 678,
	681, 682, 683, 691, 748, 749, 761, 764, 807, 806,
	805, 808, 812, 835, 834, 836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 131, 140,
	215, 840, 282, 185, 352, 673, 174, 0, 750, 753,
	763, 788, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 786, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	814, 0, 772, 783, 822, 798, 330, 743, 825, 701,
	727, 838, 731, 735, 778, 684, 756, 256, 723, 685,
	0, 705, 674, 715, 675, 702, 745, 176, 700, 800,
	759, 824, 213, 773, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 823, 751, 0, 832, 216, 0, 768,
	833, 317, 240, 0, 0, 747, 809, 754, 796, 742,
	780, 693, 767, 827, 724, 775, 828, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 0, 771, 821, 718, 774, 777, 672, 770, 0,
	679, 686, 837, 816, 708, 709, 710, 0, 0, 0,
	0, 0, 0, 0, 746, 755, 790, 739, 349, 267,
	284, 305, 733, 275, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 706, 0, 765, 0, 0, 0, 687,
	680, 0, 0, 744, 0, 0, 0, 692, 671, 707,
	792, 0, 669, 241, 144, 797, 815, 741, 204, 360,
	819, 738, 737, 277, 0, 324, 192, 214, 665, 128,
	142, 661, 191, 252, 789, 299, 720, 670, 801, 703,
	716, 167, 712, 291, 260, 348, 725, 762, 290, 217,
	338, 785, 820, 347, 729, 804, 357, 362, 711, 752,
	690, 314, 177, 0, 133, 722, 274, 172, 209, 740,
	779, 704, 164, 787, 766, 803, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 734,
	726, 0, 0, 353, 736, 302, 301, 730, 199, 795,
	769, 676, 283, 782, 205, 132, 327, 365, 150, 211,
	332, 668, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 717, 784, 794, 281, 304,
	334, 152, 321, 713, 714, 719, 791, 293, 802, 813,
	826, 224, 179, 182, 193, 200, 776, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 677, 0, 319, 351, 367, 154, 699, 307,
	333, 728, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	697, 698, 695, 0, 696, 757, 758, 829, 830, 831,
	793, 689, 0, 810, 811, 0, 0, 0, 0, 0,
	799, 817, 818, 781, 839, 732, 694, 678, 681, 682,
	683, 691, 748, 749, 761, 764, 807, 806, 805, 808,
	812, 835, 834, 836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 131, 140, 215, 840,
	282, 185, 352, 673, 174, 0, 750, 753, 763, 788,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 786, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 814, 330,
	772, 783, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	176, 546, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 526, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1527, 0,
	81, 0, 0, 0, 547, 570, 569, 572, 573, 574,
	575, 0, 0, 530, 571, 576, 607, 608, 1528, 0,
	0, 544, 562, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 490, 0, 0,
	0, 0, 559, 560, 0, 0, 0, 0, 623, 0,
	561, 0, 0, 556, 557, 558, 563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 621, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 488,
	470, 0, 0, 0, 167, 0, 291, 260, 348, 492,
	0, 290, 217, 338, 0, 0, 347, 0, 517, 357,
	362, 483, 0, 477, 314, 177, 0, 133, 491, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 353, 496, 302, 301,
	0, 199, 0, 504, 471, 283, 508, 205, 132, 327,
	365, 150, 211, 332, 469, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 486, 510,
	0, 281, 304, 334, 152, 321, 484, 485, 487, 514,
	293, 516, 522, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 472, 0, 319, 351, 367,
	154, 0, 307, 333, 494, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 612, 622, 618, 620, 619, 616, 617,
	615, 614, 613, 624, 0, 0, 625, 626, 0, 0,
	0, 0, 0, 0, 601, 602, 0, 0, 0, 480,
	577, 578, 579, 580, 581, 585, 586, 590, 591, 599,
	598, 597, 600, 603, 605, 604, 606, 582, 583, 584,
	587, 588, 589, 592, 593, 596, 594, 595, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 512, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 36, 330, 507, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 176, 546, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 547, 570, 569,
	572, 573, 574, 575, 0, 0, 530, 571, 576, 607,
	608, 0, 0, 0, 544, 562, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 559, 560, 0, 0, 0,
	0, 623, 0, 561, 0, 0, 556, 557, 558, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 621, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 488, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 492, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 612, 622, 618, 620,
	619, 616, 617, 615, 614, 613, 624, 0, 0, 625,
	626, 0, 0, 0, 0, 0, 0, 601, 602, 0,
	0, 0, 480, 577, 578, 579, 580, 581, 585, 586,
	590, 591, 599, 598, 597, 600, 603, 605, 604, 606,
	582, 583, 584, 587, 588, 589, 592, 593, 596, 594,
	595, 0, 131, 140, 215, 79, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 176, 546, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 547,
	570, 569, 572, 573, 574, 575, 0, 0, 530, 571,
	576, 607, 608, 0, 0, 0, 544, 562, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 559, 560, 540,
	0, 0, 0, 623, 0, 561, 0, 0, 556, 557,
	558, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	621, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 488, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 492, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 612, 622,
	618, 620, 619, 616, 617, 615, 614, 613, 624, 0,
	0, 625, 626, 0, 0, 0, 0, 0, 0, 601,
	602, 0, 0, 0, 480, 577, 578, 579, 580, 581,
	585, 586, 590, 591, 599, 598, 597, 600, 603, 605,
	604, 606, 582, 583, 584, 587, 588, 589, 592, 593,
	596, 594, 595, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 176, 546, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 1014,
	0, 547, 570, 569, 572, 573, 574, 575, 0, 0,
	530, 571, 576, 607, 608, 0, 0, 0, 544, 562,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 559,
	560, 0, 0, 0, 0, 623, 0, 561, 0, 0,
	556, 557, 558, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 621, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 488, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 492, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	612, 622, 618, 620, 619, 616, 617, 615, 614, 613,
	624, 0, 0, 625, 626, 0, 0, 0, 0, 0,
	0, 601, 602, 0, 0, 0, 480, 577, 578, 579,
	580, 581, 585, 586, 590, 591, 599, 598, 597, 600,
	603, 605, 604, 606, 582, 583, 584, 587, 588, 589,
	592, 593, 596, 594, 595, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 176,
	546, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 547, 570, 569, 572, 573, 574, 575,
	0, 0, 530, 571, 576, 607, 608, 0, 0, 0,
	544, 562, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 559, 560, 1435, 0, 0, 0, 623, 0, 561,
	0, 0, 556, 557, 558, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 621, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 488, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 492, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 612, 622, 618, 620, 619, 616, 617, 615,
	614, 613, 624, 0, 0, 625, 626, 0, 0, 0,
	0, 0, 0, 601, 602, 0, 0, 0, 480, 577,
	578, 579, 580, 581, 585, 586, 590, 591, 599, 598,
	597, 600, 603, 605, 604, 606, 582, 583, 584, 587,
	588, 589, 592, 593, 596, 594, 595, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 176, 546, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 1316, 0, 547, 570, 569, 572, 573,
	574, 575, 0, 0, 530, 571, 576, 607, 608, 0,
	0, 0, 544, 562, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 559, 560, 0, 0, 0, 0, 623,
	0, 561, 0, 0, 556, 557, 558, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 621, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	488, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	492, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 612, 622, 618, 620, 619, 616,
	617, 615, 614, 613, 624, 0, 0, 625, 626, 0,
	0, 0, 0, 0, 0, 601, 602, 0, 0, 0,
	480, 577, 578, 579, 580, 581, 585, 586, 590, 591,
	599, 598, 597, 600, 603, 605, 604, 606, 582, 583,
	584, 587, 588, 589, 592, 593, 596, 594, 595, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 176, 546, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 547, 570, 569,
	572, 573, 574, 575, 0, 0, 530, 571, 576, 607,
	608, 0, 0, 0, 544, 562, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 559, 560, 0, 0, 0,
	0, 623, 0, 561, 0, 0, 556, 557, 558, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 621, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 488, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 492, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 612, 622, 618, 620,
	619, 616, 617, 615, 614, 613, 624, 0, 0, 625,
	626, 0, 0, 0, 0, 0, 0, 601, 602, 0,
	0, 0, 480, 577, 578, 579, 580, 581, 585, 586,
	590, 591, 599, 598, 597, 600, 603, 605, 604, 606,
	582, 583, 584, 587, 588, 589, 592, 593, 596, 594,
	595, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 547,
	570, 569, 572, 573, 574, 575, 0, 0, 530, 571,
	576, 607, 608, 0, 0, 0, 0, 562, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 623, 0, 561, 0, 0, 556, 557,
	558, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	621, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 488, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 492, 2672, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 612, 622,
	618, 620, 619, 616, 617, 615, 614, 613, 624, 0,
	0, 625, 626, 0, 0, 0, 0, 0, 0, 601,
	602, 0, 0, 0, 480, 577, 578, 579, 580, 581,
	585, 586, 590, 591, 599, 598, 597, 600, 603, 605,
	604, 606, 582, 583, 584, 587, 588, 589, 592, 593,
	596, 594, 595, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 1014,
	0, 547, 570, 569, 572, 573, 574, 575, 0, 0,
	530, 571, 576, 607, 608, 0, 0, 0, 0, 562,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 559,
	560, 0, 0, 0, 0, 623, 0, 561, 0, 0,
	556, 557, 558, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 621, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 488, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 492, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	612, 622, 618, 620, 619, 616, 617, 615, 614, 613,
	624, 0, 0, 625, 626, 0, 0, 0, 0, 0,
	0, 601, 602, 0, 0, 0, 480, 577, 578, 579,
	580, 581, 585, 586, 590, 591, 599, 598, 597, 600,
	603, 605, 604, 606, 582, 583, 584, 587, 588, 589,
	592, 593, 596, 594, 595, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 547, 570, 569, 572, 573, 574, 575,
	0, 0, 530, 571, 576, 607, 608, 0, 0, 0,
	0, 562, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 559, 560, 0, 0, 0, 0, 623, 0, 561,
	0, 0, 556, 557, 558, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 621, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 488, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 492, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 612, 622, 618, 620, 619, 616, 617, 615,
	614, 613, 624, 0, 0, 625, 626, 0, 0, 0,
	0, 0, 0, 601, 602, 0, 0, 0, 480, 577,
	578, 579, 580, 581, 585, 586, 590, 591, 599, 598,
	597, 600, 603, 605, 604, 606, 582, 583, 584, 587,
	588, 589, 592, 593, 596, 594, 595, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 1508, 0,
	0, 0, 0, 0, 0, 126, 0, 468, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 1507, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	488, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	492, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 0, 0, 0,
	480, 473, 474, 475, 476, 478, 497, 498, 502, 503,
	520, 519, 518, 521, 525, 528, 527, 529, 479, 481,
	489, 499, 500, 501, 505, 506, 515, 511, 513, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	1508, 0, 0, 0, 0, 0, 0, 126, 0, 468,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 1502, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 1507, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 488, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 492, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 0,
	0, 0, 480, 473, 474, 475, 476, 478, 497, 498,
	502, 503, 520, 519, 518, 521, 525, 528, 527, 529,
	479, 481, 489, 499, 500, 501, 505, 506, 515, 511,
	513, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	1036, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 1040, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 1033, 1032, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 488, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 492, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 0, 0, 0, 480, 473, 474, 475, 476, 478,
	497, 498, 502, 503, 520, 519, 518, 521, 525, 528,
	527, 529, 479, 481, 489, 499, 500, 501, 505, 506,
	515, 511, 513, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 468, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 488, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 492, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 0, 0, 0, 480, 473, 474, 475,
	476, 478, 497, 498, 502, 503, 520, 519, 518, 521,
	525, 528, 527, 529, 479, 481, 489, 499, 500, 501,
	505, 506, 515, 511, 513, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 463,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 1783, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 468, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 488, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 492, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 0, 0, 0, 480, 473,
	474, 475, 476, 478, 497, 498, 502, 503, 520, 519,
	518, 521, 525, 528, 527, 529, 479, 481, 489, 499,
	500, 501, 505, 506, 515, 511, 513, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 468, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	488, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	492, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 0, 0, 0,
	480, 473, 474, 475, 476, 478, 497, 498, 502, 503,
	520, 519, 518, 521, 525, 528, 527, 529, 479, 481,
	489, 499, 500, 501, 505, 506, 515, 511, 513, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 1040,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 488, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 492, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 0,
	0, 0, 480, 473, 474, 475, 476, 478, 497, 498,
	502, 503, 520, 519, 518, 521, 525, 528, 527, 529,
	479, 481, 489, 499, 500, 501, 505, 506, 515, 511,
	513, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 488, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 492, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 0, 0, 0, 480, 473, 474, 475, 476, 478,
	497, 498, 502, 503, 520, 519, 518, 521, 525, 528,
	527, 529, 479, 481, 489, 499, 500, 501, 505, 506,
	515, 511, 513, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 0, 0, 507, 509,
	437, 330, 431, 442, 425, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 448, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 432, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 423, 426, 0, 0, 0, 241, 144,
	0, 0, 430, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 434,
	299, 0, 0, 438, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 441, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 451, 304, 334, 152, 321, 427, 428,
	429, 435, 436, 439, 440, 443, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 433, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 437, 330, 431, 442, 425, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 432, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 0, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 423, 426, 0, 0,
	0, 241, 144, 0, 0, 430, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 434, 299, 0, 0, 438, 0, 0, 167,
	0, 291, 260, 348, 0, 0, 290, 217, 338, 0,
	441, 347, 0, 0, 357, 362, 0, 0, 0, 314,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 302, 301, 0, 199, 0, 0, 0,
	283, 0, 205, 132, 327, 365, 150, 211, 332, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 420, 304, 334, 152,
	321, 427, 428, 429, 435, 436, 439, 440, 443, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 319, 351, 367, 154, 0, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 433,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 1050, 1049, 1059, 1060, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1051, 0, 0, 1061,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 0, 0, 0, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 0, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 281, 304,
	334, 152, 321, 0, 0, 0, 0, 293, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 2600, 0, 0, 0, 0, 0, 0, 176,
	2598, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 446, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 0, 0,
	0, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 0, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 2599, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	281, 304, 334, 152, 321, 0, 0, 0, 0, 293,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	36, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 1499, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 1154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 79, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 1175, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 0, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 2111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	1654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 1142, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 629, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 0, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 123, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 0, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 649, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 645, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	650, 648, 639, 640, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 646, 647, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 1169,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 636, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 649, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 645, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 650, 648, 639, 640, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 646, 647, 278, 526, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 0, 1185, 0, 0, 0,
	0, 0, 0, 0, 488, 470, 0, 0, 0, 0,
	0, 0, 0, 1243, 492, 0, 0, 0, 0, 0,
	0, 0, 530, 517, 0, 0, 483, 0, 477, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 0, 496, 0, 0, 0, 0, 0, 504, 471,
	0, 508, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 0, 0, 486, 510, 0, 0, 0, 488, 470,
	0, 484, 485, 487, 514, 0, 516, 522, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 0, 0,
	483, 0, 477, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 504, 471, 0, 508, 0, 0, 0, 0,
	472, 0, 0, 469, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 486, 510, 0,
	0, 0, 0, 0, 0, 484, 485, 487, 514, 0,
	516, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 0, 0, 0, 480, 473, 474, 475, 476, 478,
	497, 498, 502, 503, 520, 519, 518, 521, 525, 528,
	527, 529, 479, 481, 489, 499, 500, 501, 505, 506,
	515, 511, 513, 0, 0, 0, 526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 0, 0, 2126, 0, 0,
	0, 0, 0, 494, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 509,
	490, 0, 0, 523, 524, 0, 0, 0, 480, 473,
	474, 475, 476, 478, 497, 498, 502, 503, 520, 519,
	518, 521, 525, 528, 527, 529, 479, 481, 489, 499,
	500, 501, 505, 506, 515, 511, 513, 0, 0, 0,
	526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 470, 0, 0, 0, 0, 0, 0,
	0, 2135, 492, 0, 0, 0, 0, 0, 0, 0,
	530, 517, 0, 0, 483, 0, 477, 0, 0, 0,
	0, 491, 0, 512, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 509, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 504, 471, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 510, 0, 0, 0, 488, 470, 0, 484,
	485, 487, 514, 0, 516, 522, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 0, 0, 483, 0,
	477, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	504, 471, 0, 508, 0, 0, 0, 0, 472, 0,
	0, 469, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 486, 510, 0, 0, 0,
	0, 0, 0, 484, 485, 487, 514, 0, 516, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 0,
	0, 0, 480, 473, 474, 475, 476, 478, 497, 498,
	502, 503, 520, 519, 518, 521, 525, 528, 527, 529,
	479, 481, 489, 499, 500, 501, 505, 506, 515, 511,
	513, 0, 0, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 0, 0, 2133, 0, 0, 0, 0,
	0, 494, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 509, 490, 0,
	0, 523, 524, 0, 0, 0, 480, 473, 474, 475,
	476, 478, 497, 498, 502, 503, 520, 519, 518, 521,
	525, 528, 527, 529, 479, 481, 489, 499, 500, 501,
	505, 506, 515, 511, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	488, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	0, 0, 483, 0, 477, 0, 0, 0, 0, 491,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 36, 0,
	72, 39, 40, 495, 493, 0, 0, 36, 496, 72,
	39, 40, 59, 0, 504, 471, 0, 508, 78, 0,
	0, 59, 41, 0, 0, 469, 0, 78, 0, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 486,
	510, 0, 0, 0, 0, 0, 0, 484, 485, 487,
	514, 0, 516, 522, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2433, 0, 0, 2646, 2649, 2645,
	0, 0, 0, 2433, 0, 0, 0, 0, 2694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 0, 0, 0,
	43, 74, 46, 45, 48, 494, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 2434, 0, 0, 0, 0,
	0, 0, 0, 0, 2434, 0, 0, 0, 0, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	49, 77, 76, 0, 0, 523, 524, 47, 0, 0,
	480, 473, 474, 475, 476, 478, 497, 498, 502, 503,
	520, 519, 518, 521, 525, 528, 527, 529, 479, 481,
	489, 499, 500, 501, 505, 506, 515, 511, 513, 0,
	0, 0, 0, 57, 58, 0, 2435, 0, 0, 0,
	0, 0, 57, 58, 0, 2435, 0, 0, 0, 0,
	66, 0, 67, 0, 36, 0, 72, 39, 40, 66,
	0, 67, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 0, 0, 0, 78, 512, 0, 68, 41, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2436, 75, 0, 53, 54,
	61, 0, 62, 0, 2436, 75, 81, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2433, 0, 0, 0, 36, 2690, 72, 39, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2434, 0, 73, 0, 0, 81, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 0, 0, 0,
	2433, 0, 0, 0, 36, 2679, 72, 39, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 0, 79, 0, 78, 0, 0, 0, 41, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 2435, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 2434, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 0, 68, 47, 0, 0, 0, 0, 0,
	2433, 0, 0, 0, 0, 2662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2436, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 2435, 0, 0, 0, 43, 74, 46, 45,
	48, 36, 0, 72, 39, 40, 66, 0, 67, 0,
	0, 2434, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 49, 77, 76,
	0, 0, 0, 68, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2436, 75, 81, 53, 54, 61, 0, 62, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 2435, 0, 0, 0, 0, 2433, 0, 0,
	0, 36, 2594, 72, 39, 40, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 0, 79, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2434, 0,
	0, 2436, 75, 81, 53, 54, 61, 0, 62, 73,
	0, 0, 0, 0, 49, 77, 76, 0, 0, 0,
	0, 47, 0, 0, 0, 0, 0, 2433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2435,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 2434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 49, 77, 76, 0, 0, 0,
	68, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2436, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2436, 75,
	0, 53, 54, 61, 0, 62, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	655, -1000, -342, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1725, -1000, -1000, -1000, -1000,
	-1000, -1000, 873, 324, -1000, 284, 149, 27694, 598, 154,
	28678, -1000, -1000, -1000, 153, 388, 28678, 423, 434, 1145,
	1585, 1144, 19, -102, -107, 95, 21297, 20804, -12, -1000,
	1765, 1749, -1000, -1000, 539, 23, -1000, -1000, -1000, 18339,
	200, -1000, -1000, 1707, 1723, 1499, -1000, 12927, 539, 539,
	27202, 30646, -1000, 1764, 28678, 11449, -1000, 592, 28678, -191,
	521, 521, 327, 521, 521, 594, -1000, 820, -1000, -1000,
	-1000, -1000, 28678, 24250, 524, 28186, 524, 524, 524, 524,
	524, 524, 524, 28678, -1000, 668, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28678, 1143,
	1636, 934, 137, -1000, -1000, -1000, 872, -1000, 325, 321,
	347, 313, 96, 947, 1710, -1000, 1388, 1707, 1707, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 250, 562, 220, 200,
	819, -1000, 1635, 1629, 1064, 1627, 519, 1623, 1445, -69,
	-1000, 1142, 28678, -1000, -1000, 1014, 1011, 1473, 1318, 619,
	1471, -1000, -1000, 279, 576, 1412, 323, 1412, 1412, 1412,
	1412, 1412, -121, 1412, 1412, 1412, 73, 1412, 94, 1412,
	1412, 1412, 1412, 1412, 1173, -1000, -1000, -1000, 295, 1306,
	1347, 1470, 203, -1000, -1000, -1000, -1000, 1448, 1705, 577,
	-1000, -163, 1364, 19323, -1000, 1388, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1047, 1624, 897, 14895, 1548, -1000, -1000, 865, 1753,
	-1000, 17847, 666, -1000, 14895, 2866, 1388, -1000, -1000, 1388,
	-1000, -1000, -1000, 620, -1000, -1000, 16371, 16371, 16371, 16371,
	16371, 16371, 16371, 16371, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1388, 1388, 1388,
	1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388,
	1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388,
	1388, 1388, 1388, 1388, 1388, 1388, 1388, -1000, -1000, 1388,
	-1000, 12435, 1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388,
	1388, 1388, 1388, 1388, 1388, 1388, 1388, 26710, 24742, 28678,
	1357, 1325, -1000, -1000, 663, 1384, -117, 30154, -1000, -1000,
	-1000, -1000, 29170, 23758, 818, -1000, -1000, -1000, -1000, 1622,
	-1000, -1000, 657, -1000, 1725, -1000, -1000, 1296, 405, -1000,
	2930, 31181, -1000, -1000, -1000, 1443, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 28186, 1688, 564, 1140, 833, 1138, 1137, 1136, 24250,
	24250, 521, 1135, 1383, 561, 1382, 560, 1161, 28678, 1660,
	1469, 28678, 1132, 1131, 1128, 1127, 24250, 24250, -1000, 10951,
	-1000, -1000, 934, -1000, 1083, 14895, 521, 521, 28678, 28678,
	28678, 28678, -1000, -1000, 934, 934, 934, 934, 860, 1751,
	860, -1000, 860, -1000, -1000, 14895, -1000, 16371, 23266, 720,
	-1000, -1000, -1000, 1125, 247, -1000, -1000, -1000, -1000, -1000,
	-1000, 1120, 519, 519, -1000, 1080, 519, 1361, -1000, 816,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 519, -1000, 14403, -337, -1000, -1000, 1371, -1000,
	292, -1000, -1000, 511, 511, 168, 24250, 24250, 24250, -1000,
	1412, 28186, -1000, 1412, 1412, 1412, -124, 1412, 1412, -1000,
	-1000, 1412, -1000, -1000, -1000, -1000, -1000, 1412, -1000, -1000,
	-1000, 1412, 1412, -1000, 1412, 1412, -1000, -1000, -1000, -1000,
	-1000, 24250, 511, 159, 1365, 511, 24250, 24250, -1000, 62,
	59, 58, 53, -1000, -1000, -1000, -1000, 48, 44, -1000,
	-1000, 1499, -1000, -1000, 200, -1000, -1000, 28678, -123, 19323,
	1364, 1687, 9457, -1000, -1000, -1000, 1759, 735, 1370, -1000,
	-1000, 1363, -1000, 1016, 656, 949, 1510, -1000, -1000, -1000,
	28678, -1000, 14895, 14895, 960, -1000, 19815, -1000, -1000, -1000,
	-1000, 8959, 780, 16371, 1020, 772, 16371, 16371, 16371, 16371,
	16371, 16371, 16371, 16371, 16371, 16371, 16371, 16371, 16371, 16371,
	16371, 1042, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1119, -1000, 200, 1148, 1148, 676, 676, 676, 676, 676,
	676, 676, 21789, 1679, 13911, 13911, 13911, 1679, 1047, 1047,
	13911, 13911, 13911, 13911, 13911, 13911, 1679, 1679, 13911, 1047,
	1047, 1047, 1047, 13911, 13911, 13911, 13911, 28186, 28186, 1679,
	13911, 13911, 13911, 1679, 1047, 1293, 932, 12435, -1000, -1000,
	15879, -1000, -1000, -1000, -1000, -1000, 1047, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 13911, 13911, 13911, 13911, 13911,
	13911, 760, 28678, -1000, 1348, 1387, -1000, -1000, -1000, 1680,
	22774, -1000, 17355, -1000, 1388, 760, 1281, 24742, 28678, -1000,
	-1000, 24742, 28678, 8461, 29662, 1349, -1000, -141, -140, -117,
	-1000, -1000, 659, -1000, -1000, -1000, 11942, -1000, 9955, 1707,
	1499, 5971, 10453, -1000, 31181, 1443, -1000, -91, -1000, -1000,
	-1000, 1396, -1000, 1396, 221, -32, 1396, 1396, 1396, 1396,
	1396, -48, -48, -48, -48, -25, -1000, -1000, -1000, -1000,
	-1000, 1438, 1424, -1000, 1396, 1396, 1396, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1402, 237, 1422, 1422,
	1422, 1422, 1422, 367, 367, -1000, 14895, 1121, -1000, 28678,
	1643, 1655, 1643, 301, 1416, 1256, -1000, 167, 1229, 28678,
	-1000, 28678, 28678, 24250, 24250, 24250, 493, -1000, 28678, 1362,
	-1000, -1000, -1000, -1000, -1000, 1320, -1000, 1229, -1000, -1000,
	-1000, -1000, -1000, 932, 1118, 1117, -1000, -1000, -1000, 862,
	-1000, -1000, -1000, -1000, 934, 28678, 28678, 28678, 1675, 934,
	932, 781, 1447, 1388, 1047, -1000, -1000, 1115, -1000, 1361,
	1361, -1000, 1361, 519, 1148, 1361, -1000, 1291, 1650, 1079,
	28678, -1000, 19323, -72, -1000, -171, 26218, -1000, -1000, -1000,
	26218, -1000, 73, 113, -1000, 559, -1000, 1277, -1000, -1000,
	-1000, -1000, 1412, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 26218, 110, 148, 26218, 1320, 1750, -1000, -1000,
	-1000, -1000, 1709, -1000, 1679, 1047, 184, -1000, -1000, -1000,
	1388, 1238, 653, -1000, 1505, 897, 897, 14895, -1000, -1000,
	-1000, 9955, 1711, -1000, 1521, 1520, 1491, -1000, -1000, 780,
	784, -1000, -1000, 907, -1000, -1000, -1000, -1000, 650, 1388,
	-1000, 1506, -1000, -1000, -1000, -1000, 1020, 16371, 16371, 16371,
	781, 1506, 2917, 1116, 1284, 676, 728, 728, 702, 702,
	702, 702, 702, 714, 714, -1000, -1000, -1000, 1047, -1000,
	-1000, -1000, 13911, 1251, -1000, -1000, 932, 641, 1251, 1251,
	13911, -210, -210, 1047, 1251, 1251, 1251, 1047, 1251, 13911,
	13911, 1251, -210, -210, -210, -210, 1251, 1251, 1251, 1251,
	1360, 1359, 13911, 1251, 1251, 1251, 13911, -1000, 14895, -1000,
	1047, -1000, 891, 1251, 1047, 1356, 1251, 1251, 1251, 1251,
	192, 1388, -1000, 9955, 24742, 24742, 24742, 24742, 24742, -1000,
	1496, 1495, -1000, 1486, 1484, 1485, 19323, 1274, 1047, 283,
	22774, -1000, 1388, -1000, 18831, 606, 574, 573, 572, 13911,
	1731, 24742, 1207, -1000, 1207, -1000, 640, -1000, -1000, 29170,
	-117, -129, -1000, -1000, 1349, -1000, 1036, -1000, -1000, 932,
	-1000, 638, 1624, 1679, 1330, 5473, -1000, -1000, -1000, -1000,
	405, -1000, -1000, -1000, 1411, 31077, -1000, 1546, 673, 673,
	671, 1095, 1541, -1000, -1000, 351, -96, -1000, -1000, 1010,
	-48, -48, 1396, 1396, 214, 1396, -1000, -48, -1000, -1000,
	-1000, 659, 1619, 659, 659, 659, 659, -48, 1078, 1078,
	-1000, -1000, -1000, -1000, 1009, -1000, 1402, -1000, 1005, -1000,
	-1000, -1000, -1000, -1000, -1000, 1043, 1465, 28186, 200, 1673,
	-48, -1000, -1000, -48, 1738, -1000, -1000, 581, 80, 24250,
	165, 296, 194, -1000, 558, -1000, 550, -1000, -1000, -1000,
	-1000, -1000, -1000, 28678, 24250, -1000, -1000, 1731, 1114, 1113,
	-1000, -1000, -1000, 860, 934, 1600, -1000, -1000, 16371, 24250,
	-1000, 309, -1000, -1000, -1000, -1000, 760, 568, -1000, -1000,
	-105, -1000, -1000, 549, 636, 633, 546, -1000, 90, 24250,
	-1000, 28186, -1000, 1748, 1745, 104, 1744, 24250, -1000, 29,
	1510, -1000, 1327, -1000, 624, 654, 672, 373, 373, -1000,
	793, 373, 759, -1000, 196, -1000, 9457, 9457, 1503, -1000,
	-1000, -1000, 28678, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7963, 13911, -1000, 781, 1506, 2784, -1000, 16371,
	-1000, 1251, 13911, -210, 7465, -210, -210, 1251, -1000, 25726,
	-1000, -210, -210, -210, -210, -210, -210, 1251, 1251, -210,
	-1000, -1000, -1000, -1000, -210, -210, -210, -210, 16371, 16371,
	1251, -210, -210, -210, 1047, 932, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1464, 9955, 1388, 6469, -1000, 28186,
	1358, -1000, 814, 812, 1387, 1408, 1462, 1272, -1000, -1000,
	-1000, -1000, 1494, -1000, 1493, -1000, -1000, 1392, -1000, -1000,
	1326, 1388, 28186, 16371, 606, -1000, 1388, 1388, 1388, 1047,
	1725, 14895, 1207, -1000, -1000, 708, -1000, -1000, -166, -154,
	-1000, -1000, -1000, 9457, -1000, 5971, -1000, 5971, -1000, 20307,
	544, 1556, 393, -1000, 1095, -1000, -1000, 1095, -1000, 1095,
	-1000, -1000, -1000, 1400, -1000, 877, -1000, -1000, -1000, -1000,
	-1000, 16371, 1758, -1000, 1545, -1000, 1543, 1542, 1075, -1000,
	-1000, 1199, 659, 659, -48, -1000, -1000, 1396, -1000, 659,
	-1000, 733, -1000, -1000, -1000, -1000, 659, 1249, -1000, 1247,
	1322, -1000, 1245, 79, 28678, -1000, -1000, -1000, 1643, 1643,
	1460, -1000, -1000, -1000, 1190, 1321, -1000, 2930, 1111, 1108,
	1107, -257, 253, -1000, 24250, 123, 167, 334, 1106, 28678,
	24250, -1000, -1000, -1000, -1000, -1000, 934, -1000, 16371, 1506,
	1229, -1000, -1000, -48, 28678, -1000, 24250, 700, 25234, 24250,
	101, 103, -1000, 24250, 24250, 1733, 24250, 1320, 1073, 1491,
	184, 4211, 1095, 658, -1000, -1000, 384, -1000, 3822, 1541,
	1105, 31853, 31569, 28186, 1540, 1539, 1103, 28678, 28186, -1000,
	-1000, 31465, 1099, 14895, -1000, 28186, 28186, 626, -1000, -1000,
	-1000, 1298, 12927, -1000, -1000, 1047, -1000, 16371, 1506, -210,
	-1000, -1000, -1000, -1000, 611, -1000, -1000, -210, -1000, -1000,
	1098, -1000, -1000, -1000, -1000, -1000, -1000, -210, -210, -1000,
	-1000, -1000, -1000, -1000, 2602, 1810, -210, -1000, -1000, -1000,
	-1000, -1000, 1646, 1286, 1317, -1000, -1000, 13419, 1047, 1519,
	1238, -1000, 18339, 1224, -1000, 1725, 9955, 14895, 14895, -1000,
	-1000, 14895, 1398, -1000, 14895, -1000, -1000, -1000, -1000, 28186,
	282, -1000, 14895, 1224, 810, -1000, 28186, 28186, 28186, -1000,
	1707, 932, -1000, -1000, -1000, -1000, 5473, -1000, 1222, -1000,
	1396, 1396, 1536, -1000, 673, -1000, -1000, -1000, -1000, 28186,
	-1000, 1506, -169, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	659, -1000, -1000, -1000, -1000, -1000, -48, 1072, -48, 1001,
	-1000, 979, -1000, -1000, -287, 1395, -1000, 200, 659, 659,
	28678, 107, 581, -1000, 2930, 2930, 2930, 106, 114, -1000,
	850, -1000, -1000, -1000, 1070, 1068, 1067, 1229, 171, 837,
	126, -1000, 1674, -1000, -1000, -1000, 1506, -89, -1000, 103,
	-1000, -1000, -1000, 103, -1000, -1000, 136, 1320, 1320, 24250,
	1320, -1000, -1000, -1000, 31465, 481, 2930, 2930, 1121, 673,
	1528, 393, -1000, -1000, -1000, -1000, -1000, -1000, 1097, -1000,
	667, -1000, 543, 481, 31465, 932, 717, 1648, 9457, 1729,
	24742, -1000, -1000, -1000, 1506, -1000, 6967, -1000, 758, -1000,
	-1000, -1000, 16371, 16371, -1000, 1527, -1000, 1388, -1000, -1000,
	1388, 195, -1000, 28186, 1707, -1000, 932, 932, 932, 28186,
	932, 1220, -1000, 1388, 16863, -1000, 19323, 1218, 1218, 1218,
	-1000, 601, 20307, 1663, 1663, -1000, 1095, 1214, -1000, 1388,
	1388, -1000, 659, -1000, 659, 1186, 1184, -1000, 20307, -1000,
	-1000, -1000, 1700, -1000, 107, -1000, 1063, 248, 260, -1000,
	245, 244, 235, 233, 222, -1000, -1000, -1000, -1000, 298,
	106, -1000, -73, 977, 806, 1616, 114, -1000, 975, 973,
	972, 950, 175, -1000, -1000, -1000, -1000, 169, 167, -1000,
	333, 1061, 1571, 1565, 1672, 1672, 100, 1320, 1300, 1180,
	-1000, -1000, 1096, -1000, -1000, 1394, 1095, 1393, -1000, 1094,
	-1000, -1000, 28186, -1000, 481, 1642, 1640, 1388, -1000, 1727,
	1721, 1207, 12927, -1000, -1000, 1725, 1720, 891, 891, 1757,
	-1000, 1317, 1388, -1000, 200, -1000, -1000, 1209, -1000, 28186,
	-1000, -1000, 606, -1000, -1000, -1000, 601, -1000, 1091, 793,
	1059, -1000, -1000, -1000, -1000, 319, -1000, -1000, -1000, -1000,
	1205, -1000, 280, 32715, -1000, -1000, -1000, -1000, -1000, -1000,
	1581, 1579, 269, -1000, 1050, 1046, -1000, 383, 1054, 677,
	-223, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 318, 1089, -1000, 115, -1000, -1000, 528, 1549,
	1559, 1719, -1000, 24250, -1000, -1000, 24742, -1000, -1000, 351,
	351, 20307, 1121, 20307, -1000, -1000, -1000, 16371, -1000, 756,
	-219, 14895, 14895, 1729, -1000, 750, 14895, -1000, -1000, 9955,
	1317, 1047, -1000, -1000, -1000, -1000, -1000, 928, -1000, 28678,
	601, 281, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14895, 14895, 4975, 32715, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 903, -1000, -1000, 1022, 390,
	108, -1000, 1671, -1000, 1392, 890, 1565, 1718, 1563, 1561,
	-1000, 1045, -261, 1207, 1198, 1391, 1189, 1506, 1183, -1000,
	28186, -1000, 28186, -1000, 932, 1316, -1000, 932, 1727, -1000,
	1047, 132, 132, 1304, 1254, -1000, -1000, 1390, -1000, 601,
	275, -1000, 894, 1018, 211, 174, 4427, -1000, -1000, -1000,
	-1000, -343, -1000, 112, -1000, 98, -1000, -1000, -1000, 1037,
	-1000, 1569, -1000, 1033, -1000, 1716, 1715, -1000, 162, 1729,
	601, 20307, 601, -1000, 756, 1518, 1234, -1000, 1669, 14895,
	-219, -1000, -1000, 122, -1000, 745, 271, 734, -1000, 1148,
	-1000, 28186, -1000, 1088, 1087, 797, -1000, 14895, 32715, 1694,
	1683, 1667, 1639, 9457, 32625, -1000, -1000, -1000, -1000, -1000,
	1019, 892, 22281, 1727, -1000, 1179, -1000, -1000, 302, 28186,
	1388, -1000, -1000, 835, -1000, -1000, -1000, -1000, -1000, 28186,
	1158, 264, -1000, -1000, 829, 32715, -1000, 987, -344, 340,
	200, 567, 16371, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	97, 1229, -219, 601, 297, -1000, -1000, 122, -1000, 1458,
	-1000, -1000, -1000, -1000, -1000, -1000, 32715, -1000, -346, 32715,
	32072, -1000, -1000, -1000, 3361, -1000, -1000, -1000, -1000, 172,
	-1000, -1000, 1506, 24250, -1000, -1000, 1388, -1000, 1451, 1449,
	1743, -1000, -347, 32488, -348, 499, 32715, 791, -1000, 14895,
	-1000, 567, -1000, 1229, 15387, -1000, 1756, -1000, 1739, 512,
	512, 32398, 827, 32715, -1000, -349, 498, 32715, -1000, 869,
	-1000, 891, 1047, -1000, -1000, -1000, 355, 918, -1000, -1000,
	-1000, 32308, -1000, -351, 32715, -1000, -1000, -1000, -1000, -1000,
	492, 32081, -353, -1000, 488, 32715, -1000,
}

var yyPgo = [...]int{
	0, 2225, 2222, 21, 2220, 173, 2217, 2216, 2215, 36,
	34, 17, 28, 2213, 1943, 1920, 1918, 1913, 1903, 2212,
	5, 2211, 2210, 1880, 2198, 2188, 1871, 1859, 1853, 1845,
	2181, 2178, 2173, 1839, 1836, 1831, 23, 2170, 24, 2169,
	4, 128, 165, 2166, 3, 2165, 2164, 10, 2162, 2161,
	1829, 2160, 2157, 2156, 90, 2155, 1817, 1808, 2154, 1793,
	1791, 2153, 2152, 1780, 1776, 1772, 2150, 151, 2149, 2148,
	2145, 167, 80, 132, 2145, 2145, 2144, 99, 74, 1712,
	108, 52, 107, 93, 2143, 31, 43, 166, 2142, 131,
	2141, 119, 2140, 140, 2139, 124, 175, 100, 2138, 2137,
	147, 2135, 2134, 2133, 117, 2132, 2131, 114, 2128, 2127,
	136, 2126, 60, 57, 45, 2125, 2123, 2121, 2119, 2117,
	27, 11, 2114, 2113, 123, 2112, 2112, 76, 2110, 2109,
	149, 2107, 2106, 2103, 120, 42, 2100, 2096, 47, 2095,
	91, 70, 2094, 41, 2094, 2094, 2094, 2094, 44, 19,
	2093, 53, 2092, 63, 2090, 126, 262, 1039, 2089, 8,
	15, 13, 2088, 32, 7, 20, 50, 62, 67, 118,
	97, 2087, 26, 38, 116, 86, 85, 40, 2086, 135,
	2085, 77, 141, 122, 125, 130, 2083, 2081, 2080, 967,
	2077, 111, 72, 2075, 98, 913, 145, 104, 2073, 88,
	2071, 2069, 2065, 2064, 2058, 79, 146, 2050, 2049, 54,
	314, 1029, 1413, 258, 137, 2047, 48, 2042, 2040, 2038,
	2654, 101, 92, 2036, 2035, 2035, 105, 49, 2033, 2032,
	2031, 2030, 2024, 2021, 828, 2020, 2018, 2015, 2014, 390,
	106, 96, 2013, 2009, 121, 139, 2008, 2003, 1999, 1998,
	113, 64, 129, 1996, 110, 103, 158, 1993, 66, 1990,
	1986, 87, 46, 1985, 1981, 1978, 94, 78, 1977, 65,
	30, 39, 71, 9, 1975, 1972, 95, 112, 1971, 25,
	1970, 2, 6, 12, 1967, 1964, 1962, 1960, 1959, 1957,
	1955, 75, 1953, 1948, 61, 1947, 1941, 1922, 33, 1915,
	1911, 1909, 127, 109, 89, 143, 153, 14, 1894, 1890,
	16, 1874, 115, 1861, 55, 1856, 56, 1851, 1849, 59,
	1841, 1827, 58, 1823, 1814, 144, 1455, 2500, 1804, 142,
	138, 51, 73, 1798, 1786, 0, 418, 148, 134, 1783,
	1774,
}

var yyR1 = [...]int{
	0, 334, 334, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 337, 337, 102, 102, 100, 100, 101,
	101, 174, 174, 12, 12, 12, 179, 179, 184, 184,
	184, 187, 187, 187, 187, 165, 166, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 308,
	308, 317, 317, 317, 318, 318, 316, 316, 316, 316,
	316, 320, 320, 321, 321, 319, 319, 319, 319, 323,
	323, 324, 324, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 311, 311, 311,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 326, 326, 327, 327, 328, 328, 329, 329, 329,
	329, 330, 330, 330, 330, 330, 331, 331, 331, 331,
	331, 331, 331, 332, 332, 333, 333, 2, 289, 289,
	290, 290, 291, 291, 291, 291, 292, 292, 293, 293,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	24, 208, 208, 310, 310, 310, 304, 304, 304, 306,
	306, 305, 305, 305, 307, 307, 312, 312, 312, 312,
	312, 314, 314, 314, 314, 314, 314, 315, 315, 315,
	313, 313, 48, 48, 49, 49, 49, 154, 154, 154,
	13, 13, 13, 13, 13, 19, 21, 21, 37, 37,
	38, 22, 22, 22, 22, 39, 39, 40, 25, 25,
	25, 25, 25, 25, 46, 46, 46, 45, 45, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 47,
	47, 42, 42, 41, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 26, 26, 26, 26,
	26, 26, 18, 288, 288, 288, 36, 36, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 52, 263,
	264, 264, 264, 264, 264, 264, 264, 264, 251, 251,
	252, 227, 227, 227, 227, 227, 227, 227, 227, 226,
	226, 226, 226, 230, 230, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 229, 229, 229, 229, 229,
	229, 229, 229, 231, 231, 231, 231, 231, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 233, 233, 233, 233, 233, 233, 233,
	233, 250, 250, 234, 234, 244, 244, 245, 245, 245,
	242, 242, 243, 243, 237, 238, 246, 239, 239, 239,
	241, 241, 240, 240, 240, 249, 249, 249, 249, 249,
	235, 35, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 275, 275, 201, 201, 202, 202,
	253, 253, 273, 273, 272, 272, 271, 271, 271, 262,
	262, 268, 268, 268, 268, 268, 268, 268, 268, 257,
	257, 257, 256, 256, 258, 258, 261, 261, 270, 270,
	269, 269, 254, 254, 254, 276, 276, 276, 276, 276,
	255, 255, 255, 255, 277, 259, 259, 260, 260, 260,
	282, 283, 281, 281, 281, 281, 281, 117, 117, 117,
	265, 265, 265, 266, 266, 266, 267, 267, 267, 286,
	286, 285, 285, 50, 51, 55, 55, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 153, 153, 153, 206, 206, 280, 278, 278, 279,
	279, 15, 15, 53, 53, 309, 309, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 284, 284, 284, 17,
	17, 56, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 84, 193, 193, 192,
	192, 191, 191, 191, 194, 194, 194, 224, 224, 224,
	58, 58, 62, 62, 65, 65, 65, 63, 64, 27,
	28, 28, 28, 28, 29, 207, 207, 60, 60, 61,
	61, 61, 61, 76, 76, 339, 339, 59, 340, 67,
	68, 68, 69, 69, 69, 197, 197, 73, 73, 73,
	71, 71, 71, 72, 72, 78, 78, 82, 82, 82,
	82, 81, 81, 81, 81, 156, 156, 161, 217, 217,
	137, 137, 157, 157, 162, 162, 162, 163, 163, 164,
	164, 164, 164, 164, 159, 159, 158, 158, 160, 125,
	125, 215, 215, 215, 214, 214, 214, 214, 86, 86,
	89, 89, 91, 91, 91, 91, 91, 94, 139, 139,
	111, 111, 112, 112, 112, 112, 112, 123, 123, 173,
	173, 172, 172, 175, 175, 90, 92, 92, 92, 92,
	97, 97, 98, 98, 99, 99, 205, 205, 222, 222,
	222, 103, 103, 103, 105, 104, 104, 104, 104, 106,
	106, 108, 109, 109, 107, 107, 110, 113, 113, 113,
	113, 114, 114, 83, 83, 83, 83, 83, 83, 83,
	190, 190, 116, 116, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 133, 133, 133, 133, 133, 133,
	118, 118, 118, 118, 118, 118, 118, 77, 77, 134,
	134, 134, 96, 95, 95, 80, 80, 79, 79, 135,
	135, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 128, 128, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 338, 338, 130, 129, 129, 129, 129,
	129, 129, 74, 74, 74, 74, 74, 223, 223, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 146, 146, 75, 75, 144, 144, 145, 147,
	147, 143, 143, 143, 120, 120, 120, 120, 120, 120,
	120, 120, 122, 122, 122, 148, 148, 136, 136, 85,
	149, 149, 150, 151, 151, 152, 152, 155, 167, 167,
	167, 168, 168, 168, 168, 124, 124, 169, 169, 169,
	119, 119, 119, 119, 119, 119, 119, 171, 171, 170,
	170, 170, 170, 176, 176, 138, 138, 141, 141, 140,
	142, 177, 177, 181, 181, 178, 178, 182, 182, 182,
	182, 185, 185, 186, 186, 186, 183, 183, 183, 180,
	180, 180, 219, 219, 219, 188, 188, 198, 198, 195,
	195, 196, 196, 189, 189, 236, 236, 204, 204, 203,
	203, 203, 199, 199, 199, 200, 200, 216, 216, 212,
	212, 218, 218, 213, 213, 220, 220, 221, 221, 287,
	287, 247, 247, 297, 297, 248, 248, 298, 298, 300,
	300, 295, 295, 296, 296, 299, 299, 30, 301, 301,
	302, 302, 303, 303, 303, 303, 31, 32, 32, 32,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 335, 336,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 2, 3, 3,
	11, 7, 9, 8, 8, 15, 11, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 0, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 1, 0, 2, 2, 2, 1, 2, 1, 2,
	2, 3, 2, 2, 2, 2, 1, 1, 1, 1,
	3, 2, 1, 1, 0, 3, 1, 1, 0, 1,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 2, 4, 3, 3, 5, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 1, 10, 11, 11, 12, 12,
	3, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 0,
	2, 0, 2, 1, 5, 1, 3, 5, 4, 3,
	5, 3, 8, 10, 3, 3, 3, 3, 3, 5,
	4, 5, 1, 2, 2, 4, 3, 6, 5, 3,
	8, 0, 1, 2, 0, 1, 7, 1, 3, 8,
	8, 3, 3, 3, 5, 3, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 0, 1, 1, 3,
	2, 3, 3, 4, 3, 5, 5, 4, 4, 4,
	2, 2, 2, 6, 2, 4, 4, 4, 5, 7,
	6, 3, 5, 4, 2, 4, 3, 2, 4, 5,
	6, 2, 6, 6, 3, 3, 3, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 1, 1,
	2, 1, 1, 1, 2, 4, 4, 1, 1, 2,
	3, 4, 4, 5, 3, 1, 1, 3, 3, 1,
	1, 1, 1, 0, 3, 1, 1, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 3, 5, 1, 1, 3,
	5, 1, 2, 3, 5, 2, 2, 6, 0, 1,
	0, 3, 0, 1, 0, 2, 2, 4, 1, 2,
	2, 2, 2, 2, 0, 2, 1, 3, 3, 1,
	3, 0, 1, 2, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 1, 2, 2, 4,
	2, 6, 1, 4, 6, 3, 2, 0, 3, 0,
	3, 1, 3, 1, 3, 4, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 3, 2, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 5, 6, 6, 6, 5,
	5, 5, 6, 5, 5, 6, 5, 5, 5, 5,
	6, 5, 5, 5, 4, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 3, 6,
	6, 6, 8, 8, 8, 8, 4, 6, 7, 7,
	7, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	0, 2, 1, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 1, 1, 0, 2, 4,
	2, 4, 1, 3, 5, 4, 6, 0, 3, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 3, 1, 3, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 3, 1, 1, 0,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 0, 4, 0, 1, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 3, 3, 1, 3,
	2, 4, 1, 2, 1, 2, 2, 2, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -334, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 293, -65, 296, 297, -339, -207, 221, 222, 20,
	37, 298, 300, 31, 32, 190, 238, 240, 265, -5,
	-88, -6, 8, 391, 139, 294, 171, 170, 26, 440,
	-335, 68, 503, -151, 15, -67, -340, -67, -67, -67,
	-67, -67, -263, -205, 106, 68, 23, -200, 150, 87,
	382, 146, -208, 234, 236, -198, -199, 198, 208, 44,
	157, 156, 147, 234, 147, 148, 150, 382, 146, 183,
	182, 234, 236, 147, -107, -220, 72, -210, 160, 451,
	259, 437, 246, 195, 293, 307, 309, 301, 336, 324,
	438, 452, 161, 216, 145, 292, 322, 325, 369, 159,
	249, 209, 272, 453, 358, 364, 219, 296, 378, 454,
	162, 213, 215, 214, 203, 220, 36, 172, 320, 255,
	313, 224, 198, 455, 445, 311, 28, 193, 456, 283,
	366, 341, 284, 258, 457, 442, 253, 365, 316, 312,
	265, 163, 157, 285, 458, 342, 346, 459, 370, 239,
	286, 460, 461, 462, 149, 245, 305, 306, 463, 199,
	372, 250, 340, 33, 158, 439, 48, 180, 373, 38,
	344, 37, 350, 464, 282, 339, 334, 351, 465, 466,
	467, 468, 263, 261, 262, 264, 338, 304, 333, 211,
	53, 144, 348, 347, 349, 212, 368, 329, 327, 469,
	470, 254, 164, 471, 472, 314, 18, 473, 474, 376,
	175, 256, 257, 42, 475, 476, 477, 110, 478, 479,
	480, 367, 343, 345, 197, 114, 317, 154, 481, 260,
	363, 269, 441, 243, 111, 374, 310, 483, 288, 300,
	179, 174, 377, 278, 484, 222, 485, 486, 487, 166,
	488, 237, 236, 297, 270, 112, 298, 360, 217, 489,
	490, 491, 492, 207, 192, 380, 371, 52, 221, 355,
	493, 273, 289, 303, 156, 223, 494, 247, 294, 43,
	7, 210, 251, 361, 271, 218, 208, 331, 181, 495,
	496, 318, 319, 337, 302, 332, 295, 184, 176, 109,
	379, 356, 443, 234, 290, 326, 323, 187, 330, 497,
	150, 498, 188, 299, 375, 248, 321, 357, 147, 131,
	325, 369, 138, 359, 360, 366, -257, 367, 182, 185,
	-224, 147, -193, 358, 239, 260, 412, 188, 189, 148,
	149, 33, 371, 370, 362, -220, 151, 299, -76, 142,
	177, -107, -47, 72, 223, -47, 30, 72, 72, 36,
	72, 298, 361, 361, 75, 441, 191, 21, -326, -307,
	269, -325, -305, 139, 138, 10, 140, 274, 275, 276,
	148, 8, 31, 482, 165, 277, 278, 6, 169, 279,
	280, 183, 9, 281, -310, 74, 72, -210, 21, -326,
	-307, 269, -202, -201, 291, 350, 6, -69, 5, -189,
	152, 295, -87, 450, -93, -222, -220, -211, 74, 252,
	168, 242, 353, 408, 409, 410, 411, 191, 412, 425,
	407, 426, 97, 189, 274, 275, 266, 276, 167, 427,
	115, 196, 177, 231, 362, 230, 235, 413, 414, 428,
	429, 430, 415, 416, 241, 431, 432, 501, 244, 502,
	267, 434, 482, 435, 277, 433, 279, 186, 419, 418,
	417, 420, 280, 402, 403, 421, 51, 423, 422, 424,
	81, -3, -168, 17, 16, -73, 54, 55, -68, -81,
	122, -83, -220, -115, 89, -121, 29, 72, -210, 24,
	-120, -211, -116, -143, -142, -96, 131, 132, 133, 120,
	121, 128, 90, 134, -128, -127, -129, -131, -132, 74,
	73, 82, 75, 76, 77, 78, 83, 408, 409, 410,
	411, 412, 425, 426, 427, 413, 414, 428, 429, 430,
	415, 416, 431, 432, 434, 435, 433, 419, 418, 417,
	420, 402, 403, 421, 423, 422, 424, 84, 85, -212,
	-140, -335, 381, 390, 389, 388, 386, 387, 383, 385,
	384, 153, 382, 126, 391, 394, 395, -189, -189, 11,
	-100, -101, -107, -110, -220, -178, 295, -185, -182, 370,
	371, -183, -186, -180, -143, 350, 479, 480, 369, 325,
	368, -212, -220, -2, -5, 6, -107, -264, -252, -255,
	-213, 162, -277, -212, -209, 159, 72, -210, 252, 143,
	168, 139, 88, 444, 23, 25, 242, 353, 408, 91,
	131, 409, 410, 411, 16, 20, 92, 130, 81, 392,
	191, 412, 138, 62, 407, 383, 385, 381, 382, 359,
	29, 10, 26, 170, 202, 22, 124, 140, 95, 96,
	97, 189, 173, 274, 275, 24, 171, 266, 85, 276,
	167, 115, 196, 19, 65, 177, 231, 11, 362, 185,
	238, 13, 406, 113, 230, 14, 235, 153, 152, 108,
	200, 148, 60, 8, 134, 27, 105, 56, 413, 414,
	447, 45, 190, 448, 58, 106, 17, 386, 387, 31,
	436, 415, 178, 449, 416, 126, 205, 63, 50, 241,
	89, 83, 501, 34, 86, 66, 287, 87, 15, 201,
	61, 404, 244, 502, 267, 182, 482, 204, 450, 165,
	107, 277, 141, 391, 268, 240, 59, 146, 6, 401,
	30, 169, 279, 206, 186, 419, 418, 417, 420, 57,
	394, 395, 421, 280, 499, 147, 94, 402, 403, 151,
	183, 84, 5, 44, 32, 9, 281, 64, 67, 388,
	389, 390, 47, 51, 423, 422, 424, 93, 12, 405,
	440, 148, -107, 391, -196, 153, -196, 183, 182, -196,
	-196, 147, 98, -53, -107, -309, -304, -310, -195, 153,
	-212, -195, -195, -195, -195, -195, -195, -195, -107, 135,
	-107, 72, 30, -194, 106, 12, 382, 146, 147, 183,
	150, -259, 11, 108, 186, 186, 186, 187, 186, -192,
	361, 363, 184, 364, 365, 12, -84, 106, 19, -335,
	-168, -168, 72, 298, 151, -61, -3, -11, -9, -10,
	-3, 98, 30, 30, 74, 51, 30, -42, -41, -43,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 30, -288, 68, -247, 350, 72, -301, -302,
	-107, 75, 75, 66, 66, 69, 151, 69, 66, -327,
	270, 68, -327, 236, 270, 271, 208, 234, 150, -327,
	-327, 236, -327, -327, -327, -327, -327, 361, -327, -327,
	-327, 272, 273, -327, 359, 150, -327, -327, -327, -327,
	-327, 71, 66, 69, 260, 66, 11, 66, -274, 131,
	283, 284, 285, 286, 282, 260, 287, 288, 289, 186,
	290, -67, -7, -5, -335, 21, 22, 147, 374, 69,
	-87, -171, -335, -336, 70, -169, 19, 31, -124, 75,
	78, -152, -155, -83, -220, 50, -71, 21, 22, 80,
	11, -215, 88, 87, 105, -214, 23, 72, -210, -211,
	74, 135, -83, -118, 108, 89, 106, 107, 91, 117,
	116, 127, 120, 121, 122, 123, 124, 125, 126, 118,
	119, 130, 98, 99, 100, 101, 102, 103, 104, -190,
	-335, -96, -335, 136, 137, -121, -121, -121, -121, -121,
	-121, -121, -121, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -3, -135, -83, -335, -338, -130,
	-335, -338, -130, -338, -130, -338, -335, -338, -130, -338,
	-130, -338, -338, -130, -338, -335, -335, -335, -335, -335,
	-335, -109, 27, -107, -86, -89, -91, -92, -111, -95,
	-335, -90, -107, -96, 72, -107, -100, -337, 69, 11,
	67, -337, 69, 135, 69, -179, -184, 372, 374, 295,
	-183, -183, -219, -212, 74, 29, 98, 30, 135, -151,
	-67, 70, 69, -255, 162, 159, -226, -230, -232, -231,
	-233, -228, -229, 322, 325, 329, 327, 323, 328, 131,
	326, 331, 332, 333, 334, 335, 336, 337, 338, 339,
	340, 341, 30, 172, 318, 319, 320, 321, 342, 343,
	344, 345, 346, 347, 348, 349, 301, 324, 438, 302,
	303, 304, 305, 306, 307, 309, 310, 311, 312, 313,
	314, 315, 316, 72, -211, -277, 68, -212, 23, 150,
	72, 89, 72, 72, 72, -313, -312, -304, -307, -196,
	72, 69, 151, 69, 151, 71, -100, 24, 66, -102,
	-107, 72, 72, 72, 72, -306, -304, -307, -221, -220,
	-209, -194, 74, -83, -196, -196, -107, -107, -107, -107,
	-194, -194, -194, -194, -191, 11, 108, 11, -191, -191,
	-83, -121, -304, 384, 122, 72, 72, 298, 72, -42,
	-42, 74, -42, 69, 98, -42, 70, -135, -287, 500,
	69, -303, 23, 374, 375, 351, -329, 147, 185, 182,
	-329, -325, 278, -306, -305, -304, -327, -328, -212, -327,
	-327, -327, 361, -327, -327, -327, -327, -327, -327, -327,
	-327, -310, -329, 238, 69, -329, -306, -304, 282, 282,
	282, 282, 282, 282, -73, -3, -107, 375, 376, -93,
	23, -170, -213, 9, 108, 69, 18, 69, -167, 25,
	26, 135, -122, 51, 75, 78, -197, 49, -107, -83,
	-83, -133, 83, 89, 84, 85, -214, 122, -221, -213,
	-209, -121, -134, -140, -96, 79, 108, 106, 107, 91,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -121, -121, -223, 72, 74, 72, -120,
	-120, -212, -71, -79, -82, 122, -83, -220, -79, -79,
	-71, -336, -336, -82, -79, -79, -79, -82, -79, -71,
	-71, -79, -336, -336, -336, -336, -79, -79, -79, -79,
	-212, -212, -71, -79, -79, -79, -71, -336, 69, -336,
	-3, -336, -121, -79, -80, -79, -79, -79, -79, -79,
	-174, 110, -107, 30, 69, -103, -105, -104, -106, 56,
	60, 62, 57, 58, 59, 63, -205, -86, -94, 47,
	-335, -112, 110, -113, 23, -222, 64, 152, 65, -335,
	-174, 67, -86, -107, -86, -110, -220, 122, -182, -185,
	69, 373, 375, 376, -179, -240, 130, 66, 86, -83,
	-213, -221, -168, -73, -265, -266, -267, -213, 74, 75,
	-252, -253, -254, -255, -268, 162, -276, 154, 156, 157,
	44, -256, 163, 148, 45, -227, -242, 356, -234, 68,
	-234, -234, 330, 322, 325, 323, -234, -234, -234, -234,
	-234, -239, 325, -239, -239, -239, -239, 323, 68, 68,
	-234, -234, -234, -244, 68, -244, 317, -245, 68, -245,
	-245, -245, -245, -277, -277, -83, -216, 67, -165, -107,
	-241, 29, 24, -241, -48, 195, 168, 68, -308, 69,
	29, -314, 235, -107, -107, -107, -304, -304, -310, -284,
	166, 161, -107, 69, 69, 72, 72, -260, 11, 108,
	-194, -220, -220, -107, -123, 23, -194, -77, 173, 67,
	-338, -336, 72, -41, -120, 70, -108, 27, 74, -302,
	-222, 350, 375, -330, 122, -212, -330, -333, 440, 151,
	70, 69, -327, -330, 256, 238, -330, 11, -275, 19,
	-71, -336, -55, -54, 143, 140, 141, 144, 145, -280,
	353, 139, 179, -95, -335, -336, 69, 135, 52, -124,
	-124, -155, -188, 19, 11, 47, 47, -72, 57, 83,
	84, 85, 135, -335, -134, -121, -121, -121, -77, 88,
	-336, -79, 69, -336, 135, -336, -336, -79, -156, 404,
	-156, -336, -336, -336, -336, -336, -336, -79, -79, -336,
	-156, -156, -156, -156, -336, -336, -336, -336, 69, 69,
	-79, -336, -336, -336, -80, -83, -336, -336, -336, -336,
	-336, -336, -336, -336, -119, 30, 47, -335, -3, -335,
	-177, -181, -143, -209, -89, -91, -91, -89, -91, 56,
	56, 56, 61, 56, 61, 56, -104, -222, -336, -336,
	-139, 194, -335, 34, -222, -113, 148, 148, 148, -80,
	-114, 12, -86, -114, -114, 135, -184, -187, 377, 374,
	380, 72, 74, 135, -169, 69, -267, 98, -255, 68,
	72, -261, -211, 45, -256, 148, 45, -258, -256, -256,
	-261, 72, -261, 45, 83, 89, -237, -238, -246, -249,
	-235, 29, 66, 353, 154, 45, 44, 157, 81, -243,
	357, 75, -239, -239, -234, -234, -234, 330, -234, -239,
	-240, 30, -240, -240, -240, -240, -239, -250, 74, -250,
	75, -244, 75, 70, 66, -212, -3, 23, -239, -239,
	-49, 8, 9, 10, -289, -290, -291, 72, 108, 200,
	201, -317, 268, -312, 236, 245, 88, 16, 440, 151,
	151, -107, -304, -114, 72, 72, -191, -194, 34, -121,
	-307, 188, 189, -174, 147, -303, 151, 135, 135, 151,
	259, -306, -212, 11, 11, 256, 11, -306, 292, -197,
	69, -206, -256, -286, -254, -255, -285, 155, 162, 163,
	-206, 162, 159, -256, 163, 154, 155, -203, -256, 151,
	23, -206, -206, -262, 98, -206, 110, -213, -213, 53,
	-107, -78, -166, 122, -213, -80, -77, 88, -121, -336,
	-82, -157, -156, 122, -221, -157, -157, -336, -212, -161,
	-335, -156, -157, -157, -156, -156, -156, -336, -336, -156,
	-157, -157, -157, -157, -121, -121, -336, -157, -157, -157,
	-336, -176, 66, -177, -138, -141, -140, -335, -3, -336,
	-170, 6, 440, -175, -212, -114, 69, 98, 98, -98,
	-97, 66, 67, -99, 66, -97, 56, 56, -173, 68,
	69, -140, -335, -175, -121, -113, -335, -335, -335, -336,
	-151, -83, -114, 374, 378, 379, -266, -267, -270, -269,
	-212, -211, 154, -276, 44, -276, -261, -261, -261, 68,
	83, -121, 9, 45, 45, 45, 74, 70, -240, -240,
	-239, -234, -240, 72, 131, -240, 70, 69, 70, 69,
	70, 69, -117, 456, 89, -107, -165, -165, -241, -241,
	66, 70, 69, -226, 72, 72, 72, -320, 440, 241,
	-318, -316, 247, 248, 249, 250, 251, -307, 246, -314,
	243, 74, 72, -107, -304, -194, -121, -239, -107, -306,
	122, 122, -212, -306, 256, -332, 440, -306, -306, 11,
	-306, 74, -72, -54, 68, -251, 72, -211, -261, -199,
	154, 72, 72, 72, -211, 72, -211, -212, 45, 45,
	72, -107, -212, -251, 72, -83, -212, -212, 135, -114,
	11, 69, -81, -336, -121, -157, 135, -157, -217, 72,
	-157, -157, 69, 69, -157, 28, -176, 69, -336, -336,
	47, -336, -336, 69, -151, -181, -83, -83, -83, 68,
	-83, -172, -212, 194, -336, -113, -205, -172, -172, -172,
	-168, 70, 69, -234, -234, 45, -258, -172, -127, 402,
	403, -240, -239, 74, -239, 75, 75, 456, 68, -3,
	-240, -240, -107, -292, -293, -294, 81, 439, 89, 202,
	203, 164, 204, 205, 206, -291, -226, -226, -226, -323,
	-324, -322, 244, 266, 267, 252, -321, -319, 261, 262,
	263, 264, 88, 74, 74, 74, -315, 235, 88, 244,
	16, 23, -295, -192, -332, -332, 238, -306, -78, -251,
	-153, 167, 168, -226, -226, -216, -258, 45, 72, -204,
	151, 23, 151, -153, -251, 30, 140, 27, -213, -148,
	13, -86, -166, -166, 122, -137, 110, -121, -121, 45,
	-141, -138, 47, -3, -335, -212, -168, -172, 70, 69,
	-140, -112, -222, -336, -336, -336, -272, -271, 67, 158,
	81, -269, -167, -167, -261, 70, -240, -240, 70, 70,
	-270, -165, 19, -165, -294, 74, 206, 202, 206, 206,
	206, 206, 207, -311, 81, 242, -322, 253, 461, 237,
	268, 75, 75, 109, 31, 32, -319, 75, 75, 75,
	75, -316, 16, 440, -314, 243, 74, 74, -296, 38,
	-298, 39, -331, 23, -331, 256, 11, 70, 72, -227,
	-227, 68, -261, 68, 72, -212, -153, 29, 29, -335,
	-149, 14, 16, -114, -81, -151, 16, -336, -336, 9,
	-138, -3, 70, -212, -113, -271, 72, -262, 74, 165,
	70, 193, -20, -3, -9, -10, -11, -12, -14, -50,
	-15, -16, -21, -22, -17, -56, -57, -65, -63, -64,
	-60, -59, -25, -23, -26, -18, -27, -28, -29, -33,
	-34, -24, -35, 92, 153, 224, 293, 36, 36, 198,
	199, 74, 74, 29, 254, 134, 29, 75, 134, 407,
	243, 74, 72, 244, -236, 152, -299, 43, -297, -248,
	42, 16, -304, -86, -270, -216, -270, -121, -278, -279,
	110, -159, 405, -150, -83, -136, -85, -83, -148, -166,
	-162, 112, 111, -135, -177, -336, 75, -107, -273, -272,
	194, -165, -83, -83, 72, -46, -218, 227, 228, 229,
	-213, -36, -20, 75, 29, 75, 29, 257, 244, 23,
	-173, 75, -298, 16, -300, 40, 41, 74, 440, -114,
	70, 68, 70, -336, 69, -212, -158, -160, -212, 69,
	-149, -336, -163, 91, -164, 109, 407, -125, 75, 134,
	-163, 68, -154, 196, 197, -37, -38, 93, 94, 225,
	226, 230, -226, 69, 503, 255, 255, 74, 38, 74,
	16, 16, 236, -148, -273, -270, -273, -279, 47, 69,
	23, -85, -159, -164, 114, 115, 194, 114, 115, -120,
	-172, -165, 72, 72, 97, 95, -38, -83, -36, 19,
	19, 19, 29, -213, 97, -20, 74, 74, 29, 241,
	21, -307, -149, 70, 180, -160, -161, 88, -212, 70,
	-13, -19, -12, -9, -10, -11, 293, 92, -36, 94,
	503, -47, 75, -3, -45, -44, 75, -47, 232, 89,
	233, 72, -121, 258, -159, -273, 181, -164, -282, -283,
	66, -165, -36, 503, -36, 97, 95, -39, -40, 96,
	-20, 69, 231, -307, -335, -283, 66, -282, 66, 10,
	9, 503, 97, 503, 153, -36, 97, 95, -40, -83,
	-44, -121, 178, -281, 166, 161, 164, 30, -281, 97,
	92, 503, 153, -36, 94, -336, -336, 160, 29, 83,
	97, 503, -36, 153, 97, 503, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 708, 708, 708, 708,
	708, 708, 806, -2, 573, 0, 0, 0, 0, -2,
	681, 682, 683, 687, 688, 703, 705, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 40,
	0, 0, 56, 57, 1113, 0, 706, 695, 696, 0,
	0, 1645, 2, 1051, 0, 717, 710, 0, 1113, 1113,
	0, 0, 87, 0, 0, 0, 807, 0, 0, 0,
	1111, 1111, 0, 1111, 1111, 0, 1126, 0, 1108, 1122,
	1123, 1124, 0, 0, 1109, 0, 1109, 1109, 1109, 1109,
	1109, 1109, 1109, 0, 630, 824, 1135, 1136, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 0, 0,
	0, 674, 0, 640, 641, 642, 0, 644, 0, 0,
	0, 0, 0, 654, 657, 661, 0, 1051, 1051, 519,
	520, 521, 678, 679, 668, 680, 0, 0, 0, 0,
	0, 707, 305, 307, 0, 327, 0, 330, 333, 1141,
	689, 0, 0, 1166, 1167, 0, 0, 0, 0, 0,
	1496, 181, 244, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 0, 183, 183, 183, 1508, 183, 0, 183,
	183, 183, 183, 183, 243, 233, 234, 235, 0, 0,
	0, 1496, 0, 499, 496, 497, 708, 0, 712, 0,
	1114, 684, 45, 0, 47, 1067, 808, 809, 810, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 0, 1057, 0, 0, 720, 718, 719, 709, 0,
	731, 761, 0, 833, 0, 838, 840, -2, -2, 0,
	881, 882, 883, 884, 885, 886, 0, 0, 0, 0,
	0, 0, 0, 0, 910, 911, 912, 913, 914, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1587, 1588, 1589,
	1590, 1592, 1593, 1595, 1603, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1619, 1620, 1625, 1627, 1629, 1632, 1633, 1634,
	1635, 1637, 1638, 1639, 1641, 1642, 1643, 842, 843, 1021,
	1080, 0, 983, 983, 983, 983, 983, 983, 983, 983,
	983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 67, 69, 824, 73, 1561, 0, 1085, -2,
	-2, 1087, 0, 0, 0, -2, -2, -2, -2, 1362,
	-2, 1021, 0, 88, 1043, 708, 89, 0, 370, 371,
	0, 1375, 543, 1133, 1134, 1364, 1129, 1130, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1111, 0, 611, 0, 612, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 629, 0,
	631, 632, 674, 634, 0, 0, 1111, 1111, 0, 0,
	0, 0, 545, 546, 674, 674, 674, 674, 671, 0,
	671, 651, 671, 669, 670, 0, 656, 0, 0, 0,
	664, 665, 690, 0, 0, 697, 699, 700, 701, 702,
	698, 0, 0, 0, 309, 0, 0, 329, 311, 0,
	314, 315, 316, 317, 318, 319, 320, 321, 322, 323,
	324, 325, 0, 332, 0, 1139, 1142, 694, 1157, 1158,
	0, 1168, 1169, 187, 187, 0, 0, 0, 0, 150,
	183, 0, 152, 183, 183, 183, 0, 183, 183, 159,
	160, 183, 162, 163, 164, 165, 166, 183, 168, 169,
	170, 183, 183, 173, 183, 183, 176, 177, 178, 179,
	180, 242, 187, 0, 0, 187, 0, 0, 481, 0,
	0, 0, 0, 486, 487, 488, 489, 0, 0, 492,
	493, 717, 42, 52, 0, 713, 714, 0, 0, 0,
	46, 0, 0, 51, 1646, 37, 0, 0, 1052, 1055,
	1056, 1044, 1045, 1048, 0, 0, 715, 721, 722, 711,
	0, 732, 0, 0, 0, 762, 0, 764, 765, 766,
	767, 0, 836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 860, 861, 862, 863, 864, 865, 866, 839,
	0, 853, 0, 0, 0, 902, 903, 904, 905, 906,
	907, 908, 0, 720, 0, 0, 0, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 720, 0, 0, 879, 0, 966, 975,
	0, 967, 976, 968, 977, 969, 0, 970, 978, 971,
	979, 972, 973, 980, 974, 0, 875, 0, 0, 0,
	0, 71, 0, 823, 0, 768, 770, 771, 772, -2,
	0, 776, 827, 873, 1135, -2, 0, 0, 0, 63,
	64, 0, 0, 0, 0, 74, 76, 0, 0, 1561,
	1088, 1089, 472, 1102, 1103, 1104, 0, 1100, 0, 1051,
	717, 560, 0, 372, 0, 0, 381, 460, 390, 391,
	392, 453, 394, 453, 453, 0, 453, 453, 453, 453,
	453, 467, 467, 467, 467, 467, 436, 437, 438, 439,
	440, 0, 0, 413, 453, 453, 453, 417, 443, 444,
	445, 446, 447, 448, 449, 450, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 455, 455, 457, 457,
	457, 457, 457, 0, 0, 542, 0, 1127, 85, 0,
	470, 0, 470, 0, 0, 99, 260, 246, 98, 0,
	232, 0, 0, 0, 0, 237, 626, 1110, 0, 619,
	65, 620, 621, 622, 623, 624, 239, 625, 825, 1137,
	1138, 633, 675, 676, 0, 0, 637, 638, 639, 547,
	645, 646, 647, 653, 674, 0, 0, 0, 787, 674,
	655, 867, 658, 983, 0, 692, 691, 0, 704, 306,
	308, 310, 328, 0, 0, 331, 334, 0, 0, 0,
	0, 1160, 0, 1162, 1164, 0, 0, 188, 189, 190,
	0, 182, 0, 205, 245, 0, 151, 0, 185, 153,
	154, 155, 183, 157, 158, 161, 167, 171, 172, 174,
	175, 241, 0, 0, 0, 0, 148, 0, 482, 483,
	484, 485, 494, 491, 720, 0, 0, 685, 686, 48,
	0, 0, 1069, 1058, 0, 0, 0, 0, 1047, 1049,
	1050, 0, 0, 1032, 0, 0, 723, 716, 39, 834,
	835, 837, 854, 0, 856, 858, 763, 733, 0, 1022,
	-2, 844, 845, 869, 870, 871, 0, 0, 0, 0,
	867, 849, 0, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 901, 997, 998, 0, 899,
	900, 909, 0, 0, 877, 727, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 875, 872, 0, 1079,
	0, 984, 0, 0, 0, 876, 0, 0, 0, 0,
	0, 0, 822, 0, 0, 0, 0, 0, 0, 811,
	0, 0, 814, 0, 0, 0, 0, 0, 0, 0,
	0, 780, 1482, 782, 0, 827, 0, 0, 0, 875,
	831, 0, 831, 68, 831, 70, 0, 826, 1086, 0,
	0, 0, 79, 80, 75, 1090, 0, 1096, 1097, 1098,
	1022, 0, 1057, 720, 369, 561, 563, 566, 567, 568,
	373, 375, 376, 377, 0, -2, 534, 1492, 1539, -2,
	-2, 526, 1406, -2, -2, 380, 462, 461, 393, 0,
	467, 467, 453, 453, 453, 453, 422, 467, 425, 428,
	429, 472, 0, 472, 472, 472, 472, 467, 0, 0,
	414, 415, 416, 405, 0, 406, 455, 408, 0, 409,
	410, 411, 412, 540, 541, 0, 0, 0, 0, 0,
	467, 471, 1112, 467, 0, 262, 263, 208, 101, 0,
	0, 247, 0, 368, 0, 613, 0, 615, 236, 617,
	627, 628, 618, 0, 0, 635, 636, 831, 0, 0,
	648, 672, 673, 671, 674, 0, 652, 666, 0, 0,
	659, 0, 693, 312, 313, 335, 71, 0, 1140, 1159,
	0, 1163, 1165, 0, 191, 193, 0, 142, 0, 0,
	184, 0, 156, 0, 0, 0, 0, 0, 490, 0,
	715, 53, 574, 575, -2, 604, 1119, 604, 604, 592,
	509, 604, 0, 49, 0, 1068, 0, 0, 0, 1053,
	1054, 1046, 0, 1105, 1106, 1033, 1034, 86, 724, 855,
	857, 859, 0, 875, 846, 867, 850, 0, 847, 0,
	841, 0, 0, 742, 0, 742, 742, 0, 934, 0,
	935, 0, 742, 742, 0, 0, 0, 0, 0, 0,
	941, 942, 943, 944, 742, 742, 742, 742, 0, 0,
	0, 742, 742, 742, 0, 880, -2, 985, 986, 987,
	988, 989, 990, 991, 1073, 0, 0, 0, 1062, 0,
	831, 1081, 0, 0, 769, 802, 804, 0, 799, 812,
	813, 815, 0, 817, 0, 819, 820, 789, 775, 874,
	777, 0, 0, 0, 827, 786, 0, 0, 0, 0,
	1043, 0, 831, 61, 62, 0, 77, 78, 0, 0,
	84, 473, 474, 0, 207, 0, 564, 0, 374, 0,
	527, 0, 0, 511, 526, 522, 523, 526, 525, 526,
	517, 527, 518, 0, 382, 0, 384, 385, 386, 387,
	388, 0, 0, 466, 0, 476, 478, 0, 0, 389,
	463, 0, 472, 472, 467, 420, 421, 453, 426, 472,
	430, 0, 431, 432, 433, 434, 472, 0, 451, 0,
	0, 407, 0, 557, 0, 1128, 85, 85, 470, 470,
	0, 264, 265, 266, 0, 209, 210, 0, 0, 0,
	0, 111, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 66, 240, 643, 548, 549, 674, 650, 0, 868,
	660, 662, 663, 467, 0, 1161, 0, 0, 0, 0,
	0, 203, 186, 0, 0, 0, 0, 149, 0, 723,
	0, 0, 526, 0, 593, 594, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1120,
	1121, 0, 0, 0, 510, 0, 0, 1071, 1070, 1059,
	38, 831, 0, 734, 1023, 0, 848, 0, 851, 742,
	878, 919, 743, 729, 0, 920, 921, 742, 735, 736,
	738, 936, 923, 924, 937, 938, 939, 742, 742, 940,
	928, 927, 926, 929, 0, 0, 742, 932, 931, 933,
	915, 54, 0, 1073, 1060, 1075, 1077, 0, 0, 0,
	0, -2, 1342, 0, 793, 1043, 0, 0, 0, 796,
	803, 0, 0, 797, 0, 798, 816, 818, 773, 0,
	0, 778, 0, 0, -2, 785, 0, 0, 0, 795,
	1051, 832, 60, 81, 82, 83, 562, 565, 0, 528,
	453, 453, 0, 532, 524, 533, 513, 514, 516, 0,
	383, 464, 0, 475, 477, 479, 480, 454, 418, 419,
	472, 427, 423, 468, 469, 435, 467, 0, 467, 0,
	458, 0, 544, 558, 0, 0, 91, 0, 472, 472,
	0, 216, 0, 212, 0, 0, 0, 119, 0, 102,
	103, 104, 106, 107, 0, 0, 0, 100, 0, 249,
	0, 252, 253, 614, 616, 649, 788, 1151, 821, 203,
	192, 194, 195, 203, 206, 143, 0, 144, 146, 0,
	145, 495, 86, 576, 0, 601, 0, 0, 1127, 524,
	0, -2, 579, 584, 585, 586, 587, 588, 0, 599,
	0, 581, 0, 601, 0, 596, 0, 0, 0, 1035,
	0, 86, 86, 916, 852, 918, 0, 922, 740, 739,
	917, 925, 0, 0, 930, 0, 55, 0, 1078, -2,
	0, 0, 72, 0, 1051, 1082, 1083, 1084, 800, 0,
	805, 0, 791, 0, 827, 783, 0, 0, 0, 0,
	59, 501, 0, 1048, 1048, 512, 526, 0, 465, 0,
	0, 424, 472, 452, 472, 0, 0, 559, 0, 85,
	93, 94, 0, 85, 217, 218, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 211, 213, 214, 215, 137,
	120, 121, 0, 0, 0, 0, 112, 113, 0, 0,
	0, 0, 0, 108, 109, 110, 248, 0, 0, 251,
	0, 0, 1153, 1147, 196, 196, 0, 147, 0, 0,
	578, 602, 0, 381, 381, 0, 526, 0, 595, 0,
	1117, 1118, 0, 590, 601, 0, 0, 0, 1072, 1040,
	0, 831, 0, 725, 730, 1043, 0, 0, 0, 0,
	1076, 1061, 0, 1065, 0, 794, 58, 0, 790, 0,
	779, 781, 827, 828, 829, 830, 500, 504, 0, 509,
	0, 529, 530, 531, 515, 0, 441, 442, 456, 459,
	0, 92, 0, 0, 219, 220, 221, 222, 224, 225,
	0, 0, 0, 97, 0, 0, 122, 0, 0, 0,
	0, 132, 133, 134, 135, 136, 114, 115, 116, 117,
	118, 105, 0, 0, 250, 0, 255, 256, 1115, 1155,
	-2, 0, 140, 0, 141, 204, 0, 577, 603, 378,
	379, 0, 1127, 0, 580, 589, 591, 0, 598, 0,
	754, 0, 0, 1035, 86, 744, 0, 981, 982, 0,
	1064, 0, 801, 792, 784, 505, 506, 0, 508, 0,
	502, 0, 85, 338, 339, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 0, 0, 0, 226, 227, 228,
	229, 138, 139, 123, 124, 0, 126, 127, 0, 0,
	0, 258, 0, 254, 789, 0, 1147, 0, 1149, 0,
	1146, 0, 197, 831, 0, 0, 0, 597, 0, 607,
	0, 43, 0, 1041, 1042, 1036, 1037, 1039, 1040, 726,
	0, 0, 0, 741, 1074, -2, 507, 0, 90, 503,
	267, 96, 0, 0, 1129, 0, 0, 294, 295, 296,
	1131, 0, 336, 0, 128, 0, 130, 131, 257, 0,
	36, 0, 1154, 0, 1152, 0, 0, 1148, 0, 1035,
	502, 0, 502, 606, 0, 0, 755, 756, 0, 0,
	754, 737, 745, 0, 748, 0, 0, 0, 759, 0,
	746, 0, 85, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 292, 0, 0, 125, 129, 259, 1116, 1156,
	0, 0, 0, 1040, 582, 0, 600, 608, 0, 0,
	0, 1038, 44, 0, 749, 750, 751, 752, 753, 0,
	0, 0, 268, 269, 0, 0, 279, 0, 0, 0,
	0, 0, 0, 1132, 230, 337, 1150, 1144, 198, 199,
	200, 202, 754, 502, 0, 757, 758, 0, 760, 535,
	85, 270, 271, 272, 273, 274, 0, 276, 0, 0,
	0, 288, 289, 290, 0, 297, 299, 300, 301, 0,
	303, 304, 293, 0, 41, 583, 0, 747, 536, 537,
	0, 95, 0, 0, 0, 0, 0, 0, 285, 0,
	291, 0, 302, 201, 0, 538, 0, 539, 0, 0,
	0, 0, 0, 280, 281, 0, 0, 0, 286, 0,
	298, 0, 0, 550, 552, 553, 0, 0, 551, 275,
	277, 0, 283, 0, 0, 609, 610, 554, 555, 556,
	0, 0, 0, 282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 503,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:485
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:489
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:496
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:531
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:537
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:543
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:550
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:556
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:567
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:574
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:580
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:587
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:596
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:600
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:606
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:610
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:616
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:626
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:632
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:636
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:642
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:654
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:670
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:676
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:682
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:686
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:690
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:694
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:700
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:708
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:718
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:724
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:728
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:733
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:737
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:747
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:754
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:763
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:767
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:773
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:781
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:787
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:804
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:809
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:815
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:829
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:834
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:838
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:842
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:846
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetObj: &Charset{CharsetDefault: yyDollar[5].boolVal, CharsetStr: yyDollar[6].str}, CollateObj: &Collate{CollateDefault: yyDollar[7].boolVal, CollateStr: yyDollar[8].str}}
		}
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:854
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetObj: &Charset{CharsetDefault: yyDollar[5].boolVal, CharsetStr: yyDollar[6].str}, CollateObj: &Collate{CollateDefault: yyDollar[7].boolVal, CollateStr: yyDollar[8].str}}
		}
	case 95:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:862
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:866
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:870
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:889
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:898
		{
			yyVAL.accountNames = nil
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:907
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:915
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:921
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:925
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:931
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:935
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:939
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:943
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:947
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:952
		{
			yyVAL.accountLimitItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:956
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:962
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:966
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:976
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:980
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:984
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:989
		{
			yyVAL.passLockItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:993
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1017
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1025
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1029
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1033
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1037
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1041
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1057
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1061
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1066
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1081
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1086
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1090
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1094
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1100
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1105
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1109
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1113
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1117
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1121
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1127
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1131
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1135
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1151
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1163
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1171
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1195
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1203
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1207
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1211
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1215
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1223
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1243
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1247
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1257
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1262
		{
			yyVAL.strs = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1266
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1299
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1307
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1315
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantAssumption = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1344
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1349
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1358
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1369
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1377
		{
			yyVAL.procedureParams = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1381
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1387
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1391
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1397
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1405
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1414
		{
			yyVAL.characteristics = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1428
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1434
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1438
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1442
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1450
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1454
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1466
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1470
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1476
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1481
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1505
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1513
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1533
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1541
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1563
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1573
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1577
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1581
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1585
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1591
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1603
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1607
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1611
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1617
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1625
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1664
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1668
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1672
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1688
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1694
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1698
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1708
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1714
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1720
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1725
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1730
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1736
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1754
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1760
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1768
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1772
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1780
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1805
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1841
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1849
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1869
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1875
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1939
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1943
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1951
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1962
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2021
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2037
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2064
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2069
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2073
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2077
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2091
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = ColumnType{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2123
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2225
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2243
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2301
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2383
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2387
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2391
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2395
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2457
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2462
		{
			yyVAL.sqlVal = nil
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2471
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2475
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2483
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2487
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2493
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2501
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2510
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2550
		{
			yyVAL.boolVal = false
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2554
		{
			yyVAL.boolVal = true
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.colKeyOpt = colKey
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2581
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2589
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2607
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2615
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2639
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2643
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2647
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2656
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2658
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = yyDollar[1].str
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2673
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2677
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.indexOptions = nil
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2717
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2727
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2731
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2735
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2739
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2743
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2756
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2760
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = ""
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = yyDollar[1].str
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = ""
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2802
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2812
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2818
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2822
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2828
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2832
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 535:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2842
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 536:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2846
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 537:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2850
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 538:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2854
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 539:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2858
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2864
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2872
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2882
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = ""
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2911
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2917
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2944
		{
			yyVAL.boolean = true
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.boolean = true
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.boolean = false
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2973
		{
			yyVAL.str = yyDollar[1].str
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2977
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2981
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2991
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = ""
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = string("")
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3022
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3035
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3039
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3045
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3052
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3063
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3067
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3072
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 583:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3076
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3080
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3095
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3104
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3108
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3115
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3121
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3125
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3137
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3142
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3146
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3150
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3154
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 600:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3158
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3165
		{
			yyVAL.columnOrder = nil
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3173
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3178
		{
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
		}
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3184
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3200
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3204
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3210
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3214
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3220
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3224
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3236
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3242
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3250
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3254
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3262
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3270
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3278
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3286
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3294
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3302
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3311
		{

		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3319
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3329
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3334
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3340
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3345
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3353
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3357
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3361
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3365
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3369
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3377
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3385
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3389
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3393
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3397
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3401
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3405
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3409
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 650:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3414
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3423
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3427
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3435
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3441
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3449
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3453
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3458
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 660:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3462
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3467
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 662:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3471
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 663:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3475
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3489
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3495
		{
			yyVAL.boolean = false
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3499
		{
			yyVAL.boolean = true
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3509
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = ""
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3519
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3529
		{
			yyVAL.showFilter = nil
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3533
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = SessionStr
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = GlobalStr
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3561
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3567
		{
			yyVAL.statement = &Begin{}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3571
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3577
		{
			yyVAL.statement = &Begin{}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3581
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3585
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3591
		{
			yyVAL.statement = &Commit{}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3597
		{
			yyVAL.statement = &Rollback{}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3609
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3613
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3617
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3621
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3627
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3633
		{
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3637
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3641
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3675
		{
			setAllowComments(yylex, true)
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3685
		{
			yyVAL.bytes2 = nil
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3689
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = UnionStr
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = UnionAllStr
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = UnionDistinctStr
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3708
		{
			yyVAL.byt = 0
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3712
		{
			yyVAL.byt = 1
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = SQLCacheStr
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = ""
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3734
		{
			yyVAL.str = ""
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3738
		{
			yyVAL.str = DistinctStr
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3743
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = StraightJoinHint
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3753
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3761
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3780
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3784
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3794
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3798
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3802
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3812
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3818
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3831
		{
			yyVAL.exprs = nil
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3835
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3840
		{
			yyVAL.over = nil
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.over = yyDollar[1].over
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3849
		{
			yyVAL.frame = nil
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3864
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3902
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3906
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3910
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3914
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3921
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3929
		{
			yyVAL.window = nil
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3932
		{
			yyVAL.window = yyDollar[2].window
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3941
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3947
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3973
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3983
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4001
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4015
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4031
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4048
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4054
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 781:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4059
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4070
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4074
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 784:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4078
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4082
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4086
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4097
		{
			yyVAL.expr = nil
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4101
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4106
		{
			yyVAL.columns = nil
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4110
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4120
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4130
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4136
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4149
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4153
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4157
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4161
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4167
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4169
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4173
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4179
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4184
		{
			yyVAL.empty = struct{}{}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = JoinStr
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = JoinStr
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = JoinStr
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4215
		{
			yyVAL.str = StraightJoinStr
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = LeftJoinStr
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4225
		{
			yyVAL.str = LeftJoinStr
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4229
		{
			yyVAL.str = RightJoinStr
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = RightJoinStr
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4239
		{
			yyVAL.str = NaturalJoinStr
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4259
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4273
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4279
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4284
		{
			yyVAL.indexHints = nil
		}
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4288
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4292
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4296
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4301
		{
			yyVAL.expr = nil
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4305
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4315
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4319
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4323
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4335
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4361
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4369
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4373
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4377
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4385
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4389
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 852:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4393
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4397
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = IsNullStr
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = IsNotNullStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = IsTrueStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4415
		{
			yyVAL.str = IsNotTrueStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = IsFalseStr
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4423
		{
			yyVAL.str = IsNotFalseStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = EqualStr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = LessThanStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = GreaterThanStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = LessEqualStr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = GreaterEqualStr
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = NotEqualStr
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4458
		{
			yyVAL.expr = nil
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4462
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.selectExprs = nil
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4569
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4589
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4605
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4609
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4613
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4617
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4621
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4643
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4647
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4651
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4670
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4674
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4684
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4688
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4692
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4696
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4700
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 922:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4704
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4708
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4712
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4716
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 930:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4748
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4757
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4761
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4765
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4769
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4773
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4777
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4781
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4785
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4789
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4793
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4797
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4808
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4812
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4816
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4820
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4824
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 952:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4836
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 953:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4840
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 954:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4844
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 955:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4848
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4852
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4856
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4860
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 959:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4864
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 960:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4868
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 961:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 963:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4880
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4884
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4888
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4911
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4916
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4921
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4932
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4936
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4941
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4945
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4949
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4954
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4964
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 981:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4968
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 982:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4972
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4993
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4997
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5001
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5005
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5009
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5013
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = ""
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = BooleanModeStr
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5031
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5035
		{
			yyVAL.str = QueryExpansionStr
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5051
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5055
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5059
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5067
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5071
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5077
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5081
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5089
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5093
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5097
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5101
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5106
		{
			yyVAL.expr = nil
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5115
		{
			yyVAL.str = string("")
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5119
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5125
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5129
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5135
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5140
		{
			yyVAL.expr = nil
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5144
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5154
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5158
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5164
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5168
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5172
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5176
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.expr = &NullVal{}
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5211
		{
			yyVAL.exprs = nil
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5215
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5225
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5236
		{
			yyVAL.expr = nil
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5240
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5246
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5251
		{
			yyVAL.orderBy = nil
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5255
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5261
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5265
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5271
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5276
		{
			yyVAL.str = AscScr
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5280
		{
			yyVAL.str = AscScr
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5284
		{
			yyVAL.str = DescScr
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5289
		{
			yyVAL.limit = nil
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5293
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5297
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5301
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5307
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5311
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5316
		{
			yyVAL.str = ""
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5320
		{
			yyVAL.str = ForUpdateStr
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5324
		{
			yyVAL.str = ShareModeStr
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5337
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5341
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5345
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5349
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5354
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5358
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5362
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5368
		{
			yyVAL.columns = nil
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5372
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5378
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5382
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5386
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5390
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5395
		{
			yyVAL.assignExprs = nil
		}
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5399
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5409
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5419
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5425
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5431
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5441
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5445
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5451
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5454
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5460
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5464
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5481
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5494
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5507
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5513
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5517
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5523
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5527
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5531
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5537
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5541
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5545
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5552
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5559
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5563
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5567
		{
			yyVAL.expr = &Default{}
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5576
		{
			yyVAL.byt = 0
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.byt = 1
		}
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5581
		{
			yyVAL.byt = 0
		}
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5583
		{
			yyVAL.byt = 1
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5586
		{
			yyVAL.byt = 0
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5588
		{
			yyVAL.byt = 1
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5591
		{
			yyVAL.str = ""
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.str = IgnoreStr
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5596
		{
			yyVAL.sqlVal = nil
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5598
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5602
		{
			yyVAL.empty = struct{}{}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5604
		{
			yyVAL.empty = struct{}{}
		}
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5607
		{
			yyVAL.empty = struct{}{}
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5609
		{
			yyVAL.empty = struct{}{}
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.empty = struct{}{}
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5615
		{
			yyVAL.str = UniqueStr
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5617
		{
			yyVAL.str = FulltextStr
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5619
		{
			yyVAL.str = SpatialStr
		}
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5622
		{
			yyVAL.str = ""
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5624
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5627
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5629
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5633
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5637
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5643
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5647
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5654
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5660
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5664
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5676
		{
			yyVAL.str = string("")
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5678
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5681
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5683
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5686
		{
			yyVAL.EnclosedBy = nil
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5690
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5695
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5699
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5704
		{
			yyVAL.sqlVal = nil
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5708
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5713
		{
			yyVAL.sqlVal = nil
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5717
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5722
		{
			yyVAL.Fields = nil
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5726
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5731
		{
			yyVAL.Lines = nil
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5735
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5740
		{
			yyVAL.sqlVal = nil
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5744
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5750
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5756
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5760
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5766
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5770
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5776
		{
			yyVAL.lockType = LockRead
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5780
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5784
		{
			yyVAL.lockType = LockWrite
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5788
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5794
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5800
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5804
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5808
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6320
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6329
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
