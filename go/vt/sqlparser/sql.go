// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const RETURNING = 57368
const ALL = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const OF = 57381
const OUTFILE = 57382
const DUMPFILE = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const OPTIONALLY = 57390
const STARTING = 57391
const UNIQUE = 57392
const KEY = 57393
const SYSTEM_TIME = 57394
const CONTAINED = 57395
const VERSION = 57396
const VERSIONS = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const SQL_CALC_FOUND_ROWS = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const STRING = 57419
const ID = 57420
const HEX = 57421
const INTEGRAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const VALUE_ARG = 57425
const LIST_ARG = 57426
const COMMENT = 57427
const COMMENT_KEYWORD = 57428
const BIT_LITERAL = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const OFF = 57433
const INTO = 57434
const OR = 57435
const XOR = 57436
const AND = 57437
const NOT = 57438
const BETWEEN = 57439
const CASE = 57440
const WHEN = 57441
const THEN = 57442
const ELSE = 57443
const ELSEIF = 57444
const END = 57445
const LE = 57446
const GE = 57447
const NE = 57448
const NULL_SAFE_EQUAL = 57449
const IS = 57450
const LIKE = 57451
const REGEXP = 57452
const IN = 57453
const ASSIGNMENT_OP = 57454
const UNBOUNDED = 57455
const PARTITION = 57456
const RANGE = 57457
const ROWS = 57458
const GROUPS = 57459
const PRECEDING = 57460
const FOLLOWING = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const CONCAT = 57466
const UNARY = 57467
const COLLATE = 57468
const BINARY = 57469
const UNDERSCORE_ARMSCII8 = 57470
const UNDERSCORE_ASCII = 57471
const UNDERSCORE_BIG5 = 57472
const UNDERSCORE_BINARY = 57473
const UNDERSCORE_CP1250 = 57474
const UNDERSCORE_CP1251 = 57475
const UNDERSCORE_CP1256 = 57476
const UNDERSCORE_CP1257 = 57477
const UNDERSCORE_CP850 = 57478
const UNDERSCORE_CP852 = 57479
const UNDERSCORE_CP866 = 57480
const UNDERSCORE_CP932 = 57481
const UNDERSCORE_DEC8 = 57482
const UNDERSCORE_EUCJPMS = 57483
const UNDERSCORE_EUCKR = 57484
const UNDERSCORE_GB18030 = 57485
const UNDERSCORE_GB2312 = 57486
const UNDERSCORE_GBK = 57487
const UNDERSCORE_GEOSTD8 = 57488
const UNDERSCORE_GREEK = 57489
const UNDERSCORE_HEBREW = 57490
const UNDERSCORE_HP8 = 57491
const UNDERSCORE_KEYBCS2 = 57492
const UNDERSCORE_KOI8R = 57493
const UNDERSCORE_KOI8U = 57494
const UNDERSCORE_LATIN1 = 57495
const UNDERSCORE_LATIN2 = 57496
const UNDERSCORE_LATIN5 = 57497
const UNDERSCORE_LATIN7 = 57498
const UNDERSCORE_MACCE = 57499
const UNDERSCORE_MACROMAN = 57500
const UNDERSCORE_SJIS = 57501
const UNDERSCORE_SWE7 = 57502
const UNDERSCORE_TIS620 = 57503
const UNDERSCORE_UCS2 = 57504
const UNDERSCORE_UJIS = 57505
const UNDERSCORE_UTF16 = 57506
const UNDERSCORE_UTF16LE = 57507
const UNDERSCORE_UTF32 = 57508
const UNDERSCORE_UTF8 = 57509
const UNDERSCORE_UTF8MB3 = 57510
const UNDERSCORE_UTF8MB4 = 57511
const INTERVAL = 57512
const JSON_EXTRACT_OP = 57513
const JSON_UNQUOTE_EXTRACT_OP = 57514
const CREATE = 57515
const ALTER = 57516
const DROP = 57517
const RENAME = 57518
const ANALYZE = 57519
const ADD = 57520
const MODIFY = 57521
const CHANGE = 57522
const SCHEMA = 57523
const TABLE = 57524
const INDEX = 57525
const INDEXES = 57526
const VIEW = 57527
const TO = 57528
const IGNORE = 57529
const IF = 57530
const PRIMARY = 57531
const COLUMN = 57532
const SPATIAL = 57533
const VECTOR = 57534
const FULLTEXT = 57535
const KEY_BLOCK_SIZE = 57536
const CHECK = 57537
const ACTION = 57538
const CASCADE = 57539
const CONSTRAINT = 57540
const FOREIGN = 57541
const NO = 57542
const REFERENCES = 57543
const RESTRICT = 57544
const FIRST = 57545
const AFTER = 57546
const LAST = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const FORMAT = 57556
const EXTENDED = 57557
const PLAN = 57558
const MAXVALUE = 57559
const REORGANIZE = 57560
const LESS = 57561
const THAN = 57562
const PROCEDURE = 57563
const TRIGGER = 57564
const TRIGGERS = 57565
const FUNCTION = 57566
const STATUS = 57567
const VARIABLES = 57568
const WARNINGS = 57569
const ERRORS = 57570
const KILL = 57571
const CONNECTION = 57572
const SEQUENCE = 57573
const ENABLE = 57574
const DISABLE = 57575
const EACH = 57576
const ROW = 57577
const BEFORE = 57578
const FOLLOWS = 57579
const PRECEDES = 57580
const DEFINER = 57581
const INVOKER = 57582
const INOUT = 57583
const OUT = 57584
const DETERMINISTIC = 57585
const CONTAINS = 57586
const READS = 57587
const MODIFIES = 57588
const SQL = 57589
const SECURITY = 57590
const TEMPORARY = 57591
const ALGORITHM = 57592
const MERGE = 57593
const TEMPTABLE = 57594
const UNDEFINED = 57595
const EVENT = 57596
const EVENTS = 57597
const SCHEDULE = 57598
const EVERY = 57599
const STARTS = 57600
const ENDS = 57601
const COMPLETION = 57602
const PRESERVE = 57603
const CASCADED = 57604
const INSTANT = 57605
const INPLACE = 57606
const COPY = 57607
const DISCARD = 57608
const IMPORT = 57609
const SHARED = 57610
const EXCLUSIVE = 57611
const WITHOUT = 57612
const VALIDATION = 57613
const COALESCE = 57614
const EXCHANGE = 57615
const REBUILD = 57616
const REMOVE = 57617
const PARTITIONING = 57618
const CLASS_ORIGIN = 57619
const SUBCLASS_ORIGIN = 57620
const MESSAGE_TEXT = 57621
const MYSQL_ERRNO = 57622
const CONSTRAINT_CATALOG = 57623
const CONSTRAINT_SCHEMA = 57624
const CONSTRAINT_NAME = 57625
const CATALOG_NAME = 57626
const SCHEMA_NAME = 57627
const TABLE_NAME = 57628
const COLUMN_NAME = 57629
const CURSOR_NAME = 57630
const SIGNAL = 57631
const RESIGNAL = 57632
const SQLSTATE = 57633
const DECLARE = 57634
const CONDITION = 57635
const CURSOR = 57636
const CONTINUE = 57637
const EXIT = 57638
const UNDO = 57639
const HANDLER = 57640
const FOUND = 57641
const SQLWARNING = 57642
const SQLEXCEPTION = 57643
const FETCH = 57644
const OPEN = 57645
const CLOSE = 57646
const LOOP = 57647
const LEAVE = 57648
const ITERATE = 57649
const REPEAT = 57650
const UNTIL = 57651
const WHILE = 57652
const DO = 57653
const RETURN = 57654
const USER = 57655
const IDENTIFIED = 57656
const ROLE = 57657
const REUSE = 57658
const GRANT = 57659
const GRANTS = 57660
const REVOKE = 57661
const NONE = 57662
const ATTRIBUTE = 57663
const RANDOM = 57664
const PASSWORD = 57665
const INITIAL = 57666
const AUTHENTICATION = 57667
const SSL = 57668
const X509 = 57669
const CIPHER = 57670
const ISSUER = 57671
const SUBJECT = 57672
const ACCOUNT = 57673
const EXPIRE = 57674
const NEVER = 57675
const OPTION = 57676
const OPTIONAL = 57677
const ADMIN = 57678
const PRIVILEGES = 57679
const MAX_QUERIES_PER_HOUR = 57680
const MAX_UPDATES_PER_HOUR = 57681
const MAX_CONNECTIONS_PER_HOUR = 57682
const MAX_USER_CONNECTIONS = 57683
const FLUSH = 57684
const FAILED_LOGIN_ATTEMPTS = 57685
const PASSWORD_LOCK_TIME = 57686
const REQUIRE = 57687
const PROXY = 57688
const ROUTINE = 57689
const TABLESPACE = 57690
const CLIENT = 57691
const SLAVE = 57692
const EXECUTE = 57693
const FILE = 57694
const RELOAD = 57695
const REPLICATION = 57696
const SHUTDOWN = 57697
const SUPER = 57698
const USAGE = 57699
const LOGS = 57700
const ENGINE = 57701
const ERROR = 57702
const GENERAL = 57703
const HOSTS = 57704
const OPTIMIZER_COSTS = 57705
const RELAY = 57706
const SLOW = 57707
const USER_RESOURCES = 57708
const NO_WRITE_TO_BINLOG = 57709
const CHANNEL = 57710
const UNKNOWN = 57711
const APPLICATION_PASSWORD_ADMIN = 57712
const AUDIT_ABORT_EXEMPT = 57713
const AUDIT_ADMIN = 57714
const AUTHENTICATION_POLICY_ADMIN = 57715
const BACKUP_ADMIN = 57716
const BINLOG_ADMIN = 57717
const BINLOG_ENCRYPTION_ADMIN = 57718
const CLONE_ADMIN = 57719
const CONNECTION_ADMIN = 57720
const ENCRYPTION_KEY_ADMIN = 57721
const FIREWALL_ADMIN = 57722
const FIREWALL_EXEMPT = 57723
const FIREWALL_USER = 57724
const FLUSH_OPTIMIZER_COSTS = 57725
const FLUSH_STATUS = 57726
const FLUSH_TABLES = 57727
const FLUSH_USER_RESOURCES = 57728
const GROUP_REPLICATION_ADMIN = 57729
const GROUP_REPLICATION_STREAM = 57730
const INNODB_REDO_LOG_ARCHIVE = 57731
const INNODB_REDO_LOG_ENABLE = 57732
const NDB_STORED_USER = 57733
const PASSWORDLESS_USER_ADMIN = 57734
const PERSIST_RO_VARIABLES_ADMIN = 57735
const REPLICATION_APPLIER = 57736
const REPLICATION_SLAVE_ADMIN = 57737
const RESOURCE_GROUP_ADMIN = 57738
const RESOURCE_GROUP_USER = 57739
const ROLE_ADMIN = 57740
const SENSITIVE_VARIABLES_OBSERVER = 57741
const SESSION_VARIABLES_ADMIN = 57742
const SET_USER_ID = 57743
const SHOW_ROUTINE = 57744
const SKIP_QUERY_REWRITE = 57745
const SYSTEM_VARIABLES_ADMIN = 57746
const TABLE_ENCRYPTION_ADMIN = 57747
const TP_CONNECTION_ADMIN = 57748
const VERSION_TOKEN_ADMIN = 57749
const XA_RECOVER_ADMIN = 57750
const REPLICA = 57751
const REPLICAS = 57752
const SOURCE = 57753
const STOP = 57754
const RESET = 57755
const FILTER = 57756
const LOG = 57757
const MASTER = 57758
const SOURCE_HOST = 57759
const SOURCE_SSL = 57760
const SOURCE_USER = 57761
const SOURCE_PASSWORD = 57762
const SOURCE_PORT = 57763
const SOURCE_CONNECT_RETRY = 57764
const SOURCE_RETRY_COUNT = 57765
const SOURCE_AUTO_POSITION = 57766
const REPLICATE_DO_TABLE = 57767
const REPLICATE_IGNORE_TABLE = 57768
const IO_THREAD = 57769
const SQL_THREAD = 57770
const BEGIN = 57771
const START = 57772
const TRANSACTION = 57773
const COMMIT = 57774
const ROLLBACK = 57775
const SAVEPOINT = 57776
const WORK = 57777
const RELEASE = 57778
const CHAIN = 57779
const CONSISTENT = 57780
const SNAPSHOT = 57781
const BIT = 57782
const TINYINT = 57783
const SMALLINT = 57784
const MEDIUMINT = 57785
const INT = 57786
const INTEGER = 57787
const BIGINT = 57788
const INTNUM = 57789
const SERIAL = 57790
const INT1 = 57791
const INT2 = 57792
const INT3 = 57793
const INT4 = 57794
const INT8 = 57795
const REAL = 57796
const DOUBLE = 57797
const FLOAT_TYPE = 57798
const DECIMAL = 57799
const NUMERIC = 57800
const DEC = 57801
const FIXED = 57802
const PRECISION = 57803
const TIME = 57804
const TIMESTAMP = 57805
const DATETIME = 57806
const CHAR = 57807
const VARCHAR = 57808
const BOOL = 57809
const CHARACTER = 57810
const VARBINARY = 57811
const NCHAR = 57812
const NVARCHAR = 57813
const NATIONAL = 57814
const VARYING = 57815
const VARCHARACTER = 57816
const TEXT = 57817
const TINYTEXT = 57818
const MEDIUMTEXT = 57819
const LONGTEXT = 57820
const LONG = 57821
const BLOB = 57822
const TINYBLOB = 57823
const MEDIUMBLOB = 57824
const LONGBLOB = 57825
const JSON = 57826
const ENUM = 57827
const GEOMETRY = 57828
const POINT = 57829
const LINESTRING = 57830
const POLYGON = 57831
const GEOMETRYCOLLECTION = 57832
const MULTIPOINT = 57833
const MULTILINESTRING = 57834
const MULTIPOLYGON = 57835
const LOCAL = 57836
const LOW_PRIORITY = 57837
const SKIP = 57838
const LOCKED = 57839
const NULLX = 57840
const AUTO_INCREMENT = 57841
const APPROXNUM = 57842
const SIGNED = 57843
const UNSIGNED = 57844
const ZEROFILL = 57845
const SRID = 57846
const COLLATION = 57847
const DATABASES = 57848
const SCHEMAS = 57849
const TABLES = 57850
const FULL = 57851
const PROCESSLIST = 57852
const COLUMNS = 57853
const FIELDS = 57854
const ENGINES = 57855
const PLUGINS = 57856
const NAMES = 57857
const CHARSET = 57858
const GLOBAL = 57859
const SESSION = 57860
const ISOLATION = 57861
const LEVEL = 57862
const READ = 57863
const WRITE = 57864
const ONLY = 57865
const REPEATABLE = 57866
const COMMITTED = 57867
const UNCOMMITTED = 57868
const SERIALIZABLE = 57869
const ENCRYPTION = 57870
const CURRENT_TIMESTAMP = 57871
const NOW = 57872
const DATABASE = 57873
const CURRENT_DATE = 57874
const CURRENT_USER = 57875
const CURRENT_TIME = 57876
const LOCALTIME = 57877
const LOCALTIMESTAMP = 57878
const UTC_DATE = 57879
const UTC_TIME = 57880
const UTC_TIMESTAMP = 57881
const REPLACE = 57882
const CONVERT = 57883
const CAST = 57884
const POSITION = 57885
const SUBSTR = 57886
const SUBSTRING = 57887
const TRIM = 57888
const LEADING = 57889
const TRAILING = 57890
const BOTH = 57891
const GROUP_CONCAT = 57892
const SEPARATOR = 57893
const TIMESTAMPADD = 57894
const TIMESTAMPDIFF = 57895
const EXTRACT = 57896
const GET_FORMAT = 57897
const OVER = 57898
const WINDOW = 57899
const GROUPING = 57900
const CURRENT = 57901
const AVG = 57902
const BIT_AND = 57903
const BIT_OR = 57904
const BIT_XOR = 57905
const COUNT = 57906
const JSON_ARRAYAGG = 57907
const JSON_OBJECTAGG = 57908
const MAX = 57909
const MIN = 57910
const STDDEV_POP = 57911
const STDDEV = 57912
const STD = 57913
const STDDEV_SAMP = 57914
const SUM = 57915
const VAR_POP = 57916
const VARIANCE = 57917
const VAR_SAMP = 57918
const CUME_DIST = 57919
const DENSE_RANK = 57920
const FIRST_VALUE = 57921
const LAG = 57922
const LAST_VALUE = 57923
const LEAD = 57924
const NTH_VALUE = 57925
const NTILE = 57926
const ROW_NUMBER = 57927
const PERCENT_RANK = 57928
const RANK = 57929
const DUAL = 57930
const JSON_TABLE = 57931
const PATH = 57932
const AVG_ROW_LENGTH = 57933
const CHECKSUM = 57934
const COMPACT = 57935
const COMPRESSED = 57936
const COMPRESSION = 57937
const DISK = 57938
const DIRECTORY = 57939
const DELAY_KEY_WRITE = 57940
const DYNAMIC = 57941
const ENGINE_ATTRIBUTE = 57942
const ENCRYPTED = 57943
const ENCRYPTION_KEY_ID = 57944
const HASH = 57945
const INSERT_METHOD = 57946
const ITEF_QUOTES = 57947
const LIST = 57948
const MIN_ROWS = 57949
const MAX_ROWS = 57950
const PACK_KEYS = 57951
const MEMORY = 57952
const PAGE_CHECKSUM = 57953
const PAGE_COMPRESSED = 57954
const PAGE_COMPRESSION_LEVEL = 57955
const PARTITIONS = 57956
const REDUNDANT = 57957
const ROW_FORMAT = 57958
const SECONDARY_ENGINE = 57959
const SECONDARY_ENGINE_ATTRIBUTE = 57960
const STATS_AUTO_RECALC = 57961
const STATS_PERSISTENT = 57962
const STATS_SAMPLE_PAGES = 57963
const STORAGE = 57964
const SUBPARTITION = 57965
const SUBPARTITIONS = 57966
const TABLE_CHECKSUM = 57967
const TRANSACTIONAL = 57968
const VERSIONING = 57969
const YES = 57970
const PREPARE = 57971
const DEALLOCATE = 57972
const MATCH = 57973
const AGAINST = 57974
const BOOLEAN = 57975
const LANGUAGE = 57976
const WITH = 57977
const QUERY = 57978
const EXPANSION = 57979
const MICROSECOND = 57980
const SECOND = 57981
const MINUTE = 57982
const HOUR = 57983
const DAY = 57984
const WEEK = 57985
const MONTH = 57986
const QUARTER = 57987
const YEAR = 57988
const SECOND_MICROSECOND = 57989
const MINUTE_MICROSECOND = 57990
const MINUTE_SECOND = 57991
const HOUR_MICROSECOND = 57992
const HOUR_SECOND = 57993
const HOUR_MINUTE = 57994
const DAY_MICROSECOND = 57995
const DAY_SECOND = 57996
const DAY_MINUTE = 57997
const DAY_HOUR = 57998
const YEAR_MONTH = 57999
const NAME = 58000
const SYSTEM = 58001
const ACCESSIBLE = 58002
const ASENSITIVE = 58003
const CUBE = 58004
const DELAYED = 58005
const DISTINCTROW = 58006
const EMPTY = 58007
const FLOAT4 = 58008
const FLOAT8 = 58009
const GET = 58010
const HIGH_PRIORITY = 58011
const INSENSITIVE = 58012
const IO_AFTER_GTIDS = 58013
const IO_BEFORE_GTIDS = 58014
const LINEAR = 58015
const MASTER_BIND = 58016
const MASTER_SSL_VERIFY_SERVER_CERT = 58017
const MIDDLEINT = 58018
const PURGE = 58019
const READ_WRITE = 58020
const RLIKE = 58021
const SENSITIVE = 58022
const SPECIFIC = 58023
const SQL_BIG_RESULT = 58024
const SQL_SMALL_RESULT = 58025
const UNUSED = 58026
const DESCRIPTION = 58027
const LATERAL = 58028
const MEMBER = 58029
const RECURSIVE = 58030
const BUCKETS = 58031
const CLONE = 58032
const COMPONENT = 58033
const DEFINITION = 58034
const ENFORCED = 58035
const NOT_ENFORCED = 58036
const EXCLUDE = 58037
const GEOMCOLLECTION = 58038
const GET_MASTER_PUBLIC_KEY = 58039
const HISTOGRAM = 58040
const HISTORY = 58041
const INACTIVE = 58042
const INVISIBLE = 58043
const MASTER_COMPRESSION_ALGORITHMS = 58044
const MASTER_PUBLIC_KEY_PATH = 58045
const MASTER_TLS_CIPHERSUITES = 58046
const MASTER_ZSTD_COMPRESSION_LEVEL = 58047
const NESTED = 58048
const NETWORK_NAMESPACE = 58049
const NOWAIT = 58050
const NULLS = 58051
const OJ = 58052
const OLD = 58053
const ORDINALITY = 58054
const ORGANIZATION = 58055
const OTHERS = 58056
const PERSIST = 58057
const PERSIST_ONLY = 58058
const PRIVILEGE_CHECKS_USER = 58059
const PROCESS = 58060
const REFERENCE = 58061
const REQUIRE_ROW_FORMAT = 58062
const RESOURCE = 58063
const RESPECT = 58064
const RESTART = 58065
const RETAIN = 58066
const SECONDARY = 58067
const SECONDARY_LOAD = 58068
const SECONDARY_UNLOAD = 58069
const THREAD_PRIORITY = 58070
const TIES = 58071
const VCPU = 58072
const VISIBLE = 58073
const INFILE = 58074
const ACTIVE = 58075
const AGGREGATE = 58076
const ANY = 58077
const ARRAY = 58078
const ASCII = 58079
const AT = 58080
const AUTOEXTEND_SIZE = 58081
const GENERATED = 58082
const ALWAYS = 58083
const STORED = 58084
const VIRTUAL = 58085
const NVAR = 58086
const PASSWORD_LOCK = 58087

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"RETURNING",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"CONCAT",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	765, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	201, 1815,
	202, 1836,
	-2, 337,
	-1, 62,
	244, 1187,
	245, 1187,
	-2, 1176,
	-1, 90,
	273, 337,
	-2, 1821,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 545,
	1, 2519,
	6, 2519,
	7, 2519,
	29, 2519,
	189, 2519,
	765, 2519,
	-2, 1222,
	-1, 558,
	189, 1846,
	-2, 1840,
	-1, 559,
	189, 1847,
	-2, 1841,
	-1, 663,
	1, 688,
	765, 688,
	-2, 686,
	-1, 672,
	1, 1328,
	8, 1328,
	9, 1328,
	10, 1328,
	17, 1328,
	18, 1328,
	19, 1328,
	20, 1328,
	22, 1328,
	24, 1328,
	26, 1328,
	35, 1328,
	36, 1328,
	65, 1328,
	66, 1328,
	67, 1328,
	68, 1328,
	69, 1328,
	71, 1328,
	72, 1328,
	75, 1328,
	76, 1328,
	78, 1328,
	79, 1328,
	97, 1328,
	528, 1328,
	576, 1328,
	654, 1328,
	765, 1328,
	-2, 1830,
	-1, 677,
	1, 1436,
	8, 1436,
	9, 1436,
	10, 1436,
	17, 1436,
	18, 1436,
	19, 1436,
	20, 1436,
	22, 1436,
	24, 1436,
	26, 1436,
	35, 1436,
	36, 1436,
	65, 1436,
	66, 1436,
	67, 1436,
	68, 1436,
	69, 1436,
	71, 1436,
	72, 1436,
	75, 1436,
	76, 1436,
	78, 1436,
	79, 1436,
	97, 1436,
	528, 1436,
	576, 1436,
	654, 1436,
	765, 1436,
	-2, 1830,
	-1, 705,
	189, 2215,
	-2, 1450,
	-1, 738,
	189, 2323,
	-2, 1721,
	-1, 739,
	189, 2405,
	-2, 1452,
	-1, 740,
	189, 2235,
	-2, 1453,
	-1, 809,
	189, 2186,
	-2, 1685,
	-1, 812,
	189, 2201,
	-2, 1603,
	-1, 813,
	189, 2204,
	-2, 1603,
	-1, 814,
	189, 2415,
	-2, 1603,
	-1, 816,
	189, 2202,
	-2, 1603,
	-1, 817,
	189, 2416,
	-2, 1603,
	-1, 818,
	189, 2417,
	-2, 1603,
	-1, 877,
	189, 2203,
	-2, 1603,
	-1, 960,
	189, 2303,
	-2, 1603,
	-1, 961,
	189, 2304,
	-2, 1603,
	-1, 1074,
	110, 2532,
	121, 2532,
	189, 2532,
	-2, 1797,
	-1, 1075,
	110, 2663,
	121, 2663,
	189, 2663,
	-2, 1798,
	-1, 1080,
	110, 2560,
	121, 2560,
	189, 2560,
	-2, 1799,
	-1, 1081,
	110, 2611,
	121, 2611,
	189, 2611,
	-2, 1800,
	-1, 1082,
	110, 2612,
	121, 2612,
	189, 2612,
	-2, 1801,
	-1, 1083,
	110, 2459,
	121, 2459,
	189, 2459,
	-2, 1806,
	-1, 1085,
	110, 2588,
	121, 2588,
	189, 2588,
	-2, 1808,
	-1, 1257,
	455, 1201,
	-2, 1205,
	-1, 1259,
	455, 1201,
	-2, 1205,
	-1, 1384,
	1, 688,
	765, 688,
	-2, 686,
	-1, 1386,
	1, 689,
	765, 689,
	-2, 686,
	-1, 1409,
	1, 1329,
	8, 1329,
	9, 1329,
	10, 1329,
	17, 1329,
	18, 1329,
	19, 1329,
	20, 1329,
	22, 1329,
	24, 1329,
	26, 1329,
	35, 1329,
	36, 1329,
	65, 1329,
	66, 1329,
	67, 1329,
	68, 1329,
	69, 1329,
	71, 1329,
	72, 1329,
	75, 1329,
	76, 1329,
	78, 1329,
	79, 1329,
	97, 1329,
	528, 1329,
	576, 1329,
	654, 1329,
	765, 1329,
	-2, 1830,
	-1, 1420,
	1, 1436,
	8, 1436,
	9, 1436,
	10, 1436,
	17, 1436,
	18, 1436,
	19, 1436,
	20, 1436,
	22, 1436,
	24, 1436,
	26, 1436,
	35, 1436,
	36, 1436,
	65, 1436,
	66, 1436,
	67, 1436,
	68, 1436,
	69, 1436,
	71, 1436,
	72, 1436,
	75, 1436,
	76, 1436,
	78, 1436,
	79, 1436,
	97, 1436,
	528, 1436,
	576, 1436,
	654, 1436,
	765, 1436,
	-2, 1830,
	-1, 1716,
	1, 688,
	765, 688,
	-2, 686,
	-1, 1718,
	1, 688,
	765, 688,
	-2, 686,
	-1, 2277,
	189, 1850,
	-2, 1697,
	-1, 2280,
	189, 2751,
	-2, 1700,
	-1, 2281,
	189, 2752,
	-2, 1701,
	-1, 2282,
	189, 1849,
	-2, 1845,
	-1, 2433,
	76, 98,
	78, 98,
	-2, 102,
	-1, 2451,
	189, 2327,
	-2, 1802,
	-1, 2458,
	1, 909,
	765, 909,
	-2, 686,
	-1, 2648,
	50, 930,
	208, 933,
	210, 930,
	211, 930,
	212, 930,
	-2, 1047,
	-1, 2730,
	8, 59,
	9, 59,
	10, 59,
	-2, 1482,
	-1, 2747,
	1, 1374,
	8, 1374,
	9, 1374,
	10, 1374,
	17, 1374,
	18, 1374,
	19, 1374,
	20, 1374,
	22, 1374,
	24, 1374,
	26, 1374,
	35, 1374,
	36, 1374,
	65, 1374,
	66, 1374,
	67, 1374,
	68, 1374,
	69, 1374,
	71, 1374,
	72, 1374,
	75, 1374,
	76, 1374,
	78, 1374,
	79, 1374,
	97, 1374,
	528, 1374,
	576, 1374,
	654, 1374,
	765, 1374,
	-2, 1830,
	-1, 2925,
	214, 1041,
	218, 1041,
	-2, 797,
	-1, 2926,
	214, 1111,
	218, 1111,
	-2, 798,
	-1, 3197,
	1, 1436,
	8, 1436,
	9, 1436,
	10, 1436,
	17, 1436,
	18, 1436,
	19, 1436,
	20, 1436,
	22, 1436,
	24, 1436,
	26, 1436,
	35, 1436,
	36, 1436,
	65, 1436,
	66, 1436,
	67, 1436,
	68, 1436,
	69, 1436,
	71, 1436,
	72, 1436,
	75, 1436,
	76, 1436,
	78, 1436,
	79, 1436,
	97, 1436,
	528, 1436,
	576, 1436,
	654, 1436,
	765, 1436,
	-2, 1830,
	-1, 3301,
	1, 1753,
	26, 1753,
	75, 1753,
	765, 1753,
	-2, 1830,
	-1, 3504,
	50, 930,
	208, 933,
	210, 930,
	211, 930,
	212, 930,
	-2, 1047,
	-1, 3524,
	208, 934,
	214, 1041,
	218, 1041,
	-2, 932,
	-1, 3715,
	78, 2098,
	79, 2098,
	189, 2098,
	-2, 1230,
	-1, 3716,
	77, 1764,
	254, 1764,
	-2, 2147,
	-1, 3717,
	77, 1765,
	254, 1765,
	-2, 2717,
	-1, 3963,
	8, 59,
	9, 59,
	10, 59,
	-2, 1760,
	-1, 4109,
	47, 1861,
	-2, 1859,
	-1, 4373,
	8, 59,
	9, 59,
	10, 59,
	-2, 1761,
	-1, 4380,
	8, 59,
	9, 59,
	10, 59,
	-2, 118,
	-1, 4395,
	317, 434,
	-2, 1917,
	-1, 4396,
	317, 435,
	-2, 1958,
	-1, 4397,
	317, 436,
	-2, 2135,
	-1, 4461,
	8, 59,
	9, 59,
	10, 59,
	-2, 118,
	-1, 4639,
	105, 420,
	107, 420,
	109, 420,
	-2, 79,
	-1, 4720,
	107, 427,
	108, 427,
	109, 427,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 83415

var yyAct = [...]int{
	751, 44, 4693, 4593, 4656, 4643, 4631, 4630, 697, 2942,
	2448, 4253, 8, 4401, 570, 1190, 4595, 4376, 4103, 4506,
	4505, 4365, 1412, 493, 4402, 4284, 28, 707, 4252, 7,
	4378, 4068, 3797, 4250, 3, 4251, 6, 4254, 9, 711,
	4105, 3309, 4389, 2941, 4011, 44, 4388, 4225, 2371, 3466,
	4098, 656, 3990, 3277, 1419, 724, 4148, 4363, 2923, 2726,
	4116, 2372, 3923, 3874, 3660, 4104, 3511, 107, 3916, 2663,
	1538, 3366, 2185, 3630, 3875, 4107, 2922, 4053, 108, 1635,
	2983, 3910, 688, 3050, 3721, 3713, 549, 552, 1750, 1460,
	2475, 3187, 3009, 3866, 597, 101, 652, 674, 3957, 1749,
	3934, 3820, 1171, 3444, 1467, 3479, 2307, 3803, 2540, 2252,
	2714, 3909, 3367, 3310, 4377, 750, 3705, 1414, 3625, 1150,
	3123, 1752, 1218, 2929, 3636, 815, 2995, 2953, 2176, 3516,
	2479, 1566, 3604, 3592, 2508, 2465, 2645, 134, 1268, 105,
	1416, 2639, 3086, 1162, 1567, 1158, 2878, 2930, 1207, 3583,
	1390, 2612, 2856, 1707, 3464, 3170, 1079, 2646, 1267, 1379,
	1411, 3185, 2481, 716, 710, 2879, 3239, 698, 2570, 1755,
	1418, 2238, 2643, 2177, 3023, 2114, 2240, 2155, 3286, 2049,
	1726, 2504, 2976, 1244, 1448, 1616, 640, 1076, 693, 2284,
	2361, 1612, 1456, 2717, 2881, 1451, 672, 2119, 714, 2167,
	2731, 1301, 1279, 2089, 3090, 1642, 1153, 1072, 2324, 1615,
	1073, 2594, 2245, 490, 668, 2435, 681, 1385, 1166, 1475,
	1397, 669, 1389, 1388, 1387, 3722, 655, 573, 572, 1263,
	2081, 1173, 1189, 1179, 1180, 2082, 1278, 555, 2048, 1719,
	691, 1177, 664, 125, 4720, 2949, 4714, 4701, 4685, 1154,
	2956, 4671, 129, 4639, 4637, 4608, 4605, 4604, 4603, 4588,
	4586, 4485, 4481, 4476, 100, 3382, 2961, 2960, 4150, 4149,
	3886, 2112, 3638, 2525, 1181, 4347, 2755, 4031, 2557, 2556,
	3881, 3882, 3879, 3880, 3426, 3427, 3457, 86, 3512, 3514,
	4664, 2957, 97, 4029, 4626, 678, 4624, 4709, 94, 4663,
	3885, 4625, 3365, 1439, 3136, 99, 4032, 2963, 1202, 2939,
	3991, 2987, 1729, 3460, 661, 4416, 687, 2940, 4415, 4629,
	3458, 565, 4361, 4569, 2675, 3993, 4231, 2554, 2041, 1353,
	4039, 3007, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 3459, 148, 666, 145, 2554, 146, 122, 654, 4379,
	4517, 4319, 2385, 2383, 2382, 2381, 2384, 2380, 2379, 2378,
	2450, 2943, 2392, 42, 2391, 2390, 3804, 2389, 2388, 2387,
	2386, 42, 42, 2239, 42, 42, 3806, 3904, 3186, 4360,
	4123, 3267, 150, 149, 504, 4230, 3240, 3300, 1183, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1501, 1490, 3775, 3572, 1500, 4657, 1149, 4063, 3306, 3772,
	137, 3621, 3307, 569, 3860, 153, 3306, 88, 3336, 3335,
	3307, 3605, 3146, 3585, 2959, 3986, 4217, 4423, 2962, 89,
	1165, 3907, 71, 1161, 3145, 4438, 2952, 89, 89, 3987,
	89, 89, 47, 1354, 4346, 3908, 4172, 3992, 2373, 2385,
	2383, 2382, 2381, 2384, 2380, 2379, 2378, 2374, 2375, 2392,
	2376, 2391, 2390, 2377, 2389, 2388, 2387, 2386, 3864, 3243,
	2967, 4112, 2832, 4369, 151, 4369, 152, 3697, 114, 112,
	113, 1170, 544, 3407, 1066, 567, 2593, 2118, 2756, 3408,
	3409, 4364, 2870, 1257, 3809, 2869, 2115, 3320, 2871, 3321,
	3322, 2445, 2446, 2628, 2587, 2158, 2159, 1617, 559, 1618,
	4366, 2444, 4366, 2116, 2117, 1222, 1223, 2193, 667, 1226,
	3942, 3940, 4440, 2954, 3329, 89, 1251, 4348, 2242, 1399,
	1402, 1403, 1404, 1400, 1361, 1401, 1406, 3807, 3808, 3810,
	3811, 3812, 3285, 1240, 3658, 1241, 1242, 1243, 1242, 1243,
	2136, 1331, 564, 96, 563, 1224, 1225, 2210, 1339, 1403,
	1404, 96, 96, 2965, 96, 96, 163, 3935, 491, 503,
	136, 2955, 163, 2477, 2478, 3220, 4370, 163, 4370, 2592,
	1298, 4456, 649, 2492, 2491, 3543, 2482, 639, 1227, 2482,
	1373, 2485, 2484, 2497, 2486, 4663, 163, 3678, 3109, 4625,
	2505, 4623, 3682, 3680, 2624, 163, 2160, 2576, 2575, 1252,
	1253, 731, 539, 732, 734, 735, 736, 737, 163, 562,
	542, 733, 2320, 643, 644, 2087, 1260, 3354, 2396, 163,
	1164, 4478, 1228, 1371, 4479, 646, 4480, 1356, 1357, 700,
	1351, 2156, 2157, 1352, 665, 644, 645, 3485, 4457, 3065,
	4708, 163, 639, 1150, 2166, 1348, 597, 1380, 1213, 4664,
	4030, 1214, 1383, 491, 163, 4662, 1399, 1402, 1403, 1404,
	1400, 4661, 1401, 1406, 1410, 1415, 2718, 2719, 4626, 2165,
	1433, 1434, 1150, 2164, 1150, 1150, 1335, 1336, 1150, 4335,
	4096, 2163, 147, 2162, 2161, 4509, 1375, 642, 1150, 3116,
	3114, 3902, 3894, 2954, 3892, 3115, 1510, 1512, 108, 650,
	1514, 3821, 1254, 3113, 3247, 3246, 3248, 3245, 4312, 3824,
	3002, 3043, 3252, 4166, 3244, 3241, 3451, 1407, 3242, 1454,
	3250, 3822, 3823, 3198, 2958, 2147, 3198, 3198, 2148, 2951,
	1314, 4314, 1529, 4177, 3249, 1367, 1533, 1534, 1535, 1536,
	1537, 2955, 1541, 3637, 4508, 4477, 1305, 2317, 4573, 4572,
	4176, 3251, 3253, 4521, 4057, 3483, 1366, 1362, 1363, 1364,
	1365, 1368, 1369, 1370, 1372, 3478, 1266, 1382, 3626, 3627,
	3628, 3629, 3047, 1328, 4174, 108, 4046, 3832, 3850, 3513,
	154, 4043, 3454, 3048, 2606, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	3548, 1560, 1561, 1563, 1563, 1563, 1425, 1568, 1568, 1568,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 3584, 1393, 3994, 1479, 4582, 3514, 2588, 4026, 1314,
	2191, 4420, 663, 3006, 1314, 1221, 3607, 3328, 3004, 543,
	1409, 3995, 678, 678, 4048, 4432, 3855, 4168, 1568, 1338,
	4458, 2398, 2399, 2397, 2541, 3830, 138, 4414, 142, 4094,
	4717, 566, 2613, 2616, 2614, 2615, 2617, 2618, 2619, 2620,
	1472, 1473, 1471, 3480, 2169, 1511, 3254, 731, 2192, 732,
	734, 735, 736, 737, 4124, 3327, 1374, 733, 2320, 1474,
	2194, 2600, 4687, 3442, 2954, 2954, 4716, 4686, 3805, 3445,
	3446, 3447, 3448, 3449, 126, 4683, 2938, 1472, 1473, 1471,
	1376, 3108, 3172, 3115, 3113, 3180, 3182, 3181, 4601, 1569,
	1570, 3174, 4647, 4218, 3997, 1216, 1474, 1562, 1564, 1565,
	4473, 1568, 1568, 4040, 3008, 4229, 4367, 4590, 4367, 4471,
	4472, 2968, 2955, 2955, 550, 2950, 1441, 1441, 3862, 553,
	1436, 2118, 1436, 1436, 3996, 1376, 1436, 1435, 1442, 1440,
	1440, 1321, 1405, 1447, 2488, 2088, 1261, 163, 4422, 3610,
	3608, 2489, 1377, 2507, 2970, 3606, 109, 2116, 2117, 1602,
	2318, 2319, 1215, 491, 109, 109, 2149, 109, 87, 143,
	1405, 3609, 3901, 4345, 115, 3893, 3891, 554, 1265, 1313,
	3445, 3446, 3447, 3448, 3449, 1259, 128, 1306, 4313, 3863,
	4507, 4167, 3135, 4173, 4430, 4045, 132, 140, 139, 3126,
	4042, 3453, 3635, 2317, 1347, 1319, 3190, 4599, 3920, 4594,
	3189, 4583, 3189, 3550, 3551, 3536, 4340, 1605, 4209, 3440,
	1394, 4022, 163, 4069, 4023, 4597, 1724, 3407, 1066, 4021,
	3397, 3398, 3400, 3408, 3409, 3399, 3401, 3402, 1239, 1734,
	1735, 1733, 1603, 1604, 136, 4020, 4019, 1175, 1174, 1714,
	3403, 3404, 3405, 3406, 137, 141, 3005, 4027, 4017, 1178,
	4018, 136, 1079, 4161, 4162, 3549, 1324, 1079, 2531, 1320,
	4157, 1316, 2172, 1178, 2535, 2536, 4384, 4385, 4451, 1405,
	1176, 4248, 4606, 3175, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 662, 136, 2120, 639,
	2530, 1150, 2051, 1317, 1318, 3631, 3632, 4428, 141, 3031,
	3032, 1264, 163, 1236, 1237, 1255, 1238, 1235, 130, 4482,
	131, 1234, 2173, 107, 1233, 1232, 4329, 3593, 548, 2041,
	3594, 4241, 3595, 163, 108, 3867, 3868, 2122, 2083, 1165,
	2121, 3105, 551, 2472, 4710, 1728, 597, 4523, 3093, 4522,
	1165, 551, 3176, 3103, 3093, 3522, 3102, 1408, 2542, 491,
	3371, 4723, 4718, 4702, 1751, 597, 4674, 1172, 1609, 1457,
	1704, 1627, 641, 4318, 2474, 667, 2554, 4200, 1759, 4088,
	1310, 3634, 1481, 3900, 3125, 3897, 1699, 1700, 1701, 1702,
	1703, 138, 3633, 1421, 1423, 1632, 4697, 3476, 3110, 1709,
	3042, 1421, 1423, 3078, 551, 3038, 3012, 3011, 2601, 2153,
	1620, 1739, 1737, 1262, 1150, 1621, 2524, 1150, 1727, 1169,
	2225, 1711, 1712, 1732, 2224, 2091, 2223, 1757, 2474, 1723,
	1539, 1168, 4091, 3471, 551, 1730, 1392, 1191, 2474, 2095,
	1182, 488, 2093, 4596, 4598, 3188, 3101, 2090, 3883, 2092,
	108, 3125, 3657, 2039, 3319, 1705, 2318, 2319, 123, 695,
	1606, 1607, 4338, 3537, 3538, 3539, 1628, 3015, 3040, 123,
	3039, 2474, 3014, 2474, 2056, 2057, 597, 1629, 2803, 2876,
	2543, 89, 2800, 1515, 2474, 1516, 1517, 118, 1559, 2076,
	2052, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1501, 1490, 3051, 2064, 1500, 1309, 2065, 2066,
	2067, 2146, 2045, 2045, 2045, 2045, 2109, 2071, 3370, 3081,
	1513, 2669, 3080, 2773, 89, 2473, 1422, 2079, 1741, 2749,
	4171, 3099, 3093, 2054, 1422, 121, 127, 3096, 2043, 2047,
	3095, 3100, 2635, 3092, 651, 1518, 674, 674, 674, 674,
	2129, 3521, 140, 139, 2182, 2672, 2670, 2665, 1710, 2127,
	3124, 1150, 2667, 1722, 1713, 2555, 1415, 2532, 2219, 1518,
	2440, 2178, 2068, 1715, 2070, 1731, 120, 4695, 2255, 2473,
	4696, 1518, 4694, 1631, 1532, 1748, 1747, 1531, 2218, 2473,
	1530, 2571, 1480, 1515, 108, 3099, 3093, 1296, 1204, 108,
	2050, 3096, 2866, 2107, 3095, 3100, 1256, 3884, 2450, 2212,
	3082, 3083, 2309, 2308, 2213, 4199, 2666, 2668, 2671, 2673,
	1490, 2220, 2473, 1500, 2473, 2222, 4198, 3124, 1500, 3093,
	3473, 3119, 2196, 2040, 1165, 2473, 2078, 3094, 2472, 3122,
	2085, 4207, 3093, 3876, 2084, 2094, 4489, 1165, 96, 3956,
	3094, 2472, 1516, 1517, 1759, 2124, 1516, 1517, 3116, 96,
	2100, 2101, 3114, 1150, 2103, 2200, 2197, 3788, 3786, 4452,
	4453, 2276, 2168, 2171, 3101, 2310, 3500, 3499, 1501, 1490,
	2106, 4034, 1500, 4449, 4450, 3388, 3386, 2125, 2128, 3092,
	3074, 3073, 1541, 674, 2316, 2321, 108, 4234, 4233, 3071,
	3070, 2647, 2857, 2282, 2313, 3134, 2315, 1493, 1494, 1495,
	1496, 1497, 1501, 1490, 2218, 3133, 1500, 1245, 4035, 2362,
	3132, 2327, 3131, 2330, 2170, 108, 2565, 4490, 163, 3130,
	3787, 2746, 3129, 3128, 2365, 3127, 2743, 1164, 2740, 3501,
	1628, 2221, 2347, 2350, 678, 678, 678, 678, 3387, 2285,
	2363, 1629, 2187, 3075, 2248, 2174, 1230, 2186, 674, 2190,
	2188, 2189, 3072, 103, 678, 2873, 2872, 2198, 2199, 1474,
	2201, 2393, 2394, 2253, 2254, 4191, 3061, 2211, 3173, 3060,
	1479, 3081, 2449, 2669, 3080, 2262, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1501, 1490, 2291,
	2275, 1500, 1220, 3059, 1079, 1759, 3269, 687, 1158, 110,
	668, 116, 1471, 1247, 2289, 2290, 2288, 2672, 2670, 2665,
	491, 1246, 2455, 2260, 2667, 2794, 3058, 2793, 2874, 1474,
	2566, 3057, 2286, 3056, 1472, 1473, 1471, 3055, 639, 639,
	1472, 1473, 1471, 639, 3054, 4706, 2272, 1472, 1473, 1471,
	4518, 1164, 163, 1474, 2282, 2623, 2622, 639, 639, 1474,
	1231, 2105, 3210, 163, 1272, 2457, 1474, 491, 491, 491,
	491, 1185, 3082, 3083, 1184, 1067, 1068, 1069, 2666, 2668,
	2671, 2673, 163, 163, 163, 163, 163, 1167, 163, 3010,
	4700, 678, 2331, 2332, 2333, 2334, 2335, 3831, 2401, 2055,
	4677, 4644, 4676, 1219, 163, 163, 2550, 2434, 2406, 639,
	2408, 4673, 2462, 2411, 1249, 163, 2359, 4584, 2432, 1472,
	1473, 1471, 2362, 4529, 2816, 3825, 2074, 4704, 1717, 4390,
	4547, 4528, 2471, 4527, 1258, 4390, 3036, 4467, 1474, 4466,
	2514, 2515, 2516, 2517, 2518, 2500, 2501, 2502, 1472, 1473,
	1471, 2456, 1472, 1473, 1471, 1164, 678, 2487, 2490, 4653,
	4531, 2493, 2494, 2495, 2496, 2246, 3380, 1474, 639, 639,
	639, 1474, 2442, 1164, 1539, 2441, 2438, 2548, 2549, 2447,
	2510, 2511, 2512, 2513, 1473, 1471, 2503, 3917, 1468, 2461,
	4711, 2459, 2268, 2270, 2271, 2534, 1430, 1431, 2519, 2483,
	2269, 4689, 1474, 3198, 639, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1501, 1490, 4419, 1424,
	1500, 695, 3903, 1430, 1431, 2506, 4325, 2428, 1472, 1473,
	1471, 2261, 163, 163, 4316, 4309, 4470, 163, 2314, 1164,
	2551, 1472, 1473, 1471, 2521, 1432, 1424, 1474, 4390, 4712,
	2246, 163, 639, 4563, 163, 163, 163, 163, 89, 695,
	1474, 4238, 1539, 1421, 1423, 2370, 163, 2338, 2339, 2340,
	2287, 4064, 1432, 2344, 163, 2346, 2349, 2352, 163, 2357,
	2358, 3207, 4033, 4310, 2526, 2368, 2528, 3764, 3762, 3915,
	1421, 1423, 1472, 1473, 1471, 4722, 2235, 3690, 3763, 2400,
	3271, 2402, 2403, 2770, 2771, 2772, 2407, 2237, 2409, 2410,
	2982, 1474, 4562, 1417, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 4560, 704, 163, 1472,
	1473, 1471, 3914, 2236, 4311, 491, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1501, 1490, 3913, 700, 1500, 1474, 3912,
	2264, 2265, 2266, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1501, 1490, 3841, 4169, 1500, 1472,
	1473, 1471, 1164, 3795, 1164, 3613, 3611, 1164, 4721, 3794,
	2795, 695, 2231, 2234, 1164, 4559, 3612, 2227, 1474, 1164,
	1164, 1164, 3561, 2233, 3495, 2098, 1422, 2257, 2229, 163,
	2097, 163, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1501, 1490, 3494, 3493, 1500, 4170, 2232,
	1539, 3492, 2258, 1422, 2228, 2259, 2342, 2343, 1563, 3204,
	3491, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1501, 1490, 3432, 1150, 1500, 3769, 3383, 1472,
	1473, 1471, 3767, 3180, 3182, 3181, 2091, 3618, 2981, 2979,
	3616, 2966, 1304, 1303, 4705, 163, 163, 163, 1474, 2230,
	3456, 3455, 4688, 2093, 2226, 1391, 4682, 4610, 2090, 4602,
	2092, 4483, 4464, 2583, 4463, 4407, 4406, 4400, 4399, 4175,
	4071, 3704, 3540, 1164, 3026, 3025, 4516, 3689, 3180, 3182,
	3181, 1740, 2577, 3180, 3182, 3181, 2454, 2562, 3180, 3182,
	3181, 3180, 3182, 3181, 2561, 2312, 2099, 2591, 2086, 1746,
	1745, 1484, 1718, 1487, 1384, 1716, 1410, 1299, 561, 4515,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1383, 1485, 1486,
	1483, 2567, 4514, 4513, 1276, 4510, 4437, 4417, 4355, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1501, 1490, 4349, 4240, 1500, 674, 1275, 2563, 4239, 4165,
	1164, 163, 2573, 4164, 2735, 2736, 2737, 4144, 4095, 2569,
	4047, 4044, 4016, 3985, 3984, 3952, 2807, 2520, 3906, 163,
	3905, 2610, 3840, 3839, 3838, 163, 163, 639, 639, 639,
	163, 2609, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1501, 1490, 2728, 3837, 1500, 3828, 3827,
	3826, 3793, 3790, 3765, 2734, 3760, 3751, 2774, 3747, 1759,
	3742, 3741, 3740, 3614, 3603, 3591, 3587, 3580, 3579, 1454,
	1454, 3578, 3498, 3490, 3489, 3488, 2276, 3414, 2578, 695,
	3219, 3218, 2636, 3216, 3076, 2713, 2977, 2582, 2875, 1528,
	1527, 1526, 2630, 2589, 2560, 2590, 2102, 4403, 4214, 695,
	2797, 2597, 2748, 695, 3641, 4571, 3931, 1345, 2282, 3777,
	4554, 695, 2729, 3777, 4427, 4070, 2598, 3777, 4425, 3641,
	695, 4078, 695, 3777, 4243, 2605, 2653, 4009, 2608, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1501, 1490, 3641, 4152, 1500, 4008, 2768, 2769, 2627, 3641,
	4147, 2629, 2632, 2436, 678, 4092, 695, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1501, 1490,
	2644, 2733, 1500, 3434, 2722, 3417, 3930, 3641, 4051, 3198,
	695, 2634, 695, 3416, 2285, 3641, 3927, 2041, 3858, 2041,
	3857, 3777, 3776, 678, 3929, 3641, 3640, 3424, 3423, 3420,
	3421, 3420, 3419, 2748, 695, 2456, 2603, 2602, 2336, 2585,
	2436, 2336, 695, 2437, 3024, 2439, 674, 2214, 695, 674,
	1634, 1633, 3415, 2250, 2760, 2758, 2759, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1501, 1490,
	3706, 2779, 1500, 3725, 1759, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1501, 1490, 2775, 3700,
	1500, 2539, 1079, 3024, 2861, 102, 2041, 2286, 2150, 1310,
	2437, 1308, 2041, 3306, 4655, 2214, 2783, 3307, 2249, 3725,
	2336, 3699, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1501, 1490, 1757, 89, 1500, 1307, 2151, 4356, 1308,
	2261, 4227, 2859, 3968, 1380, 2538, 3198, 3641, 2214, 3435,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1501, 1490, 2748, 3725, 1500, 3422, 2933, 2936, 3266,
	163, 2815, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1501, 1490, 2214, 3217, 1500, 3053, 2443,
	2826, 2824, 2823, 2748, 2621, 2607, 2104, 2559, 163, 1310,
	2554, 2553, 2251, 2831, 2833, 1378, 2860, 3030, 597, 2113,
	2041, 2840, 2841, 2842, 1738, 1736, 2862, 1614, 1381, 2863,
	2924, 89, 4455, 4426, 2727, 4194, 4192, 4010, 1705, 2885,
	2725, 3785, 3782, 2480, 1164, 2928, 2509, 2931, 2932, 2482,
	3192, 3064, 163, 3063, 163, 2505, 2921, 1727, 1164, 2867,
	1620, 2864, 1314, 1164, 678, 2718, 2719, 678, 2533, 2499,
	2498, 1708, 2877, 3018, 1295, 2984, 2969, 2971, 3842, 2572,
	1211, 2972, 2973, 1210, 2974, 2975, 4692, 4691, 2182, 4668,
	639, 639, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1501, 1490, 2178, 3068, 1500, 4666, 4660,
	4659, 4632, 2978, 2985, 4627, 4621, 4619, 4565, 4564, 2980,
	3922, 3918, 3028, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	3706, 3044, 3433, 3428, 3021, 2784, 2785, 2786, 2787, 2788,
	3020, 3000, 2721, 2045, 2715, 2552, 2152, 2123, 1311, 3003,
	2209, 2724, 163, 163, 2723, 2208, 1461, 1462, 1164, 3688,
	2203, 163, 2206, 2813, 2202, 1461, 1462, 2207, 2204, 3022,
	4447, 3205, 4359, 2205, 3208, 538, 3221, 3211, 2757, 133,
	4196, 4409, 3027, 2765, 2764, 1164, 4353, 1464, 1459, 4222,
	4130, 3687, 1466, 1465, 3898, 1463, 1464, 3037, 674, 3873,
	3780, 1466, 1465, 1759, 1463, 3530, 3091, 3194, 3529, 3413,
	1457, 3412, 3179, 3411, 2937, 3200, 3201, 3202, 3196, 2927,
	2276, 3171, 3097, 3104, 4410, 3107, 3087, 3098, 4354, 3062,
	4110, 3084, 3212, 4351, 3118, 4, 144, 4350, 3067, 3041,
	3120, 4108, 540, 541, 3228, 3079, 4160, 3046, 1413, 43,
	3049, 4159, 2282, 4050, 560, 2581, 2580, 2096, 4036, 4037,
	4488, 3112, 3111, 3278, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1501, 1490, 1449, 3066, 1500,
	106, 3890, 3736, 3541, 3385, 2637, 1630, 3303, 3308, 1450,
	1293, 1277, 674, 43, 1274, 2789, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1501, 1490, 3302,
	1273, 1500, 1217, 3313, 4648, 4081, 4080, 1391, 2253, 2254,
	108, 2817, 3959, 1270, 1271, 3835, 3461, 2527, 3833, 3311,
	1350, 3255, 1408, 3836, 3257, 3199, 3834, 4357, 4315, 3268,
	4054, 3798, 3784, 3430, 2175, 2098, 1269, 3228, 2097, 3215,
	2325, 2326, 1445, 1446, 1359, 3213, 1443, 1444, 3225, 1437,
	1438, 3958, 2763, 4535, 4534, 4533, 3226, 4013, 2626, 163,
	2762, 3223, 3304, 1250, 163, 3230, 3229, 163, 163, 163,
	3381, 689, 4444, 4443, 4442, 4441, 4223, 3394, 4186, 4178,
	4128, 3938, 3256, 3085, 690, 102, 678, 3937, 3663, 3024,
	2989, 2990, 2991, 2926, 4670, 4669, 4551, 4484, 3853, 2935,
	2935, 3484, 3482, 3481, 3389, 3052, 2825, 1380, 2804, 2801,
	3179, 2767, 2069, 1469, 1209, 1208, 3379, 4669, 4670, 3362,
	4236, 3410, 2247, 682, 3373, 3374, 3375, 3305, 3376, 3377,
	686, 685, 3393, 3279, 3280, 3281, 3282, 3283, 3284, 3450,
	597, 104, 3316, 4267, 65, 4269, 23, 4268, 22, 4270,
	24, 2885, 68, 163, 4408, 3315, 1, 3317, 3318, 4271,
	25, 1164, 1164, 4265, 18, 4344, 3323, 639, 4264, 17,
	4263, 16, 4266, 19, 4262, 15, 4256, 11, 676, 3372,
	678, 163, 163, 639, 1164, 4291, 39, 2519, 491, 4289,
	37, 4288, 36, 3361, 50, 3369, 3436, 2599, 3265, 4292,
	40, 639, 4287, 32, 4286, 31, 4285, 30, 4282, 27,
	4281, 26, 2131, 3523, 4261, 14, 4258, 13, 4257, 12,
	596, 3463, 4255, 10, 3819, 3818, 1164, 3624, 3443, 3001,
	639, 4339, 1164, 4208, 1164, 3452, 3829, 1164, 2712, 1725,
	3391, 3392, 4025, 1188, 2537, 1300, 4352, 4109, 4220, 4219,
	3802, 3801, 2994, 3418, 2993, 1294, 2586, 2111, 3472, 3088,
	3089, 3013, 3477, 1164, 1164, 3077, 3431, 4184, 2625, 2154,
	2611, 1360, 3486, 2458, 3525, 3526, 3527, 2463, 3859, 3510,
	4062, 3532, 3533, 3441, 3535, 3509, 3508, 1152, 117, 2564,
	1229, 512, 2460, 2947, 4221, 1297, 3467, 2946, 3553, 2964,
	2476, 3558, 1386, 3981, 2945, 3623, 3469, 2944, 3470, 4317,
	3519, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1501, 1490, 2948, 3487, 1500, 1639, 1637, 1638,
	1636, 1641, 3496, 3497, 1640, 3503, 518, 1622, 3178, 4394,
	3703, 1470, 744, 135, 3502, 3179, 3520, 2075, 3121, 2653,
	2924, 647, 648, 124, 3590, 520, 1164, 3084, 1705, 1509,
	3518, 2761, 3639, 2868, 1164, 1164, 1164, 3191, 3552, 1077,
	3193, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1501, 1490, 3661, 3656, 1500, 1078, 1070, 3695, 4487,
	163, 2751, 3518, 4232, 4111, 4224, 163, 4383, 1455, 4113,
	3936, 3662, 1164, 2814, 1558, 3528, 2360, 713, 660, 3720,
	3955, 4115, 2267, 3573, 727, 3575, 726, 700, 725, 722,
	3588, 723, 3531, 2395, 3714, 4368, 2256, 3299, 3298, 3301,
	1482, 3596, 3597, 3598, 3425, 3544, 1358, 3546, 702, 1429,
	1428, 1427, 1426, 1420, 3313, 3620, 3710, 2182, 3559, 671,
	3562, 3664, 3564, 3566, 3568, 3570, 1425, 108, 3642, 2429,
	3311, 1164, 3708, 3035, 2178, 3270, 1398, 1396, 1395, 1743,
	1610, 2720, 2716, 670, 675, 46, 3709, 2766, 1248, 3696,
	4122, 111, 684, 683, 692, 3774, 3378, 29, 21, 20,
	163, 3673, 3674, 3675, 1205, 3676, 2642, 2664, 1186, 48,
	3677, 3679, 54, 3681, 53, 1164, 51, 3287, 3288, 3289,
	3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 1563, 1563,
	1563, 1568, 1568, 1568, 1571, 1572, 1573, 1574, 1568, 1568,
	1568, 3730, 2244, 52, 2988, 3179, 3707, 2529, 3789, 4393,
	4592, 1280, 4609, 4642, 3750, 1355, 3178, 38, 35, 34,
	491, 33, 3712, 4283, 4277, 4276, 2935, 2935, 2935, 4279,
	2935, 2935, 4278, 4275, 4280, 4274, 491, 4273, 4272, 4290,
	2369, 4260, 4259, 3726, 3727, 3728, 3729, 4576, 4575, 5,
	2283, 163, 98, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 3752, 2311,
	3732, 3733, 3734, 95, 3724, 41, 3761, 3745, 119, 1148,
	3748, 3731, 2, 1164, 0, 3781, 0, 0, 0, 3778,
	3779, 3753, 3754, 3755, 0, 0, 1164, 1164, 1164, 3723,
	0, 3861, 0, 639, 3661, 3843, 3771, 3814, 3815, 3816,
	163, 639, 0, 0, 0, 3799, 0, 0, 2345, 1164,
	1164, 0, 2353, 1569, 1570, 3845, 3792, 0, 0, 1602,
	1603, 1604, 1562, 1564, 1565, 0, 0, 639, 0, 1164,
	0, 639, 0, 3468, 0, 0, 0, 694, 696, 0,
	0, 639, 3813, 0, 0, 3817, 0, 0, 0, 0,
	3856, 0, 163, 163, 0, 0, 3848, 0, 3847, 0,
	0, 3851, 3852, 3849, 3854, 0, 0, 0, 0, 3878,
	0, 0, 3844, 0, 0, 491, 3871, 3869, 3870, 0,
	0, 0, 0, 491, 491, 491, 491, 0, 0, 0,
	1164, 491, 491, 1164, 491, 0, 3899, 0, 0, 0,
	677, 0, 0, 1164, 0, 1164, 0, 491, 491, 1164,
	163, 491, 3091, 0, 0, 0, 1164, 0, 1164, 1164,
	1164, 1164, 1164, 1164, 3872, 3865, 3895, 0, 3097, 3889,
	0, 0, 3087, 3098, 0, 0, 0, 0, 0, 3933,
	0, 3178, 0, 0, 0, 3924, 3926, 3574, 0, 3518,
	3887, 0, 0, 0, 3896, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	0, 0, 0, 3925, 3518, 0, 3179, 0, 3228, 0,
	0, 1164, 0, 0, 0, 0, 0, 1164, 0, 0,
	0, 0, 3965, 0, 0, 3714, 0, 0, 3661, 3661,
	674, 163, 0, 3970, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 3939,
	3941, 1151, 0, 3911, 0, 0, 0, 3921, 108, 3313,
	0, 0, 3264, 0, 0, 3919, 0, 0, 0, 0,
	0, 3962, 0, 1187, 0, 3311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 3667, 3668, 3669,
	3670, 3671, 0, 0, 0, 4005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3964, 0, 0,
	3698, 0, 0, 0, 0, 0, 3960, 0, 0, 0,
	3179, 0, 1164, 3978, 0, 0, 0, 1164, 0, 3982,
	3972, 0, 0, 0, 0, 3961, 0, 0, 0, 0,
	0, 4012, 4003, 0, 0, 4006, 0, 668, 3969, 3973,
	0, 0, 3979, 0, 0, 0, 0, 3179, 0, 0,
	0, 3178, 0, 0, 0, 0, 0, 4001, 4002, 0,
	0, 1458, 0, 4066, 4067, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1501, 1490, 0, 0,
	1500, 0, 0, 0, 0, 0, 3988, 0, 3999, 4000,
	3998, 3989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4090, 0, 4014, 0, 0, 0,
	4015, 0, 0, 0, 0, 0, 0, 0, 678, 157,
	0, 4028, 0, 0, 0, 537, 0, 4056, 4024, 4038,
	157, 3369, 0, 557, 4049, 4058, 4059, 163, 4061, 0,
	4041, 0, 163, 0, 1164, 0, 4052, 0, 0, 657,
	4076, 0, 4074, 4060, 4055, 4085, 0, 4087, 157, 4089,
	4072, 4073, 0, 0, 0, 0, 3965, 4135, 0, 0,
	0, 657, 701, 0, 1164, 4075, 0, 0, 1087, 0,
	163, 4082, 157, 0, 0, 639, 0, 0, 4099, 4134,
	639, 639, 0, 639, 0, 4083, 0, 4084, 0, 0,
	108, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 4155, 4097, 0, 0, 0, 157, 0, 0,
	0, 0, 4132, 0, 491, 0, 0, 0, 2935, 0,
	0, 0, 0, 0, 4154, 0, 0, 1164, 0, 491,
	0, 0, 4141, 0, 0, 108, 0, 0, 4129, 491,
	0, 4127, 4133, 4136, 0, 4138, 0, 4156, 0, 4158,
	4131, 0, 0, 4185, 3179, 0, 491, 0, 0, 4190,
	0, 0, 0, 4142, 2579, 0, 0, 0, 0, 0,
	0, 0, 4153, 0, 0, 0, 0, 4139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1206,
	0, 0, 0, 0, 0, 0, 4188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4205, 4180, 0,
	0, 0, 3178, 4182, 0, 0, 3714, 0, 0, 0,
	0, 0, 0, 4181, 4183, 0, 0, 4201, 0, 0,
	1164, 2631, 4193, 4195, 4202, 0, 1150, 4247, 4237, 1150,
	0, 0, 0, 0, 3369, 3179, 1164, 0, 0, 108,
	0, 4206, 0, 0, 4204, 0, 0, 0, 4245, 4246,
	0, 0, 0, 4249, 1302, 4215, 0, 4244, 0, 108,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 4235,
	0, 0, 0, 0, 2738, 2739, 1150, 0, 2741, 2742,
	0, 0, 2744, 2745, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 163, 0,
	4336, 0, 4308, 0, 0, 0, 0, 3924, 0, 0,
	4324, 0, 0, 0, 0, 0, 3178, 0, 1150, 4320,
	0, 0, 0, 4321, 0, 3974, 3975, 3976, 3977, 4332,
	3313, 0, 0, 0, 4326, 3925, 4328, 2776, 2777, 2778,
	4382, 0, 4341, 4334, 4327, 4337, 3311, 0, 4372, 4381,
	4343, 108, 4386, 3178, 0, 0, 491, 0, 4358, 2935,
	2935, 1164, 4371, 1312, 1164, 0, 0, 0, 0, 4375,
	1150, 0, 1150, 0, 0, 0, 4331, 0, 1150, 0,
	0, 0, 0, 0, 0, 4404, 0, 0, 0, 0,
	0, 4413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2808, 2809, 2810, 0, 0, 4398, 0, 0,
	0, 0, 0, 0, 0, 0, 3369, 0, 3369, 4439,
	157, 0, 0, 0, 0, 0, 0, 0, 3278, 0,
	0, 0, 639, 0, 0, 0, 4433, 0, 3924, 4431,
	0, 0, 0, 0, 0, 0, 0, 4418, 0, 0,
	0, 0, 2935, 0, 0, 1164, 4448, 0, 0, 0,
	0, 0, 4435, 0, 0, 0, 3925, 4436, 4454, 0,
	0, 0, 0, 4434, 4445, 491, 1164, 491, 0, 491,
	0, 4446, 4460, 4459, 0, 0, 4462, 0, 0, 0,
	0, 0, 0, 4495, 0, 157, 0, 0, 0, 4500,
	4141, 4468, 0, 0, 4465, 4494, 597, 4429, 0, 0,
	0, 4512, 1164, 4497, 0, 4499, 0, 4486, 0, 0,
	0, 0, 0, 0, 0, 4496, 0, 0, 4511, 0,
	0, 0, 0, 0, 0, 4501, 4114, 4117, 1150, 0,
	0, 1150, 0, 0, 4474, 0, 0, 1150, 1150, 1150,
	1150, 4530, 1150, 1150, 4532, 4503, 1150, 1150, 4504, 0,
	4524, 4541, 4542, 4543, 4525, 4502, 4546, 4553, 4498, 1539,
	3178, 4539, 1150, 4519, 0, 4520, 4539, 4526, 4468, 0,
	4539, 4549, 3313, 0, 0, 657, 4537, 0, 3661, 491,
	0, 0, 0, 0, 0, 4558, 4557, 4561, 3311, 1150,
	4550, 4568, 1150, 0, 0, 1150, 157, 4566, 4581, 4536,
	4570, 0, 4585, 0, 0, 4587, 2449, 4600, 0, 3029,
	4589, 1087, 4578, 0, 0, 4580, 4574, 4591, 3033, 3034,
	0, 0, 4579, 639, 4577, 0, 4612, 597, 108, 0,
	0, 0, 4615, 0, 0, 1164, 0, 0, 0, 0,
	3369, 0, 4611, 1150, 2935, 0, 0, 1150, 4620, 1150,
	4618, 4622, 4636, 1150, 0, 0, 4634, 491, 0, 0,
	163, 3178, 0, 0, 1150, 1150, 1150, 1150, 4633, 1150,
	0, 4539, 0, 4539, 0, 0, 0, 4645, 0, 0,
	4652, 1164, 0, 0, 0, 0, 0, 0, 4539, 4539,
	4539, 0, 0, 4539, 0, 0, 0, 4665, 1150, 4667,
	1150, 0, 1150, 0, 0, 0, 0, 0, 4678, 0,
	4680, 0, 0, 0, 0, 4675, 0, 1539, 0, 0,
	0, 0, 4539, 4690, 4539, 0, 0, 0, 0, 0,
	0, 0, 1150, 4698, 0, 0, 0, 0, 1150, 0,
	0, 0, 0, 0, 0, 0, 1150, 0, 0, 0,
	1611, 4703, 0, 0, 0, 0, 4539, 0, 0, 1164,
	0, 491, 1150, 491, 0, 1150, 0, 0, 0, 491,
	4539, 0, 0, 0, 0, 1150, 0, 0, 4715, 0,
	0, 1150, 0, 1164, 0, 0, 4539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4539,
	0, 0, 0, 0, 0, 4539, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 4117, 0, 3232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3576,
	3577, 0, 0, 0, 0, 0, 3258, 3586, 3259, 3260,
	3589, 3261, 3262, 0, 0, 3263, 0, 3599, 3600, 3601,
	3602, 0, 0, 0, 0, 3615, 3617, 3619, 0, 0,
	0, 3272, 3273, 3274, 3275, 1164, 0, 0, 0, 0,
	0, 0, 3622, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 4387, 4391, 0, 0, 0, 0, 0, 0,
	0, 4405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 2059, 2060, 2061, 2062, 0,
	2063, 0, 0, 0, 0, 2750, 0, 0, 0, 0,
	0, 3231, 2215, 2216, 2217, 1164, 0, 0, 0, 1315,
	1322, 1323, 1325, 1326, 1327, 0, 1329, 1330, 0, 1332,
	1333, 1334, 0, 1337, 0, 1340, 1341, 1342, 1343, 1344,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1501, 1490, 0, 0, 1500, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1501, 1490, 4469,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 1613, 0, 0, 1087, 491, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 163, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3738,
	3739, 0, 0, 0, 1164, 0, 0, 3746, 0, 0,
	3749, 0, 0, 0, 0, 0, 0, 3756, 3757, 3758,
	3759, 0, 0, 0, 1164, 0, 3766, 3768, 3770, 2337,
	0, 0, 3773, 0, 1611, 1611, 0, 2341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4544,
	0, 0, 0, 2195, 0, 0, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	2404, 2405, 0, 2798, 0, 0, 1721, 557, 2412, 2413,
	2414, 0, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1501, 1490, 157, 2427, 1500, 1721, 557,
	639, 0, 1754, 0, 0, 3209, 1756, 0, 0, 0,
	0, 0, 0, 0, 4607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 157, 157, 157, 157,
	2263, 157, 163, 3206, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1501, 1490, 2072, 2073, 1500,
	0, 3203, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1501, 1490, 0, 0, 1500, 0, 0,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1501, 1490, 0, 589, 1500, 583, 594, 576, 0,
	0, 2780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4679, 0, 0, 0, 0, 0, 584,
	4684, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1501, 1490, 0, 0, 1500, 0, 0, 0, 3666,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1501, 1490, 0, 0, 1500, 0, 2431, 0, 2433,
	0, 0, 0, 0, 0, 157, 157, 0, 0, 0,
	657, 0, 3692, 3693, 3694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 1754, 157, 157, 157,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 157, 0, 2523, 0, 575, 574, 577, 0, 0,
	0, 0, 1756, 0, 0, 582, 0, 0, 0, 0,
	0, 2544, 0, 0, 0, 0, 0, 2546, 2547, 3783,
	0, 0, 1611, 586, 0, 0, 0, 0, 590, 0,
	0, 0, 3791, 0, 0, 0, 2243, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 157, 2243, 2243, 2243, 0, 0,
	0, 2243, 0, 2243, 2243, 2243, 578, 2243, 2243, 0,
	0, 0, 1087, 2243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2243, 2243, 2243,
	2243, 0, 0, 2243, 2243, 2243, 2243, 2243, 2243, 0,
	0, 0, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243,
	2243, 2243, 2243, 2243, 0, 0, 0, 0, 157, 157,
	157, 0, 0, 0, 0, 0, 1087, 0, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 580, 587, 2126, 591, 592, 595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2574,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 157, 157,
	0, 0, 0, 157, 0, 0, 0, 2130, 0, 0,
	2133, 2134, 2135, 0, 2137, 2138, 712, 0, 2139, 0,
	0, 0, 2140, 0, 0, 2141, 0, 2633, 0, 2142,
	2143, 0, 2144, 2145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2558, 0, 0, 3943, 3944, 3945, 3946, 2730,
	0, 0, 0, 3950, 158, 0, 494, 3953, 3954, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 2747,
	2568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 533, 0,
	0, 2711, 0, 1088, 1302, 0, 0, 158, 1156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 2660, 158,
	0, 0, 0, 2781, 2684, 2782, 0, 0, 0, 0,
	0, 494, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2790,
	2791, 2792, 0, 0, 0, 2796, 2659, 2799, 0, 0,
	2802, 0, 0, 2805, 2806, 0, 0, 0, 2811, 2812,
	0, 0, 0, 2681, 2818, 2819, 2820, 0, 0, 2821,
	0, 2822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 505, 0, 0, 0, 4065,
	0, 0, 0, 0, 0, 2647, 0, 0, 0, 0,
	0, 2827, 2828, 2829, 2830, 0, 0, 2834, 2835, 2836,
	2837, 2838, 2839, 0, 0, 0, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 0, 2855,
	585, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 531, 532, 0, 2638, 0, 0, 0, 0,
	743, 0, 0, 157, 0, 0, 0, 4100, 4101, 4102,
	0, 0, 0, 0, 0, 2650, 2649, 2662, 2669, 2648,
	2661, 2652, 0, 0, 2685, 0, 0, 0, 0, 0,
	514, 157, 521, 517, 0, 2694, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2672, 2670, 2665, 0, 0, 0, 160, 2667,
	495, 0, 0, 0, 528, 0, 0, 0, 0, 160,
	0, 2683, 2705, 2656, 2655, 157, 0, 657, 0, 0,
	0, 0, 0, 4151, 0, 0, 0, 0, 659, 0,
	0, 2651, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2657, 2658, 0,
	659, 2675, 0, 2666, 2668, 2671, 2673, 0, 0, 0,
	0, 160, 1160, 0, 0, 0, 0, 523, 4179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 4189, 524, 0, 0, 0,
	0, 2858, 0, 0, 0, 495, 160, 0, 4197, 516,
	0, 0, 0, 0, 2701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 157, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 2709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2691, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 1087, 1087, 0, 0, 0, 0, 1756, 515, 529,
	0, 494, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3016, 3017, 0, 0, 506, 0, 0,
	158, 0, 3197, 0, 0, 0, 2243, 0, 0, 0,
	0, 0, 0, 2243, 2243, 2243, 2243, 2243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 509, 510, 0, 536, 0,
	0, 2243, 511, 513, 0, 507, 535, 534, 0, 0,
	0, 0, 0, 0, 3233, 3234, 3235, 3236, 3237, 3238,
	2677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2688,
	658, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 2654, 0, 4411, 0, 2711, 0, 0, 0,
	0, 158, 157, 0, 0, 0, 0, 157, 0, 0,
	157, 2865, 1756, 0, 1087, 0, 1088, 0, 0, 0,
	0, 1391, 0, 2660, 0, 0, 0, 494, 0, 2684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2678, 2679, 0, 0, 2682, 0, 0, 2687,
	0, 2692, 2689, 2690, 0, 2693, 2686, 0, 2696, 2695,
	2697, 2659, 2698, 2699, 2700, 0, 0, 2702, 2703, 2704,
	2706, 2707, 2708, 0, 0, 0, 2680, 2710, 2681, 0,
	0, 0, 0, 0, 0, 0, 2674, 0, 0, 0,
	0, 0, 3222, 0, 0, 0, 157, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	2650, 3505, 2662, 4552, 3504, 2661, 2652, 0, 4555, 2685,
	2676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2683, 2705, 2656, 2655,
	0, 4614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2651, 0, 0, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 3506, 3507, 0, 0, 2675, 0, 0, 0,
	0, 0, 0, 3384, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	2243, 1756, 0, 0, 0, 0, 0, 0, 0, 2701,
	0, 0, 0, 157, 0, 0, 4681, 0, 0, 157,
	701, 741, 3462, 0, 0, 0, 2243, 0, 0, 0,
	0, 0, 0, 0, 2709, 0, 0, 0, 0, 0,
	0, 3644, 3645, 3646, 0, 2691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3665, 0, 0, 0, 1611, 1611, 158, 0, 0, 1088,
	3672, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 0, 0, 3683, 3684, 3685, 3686,
	0, 0, 0, 0, 3691, 0, 0, 0, 0, 0,
	0, 1087, 0, 157, 0, 3701, 3702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3555, 0, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 1155, 3711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2688, 494, 494, 494, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 2654, 0, 0,
	158, 158, 158, 158, 158, 0, 158, 2919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 157, 0, 0, 0, 0, 0, 0,
	2891, 0, 0, 0, 0, 0, 0, 2678, 2679, 0,
	0, 2682, 0, 0, 2687, 0, 2692, 2689, 2690, 0,
	2693, 2686, 0, 2696, 2695, 2697, 0, 2698, 2699, 2700,
	0, 0, 2702, 2703, 2704, 2706, 2707, 2708, 0, 0,
	0, 2680, 2710, 0, 0, 157, 157, 0, 0, 2888,
	0, 2674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	158, 158, 0, 0, 0, 658, 0, 2179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 158, 158, 158, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 2676, 658, 0, 0, 0,
	2892, 0, 0, 0, 0, 0, 0, 0, 0, 3796,
	0, 2901, 0, 0, 3800, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 2890, 2913, 0,
	0, 0, 3846, 494, 160, 0, 0, 2278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	495, 495, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 160, 160, 160, 160, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3947, 3948, 3949, 0, 3951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 158,
	0, 3963, 1087, 3966, 3967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3971, 0, 0, 2364, 0, 0,
	2908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2917, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2898, 0, 0, 0,
	0, 0, 0, 158, 158, 158, 0, 0, 0, 0,
	0, 1088, 0, 0, 4004, 0, 0, 0, 0, 0,
	0, 0, 4007, 0, 0, 0, 0, 0, 2278, 0,
	0, 1156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 160, 0, 0, 0, 659,
	0, 2180, 0, 0, 0, 0, 0, 2910, 0, 0,
	157, 0, 0, 160, 0, 157, 160, 160, 160, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	659, 1086, 0, 0, 0, 4077, 0, 0, 0, 158,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 158, 158, 0, 2883, 0, 158, 0,
	4093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 2279, 0, 0, 0, 2895, 0, 0, 0, 0,
	0, 0, 0, 0, 4118, 4119, 4120, 4121, 0, 0,
	0, 0, 0, 0, 4125, 4126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4140,
	0, 659, 0, 160, 0, 0, 0, 0, 2884, 2886,
	1662, 0, 2889, 0, 0, 2894, 0, 2899, 2896, 2897,
	0, 2900, 2893, 0, 2903, 2902, 2904, 0, 2905, 2906,
	2907, 0, 0, 2909, 2911, 2912, 2914, 2915, 2916, 0,
	0, 0, 2887, 2918, 0, 0, 0, 0, 0, 0,
	0, 0, 2920, 4475, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 160, 160,
	0, 0, 0, 0, 0, 0, 4187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2279, 0, 0, 1160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4210, 4211, 4212, 4213, 0, 0, 0, 0, 0,
	1649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 0, 4228, 0, 0, 0, 0, 0, 0,
	657, 157, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 2882, 2919, 0, 0,
	0, 0, 4242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 1673, 0, 0, 0,
	2891, 160, 0, 0, 0, 0, 0, 160, 160, 4322,
	4323, 0, 160, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4333, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 4342, 0, 2880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2888,
	0, 0, 0, 4362, 0, 0, 158, 0, 4373, 0,
	0, 0, 0, 0, 0, 0, 4380, 0, 742, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 1086,
	1623, 2647, 4203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 4421, 0, 0, 0, 4424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2892, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 2901, 0, 0, 0, 0, 1720, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	1157, 0, 0, 0, 1742, 0, 0, 0, 1720, 556,
	658, 158, 1753, 4461, 0, 0, 0, 2890, 2913, 658,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 159, 0, 0, 0, 0, 0,
	0, 0, 4374, 0, 0, 0, 1088, 1088, 0, 0,
	0, 0, 2278, 0, 1677, 1680, 1681, 1682, 1683, 1684,
	1685, 0, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 0, 1664, 1665, 1666, 1646,
	1645, 1678, 1647, 1650, 1644, 1648, 1643, 0, 0, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 2110, 0,
	2908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 2132, 0, 0, 0,
	0, 0, 0, 157, 0, 2917, 0, 0, 0, 0,
	0, 0, 4567, 0, 0, 0, 2898, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4613, 0, 0, 4616, 4617, 0, 0,
	0, 0, 2184, 0, 160, 0, 659, 0, 0, 4628,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 158, 0, 0, 158, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 4658, 0, 1679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 494, 0, 0, 0, 0, 0, 0, 0, 2640,
	2641, 0, 0, 0, 0, 0, 0, 0, 1087, 0,
	0, 0, 0, 157, 0, 0, 2883, 0, 0, 0,
	0, 0, 2184, 0, 659, 160, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2895, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 2184, 0, 2184, 0, 0,
	2322, 0, 0, 0, 0, 0, 2279, 2323, 0, 0,
	0, 0, 2184, 2329, 2184, 0, 0, 0, 0, 158,
	158, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 1086, 0, 0, 0, 0, 0, 2884, 2886,
	0, 0, 2889, 492, 0, 2894, 0, 2899, 2896, 2897,
	0, 2900, 2893, 0, 2903, 2902, 2904, 0, 2905, 2906,
	2907, 0, 0, 2909, 2911, 2912, 2914, 2915, 2916, 0,
	0, 0, 2887, 2918, 0, 0, 0, 0, 0, 0,
	0, 0, 2920, 0, 0, 0, 1086, 0, 0, 0,
	0, 2179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 2184, 0, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 160, 0, 0, 160,
	0, 0, 0, 2522, 0, 0, 2882, 0, 0, 0,
	1087, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 2278, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 0,
	0, 0, 0, 160, 160, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3312, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3069, 0, 2180, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 3106, 0, 0,
	0, 0, 0, 0, 494, 0, 3117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144,
	0, 0, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154,
	3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164,
	3165, 3166, 3167, 3168, 3169, 0, 3183, 3184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 158, 0, 1673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 494, 494, 494, 494, 0, 0, 0, 0, 494,
	494, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 494, 2584, 158, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2596, 0, 0, 0, 0, 2596, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3324, 3325,
	3326, 0, 3330, 3331, 3332, 3333, 3334, 0, 0, 3337,
	3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347,
	3348, 3349, 3350, 3351, 3352, 3353, 0, 3355, 3356, 3357,
	3358, 3359, 3360, 0, 3363, 3364, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2732, 0, 160, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2754, 0,
	0, 1086, 1086, 0, 0, 0, 0, 2184, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 492, 492, 492,
	492, 0, 160, 0, 0, 0, 0, 3312, 0, 0,
	2179, 0, 159, 159, 159, 159, 159, 0, 159, 0,
	0, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 0, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 0, 1664, 1665, 1666, 1646, 1645, 1678, 1647,
	1650, 1644, 1648, 1643, 160, 160, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1668, 1669, 1670,
	1671, 1672, 1674, 1675, 1676, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 495, 495, 495, 495, 0,
	0, 0, 0, 495, 495, 3542, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	495, 0, 160, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3581, 3582, 0, 0, 158, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 159, 1086, 0, 0, 0, 0, 2181,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 159, 0, 0, 159, 159, 159, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 1667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 2992, 2996, 0, 0, 159, 0,
	0, 0, 0, 0, 494, 492, 0, 0, 0, 2277,
	0, 0, 0, 0, 0, 0, 0, 3019, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3735, 0, 3737, 0, 0, 0, 2596,
	0, 3743, 3744, 0, 0, 3045, 0, 2596, 0, 0,
	2596, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2184, 2184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 0, 159, 159, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 0, 160,
	2277, 0, 0, 1157, 160, 658, 158, 0, 0, 0,
	0, 0, 3312, 0, 89, 0, 0, 0, 0, 0,
	4300, 0, 0, 0, 0, 0, 0, 0, 0, 3195,
	0, 0, 0, 0, 0, 0, 0, 3195, 3195, 3195,
	0, 4293, 160, 0, 4641, 4644, 4640, 0, 0, 0,
	0, 2184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2184, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 495, 0, 0, 0, 159, 159, 3888, 0, 0,
	159, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 495, 49,
	90, 56, 55, 58, 3276, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1086, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 2184, 0,
	0, 0, 0, 494, 0, 494, 0, 494, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4305, 4297,
	4298, 4299, 4303, 4304, 4301, 0, 4302, 0, 4306, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 3429, 0, 0, 659,
	160, 0, 0, 0, 0, 0, 0, 494, 84, 3437,
	3438, 3439, 3980, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3195, 3195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3475, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 93, 494, 0, 47, 158, 0,
	0, 0, 0, 0, 0, 4307, 4295, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2732, 0, 0, 3534, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 2732, 0, 2732, 89,
	0, 0, 3554, 0, 0, 4300, 0, 0, 0, 2732,
	0, 2732, 3563, 2732, 2732, 2732, 2732, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 4293, 0, 0, 0,
	0, 4719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 495,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 494, 159, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 3195, 0, 0, 0, 0, 0,
	3643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3659,
	0, 0, 0, 3312, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4294,
	0, 0, 0, 0, 0, 0, 0, 0, 4143, 0,
	4145, 4146, 0, 0, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 495, 0, 159, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 2184, 0, 0, 0, 0,
	2732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2277, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 0, 4296, 0, 0, 0, 0, 42, 495,
	0, 0, 160, 4305, 4297, 4298, 4299, 4303, 4304, 4301,
	0, 4302, 71, 4306, 0, 0, 0, 0, 78, 93,
	79, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 658, 89, 0, 0, 0, 0, 0,
	4300, 0, 0, 0, 0, 0, 0, 2996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4293, 0, 0, 0, 0, 4713, 0, 0, 0,
	0, 0, 0, 495, 4330, 495, 0, 3195, 0, 0,
	0, 495, 0, 0, 0, 3312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4307, 4295, 0, 66, 67, 73, 0, 74, 0, 159,
	0, 0, 0, 0, 159, 0, 0, 159, 0, 1758,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3877, 0, 0, 492, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 159, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 3928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4296, 2184,
	0, 0, 0, 0, 0, 0, 0, 0, 4305, 4297,
	4298, 4299, 4303, 4304, 4301, 0, 4302, 0, 4306, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 495, 0, 0,
	0, 0, 0, 2181, 0, 0, 0, 659, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 3195, 0, 0, 3195, 0, 0,
	0, 0, 0, 0, 0, 4307, 4295, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2277, 0,
	0, 0, 0, 0, 0, 89, 42, 0, 0, 0,
	159, 4300, 0, 0, 0, 0, 159, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 4293, 1662, 659, 0, 0, 4707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4300, 4086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4293,
	0, 0, 0, 0, 4699, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 2184, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4294, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 492, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 159, 4294, 0, 0, 0, 0, 0, 0, 1673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 85, 0, 0, 1663, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4296,
	0, 0, 0, 0, 0, 0, 0, 0, 3195, 4305,
	4297, 4298, 4299, 4303, 4304, 4301, 0, 4302, 0, 4306,
	159, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 4226, 0, 0, 0, 60, 0,
	0, 0, 0, 69, 70, 0, 4296, 0, 0, 0,
	0, 0, 159, 159, 0, 0, 4305, 4297, 4298, 4299,
	4303, 4304, 4301, 0, 4302, 0, 4306, 0, 0, 0,
	0, 78, 0, 79, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 492, 492, 492, 492, 0, 0, 0,
	0, 492, 492, 0, 492, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 492, 492, 0,
	159, 492, 3195, 0, 0, 0, 4307, 4295, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4307, 4295, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 1677, 1680, 1681,
	1682, 1683, 1684, 1685, 0, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 2184, 1664,
	1665, 1666, 1646, 1645, 1678, 1647, 1650, 1644, 1648, 1643,
	0, 0, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1668, 1669, 1670, 1671, 1672, 1674, 1675,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2181, 0, 0, 0, 0, 0, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 259,
	0, 0, 87, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2184, 0, 0, 85, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 3195, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	1679, 0, 0, 0, 0, 263, 0, 2184, 0, 0,
	0, 0, 0, 1667, 0, 0, 0, 0, 468, 0,
	1086, 0, 0, 376, 283, 0, 0, 159, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 2184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 492, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 492,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 492,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 492, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 492, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 492, 0, 492, 0, 492,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 653, 213, 223, 236, 250, 265, 492,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 0, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 492, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 901, 1044, 0, 0, 448, 802, 1048, 888,
	911, 1058, 917, 919, 984, 863, 959, 357, 908, 864,
	1009, 0, 0, 855, 706, 856, 889, 259, 705, 1018,
	962, 1046, 945, 977, 987, 258, 244, 952, 951, 1035,
	900, 899, 982, 1031, 1045, 0, 0, 172, 478, 190,
	810, 314, 0, 0, 476, 423, 339, 0, 0, 943,
	0, 794, 795, 928, 986, 875, 973, 1050, 909, 978,
	1051, 89, 0, 0, 0, 0, 731, 558, 732, 734,
	735, 736, 737, 0, 0, 171, 733, 738, 739, 740,
	0, 938, 983, 1063, 854, 703, 720, 859, 809, 4390,
	1036, 896, 897, 263, 0, 0, 0, 0, 0, 0,
	0, 941, 958, 1002, 925, 0, 468, 989, 998, 1013,
	918, 376, 283, 0, 0, 0, 0, 717, 718, 0,
	0, 0, 0, 825, 0, 0, 719, 0, 869, 715,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 721, 0, 0, 492, 874, 852, 894, 1004,
	853, 851, 340, 866, 797, 1034, 926, 301, 191, 1040,
	924, 823, 992, 870, 1022, 1056, 912, 311, 868, 195,
	865, 871, 910, 353, 1001, 1007, 807, 198, 313, 1019,
	890, 903, 728, 0, 392, 979, 467, 709, 278, 0,
	965, 391, 315, 460, 993, 1042, 466, 913, 442, 477,
	482, 271, 946, 234, 420, 261, 254, 895, 1012, 858,
	284, 375, 249, 306, 929, 985, 891, 241, 996, 972,
	1024, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1006, 1026, 886, 872, 878, 873, 902,
	1043, 293, 285, 1027, 1025, 904, 361, 224, 956, 949,
	942, 811, 471, 1059, 257, 1008, 473, 180, 406, 405,
	916, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	486, 220, 309, 450, 708, 277, 352, 981, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1005, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 980, 389, 427, 474,
	974, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1003,
	216, 237, 428, 210, 1038, 1021, 967, 931, 937, 860,
	0, 209, 932, 933, 934, 935, 936, 999, 893, 905,
	885, 975, 884, 281, 991, 729, 730, 246, 800, 1053,
	211, 867, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	968, 955, 953, 861, 1037, 966, 954, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 957, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 879,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 995, 1062, 360, 393, 233, 469,
	421, 262, 877, 1066, 824, 812, 813, 816, 960, 961,
	814, 817, 818, 826, 798, 799, 801, 803, 804, 805,
	948, 1041, 862, 808, 1017, 819, 820, 821, 822, 988,
	1060, 796, 242, 745, 838, 839, 840, 746, 841, 842,
	747, 748, 843, 844, 845, 846, 749, 847, 848, 849,
	827, 828, 829, 830, 831, 832, 833, 834, 837, 835,
	836, 0, 944, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 806, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1015, 971, 0, 921, 923, 922, 881, 883, 882, 880,
	1064, 346, 1033, 850, 857, 876, 887, 892, 898, 906,
	907, 915, 920, 930, 939, 940, 950, 963, 964, 970,
	994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947,
	969, 1000, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 927, 196, 0, 0, 202,
	0, 203, 205, 914, 201, 1032, 1057, 976, 990, 901,
	1044, 0, 0, 448, 802, 1048, 888, 911, 1058, 917,
	919, 984, 863, 959, 357, 908, 864, 1009, 0, 0,
	855, 706, 856, 889, 259, 705, 1018, 962, 1046, 945,
	977, 987, 258, 244, 952, 951, 1035, 900, 899, 982,
	1031, 1045, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1050, 909, 978, 1051, 89, 0,
	695, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1063, 854, 703, 720, 859, 809, 0, 1036, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1013, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 0, 0, 0, 0,
	825, 0, 0, 719, 0, 869, 715, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 721,
	0, 0, 0, 874, 852, 894, 1004, 853, 851, 340,
	866, 797, 1034, 926, 301, 191, 1040, 924, 823, 992,
	870, 1022, 1056, 912, 311, 868, 195, 865, 871, 910,
	353, 1001, 1007, 807, 198, 313, 1019, 890, 903, 728,
	0, 392, 979, 467, 709, 278, 0, 965, 391, 315,
	460, 993, 1042, 466, 913, 442, 477, 482, 271, 946,
	234, 420, 261, 254, 895, 1012, 858, 284, 375, 249,
	306, 929, 985, 891, 241, 996, 972, 1024, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1006, 1026, 886, 872, 878, 873, 902, 1043, 293, 285,
	1027, 1025, 904, 361, 224, 956, 949, 942, 811, 471,
	1059, 257, 1008, 473, 180, 406, 405, 916, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 486, 220, 309,
	450, 708, 277, 352, 981, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1005, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 980, 389, 427, 474, 974, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1003, 216, 237, 428,
	210, 1038, 1021, 967, 931, 937, 860, 0, 209, 932,
	933, 934, 935, 936, 999, 893, 905, 885, 975, 884,
	281, 991, 729, 730, 246, 800, 1053, 211, 867, 1052,
	349, 356, 348, 1055, 1054, 459, 1039, 968, 955, 953,
	861, 1037, 966, 954, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 957, 425, 320, 0, 206,
	0, 424, 1047, 1065, 439, 226, 879, 1014, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 995, 1062, 360, 393, 233, 469, 421, 262, 877,
	1066, 824, 812, 813, 816, 960, 961, 814, 817, 818,
	826, 798, 799, 801, 803, 804, 805, 948, 1041, 862,
	808, 1017, 819, 820, 821, 822, 988, 1060, 796, 242,
	745, 838, 839, 840, 746, 841, 842, 747, 748, 843,
	844, 845, 846, 749, 847, 848, 849, 827, 828, 829,
	830, 831, 832, 833, 834, 837, 835, 836, 0, 944,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 806, 199, 212, 312, 1061, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1015, 971, 0,
	921, 923, 922, 881, 883, 882, 880, 1064, 346, 1033,
	850, 857, 876, 887, 892, 898, 906, 907, 915, 920,
	930, 939, 940, 950, 963, 964, 970, 994, 997, 1011,
	1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 927, 196, 0, 0, 202, 0, 203, 205,
	914, 201, 1032, 1057, 976, 990, 901, 1044, 0, 0,
	448, 802, 1048, 888, 911, 1058, 917, 919, 984, 863,
	959, 357, 908, 864, 1009, 0, 0, 855, 706, 856,
	889, 259, 705, 1018, 962, 1046, 945, 977, 987, 258,
	244, 952, 951, 1035, 900, 899, 982, 1031, 1045, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1050, 909, 978, 1051, 89, 0, 0, 0, 0,
	731, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 0, 938, 983, 1063, 854, 703,
	720, 859, 809, 0, 1036, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1013, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 2241, 0, 0, 0, 825, 0, 0,
	719, 0, 869, 715, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 721, 0, 0, 0,
	874, 852, 894, 1004, 853, 851, 340, 866, 797, 1034,
	926, 301, 191, 1040, 924, 823, 992, 870, 1022, 1056,
	912, 311, 868, 195, 865, 871, 910, 353, 1001, 1007,
	807, 198, 313, 1019, 890, 903, 728, 0, 392, 979,
	467, 709, 278, 0, 965, 391, 315, 460, 993, 1042,
	466, 913, 442, 477, 482, 271, 946, 234, 420, 261,
	254, 895, 1012, 858, 284, 375, 249, 306, 929, 985,
	891, 241, 996, 972, 1024, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1006, 1026, 886,
	872, 878, 873, 902, 1043, 293, 285, 1027, 1025, 904,
	361, 224, 956, 949, 942, 811, 471, 1059, 257, 1008,
	473, 180, 406, 405, 916, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 486, 220, 309, 450, 708, 277,
	352, 981, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1005, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	980, 389, 427, 474, 974, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1003, 216, 237, 428, 210, 1038, 1021,
	967, 931, 937, 860, 0, 209, 932, 933, 934, 935,
	936, 999, 893, 905, 885, 975, 884, 281, 991, 729,
	730, 246, 800, 1053, 211, 867, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 968, 955, 953, 861, 1037, 966,
	954, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 957, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 879, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 995, 1062,
	360, 393, 233, 469, 421, 262, 877, 1066, 824, 812,
	813, 816, 960, 961, 814, 817, 818, 826, 798, 799,
	801, 803, 804, 805, 948, 1041, 862, 808, 1017, 819,
	820, 821, 822, 988, 1060, 796, 242, 745, 838, 839,
	840, 746, 841, 842, 747, 748, 843, 844, 845, 846,
	749, 847, 848, 849, 827, 828, 829, 830, 831, 832,
	833, 834, 837, 835, 836, 0, 944, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 806, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1015, 971, 0, 921, 923, 922,
	881, 883, 882, 880, 1064, 346, 1033, 850, 857, 876,
	887, 892, 898, 906, 907, 915, 920, 930, 939, 940,
	950, 963, 964, 970, 994, 997, 1011, 1016, 1023, 1028,
	1029, 472, 252, 947, 969, 1000, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 927,
	196, 0, 0, 202, 0, 203, 205, 914, 201, 1032,
	1057, 976, 990, 901, 1044, 0, 0, 448, 802, 1048,
	888, 911, 1058, 917, 919, 984, 863, 959, 357, 908,
	864, 1009, 0, 0, 855, 706, 856, 889, 259, 705,
	1018, 962, 1046, 945, 977, 987, 258, 244, 952, 951,
	1035, 900, 899, 982, 1031, 1045, 0, 0, 172, 478,
	190, 810, 314, 0, 0, 476, 423, 339, 0, 0,
	943, 0, 794, 795, 928, 986, 875, 973, 1050, 909,
	978, 1051, 89, 0, 0, 0, 0, 731, 558, 732,
	734, 735, 736, 737, 0, 0, 171, 733, 738, 739,
	740, 0, 938, 983, 1063, 854, 703, 720, 859, 809,
	0, 1036, 896, 897, 263, 0, 0, 0, 0, 0,
	0, 0, 941, 958, 1002, 925, 0, 468, 989, 998,
	1013, 918, 376, 283, 0, 0, 0, 0, 717, 718,
	699, 0, 0, 0, 825, 0, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1034, 926, 301, 191,
	1040, 924, 823, 992, 870, 1022, 1056, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1019, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 965, 391, 315, 460, 993, 1042, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1012,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1024, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1006, 1026, 886, 872, 878, 873,
	902, 1043, 293, 285, 1027, 1025, 904, 361, 224, 956,
	949, 942, 811, 471, 1059, 257, 1008, 473, 180, 406,
	405, 916, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1038, 1021, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1053, 211, 867, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 968, 955, 953, 861, 1037, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	879, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1062, 360, 393, 233,
	469, 421, 262, 877, 1066, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 948, 1041, 862, 808, 1017, 819, 820, 821, 822,
	988, 1060, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1015, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1064, 346, 1033, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1032, 1057, 976, 990,
	901, 1044, 0, 0, 448, 802, 1048, 888, 911, 1058,
	917, 919, 984, 863, 959, 357, 908, 864, 1009, 0,
	0, 855, 706, 856, 889, 259, 705, 1018, 962, 1046,
	945, 977, 987, 258, 244, 952, 951, 1035, 900, 899,
	982, 1031, 1045, 0, 0, 172, 478, 190, 810, 314,
	0, 0, 476, 423, 339, 0, 0, 943, 0, 794,
	795, 928, 986, 875, 973, 1050, 909, 2451, 1051, 89,
	0, 0, 0, 0, 2453, 558, 732, 734, 735, 736,
	737, 0, 0, 171, 733, 738, 739, 740, 2452, 938,
	983, 1063, 854, 703, 720, 859, 809, 0, 1036, 896,
	897, 263, 0, 0, 0, 0, 0, 0, 0, 941,
	958, 1002, 925, 0, 468, 989, 998, 1013, 918, 376,
	283, 0, 0, 0, 0, 717, 718, 0, 0, 0,
	0, 825, 0, 0, 719, 0, 869, 715, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	721, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 797, 1034, 926, 301, 191, 1040, 924, 823,
	992, 870, 1022, 1056, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 807, 198, 313, 1019, 890, 903,
	728, 0, 392, 979, 467, 709, 278, 0, 965, 391,
	315, 460, 993, 1042, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1012, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1024, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1020, 1006, 1026, 886, 872, 878, 873, 902, 1043, 293,
	285, 1027, 1025, 904, 361, 224, 956, 949, 942, 811,
	471, 1059, 257, 1008, 473, 180, 406, 405, 916, 292,
	1010, 181, 170, 385, 182, 302, 204, 1030, 486, 220,
	309, 450, 708, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1049, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1038, 1021, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 729, 730, 246, 800, 1053, 211, 867,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 968, 955,
	953, 861, 1037, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 957, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 879, 1014, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 995, 1062, 360, 393, 233, 469, 421, 262,
	877, 1066, 824, 812, 813, 816, 960, 961, 814, 817,
	818, 826, 798, 799, 801, 803, 804, 805, 948, 1041,
	862, 808, 1017, 819, 820, 821, 822, 988, 1060, 796,
	242, 745, 838, 839, 840, 746, 841, 842, 747, 748,
	843, 844, 845, 846, 749, 847, 848, 849, 827, 828,
	829, 830, 831, 832, 833, 834, 837, 835, 836, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 806, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1015, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1064, 346,
	1033, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1032, 1057, 976, 990, 901, 1044, 0,
	0, 448, 802, 1048, 888, 911, 1058, 917, 919, 984,
	863, 959, 357, 908, 864, 1009, 0, 0, 855, 706,
	856, 889, 259, 705, 1018, 962, 1046, 945, 977, 987,
	258, 244, 952, 951, 1035, 900, 899, 982, 1031, 1045,
	0, 0, 172, 478, 190, 810, 314, 0, 0, 476,
	423, 339, 0, 0, 943, 0, 794, 795, 928, 986,
	875, 973, 1050, 909, 978, 1051, 89, 0, 0, 0,
	0, 2351, 558, 732, 734, 735, 736, 737, 0, 0,
	171, 733, 738, 739, 740, 0, 938, 983, 1063, 854,
	703, 720, 859, 809, 0, 1036, 896, 897, 263, 0,
	0, 0, 0, 0, 0, 0, 941, 958, 1002, 925,
	0, 468, 989, 998, 1013, 918, 376, 283, 0, 0,
	0, 0, 717, 718, 2241, 0, 0, 0, 825, 0,
	0, 719, 0, 869, 715, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 721, 0, 0,
	0, 874, 852, 894, 1004, 853, 851, 340, 866, 797,
	1034, 926, 301, 191, 1040, 924, 823, 992, 870, 1022,
	1056, 912, 311, 868, 195, 865, 871, 910, 353, 1001,
	1007, 807, 198, 313, 1019, 890, 903, 728, 0, 392,
	979, 467, 709, 278, 0, 965, 391, 315, 460, 993,
	1042, 466, 913, 442, 477, 482, 271, 946, 234, 420,
	261, 254, 895, 1012, 858, 284, 375, 249, 306, 929,
	985, 891, 241, 996, 972, 1024, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1006, 1026,
	886, 872, 878, 873, 902, 1043, 293, 285, 1027, 1025,
	904, 361, 224, 956, 949, 942, 811, 471, 1059, 257,
	1008, 473, 180, 406, 405, 916, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 486, 220, 309, 450, 708,
	277, 352, 981, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1005, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 980, 389, 427, 474, 974, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 1003, 216, 237, 428, 210, 1038,
	1021, 967, 931, 937, 860, 0, 209, 932, 933, 934,
	935, 936, 999, 893, 905, 885, 975, 884, 281, 991,
	729, 730, 246, 800, 1053, 211, 867, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 968, 955, 953, 861, 1037,
	966, 954, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 957, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 879, 1014, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 995,
	1062, 360, 393, 233, 469, 421, 262, 877, 1066, 824,
	812, 813, 816, 960, 961, 814, 817, 818, 826, 798,
	799, 801, 803, 804, 805, 948, 1041, 862, 808, 1017,
	819, 820, 821, 822, 988, 1060, 796, 242, 745, 838,
	839, 840, 746, 841, 842, 747, 748, 843, 844, 845,
	846, 749, 847, 848, 849, 827, 828, 829, 830, 831,
	832, 833, 834, 837, 835, 836, 0, 944, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 806,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1015, 971, 0, 921, 923,
	922, 881, 883, 882, 880, 1064, 346, 1033, 850, 857,
	876, 887, 892, 898, 906, 907, 915, 920, 930, 939,
	940, 950, 963, 964, 970, 994, 997, 1011, 1016, 1023,
	1028, 1029, 472, 252, 947, 969, 1000, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	927, 196, 0, 0, 202, 0, 203, 205, 914, 201,
	1032, 1057, 976, 990, 901, 1044, 0, 0, 448, 802,
	1048, 888, 911, 1058, 917, 919, 984, 863, 959, 357,
	908, 864, 1009, 0, 0, 855, 706, 856, 889, 259,
	705, 1018, 962, 1046, 945, 977, 987, 258, 244, 952,
	951, 1035, 900, 899, 982, 1031, 1045, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1050,
	909, 978, 1051, 89, 0, 0, 0, 0, 2348, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1063, 854, 703, 720, 859,
	809, 0, 1036, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1013, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 2241, 0, 0, 0, 825, 0, 0, 719, 0,
	869, 715, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 721, 0, 0, 0, 874, 852,
	894, 1004, 853, 851, 340, 866, 797, 1034, 926, 301,
	191, 1040, 924, 823, 992, 870, 1022, 1056, 912, 311,
	868, 195, 865, 871, 910, 353, 1001, 1007, 807, 198,
	313, 1019, 890, 903, 728, 0, 392, 979, 467, 709,
	278, 0, 965, 391, 315, 460, 993, 1042, 466, 913,
	442, 477, 482, 271, 946, 234, 420, 261, 254, 895,
	1012, 858, 284, 375, 249, 306, 929, 985, 891, 241,
	996, 972, 1024, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1006, 1026, 886, 872, 878,
	873, 902, 1043, 293, 285, 1027, 1025, 904, 361, 224,
	956, 949, 942, 811, 471, 1059, 257, 1008, 473, 180,
	406, 405, 916, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 486, 220, 309, 450, 708, 277, 352, 981,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1005, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 980, 389,
	427, 474, 974, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 1003, 216, 237, 428, 210, 1038, 1021, 967, 931,
	937, 860, 0, 209, 932, 933, 934, 935, 936, 999,
	893, 905, 885, 975, 884, 281, 991, 729, 730, 246,
	800, 1053, 211, 867, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 968, 955, 953, 861, 1037, 966, 954, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	957, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 879, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 995, 1062, 360, 393,
	233, 469, 421, 262, 877, 1066, 824, 812, 813, 816,
	960, 961, 814, 817, 818, 826, 798, 799, 801, 803,
	804, 805, 948, 1041, 862, 808, 1017, 819, 820, 821,
	822, 988, 1060, 796, 242, 745, 838, 839, 840, 746,
	841, 842, 747, 748, 843, 844, 845, 846, 749, 847,
	848, 849, 827, 828, 829, 830, 831, 832, 833, 834,
	837, 835, 836, 0, 944, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 806, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1015, 971, 0, 921, 923, 922, 881, 883,
	882, 880, 1064, 346, 1033, 850, 857, 876, 887, 892,
	898, 906, 907, 915, 920, 930, 939, 940, 950, 963,
	964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472,
	252, 947, 969, 1000, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 927, 196, 0,
	0, 202, 0, 203, 205, 914, 201, 1032, 1057, 976,
	990, 901, 1044, 0, 42, 448, 802, 1048, 888, 911,
	1058, 917, 919, 984, 863, 959, 357, 908, 864, 1009,
	0, 0, 855, 706, 856, 889, 259, 705, 1018, 962,
	1046, 945, 977, 987, 258, 244, 952, 951, 1035, 900,
	899, 982, 1031, 1045, 0, 0, 172, 478, 190, 810,
	314, 0, 0, 476, 423, 339, 0, 0, 943, 0,
	794, 795, 928, 986, 875, 973, 1050, 909, 978, 1051,
	89, 0, 0, 0, 0, 731, 558, 732, 734, 735,
	736, 737, 0, 0, 171, 733, 738, 739, 740, 0,
	938, 983, 1063, 854, 703, 720, 859, 809, 0, 1036,
	896, 897, 263, 0, 0, 0, 0, 0, 0, 0,
	941, 958, 1002, 925, 0, 468, 989, 998, 1013, 918,
	376, 283, 0, 0, 0, 0, 717, 718, 0, 0,
	0, 0, 825, 0, 0, 719, 0, 869, 715, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 721, 0, 0, 0, 874, 852, 894, 1004, 853,
	851, 340, 866, 797, 1542, 926, 301, 191, 1040, 924,
	823, 992, 870, 1022, 1056, 912, 311, 868, 195, 865,
	871, 910, 353, 1001, 1007, 807, 198, 313, 1019, 890,
	903, 728, 0, 392, 979, 467, 709, 278, 0, 965,
	391, 315, 460, 993, 1042, 466, 913, 442, 477, 482,
	271, 946, 234, 420, 261, 254, 895, 1012, 858, 284,
	375, 249, 306, 929, 985, 891, 241, 996, 972, 1024,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1006, 1026, 886, 872, 878, 873, 902, 1043,
	293, 285, 1027, 1025, 904, 361, 224, 956, 949, 942,
	811, 471, 1059, 257, 1008, 473, 180, 406, 405, 916,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 486,
	220, 309, 450, 708, 277, 352, 981, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1005, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 980, 389, 427, 474, 974,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1003, 216,
	237, 428, 210, 1038, 1021, 967, 931, 937, 860, 0,
	209, 932, 933, 934, 935, 936, 999, 893, 905, 885,
	975, 884, 281, 991, 729, 730, 246, 800, 1053, 211,
	867, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 968,
	955, 953, 861, 1037, 966, 954, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 957, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 879, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 995, 1062, 360, 393, 233, 469, 421,
	262, 877, 1066, 824, 812, 813, 816, 960, 961, 814,
	817, 818, 826, 798, 799, 801, 803, 804, 805, 948,
	1041, 862, 808, 1017, 819, 820, 821, 822, 988, 1060,
	796, 242, 745, 838, 839, 840, 746, 841, 842, 747,
	748, 843, 844, 845, 846, 749, 847, 848, 849, 827,
	828, 829, 830, 831, 832, 833, 834, 837, 835, 836,
	0, 944, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 806, 199, 212, 312, 1540, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1015,
	971, 0, 921, 923, 922, 881, 883, 882, 880, 1064,
	346, 1033, 850, 857, 876, 887, 892, 898, 906, 907,
	915, 920, 930, 939, 940, 950, 963, 964, 970, 994,
	997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969,
	1000, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 927, 196, 0, 0, 202, 0,
	203, 205, 914, 201, 1032, 1057, 976, 990, 901, 1044,
	0, 0, 448, 802, 1048, 888, 911, 1058, 917, 919,
	984, 863, 959, 357, 908, 864, 1009, 0, 0, 855,
	706, 856, 889, 259, 705, 1018, 962, 1046, 945, 977,
	987, 258, 244, 952, 951, 1035, 900, 899, 982, 1031,
	1045, 0, 0, 172, 478, 190, 810, 314, 0, 0,
	476, 423, 339, 0, 0, 943, 0, 794, 795, 928,
	986, 875, 973, 1050, 909, 978, 1051, 89, 0, 2108,
	0, 0, 731, 558, 732, 734, 735, 736, 737, 0,
	0, 171, 733, 738, 739, 740, 0, 938, 983, 1063,
	854, 703, 720, 859, 809, 0, 1036, 896, 897, 263,
	0, 0, 0, 0, 0, 0, 0, 941, 958, 1002,
	925, 0, 468, 989, 998, 1013, 918, 376, 283, 0,
	0, 0, 0, 717, 718, 0, 0, 0, 0, 825,
	0, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1034, 926, 301, 191, 1040, 924, 823, 992, 870,
	1022, 1056, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1019, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1042, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1012, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1024, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1006,
	1026, 886, 872, 878, 873, 902, 1043, 293, 285, 1027,
	1025, 904, 361, 224, 956, 949, 942, 811, 471, 1059,
	257, 1008, 473, 180, 406, 405, 916, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1038, 1021, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1053, 211, 867, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 968, 955, 953, 861,
	1037, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 879, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1062, 360, 393, 233, 469, 421, 262, 877, 1066,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 948, 1041, 862, 808,
	1017, 819, 820, 821, 822, 988, 1060, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1015, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1064, 346, 1033, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1011, 1016,
	1023, 1028, 1029, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1032, 1057, 976, 990, 901, 1044, 0, 0, 448,
	802, 1048, 888, 911, 1058, 917, 919, 984, 863, 959,
	357, 908, 864, 1009, 0, 0, 855, 706, 856, 889,
	259, 705, 1018, 962, 1046, 945, 977, 987, 258, 244,
	952, 951, 1035, 900, 899, 982, 1031, 1045, 0, 0,
	172, 478, 190, 810, 314, 0, 0, 476, 423, 339,
	0, 0, 943, 0, 794, 795, 928, 986, 875, 973,
	1050, 909, 978, 1051, 89, 0, 0, 0, 0, 731,
	558, 732, 734, 735, 736, 737, 0, 0, 171, 733,
	738, 739, 740, 0, 938, 983, 1063, 854, 703, 720,
	859, 809, 0, 1036, 896, 897, 263, 0, 0, 0,
	0, 0, 0, 0, 941, 958, 1002, 925, 0, 468,
	989, 998, 1013, 918, 376, 283, 0, 0, 0, 0,
	717, 718, 0, 0, 0, 0, 825, 0, 0, 719,
	0, 869, 715, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 721, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 797, 1034, 926,
	301, 191, 1040, 924, 823, 992, 870, 1022, 1056, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 807,
	198, 313, 1019, 890, 903, 728, 0, 392, 979, 467,
	709, 278, 0, 965, 391, 315, 460, 993, 1042, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1012, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1024, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1006, 1026, 886, 872,
	878, 873, 902, 1043, 293, 285, 1027, 1025, 904, 361,
	224, 956, 949, 942, 811, 471, 1059, 257, 1008, 473,
	180, 406, 405, 916, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 486, 220, 309, 450, 708, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1038, 1021, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 729, 730,
	246, 800, 1053, 211, 867, 1052, 349, 356, 348, 1055,
	1054, 459, 1039, 968, 955, 953, 861, 1037, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1047, 1065,
	439, 226, 879, 1014, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1062, 360,
	393, 233, 469, 421, 262, 877, 1066, 824, 812, 813,
	816, 960, 961, 814, 817, 818, 826, 798, 799, 801,
	803, 804, 805, 948, 1041, 862, 808, 1017, 819, 820,
	821, 822, 988, 1060, 796, 242, 745, 838, 839, 840,
	746, 841, 842, 747, 748, 843, 844, 845, 846, 749,
	847, 848, 849, 827, 828, 829, 830, 831, 832, 833,
	834, 837, 835, 836, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 806, 199, 212,
	312, 1061, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1015, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1064, 346, 1033, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1032, 1057,
	976, 990, 901, 1044, 0, 0, 448, 802, 1048, 888,
	911, 1058, 917, 919, 984, 863, 959, 357, 908, 864,
	1009, 0, 0, 855, 1106, 856, 889, 259, 1104, 1018,
	962, 1046, 945, 977, 987, 258, 244, 952, 951, 1035,
	900, 899, 982, 1031, 1045, 0, 0, 172, 478, 190,
	810, 314, 0, 0, 476, 423, 339, 0, 0, 943,
	0, 794, 795, 928, 986, 875, 973, 1050, 909, 978,
	1051, 89, 0, 0, 0, 0, 731, 558, 732, 734,
	735, 736, 737, 0, 0, 171, 733, 738, 739, 740,
	0, 938, 983, 1063, 854, 1123, 720, 859, 809, 0,
	1036, 896, 897, 263, 0, 0, 0, 0, 0, 0,
	0, 941, 958, 1002, 925, 0, 468, 989, 998, 1013,
	918, 376, 283, 0, 0, 0, 0, 717, 718, 0,
	0, 0, 0, 825, 0, 0, 719, 0, 869, 715,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 721, 0, 0, 0, 874, 852, 894, 1004,
	853, 851, 340, 866, 797, 1034, 926, 301, 191, 1040,
	924, 823, 992, 870, 1022, 1056, 912, 311, 868, 195,
	865, 871, 910, 353, 1001, 1007, 807, 198, 313, 1019,
	890, 903, 728, 0, 392, 979, 467, 709, 278, 0,
	965, 391, 315, 460, 993, 1042, 466, 913, 442, 477,
	482, 271, 946, 234, 420, 261, 254, 895, 1012, 858,
	284, 375, 249, 306, 929, 985, 891, 241, 996, 972,
	1024, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1006, 1026, 886, 872, 878, 873, 902,
	1043, 293, 285, 1027, 1025, 904, 361, 224, 956, 949,
	942, 811, 471, 1059, 257, 1008, 473, 180, 406, 405,
	916, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	486, 220, 309, 450, 708, 277, 352, 981, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1005, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 980, 389, 427, 474,
	974, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1003,
	216, 237, 428, 210, 1038, 1021, 967, 931, 937, 860,
	0, 209, 932, 933, 934, 935, 936, 999, 893, 905,
	885, 975, 884, 281, 991, 729, 730, 246, 800, 1053,
	211, 867, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	968, 955, 953, 861, 1037, 966, 954, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 957, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 879,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 995, 1062, 360, 393, 233, 469,
	421, 262, 877, 1066, 824, 812, 813, 816, 960, 961,
	814, 817, 818, 826, 798, 799, 801, 803, 804, 805,
	948, 1041, 862, 808, 1017, 819, 820, 821, 822, 988,
	1060, 796, 242, 745, 838, 839, 840, 746, 841, 842,
	747, 748, 843, 844, 845, 846, 749, 847, 848, 849,
	827, 828, 829, 830, 831, 832, 833, 834, 837, 835,
	836, 0, 944, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 806, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1015, 971, 0, 921, 923, 922, 881, 883, 882, 880,
	1064, 346, 1033, 850, 857, 876, 887, 892, 898, 906,
	907, 915, 920, 930, 939, 940, 950, 963, 964, 970,
	994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947,
	969, 1000, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 927, 196, 0, 0, 202,
	0, 203, 205, 914, 201, 1032, 1057, 976, 990, 901,
	1044, 0, 0, 448, 802, 1048, 888, 911, 1058, 917,
	919, 984, 863, 959, 357, 908, 864, 1009, 0, 0,
	855, 1106, 856, 889, 259, 1104, 1018, 962, 1046, 945,
	977, 987, 258, 244, 952, 951, 1035, 900, 899, 982,
	1031, 1045, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1050, 909, 978, 1051, 89, 0,
	0, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1063, 854, 1123, 720, 859, 809, 0, 1036, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1013, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 0, 0, 0, 0,
	825, 0, 0, 719, 0, 869, 715, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 721,
	0, 0, 0, 874, 852, 894, 1004, 853, 851, 340,
	866, 797, 1034, 926, 301, 191, 1040, 924, 823, 992,
	870, 1022, 1056, 912, 311, 868, 195, 865, 871, 910,
	353, 1001, 1007, 807, 198, 313, 1019, 890, 903, 728,
	0, 392, 979, 467, 709, 278, 0, 4556, 391, 315,
	460, 993, 1042, 466, 913, 442, 477, 482, 271, 946,
	234, 420, 261, 254, 895, 1012, 858, 284, 375, 249,
	306, 929, 985, 891, 241, 996, 972, 1024, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1006, 1026, 886, 872, 878, 873, 902, 1043, 293, 285,
	1027, 1025, 904, 361, 224, 956, 949, 942, 811, 471,
	1059, 257, 1008, 473, 180, 406, 405, 916, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 486, 220, 309,
	450, 708, 277, 352, 981, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1005, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 980, 389, 427, 474, 974, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1003, 216, 237, 428,
	210, 1038, 1021, 967, 931, 937, 860, 0, 209, 932,
	933, 934, 935, 936, 999, 893, 905, 885, 975, 884,
	281, 991, 729, 730, 246, 800, 1053, 211, 867, 1052,
	349, 356, 348, 1055, 1054, 459, 1039, 968, 955, 953,
	861, 1037, 966, 954, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 957, 425, 320, 0, 206,
	0, 424, 1047, 1065, 439, 226, 879, 1014, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 995, 1062, 360, 393, 233, 469, 421, 262, 877,
	1066, 824, 812, 813, 816, 960, 961, 814, 817, 818,
	826, 798, 799, 801, 803, 804, 805, 948, 1041, 862,
	808, 1017, 819, 820, 821, 822, 988, 1060, 796, 242,
	745, 838, 839, 840, 746, 841, 842, 747, 748, 843,
	844, 845, 846, 749, 847, 848, 849, 827, 828, 829,
	830, 831, 832, 833, 834, 837, 835, 836, 0, 944,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 806, 199, 212, 312, 1061, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1015, 971, 0,
	921, 923, 922, 881, 883, 882, 880, 1064, 346, 1033,
	850, 857, 876, 887, 892, 898, 906, 907, 915, 920,
	930, 939, 940, 950, 963, 964, 970, 994, 997, 1011,
	1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 927, 196, 0, 0, 202, 0, 203, 205,
	914, 201, 1032, 1057, 976, 990, 901, 1044, 0, 0,
	448, 802, 1048, 888, 911, 1058, 917, 919, 984, 863,
	959, 357, 908, 864, 1009, 0, 0, 855, 1106, 856,
	889, 259, 1104, 1018, 962, 1046, 945, 977, 987, 258,
	244, 952, 951, 1035, 900, 899, 982, 1031, 1045, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1050, 909, 978, 1051, 89, 0, 0, 0, 0,
	731, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 0, 938, 983, 1063, 854, 1123,
	720, 859, 809, 0, 1036, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1013, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 0, 0, 0, 0, 825, 0, 0,
	719, 0, 869, 715, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 721, 0, 0, 0,
	874, 852, 894, 1004, 853, 851, 340, 866, 797, 1034,
	926, 301, 191, 1040, 924, 823, 992, 870, 1022, 1056,
	912, 311, 868, 195, 865, 871, 910, 353, 1001, 1007,
	807, 198, 313, 1019, 890, 903, 728, 0, 392, 979,
	467, 709, 278, 0, 965, 391, 315, 460, 993, 1042,
	466, 913, 442, 477, 482, 271, 946, 234, 420, 261,
	254, 895, 1012, 858, 284, 375, 249, 306, 929, 985,
	891, 241, 996, 972, 1024, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1006, 1026, 886,
	872, 878, 873, 902, 1043, 293, 285, 1027, 1025, 904,
	361, 224, 956, 949, 942, 811, 471, 1059, 257, 1008,
	473, 180, 406, 405, 916, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 486, 220, 309, 450, 708, 277,
	352, 981, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1005, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	980, 389, 427, 474, 974, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1003, 216, 237, 428, 210, 1038, 1021,
	967, 931, 937, 860, 0, 209, 932, 933, 934, 935,
	936, 999, 893, 905, 885, 975, 884, 281, 991, 729,
	730, 246, 800, 1053, 211, 867, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 968, 955, 953, 861, 1037, 966,
	954, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 957, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 879, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 995, 1062,
	360, 393, 233, 469, 421, 262, 877, 1066, 824, 812,
	813, 816, 960, 961, 814, 817, 818, 826, 798, 799,
	801, 803, 804, 805, 2354, 2355, 2356, 808, 1017, 819,
	820, 821, 822, 988, 1060, 796, 242, 745, 838, 839,
	840, 746, 841, 842, 747, 748, 843, 844, 845, 846,
	749, 847, 848, 849, 827, 828, 829, 830, 831, 832,
	833, 834, 837, 835, 836, 0, 944, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 806, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1015, 971, 0, 921, 923, 922,
	881, 883, 882, 880, 1064, 346, 1033, 850, 857, 876,
	887, 892, 898, 906, 907, 915, 920, 930, 939, 940,
	950, 963, 964, 970, 994, 997, 1011, 1016, 1023, 1028,
	1029, 472, 252, 947, 969, 1000, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 927,
	196, 0, 0, 202, 0, 203, 205, 914, 201, 1032,
	1057, 976, 990, 1829, 2009, 0, 3715, 448, 1863, 2013,
	1812, 1842, 2031, 1848, 1851, 1932, 1778, 1901, 357, 1839,
	1779, 1961, 1762, 1817, 1766, 1830, 1767, 1814, 259, 1810,
	1974, 1904, 2011, 1883, 1925, 1935, 258, 244, 1893, 1892,
	1999, 1828, 1827, 1930, 1988, 2010, 1882, 0, 172, 478,
	190, 3716, 314, 1985, 498, 3717, 423, 339, 501, 500,
	1878, 1994, 1899, 1963, 1861, 1934, 1794, 1917, 2015, 1840,
	1926, 2016, 89, 0, 695, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1922, 2007,
	1833, 499, 1873, 1931, 2036, 1765, 1918, 0, 1770, 1781,
	2030, 2000, 1824, 1825, 263, 0, 0, 0, 0, 0,
	0, 0, 1876, 1900, 1952, 1858, 0, 468, 1937, 1947,
	1966, 1850, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 1915, 0, 0, 0, 0, 1786,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 1793, 1763, 1821,
	1954, 1764, 1761, 340, 1782, 1968, 3719, 1859, 301, 191,
	2004, 1857, 1856, 1941, 1787, 1978, 2028, 1843, 311, 1785,
	195, 1780, 1788, 1841, 353, 1951, 1959, 177, 198, 313,
	1975, 1815, 1832, 245, 2183, 392, 1927, 467, 497, 278,
	0, 1908, 391, 315, 460, 1942, 2006, 466, 1844, 442,
	477, 482, 271, 1884, 234, 420, 261, 254, 1823, 1965,
	1769, 284, 375, 249, 306, 1862, 1933, 1816, 241, 1945,
	1916, 1980, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1976, 1958, 1982, 1809, 1789, 1800, 1790,
	1831, 2008, 293, 285, 1983, 1981, 1834, 361, 224, 1897,
	1890, 1877, 1955, 471, 2032, 257, 1960, 473, 180, 406,
	405, 1847, 292, 1962, 181, 170, 385, 182, 302, 204,
	1987, 486, 220, 309, 450, 496, 277, 352, 1929, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1957,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 2014, 322, 266, 270, 286, 297, 1928, 389, 427,
	474, 1919, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1953, 216, 237, 428, 210, 2002, 1977, 1910, 1865, 1871,
	1771, 0, 209, 1866, 1867, 1868, 1869, 1870, 1949, 1820,
	1836, 1808, 1923, 1807, 281, 1940, 463, 464, 246, 1783,
	2022, 211, 1784, 2021, 349, 356, 348, 2025, 2023, 459,
	2003, 1911, 1896, 1894, 1776, 2001, 1909, 1895, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1898,
	425, 320, 0, 206, 0, 424, 2012, 2038, 439, 226,
	1802, 1969, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1944, 2035, 360, 393, 233,
	469, 421, 262, 1798, 0, 1801, 1796, 1799, 1797, 1902,
	1903, 2017, 2018, 2019, 1956, 1791, 192, 193, 1995, 1996,
	194, 1889, 2005, 1777, 0, 1973, 188, 189, 174, 179,
	1936, 2033, 1849, 242, 164, 1773, 1774, 1775, 165, 1879,
	1880, 167, 168, 1991, 1990, 1989, 1992, 169, 2026, 2024,
	2027, 1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921, 1967,
	1939, 1948, 1822, 1881, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1907, 199, 212, 312, 3718,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1970, 1914, 0, 1853, 1855, 1854, 1804, 1806, 1805,
	1803, 2037, 346, 1997, 1760, 1768, 1795, 1811, 1818, 1826,
	1837, 1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905, 1906,
	1913, 1943, 1946, 1964, 1972, 1979, 1984, 1986, 472, 252,
	1887, 1912, 1950, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1860, 196, 0, 0,
	202, 0, 203, 205, 1845, 201, 1993, 2029, 1924, 1938,
	1829, 2009, 0, 1971, 448, 1863, 2013, 1812, 1842, 2031,
	1848, 1851, 1932, 1778, 1901, 357, 1839, 1779, 1961, 1762,
	1817, 1766, 1830, 1767, 1814, 259, 1810, 1974, 1904, 2011,
	1883, 1925, 1935, 258, 244, 1893, 1892, 1999, 1828, 1827,
	1930, 1988, 2010, 1882, 0, 172, 478, 190, 2020, 314,
	1985, 498, 476, 423, 339, 501, 500, 1878, 1994, 1899,
	1963, 1861, 1934, 1794, 1917, 2015, 1840, 1926, 2016, 0,
	0, 0, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1922, 2007, 1833, 499, 1873,
	1931, 2036, 1765, 1918, 0, 1770, 1781, 2030, 2000, 1824,
	1825, 263, 0, 0, 0, 0, 0, 0, 0, 1876,
	1900, 1952, 1858, 0, 468, 1937, 1947, 1966, 1850, 376,
	283, 0, 0, 0, 0, 0, 0, 3214, 0, 1819,
	0, 1915, 0, 0, 0, 0, 1786, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 1793, 1763, 1821, 1954, 1764, 1761,
	340, 1782, 1968, 1998, 1859, 301, 191, 2004, 1857, 1856,
	1941, 1787, 1978, 2028, 1843, 311, 1785, 195, 1780, 1788,
	1841, 353, 1951, 1959, 177, 198, 313, 1975, 1815, 1832,
	245, 0, 392, 1927, 467, 2281, 278, 0, 1908, 391,
	315, 460, 1942, 2006, 466, 1844, 442, 477, 482, 271,
	1884, 234, 420, 261, 254, 1823, 1965, 1769, 284, 375,
	249, 306, 1862, 1933, 1816, 241, 1945, 1916, 1980, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1976, 1958, 1982, 1809, 1789, 1800, 1790, 1831, 2008, 293,
	285, 1983, 1981, 1834, 361, 224, 1897, 1890, 1877, 1955,
	471, 2032, 257, 1960, 473, 180, 406, 405, 1847, 292,
	1962, 181, 170, 385, 182, 302, 204, 1987, 486, 220,
	309, 450, 2280, 277, 352, 1929, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1957, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 2014, 322,
	266, 270, 286, 297, 1928, 389, 427, 474, 1919, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1953, 216, 237,
	428, 210, 2002, 1977, 1910, 1865, 1871, 1771, 0, 209,
	1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923,
	1807, 281, 1940, 463, 464, 246, 1783, 2022, 211, 1784,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1911, 1896,
	1894, 1776, 2001, 1909, 1895, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1898, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1802, 1969, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1944, 2035, 360, 393, 233, 469, 421, 262,
	1798, 0, 1801, 1796, 1799, 1797, 1902, 1903, 2017, 2018,
	2019, 1956, 1791, 192, 193, 1995, 1996, 194, 1889, 2005,
	1777, 0, 1973, 188, 189, 174, 179, 1936, 2033, 1849,
	242, 164, 1773, 1774, 1775, 165, 1879, 1880, 167, 168,
	1991, 1990, 1989, 1992, 169, 2026, 2024, 2027, 1792, 1813,
	1835, 1885, 1886, 1888, 1920, 1921, 1967, 1939, 1948, 1822,
	1881, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1907, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1970, 1914,
	0, 1853, 1855, 1854, 1804, 1806, 1805, 1803, 2037, 346,
	1997, 1760, 1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846,
	1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946,
	1964, 1972, 1979, 1984, 1986, 472, 252, 1887, 1912, 1950,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1860, 196, 0, 0, 202, 0, 203,
	205, 1845, 201, 1993, 2029, 1924, 1938, 1829, 2009, 0,
	1971, 448, 1863, 2013, 1812, 1842, 2031, 1848, 1851, 1932,
	1778, 1901, 357, 1839, 1779, 1961, 1762, 1817, 1766, 1830,
	1767, 1814, 259, 1810, 1974, 1904, 2011, 1883, 1925, 1935,
	258, 244, 1893, 1892, 1999, 1828, 1827, 1930, 1988, 2010,
	1882, 0, 172, 478, 190, 2020, 314, 1985, 498, 476,
	423, 339, 501, 500, 1878, 1994, 1899, 1963, 1861, 1934,
	1794, 1917, 2015, 1840, 1926, 2016, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1922, 2007, 1833, 499, 1873, 1931, 2036, 1765,
	1918, 0, 1770, 1781, 2030, 2000, 1824, 1825, 263, 0,
	0, 0, 0, 0, 0, 0, 1876, 1900, 1952, 1858,
	0, 468, 1937, 1947, 1966, 1850, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 1915, 0,
	0, 0, 0, 1786, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 1793, 1763, 1821, 1954, 1764, 1761, 340, 1782, 1968,
	1998, 1859, 301, 191, 2004, 1857, 1856, 1941, 1787, 1978,
	2028, 1843, 311, 1785, 195, 1780, 1788, 1841, 353, 1951,
	1959, 177, 198, 313, 1975, 1815, 1832, 245, 2183, 392,
	1927, 467, 497, 278, 0, 1908, 391, 315, 460, 1942,
	2006, 466, 1844, 442, 477, 482, 271, 1884, 234, 420,
	261, 254, 1823, 1965, 1769, 284, 375, 249, 306, 1862,
	1933, 1816, 241, 1945, 1916, 1980, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1976, 1958, 1982,
	1809, 1789, 1800, 1790, 1831, 2008, 293, 285, 1983, 1981,
	1834, 361, 224, 1897, 1890, 1877, 1955, 471, 2032, 257,
	1960, 473, 180, 406, 405, 1847, 292, 1962, 181, 170,
	385, 182, 302, 204, 1987, 486, 220, 309, 450, 496,
	277, 352, 1929, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1957, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 2014, 322, 266, 270, 286,
	297, 1928, 389, 427, 474, 1919, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 1953, 216, 237, 428, 210, 2002,
	1977, 1910, 1865, 1871, 1771, 0, 209, 1866, 1867, 1868,
	1869, 1870, 1949, 1820, 1836, 1808, 1923, 1807, 281, 1940,
	463, 464, 246, 1783, 2022, 211, 1784, 2021, 349, 356,
	348, 2025, 2023, 459, 2003, 1911, 1896, 1894, 1776, 2001,
	1909, 1895, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1898, 425, 320, 0, 206, 0, 424,
	2012, 2038, 439, 226, 1802, 1969, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1944,
	2035, 360, 393, 233, 469, 421, 262, 1798, 0, 1801,
	1796, 1799, 1797, 1902, 1903, 2017, 2018, 2019, 1956, 1791,
	192, 193, 1995, 1996, 194, 1889, 2005, 1777, 0, 1973,
	188, 189, 174, 179, 1936, 2033, 1849, 242, 164, 1773,
	1774, 1775, 165, 1879, 1880, 167, 168, 1991, 1990, 1989,
	1992, 169, 2026, 2024, 2027, 1792, 1813, 1835, 1885, 1886,
	1888, 1920, 1921, 1967, 1939, 1948, 1822, 1881, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1907,
	199, 212, 312, 2034, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1970, 1914, 0, 1853, 1855,
	1854, 1804, 1806, 1805, 1803, 2037, 346, 1997, 1760, 1768,
	1795, 1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864, 1874,
	1875, 1891, 1905, 1906, 1913, 1943, 1946, 1964, 1972, 1979,
	1984, 1986, 472, 252, 1887, 1912, 1950, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	1860, 196, 0, 0, 202, 0, 203, 205, 1845, 201,
	1993, 2029, 1924, 1938, 1829, 2009, 0, 1971, 448, 1863,
	2013, 1812, 1842, 2031, 1848, 1851, 1932, 1778, 1901, 357,
	1839, 1779, 1961, 1762, 1817, 1766, 1830, 1767, 1814, 259,
	1810, 1974, 1904, 2011, 1883, 1925, 1935, 258, 244, 1893,
	1892, 1999, 1828, 1827, 1930, 1988, 2010, 1882, 0, 172,
	478, 190, 2020, 314, 1985, 498, 476, 423, 339, 501,
	500, 1878, 1994, 1899, 1963, 1861, 1934, 1794, 1917, 2015,
	1840, 1926, 2016, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1922,
	2007, 1833, 499, 1873, 1931, 2036, 1765, 1918, 0, 1770,
	1781, 2030, 2000, 1824, 1825, 263, 0, 0, 0, 0,
	0, 0, 0, 1876, 1900, 1952, 1858, 0, 468, 1937,
	1947, 1966, 1850, 376, 283, 0, 0, 0, 0, 0,
	0, 2274, 0, 1819, 0, 1915, 0, 0, 0, 0,
	1786, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 1793, 1763,
	1821, 1954, 1764, 1761, 340, 1782, 1968, 1998, 1859, 301,
	191, 2004, 1857, 1856, 1941, 1787, 1978, 2028, 1843, 311,
	1785, 195, 1780, 1788, 1841, 353, 1951, 1959, 177, 198,
	313, 1975, 1815, 1832, 245, 0, 392, 1927, 467, 2281,
	278, 0, 1908, 391, 315, 460, 1942, 2006, 466, 1844,
	442, 477, 482, 271, 1884, 234, 420, 261, 254, 1823,
	1965, 1769, 284, 375, 249, 306, 1862, 1933, 1816, 241,
	1945, 1916, 1980, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1976, 1958, 1982, 1809, 1789, 1800,
	1790, 1831, 2008, 293, 285, 1983, 1981, 1834, 361, 224,
	1897, 1890, 1877, 1955, 471, 2032, 257, 1960, 473, 180,
	406, 405, 1847, 292, 1962, 181, 170, 385, 182, 302,
	204, 1987, 486, 220, 309, 450, 2280, 277, 352, 1929,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1957, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 2014, 322, 266, 270, 286, 297, 1928, 389,
	427, 474, 1919, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 1953, 216, 237, 428, 210, 2002, 1977, 1910, 1865,
	1871, 1771, 0, 209, 1866, 1867, 1868, 1869, 1870, 1949,
	1820, 1836, 1808, 1923, 1807, 281, 1940, 463, 464, 246,
	1783, 2022, 211, 1784, 2021, 349, 356, 348, 2025, 2023,
	459, 2003, 1911, 1896, 1894, 1776, 2001, 1909, 1895, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1898, 425, 320, 0, 206, 0, 424, 2012, 2038, 439,
	226, 1802, 1969, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1944, 2035, 360, 393,
	233, 469, 421, 262, 1798, 0, 1801, 1796, 1799, 1797,
	1902, 1903, 2017, 2018, 2019, 1956, 1791, 192, 193, 1995,
	1996, 194, 1889, 2005, 1777, 0, 1973, 188, 189, 174,
	179, 1936, 2033, 1849, 242, 164, 1773, 1774, 1775, 165,
	1879, 1880, 167, 168, 1991, 1990, 1989, 1992, 169, 2026,
	2024, 2027, 1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921,
	1967, 1939, 1948, 1822, 1881, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1907, 199, 212, 312,
	2034, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1970, 1914, 0, 1853, 1855, 1854, 1804, 1806,
	1805, 1803, 2037, 346, 1997, 1760, 1768, 1795, 1811, 1818,
	1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905,
	1906, 1913, 1943, 1946, 1964, 1972, 1979, 1984, 1986, 472,
	252, 1887, 1912, 1950, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 1860, 196, 0,
	0, 202, 0, 203, 205, 1845, 201, 1993, 2029, 1924,
	1938, 1829, 2009, 0, 1971, 448, 1863, 2013, 1812, 1842,
	2031, 1848, 1851, 1932, 1778, 1901, 357, 1839, 1779, 1961,
	1762, 1817, 1766, 1830, 1767, 1814, 259, 1810, 1974, 1904,
	2011, 1883, 1925, 1935, 258, 244, 1893, 1892, 1999, 1828,
	1827, 1930, 1988, 2010, 1882, 0, 172, 478, 190, 2020,
	314, 1985, 498, 476, 423, 339, 501, 500, 1878, 1994,
	1899, 1963, 1861, 1934, 1794, 1917, 2015, 1840, 1926, 2016,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1922, 2007, 1833, 499,
	1873, 1931, 2036, 1765, 1918, 0, 1770, 1781, 2030, 2000,
	1824, 1825, 263, 0, 0, 0, 0, 0, 0, 0,
	1876, 1900, 1952, 1858, 0, 468, 1937, 1947, 1966, 1850,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 1915, 0, 0, 0, 0, 1786, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 1793, 1763, 1821, 1954, 1764,
	1761, 340, 1782, 1968, 1998, 1859, 301, 191, 2004, 1857,
	1856, 1941, 1787, 1978, 2028, 1843, 311, 1785, 195, 1780,
	1788, 1841, 353, 1951, 1959, 177, 198, 313, 1975, 1815,
	1832, 245, 0, 392, 1927, 467, 2281, 278, 0, 1908,
	391, 315, 460, 1942, 2006, 466, 1844, 442, 477, 482,
	271, 1884, 234, 420, 261, 254, 1823, 1965, 1769, 284,
	375, 249, 306, 1862, 1933, 1816, 241, 1945, 1916, 1980,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1958, 1982, 1809, 1789, 1800, 1790, 1831, 2008,
	293, 285, 1983, 1981, 1834, 361, 224, 1897, 1890, 1877,
	1955, 471, 2032, 257, 1960, 473, 180, 406, 405, 1847,
	292, 1962, 181, 170, 385, 182, 302, 204, 1987, 486,
	220, 309, 450, 2280, 277, 352, 1929, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1957, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 2014,
	322, 266, 270, 286, 297, 1928, 389, 427, 474, 1919,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1953, 216,
	237, 428, 210, 2002, 1977, 1910, 1865, 1871, 1771, 0,
	209, 1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836, 1808,
	1923, 1807, 281, 1940, 463, 464, 246, 1783, 2022, 211,
	1784, 2021, 349, 356, 348, 2025, 2023, 459, 2003, 1911,
	1896, 1894, 1776, 2001, 1909, 1895, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1898, 425, 320,
	0, 206, 0, 424, 2012, 2038, 439, 226, 1802, 1969,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1944, 2035, 360, 393, 233, 469, 421,
	262, 1798, 0, 1801, 1796, 1799, 1797, 1902, 1903, 2017,
	2018, 2019, 1956, 1791, 192, 193, 1995, 1996, 194, 1889,
	2005, 1777, 0, 1973, 188, 189, 174, 179, 1936, 2033,
	1849, 242, 164, 1773, 1774, 1775, 165, 1879, 1880, 167,
	168, 1991, 1990, 1989, 1992, 169, 2026, 2024, 2027, 1792,
	1813, 1835, 1885, 1886, 1888, 1920, 1921, 1967, 1939, 1948,
	1822, 1881, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1907, 199, 212, 312, 2034, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1970,
	1914, 0, 1853, 1855, 1854, 1804, 1806, 1805, 1803, 2037,
	346, 1997, 1760, 1768, 1795, 1811, 1818, 1826, 1837, 1838,
	1846, 1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913, 1943,
	1946, 1964, 1972, 1979, 1984, 1986, 472, 252, 1887, 1912,
	1950, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 1860, 196, 0, 0, 202, 0,
	203, 205, 1845, 201, 1993, 2029, 1924, 1938, 901, 1044,
	0, 0, 448, 1111, 1048, 888, 911, 1058, 917, 919,
	984, 863, 959, 357, 908, 864, 1009, 0, 0, 855,
	1106, 856, 889, 259, 1104, 1018, 962, 1046, 945, 977,
	987, 258, 244, 952, 951, 1035, 900, 899, 982, 1031,
	1045, 0, 0, 172, 478, 190, 1144, 314, 0, 498,
	476, 423, 339, 501, 500, 943, 0, 1118, 1131, 928,
	986, 875, 973, 1050, 909, 978, 1051, 0, 0, 0,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1126, 1140, 1107, 499, 938, 983, 1063,
	854, 1123, 0, 859, 1095, 0, 1036, 896, 897, 263,
	0, 0, 0, 0, 0, 0, 0, 941, 958, 1002,
	925, 0, 468, 989, 998, 1013, 918, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 0, 869, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	1133, 1034, 926, 301, 191, 1040, 924, 1110, 992, 870,
	1022, 1056, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 177, 198, 313, 1019, 890, 903, 245, 3314,
	392, 979, 467, 2367, 278, 0, 965, 391, 315, 460,
	993, 1042, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1012, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1024, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1006,
	1026, 886, 872, 878, 873, 902, 1043, 293, 285, 1027,
	1025, 904, 361, 224, 956, 949, 942, 1129, 471, 1059,
	257, 1008, 473, 180, 406, 405, 916, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 486, 220, 309, 450,
	2366, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1038, 1021, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 463, 464, 246, 1096, 1053, 211, 867, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 968, 955, 953, 861,
	1037, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 879, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1062, 360, 393, 233, 469, 421, 262, 1101, 0,
	1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130,
	1097, 192, 193, 1138, 1139, 194, 948, 1041, 862, 0,
	1017, 188, 189, 174, 179, 988, 1060, 1109, 242, 164,
	1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135,
	1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115,
	1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1121, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1015, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1064, 346, 1033, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1011, 1016,
	1023, 1028, 1029, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1032, 1057, 976, 990, 1829, 2009, 0, 1971, 448,
	1863, 2013, 1812, 1842, 2031, 1848, 1851, 1932, 1778, 1901,
	357, 1839, 1779, 1961, 1762, 1817, 1766, 1830, 1767, 1814,
	259, 1810, 1974, 1904, 2011, 1883, 1925, 1935, 258, 244,
	1893, 1892, 1999, 1828, 1827, 1930, 1988, 2010, 1882, 0,
	172, 478, 190, 2020, 314, 1985, 498, 476, 423, 339,
	501, 500, 1878, 1994, 1899, 1963, 1861, 1934, 1794, 1917,
	2015, 1840, 1926, 2016, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1922, 2007, 1833, 499, 1873, 1931, 2036, 1765, 1918, 0,
	1770, 1781, 2030, 2000, 1824, 1825, 263, 0, 0, 0,
	0, 0, 0, 0, 1876, 1900, 1952, 1858, 0, 468,
	1937, 1947, 1966, 1850, 376, 283, 0, 0, 0, 0,
	0, 0, 2866, 0, 1819, 0, 1915, 0, 0, 0,
	0, 1786, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 1793,
	1763, 1821, 1954, 1764, 1761, 340, 1782, 1968, 1998, 1859,
	301, 191, 2004, 1857, 1856, 1941, 1787, 1978, 2028, 1843,
	311, 1785, 195, 1780, 1788, 1841, 353, 1951, 1959, 177,
	198, 313, 1975, 1815, 1832, 245, 0, 392, 1927, 467,
	497, 278, 0, 1908, 391, 315, 460, 1942, 2006, 466,
	1844, 442, 477, 482, 271, 1884, 234, 420, 261, 254,
	1823, 1965, 1769, 284, 375, 249, 306, 1862, 1933, 1816,
	241, 1945, 1916, 1980, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1976, 1958, 1982, 1809, 1789,
	1800, 1790, 1831, 2008, 293, 285, 1983, 1981, 1834, 361,
	224, 1897, 1890, 1877, 1955, 471, 2032, 257, 1960, 473,
	180, 406, 405, 1847, 292, 1962, 181, 170, 385, 182,
	302, 204, 1987, 486, 220, 309, 450, 496, 277, 352,
	1929, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1957, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2014, 322, 266, 270, 286, 297, 1928,
	389, 427, 474, 1919, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1953, 216, 237, 428, 210, 2002, 1977, 1910,
	1865, 1871, 1771, 0, 209, 1866, 1867, 1868, 1869, 1870,
	1949, 1820, 1836, 1808, 1923, 1807, 281, 1940, 463, 464,
	246, 1783, 2022, 211, 1784, 2021, 349, 356, 348, 2025,
	2023, 459, 2003, 1911, 1896, 1894, 1776, 2001, 1909, 1895,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1898, 425, 320, 0, 206, 0, 424, 2012, 2038,
	439, 226, 1802, 1969, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1944, 2035, 360,
	393, 233, 469, 421, 262, 1798, 0, 1801, 1796, 1799,
	1797, 1902, 1903, 2017, 2018, 2019, 1956, 1791, 0, 0,
	1995, 1996, 0, 1889, 2005, 1777, 0, 1973, 188, 189,
	174, 179, 1936, 2033, 1849, 242, 0, 1773, 1774, 1775,
	0, 1879, 1880, 0, 0, 1991, 1990, 1989, 1992, 0,
	2026, 2024, 2027, 1792, 1813, 1835, 1885, 1886, 1888, 1920,
	1921, 1967, 1939, 1948, 1822, 1881, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1907, 199, 212,
	312, 2034, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1970, 1914, 0, 1853, 1855, 1854, 1804,
	1806, 1805, 1803, 2037, 346, 1997, 1760, 1768, 1795, 1811,
	1818, 1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875, 1891,
	1905, 1906, 1913, 1943, 1946, 1964, 1972, 1979, 1984, 1986,
	472, 252, 1887, 1912, 1950, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1860, 196,
	0, 0, 202, 0, 203, 205, 1845, 201, 1993, 2029,
	1924, 1938, 901, 1044, 0, 0, 448, 1111, 1048, 888,
	911, 1058, 917, 919, 984, 863, 959, 357, 908, 864,
	1009, 0, 0, 855, 1106, 856, 889, 259, 1104, 1018,
	962, 1046, 945, 977, 987, 258, 244, 952, 951, 1035,
	900, 899, 982, 1031, 1045, 0, 0, 172, 478, 190,
	1144, 314, 0, 498, 476, 423, 339, 501, 500, 943,
	0, 1118, 1131, 928, 986, 875, 973, 1050, 909, 978,
	1051, 0, 0, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1126, 1140, 1107,
	499, 938, 983, 1063, 854, 1123, 0, 859, 1095, 0,
	1036, 896, 897, 263, 0, 0, 0, 0, 0, 0,
	0, 941, 958, 1002, 925, 0, 468, 989, 998, 1013,
	918, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 0, 0, 0, 0, 869, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 0, 0, 0, 874, 852, 894, 1004,
	853, 851, 340, 866, 1133, 1034, 926, 301, 191, 1040,
	924, 1110, 992, 870, 1022, 1056, 912, 311, 868, 195,
	865, 871, 910, 353, 1001, 1007, 177, 198, 313, 1019,
	890, 903, 245, 0, 392, 979, 467, 2367, 278, 0,
	965, 391, 315, 460, 993, 1042, 466, 913, 442, 477,
	482, 271, 946, 234, 420, 261, 254, 895, 1012, 858,
	284, 375, 249, 306, 929, 985, 891, 241, 996, 972,
	1024, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1006, 1026, 886, 872, 878, 873, 902,
	1043, 293, 285, 1027, 1025, 904, 361, 224, 956, 949,
	942, 1129, 471, 1059, 257, 1008, 473, 180, 406, 405,
	916, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	486, 220, 309, 450, 2366, 277, 352, 981, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1005, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 980, 389, 427, 474,
	974, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1003,
	216, 237, 428, 210, 1038, 1021, 967, 931, 937, 860,
	0, 209, 932, 933, 934, 935, 936, 999, 893, 905,
	885, 975, 884, 281, 991, 463, 464, 246, 1096, 1053,
	211, 867, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	968, 955, 953, 861, 1037, 966, 954, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 957, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 879,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 995, 1062, 360, 393, 233, 469,
	421, 262, 1101, 0, 1103, 1099, 1102, 1100, 1119, 1120,
	1141, 1142, 1143, 1130, 1097, 192, 193, 1138, 1139, 194,
	948, 1041, 862, 0, 1017, 188, 189, 174, 179, 988,
	1060, 1109, 242, 164, 1092, 1093, 1094, 165, 1113, 1114,
	167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145, 1147,
	1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127,
	1128, 0, 944, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1121, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1015, 971, 0, 921, 923, 922, 881, 883, 882, 880,
	1064, 346, 1033, 850, 857, 876, 887, 892, 898, 906,
	907, 915, 920, 930, 939, 940, 950, 963, 964, 970,
	994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947,
	969, 1000, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 927, 196, 0, 0, 202,
	0, 203, 205, 914, 201, 1032, 1057, 976, 990, 1829,
	2009, 0, 1971, 448, 1863, 2013, 1812, 1842, 2031, 1848,
	1851, 1932, 1778, 1901, 357, 1839, 1779, 1961, 1762, 1817,
	1766, 1830, 1767, 1814, 259, 1810, 1974, 1904, 2011, 1883,
	1925, 1935, 258, 244, 1893, 1892, 1999, 1828, 1827, 1930,
	1988, 2010, 1882, 0, 172, 478, 190, 2020, 314, 1985,
	498, 476, 423, 339, 501, 500, 1878, 1994, 1899, 1963,
	1861, 1934, 1794, 1917, 2015, 1840, 1926, 2016, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1922, 2007, 1833, 499, 1873, 1931,
	2036, 1765, 1918, 0, 1770, 1781, 2030, 2000, 1824, 1825,
	263, 0, 0, 0, 0, 0, 0, 0, 1876, 1900,
	1952, 1858, 0, 468, 1937, 1947, 1966, 1850, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	1915, 0, 0, 0, 0, 1786, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 1793, 1763, 1821, 1954, 1764, 1761, 340,
	1782, 1968, 1998, 1859, 301, 191, 2004, 1857, 1856, 1941,
	1787, 1978, 2028, 1843, 311, 1785, 195, 1780, 1788, 1841,
	353, 1951, 1959, 177, 198, 313, 1975, 1815, 1832, 245,
	0, 392, 1927, 467, 497, 278, 0, 1908, 391, 315,
	460, 1942, 2006, 466, 1844, 442, 477, 482, 271, 1884,
	234, 420, 261, 254, 1823, 1965, 1769, 284, 375, 249,
	306, 1862, 1933, 1816, 241, 1945, 1916, 1980, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1976,
	1958, 1982, 1809, 1789, 1800, 1790, 1831, 2008, 293, 285,
	1983, 1981, 1834, 361, 224, 1897, 1890, 1877, 1955, 471,
	2032, 257, 1960, 473, 180, 406, 405, 1847, 292, 1962,
	181, 170, 385, 182, 302, 204, 1987, 486, 220, 309,
	450, 496, 277, 352, 1929, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1957, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 2014, 322, 266,
	270, 286, 297, 1928, 389, 427, 474, 1919, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1953, 216, 237, 428,
	210, 2002, 1977, 1910, 1865, 1871, 1771, 0, 209, 1866,
	1867, 1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923, 1807,
	281, 1940, 463, 464, 246, 1783, 2022, 211, 1784, 2021,
	349, 356, 348, 2025, 2023, 459, 2003, 1911, 1896, 1894,
	1776, 2001, 1909, 1895, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1898, 425, 320, 0, 206,
	0, 424, 2012, 2038, 439, 226, 1802, 1969, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1944, 2035, 360, 393, 233, 469, 421, 262, 1798,
	0, 1801, 1796, 1799, 1797, 1902, 1903, 2017, 2018, 2019,
	1956, 1791, 0, 0, 1995, 1996, 0, 1889, 2005, 1777,
	0, 1973, 188, 189, 174, 179, 1936, 2033, 1849, 242,
	0, 1773, 1774, 1775, 0, 1879, 1880, 0, 0, 1991,
	1990, 1989, 1992, 0, 2026, 2024, 2027, 1792, 1813, 1835,
	1885, 1886, 1888, 1920, 1921, 1967, 1939, 1948, 1822, 1881,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1907, 199, 212, 312, 2034, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1970, 1914, 0,
	1853, 1855, 1854, 1804, 1806, 1805, 1803, 2037, 346, 1997,
	1760, 1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846, 1852,
	1864, 1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946, 1964,
	1972, 1979, 1984, 1986, 472, 252, 1887, 1912, 1950, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 1860, 196, 0, 0, 202, 0, 203, 205,
	1845, 201, 1993, 2029, 1924, 1938, 901, 1044, 0, 0,
	448, 1111, 1048, 888, 911, 1058, 917, 919, 984, 863,
	959, 357, 908, 864, 1009, 0, 0, 855, 1106, 856,
	889, 259, 1104, 1018, 962, 1046, 945, 977, 987, 258,
	244, 952, 951, 1035, 900, 899, 982, 1031, 1045, 0,
	0, 172, 478, 190, 1144, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 1118, 1131, 928, 986, 875,
	973, 1050, 909, 978, 1051, 0, 0, 0, 0, 0,
	0, 558, 0, 1452, 0, 0, 1453, 0, 0, 171,
	0, 1126, 1140, 1107, 0, 938, 983, 1063, 854, 1123,
	0, 859, 1095, 0, 1036, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1013, 918, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 0, 869, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	874, 852, 894, 1004, 853, 851, 340, 866, 1133, 1034,
	926, 301, 191, 1040, 924, 1110, 992, 870, 1022, 1056,
	912, 311, 868, 195, 865, 871, 910, 353, 1001, 1007,
	177, 198, 313, 1019, 890, 903, 245, 0, 392, 979,
	467, 1090, 278, 0, 965, 391, 315, 460, 993, 1042,
	466, 913, 442, 477, 482, 271, 946, 234, 420, 261,
	254, 895, 1012, 858, 284, 375, 249, 306, 929, 985,
	891, 241, 996, 972, 1024, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1006, 1026, 886,
	872, 878, 873, 902, 1043, 293, 285, 1027, 1025, 904,
	361, 224, 956, 949, 942, 1129, 471, 1059, 257, 1008,
	473, 180, 406, 405, 916, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 486, 220, 309, 450, 1089, 277,
	352, 981, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1005, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	980, 389, 427, 474, 974, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1003, 216, 237, 428, 210, 1038, 1021,
	967, 931, 937, 860, 0, 209, 932, 933, 934, 935,
	936, 999, 893, 905, 885, 975, 884, 281, 991, 463,
	464, 246, 1096, 1053, 211, 867, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 968, 955, 953, 861, 1037, 966,
	954, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 957, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 879, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 995, 1062,
	360, 393, 233, 469, 421, 262, 1101, 0, 1103, 1099,
	1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192,
	193, 1138, 1139, 194, 948, 1041, 862, 0, 1017, 188,
	189, 174, 179, 988, 1060, 1109, 242, 164, 1092, 1093,
	1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137,
	169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117,
	1124, 1125, 1132, 1127, 1128, 0, 944, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1121, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1015, 971, 0, 921, 923, 922,
	881, 883, 882, 880, 1064, 346, 1033, 850, 857, 876,
	887, 892, 898, 906, 907, 915, 920, 930, 939, 940,
	950, 963, 964, 970, 994, 997, 1011, 1016, 1023, 1028,
	1029, 472, 252, 947, 969, 1000, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 927,
	196, 0, 0, 202, 0, 203, 205, 914, 201, 1032,
	1057, 976, 990, 901, 1044, 0, 0, 448, 1111, 1048,
	888, 911, 1058, 917, 919, 984, 863, 959, 357, 908,
	864, 1009, 0, 0, 855, 1106, 856, 889, 259, 1104,
	1018, 962, 1046, 945, 977, 987, 258, 244, 952, 951,
	1035, 900, 899, 982, 1031, 1045, 0, 0, 172, 478,
	190, 1144, 314, 0, 0, 476, 423, 339, 0, 0,
	943, 0, 1118, 1131, 928, 986, 875, 973, 1050, 909,
	978, 1051, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1126, 1140,
	1107, 0, 938, 983, 1063, 854, 1123, 0, 859, 1095,
	0, 1036, 896, 897, 263, 0, 0, 0, 0, 0,
	0, 0, 941, 958, 1002, 925, 0, 468, 989, 998,
	1013, 918, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1122, 0, 0, 0, 0, 869,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 1133, 1034, 926, 301, 191,
	1040, 924, 1110, 992, 870, 1022, 1056, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 177, 198, 313,
	1019, 890, 903, 245, 0, 392, 979, 467, 1090, 278,
	0, 965, 391, 315, 460, 993, 1042, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1012,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1024, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1006, 1026, 886, 872, 878, 873,
	902, 1043, 293, 285, 1027, 1025, 904, 361, 224, 956,
	949, 942, 1129, 471, 1059, 257, 1008, 473, 180, 406,
	405, 916, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 486, 220, 309, 450, 1089, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1038, 1021, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 463, 464, 246, 1096,
	1053, 211, 867, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 968, 955, 953, 861, 1037, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	879, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1062, 360, 393, 233,
	469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100, 1119,
	1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138, 1139,
	194, 948, 1041, 862, 0, 1017, 188, 189, 174, 179,
	988, 1060, 1109, 242, 164, 1092, 1093, 1094, 165, 1113,
	1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145,
	1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132,
	1127, 1128, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1121, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1015, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1064, 346, 1033, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1032, 1057, 976, 990,
	901, 1044, 0, 0, 448, 1111, 1048, 888, 911, 1058,
	917, 919, 984, 863, 959, 357, 908, 864, 1009, 0,
	0, 855, 1106, 856, 889, 259, 1104, 1018, 962, 1046,
	945, 977, 987, 258, 244, 952, 951, 1035, 900, 899,
	982, 1031, 1045, 0, 0, 172, 478, 190, 1144, 314,
	0, 0, 476, 423, 339, 0, 0, 943, 0, 1118,
	1131, 928, 986, 875, 973, 1050, 909, 978, 1051, 0,
	0, 0, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1126, 1140, 1107, 0, 938,
	983, 1063, 854, 1123, 0, 859, 1095, 0, 1036, 896,
	897, 263, 0, 0, 0, 0, 0, 0, 0, 941,
	958, 1002, 925, 0, 468, 989, 998, 1013, 918, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1122, 0, 0, 0, 0, 869, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 874, 852, 894, 1004, 853, 851,
	340, 866, 1133, 1034, 926, 301, 191, 1040, 924, 1110,
	992, 870, 1022, 1056, 912, 311, 868, 195, 865, 871,
	910, 353, 1001, 1007, 177, 198, 313, 1019, 890, 903,
	245, 0, 392, 979, 467, 1090, 278, 0, 965, 391,
	315, 460, 993, 1042, 466, 913, 442, 477, 482, 271,
	946, 234, 420, 261, 254, 895, 1012, 858, 284, 375,
	249, 306, 929, 985, 891, 241, 996, 972, 1024, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1020, 1006, 1026, 886, 872, 878, 873, 902, 1043, 293,
	285, 1027, 1025, 904, 361, 224, 956, 949, 942, 1129,
	471, 1059, 257, 1008, 473, 180, 406, 405, 916, 292,
	1010, 181, 170, 385, 182, 302, 204, 1030, 486, 220,
	309, 450, 1089, 277, 352, 981, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1005, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1049, 322,
	266, 270, 286, 297, 980, 389, 427, 474, 974, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1003, 216, 237,
	428, 210, 1038, 1021, 967, 931, 937, 860, 0, 209,
	932, 933, 934, 935, 936, 999, 893, 905, 885, 975,
	884, 281, 991, 463, 464, 246, 1096, 1053, 211, 1084,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 968, 955,
	953, 861, 1037, 966, 954, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 1080, 957, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 879, 1014, 454,
	178, 381, 227, 279, 267, 372, 1085, 1083, 1074, 1075,
	308, 316, 995, 1062, 360, 393, 233, 469, 421, 262,
	1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142,
	1143, 1130, 1097, 192, 193, 1138, 1139, 194, 948, 1041,
	862, 0, 1017, 188, 189, 174, 179, 988, 1060, 1109,
	242, 164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168,
	1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105,
	1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0,
	944, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1121, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1015, 971,
	0, 921, 923, 922, 881, 883, 882, 880, 1064, 346,
	1033, 850, 857, 876, 887, 892, 898, 906, 907, 915,
	920, 930, 939, 940, 950, 963, 964, 970, 994, 997,
	1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 1081, 1082, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 927, 196, 0, 0, 202, 0, 203,
	205, 914, 201, 1032, 1057, 976, 990, 901, 1044, 0,
	0, 448, 1111, 1048, 888, 911, 1058, 917, 919, 984,
	863, 959, 357, 908, 864, 1009, 0, 0, 855, 1106,
	856, 889, 259, 1104, 1018, 962, 1046, 945, 977, 987,
	258, 244, 952, 951, 1035, 900, 899, 982, 1031, 1045,
	0, 0, 172, 478, 190, 1144, 314, 0, 0, 476,
	423, 339, 0, 0, 943, 0, 1118, 1131, 928, 986,
	875, 973, 1050, 909, 978, 1051, 0, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1126, 1140, 1107, 0, 938, 983, 1063, 854,
	1123, 0, 859, 1095, 0, 1036, 896, 897, 263, 0,
	0, 0, 0, 0, 0, 0, 941, 958, 1002, 925,
	0, 468, 989, 998, 1013, 918, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1122, 0,
	0, 0, 0, 869, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 874, 852, 894, 1004, 853, 851, 340, 866, 1133,
	1034, 926, 301, 191, 1040, 924, 1110, 992, 870, 1022,
	1056, 912, 311, 868, 195, 865, 871, 910, 353, 1001,
	1007, 177, 198, 313, 1019, 890, 903, 245, 0, 392,
	979, 467, 1090, 278, 0, 965, 391, 315, 460, 993,
	1042, 466, 913, 442, 477, 482, 271, 946, 234, 420,
	261, 254, 895, 1012, 858, 284, 375, 249, 306, 929,
	985, 891, 241, 996, 972, 1024, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1006, 1026,
	886, 872, 878, 873, 902, 1043, 293, 285, 1027, 1025,
	904, 361, 224, 956, 949, 942, 1129, 471, 1059, 257,
	1008, 473, 180, 406, 405, 916, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 486, 220, 309, 450, 1089,
	277, 352, 981, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1005, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 980, 389, 427, 474, 974, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 1619,
	229, 407, 410, 485, 1003, 216, 237, 428, 210, 1038,
	1021, 967, 931, 937, 860, 0, 209, 932, 933, 934,
	935, 936, 999, 893, 905, 885, 975, 884, 281, 991,
	463, 464, 246, 1096, 1053, 211, 867, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 968, 955, 953, 861, 1037,
	966, 954, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 957, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 879, 1014, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 995,
	1062, 360, 393, 233, 469, 421, 262, 1101, 0, 1103,
	1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097,
	192, 193, 1138, 1139, 194, 948, 1041, 862, 0, 1017,
	188, 189, 174, 179, 988, 1060, 1109, 242, 164, 1092,
	1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134,
	1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116,
	1117, 1124, 1125, 1132, 1127, 1128, 0, 944, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1121,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1015, 971, 0, 921, 923,
	922, 881, 883, 882, 880, 1064, 346, 1033, 850, 857,
	876, 887, 892, 898, 906, 907, 915, 920, 930, 939,
	940, 950, 963, 964, 970, 994, 997, 1011, 1016, 1023,
	1028, 1029, 472, 252, 947, 969, 1000, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	927, 196, 0, 0, 202, 0, 203, 205, 914, 201,
	1032, 1057, 976, 990, 901, 1044, 0, 0, 448, 1111,
	1048, 888, 911, 1058, 917, 919, 984, 863, 959, 357,
	908, 864, 1009, 0, 0, 855, 1106, 856, 889, 259,
	1104, 1018, 962, 1046, 945, 977, 987, 258, 244, 952,
	951, 1035, 900, 899, 982, 1031, 1045, 0, 0, 172,
	478, 190, 1144, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 1118, 1131, 928, 986, 875, 973, 1050,
	909, 978, 1051, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1126,
	1140, 1107, 0, 938, 983, 1063, 854, 1123, 0, 859,
	1095, 0, 1036, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1013, 918, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1122, 0, 0, 0, 0,
	869, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 874, 852,
	894, 1004, 853, 851, 340, 866, 1133, 1034, 926, 301,
	191, 1040, 924, 1110, 992, 870, 1022, 1056, 912, 311,
	868, 195, 865, 871, 910, 353, 1001, 1007, 177, 198,
	313, 1019, 890, 903, 245, 0, 392, 979, 467, 1090,
	278, 0, 965, 391, 315, 460, 993, 1042, 466, 913,
	442, 477, 482, 271, 946, 234, 420, 261, 254, 895,
	1012, 858, 284, 375, 249, 306, 929, 985, 891, 241,
	996, 972, 1024, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1006, 1026, 886, 872, 878,
	873, 902, 1043, 293, 285, 1027, 1025, 904, 361, 224,
	956, 949, 942, 1129, 471, 1059, 257, 1008, 473, 180,
	406, 405, 916, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 486, 220, 309, 450, 1089, 277, 352, 981,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1005, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 980, 389,
	427, 474, 974, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 1071, 229, 407, 410,
	485, 1003, 216, 237, 428, 210, 1038, 1021, 967, 931,
	937, 860, 0, 209, 932, 933, 934, 935, 936, 999,
	893, 905, 885, 975, 884, 281, 991, 463, 464, 246,
	1096, 1053, 211, 1084, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 968, 955, 953, 861, 1037, 966, 954, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 1080,
	957, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 879, 1014, 454, 178, 381, 227, 279, 267, 372,
	1085, 1083, 1074, 1075, 308, 316, 995, 1062, 360, 393,
	233, 469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100,
	1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138,
	1139, 194, 948, 1041, 862, 0, 1017, 188, 189, 174,
	179, 988, 1060, 1109, 242, 164, 1092, 1093, 1094, 165,
	1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146,
	1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125,
	1132, 1127, 1128, 0, 944, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1121, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 1015, 971, 0, 921, 923, 922, 881, 883,
	882, 880, 1064, 346, 1033, 850, 857, 876, 887, 892,
	898, 906, 907, 915, 920, 930, 939, 940, 950, 963,
	964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472,
	252, 947, 969, 1000, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	1081, 1082, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 927, 196, 0,
	0, 202, 0, 203, 205, 914, 201, 1032, 1057, 976,
	990, 1829, 2009, 0, 1971, 448, 1863, 2013, 1812, 1842,
	2031, 1848, 1851, 1932, 1778, 1901, 357, 1839, 1779, 1961,
	1762, 1817, 1766, 1830, 1767, 1814, 259, 1810, 1974, 1904,
	2011, 1883, 1925, 1935, 258, 244, 1893, 1892, 1999, 1828,
	1827, 1930, 1988, 2010, 1882, 0, 0, 478, 0, 2020,
	314, 1985, 0, 476, 423, 339, 0, 0, 1878, 1994,
	1899, 1963, 1861, 1934, 1794, 1917, 2015, 1840, 1926, 2016,
	0, 0, 0, 0, 0, 3172, 3177, 0, 3180, 3182,
	3181, 0, 0, 0, 3174, 0, 1922, 2007, 1833, 0,
	1873, 1931, 2036, 1765, 1918, 0, 1770, 1781, 2030, 2000,
	1824, 1825, 263, 0, 0, 0, 0, 0, 0, 0,
	1876, 1900, 1952, 1858, 0, 468, 1937, 1947, 1966, 1850,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 1915, 0, 0, 0, 0, 1786, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 1793, 1763, 1821, 1954, 1764,
	1761, 340, 1782, 1968, 1998, 1859, 301, 0, 2004, 1857,
	1856, 1941, 1787, 1978, 2028, 1843, 311, 1785, 195, 1780,
	1788, 1841, 353, 1951, 1959, 0, 198, 313, 1975, 1815,
	1832, 245, 0, 392, 1927, 467, 0, 278, 0, 1908,
	391, 315, 460, 1942, 2006, 466, 1844, 442, 477, 482,
	271, 1884, 234, 420, 261, 254, 1823, 1965, 1769, 284,
	375, 249, 306, 1862, 1933, 1816, 241, 1945, 1916, 1980,
	419, 457, 200, 334, 458, 481, 3175, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1958, 1982, 1809, 1789, 1800, 1790, 1831, 2008,
	293, 285, 1983, 1981, 1834, 361, 224, 1897, 1890, 1877,
	1955, 471, 2032, 257, 1960, 473, 0, 406, 405, 1847,
	292, 1962, 0, 0, 385, 3176, 302, 204, 1987, 486,
	220, 309, 450, 0, 277, 352, 1929, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 1957, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 2014,
	322, 266, 270, 286, 297, 1928, 389, 427, 474, 1919,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1953, 216,
	237, 428, 210, 2002, 1977, 1910, 1865, 1871, 1771, 0,
	209, 1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836, 1808,
	1923, 1807, 281, 1940, 463, 464, 246, 1783, 2022, 211,
	1784, 2021, 349, 356, 348, 2025, 2023, 459, 2003, 1911,
	1896, 1894, 1776, 2001, 1909, 1895, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1898, 425, 320,
	0, 206, 0, 424, 2012, 2038, 439, 226, 1802, 1969,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1944, 2035, 360, 393, 233, 469, 421,
	262, 1798, 0, 1801, 1796, 1799, 1797, 1902, 1903, 2017,
	2018, 2019, 1956, 1791, 0, 0, 1995, 1996, 0, 1889,
	2005, 1777, 0, 1973, 0, 0, 0, 0, 1936, 2033,
	1849, 242, 0, 1773, 1774, 1775, 0, 1879, 1880, 0,
	0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1792,
	1813, 1835, 1885, 1886, 1888, 1920, 1921, 1967, 1939, 1948,
	1822, 1881, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1907, 199, 212, 312, 2034, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1970,
	1914, 0, 1853, 1855, 1854, 1804, 1806, 1805, 1803, 2037,
	346, 1997, 1760, 1768, 1795, 1811, 1818, 1826, 1837, 1838,
	1846, 1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913, 1943,
	1946, 1964, 1972, 1979, 1984, 1986, 472, 252, 1887, 1912,
	1950, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 1860, 196, 0, 0, 202, 0,
	203, 205, 1845, 201, 1993, 2029, 1924, 1938, 1829, 2009,
	0, 1971, 448, 1863, 2013, 1812, 1842, 2031, 1848, 1851,
	1932, 1778, 1901, 357, 1839, 1779, 1961, 1762, 1817, 1766,
	1830, 1767, 1814, 259, 1810, 1974, 1904, 2011, 1883, 1925,
	1935, 258, 244, 1893, 1892, 1999, 1828, 1827, 1930, 1988,
	2010, 1882, 0, 0, 478, 0, 2020, 314, 1985, 0,
	476, 423, 339, 0, 0, 1878, 1994, 1899, 1963, 1861,
	1934, 1794, 1917, 2015, 1840, 1926, 2016, 0, 0, 0,
	0, 0, 3983, 3177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1922, 2007, 1833, 0, 1873, 1931, 2036,
	1765, 1918, 0, 1770, 1781, 2030, 2000, 1824, 1825, 263,
	0, 0, 0, 0, 0, 0, 0, 1876, 1900, 1952,
	1858, 0, 468, 1937, 1947, 1966, 1850, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 1915,
	0, 0, 0, 0, 1786, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 1793, 1763, 1821, 1954, 1764, 1761, 340, 1782,
	1968, 1998, 1859, 301, 0, 2004, 1857, 1856, 1941, 1787,
	1978, 2028, 1843, 311, 1785, 195, 1780, 1788, 1841, 353,
	1951, 1959, 0, 198, 313, 1975, 1815, 1832, 245, 0,
	392, 1927, 467, 0, 278, 0, 1908, 391, 315, 460,
	1942, 2006, 466, 1844, 442, 477, 482, 271, 1884, 234,
	420, 261, 254, 1823, 1965, 1769, 284, 375, 249, 306,
	1862, 1933, 1816, 241, 1945, 1916, 1980, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1976, 1958,
	1982, 1809, 1789, 1800, 1790, 1831, 2008, 293, 285, 1983,
	1981, 1834, 361, 224, 1897, 1890, 1877, 1955, 471, 2032,
	257, 1960, 473, 0, 406, 405, 1847, 292, 1962, 0,
	0, 385, 0, 302, 204, 1987, 486, 220, 309, 450,
	0, 277, 352, 1929, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1957, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 2014, 322, 266, 270,
	286, 297, 1928, 389, 427, 474, 1919, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1953, 216, 237, 428, 210,
	2002, 1977, 1910, 1865, 1871, 1771, 0, 209, 1866, 1867,
	1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923, 1807, 281,
	1940, 463, 464, 246, 1783, 2022, 211, 1784, 2021, 349,
	356, 348, 2025, 2023, 459, 2003, 1911, 1896, 1894, 1776,
	2001, 1909, 1895, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1898, 425, 320, 0, 206, 0,
	424, 2012, 2038, 439, 226, 1802, 1969, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1944, 2035, 360, 393, 233, 469, 421, 262, 1798, 0,
	1801, 1796, 1799, 1797, 1902, 1903, 2017, 2018, 2019, 1956,
	1791, 0, 0, 1995, 1996, 0, 1889, 2005, 1777, 0,
	1973, 0, 0, 0, 0, 1936, 2033, 1849, 242, 0,
	1773, 1774, 1775, 0, 1879, 1880, 0, 0, 1991, 1990,
	1989, 1992, 0, 2026, 2024, 2027, 1792, 1813, 1835, 1885,
	1886, 1888, 1920, 1921, 1967, 1939, 1948, 1822, 1881, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1907, 199, 212, 312, 2034, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1970, 1914, 0, 1853,
	1855, 1854, 1804, 1806, 1805, 1803, 2037, 346, 1997, 1760,
	1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864,
	1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946, 1964, 1972,
	1979, 1984, 1986, 472, 252, 1887, 1912, 1950, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1860, 196, 0, 0, 202, 0, 203, 205, 1845,
	201, 1993, 2029, 1924, 1938, 1829, 2009, 0, 1971, 448,
	1863, 2013, 1812, 1842, 2031, 1848, 1851, 1932, 1778, 1901,
	357, 1839, 1779, 1961, 1762, 1817, 1766, 1830, 1767, 1814,
	259, 1810, 1974, 1904, 2011, 1883, 1925, 1935, 258, 244,
	1893, 1892, 1999, 1828, 1827, 1930, 1988, 2010, 1882, 0,
	0, 478, 0, 2020, 314, 1985, 0, 476, 423, 339,
	0, 0, 1878, 1994, 1899, 1963, 1861, 1934, 1794, 1917,
	2015, 1840, 1926, 2016, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1922, 2007, 1833, 0, 1873, 1931, 2036, 1765, 1918, 0,
	1770, 1781, 2030, 2000, 1824, 1825, 263, 0, 0, 0,
	0, 0, 0, 0, 1876, 1900, 1952, 1858, 0, 468,
	1937, 1947, 1966, 1850, 376, 283, 0, 0, 0, 0,
	0, 0, 3932, 0, 1819, 0, 1915, 0, 0, 0,
	0, 1786, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 1793,
	1763, 1821, 1954, 1764, 1761, 340, 1782, 1968, 1998, 1859,
	301, 0, 2004, 1857, 1856, 1941, 1787, 1978, 2028, 1843,
	311, 1785, 195, 1780, 1788, 1841, 353, 1951, 1959, 0,
	198, 313, 1975, 1815, 1832, 245, 0, 392, 1927, 467,
	0, 278, 0, 1908, 391, 315, 460, 1942, 2006, 466,
	1844, 442, 477, 482, 271, 1884, 234, 420, 261, 254,
	1823, 1965, 1769, 284, 375, 249, 306, 1862, 1933, 1816,
	241, 1945, 1916, 1980, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1976, 1958, 1982, 1809, 1789,
	1800, 1790, 1831, 2008, 293, 285, 1983, 1981, 1834, 361,
	224, 1897, 1890, 1877, 1955, 471, 2032, 257, 1960, 473,
	0, 406, 405, 1847, 292, 1962, 0, 0, 385, 0,
	302, 204, 1987, 486, 220, 309, 450, 0, 277, 352,
	1929, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1957, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2014, 322, 266, 270, 286, 297, 1928,
	389, 427, 474, 1919, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1953, 216, 237, 428, 210, 2002, 1977, 1910,
	1865, 1871, 1771, 0, 209, 1866, 1867, 1868, 1869, 1870,
	1949, 1820, 1836, 1808, 1923, 1807, 281, 1940, 463, 464,
	246, 1783, 2022, 211, 1784, 2021, 349, 356, 348, 2025,
	2023, 459, 2003, 1911, 1896, 1894, 1776, 2001, 1909, 1895,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1898, 425, 320, 0, 206, 0, 424, 2012, 2038,
	439, 226, 1802, 1969, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1944, 2035, 360,
	393, 233, 469, 421, 262, 1798, 0, 1801, 1796, 1799,
	1797, 1902, 1903, 2017, 2018, 2019, 1956, 1791, 0, 0,
	1995, 1996, 0, 1889, 2005, 1777, 0, 1973, 0, 0,
	0, 0, 1936, 2033, 1849, 242, 0, 1773, 1774, 1775,
	0, 1879, 1880, 0, 0, 1991, 1990, 1989, 1992, 0,
	2026, 2024, 2027, 1792, 1813, 1835, 1885, 1886, 1888, 1920,
	1921, 1967, 1939, 1948, 1822, 1881, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1907, 199, 212,
	312, 2034, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1970, 1914, 0, 1853, 1855, 1854, 1804,
	1806, 1805, 1803, 2037, 346, 1997, 1760, 1768, 1795, 1811,
	1818, 1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875, 1891,
	1905, 1906, 1913, 1943, 1946, 1964, 1972, 1979, 1984, 1986,
	472, 252, 1887, 1912, 1950, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1860, 196,
	0, 0, 202, 0, 203, 205, 1845, 201, 1993, 2029,
	1924, 1938, 1829, 2009, 0, 1971, 448, 1863, 2013, 1812,
	1842, 2031, 1848, 1851, 1932, 1778, 1901, 357, 1839, 1779,
	1961, 1762, 1817, 1766, 1830, 1767, 1814, 259, 1810, 1974,
	1904, 2011, 1883, 1925, 1935, 258, 244, 1893, 1892, 1999,
	1828, 1827, 1930, 1988, 2010, 1882, 0, 0, 478, 0,
	2020, 314, 1985, 0, 476, 423, 339, 0, 0, 1878,
	1994, 1899, 1963, 1861, 1934, 1794, 1917, 2015, 1840, 1926,
	2016, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1922, 2007, 1833,
	0, 1873, 1931, 2036, 1765, 1918, 0, 1770, 1781, 2030,
	2000, 1824, 1825, 263, 0, 0, 0, 0, 0, 0,
	0, 1876, 1900, 1952, 1858, 0, 468, 1937, 1947, 1966,
	1850, 376, 283, 0, 0, 0, 0, 0, 0, 3227,
	0, 1819, 0, 1915, 0, 0, 0, 0, 1786, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 1793, 1763, 1821, 1954,
	1764, 1761, 340, 1782, 1968, 1998, 1859, 301, 0, 2004,
	1857, 1856, 1941, 1787, 1978, 2028, 1843, 311, 1785, 195,
	1780, 1788, 1841, 353, 1951, 1959, 0, 198, 313, 1975,
	1815, 1832, 245, 0, 392, 1927, 467, 0, 278, 0,
	1908, 391, 315, 460, 1942, 2006, 466, 1844, 442, 477,
	482, 271, 1884, 234, 420, 261, 254, 1823, 1965, 1769,
	284, 375, 249, 306, 1862, 1933, 1816, 241, 1945, 1916,
	1980, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1976, 1958, 1982, 1809, 1789, 1800, 1790, 1831,
	2008, 293, 285, 1983, 1981, 1834, 361, 224, 1897, 1890,
	1877, 1955, 471, 2032, 257, 1960, 473, 0, 406, 405,
	1847, 292, 1962, 0, 0, 385, 0, 302, 204, 1987,
	486, 220, 309, 450, 0, 277, 352, 1929, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 1957, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	2014, 322, 266, 270, 286, 297, 1928, 389, 427, 474,
	1919, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 1953,
	216, 237, 428, 210, 2002, 1977, 1910, 1865, 1871, 1771,
	0, 209, 1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836,
	1808, 1923, 1807, 281, 1940, 463, 464, 246, 1783, 2022,
	211, 1784, 2021, 349, 356, 348, 2025, 2023, 459, 2003,
	1911, 1896, 1894, 1776, 2001, 1909, 1895, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1898, 425,
	320, 0, 206, 0, 424, 2012, 2038, 439, 226, 1802,
	1969, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1944, 2035, 360, 393, 233, 469,
	421, 262, 1798, 0, 1801, 1796, 1799, 1797, 1902, 1903,
	2017, 2018, 2019, 1956, 1791, 0, 0, 1995, 1996, 0,
	1889, 2005, 1777, 0, 1973, 0, 0, 0, 0, 1936,
	2033, 1849, 242, 0, 1773, 1774, 1775, 0, 1879, 1880,
	0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027,
	1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921, 1967, 1939,
	1948, 1822, 1881, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1907, 199, 212, 312, 2034, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	1970, 1914, 0, 1853, 1855, 1854, 1804, 1806, 1805, 1803,
	2037, 346, 1997, 1760, 1768, 1795, 1811, 1818, 1826, 1837,
	1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913,
	1943, 1946, 1964, 1972, 1979, 1984, 1986, 472, 252, 1887,
	1912, 1950, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 1860, 196, 0, 0, 202,
	0, 203, 205, 1845, 201, 1993, 2029, 1924, 1938, 1829,
	2009, 0, 1971, 448, 1863, 2013, 1812, 1842, 2031, 1848,
	1851, 1932, 1778, 1901, 357, 1839, 1779, 1961, 1762, 1817,
	1766, 1830, 1767, 1814, 259, 1810, 1974, 1904, 2011, 1883,
	1925, 1935, 258, 244, 1893, 1892, 1999, 1828, 1827, 1930,
	1988, 2010, 1882, 0, 0, 478, 0, 2020, 314, 1985,
	0, 476, 423, 339, 0, 0, 1878, 1994, 1899, 1963,
	1861, 1934, 1794, 1917, 2015, 1840, 1926, 2016, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1922, 2007, 1833, 0, 1873, 1931,
	2036, 1765, 1918, 0, 1770, 1781, 2030, 2000, 1824, 1825,
	263, 0, 0, 0, 0, 0, 0, 0, 1876, 1900,
	1952, 1858, 0, 468, 1937, 1947, 1966, 1850, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	1915, 0, 0, 0, 0, 1786, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 1793, 1763, 1821, 1954, 1764, 1761, 340,
	1782, 1968, 1998, 1859, 301, 0, 2004, 1857, 1856, 1941,
	1787, 1978, 2028, 1843, 311, 1785, 195, 1780, 1788, 1841,
	353, 1951, 1959, 0, 198, 313, 1975, 1815, 1832, 245,
	0, 392, 1927, 467, 0, 278, 0, 1908, 391, 315,
	460, 1942, 2006, 466, 1844, 442, 477, 482, 271, 1884,
	234, 420, 261, 254, 1823, 1965, 1769, 284, 375, 249,
	306, 1862, 1933, 1816, 241, 1945, 1916, 1980, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1976,
	1958, 1982, 1809, 1789, 1800, 1790, 1831, 2008, 293, 285,
	1983, 1981, 1834, 361, 224, 1897, 1890, 1877, 1955, 471,
	2032, 257, 1960, 473, 0, 406, 405, 1847, 292, 1962,
	0, 0, 385, 0, 302, 204, 1987, 486, 220, 309,
	450, 0, 277, 352, 1929, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 1957, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 2014, 322, 266,
	270, 286, 297, 1928, 389, 427, 474, 1919, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1953, 216, 237, 428,
	210, 2002, 1977, 1910, 1865, 1871, 1771, 0, 209, 1866,
	1867, 1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923, 1807,
	281, 1940, 463, 464, 246, 1783, 2022, 211, 1784, 2021,
	349, 356, 348, 2025, 2023, 459, 2003, 1911, 1896, 1894,
	1776, 2001, 1909, 1895, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1898, 425, 320, 0, 206,
	0, 424, 2012, 2038, 439, 226, 1802, 1969, 454, 2328,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1944, 2035, 360, 393, 233, 469, 421, 262, 1798,
	0, 1801, 1796, 1799, 1797, 1902, 1903, 2017, 2018, 2019,
	1956, 1791, 0, 0, 1995, 1996, 0, 1889, 2005, 1777,
	0, 1973, 0, 0, 0, 0, 1936, 2033, 1849, 242,
	0, 1773, 1774, 1775, 0, 1879, 1880, 0, 0, 1991,
	1990, 1989, 1992, 0, 2026, 2024, 2027, 1792, 1813, 1835,
	1885, 1886, 1888, 1920, 1921, 1967, 1939, 1948, 1822, 1881,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1907, 199, 212, 312, 2034, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1970, 1914, 0,
	1853, 1855, 1854, 1804, 1806, 1805, 1803, 2037, 346, 1997,
	1760, 1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846, 1852,
	1864, 1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946, 1964,
	1972, 1979, 1984, 1986, 472, 252, 1887, 1912, 1950, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 1860, 196, 0, 0, 202, 0, 203, 205,
	1845, 201, 1993, 2029, 1924, 1938, 1829, 2009, 0, 1971,
	448, 1863, 2013, 1812, 1842, 2031, 1848, 1851, 1932, 1778,
	1901, 357, 1839, 1779, 1961, 1762, 1817, 1766, 1830, 1767,
	1814, 259, 1810, 1974, 1904, 2011, 1883, 1925, 1935, 258,
	244, 1893, 1892, 1999, 1828, 1827, 1930, 1988, 2010, 1882,
	0, 0, 478, 0, 2020, 314, 1985, 0, 476, 423,
	339, 0, 0, 1878, 1994, 1899, 1963, 1861, 1934, 1794,
	1917, 2015, 1840, 1926, 2016, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1922, 2007, 1833, 0, 1873, 1931, 2036, 1765, 1918,
	0, 1770, 1781, 2030, 2000, 1824, 1825, 263, 0, 0,
	0, 0, 0, 0, 0, 1876, 1900, 1952, 1858, 0,
	468, 1937, 1947, 1966, 1850, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 1915, 0, 0,
	0, 0, 1786, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	1793, 1763, 1821, 1954, 1764, 1761, 340, 1782, 1968, 1998,
	1859, 301, 0, 2004, 1857, 1856, 1941, 1787, 1978, 2028,
	1843, 311, 1785, 195, 1780, 1788, 1841, 353, 1951, 1959,
	0, 198, 313, 1975, 1815, 1832, 245, 0, 392, 1927,
	467, 0, 278, 0, 1908, 391, 315, 460, 1942, 2006,
	466, 1844, 442, 477, 482, 271, 1884, 234, 420, 261,
	254, 1823, 1965, 1769, 284, 375, 249, 306, 1862, 1933,
	1816, 241, 1945, 1916, 1980, 419, 457, 200, 334, 458,
	481, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1976, 1958, 1982, 1809,
	1789, 1800, 1790, 1831, 2008, 293, 285, 1983, 1981, 1834,
	361, 224, 1897, 1890, 1877, 1955, 471, 2032, 257, 1960,
	473, 0, 406, 405, 1847, 292, 1962, 0, 0, 385,
	0, 302, 204, 1987, 486, 220, 309, 450, 0, 277,
	352, 1929, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1957, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 2014, 322, 266, 270, 286, 297,
	1928, 389, 427, 474, 1919, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 1953, 216, 237, 428, 210, 2002, 1977,
	1910, 1865, 1871, 1771, 0, 209, 1866, 1867, 1868, 1869,
	1870, 1949, 1820, 1836, 1808, 1923, 1807, 281, 1940, 463,
	464, 246, 1783, 2022, 211, 1784, 2021, 349, 356, 348,
	2025, 2023, 459, 2003, 1911, 1896, 1894, 1776, 2001, 1909,
	1895, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1898, 425, 320, 0, 206, 0, 424, 2012,
	2038, 439, 226, 1802, 1969, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1944, 2035,
	360, 393, 233, 469, 421, 262, 1798, 0, 1801, 1796,
	1799, 1797, 1902, 1903, 2017, 2018, 2019, 1956, 1791, 0,
	0, 1995, 1996, 0, 1889, 2005, 1777, 0, 1973, 0,
	0, 0, 0, 1936, 2033, 1849, 242, 0, 1773, 1774,
	1775, 0, 1879, 1880, 0, 0, 1991, 1990, 1989, 1992,
	0, 2026, 2024, 2027, 1792, 1813, 1835, 1885, 1886, 1888,
	1920, 1921, 1967, 1939, 1948, 1822, 1881, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1907, 199,
	212, 312, 2034, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 1970, 1914, 0, 1853, 1855, 1854,
	1804, 1806, 1805, 1803, 2037, 346, 1997, 1760, 1768, 1795,
	1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864, 1874, 1875,
	1891, 1905, 1906, 1913, 1943, 1946, 1964, 1972, 1979, 1984,
	1986, 472, 252, 1887, 1912, 1950, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 4106, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 1860,
	196, 0, 0, 202, 0, 203, 205, 1845, 201, 1993,
	2029, 1924, 1938, 1829, 2009, 0, 1971, 448, 1863, 2013,
	1812, 1842, 2031, 1848, 1851, 1932, 1778, 1901, 357, 1839,
	1779, 1961, 1762, 1817, 1766, 1830, 1767, 1814, 259, 1810,
	1974, 1904, 2011, 1883, 1925, 1935, 258, 244, 1893, 1892,
	1999, 1828, 1827, 1930, 1988, 2010, 1882, 0, 0, 478,
	0, 2020, 314, 1985, 0, 476, 423, 339, 0, 0,
	1878, 1994, 1899, 1963, 1861, 1934, 1794, 1917, 2015, 1840,
	1926, 2016, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1922, 2007,
	1833, 0, 1873, 1931, 2036, 1765, 1918, 0, 1770, 1781,
	2030, 2000, 1824, 1825, 263, 0, 0, 0, 0, 0,
	0, 0, 1876, 1900, 1952, 1858, 0, 468, 1937, 1947,
	1966, 1850, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 1915, 0, 0, 0, 0, 1786,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 1793, 1763, 1821,
	1954, 1764, 1761, 340, 1782, 1968, 1998, 1859, 301, 0,
	2004, 1857, 1856, 1941, 1787, 1978, 2028, 1843, 311, 1785,
	195, 1780, 1788, 1841, 353, 1951, 1959, 0, 198, 313,
	1975, 1815, 1832, 245, 0, 392, 1927, 467, 0, 278,
	0, 1908, 391, 315, 460, 1942, 2006, 466, 1844, 442,
	477, 482, 271, 1884, 234, 420, 261, 254, 1823, 1965,
	1769, 284, 375, 249, 306, 1862, 1933, 1816, 241, 1945,
	1916, 1980, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1976, 1958, 1982, 1809, 1789, 1800, 1790,
	1831, 2008, 293, 285, 1983, 1981, 1834, 361, 224, 1897,
	1890, 1877, 1955, 471, 2032, 257, 1960, 473, 0, 406,
	405, 1847, 292, 1962, 0, 0, 385, 0, 302, 204,
	1987, 486, 220, 309, 450, 0, 277, 352, 1929, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1957,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2014, 322, 266, 270, 286, 297, 1928, 389, 427,
	474, 1919, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1953, 216, 237, 428, 210, 2002, 1977, 1910, 1865, 1871,
	1771, 0, 209, 1866, 1867, 1868, 1869, 1870, 1949, 1820,
	1836, 1808, 1923, 1807, 281, 1940, 463, 464, 246, 1783,
	2022, 211, 1784, 2021, 349, 356, 348, 2025, 2023, 459,
	2003, 1911, 1896, 1894, 1776, 2001, 1909, 1895, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1898,
	425, 320, 0, 206, 0, 424, 2012, 2038, 439, 226,
	1802, 1969, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1944, 2035, 360, 393, 233,
	469, 421, 262, 1798, 0, 1801, 1796, 1799, 1797, 1902,
	1903, 2017, 2018, 2019, 1956, 1791, 0, 0, 1995, 1996,
	0, 1889, 2005, 1777, 0, 1973, 0, 0, 0, 0,
	1936, 2033, 1849, 242, 0, 1773, 1774, 1775, 0, 1879,
	1880, 0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024,
	2027, 1792, 1813, 1835, 1885, 1886, 1888, 1920, 1921, 1967,
	1939, 1948, 1822, 1881, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1907, 199, 212, 312, 2034,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1970, 1914, 0, 1853, 1855, 1854, 1804, 1806, 1805,
	1803, 2037, 346, 1997, 1760, 1768, 1795, 1811, 1818, 1826,
	1837, 1838, 1846, 1852, 1864, 1874, 1875, 1891, 1905, 1906,
	1913, 1943, 1946, 1964, 1972, 1979, 1984, 1986, 472, 252,
	1887, 1912, 1950, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1860, 196, 0, 0,
	202, 0, 203, 205, 1845, 201, 1993, 2029, 1924, 1938,
	1829, 2009, 0, 1971, 448, 1863, 2013, 1812, 1842, 2031,
	1848, 1851, 1932, 1778, 1901, 357, 1839, 1779, 1961, 1762,
	1817, 1766, 1830, 1767, 1814, 259, 1810, 1974, 1904, 2011,
	1883, 1925, 1935, 258, 244, 1893, 1892, 1999, 1828, 1827,
	1930, 1988, 2010, 1882, 0, 0, 478, 0, 2020, 314,
	1985, 0, 476, 423, 339, 0, 0, 1878, 1994, 1899,
	1963, 1861, 1934, 1794, 1917, 2015, 1840, 1926, 2016, 0,
	0, 0, 0, 0, 0, 4392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1922, 2007, 1833, 0, 1873,
	1931, 2036, 1765, 1918, 0, 1770, 1781, 2030, 2000, 1824,
	1825, 263, 0, 0, 0, 0, 0, 0, 0, 1876,
	1900, 1952, 1858, 0, 468, 1937, 1947, 1966, 1850, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 1915, 0, 0, 0, 0, 1786, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 1793, 1763, 1821, 1954, 1764, 1761,
	340, 1782, 1968, 1998, 1859, 301, 0, 2004, 1857, 1856,
	1941, 1787, 1978, 2028, 1843, 311, 1785, 195, 1780, 1788,
	1841, 353, 1951, 1959, 0, 198, 313, 1975, 1815, 1832,
	245, 0, 392, 1927, 467, 0, 278, 0, 1908, 391,
	315, 460, 1942, 2006, 466, 1844, 442, 477, 482, 271,
	1884, 234, 420, 261, 254, 1823, 1965, 1769, 284, 375,
	249, 306, 1862, 1933, 1816, 241, 1945, 1916, 1980, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1976, 1958, 1982, 1809, 1789, 1800, 4395, 4396, 4397, 293,
	285, 1983, 1981, 1834, 361, 224, 1897, 1890, 1877, 1955,
	471, 2032, 257, 1960, 473, 0, 406, 405, 1847, 292,
	1962, 0, 0, 385, 0, 302, 204, 1987, 486, 220,
	309, 450, 0, 277, 352, 1929, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1957, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2014, 322,
	266, 270, 286, 297, 1928, 389, 427, 474, 1919, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 1953, 216, 237,
	428, 210, 2002, 1977, 1910, 1865, 1871, 1771, 0, 209,
	1866, 1867, 1868, 1869, 1870, 1949, 1820, 1836, 1808, 1923,
	1807, 281, 1940, 463, 464, 246, 1783, 2022, 211, 1784,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1911, 1896,
	1894, 1776, 2001, 1909, 1895, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1898, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1802, 1969, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1944, 2035, 360, 393, 233, 469, 421, 262,
	1798, 0, 1801, 1796, 1799, 1797, 1902, 1903, 2017, 2018,
	2019, 1956, 1791, 0, 0, 1995, 1996, 0, 1889, 2005,
	1777, 0, 1973, 0, 0, 0, 0, 1936, 2033, 1849,
	242, 0, 1773, 1774, 1775, 0, 1879, 1880, 0, 0,
	1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1792, 1813,
	1835, 1885, 1886, 1888, 1920, 1921, 1967, 1939, 1948, 1822,
	1881, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1907, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 1970, 1914,
	0, 1853, 1855, 1854, 1804, 1806, 1805, 1803, 2037, 346,
	1997, 1760, 1768, 1795, 1811, 1818, 1826, 1837, 1838, 1846,
	1852, 1864, 1874, 1875, 1891, 1905, 1906, 1913, 1943, 1946,
	1964, 1972, 1979, 1984, 1986, 472, 252, 1887, 1912, 1950,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 1860, 196, 0, 0, 202, 0, 203,
	205, 1845, 201, 1993, 2029, 1924, 1938, 1829, 2009, 0,
	1971, 448, 1863, 2013, 1812, 1842, 2031, 1848, 1851, 1932,
	1778, 1901, 357, 1839, 1779, 1961, 1762, 1817, 1766, 1830,
	1767, 1814, 259, 1810, 1974, 1904, 2011, 1883, 1925, 1935,
	258, 244, 1893, 1892, 1999, 1828, 1827, 1930, 1988, 2010,
	1882, 0, 0, 478, 0, 2020, 314, 1985, 0, 476,
	423, 339, 0, 0, 1878, 1994, 1899, 1963, 1861, 1934,
	1794, 1917, 2015, 1840, 1926, 2016, 0, 0, 0, 0,
	0, 0, 3177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1922, 2007, 1833, 0, 1873, 1931, 2036, 1765,
	1918, 0, 1770, 1781, 2030, 2000, 1824, 1825, 263, 0,
	0, 0, 0, 0, 0, 0, 1876, 1900, 1952, 1858,
	0, 468, 1937, 1947, 1966, 1850, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 1915, 0,
	0, 0, 0, 1786, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 1793, 1763, 1821, 1954, 1764, 1761, 340, 1782, 1968,
	1998, 1859, 301, 0, 2004, 1857, 1856, 1941, 1787, 1978,
	2028, 1843, 311, 1785, 195, 1780, 1788, 1841, 353, 1951,
	1959, 0, 198, 313, 1975, 1815, 1832, 245, 0, 392,
	1927, 467, 0, 278, 0, 1908, 391, 315, 460, 1942,
	2006, 466, 1844, 442, 477, 482, 271, 1884, 234, 420,
	261, 254, 1823, 1965, 1769, 284, 375, 249, 306, 1862,
	1933, 1816, 241, 1945, 1916, 1980, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1976, 1958, 1982,
	1809, 1789, 1800, 1790, 1831, 2008, 293, 285, 1983, 1981,
	1834, 361, 224, 1897, 1890, 1877, 1955, 471, 2032, 257,
	1960, 473, 0, 406, 405, 1847, 292, 1962, 0, 0,
	385, 0, 302, 204, 1987, 486, 220, 309, 450, 0,
	277, 352, 1929, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 1957, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 2014, 322, 266, 270, 286,
	297, 1928, 389, 427, 474, 1919, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 1953, 216, 237, 428, 210, 2002,
	1977, 1910, 1865, 1871, 1771, 0, 209, 1866, 1867, 1868,
	1869, 1870, 1949, 1820, 1836, 1808, 1923, 1807, 281, 1940,
	463, 464, 246, 1783, 2022, 211, 1784, 2021, 349, 356,
	348, 2025, 2023, 459, 2003, 1911, 1896, 1894, 1776, 2001,
	1909, 1895, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1898, 425, 320, 0, 206, 0, 424,
	2012, 2038, 439, 226, 1802, 1969, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1944,
	2035, 360, 393, 233, 469, 421, 262, 1798, 0, 1801,
	1796, 1799, 1797, 1902, 1903, 2017, 2018, 2019, 1956, 1791,
	0, 0, 1995, 1996, 0, 1889, 2005, 1777, 0, 1973,
	0, 0, 0, 0, 1936, 2033, 1849, 242, 0, 1773,
	1774, 1775, 0, 1879, 1880, 0, 0, 1991, 1990, 1989,
	1992, 0, 2026, 2024, 2027, 1792, 1813, 1835, 1885, 1886,
	1888, 1920, 1921, 1967, 1939, 1948, 1822, 1881, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1907,
	199, 212, 312, 2034, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1970, 1914, 0, 1853, 1855,
	1854, 1804, 1806, 1805, 1803, 2037, 346, 1997, 1760, 1768,
	1795, 1811, 1818, 1826, 1837, 1838, 1846, 1852, 1864, 1874,
	1875, 1891, 1905, 1906, 1913, 1943, 1946, 1964, 1972, 1979,
	1984, 1986, 472, 252, 1887, 1912, 1950, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	1860, 196, 0, 0, 202, 0, 203, 205, 1845, 201,
	1993, 2029, 1924, 1938, 589, 448, 583, 594, 576, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 259, 0, 0, 584,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 637, 638, 0, 731, 0,
	732, 734, 735, 736, 737, 0, 0, 0, 733, 2320,
	3395, 3396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	3390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 0, 575, 574, 577, 0, 0,
	0, 340, 0, 0, 0, 582, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 586, 0, 0, 198, 313, 590, 0,
	0, 245, 0, 392, 2317, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 593, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 578, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 581,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 1349, 408,
	455, 222, 426, 579, 580, 587, 588, 591, 592, 595,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 2318, 2319, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 3407, 1066, 0, 3397, 3398, 3400,
	3408, 3409, 3399, 3401, 3402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3403, 3404, 3405,
	3406, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	585, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 0, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 589, 448, 583, 594, 576, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	568, 0, 0, 0, 0, 0, 259, 0, 0, 584,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 574, 577, 0, 0,
	0, 340, 0, 0, 0, 582, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 586, 0, 0, 198, 313, 590, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 593, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 578, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 581,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 571, 408,
	455, 222, 426, 579, 580, 587, 588, 591, 592, 595,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	585, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 2470, 2474, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 2473, 301, 191, 0, 0, 0,
	2466, 0, 2467, 2469, 2468, 311, 1165, 195, 0, 2464,
	2472, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 1159, 392, 0, 467, 497, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 496, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	1476, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 478, 190, 0, 314, 0,
	498, 476, 423, 339, 501, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1478, 1477, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 499, 0, 1472,
	1473, 1471, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 1474, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 1165, 195, 0, 1161, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 1159,
	392, 0, 467, 497, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 486, 220, 309, 450,
	496, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 0, 314, 0, 498, 476,
	423, 339, 501, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 3557, 195, 0, 0, 3556, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3524, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 1165, 195, 0, 0, 2472, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 497, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 496, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 498, 476, 423, 339,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2925, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 1165, 195, 0, 0, 2472, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1478, 1477,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 2273, 392, 0, 467, 497,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 496, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 0, 196, 42,
	448, 202, 0, 203, 205, 0, 201, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 88, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 96,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 109, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 673, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 498, 476, 423, 339,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3515, 0, 0, 0, 0, 0,
	3517, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2046, 2044,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 497,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 496, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 478,
	190, 0, 314, 0, 498, 476, 423, 339, 501, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2042, 2044, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 1165, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 497, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 496, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 478, 190, 0,
	314, 0, 498, 476, 423, 339, 501, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3368, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 497, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 496, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 478, 190, 0, 314, 0,
	498, 476, 423, 339, 501, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3517, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2044, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 497, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 486, 220, 309, 450,
	496, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 0, 314, 0, 498, 476,
	423, 339, 501, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1212, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1201, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 497, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 496, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 498, 476, 423, 339,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3224, 680, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 673, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 478,
	190, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	673, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 548, 545, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 161, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 478, 190, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 2545, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 2430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 478, 190, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 2169, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 0, 196, 0, 0, 202, 0, 203, 205,
	448, 201, 0, 0, 1608, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 155, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1501, 1490, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	486, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 1163, 732, 734, 735,
	736, 737, 0, 0, 0, 733, 2320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 728, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 729, 730, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 4493,
	0, 0, 0, 0, 0, 259, 4491, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 0, 406, 405, 0, 292,
	0, 4492, 0, 385, 0, 302, 204, 0, 486, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2997, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 2998, 2999, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 1625, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 486, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	2474, 0, 0, 478, 0, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 2473, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 486, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 3571, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 3569, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 3567, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	486, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	3565, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 3560,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 486, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 3547, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 3545, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 486, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 3474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3465, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 486, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 2595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 2753, 2752, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	486, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 486, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 486, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 42, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 71,
	0, 0, 0, 4300, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4293, 0, 0, 0, 0, 4672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4293, 0,
	0, 0, 0, 4654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 89, 0, 71,
	0, 0, 0, 4300, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4296, 0, 0, 4293, 0, 0, 0, 0, 0,
	0, 4305, 4297, 4298, 4299, 4303, 4304, 4301, 0, 4302,
	0, 4306, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 89, 0, 0, 0, 0, 0, 4300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 69, 70, 0, 4296, 0, 0, 4293, 0,
	60, 0, 0, 4650, 0, 4305, 4297, 4298, 4299, 4303,
	4304, 4301, 0, 4302, 0, 4306, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 84, 0, 4294, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 4307, 4295,
	0, 66, 67, 73, 42, 74, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 71, 0,
	0, 4294, 0, 0, 0, 93, 0, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 4307, 4295, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	89, 4296, 0, 0, 0, 0, 4300, 0, 0, 0,
	0, 4305, 4297, 4298, 4299, 4303, 4304, 4301, 4651, 4302,
	0, 4306, 0, 0, 0, 0, 78, 4293, 79, 0,
	0, 0, 4649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 69, 70, 0, 4296, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 4305, 4297, 4298, 4299, 4303,
	4304, 4301, 0, 4302, 0, 4306, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 59, 61,
	4294, 0, 0, 0, 87, 0, 0, 0, 4307, 4295,
	0, 66, 67, 73, 42, 74, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 71, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 4307, 4295, 0, 66, 67, 73, 42, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 4646, 71, 0, 0, 0, 4300, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	85, 69, 70, 0, 4296, 0, 0, 4293, 0, 0,
	0, 0, 0, 0, 4305, 4297, 4298, 4299, 4303, 4304,
	4301, 0, 4302, 0, 4306, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 89, 0, 0, 0, 0, 0,
	4300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 4293, 0, 60, 0, 0, 4638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 59, 61,
	4294, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 4307, 4295, 0, 66, 67, 73, 0, 74, 49,
	90, 56, 55, 58, 0, 0, 85, 0, 96, 0,
	0, 0, 59, 61, 4294, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	85, 69, 70, 0, 4296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4305, 4297, 4298, 4299, 4303, 4304,
	4301, 0, 4302, 0, 4306, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 89, 0, 0, 0, 0, 0,
	4300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 69, 70, 0, 4296, 0,
	0, 4293, 0, 60, 0, 0, 4635, 0, 4305, 4297,
	4298, 4299, 4303, 4304, 4301, 0, 4302, 0, 4306, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 71, 0, 0, 0, 87, 0, 0,
	93, 4307, 4295, 47, 66, 67, 73, 0, 74, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 62, 92, 91, 89, 0, 0, 0, 57,
	0, 4300, 0, 0, 0, 4307, 4295, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4293, 0, 0, 0, 0, 4548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4305, 4297,
	4298, 4299, 4303, 4304, 4301, 0, 4302, 0, 4306, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4294, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 42, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 59, 61, 0, 0, 71, 0, 87, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 59, 61, 89, 0, 42,
	0, 87, 0, 4300, 0, 4307, 4295, 0, 66, 67,
	73, 0, 74, 71, 0, 0, 69, 70, 0, 4296,
	93, 0, 0, 47, 4293, 0, 0, 0, 0, 4305,
	4297, 4298, 4299, 4303, 4304, 4301, 0, 4302, 0, 4306,
	0, 0, 0, 85, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 84,
	0, 4300, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4293, 0, 0, 0, 0, 4540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 4307, 4295, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4296, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 4305, 4297, 4298, 4299, 4303, 4304, 4301, 4545, 4302,
	71, 4306, 0, 85, 0, 0, 78, 93, 79, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 69, 70, 0, 4296,
	0, 0, 89, 0, 0, 0, 0, 0, 4300, 4305,
	4297, 4298, 4299, 4303, 4304, 4301, 0, 4302, 0, 4306,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 4293,
	0, 0, 0, 0, 4538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 59, 61, 60, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 4307, 4295,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 71, 0, 0, 96, 0, 0, 0,
	93, 0, 4294, 47, 0, 0, 4307, 4295, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 89, 0, 0, 0, 0,
	0, 4300, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 4293, 0, 0, 0, 0, 4412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4296, 0, 89, 0,
	0, 0, 0, 0, 4300, 0, 4305, 4297, 4298, 4299,
	4303, 4304, 4301, 0, 4302, 0, 4306, 0, 0, 0,
	0, 78, 0, 79, 0, 4293, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	49, 90, 56, 55, 58, 60, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4294, 0,
	0, 0, 0, 4307, 4295, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 85, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4305,
	4297, 4298, 4299, 4303, 4304, 4301, 0, 4302, 0, 4306,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 69,
	70, 0, 4296, 0, 0, 0, 0, 0, 0, 42,
	45, 0, 4305, 4297, 4298, 4299, 4303, 4304, 4301, 0,
	4302, 0, 4306, 71, 0, 0, 0, 78, 0, 79,
	93, 0, 0, 47, 75, 76, 0, 0, 0, 0,
	0, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 88, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 63, 0, 0, 0, 89, 4307, 4295, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4307,
	4295, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 80, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 64, 81, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	82718, -1000, -501, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2945, -1000, 2945, 361, -1000, 465, -1000, 1308, 836,
	-1000, -1000, -1000, -1000, -1000, 687, 142, 59897, 1090, 53977,
	79850, -264, 5690, 79111, 158, -1000, 158, 415, 56194, 891,
	944, 78372, 2782, 2095, 166, 27, 25, 236, 39933, 1015,
	324, 195, 218, 207, 196, 1249, -1000, 10996, 892, -1000,
	312, -1000, -1000, -1000, -1000, -1000, 55455, 2993, 3002, 2993,
	-1000, 2929, 2943, -1000, -1000, 2929, 2252, 2252, -1000, 10996,
	14205, -1000, -1000, -1000, -1000, -1000, 31616, -1000, 1297, -1000,
	60636, 42150, 2945, -1000, 1079, 1065, -78, 1010, 1010, 857,
	1010, 1010, -464, 1089, -1000, 853, 1614, -1000, -1000, -1000,
	-1000, 1611, 60636, 67287, 1086, 1015, 1015, 1015, 1015, 1015,
	1015, 1015, 1015, 1015, 53238, 60636, -1000, 1259, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60636, 2979,
	2978, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2577, 2574, 52499, 578, 2847, 1635, 315, 1635,
	-1000, -1000, 1590, -1000, 931, 930, 927, 923, 919, 922,
	16, 1551, 1646, 2919, -1000, 2524, 2929, 2929, 1551, -1000,
	921, -1000, -1000, -1000, -1000, -1000, -1000, 1320, -1000, -1000,
	1684, 1684, 543, 1058, 926, 945, 926, 2887, 1604, 2845,
	2829, 2134, 2826, 838, 2825, 2567, -1000, 1258, -1000, -1000,
	67, -1000, 2094, 60636, -1000, -1000, 2028, 2027, 681, 2441,
	1152, 2643, -1000, -1000, 663, 787, 2555, 782, 2555, 2555,
	2555, 430, 2555, 2555, 24, 2555, 2555, 2555, 318, 2555,
	354, 2555, 2555, 2555, 2555, 2555, -1000, 2247, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	39183, 2870, 210, -1000, -211, 191, 2897, 389, -1000, -1000,
	-1000, 319, 1297, 62114, 2507, -1000, 2524, -1000, -1000, -1000,
	2520, 2524, -1000, 2091, 1085, 1015, 797, -1000, 464, -1000,
	-1000, -1000, 2873, 2524, 45848, -1000, -1000, 1840, -1000, 2524,
	2524, 1297, 2902, 1297, 1297, 2899, 2895, 1297, 2823, 28588,
	18747, 2699, 1748, -1000, -1000, -1000, -1000, 1297, 2977, -1000,
	41411, 1253, -1000, 18747, 2070, 2524, 2524, -1000, 1181, 1254,
	-1000, 1145, 1242, -1000, -1000, 19504, 19504, 19504, 19504, 19504,
	19504, 19504, -1000, -1000, -1000, -1000, -1000, -1000, 2229, 2228,
	2227, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2524, 1251, 1248, 1245, 2524, 2524, 2524, 2524, 2524,
	-1000, 17233, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2524, 2524, 2524, 2524, 2524, 2524,
	2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 18747,
	2524, 2524, 2524, 2524, 2524, -1000, 2524, 2524, 2524, 2524,
	2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
	2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
	2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2524, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2524, 2524, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2524, 1019, 1019, 59158,
	2519, -31, 30859, -1000, -1000, -1000, -1000, 29345, 65070, 1480,
	-1000, -1000, -1000, -1000, 2821, -1000, -1000, 1244, 1242, 1181,
	1144, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2945,
	363, -1000, 2362, -1000, -1000, 10448, 10448, 10448, 10448, 10448,
	10448, 48804, -1000, -1000, -1000, 2564, 2929, -1000, 1010, 1010,
	889, 2092, 1677, 2089, 78372, 78372, 1010, -1000, 809, 67287,
	67287, -366, 1010, 843, 67287, 819, 2517, 1057, 2516, 1056,
	2071, 1015, 76894, 60636, 2087, 2086, 78372, 78372, 67287, 67287,
	78372, -1000, -1000, -1000, 27831, -1000, 1289, 2512, 48065, 47326,
	51760, 51760, -1000, -1000, -1000, 908, -1000, 1635, -1000, 9372,
	18747, 1010, 1010, 60636, 60636, 60636, 60636, 60636, -1000, 60636,
	-1000, -1000, 1635, -1000, -1000, 1635, 1635, 1635, 1551, 2976,
	1551, -1000, -1000, -1000, 1635, 79111, 79111, 18747, -1000, 19504,
	66548, 1351, -1000, -1000, 1635, -1000, 79111, 969, 969, 969,
	-1000, 2085, 542, 364, -1000, 926, 363, -1000, -1000, 2788,
	2889, 2886, 2083, 838, 838, -1000, 2234, 838, 2498, -1000,
	1601, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 838, 2887, 17990, 76894, -480, -1000, -1000,
	2511, -1000, 467, -1000, -1000, 947, 2642, 947, 5143, 67287,
	67287, 67287, -1000, 2555, 76894, -1000, 2555, 2555, 2555, 23,
	2555, 2555, -1000, -1000, 2555, -1000, -1000, -1000, 2555, -1000,
	-1000, 2555, -1000, -1000, -1000, 2555, 2555, -1000, 2555, 2555,
	-1000, -1000, -1000, -1000, -1000, 67287, 660, 2413, 2501, 2641,
	-1000, 1054, 197, -36, 149, -1000, -1000, -1000, -1000, -1000,
	-1000, 317, 316, 314, 306, -1000, -1000, -1000, -1000, 302,
	277, -1000, -1000, 58411, 58411, 917, -1000, 2507, 62114, 2885,
	23289, 892, -1000, 18747, 2853, -1000, 2853, -1000, -1000, -1000,
	373, -1000, 60636, 67287, 78372, 55455, 55455, 55455, 55455, -1000,
	2669, 2665, -1000, 2673, 2667, 2655, 492, 62114, -1000, 2873,
	361, 2359, 2252, 2252, 464, 45848, -1000, 2524, -1000, 62114,
	1178, 1074, 1072, 1068, 2788, -1000, -1000, -1000, -1000, -1000,
	2021, 2016, 1930, 13448, 19504, -1000, -1000, -1000, -1000, -1000,
	2993, 2993, -1000, -1000, -1000, -1000, -1000, -1000, 1718, 2988,
	1484, 2420, -1000, -1000, -1000, 2504, -1000, 1592, 1239, 1987,
	1803, -1000, -1000, -1000, -1000, -1000, -1000, 14205, -1000, 60636,
	-1000, 18747, 18747, 18747, 1749, -1000, 45106, -1000, -1000, -1000,
	24046, 1502, 19504, 1831, 1546, 19504, 19504, 19504, 19504, 19504,
	19504, 19504, 19504, 19504, 19504, 19504, 19504, 19504, 19504, 19504,
	1380, 19504, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2082, -1000, 363, 36915, 13448, 36915, 825, 825, 76894, 1334,
	1334, 1334, 1334, 1334, 1334, 61375, -1000, -1000, -1000, 2893,
	35401, 76894, 36915, 2893, 2893, 2893, 2893, 2893, 2353, 1921,
	10996, 17233, 55455, 13448, 13448, 13448, 2252, 18747, 18747, 13448,
	19504, 13448, 16476, 15719, 21018, 13448, 13448, 2893, 1464, 1921,
	27074, 13448, -1000, 2252, -1000, -1000, -1000, -1000, 1830, -1000,
	-1000, -209, -209, -209, 400, 13448, 13448, 13448, 13448, 2252,
	2252, 13448, 13448, 13448, 13448, 13448, 13448, 2252, 2252, 2252,
	13448, 13448, 13448, 13448, 13448, 13448, 13448, 13448, 13448, 13448,
	13448, 13448, -1000, -1000, -1000, 1792, 57672, 55455, 60636, 2414,
	2357, -1000, -1000, 1231, 30102, 2491, -1000, -28, -40, -31,
	-1000, -1000, 1314, -1000, -1000, -1000, -1000, 14962, -1000, -1000,
	-1000, 24803, 2929, -1000, 40672, -1000, 53, -1000, -1000, -1000,
	2536, -1000, 2542, 107, 509, 2542, 92, 91, 2542, 2542,
	2542, 2542, -1000, -1000, -1000, 108, -1000, -1000, -1000, -1000,
	-1000, 2563, 2562, -1000, 2536, 2536, 2536, -1000, -1000, -1000,
	-1000, -1000, -1000, 2542, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2548, 523, 2539, 2539, 2539, 2539, 2539, -1000,
	-1000, -1000, -1000, -1000, 986, -1000, -1000, -1000, 18747, 2823,
	2708, 76894, 60636, 1062, -465, 843, 2853, 2867, 2853, 895,
	-1000, 1228, 2561, 78372, 866, 2447, -1000, 551, 2411, 1123,
	56933, -1000, -1000, -1000, -1000, -1000, 60636, 60636, 67287, 67287,
	67287, 60636, 2640, 2503, -1000, -1000, -1000, -1000, -1000, 2502,
	-1000, 2411, -1000, -1000, 1226, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -438,
	-439, 60636, -1000, -1000, -1000, -1000, -1000, -1000, 2499, -1000,
	2499, -1000, -1000, -1000, 2232, 1921, 2081, 2074, 2887, -1000,
	-1000, -1000, -1000, 1560, -1000, -1000, -1000, -1000, 1635, 60636,
	2887, -1000, -1000, -1000, 1921, 1212, 2573, 2524, 2252, -1000,
	-1000, -1000, 153, -1000, 151, -1000, -1000, -1000, 2069, -1000,
	-1000, -1000, -1000, -1000, 364, -1000, 19504, 2787, 2786, -1000,
	2498, 2498, -1000, 2498, 838, 62853, 2498, -1000, -1000, 2350,
	-1000, 298, 2231, 60636, -1000, 62114, 66, -1000, -55, 75416,
	-1000, -1000, -1000, 947, 75416, -1000, 318, 267, -1000, 1053,
	-1000, 2348, -1000, -1000, -1000, -1000, 2555, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 947, 458, 2497,
	947, 67287, 67287, 456, 2496, -1000, 1596, 1595, -1000, -1000,
	146, -1000, -1000, -1000, -1000, 2914, -1000, -1000, 250, -37,
	-1000, 250, 2230, 19504, -1000, 2524, 2323, -1000, 1203, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2524, -1000, -1000, -1000,
	-1000, 2820, 1480, 1480, 1480, 5722, 551, 2639, 2560, 2637,
	601, -1000, -1000, -1000, -1000, 2659, -1000, 2656, 2545, -1000,
	-1000, -1000, 2527, 62114, 55455, -1000, -1000, -1000, 2252, 76894,
	1170, -1000, 62114, 2524, 2524, 2524, 19504, 19504, 1468, -1000,
	19504, 19504, 1466, -1000, 19504, 19504, 1461, -1000, 2252, 2495,
	-1000, -1000, 1921, 1190, 4777, -1000, 76155, -239, 2687, 28588,
	28588, 18747, -1000, -1000, -1000, 24803, 2916, -1000, 2698, 2697,
	2975, -1000, -1000, -1000, 1502, 1735, 1562, -1000, -1000, 1860,
	-1000, -1000, -1000, -1000, -1000, 1184, 2524, -1000, -1000, -1000,
	-1000, -1000, -1000, 5081, -1000, -1000, -1000, -1000, 1831, 19504,
	19504, 19504, 1212, 5081, 5061, 2371, 3121, 1334, 1422, 1422,
	1388, 1388, 1388, 1388, 1388, 1853, 1853, -1000, -1000, -1000,
	-1000, 1329, 2252, -1000, 2345, -1000, -1000, 2229, 2228, 2227,
	-1000, -1000, -1000, -1000, 13448, -1000, -1000, -1000, -1000, -1000,
	-1000, 13448, 13448, 13448, 13448, 13448, 18747, -1000, 2345, 2345,
	2345, -1000, 1599, 2001, 2244, 4913, 2345, 1316, 2973, 2345,
	1312, 2972, 2345, 2220, 19504, 19504, 19504, 2345, 2345, 13448,
	1667, -1000, 18747, 2252, 1230, 2252, 1181, 1144, 2345, -1000,
	2252, 2494, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2493, 2970, 2492, -1000, -1000, -1000, -1000,
	2345, 2252, 2345, 2345, -103, -103, 2252, 2345, 2252, 2345,
	2345, 2252, -103, -103, -103, 2345, 2345, 2345, 2345, 2345,
	2345, 2345, 2345, 2345, 2345, 2345, 2345, -1000, 2252, 1429,
	60636, -1000, 2487, 1429, 2408, 55455, -1000, -1000, 55455, 79111,
	26317, -1000, 29345, -31, -48, -1000, -1000, 2491, -1000, -1000,
	1533, -1000, -1000, 2226, 1921, -1000, 1140, 2823, 7588, -1000,
	-1000, -1000, -1000, 2549, 44367, -1000, 2738, 1227, 1227, 1227,
	65809, 77633, 2733, -1000, -1000, 216, 41, -1000, -1000, -1000,
	2026, -1000, 385, 512, 2542, -1000, -1000, -1000, 2542, 2542,
	-1000, 2542, 2542, -1000, -1000, -1000, -1000, -1000, 2224, 2224,
	-1000, -1000, -1000, -1000, -1000, 2024, -1000, 2548, -1000, 2023,
	-1000, -1000, -1000, -1000, 216, 216, 216, 216, 216, -1000,
	1881, -1000, 2569, 2524, 60636, -367, -1000, -1000, -1000, 2957,
	-1000, -1000, 76894, 64331, 2636, -1000, -1000, 356, 67287, 534,
	763, 310, -1000, 1638, -1000, -1000, 1052, -1000, 1051, -1000,
	-1000, 1101, 60636, 60636, 67287, 76894, 2635, 2629, -1000, 51760,
	-1000, -1000, -1000, -1000, 2952, 2062, 2061, -1000, 1551, 1635,
	-1000, 19504, 67287, -1000, 913, -1000, -1000, -1000, -1000, 5081,
	19504, 19504, -1000, -1000, -1000, -1000, 1689, -1000, -1000, -1000,
	-1000, -27, -1000, -1000, 1050, 1131, 1129, 75416, 1045, -1000,
	366, 67287, -1000, 76894, -1000, 75416, 429, 457, 75416, 1148,
	2969, 2490, -1000, 1584, 1577, 1573, 1571, 1566, 1543, 1519,
	1516, 197, 2546, 2544, -1000, -1000, 262, -1000, 2812, -1000,
	-1000, 5081, -1000, -1000, 23289, 36915, -1000, 1480, 1467, -1000,
	1458, 2222, 1175, 1437, -1000, -1000, -1000, 2942, 1270, 1173,
	989, 1480, 995, 454, 1043, 2794, 2793, 577, 576, -1000,
	1480, 995, 1272, 759, -1000, 1462, 1460, 1459, 1456, 1449,
	1447, 1442, 1432, 747, -374, -1000, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, -182, -194, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 32373,
	1480, 1480, -276, -1000, 1100, 781, -1000, -1000, 18747, 2543,
	-1000, 18747, -1000, -1000, -1000, -1000, -1000, 76894, 2527, 464,
	-1000, 2321, -1000, -1000, 1170, 76894, 76894, 76894, 5011, 1874,
	2524, 4993, 1726, 2524, 4965, 1507, 2524, 2873, 13448, 22532,
	2221, 2488, 2219, 2218, -1000, 59, -1000, 2684, -1000, -1000,
	-1000, 60636, -1000, -1000, -1000, -1000, 2952, 54716, 14205, -1000,
	-1000, -1000, -1000, 34644, 13448, -1000, 1212, 5081, 4761, -1000,
	19504, -1000, -1000, 2252, 2345, 2345, 2345, 2345, 2345, 1921,
	-1000, -1000, -1000, 241, 1380, 241, -1000, 1380, 19504, -1000,
	19504, 19504, -1000, 19504, 19504, -1000, -1000, 19504, 3736, 3062,
	2533, -270, -1000, 2465, 1547, -1000, 18747, 1844, -1000, -1000,
	-1000, -1000, -1000, 19504, 19504, 19504, 19504, -1000, -1000, -1000,
	-1000, -1000, 74677, -1000, -103, -103, -103, -103, -103, -103,
	-1000, -1000, -1000, -103, -103, -103, -103, -103, -103, -103,
	-103, -103, -103, -103, -103, -1000, 352, 2524, -1000, 25560,
	2952, 55455, 2417, 2417, -1000, 1115, -1000, -1000, -1000, -43,
	-45, -1000, -1000, -1000, -1000, -1000, 36915, -1000, -1000, -1000,
	6838, -1000, 1480, 1480, 1480, 380, 1480, 1480, 1480, 1480,
	1480, -197, -198, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	177, 1480, 1480, 1480, 1480, 1480, 1480, 32373, 1480, 1480,
	-376, 49543, 1160, 975, -1000, -1000, -1000, 77633, 77633, 77633,
	-1000, 77633, 77633, -1000, -1000, -1000, -1000, 50282, -1000, -1000,
	1723, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2524,
	-495, 2013, 60636, -1000, 2819, 1453, 39186, 2987, -1000, 2732,
	-1000, 2730, 2728, 2215, -1000, -1000, 2363, 2324, 2316, -1000,
	2542, -1000, -1000, -1000, -1000, -1000, 2343, -1000, 2341, 2468,
	-1000, 2339, -428, 2628, 76894, 2884, 2524, 2009, 2627, -1000,
	-1000, -1000, -1000, 2314, 2451, -1000, 10448, 76894, 76894, 76894,
	794, -276, 584, -1000, 67287, 382, 551, 710, 2038, -391,
	2866, 60636, 67287, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	73938, 73938, -1000, -1000, 18747, -1000, -1000, 2887, -1000, 5081,
	2411, -1000, -1000, 5081, 5081, 1429, 1082, -1000, 67287, 1345,
	73199, 1042, 67287, 422, 249, -1000, 2967, 2966, 412, 2965,
	-1000, 259, 67287, 456, 2213, 2212, 2211, 1995, 1986, 1981,
	1980, 1959, -1000, 60636, 60636, 2210, -1000, -1000, -1000, 1444,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1428, 6277, 1437,
	1416, 1401, 1389, 1385, -1000, 164, 46587, 1010, 1191, 997,
	-1000, -1000, 2524, -1000, 43628, 50282, 50282, 50282, 1015, 2727,
	2724, 76894, 50282, 50282, 76894, 50282, 1031, 2059, 2818, 1480,
	98, -1000, -1000, -1000, 72460, -1000, 71721, 776, 51021, 50282,
	76894, 60636, 42889, -1000, -1000, -1000, -1000, 70982, 1957, 76894,
	76894, 70243, 69504, 68765, 68026, -1000, -243, 860, 18747, 860,
	2018, 2018, 2209, 2206, 2205, 1480, 1480, 204, 2018, 2204,
	204, 2018, 38429, 2203, 958, 860, 860, 860, 2018, 2018,
	2018, 2018, 2202, 387, 1943, 2201, 2018, 2076, 2073, 860,
	-1000, -230, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2018, 2524, -1000, 421, 904, 1037, 951,
	-4, 1921, 76894, 1921, 2337, -1000, -1000, 1867, 76894, -1000,
	2261, 2261, 2261, 19504, 19504, 19504, 19504, 19504, 19504, 19504,
	19504, 19504, 62114, -1000, -1000, 1113, 14, 76894, -1000, 36,
	-1000, -1000, -1000, 2950, -1000, 2450, -1000, -1000, -1000, 2252,
	-1000, 19504, 5081, -1000, -103, -103, -103, -103, -103, 2252,
	2536, 2536, 2536, -1000, 2536, 2539, 117, -1000, -1000, -1000,
	2536, 139, 2536, 138, -1000, 2252, 2252, 2252, 1952, 2737,
	2705, 2123, 1923, 1952, 19504, 19504, 19504, 2524, -93, -1000,
	1921, 18747, 2423, 2401, 1952, 1952, -1000, -1000, 2058, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2625, 2625,
	25560, 2873, -1000, 21775, -1000, 892, -1000, -1000, 76894, 2466,
	-1000, 1480, 1206, 1480, 1480, 2945, 2417, -1000, -1000, 1317,
	-1000, -1000, -1000, -1000, 860, 860, 860, 1480, 2817, 1480,
	2018, 2018, 2200, 2199, 2198, 1480, 1480, 204, 2018, 2196,
	204, 2018, 38429, 2194, 958, 860, 860, 860, 2018, 2018,
	2018, 2018, 2193, 387, -1000, 1855, 2191, 2018, 2068, 2063,
	860, -1000, -232, 2018, 2524, -244, 2333, -1000, 2536, 2536,
	2719, 1227, -1000, -1000, -1000, -1000, -1000, -1000, 2535, -1000,
	-1000, 19504, 2883, -1000, 2534, 1435, -1000, -1000, -1000, -1000,
	825, 2190, -1000, -1000, 19504, -1000, -1000, 2524, 2524, 2524,
	2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
	-65, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2189, -1000, 1944, -1000, 1938, -1000, -1000, -1000, 60636, -1000,
	-1000, 2882, -1000, 60636, 275, 64331, -1000, 10448, 10448, 10448,
	-4, 369, -1000, 1675, -1000, -1000, -1000, 2188, 2187, 2186,
	2411, 552, 1647, 445, -1000, 2877, 2874, 2184, 2162, 2161,
	2160, 1931, -1000, -1000, 2572, 76894, 2449, -1000, 1921, 1635,
	36, 60636, 249, -1000, -1000, -1000, 67287, 249, -1000, -1000,
	452, 67287, 67287, 2962, 67287, 544, 1148, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2331, 2329, -1000, -1000,
	-1000, -1000, -1000, -1000, 1283, 1237, 346, 338, -219, -1000,
	448, 417, -1000, -1000, -1000, 51021, 963, 10448, 10448, 77633,
	1227, -1000, 2718, 1370, -1000, -1000, -1000, -1000, 76894, -1000,
	50282, 2448, -430, -432, 1263, -450, -1000, -1000, -1000, -1000,
	51021, 1480, 1380, 2816, 659, 337, 658, 335, -1000, -1000,
	-1000, -1000, 963, 1205, 1030, -1000, 2713, 50282, 1028, 655,
	334, -1000, 1775, -277, 2448, -1000, 2448, -1000, 2448, -1000,
	2448, -1000, -1000, -1000, 1921, -1000, -1000, -1000, -1000, -1000,
	-1000, 2158, 2156, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -184, -1000, 38429, 421, -1000, 1914, 1910, 1897, 1854,
	1746, -1000, 2616, 78372, -1000, 778, 2615, 529, 825, 2327,
	-1000, 76894, -1000, -1000, -1000, -1000, -1000, 5081, 5081, 2336,
	5081, 5081, 2318, 5081, 5081, 2248, -1000, 33887, 2524, -1000,
	18, -1000, 2948, 2940, -1000, -1000, 5081, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 438, 437, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19504, 19504, 19504,
	19504, -1000, 1952, 1952, 1952, 19504, 2252, 2153, 1921, 19504,
	19504, -1000, -1000, 1376, -1000, 2905, 2859, 2905, 2385, 62114,
	2252, 2437, 2323, 2252, 360, -1000, -1000, -1000, 10996, 55455,
	2445, -1000, 2524, 2321, 2945, 25560, 18747, 18747, 18747, 18747,
	2929, -1000, -1000, -1000, -1000, 1380, 1480, 33130, -1000, -1000,
	-1000, -1000, -1000, 2152, 2151, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -190, -1000, 38429, -1000, 234, 49543, 2857, 2857,
	77633, 77633, 76894, 1952, 2524, 76894, -1000, -1000, -1000, -1000,
	-1000, 1952, -1000, -1000, 2286, 2268, 2530, -1000, -1000, -391,
	2913, -1000, 275, -1000, 2150, 842, 848, -1000, 830, 829,
	813, 805, 807, -1000, -1000, -1000, -1000, 2615, 767, 369,
	-1000, -58, 1847, 1446, 2792, 685, -1000, -1000, -1000, -1000,
	309, 551, -1000, 709, 2149, 704, 2148, -1000, -1000, 541,
	-1000, -1000, 2781, 2319, -1000, 18, -1000, 2881, 249, 2881,
	411, 1148, 1148, 67287, 1148, -1000, -1000, -1000, -1000, -235,
	1836, 19504, 2524, 2524, 804, 2256, -1000, -1000, 2057, -1000,
	-1000, 2569, 1010, 77633, 2263, -1000, 76894, -1000, -1000, -1000,
	-1000, -1000, -1000, 2852, 2851, -1000, -1000, 963, 1380, -1000,
	1380, -1000, -1000, -1000, -1000, -1000, 50282, 76894, 50282, 1024,
	50282, -1000, -1000, 2524, 1081, -1000, -1000, -1000, -1000, 2297,
	-1000, -1000, -1000, -1000, -1000, -1000, 559, 2146, 321, -1000,
	-1000, 1100, 783, -1000, -1000, -1000, -306, -1000, -1000, 19504,
	19504, 19504, -1000, 36158, 2767, 2755, -105, 18747, 18747, -1000,
	-1000, -1000, -1000, 1952, 1952, 1952, 1952, -1000, -1000, -1000,
	260, -1000, -1000, 1952, 1952, 2945, 2939, -1000, -1000, 2709,
	-1000, 2905, 2527, -1000, -1000, 2437, 360, -1000, 892, -1000,
	12691, -1000, 2929, -1000, 1921, 1921, 1921, 1921, -1000, -1000,
	1380, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2297, 234,
	-1000, 38429, 1480, 2145, 1480, 1480, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2291, -493, 19504, 2284, -1000, -1000, -1000,
	49543, 363, -1000, 867, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2779, 2774, 855, 904, -1000, 2141, 2137, -1000, 689,
	1983, 1192, -132, -1000, -1000, -1000, -1000, -1000, -1000, 702,
	2056, -1000, 418, -1000, -1000, 401, -1000, -1000, 2938, -391,
	19504, -1000, 2767, -1000, 67287, 2881, -1000, -1000, -1000, -1000,
	1148, -1000, 2524, 2937, -1000, 1952, 76894, 19504, 2524, 1515,
	-1000, -1000, 216, 216, 2529, 77633, 2528, -1000, 1370, 2694,
	19504, -1000, -1000, 1332, 1321, -1000, -1000, 1022, 50282, -1000,
	1370, 60636, 38429, -1000, -1000, -1000, -1000, 904, 1358, 791,
	1952, 1952, 1952, 2240, -1000, 8472, 344, -1000, -1000, 2711,
	2935, -1000, 76894, -1000, 1921, 2443, -1000, 1921, -1000, -1000,
	-1000, -1000, 2252, 313, -329, -1000, -1000, 1423, 18747, 2442,
	2986, -1000, -1000, -1000, -1000, 360, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1826, -1000, 2136, 2131, 961, -1000, -1000,
	-1000, 1952, -1000, 2265, -1000, 363, 363, 877, 82411, -1000,
	-1000, -1000, -1000, 1746, -1000, -1000, -1000, -1000, 1800, -1000,
	-1000, 1899, 684, 399, -1000, 2879, -1000, -1000, 1799, 5081,
	1017, -303, -1000, -1000, -1000, 1370, -403, -1000, 2261, 1952,
	76894, 1791, 49543, 2569, 49543, -1000, 938, 5081, 1480, 1380,
	50282, -1000, 2263, 35, -1000, 82411, 1746, 1124, 788, 529,
	-1000, -1000, -1000, 2252, 36158, 414, -456, -3, 2130, 2758,
	2710, 2751, -1000, 2116, 2440, -1000, 2878, 18747, -1000, 2680,
	-274, -334, 2252, 388, 388, 2422, 25560, 2252, -1000, -1000,
	-1000, 60636, -493, 234, -305, 2252, -1000, 363, 870, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11934, 18747, 174, 37672, 2055, 2054, 82411,
	2236, 82411, 18747, 2053, 2052, 2735, 19504, 82348, 557, -343,
	-1000, -346, -1000, -1000, -1000, 2115, -1000, 2527, 1783, 527,
	2263, 376, -1000, -1000, 2261, -1000, 2259, 2526, 2255, 918,
	1380, -1000, -1000, -1000, 754, -1000, -1000, 545, 825, -1000,
	529, -1000, 2873, -1000, -1000, 2114, -174, -1000, 2524, -8,
	2934, 2933, -1000, 2932, 2931, -1000, 76894, 2524, -1000, -1000,
	2678, -1000, -1000, -1000, 390, -1000, 1406, 874, 1392, -1000,
	825, -1000, 2421, -1000, 2525, -1000, -1000, 234, -1000, 367,
	-1000, -305, 2252, -1000, 2051, 2049, -1000, 1793, 1680, -1000,
	18747, 1780, 657, 643, 7415, -1000, -1000, -1000, -1000, -1000,
	-1000, -502, -1000, 307, -503, 839, -1000, -1000, 2048, -1000,
	2961, 5081, -1000, -504, -1000, -1000, -1000, -1000, 2795, 1452,
	63592, -1000, 2524, 804, -1000, 234, 49543, 234, 2524, -1000,
	-1000, -1000, -1000, -306, -1000, 1358, 62114, 661, 2113, 36158,
	2524, 2111, 2110, 2097, 2064, -1000, -1000, -304, 1600, -1000,
	-1000, -1000, -1000, -1000, -209, 76894, 410, 985, 983, -305,
	-1000, -1000, -1000, -1000, -1000, 1674, 1669, 82411, -1000, 1704,
	82411, 2911, 2910, 2909, 36, 36915, 82175, 81938, 82411, 82411,
	18747, 81870, 82411, 1683, -1000, 81658, 82411, -1000, 25560, -1000,
	-1000, -1000, -1000, 2968, 2411, 19504, 2524, -1000, 2251, -1000,
	20261, 82411, -1000, 1358, -1000, 1942, 1869, 2613, 2612, 825,
	-1000, 2240, 36158, -1000, -1000, -1000, -1000, -332, 390, -1000,
	2246, -1000, 406, 405, -1000, -305, 407, 1663, 82411, -1000,
	-505, 82411, -506, 882, 363, 974, 1314, -1000, 624, -1000,
	2046, -507, -508, -509, 802, 18747, -510, 2044, -1000, -1000,
	2421, 67287, 1952, 19504, 234, 1952, 2252, -1000, -1000, 2611,
	825, -1000, 2610, 825, -83, -85, 2609, -1000, 2240, -337,
	-1000, 2606, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 81507, 10996, -1000, -511, 81297, -512, 9267, -1000,
	-1000, -1000, 81243, -1000, -1000, -1000, -1000, 634, -1000, -1000,
	2850, -1000, -1000, 81033, 80854, 80800, 82411, 1700, 80644, 2416,
	-1000, -1000, 2411, -238, 1952, -1000, -1000, -1000, -1000, 299,
	2605, -383, 2604, 292, 286, -1000, -1000, -89, -1000, -1000,
	2603, 2584, 2960, -1000, -514, -1000, -1000, 80590, 1657, 82411,
	1009, 82411, 1643, -1000, 18747, -1000, 974, -1000, 19504, 2043,
	611, 18747, -517, 600, 593, 2039, -1000, 1766, -238, 280,
	-385, 2582, 2581, -1000, -1000, -1000, 2984, -1000, 2982, 1211,
	1211, 10445, 1636, -1000, -1000, -518, 1006, 82411, -1000, 1671,
	-1000, 5081, -1000, 2031, 1586, 10378, -1000, -1000, -1000, -1000,
	-1000, 271, -387, -1000, -1000, -1000, 979, 1806, -1000, -1000,
	-1000, 9977, -1000, -519, 82411, -1000, 599, 561, -1000, -1000,
	-1000, -1000, -1000, 1005, 9672, -521, 1945, 1862, -1000, 1004,
	82411, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3492, 3489, 3488, 33, 3485, 287, 305, 298, 22,
	2805, 3483, 292, 3462, 303, 3459, 35, 28, 11, 37,
	3458, 3102, 3098, 3096, 3094, 25, 3457, 24, 3452, 3451,
	3090, 3449, 3448, 3088, 3447, 3445, 3444, 3443, 3442, 3439,
	3435, 3434, 3433, 3086, 3084, 3082, 3079, 3431, 3429, 3428,
	3071, 3069, 3065, 3427, 83, 3425, 13, 46, 42, 3423,
	5, 3422, 202, 236, 3421, 3, 3420, 3419, 16, 205,
	3417, 3414, 69, 3056, 3413, 3386, 3384, 3382, 3379, 3378,
	136, 3377, 3376, 3054, 3374, 3052, 3369, 3050, 3048, 3043,
	3039, 3029, 203, 3368, 3027, 3025, 3023, 3367, 2745, 235,
	493, 230, 3366, 133, 149, 1613, 3364, 208, 3363, 216,
	3362, 3361, 3360, 482, 229, 3359, 168, 89, 373, 171,
	167, 176, 528, 3358, 60, 160, 348, 3357, 8, 3355,
	117, 3354, 221, 3353, 226, 2818, 196, 198, 193, 3352,
	3351, 148, 3350, 3349, 3348, 220, 3347, 3346, 239, 3620,
	3343, 3339, 191, 3329, 140, 3323, 138, 3322, 3321, 3320,
	3319, 237, 121, 91, 170, 174, 3318, 164, 3316, 3314,
	3310, 3309, 3308, 3307, 85, 27, 1977, 3306, 158, 195,
	3305, 62, 48, 61, 3303, 3301, 55, 3299, 3298, 131,
	3296, 3294, 125, 3292, 189, 70, 3291, 3290, 3289, 3288,
	115, 84, 3287, 39, 3286, 190, 3284, 3283, 3281, 3280,
	3279, 95, 3278, 93, 3277, 192, 178, 542, 3275, 3274,
	47, 53, 3273, 57, 21, 32, 104, 44, 109, 82,
	184, 173, 128, 159, 49, 154, 59, 152, 200, 98,
	3271, 238, 179, 212, 116, 41, 3269, 3267, 209, 3266,
	113, 210, 187, 185, 207, 3249, 3243, 3241, 242, 3239,
	183, 567, 3235, 122, 186, 102, 2749, 240, 137, 3233,
	3232, 3231, 3228, 120, 54, 142, 3223, 31, 252, 241,
	243, 30, 72, 3222, 508, 5616, 5900, 7698, 23, 153,
	58, 6631, 40, 219, 3221, 80, 3220, 3219, 3217, 3861,
	169, 51, 106, 163, 3216, 166, 79, 90, 3214, 3211,
	3210, 3209, 3208, 3207, 162, 130, 3204, 3189, 68, 3187,
	3184, 64, 43, 10, 9, 3183, 150, 224, 223, 222,
	3182, 217, 56, 3180, 3179, 181, 134, 3177, 3175, 3174,
	3173, 182, 129, 206, 3172, 204, 127, 147, 3171, 123,
	3170, 3169, 76, 5895, 141, 3168, 3167, 155, 132, 146,
	194, 3166, 3165, 3160, 66, 3159, 3158, 4, 3157, 112,
	71, 52, 114, 17, 165, 3153, 3151, 199, 3150, 3149,
	151, 177, 3148, 135, 143, 63, 3147, 74, 157, 3145,
	172, 2, 7, 6, 3141, 3140, 3139, 3137, 3136, 3135,
	3134, 3132, 126, 3131, 3130, 107, 100, 75, 3129, 3128,
	3127, 3126, 3125, 201, 175, 88, 227, 99, 14, 3124,
	3123, 15, 3122, 180, 3119, 108, 3118, 3116, 124, 3113,
	3111, 73, 110, 50, 103, 3109, 3108, 118, 161, 3107,
	101, 3105, 3104, 228, 413, 3100, 4293, 3092, 197, 211,
	77, 105, 3077, 81, 111, 3074, 92, 3058, 18, 65,
	3045, 20, 19, 1628, 3036, 0, 3450, 215, 3034, 144,
	3032, 3021, 225, 3007,
}

var yyR1 = [...]int{
	0, 464, 464, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 246, 246, 97, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 128, 128, 8, 8,
	127, 127, 127, 243, 243, 243, 243, 240, 240, 129,
	129, 126, 126, 134, 16, 16, 16, 111, 111, 17,
	18, 18, 18, 18, 467, 467, 143, 143, 141, 141,
	142, 142, 237, 237, 239, 239, 19, 19, 19, 248,
	248, 253, 253, 253, 256, 256, 256, 256, 225, 226,
	227, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 455, 455,
	455, 456, 456, 456, 456, 456, 281, 281, 281, 281,
	419, 419, 435, 435, 435, 436, 436, 434, 434, 434,
	434, 434, 438, 438, 439, 439, 437, 437, 437, 437,
	441, 441, 442, 442, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 422, 422,
	422, 50, 50, 50, 50, 50, 54, 54, 51, 51,
	51, 51, 51, 51, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 444, 444, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 446, 446,
	447, 447, 448, 448, 448, 448, 449, 449, 449, 449,
	449, 450, 450, 450, 450, 450, 450, 450, 451, 451,
	452, 452, 3, 2, 400, 400, 401, 401, 402, 402,
	402, 402, 403, 403, 404, 404, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 31, 31, 31, 31,
	31, 31, 280, 280, 276, 276, 276, 278, 278, 279,
	279, 279, 421, 421, 421, 415, 415, 415, 417, 417,
	416, 416, 416, 418, 418, 423, 423, 423, 423, 423,
	426, 426, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 427, 427, 427, 424, 424, 162, 162, 428,
	428, 433, 433, 429, 429, 430, 430, 432, 432, 432,
	431, 431, 431, 431, 318, 318, 181, 181, 70, 70,
	71, 71, 71, 214, 214, 214, 20, 20, 20, 20,
	20, 20, 26, 26, 28, 28, 28, 28, 57, 57,
	58, 29, 29, 29, 29, 59, 59, 60, 32, 32,
	32, 32, 32, 32, 67, 67, 67, 66, 66, 65,
	65, 65, 65, 65, 65, 34, 35, 36, 468, 468,
	468, 61, 61, 37, 37, 37, 40, 40, 40, 41,
	41, 41, 38, 39, 42, 30, 30, 30, 30, 68,
	68, 63, 63, 62, 62, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 33, 33, 33,
	33, 33, 33, 25, 399, 399, 399, 56, 56, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 78, 78, 355, 356, 356, 356, 356, 356,
	356, 342, 342, 343, 343, 343, 343, 343, 343, 332,
	332, 332, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 306,
	306, 306, 306, 310, 310, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	309, 309, 309, 309, 309, 309, 309, 309, 311, 311,
	311, 311, 311, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 341, 341,
	315, 315, 314, 314, 314, 335, 335, 336, 336, 336,
	333, 333, 333, 334, 334, 319, 319, 319, 319, 319,
	319, 320, 337, 321, 321, 322, 322, 322, 322, 322,
	322, 323, 323, 324, 324, 324, 326, 326, 331, 331,
	330, 330, 330, 330, 330, 330, 327, 327, 327, 327,
	327, 327, 328, 328, 328, 329, 340, 340, 340, 340,
	340, 316, 46, 46, 52, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 377, 377, 382, 382, 270, 270, 271, 271, 53,
	53, 53, 53, 53, 168, 168, 55, 55, 55, 378,
	378, 380, 380, 380, 380, 380, 380, 380, 380, 379,
	379, 381, 381, 344, 344, 373, 373, 372, 372, 371,
	371, 371, 371, 371, 371, 371, 353, 353, 354, 354,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 348,
	348, 348, 347, 347, 349, 349, 352, 352, 352, 370,
	370, 369, 369, 345, 345, 345, 383, 383, 383, 383,
	383, 102, 102, 346, 346, 346, 384, 350, 350, 351,
	351, 351, 392, 393, 391, 391, 391, 391, 391, 169,
	169, 169, 375, 375, 375, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 103, 103, 103, 104, 104, 325, 325,
	357, 357, 357, 357, 357, 463, 463, 463, 358, 358,
	358, 358, 358, 358, 454, 454, 453, 453, 453, 359,
	359, 360, 361, 361, 361, 362, 362, 364, 364, 277,
	277, 365, 365, 366, 366, 363, 363, 363, 367, 367,
	396, 396, 396, 395, 395, 73, 73, 73, 73, 75,
	75, 74, 74, 74, 82, 82, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 72,
	72, 290, 290, 77, 213, 213, 213, 275, 275, 389,
	389, 390, 390, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 386, 386, 385, 385, 387, 387,
	76, 76, 76, 76, 163, 163, 22, 22, 79, 79,
	420, 420, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 394, 394, 394, 24, 24, 83, 84, 84,
	84, 289, 289, 289, 289, 289, 87, 87, 87, 87,
	241, 241, 242, 242, 88, 88, 88, 88, 89, 89,
	89, 89, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 123, 262, 262, 261, 261,
	260, 260, 260, 263, 263, 263, 263, 304, 304, 304,
	86, 86, 86, 98, 98, 93, 93, 96, 96, 96,
	96, 99, 99, 100, 100, 101, 101, 94, 95, 43,
	44, 44, 44, 44, 45, 91, 91, 91, 92, 92,
	92, 92, 113, 113, 114, 114, 470, 470, 470, 90,
	471, 105, 106, 106, 108, 108, 108, 109, 109, 109,
	110, 110, 110, 267, 267, 267, 267, 267, 267, 267,
	107, 107, 107, 117, 117, 121, 121, 121, 121, 120,
	120, 120, 120, 216, 216, 221, 296, 296, 197, 197,
	217, 217, 222, 222, 222, 223, 223, 224, 224, 224,
	224, 224, 219, 219, 218, 218, 220, 184, 184, 184,
	184, 182, 182, 182, 182, 182, 182, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 180, 180, 294, 294, 294, 294, 293, 293,
	293, 125, 125, 130, 130, 132, 132, 132, 132, 132,
	132, 132, 132, 135, 199, 199, 472, 472, 153, 153,
	154, 154, 154, 154, 155, 155, 155, 155, 155, 157,
	157, 157, 158, 158, 158, 158, 158, 158, 159, 160,
	160, 156, 156, 156, 178, 178, 235, 235, 236, 236,
	234, 234, 238, 238, 131, 131, 133, 133, 133, 133,
	138, 138, 139, 139, 140, 140, 301, 301, 301, 144,
	144, 144, 146, 145, 145, 145, 145, 145, 145, 147,
	147, 457, 458, 458, 459, 459, 459, 459, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 461, 461,
	462, 462, 148, 148, 150, 151, 151, 149, 149, 149,
	149, 149, 149, 161, 161, 152, 164, 164, 164, 164,
	165, 165, 122, 122, 122, 122, 122, 122, 122, 122,
	259, 259, 167, 167, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 193, 193, 193, 193, 193, 193,
	170, 170, 170, 170, 170, 170, 170, 116, 116, 194,
	194, 194, 137, 136, 136, 119, 119, 118, 118, 195,
	195, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 187, 187,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 192, 192,
	192, 192, 192, 469, 469, 189, 189, 188, 188, 188,
	188, 188, 188, 112, 112, 112, 112, 112, 302, 302,
	302, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 69, 69, 206, 206, 115, 115, 204,
	204, 205, 207, 207, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 177, 177, 177, 208, 208, 196, 196, 124,
	209, 209, 210, 211, 211, 212, 212, 215, 228, 228,
	228, 229, 229, 229, 229, 179, 179, 179, 230, 230,
	230, 230, 230, 172, 172, 171, 171, 171, 173, 173,
	173, 173, 174, 174, 473, 473, 233, 233, 232, 232,
	231, 231, 231, 231, 231, 231, 231, 244, 244, 198,
	198, 201, 201, 200, 202, 245, 245, 250, 250, 250,
	250, 247, 247, 251, 251, 251, 251, 254, 254, 255,
	255, 255, 252, 252, 252, 252, 249, 249, 249, 298,
	298, 298, 298, 257, 257, 266, 266, 264, 264, 265,
	265, 258, 258, 317, 317, 317, 272, 272, 273, 273,
	274, 274, 268, 268, 268, 268, 269, 269, 295, 295,
	291, 291, 297, 297, 292, 292, 299, 299, 300, 300,
	300, 300, 397, 397, 398, 398, 398, 338, 338, 409,
	409, 339, 339, 410, 410, 411, 411, 406, 406, 407,
	407, 408, 408, 408, 47, 412, 412, 413, 413, 414,
	414, 414, 414, 48, 49, 49, 49, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 288, 288, 288, 288, 288, 288, 285, 285, 285,
	285, 285, 285, 286, 286, 286, 465, 466,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 9, 9, 10, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 0, 2, 3, 4, 5, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 0, 0,
	0, 2, 3, 2, 3, 12, 12, 14, 13, 15,
	5, 5, 16, 12, 9, 4, 15, 1, 6, 9,
	8, 0, 3, 3, 6, 3, 0, 3, 4, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 10, 9, 5, 7, 0, 3, 9, 9,
	9, 10, 6, 8, 2, 3, 2, 3, 3, 3,
	4, 3, 3, 2, 2, 3, 2, 2, 2, 3,
	2, 2, 3, 2, 2, 2, 3, 3, 2, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	1, 3, 0, 1, 1, 1, 1, 3, 1, 3,
	3, 0, 2, 5, 5, 5, 7, 5, 0, 3,
	0, 3, 4, 4, 0, 1, 1, 3, 2, 3,
	3, 3, 0, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 3, 3, 3, 3, 2, 4, 5, 4,
	6, 7, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	0, 1, 4, 3, 3, 3, 6, 6, 5, 5,
	5, 5, 4, 3, 5, 1, 3, 1, 3, 3,
	5, 0, 5, 0, 3, 0, 3, 0, 3, 4,
	0, 1, 1, 3, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 4, 2, 5, 8, 4, 7, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 5, 7, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 2, 5, 0, 1,
	2, 1, 3, 5, 7, 8, 7, 9, 10, 7,
	9, 10, 2, 2, 2, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 4, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 5, 5, 5, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 6, 8, 3, 6, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 3, 2, 3, 3, 2, 3,
	3, 2, 3, 4, 2, 2, 2, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 4, 4, 1,
	1, 1, 1, 1, 2, 1, 1, 1, 1, 3,
	0, 3, 0, 3, 3, 0, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 2, 3, 3, 2, 2,
	4, 3, 1, 0, 1, 3, 3, 3, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 1, 0, 1,
	1, 1, 1, 2, 2, 2, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 2, 1, 2, 1,
	2, 2, 5, 5, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 2, 2, 3,
	3, 0, 3, 0, 3, 1, 1, 0, 1, 5,
	4, 2, 3, 3, 0, 1, 0, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	3, 5, 5, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 3, 3, 1, 1, 0, 1, 1, 1,
	3, 5, 3, 3, 3, 5, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 1,
	3, 3, 3, 3, 2, 1, 11, 12, 12, 13,
	13, 0, 1, 3, 2, 1, 5, 1, 1, 0,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 2, 3, 3, 3, 3, 4, 5,
	3, 3, 4, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 4, 4,
	3, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 0,
	1, 6, 1, 4, 5, 5, 6, 0, 1, 0,
	3, 1, 1, 0, 2, 0, 8, 9, 0, 2,
	0, 1, 2, 0, 2, 1, 1, 1, 1, 4,
	3, 7, 5, 5, 1, 3, 5, 4, 9, 11,
	9, 2, 2, 3, 3, 4, 4, 4, 4, 3,
	3, 3, 3, 6, 5, 4, 4, 5, 5, 8,
	4, 5, 7, 2, 2, 2, 2, 3, 4, 3,
	4, 1, 3, 3, 3, 3, 4, 5, 5, 3,
	7, 6, 5, 2, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 4, 4, 3, 5, 3, 1,
	1, 1, 1, 6, 0, 1, 2, 0, 1, 0,
	1, 1, 2, 5, 3, 4, 4, 4, 4, 4,
	4, 3, 7, 6, 8, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 3, 1, 3, 8, 8,
	8, 11, 12, 15, 0, 3, 3, 3, 3, 5,
	3, 5, 6, 6, 4, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 8, 5,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 4,
	1, 3, 1, 1, 2, 2, 4, 4, 3, 3,
	3, 3, 3, 4, 3, 5, 5, 5, 4, 4,
	4, 4, 3, 2, 2, 6, 2, 4, 3, 3,
	4, 4, 5, 8, 6, 3, 4, 4, 2, 4,
	3, 2, 4, 5, 6, 2, 6, 6, 3, 3,
	4, 2, 4, 3, 3, 3, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 3, 2, 0, 1, 1,
	2, 4, 1, 0, 1, 2, 1, 2, 4, 4,
	5, 0, 1, 0, 3, 0, 2, 4, 4, 2,
	3, 4, 4, 5, 3, 4, 5, 4, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 3,
	0, 2, 0, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 0, 2, 2, 2, 2, 2, 2,
	0, 1, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 2, 6, 0, 1, 0, 3,
	0, 1, 0, 2, 2, 4, 1, 2, 2, 2,
	2, 2, 0, 2, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 2, 2, 1, 1,
	1, 1, 3, 1, 1, 1, 4, 5, 1, 2,
	3, 1, 1, 2, 2, 4, 0, 1, 2, 6,
	1, 3, 2, 4, 1, 1, 1, 1, 1, 5,
	5, 8, 5, 5, 8, 5, 5, 8, 2, 2,
	2, 3, 4, 4, 0, 1, 3, 1, 0, 3,
	1, 3, 1, 3, 4, 6, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 3, 2, 2,
	2, 12, 1, 3, 3, 3, 6, 7, 2, 3,
	3, 4, 4, 5, 5, 8, 8, 3, 3, 4,
	3, 4, 1, 3, 3, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 0, 5, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 4, 6, 6, 6, 4,
	8, 8, 8, 8, 4, 6, 7, 7, 7, 9,
	4, 7, 5, 4, 4, 4, 4, 2, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 6, 3, 4,
	2, 2, 2, 0, 2, 1, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 1, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	0, 2, 1, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 1, 1, 1, 0, 2,
	4, 3, 4, 1, 4, 1, 3, 4, 1, 4,
	3, 6, 2, 3, 1, 1, 0, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 0, 5, 1,
	3, 2, 3, 3, 1, 1, 3, 3, 3, 3,
	3, 1, 3, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 3, 4, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 3, 3, 0, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	2, 0, 4, 4, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -464, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -73, -22, -23, -24, -83, -87, -88, -89, -85,
	-86, -93, -94, -95, -91, -90, -30, -33, -25, -97,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -135, -465, 12, -129, 35, -78, 192,
	-455, -75, -74, -76, -77, 195, 194, 232, 196, 648,
	370, 649, 225, 73, 448, -96, 451, 452, -470, 308,
	309, 25, 43, 453, 455, 36, 37, 248, 336, 338,
	199, 449, 431, 432, 361, 696, -6, 654, 56, 77,
	193, 227, 226, 32, -8, -11, 201, -12, -13, -7,
	765, -211, 20, -105, -471, -211, -10, -9, -4, 654,
	-105, -111, 14, 15, 13, 559, -105, -355, 29, -3,
	118, 77, -8, 11, -269, -280, 98, 550, 200, -278,
	332, 334, 210, -266, -268, -276, 258, 268, 50, 212,
	211, 269, 201, 332, -266, 202, 204, 550, 200, 241,
	240, 332, 334, 273, 648, 201, -149, -299, -285, -287,
	-286, 350, 83, -284, 579, 583, 273, 586, 587, 592,
	340, 91, 53, 370, 573, 362, 371, 222, 528, 574,
	333, 339, 342, 363, 737, 372, 374, 375, 571, 572,
	55, 204, 561, 562, 565, 215, 752, 355, 223, 651,
	269, 760, 755, 757, 344, 758, 518, 610, 448, 467,
	459, 486, 652, 708, 281, 303, 456, 387, 535, 611,
	347, 296, 368, 709, 323, 291, 524, 530, 306, 451,
	612, 613, 614, 544, 249, 279, 710, 457, 300, 302,
	301, 263, 578, 307, 42, 228, 483, 661, 649, 258,
	711, 617, 704, 616, 252, 285, 615, 330, 41, 33,
	618, 251, 547, 109, 278, 712, 378, 532, 619, 504,
	379, 247, 274, 276, 292, 714, 656, 351, 234, 531,
	433, 479, 361, 128, 256, 318, 380, 715, 505, 509,
	716, 536, 337, 317, 622, 717, 718, 381, 660, 286,
	719, 203, 343, 623, 282, 720, 259, 446, 538, 348,
	503, 213, 653, 224, 57, 238, 539, 507, 625, 513,
	516, 434, 377, 435, 721, 722, 723, 724, 359, 357,
	627, 358, 360, 629, 270, 298, 657, 626, 659, 62,
	198, 663, 511, 510, 512, 299, 677, 534, 491, 489,
	725, 726, 352, 219, 727, 728, 490, 23, 729, 730,
	542, 322, 354, 731, 732, 733, 628, 295, 633, 609,
	734, 735, 533, 506, 508, 257, 127, 648, 280, 736,
	356, 529, 365, 664, 655, 341, 293, 634, 738, 383,
	294, 237, 230, 543, 428, 429, 444, 445, 373, 739,
	432, 740, 741, 742, 743, 335, 334, 452, 366, 635,
	453, 275, 304, 658, 744, 636, 637, 745, 746, 267,
	250, 546, 537, 61, 520, 515, 369, 384, 458, 430,
	441, 436, 437, 439, 440, 443, 442, 438, 447, 523,
	449, 277, 244, 638, 639, 640, 431, 641, 12, 297,
	349, 642, 643, 644, 527, 367, 305, 268, 271, 494,
	239, 747, 748, 481, 482, 450, 242, 232, 122, 545,
	388, 328, 703, 332, 385, 290, 60, 245, 54, 749,
	750, 272, 246, 662, 289, 454, 346, 665, 201, 83,
	-289, -284, -287, -288, -285, -286, 350, 233, 59, 96,
	64, 63, 83, -284, 648, 145, 487, 535, 192, 525,
	526, 532, -348, 533, 240, 428, 369, 243, -304, 201,
	-262, 242, 524, 337, 356, 583, 246, 247, 274, 429,
	435, 202, 203, 38, 537, 536, 528, -299, -98, 454,
	-98, -98, 205, 454, -113, 234, 196, -149, 233, -68,
	83, 310, -68, 35, 83, -161, -291, -299, 83, -284,
	42, 83, 453, 527, 527, 85, 655, 249, 27, -444,
	-418, 365, -443, -416, 193, 192, 15, 194, 273, 370,
	371, 336, 202, 13, 36, 737, 220, 372, 373, 11,
	225, 374, 375, 241, 14, 376, -445, -421, 389, 390,
	391, 392, 393, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 82, 83, -284,
	-264, 207, 373, 428, 450, 428, 428, -271, -270, 386,
	513, 145, -128, 707, -126, -134, -301, -299, -285, -286,
	-199, -472, 254, 550, -258, 332, -278, 206, -130, -132,
	-133, -153, -136, 705, -465, -131, -457, -149, -137, 83,
	608, -109, 10, -108, -110, 9, 8, -109, -229, 22,
	21, -267, -106, -229, -466, 79, -466, -128, -120, 135,
	-122, -299, -166, 101, -176, 34, 30, -175, 350, 233,
	-167, -203, -285, -202, -137, 145, -303, 133, 134, 142,
	102, 188, -187, -185, -186, -188, -190, -191, 228, 481,
	482, 82, 84, 92, 85, 86, 87, 88, 93, 94,
	95, -291, -287, -286, -283, 579, 583, 586, 587, 592,
	-200, -465, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 67, 68, 577, 200, 560, 561,
	484, 562, 13, 563, 564, 565, 650, 222, 569, 104,
	56, 327, 551, 552, 556, -192, 553, 557, 558, 571,
	572, 573, 574, 207, 550, 139, 559, 596, 597, 598,
	599, 600, 601, 602, 603, 605, 606, 604, 580, 581,
	582, 584, 585, 588, 589, 590, 591, 593, 594, 595,
	679, 197, 193, 196, 100, 29, 31, 680, 255, 103,
	465, 499, 568, 21, 25, 216, 199, 487, 214, 144,
	209, 217, 312, 314, 192, 71, 681, 548, 313, 525,
	675, 672, 674, 673, 478, 476, 311, 682, 15, 32,
	226, 262, 683, 474, 194, 253, 107, 108, 684, 47,
	46, 8, 315, 227, 321, 475, 685, 686, 24, 74,
	218, 16, 212, 243, 759, 687, 336, 18, 126, 19,
	688, 669, 671, 670, 206, 120, 202, 751, 69, 260,
	689, 463, 468, 469, 470, 471, 472, 464, 97, 690,
	691, 117, 326, 65, 608, 38, 248, 705, 566, 325,
	692, 44, 43, 498, 502, 497, 324, 514, 118, 22,
	554, 555, 36, 693, 694, 236, 501, 462, 496, 706,
	695, 667, 265, 72, 386, 477, 763, 39, 75, 231,
	382, 353, 48, 98, 20, 261, 70, 40, 575, 123,
	764, 480, 208, 240, 696, 540, 264, 697, 124, 473,
	707, 220, 119, 455, 195, 364, 309, 221, 331, 26,
	338, 698, 254, 125, 526, 666, 699, 570, 35, 225,
	308, 461, 210, 700, 266, 320, 310, 319, 701, 702,
	345, 49, 761, 678, 201, 45, 106, 500, 460, 495,
	205, 567, 241, 316, 9, 50, 37, 521, 14, 376,
	73, 76, 488, 485, 493, 492, 211, 762, 17, 329,
	576, 654, 541, 99, 676, 522, 549, -105, -105, -105,
	-247, 450, -254, -251, 536, 537, -252, -255, -249, -203,
	513, 734, 735, 535, 487, 534, -291, -299, -285, 350,
	233, 145, 580, 581, 582, 104, 484, 560, 596, 551,
	553, 548, 552, 550, 34, 597, 30, 95, 598, 577,
	207, 13, 188, 584, 585, 599, 600, 601, 67, 554,
	555, 650, 139, 101, 602, 603, 93, 605, 606, 327,
	559, 68, 604, 200, 590, 589, 588, 591, 563, 564,
	94, 556, 557, 558, 56, 594, 593, 595, -2, -6,
	-465, -149, -356, -343, -346, -291, -285, -287, -288, 229,
	-286, 217, -384, 83, -284, 214, -211, -105, 202, 204,
	559, -265, 207, -265, 241, 240, 273, -279, 266, -265,
	-265, 738, 201, -278, 110, 110, -79, -149, -420, -415,
	-421, 201, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, 83, -289, -149, 189, -84, -149, -141, 16, 16,
	76, 76, 83, -289, 83, 434, 377, 35, -263, 118,
	17, 550, 200, 201, 240, 241, 204, 273, -263, -350,
	16, 120, 244, 244, 244, 244, 244, 245, 244, -261,
	527, 529, 530, 531, -260, 16, 120, 17, -123, 118,
	24, -465, -229, -229, -260, 244, 136, -100, 100, -100,
	83, 453, 205, -114, 235, -113, -114, -178, -156, 29,
	6, 7, 110, 35, 35, 82, 60, 35, -63, -62,
	-64, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 35, -399, 77, 189, -338, 513, 83,
	-412, -413, -149, 85, 85, 75, 356, 75, 78, 205,
	78, 75, -446, 366, 77, -446, 334, 366, 367, 268,
	332, 204, -446, -446, 334, -446, -446, -446, 353, -446,
	-446, 527, -446, -446, -446, 368, 369, -446, 525, 204,
	-446, -446, -446, -446, -446, 80, 27, -444, -418, 365,
	30, 430, 433, 540, 654, -55, 446, 447, -168, 27,
	-376, 145, 378, 379, 380, 381, 377, 356, 382, 383,
	384, 244, 385, 201, 527, 377, -6, -126, 78, -233,
	-465, 78, -200, -465, 83, -331, -330, -327, -328, -329,
	-326, 34, 201, -264, 273, -144, -146, -145, -147, 65,
	69, 71, 66, 67, 68, 528, 72, -274, 29, -136,
	-465, -125, -9, -135, -130, -465, -154, 123, -164, -274,
	-155, 73, 206, 74, 29, -156, -157, -158, -159, -160,
	6, 7, 55, -465, -465, -7, -8, 27, 28, -14,
	-7, -12, -14, 27, 28, 27, 28, -7, -230, 24,
	36, -179, 85, 88, -203, -212, -215, -122, -299, 59,
	-117, 27, 28, 66, 58, 64, 63, -226, 90, 16,
	-294, 100, 98, 99, 117, -293, 29, 83, 82, -289,
	189, -122, -170, 120, 101, 118, 119, 103, 130, 129,
	141, 133, 134, 135, 136, 137, 138, 139, 131, 132,
	144, 140, 110, 111, 112, 113, 114, 115, 116, -259,
	-465, -137, -465, 189, -465, 189, 190, 191, 189, -176,
	-176, -176, -176, -176, -176, -176, 82, 82, 82, -465,
	189, 189, 189, -465, -465, -465, -465, -465, -195, -122,
	654, -465, 201, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -206, -122,
	-465, -465, -469, -465, -469, -469, -189, -469, -465, -189,
	-189, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -189, -189, -189, -465, -258, -258, 16, -141,
	-142, -149, -152, -299, 78, -248, -253, 538, 540, 450,
	-252, -252, -298, -291, 82, 34, 145, -354, 110, 121,
	35, 189, -211, 79, 78, -306, -310, -312, -311, -313,
	-308, -309, -69, 491, 489, 485, 484, 487, 490, 145,
	488, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 35, 228, 481, 482, 483, 665, 505, 506,
	507, 508, 509, 211, 510, 511, 512, 459, 486, 652,
	460, 461, 462, 463, 464, 465, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, -306,
	-306, -306, -306, -306, -290, -384, 83, -289, 77, -229,
	-267, -265, -265, -280, 210, -278, 83, 101, 83, -148,
	-291, -299, -161, -265, 267, -424, -423, -415, -418, 678,
	-265, -279, -415, 272, 270, 271, 78, 205, 78, 205,
	80, -264, -291, -143, -149, 83, 83, -148, -161, -417,
	-415, -418, -162, -291, -299, -300, -299, -282, -287, -288,
	679, 197, 27, 193, 196, 100, 29, 31, 680, 255,
	103, 465, 145, 580, 581, 582, 499, 568, 21, 25,
	216, 104, 199, 484, 487, 214, 144, 209, 217, 312,
	314, 560, 596, 192, 71, 681, 551, 553, 548, 552,
	313, 550, 525, 675, 672, 674, 673, 478, 476, 311,
	34, 682, 15, 597, 32, 226, 262, 28, 683, 137,
	474, 194, 607, 253, 107, 108, 684, 47, 46, 8,
	30, 315, 227, 95, 321, 598, 475, 685, 686, 24,
	74, 218, 16, 212, 243, 759, 687, 336, 18, 577,
	126, 19, 688, 669, 671, 670, 207, 206, 120, 202,
	751, 69, 260, 13, 689, 463, 468, 469, 470, 471,
	472, 464, 188, 97, 690, 691, 117, 326, 65, 584,
	585, 608, 51, 38, 248, 599, 600, 705, 601, 566,
	325, 692, 44, 43, 498, 502, 497, 324, 514, 67,
	118, 22, 554, 555, 36, 693, 694, 650, 236, 501,
	462, 496, 706, 695, 667, 139, 265, 72, 101, 386,
	602, 603, 93, 477, 763, 39, 75, 231, 382, 353,
	48, 98, 20, 261, 70, 40, 575, 123, 764, 605,
	480, 208, 240, 696, 540, 264, 697, 124, 606, 473,
	707, 220, 119, 455, 195, 327, 559, 364, 309, 221,
	331, 26, 338, 68, 698, 254, 125, 604, 200, 526,
	666, 11, 699, 570, 35, 225, 308, 461, 210, 700,
	266, 320, 310, 319, 701, 58, 702, 345, 49, 590,
	589, 588, 591, 761, 66, 563, 564, 678, 201, 45,
	106, 500, 460, 495, 205, 567, 241, 94, 316, 9,
	50, 37, 521, 14, 376, 73, 76, 556, 557, 558,
	56, 488, 485, 493, 594, 492, 593, 595, 211, 762,
	105, 17, 329, 576, 654, 541, 99, 676, 522, 14,
	194, 78, 82, -242, 83, -289, 82, -242, -241, -242,
	-241, 244, -263, 82, -303, -122, -265, -265, -149, -149,
	-149, -149, -149, -149, -263, -263, -263, -263, -260, 16,
	-260, -263, -299, -299, -122, -176, -415, 552, 135, -263,
	-299, -101, -99, 219, -99, -101, 83, 83, 453, -92,
	-4, -18, -16, -17, -114, -9, 39, 29, 29, 83,
	-63, -63, 82, -63, 78, 110, -63, -178, 79, -195,
	-291, -397, 751, 78, -414, 29, 540, 541, 514, -448,
	201, 243, 240, 75, -448, -443, 373, -417, -416, -415,
	-446, -447, -291, -446, -446, -446, 527, -446, -446, -446,
	-446, -446, -446, -446, -446, -446, -421, 75, 78, 356,
	75, 16, 75, 205, -379, -381, 444, 445, 541, 542,
	457, 377, 377, 377, 377, 377, 377, -377, -141, 654,
	-377, -141, 205, 255, -134, 29, -232, -231, -292, -285,
	-286, -287, -288, 229, -291, -282, -472, -331, -328, -327,
	-329, 487, 535, 144, 547, -149, -415, -162, -132, -132,
	-130, -132, 65, 65, 65, 70, 65, 70, 70, 65,
	65, -145, -301, -274, 78, -466, -466, -466, -9, -465,
	-301, -164, -274, 202, 202, 202, 103, 16, 53, 27,
	103, 16, 53, 27, 103, 16, 53, 27, -119, -118,
	-121, 135, -122, -299, -176, -243, 97, 14, 120, 78,
	23, 78, -228, 31, 32, 189, -177, 60, 85, 88,
	-243, 78, -120, -149, -122, -122, -122, -193, 93, 101,
	94, 95, -293, 229, 135, -300, -292, -287, -285, -286,
	350, 233, -282, -176, -194, -200, -137, 89, 120, 118,
	119, 103, -176, -176, -176, -176, -176, -176, -176, -176,
	-176, -176, -176, -176, -176, -176, -176, -302, 83, 82,
	145, -176, 83, -292, -118, -292, -175, 228, 481, 482,
	93, -175, -291, -291, -107, 27, 28, -292, 528, -291,
	-292, -107, -107, -107, -107, -107, 78, -466, -118, -118,
	-118, -466, -122, -122, -118, -176, -118, -203, 82, -118,
	-203, 82, -118, -176, 566, 567, 568, -118, -118, -107,
	-204, -205, 105, -203, -285, -288, 350, 233, -118, -466,
	85, -182, -183, 657, 666, 667, 669, 672, 665, 664,
	663, 661, 660, 659, 662, 658, 676, 675, 674, 673,
	671, 670, 668, -182, -182, -184, 228, 483, 481, 482,
	-118, -119, -118, -118, -466, -466, -121, -118, -121, -118,
	-118, -121, -466, -466, -466, -118, -118, -118, -118, -118,
	-118, -118, -118, -118, -118, -118, -118, -466, 85, -151,
	97, -149, -125, -149, -141, -467, 16, 76, -467, 78,
	189, -251, -254, 78, 539, 541, 542, -248, -323, -324,
	144, 75, 96, 82, -122, -292, -300, -229, -375, -343,
	-344, -345, -346, -368, 217, -383, 208, 210, 212, 211,
	50, -347, 218, 202, 51, -307, -333, 520, 521, -315,
	77, -314, 77, -69, 485, 484, 487, -314, 485, 492,
	-314, 492, 492, -314, -314, -314, -314, 485, 77, 77,
	-315, -315, -315, -314, -335, 77, -335, 480, -336, 77,
	-336, -336, -336, -336, -307, -307, -307, -307, -307, -384,
	-122, -230, -291, -149, 204, 738, -331, 30, -331, -70,
	255, 223, 189, 77, -162, 258, 259, -419, 78, 34,
	-425, 333, 85, 207, -149, 233, -149, -149, -415, -415,
	-421, -141, 75, 78, 78, 189, 717, 717, -149, 78,
	82, 83, 83, -178, -351, 16, 120, -263, -149, -178,
	-116, 229, 76, -469, -466, 455, 456, 83, -92, -176,
	39, 39, -62, -175, -291, 79, -398, 206, 559, 82,
	-413, -301, 513, 541, -449, 135, -291, -448, -449, -452,
	654, 205, 79, 78, -446, -448, 336, 78, -448, -417,
	-415, -378, -380, 436, 438, 439, 437, 440, 441, 442,
	443, 78, 110, 110, 458, -382, 24, -377, 540, -377,
	82, -176, -136, -466, 78, 189, -200, 35, -353, -354,
	-353, -353, -82, -390, -360, -80, -388, 123, 197, 194,
	193, 269, 199, -326, 560, 252, 251, 285, 286, 74,
	36, 198, 195, -72, -81, 232, 291, 237, 292, 196,
	231, 293, 230, 294, 654, 289, 758, 518, 610, 611,
	644, 91, 614, 249, 42, 202, 624, 617, 547, 620,
	621, 378, 619, 623, 213, 627, 626, 628, 630, 631,
	632, 342, 635, 636, 637, 250, 638, 639, 640, 367,
	645, 9, -426, -425, -432, 75, -139, -138, 75, 76,
	-140, 75, -138, 65, 65, 65, -236, 77, -301, -130,
	-466, -238, -291, -164, -301, -465, -465, -465, -176, -176,
	120, -176, -176, 120, -176, -176, 120, -466, 78, 189,
	78, -240, 41, 40, -291, 515, 727, 61, -179, -179,
	-215, -257, 24, 16, 56, 56, -127, 16, -226, -226,
	93, 94, 95, 189, -465, -194, -176, -176, -176, -116,
	100, -466, -466, -119, -118, -118, -118, -118, -118, -122,
	-466, -466, -466, 78, 76, 29, -466, 76, 120, -466,
	16, 16, -466, 16, 16, -466, -466, 16, -176, -176,
	-176, -466, -466, -118, -207, -205, 107, -122, -466, -466,
	-466, -466, -466, 78, 78, 16, 78, -466, -466, -466,
	-466, -216, 575, -216, -466, -466, -466, -466, -466, -466,
	-216, -216, -216, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -237, 123, -149, 35,
	-237, 76, -125, -125, -152, -299, 135, -253, -256, 543,
	540, 546, 83, 82, 145, 82, 189, -230, -359, -374,
	78, -360, 758, 518, 610, -326, 611, 644, 91, 614,
	249, 42, 202, 624, 617, 547, 620, 621, 378, 619,
	623, 213, 627, 626, 628, 630, 631, 632, 342, 635,
	449, 636, 637, 250, 638, 639, 640, 367, 645, 9,
	654, 77, -352, -290, -383, 83, -284, 51, -347, -349,
	-347, -347, -347, -352, 83, -284, -352, 51, 720, 93,
	101, -322, -324, 145, -319, -320, -337, -340, -316, 29,
	759, 523, 220, -346, 487, 535, 34, 75, 518, 208,
	51, 50, 212, 91, -334, 522, 85, 85, 586, -314,
	492, -314, -314, -314, -314, -314, -341, 82, -341, 85,
	-335, 85, 79, -295, 76, -233, -149, 678, -71, 13,
	14, 15, -291, -400, -401, -402, -291, 120, 260, 261,
	75, -435, 364, -423, 334, 343, 100, 21, 654, -456,
	101, 205, 205, -394, 221, 216, -149, -149, -415, -291,
	75, 75, -242, -165, 17, 83, 83, -260, -263, -176,
	-418, 246, 247, -176, -176, -150, 97, -414, 205, 189,
	189, -449, 205, 355, -417, -291, -449, 353, 336, -449,
	-54, 206, 16, 78, 110, 110, 110, 110, 110, 110,
	110, 110, -381, 77, 77, 387, 36, -231, -292, -353,
	83, 82, 145, 83, 82, 145, 82, -389, 78, -390,
	197, 194, 285, 286, -388, 21, -275, -347, -396, -395,
	-345, -346, 123, 209, 217, 217, 214, -275, -347, 208,
	218, 123, 217, 214, -275, 202, -353, -275, 487, 144,
	205, 38, 38, 367, 123, 367, 123, -353, -275, 209,
	-347, -272, 217, -273, 205, 29, 290, 123, 123, 123,
	123, 123, 123, 123, 123, 295, 678, -353, -353, -353,
	-353, -353, -353, -353, -353, 616, 616, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-357, -453, 82, -463, 91, 273, 342, 83, -284, -282,
	85, 87, 86, -353, -353, -438, 654, -163, 195, 279,
	275, -122, 77, -122, -234, -291, -236, -466, 78, -164,
	-234, -234, -234, 100, 205, -465, 100, 205, -465, 100,
	205, -465, -274, -121, 135, -300, 82, 78, 82, 82,
	516, 62, -149, -165, 607, -125, -120, 135, -292, -119,
	-116, 100, -176, -466, -466, -466, -466, -466, -466, -305,
	145, 484, 487, 228, 483, 476, 474, 473, 475, 503,
	489, 520, 481, 521, 665, -302, -305, -302, -176, -176,
	-176, -176, -176, -176, 16, 16, 16, 651, -211, 109,
	-122, 106, -176, -176, -176, -176, -291, -221, -465, -216,
	-216, -216, -216, -216, -216, -217, -216, -217, -217, -217,
	-217, -217, -217, -217, -217, -217, -217, -217, -172, -173,
	35, -171, -9, -465, -174, -473, 56, 60, -465, -245,
	-250, -203, -285, -288, 229, -165, -125, -165, -165, 189,
	540, 544, 545, -374, -353, -353, -353, 535, 487, 144,
	-353, -353, -353, -353, -353, 616, 616, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, 450, -353, -353, -353, -353, -353,
	-353, -357, -453, -353, -353, 678, -370, -369, 83, -289,
	208, 50, -383, -352, -352, -352, -352, -352, -102, -290,
	93, -465, 760, 85, -149, 35, 83, 145, 82, -175,
	134, -303, -167, -186, -465, 94, 95, 551, 552, 556,
	553, 557, 558, 571, 572, 573, 574, 548, 554, 555,
	14, 51, 51, 51, 82, 79, 79, 79, -314, 79,
	78, 79, 78, 79, 78, -169, 712, 713, 75, -291,
	29, -233, 85, 75, 79, 78, -306, -291, -291, -291,
	275, -438, 339, -436, -434, 345, 346, 347, 348, 349,
	-418, 344, -425, 341, 82, 83, 82, 677, 711, 732,
	704, 30, -149, -415, -235, 77, -234, -235, -122, -178,
	-237, 201, -417, 135, 135, -291, 205, -417, 353, -451,
	654, 16, 16, 353, 16, 388, -417, -380, 82, 82,
	82, 85, 85, 85, 85, 85, -141, -141, 82, 83,
	82, 145, -359, -80, 197, 194, 285, 286, -361, -362,
	-365, -364, 124, 625, 692, 77, -342, 83, -289, -265,
	-268, 210, 208, -465, 83, -290, -290, -290, -264, 51,
	51, -238, -290, -290, -291, -290, 34, 282, 283, 284,
	83, 35, -353, 487, -238, 27, -238, 27, 34, 339,
	287, 288, -342, -290, -291, -149, 218, 214, -290, -238,
	27, 85, -238, -291, -238, 27, -238, 27, -238, 27,
	-238, 27, 646, -357, -122, -357, -463, -463, 82, 82,
	82, -353, -353, -104, 647, 219, -463, 82, -104, -463,
	-453, 82, -103, 219, 222, 224, -357, -357, -357, -463,
	-463, -463, -463, 82, -358, 34, 618, 479, 613, 634,
	612, 83, 93, 82, 82, -463, 34, -463, 34, -463,
	-357, 641, -463, -465, -439, -437, 357, 358, 359, 360,
	-431, 251, 252, 205, 280, 101, -428, 757, 276, -234,
	79, 78, -154, -291, -466, -466, -466, -176, -176, -176,
	-176, -176, -176, -176, -176, -176, -301, 189, 530, -291,
	-321, -322, -208, 18, -226, -466, -176, -217, -217, -217,
	-217, -217, -466, -315, -315, -315, -315, -336, 480, -315,
	464, -315, 464, -466, -466, -466, -466, 24, 24, 24,
	24, -466, -176, -176, -176, -465, -115, 570, -122, 78,
	78, -466, -466, -296, 83, -244, 75, -244, -245, -274,
	-9, -466, -232, -174, -465, 11, 56, 60, 654, 201,
	-198, -201, -472, -238, -165, 78, -354, -354, -354, -354,
	-211, -165, -357, -357, -357, -353, 35, -353, -463, -463,
	82, 82, 82, -353, -353, -104, -463, 82, -104, -463,
	-453, 82, -103, -357, -357, -357, -463, -463, -463, -463,
	82, -358, 83, 93, 82, 82, -463, 34, -463, 34,
	-463, -357, 641, -463, -465, 646, 79, 78, -315, -315,
	51, -349, 77, -176, 29, 77, 83, 145, 82, -175,
	82, -176, -192, 82, 85, 85, -149, -225, 29, -456,
	-149, -403, -404, -405, 91, 653, 101, 262, 263, 219,
	264, 265, 266, -402, -306, -306, -306, -428, -441, -442,
	-440, 342, 362, 363, 350, 100, 82, 82, 82, -427,
	333, 100, 342, 21, 29, 21, 29, 82, 82, 82,
	82, 85, 76, -234, -263, -321, -149, -451, -417, -451,
	336, -417, -417, 16, -417, 332, -54, 79, 79, -366,
	633, -465, 530, 622, 51, -342, -213, 222, 223, -306,
	-306, -352, -349, 51, -385, -387, 123, -291, -290, 712,
	713, 712, 713, 35, 194, 750, 720, -342, -353, -302,
	35, 367, 367, 367, 367, -213, -273, 205, 51, -290,
	205, 367, 367, 97, 654, 82, 82, 615, 629, -454,
	-453, -437, 85, 85, 85, 85, -318, 91, 75, -162,
	280, -432, 75, -181, -175, -186, -175, 79, -291, 78,
	78, 78, 135, -465, -406, -261, -209, 19, 21, -321,
	83, -321, 83, -176, -176, -176, -176, -466, -466, -466,
	-176, -466, 82, -176, -176, -197, 123, -239, 26, 33,
	-239, -244, -301, -466, -174, -465, -466, -466, 78, -200,
	-465, -466, -211, -250, -122, -122, -122, -122, -229, -302,
	-353, -325, -453, 82, 82, 82, 615, 629, -454, -372,
	-371, 76, 213, 91, 619, 637, 750, 720, -369, -228,
	-228, -352, -352, -234, -466, -465, -234, -466, 79, 79,
	77, -227, -225, 24, -226, -405, 82, 266, 262, 266,
	266, 266, 266, 267, -432, -422, 91, 340, -440, 351,
	718, 335, 364, 85, 85, 122, 36, 37, -434, 21,
	654, -425, 341, 82, 82, 341, 82, 82, 333, -456,
	42, 79, -406, -450, 29, -451, -450, 353, -54, -54,
	-417, -54, -363, 642, 85, -176, -465, -465, -277, 269,
	79, 83, -307, -307, -295, -265, -352, -466, 78, -291,
	34, 34, -213, -302, -302, -290, -291, -290, 205, -290,
	-465, 201, 78, -466, 330, 82, 369, -163, -433, -183,
	-176, -176, -176, -458, -459, -292, 725, -407, 44, -410,
	45, -219, 576, -210, -122, -196, -124, -122, -466, -466,
	-466, -466, -112, 120, 654, -466, -466, -211, 21, -117,
	51, -239, -236, -174, -9, -465, -201, -466, -229, -302,
	-466, -371, -453, -353, 82, -353, -353, 79, -332, 762,
	761, -176, 79, -370, -9, -465, -227, 253, -227, 42,
	42, 258, 259, -431, 82, 82, 34, 352, 188, 34,
	85, 188, 578, 341, 82, 83, 342, 342, 21, -176,
	-407, -415, -450, -54, -386, -465, 21, -466, -234, -176,
	-465, 110, 77, -352, 77, -387, 56, -176, 144, 144,
	205, -290, -385, -149, -453, -225, -431, 133, -429, 277,
	-466, -466, -466, -466, 78, -306, 24, 82, 609, -408,
	-409, -339, 48, 21, -218, -220, -291, 78, -466, 652,
	72, 655, -222, 125, 124, -195, 14, -9, 85, 82,
	82, 220, -466, 79, -225, -9, -9, -465, 254, -27,
	-4, -16, -17, -18, -19, -21, -73, -22, -23, -28,
	-29, -24, -83, -87, -88, -89, -85, -96, -94, -95,
	-91, -90, -32, -34, -35, -37, -40, -41, -38, -39,
	-36, -30, -33, -42, -25, -43, -44, -45, -50, -51,
	-31, -52, -46, 104, 207, 449, 311, 322, 323, 324,
	83, 327, 329, 325, 326, 321, 331, 448, -318, 85,
	34, 85, 34, 354, 342, 29, 85, -317, 206, 654,
	-385, -364, -466, -466, -234, 85, -370, -295, -370, 238,
	-353, -302, -290, -466, -72, 654, -27, -318, 188, -430,
	278, -181, -466, -459, -460, 609, 30, 731, 530, 82,
	49, 45, -411, 46, 47, 82, 78, 29, -124, 62,
	653, 656, -466, -223, 103, -224, 122, 578, -180, 85,
	188, -223, -245, -466, -149, -332, -373, -372, -281, 654,
	-466, -225, -9, -214, 256, 257, -225, -122, -57, -58,
	105, -122, 83, -67, -297, 314, 315, 316, -292, 83,
	83, -56, -27, 81, -56, -122, 83, 83, -468, 16,
	59, -176, 109, -56, 330, 661, 661, 82, -236, 85,
	334, -466, 622, 51, -466, 79, 77, 79, 239, -302,
	290, -225, 330, -175, -181, -433, -274, 82, 609, -465,
	530, 21, 21, 21, 21, -220, -221, 62, -224, 127,
	128, 254, 127, 128, -175, 77, 214, 281, 513, -225,
	-281, -466, -225, 83, 83, -57, 109, 107, -58, -122,
	106, 312, 313, 317, -306, 78, 765, 448, 324, 327,
	329, 765, 330, 83, 16, 765, -225, -246, 35, 44,
	125, 34, 339, 27, -418, -465, -277, -373, -370, -373,
	-465, -225, -183, -433, -301, -461, -462, 379, 93, 34,
	82, -458, -465, 82, 82, 82, 82, 654, 100, -182,
	-234, 353, 214, 214, -281, -225, -227, 109, 107, 104,
	-56, 106, -56, 24, 24, 24, -321, -292, 109, -27,
	109, -56, -56, -56, -122, 328, -56, 97, 109, -27,
	-245, 8, -176, -465, 79, -176, 236, -27, -462, 93,
	34, -461, 93, 34, 75, 75, -175, -466, -458, 655,
	-224, 79, 353, 353, -281, -20, -26, -19, -25, -16,
	-17, -18, 448, 654, 104, -56, 765, -56, 765, -68,
	85, -9, -66, -65, 85, -68, 319, 101, 320, 83,
	-323, 324, 83, 765, 765, 765, 330, -122, 765, -61,
	83, -225, -418, -466, -176, -373, -466, -466, -225, 75,
	-175, 75, -175, 684, 379, 684, 379, 75, -466, 656,
	-392, -393, 75, -225, -56, 109, -128, 765, 109, 765,
	109, 107, -59, -60, 108, -27, 78, 318, 34, 109,
	109, 328, -56, 109, 109, 78, -367, 643, -466, 75,
	75, 379, 379, 684, 379, -393, 75, -392, 75, 15,
	14, 765, 109, 104, 207, -56, 109, 107, -60, -122,
	-65, -176, 83, 324, -122, 765, 327, 329, 83, 85,
	-367, 75, 75, -391, 221, 216, 219, 35, -391, 109,
	104, 765, 207, -56, 106, 83, 109, 109, 379, 684,
	215, 34, 93, 109, 765, -56, 327, 329, 207, 109,
	765, 83, 83, 207,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1733, 1230, 1733, 0, 1230, 0, 1230, 0, -2,
	137, 935, 936, 937, 938, 0, 1815, 0, 0, 0,
	0, 0, -2, 1192, 1193, 1196, 1193, 1193, 1222, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 737, 0, 64, 0, 1336, 2766,
	-2, 1226, 1227, 1228, -2, -2, 0, 53, 0, 60,
	2, 1741, 0, 1243, 1232, 1741, 0, 0, 49, 0,
	0, 1230, 1230, 1230, 87, 88, 0, 121, 0, 123,
	0, 0, 1733, 1230, 0, 0, 0, 1819, 1819, 339,
	1819, 1819, 1834, 0, 1837, 337, 0, 1816, 1832, 1833,
	1835, 0, 0, 0, 0, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 0, 0, 1106, 1427, 1429, 1430,
	1431, 1432, 1846, 1847, 2757, 2758, 2759, 2760, 2761, 2762,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2763, 2764, 2765, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 0, 0,
	0, 1111, 1112, 1113, 1114, 1115, 2751, 2752, 2753, 2754,
	2755, 2756, 1124, 1125, 0, 0, 0, 1183, 0, 1183,
	1143, 1144, 0, 1146, 0, 0, 0, 0, 0, 0,
	0, 1180, 1158, 1161, 1165, 0, 1741, 1741, 1180, 1171,
	0, 789, 790, 791, 1188, 1189, 1177, 1190, 1195, 1194,
	1203, 1203, 0, 1194, 1224, -2, 1224, 1364, 0, 465,
	467, 0, 488, 0, 491, 494, 1433, 0, -2, -2,
	1857, 1209, 0, 0, 1883, 1884, 0, 0, 0, 0,
	0, 2623, 237, 353, 278, 278, 278, 278, 278, 278,
	278, 0, 278, 278, 0, 278, 278, 278, 2639, 278,
	0, 278, 278, 278, 278, 278, 236, 352, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276, 277, 342, 343, 344,
	0, 0, 0, 741, 1197, 746, 744, 0, 738, 735,
	736, 0, 80, 0, 67, 81, 1766, 1386, 1387, 1388,
	1333, 0, 1337, -2, 0, 1817, 0, 1822, 69, 1323,
	1324, 1325, -2, 0, 0, 1331, 1332, -2, 1483, 1846,
	0, 0, 1237, 0, 0, 1234, 1240, 0, 1748, 0,
	0, 119, 1231, 47, 48, 2767, 59, 0, 0, 1259,
	1314, 0, 1442, 2319, 1448, -2, 2232, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 2177, 0, 0, 0, 0,
	0, 2274, 1522, 1523, 1524, 1525, 1526, 1527, 2486, 2704,
	2705, 1711, 1715, 1716, 1717, 1718, 1719, 1720, -2, -2,
	-2, 1694, 1695, 1709, 0, 2757, 2758, 2760, 2761, 2762,
	1784, 0, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 2300, 2364, 2251, 2369, 2196, 2763,
	2188, 2764, 2265, 2393, 2394, 2765, 2308, 2736, 0, -2,
	2418, 2356, -2, -2, -2, 1590, -2, -2, -2, 2747,
	2748, 2733, 2738, 2258, 2206, 2316, 2357, 2197, 2218, 2237,
	2286, 2287, 2289, 2321, 2322, 2340, 2349, 2368, 2178, 2179,
	2180, 2281, 2282, 2390, 2389, 2388, 2391, 2424, 2422, 2425,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2181, 2182, 2183, 2184, 2185, 2187, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2198, 2199, 2200, -2, 2205, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2216, 2217, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2233, 2234, 2236, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2252, 2253,
	2254, 2255, 2256, 2257, 2259, 2260, 2261, 2262, 2263, 2264,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2275, 2276,
	2277, 2278, 2279, 2280, 2283, 2284, 2285, 2288, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2301, 2302,
	-2, -2, 2305, 2306, 2307, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2317, 2318, 2320, 2324, 2325, 2326, 2327, 2328,
	2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338,
	2339, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2350,
	2351, 2352, 2353, 2354, 2355, 2358, 2359, 2360, 2361, 2362,
	2363, 2365, 2366, 2367, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2392, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2419, 2420, 2421, 2423, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 0, 1821, 1821, 0,
	106, 2706, 0, 1791, -2, -2, 1793, 0, 0, 0,
	-2, -2, -2, -2, 2189, -2, 1694, 0, 0, 0,
	0, 2177, 2178, 2179, 2180, 2186, 2188, 2196, 2197, 2201,
	2202, 2203, 2204, 2206, 2215, 2218, 2232, 2235, 2237, 2251,
	2258, 2265, 2274, 2281, 2282, 2286, 2287, 2289, 2300, 2303,
	2304, 2308, 2316, 2319, 2321, 2322, 2323, 2340, 2349, 2356,
	2357, 2364, 2368, 2369, 2388, 2389, 2390, 2391, 2393, 2394,
	2405, 2415, 2416, 2417, 2418, 2422, 2424, 2425, 122, 1733,
	0, 124, 0, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 815, 1840, 1841, 0, 1741, 1243, 1819, 1819,
	337, 0, 0, 0, 0, 0, 1819, 332, 0, 0,
	0, 0, 1819, 339, 0, 0, 1086, 0, 1087, 0,
	347, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1130, 1131, 1105, 0, 1107, 98, 1110, 0, 0,
	0, 0, 1128, 1129, 1132, 0, 1174, 1183, 1134, 0,
	0, 1819, 1819, 0, 0, 0, 0, 0, 1142, 0,
	817, 818, 1183, 1148, 1149, 1183, 1183, 1183, 1180, 0,
	1180, 1155, 1178, 1179, 1183, 0, 0, 0, 1160, 0,
	0, 0, 1168, 1169, 1183, 1173, 0, -2, 1201, -2,
	1210, 0, 0, 79, 1225, 1224, 0, 1229, 1365, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 490, 471,
	0, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 1364, 0, 0, 1852, 1858, 1214,
	1874, 1875, 0, 1885, 1886, 282, 0, 282, 0, 0,
	0, 0, 204, 278, 0, 206, 278, 278, 278, 0,
	278, 278, 213, 214, 278, 216, 217, 218, 278, 220,
	221, 278, 223, 224, 225, 278, 278, 228, 278, 278,
	231, 232, 233, 234, 235, 351, 0, 0, 0, 2623,
	1818, 0, 0, 0, 0, 742, 747, 748, 743, 745,
	714, 0, 0, 0, 0, 719, 720, 721, 722, 0,
	0, 725, 726, 731, 731, 0, 65, 66, 0, 0,
	0, 1336, 1334, 0, -2, 940, -2, 690, 691, 692,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 1389,
	0, 0, 1392, 0, 0, 0, 0, 0, 1831, -2,
	0, 0, 0, 0, 1321, 0, 1338, 0, 1340, 0,
	-2, 0, 0, 0, 1831, 1344, 1345, 1346, 1347, 1348,
	0, 0, 0, 1485, 0, 57, 58, 1238, 1239, 54,
	62, 63, 55, 1235, 1236, 1241, 1242, 56, 73, 0,
	0, 1742, 1745, 1746, 1747, 1734, 1735, 1738, 0, 0,
	73, 1244, 1245, 1246, 1247, 1248, 1249, 0, 1233, 0,
	1260, 0, 0, 0, 0, 1315, 0, 1318, 1319, 1320,
	0, 1446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1449,
	0, 1463, 0, 0, 0, 0, 0, 0, 0, 1514,
	1515, 1516, 1517, 1518, 1519, 0, 1712, 1713, 1714, 1250,
	0, 0, 0, 1250, 1250, 1250, 1250, 1250, 0, 1489,
	2431, 0, 2396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1250, 0, 1686,
	0, 0, 1587, 0, 1588, 1589, 1591, 1605, 0, 1592,
	1593, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1600, 1601, 1602, 0, 0, 0, 0, 0,
	0, 98, 100, 1427, 0, 107, 109, 0, 0, 2706,
	1794, 1795, 681, 1809, 1810, 1811, 1812, 0, 778, 779,
	1807, 0, 1741, 832, 0, 562, 660, 580, 581, 582,
	650, 584, 652, 0, 652, 652, 1683, 1684, 652, 652,
	652, 652, 627, 628, 629, 630, 632, 633, 634, 635,
	636, 0, 0, 608, 650, 650, 650, 612, 639, 640,
	641, 642, 643, 652, 645, 646, 647, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 655, 655, 657, 657, 657, 657, 657, 562,
	562, 562, 562, 562, 0, 814, 1041, 1042, 0, 1748,
	119, 0, 0, 0, 0, 339, -2, 0, -2, 0,
	1422, 0, 0, 0, 0, 150, 375, 355, 135, 0,
	0, 333, 338, 334, 335, 336, 0, 0, 0, 0,
	346, 0, 0, 1094, 96, 1095, 1096, 1097, 1098, 1099,
	348, 1100, 1101, 377, 0, 1428, 1848, 1849, 1850, 1851,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 0,
	0, 0, 1116, 1118, 1122, 1123, 1117, 1119, 1126, 1120,
	1127, 1172, 1133, 1184, 0, 1186, 0, 0, 1364, 1138,
	1139, 1140, 1141, 819, 1147, 1150, 1151, 1157, 1183, 0,
	1364, 1156, 1181, 1182, 1159, 1477, 1162, 1603, 0, 1170,
	1191, 1207, 0, 1202, 0, 1208, 1212, 1211, 0, 1215,
	1218, 1219, 1220, 1221, 79, 1217, 0, 0, 0, 1223,
	466, 468, 470, 489, 0, 0, 492, 493, 495, 0,
	1434, 1854, 0, 0, 1877, 0, 1879, 1881, 0, 0,
	283, 284, 285, 282, 0, 238, 0, 300, 354, 0,
	205, 0, 280, 207, 208, 209, 278, 211, 212, 215,
	219, 222, 226, 227, 229, 230, 350, 282, 0, 0,
	282, 0, 0, 0, 740, 759, 0, 0, 1198, 1199,
	0, 715, 716, 717, 718, 733, 724, 727, 731, 0,
	728, 731, 0, 0, 82, 0, 0, 1768, 1771, 1772,
	1773, 1774, 1775, 1776, 1844, 1845, 0, 939, 693, 694,
	695, 0, 776, 776, 776, 686, 360, 387, 1382, 1384,
	0, 1379, 1390, 1391, 1393, 0, 1395, 0, 0, 1398,
	1399, 1400, 1368, 0, 0, 1330, 1482, 1484, 0, 0,
	1436, 1342, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 1359, 0, 0, 0, 1360, 0, 1486,
	1487, 1255, 1256, 0, 0, 45, 0, 1749, 0, 0,
	0, 0, 1737, 1739, 1740, 0, 0, 1722, 0, 0,
	70, 119, 119, 50, 1443, 1444, 1445, 1447, 1464, 0,
	1466, 1468, 1316, 1317, 1261, 0, 1696, -2, 1698, 1699,
	-2, -2, -2, 1454, 1455, 1479, 1480, 1481, 0, 0,
	0, 0, 1477, 1459, 0, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1513, 1618, 1619,
	1620, 1521, 0, 1707, 0, 1708, 1511, 0, 0, 0,
	1721, 1512, 1702, 1520, 1485, 1251, 1252, 1705, 1706, 1703,
	1704, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 1562, 0, 0, 0, 0, 0, 1495, 1711, 0,
	1495, 1711, 0, 0, 2290, 2403, 2182, 0, 0, 0,
	1692, 1689, 0, 0, 0, 0, 2751, 2752, 0, 1604,
	0, 0, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 0, 0, 0, 1287, 1288, 1289, 1290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1598, 0, 102,
	0, 1426, 0, -2, 0, 0, 94, 95, 0, 0,
	0, 1792, 0, 0, 0, 112, 113, 108, 1796, 682,
	0, -2, 1803, 1711, 1805, 1696, 0, 1748, -2, 547,
	548, 549, 550, 0, 796, 805, 0, 0, 794, 0,
	796, 796, 0, 792, 793, 553, 663, 661, 662, 583,
	0, 613, 0, 652, 652, 1683, 1684, 615, 652, 652,
	618, 652, 652, 621, 624, 625, 626, 631, 0, 0,
	609, 610, 611, 644, 600, 0, 601, 655, 603, 0,
	604, 605, 606, 607, 554, 555, 556, 557, 558, 813,
	0, 302, 1838, 1766, 0, 0, 130, 1820, 131, 0,
	398, 399, 0, 304, 0, 340, 341, 152, 0, 0,
	356, 0, 141, 0, 542, 543, 0, 1088, 0, 1090,
	345, 1102, 0, 0, 0, 0, 0, 0, 99, 0,
	1185, 1135, 1136, 1137, 1440, 0, 0, 1152, 1180, 1183,
	1175, 0, 0, 1163, 0, 1206, 1204, 1213, 1216, 1361,
	0, 0, 472, 473, 474, 496, 0, 1855, 1856, 1853,
	1876, 0, 1880, 1882, 0, 286, 288, 0, 0, 194,
	0, 0, 279, 0, 210, 0, 0, 0, 0, 196,
	0, 739, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 723, 0, 729, 0, 730,
	712, 713, 83, 1767, 0, 0, 1335, 776, 0, 777,
	0, 0, 1049, 942, 943, 944, 1051, 0, -2, 1047,
	1047, 776, 1047, 0, 0, 0, 0, 0, 0, 981,
	776, 1047, 1826, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1039, 1040, 776, 776, 776, 776,
	776, 776, 776, 776, 0, 0, 776, 776, 776, 776,
	776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
	776, 776, 776, 776, 776, 776, 776, 776, 776, 0,
	776, 776, 162, 361, 1084, 0, 1376, 1383, 0, 0,
	1377, 0, 1378, 1394, 1396, 1397, 1326, 0, 1368, 1322,
	-2, 0, 1372, 1341, 1436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	0, 74, 2499, 0, 77, 0, 1751, 0, 1743, 1744,
	1736, 0, 1813, 1814, 1723, 1724, 1440, 0, 0, 1253,
	1465, 1467, 1469, 0, 1485, 1456, 1477, 1460, 0, 1457,
	0, 1451, 1560, 0, 0, 0, 0, 0, 0, 1490,
	1558, 1559, 1561, 0, 0, 0, 1565, 0, 0, 1569,
	0, 0, 1611, 0, 0, 1612, 1574, 0, 0, 0,
	0, 0, 1580, 1733, 0, 1690, 0, 0, 1583, 1584,
	1585, 1586, 1606, 0, 0, 0, 0, 1607, 1608, 1609,
	1610, 1547, 0, 1548, 0, 0, 0, 0, 0, 0,
	1555, 1556, 1557, 1270, 1270, 1270, 1270, 1270, 1270, 1270,
	1270, 1270, 1270, 1270, 1270, 1599, 0, 0, 1425, 0,
	1440, 0, 1440, 1440, 101, 0, 1435, 110, 111, 0,
	0, 117, 683, 684, 685, 1804, 0, 303, 544, 833,
	686, 910, 776, 776, 776, 0, 776, 776, 776, 776,
	776, 0, 0, 776, 776, 776, 776, 776, 776, 776,
	776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
	0, 776, 776, 776, 776, 776, 776, 0, 776, 776,
	0, 0, 0, 0, 804, -2, -2, 796, 796, 796,
	795, 796, 796, 787, 797, 798, 788, 811, 563, 564,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 672, 0,
	707, 709, 0, 0, 579, 664, 0, 0, 0, 614,
	652, 622, 616, 617, 619, 620, 0, 648, 0, 0,
	602, 0, 829, 0, 0, 0, 1766, 0, 0, 400,
	401, 402, 1423, 0, 305, 306, 0, 0, 0, 0,
	0, 162, 0, 376, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 1092, 1103, 1104, 1093, 97, 349, 378,
	0, 0, 1121, 1145, 0, 820, 821, 1364, 1154, 1478,
	1164, 1166, 1167, 1362, 1363, 102, 0, 1878, 0, 0,
	0, 0, 0, 0, 298, 281, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 760, 0, 0, 0, 732, 1769, 1770, 0,
	699, 700, 701, 702, 703, 704, 705, 909, 686, 1050,
	0, 0, 0, 0, 1052, 917, 0, 1819, 0, 0,
	951, 952, 0, 1048, 931, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 776,
	0, 973, 974, 975, 0, 976, 0, 0, 0, 0,
	0, 0, 0, 1827, 1828, 1829, 993, 0, 0, 0,
	0, 0, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 776, 776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1032, 1033, 890, 891, 892, 893, 894, 906, 907, 908,
	895, 896, 897, 0, 0, 1043, 0, 390, 0, 0,
	0, 1380, 0, 1385, 0, 1370, 1327, -2, 0, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1488, 1257, 0, 0, 0, 75, 673,
	1750, 1752, 46, 1725, 71, 72, 119, 1262, 1710, 0,
	1458, 0, 1461, 1528, 1270, 1270, 1270, 1270, 1270, 0,
	650, 650, 650, 1668, 650, 657, 1671, 1673, 1674, 1675,
	650, 1677, 650, 1680, 1682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1687, 1582,
	1693, 0, 0, 0, 0, 0, 1263, 1264, 1266, 1549,
	1550, 1551, 1552, 1553, 1554, 1532, 1271, 1533, 1534, 1536,
	1537, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1777, 1777,
	0, -2, 1758, 0, 1755, 1336, 1764, 1765, 0, 1440,
	1785, 0, 0, 0, 0, 1733, 1440, 92, 93, 0,
	114, 115, 116, 834, 0, 0, 0, 776, 0, 776,
	0, 0, 0, 0, 0, 776, 776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 865, 0, 0, 0, 0, 0,
	0, 876, 877, 0, 0, 0, 0, 799, 650, 650,
	0, 794, 803, 780, 782, 783, 784, 786, 0, 812,
	565, 0, 0, 576, 0, 0, 678, 679, 680, 665,
	0, 0, 668, 669, 0, 1452, 1453, 1603, 1603, 1603,
	1603, 1603, 1603, 0, 0, 0, 0, 1603, 1603, 1603,
	0, 706, 708, 710, 711, 651, 653, 654, 623, 637,
	0, 638, 0, 658, 0, 816, 830, 831, 0, 1839,
	118, 0, 141, 0, 312, 0, 308, 0, 0, 0,
	0, 170, 153, 154, 155, 157, 158, 0, 0, 0,
	151, 0, 358, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 1089, 1091, 0, 0, 1367, 1109, 1441, 1183,
	673, 0, 298, 287, 289, 290, 0, 298, 301, 195,
	0, 0, 0, 0, 0, 0, 196, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 0, 0, 734, 696,
	697, 698, 941, 945, -2, 1047, 0, 0, 923, 912,
	0, 0, 921, 922, 918, 0, 1044, 0, 0, 796,
	794, 1834, 0, 0, -2, 953, 954, 977, 0, 979,
	0, 1054, 0, 0, 0, 0, 959, 960, 961, 962,
	0, 776, 0, 0, 0, 0, 0, 0, 982, 983,
	984, 985, 1044, 0, 0, 989, 0, 0, 0, 0,
	0, 1061, 0, 0, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1038, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 0, 0, 1005, 886, 887, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 883, 884, 885, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 898, 899, 900, 901, 902,
	903, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 0, 1036, 0, 163, 164, 0, 0, 0, 0,
	394, 391, 392, 0, 388, 0, 387, 0, 0, 0,
	1369, 0, 1339, 1373, 1437, 1438, 1439, 1349, 1350, 0,
	1352, 1353, 0, 1355, 1356, 0, 1375, 0, 0, 78,
	1867, 674, 1730, 0, 1254, 1529, 1462, 1531, 1535, 1530,
	1538, 1543, 1563, 1663, 673, 673, 1669, 1670, 1672, 1676,
	1678, 1679, 1681, 1567, 1564, 1566, 1568, 0, 0, 0,
	0, 1575, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 1596, 1597, 1268, 1267, 104, 0, 104, 1777, 0,
	0, 0, 0, 0, 0, -2, -2, -2, 2161, 2125,
	1762, 1779, 0, 0, 1733, 0, 0, 0, 0, 0,
	1741, 91, 835, 836, 837, 0, 776, 0, 840, 841,
	843, 844, 845, 0, 0, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 0, 880, 0, 882, 764, 0, 1738, 1738,
	796, 796, 0, 0, 0, 0, 675, 676, 677, 666,
	667, 0, 671, 649, 0, 0, 0, 120, 118, 140,
	0, 119, 313, 314, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 307, 309, 310, 311, 387, 188, 171,
	172, 0, 0, 0, 0, 0, 159, 160, 161, 357,
	0, 0, 362, 0, 0, 0, 0, 142, 143, 0,
	145, 141, 0, 0, 1153, 1867, 1424, 291, 298, 291,
	0, 196, 196, 0, 196, 197, 203, 761, 762, 925,
	0, 0, 0, 0, 919, 0, 947, 1045, 0, 562,
	562, 1838, 1819, 796, 0, 1076, 0, 978, 980, 955,
	957, 956, 958, 0, 0, 965, 966, 1044, 0, 970,
	0, 1055, 1056, 1057, 1058, 986, 0, 0, 0, 0,
	0, 1059, 1060, 0, 0, 1003, 1004, 1034, 1035, 0,
	904, 165, 166, 167, 168, 169, 1080, 0, 0, 1085,
	389, 1084, 0, 381, 396, 397, 0, 1381, 1371, 0,
	0, 0, 1258, 0, 1869, 1863, 1282, 0, 0, 1664,
	1665, 1666, 1667, 0, 0, 0, 0, 1576, 1577, 1578,
	1613, 1581, 1688, 0, 0, 1733, 0, 84, 119, 0,
	85, 104, 1368, -2, 1756, 0, 0, 1763, 1336, 1781,
	0, 103, 1741, 1786, 1787, 1788, 1789, 1790, 90, 838,
	0, 842, 888, 889, 846, 847, 878, 879, 0, 763,
	767, 0, 776, 0, 776, 776, 774, 775, 800, 801,
	802, 781, 785, 0, 559, 0, 0, 670, 656, 659,
	0, 0, 120, 0, 120, 315, 316, 317, 318, 320,
	321, 0, 0, 0, 390, 134, 0, 0, 173, 0,
	0, 0, 0, 183, 184, 185, 186, 187, 156, 0,
	0, 359, 0, 368, 370, 0, 369, 371, 0, 139,
	0, 1366, 1869, 191, 0, 291, 193, 299, 198, 200,
	196, 199, 1074, 0, 924, 0, 0, 0, 0, 0,
	946, 1046, 551, 552, 0, 796, 0, 1053, 0, 0,
	0, 964, 967, 968, 971, 987, 988, 0, 0, 992,
	0, 0, 0, 1037, 118, 395, 393, 390, 379, 383,
	0, 0, 0, 0, 1402, 0, 2591, 76, 1871, -2,
	0, 68, 0, 1731, 1732, 1726, 1727, 1729, 1570, 1572,
	1571, 1573, 0, 0, 0, 1594, 1595, 1272, 0, 105,
	0, 86, 1754, 1757, 1759, 0, 1780, 1782, 89, 839,
	881, 768, 769, 0, 771, 0, 0, 0, 574, 560,
	561, 0, 577, 0, 118, 0, 0, 0, 79, 322,
	323, 324, 325, 394, 189, 190, 174, 175, 0, 177,
	178, 0, 0, 0, 373, 0, 366, 367, 0, 1108,
	1823, 292, 192, 201, 911, 0, 917, 913, 0, 0,
	0, 0, 0, 1838, 0, 1077, 0, 963, 776, 0,
	0, 991, 0, 1063, 905, 79, 394, 0, 385, 0,
	1351, 1354, 1357, 0, 0, 0, 0, 0, 0, 1870,
	1865, 0, 1862, 0, 1283, 1284, 0, 0, 1579, 0,
	0, 0, 0, 0, 0, 1269, 0, 0, 770, 772,
	773, 0, 559, 765, 146, 0, 118, 0, 403, 118,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 0, 0, 0, 0, 0, 0, 79,
	0, 79, 0, 0, 0, 448, 0, 79, 0, 0,
	179, 0, 181, 182, 372, 0, 144, 1368, 0, 0,
	0, 0, 914, 915, 0, 920, 0, 0, 0, 0,
	0, 972, 990, 1062, 0, 1039, 118, 1081, 0, 380,
	0, 381, 1830, 1403, 1404, 0, 0, 1405, 0, 0,
	0, 0, 1868, 0, 0, 1864, 0, 0, 1728, 1614,
	0, 1617, 1265, 1273, 0, 1276, 0, 0, 0, 1312,
	0, 1274, 1778, -2, 0, 575, 125, 766, 126, 0,
	-2, 146, 0, 118, 0, 0, 133, 0, 0, 418,
	0, 0, 1840, 0, 0, -2, -2, -2, 1842, 445,
	446, 0, 497, 0, 0, 0, 462, 463, 0, 449,
	0, 464, 326, 0, 118, 176, 180, 374, 42, 0,
	0, 1075, 0, 919, 916, 765, 0, 765, 0, 969,
	1064, 1082, 118, 0, 381, 384, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 1285, 1286, 1615, 0, 1277,
	1278, 1279, 1280, 1281, 0, 0, 0, 0, 0, 146,
	128, -2, 120, 404, 405, 0, 0, 79, 419, 0,
	79, 0, 0, 0, 673, 0, 79, 79, 79, 79,
	0, 79, 79, 0, 450, 79, 79, 44, 0, 1824,
	1825, 293, 294, 295, 297, 0, 0, 948, 0, 950,
	0, 79, 382, 386, 1401, 1409, 1410, 0, 0, 0,
	1417, 0, 0, 1872, 1873, 1866, 1860, 0, 0, 1313,
	0, 147, 0, 0, 127, 146, 79, 0, 79, 416,
	0, 79, 0, 0, 0, 0, 681, 1843, 0, 498,
	327, 0, 0, 0, 0, 0, 0, 0, 329, 118,
	43, 0, 0, 0, 765, 0, 2309, 118, 1411, 0,
	0, 1412, 0, 0, 0, 0, 0, 1406, 0, 0,
	1275, 806, 148, 149, 129, 118, 406, 407, 408, 409,
	410, 411, 79, 0, 414, 0, 79, 0, 79, 428,
	429, 430, 79, 437, 439, 440, 441, 0, 443, 444,
	432, 453, 328, 79, 79, 79, 79, 0, 79, 447,
	451, 136, 296, 928, 0, 949, 1078, 1079, 1083, 0,
	0, 0, 0, 1413, 1414, 1418, 1420, 0, 1407, 1616,
	807, 808, 0, 132, 0, 413, 80, 79, 0, -2,
	0, 79, 0, 425, 0, 431, 0, 442, 0, 330,
	0, 0, 0, 0, 0, 0, 926, 0, 928, 0,
	0, 0, 0, 1419, 1421, 809, 0, 810, 0, 0,
	0, 79, 0, 417, 421, 0, 0, 79, 426, 0,
	438, 433, 331, 454, 0, 79, 456, 459, 452, 929,
	927, 0, 0, 822, 824, 825, 0, 0, 823, 412,
	415, 79, 423, 0, 79, 455, 0, 0, 1415, 1416,
	826, 827, 828, 0, 79, 0, 457, 460, 422, 0,
	-2, 458, 461, 424,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 138, 130, 3,
	77, 79, 135, 133, 78, 134, 189, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 81, 765,
	111, 110, 112, 3, 80, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 141, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 142,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 106, 107,
	108, 109, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 131, 132,
	137, 139, 140, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 58086, 763, 58087, 764, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:556
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:560
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:611
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:616
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:620
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:626
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:648
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:660
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:691
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:707
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:726
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:734
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:754
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:762
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:786
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:792
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:796
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:806
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:809
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:815
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:829
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:837
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:841
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:845
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:854
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:858
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:862
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:866
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:876
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:881
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:885
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:891
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:901
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:913
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:939
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:965
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Returning:  yyDollar[10].val.(SelectExprs),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1001
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1011
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1029
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1052
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1065
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1078
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1107
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1123
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1127
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1132
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1136
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1141
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.val = yyDollar[2].val.(SelectExprs)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1155
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1162
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1175
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1181
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1189
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1203
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1207
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1212
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1217
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1222
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 125:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1256
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[8].val.(TableName)
			ddl := &DDL{
				Action:      AlterStr,
				Table:       tableName,
				IfNotExists: yyDollar[4].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      yyDollar[5].val.(ColIdent),
					Using:       yyDollar[6].val.(ColIdent),
					Type:        yyDollar[2].val.(string),
					Columns:     yyDollar[10].val.([]*IndexColumn),
					Options:     yyDollar[12].val.([]*IndexOption),
					ifNotExists: yyDollar[4].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[8].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 126:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1285
		{
			viewName := yyDollar[5].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[10].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[6].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[12].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				IfNotExists:               yyDollar[4].val.(int) != 0,
				SpecialCommentMode:        yyDollar[9].val.(bool),
				SubStatementPositionStart: yyDollar[8].val.(int),
				SubStatementPositionEnd:   yyDollar[11].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:1306
		{
			// Accept parenthesized SELECT for MySQL compatibility (single level only)
			viewName := yyDollar[5].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = &ParenSelect{Select: yyDollar[11].val.(SelectStatement)}
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[6].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[14].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:             CreateStr,
				ViewSpec:           yyDollar[2].val.(*ViewSpec),
				IfNotExists:        yyDollar[4].val.(int) != 0,
				SpecialCommentMode: yyDollar[9].val.(bool),
				// Capture inner SELECT span, not parentheses
				SubStatementPositionStart: yyDollar[8].val.(int),
				SubStatementPositionEnd:   yyDollar[13].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1329
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1350
		{
			// Accept parenthesized SELECT for MySQL compatibility (single level only)
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = &ParenSelect{Select: yyDollar[12].val.(SelectStatement)}
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[15].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:             CreateStr,
				ViewSpec:           yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode: yyDollar[10].val.(bool),
				// Capture inner SELECT span, not parentheses
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[14].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1373
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1391
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1409
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1433
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1455
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1487
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1502
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 138:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1536
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1548
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1561
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1575
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1588
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1597
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1607
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1618
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1626
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1630
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1635
		{
			yyVAL.val = []AccountName(nil)
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1639
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1644
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1662
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1676
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1680
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1703
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1709
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1713
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1726
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1754
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1758
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1762
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1766
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1770
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1774
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1778
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1782
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1794
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1798
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1803
		{
			yyVAL.val = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 191:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1818
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1834
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1850
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1865
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1877
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1890
		{
			yyVAL.val = false
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1894
		{
			yyVAL.val = true
		}
	case 198:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1900
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 199:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1916
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1931
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 201:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1947
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 202:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1963
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 203:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1976
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2007
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2011
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2015
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2019
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2023
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2027
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2035
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2051
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2079
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2091
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2095
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2129
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.val = []string(nil)
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2179
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2194
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2233
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2237
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2241
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2245
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2249
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 296:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2253
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2257
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2262
		{
			yyVAL.val = false
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.val = true
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2271
		{
			yyVAL.val = false
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2275
		{
			yyVAL.val = true
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2282
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2295
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2307
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2344
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2354
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2368
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2388
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2392
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2400
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2410
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2414
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2423
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 330:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2427
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2431
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2446
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2465
		{
			yyVAL.val = ""
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2469
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2474
		{
			yyVAL.val = ""
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2546
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2574
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2578
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2582
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2587
		{
			yyVAL.val = &Authentication{}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2591
		{
			yyVAL.val = yyDollar[1].val
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2597
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2605
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2609
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2613
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2617
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2621
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2625
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2629
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2633
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2639
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2647
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2667
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2677
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2686
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2691
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2695
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2700
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2704
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2709
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2717
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2722
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2726
		{
			yyVAL.val = EventStatus_Enable
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.val = EventStatus_Disable
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2734
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2739
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2743
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.val = BeforeStr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.val = AfterStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2769
		{
			yyVAL.val = InsertStr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.val = UpdateStr
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.val = DeleteStr
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2782
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2807
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2811
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2817
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2821
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2825
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 417:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2829
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2845
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2851
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 422:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2856
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2861
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 424:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2867
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2879
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2885
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2891
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2895
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2899
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2903
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2907
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2914
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2938
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2952
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2980
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2986
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2991
		{
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2994
		{
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2998
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3008
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3012
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 455:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3016
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 456:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3027
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 457:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3031
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 458:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3035
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3046
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 460:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3050
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 461:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3054
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3065
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3071
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3077
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3083
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3087
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3095
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3101
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3105
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3111
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3125
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3131
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3135
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3175
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.val = &Resignal{}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3185
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3189
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3201
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3207
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3223
		{
			yyVAL.val = Exprs(nil)
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3227
		{
			yyVAL.val = Exprs(nil)
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3231
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3241
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3247
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3295
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3322
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3352
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3362
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3372
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3376
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3384
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3390
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3401
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3414
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3425
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3436
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3458
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3469
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3481
		{
			yyVAL.val = BoolVal(false)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.val = BoolVal(false)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.val = BoolVal(true)
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3494
		{
			yyVAL.val = ColumnType{}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3498
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3502
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3513
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3534
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3545
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3556
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3589
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3600
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3611
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3622
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3645
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3656
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3669
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3681
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3713
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3717
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3733
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3737
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3741
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3745
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3755
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3762
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3769
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3776
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3790
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3817
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3825
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3835
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3839
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3843
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3847
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3851
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3855
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3859
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3863
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3867
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3875
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3879
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3891
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3907
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3919
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3931
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3936
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3946
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3954
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3958
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3962
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3970
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3985
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3990
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3999
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4007
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4012
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4016
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4024
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4034
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4042
		{
			yyVAL.val = BoolVal(false)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.val = BoolVal(false)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.val = BoolVal(true)
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4055
		{
			yyVAL.val = BoolVal(false)
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.val = BoolVal(true)
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4069
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4091
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4095
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4101
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.val = BoolVal(true)
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4112
		{
			yyVAL.val = ""
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4122
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4126
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4130
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4134
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4138
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4142
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4148
		{
			yyVAL.val = ""
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4162
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4166
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4171
		{
			yyVAL.val = false
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.val = true
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4180
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4202
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4206
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4210
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4216
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4220
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4224
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4228
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4232
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4236
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4242
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4246
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4250
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4256
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4262
		{
			yyVAL.val = colKeyPrimary
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.val = colKey
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4274
		{
			yyVAL.val = colKeyUnique
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4290
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4294
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4314
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4318
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4322
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4326
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4330
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4342
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4346
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4350
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4362
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4374
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.val = false
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.val = true
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4384
		{
			yyVAL.val = ""
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4386
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4390
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4395
		{
			yyVAL.val = ""
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4401
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4411
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4421
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4430
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4450
		{
			yyVAL.val = false
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.val = true
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4455
		{
			yyVAL.bytes = nil
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4459
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4473
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4479
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4483
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4487
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4491
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4499
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4503
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4507
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4517
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4523
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4527
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4533
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4537
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4542
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4556
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4562
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4571
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4593
		{
			yyVAL.val = ""
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.val = ":="
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4615
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4619
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4623
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4627
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4631
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4635
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4644
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4648
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4652
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4658
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4676
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4681
		{
			yyVAL.val = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4685
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4690
		{
			yyVAL.val = ""
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4704
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4708
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4714
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4728
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 806:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4738
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4742
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4746
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 809:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4750
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 810:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4754
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4759
		{
			yyVAL.bytes = []byte(nil)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4769
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4773
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4777
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4783
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4798
		{
			yyVAL.val = ""
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4802
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4806
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4812
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4818
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4824
		{
			yyVAL.val = Restrict
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4828
		{
			yyVAL.val = Cascade
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			yyVAL.val = NoAction
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4836
		{
			yyVAL.val = SetDefault
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4840
		{
			yyVAL.val = SetNull
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4845
		{
			yyVAL.val = true
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4849
		{
			yyVAL.val = true
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4853
		{
			yyVAL.val = false
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4858
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4862
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4876
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4884
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4888
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4892
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4896
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4900
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4904
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4908
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4912
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4916
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4920
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4924
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4928
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4932
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4936
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4940
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4944
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4948
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4952
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4956
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4960
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4968
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4972
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4976
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4980
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4984
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4988
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4992
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4996
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5000
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5004
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5012
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5016
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5020
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5024
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5028
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5032
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5036
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5040
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5044
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5048
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5052
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5056
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5060
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5100
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5104
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5109
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5113
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5117
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5123
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5137
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5145
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5149
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5157
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5163
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5167
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5178
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5182
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5188
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5201
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5208
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5217
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5225
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5235
		{
			yyVAL.val = false
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5239
		{
			yyVAL.val = true
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5244
		{
			yyVAL.val = ""
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5248
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5254
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5258
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5263
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5267
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5272
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 926:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5276
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 927:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5285
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5296
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5300
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5305
		{
			yyVAL.val = ""
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5309
		{
			yyVAL.val = ""
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5313
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5318
		{
			yyVAL.val = string("")
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5322
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5334
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5348
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5363
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5383
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5396
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5410
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5414
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5420
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5438
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 948:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5457
		{
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(yyDollar[4].val.(string)),
					Using:       yyDollar[5].val.(ColIdent),
					Columns:     yyDollar[7].val.([]*IndexColumn),
					Options:     yyDollar[9].val.([]*IndexOption),
					ifNotExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5476
		{
			idxName := yyDollar[6].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[5].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(idxName),
					Type:        yyDollar[3].val.(string),
					Using:       yyDollar[7].val.(ColIdent),
					Columns:     yyDollar[9].val.([]*IndexColumn),
					Options:     yyDollar[11].val.([]*IndexOption),
					ifNotExists: yyDollar[5].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5502
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5524
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5538
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5552
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5570
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5589
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5599
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5609
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5619
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5629
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5639
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5649
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5659
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5669
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5684
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5700
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5710
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5720
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5736
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5750
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5764
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5778
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5792
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5806
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5819
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5832
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5842
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5852
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5864
		{
			yyVAL.val = &DDL{
				Action:   AlterStr,
				IfExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5880
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5894
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5911
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5921
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5931
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5941
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5951
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5961
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			if len(ddl.TableSpec.Constraints) > 0 {
				ddl.ConstraintAction = AddStr
			}
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5981
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5994
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6009
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 990:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6023
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6044
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6065
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6084
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6094
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6106
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6110
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6114
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6118
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6122
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6126
		{
			yyVAL.val = &DDL{Action: AlterStr, AlterCommentSpec: &AlterCommentSpec{Comment: string(yyDollar[3].bytes)}}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6130
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6134
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6138
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6142
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6146
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6150
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6154
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6158
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6162
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6166
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6170
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6174
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6178
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6182
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6186
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6190
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6194
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6198
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6202
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6206
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6210
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6214
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6218
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6222
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6226
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6230
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6234
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6238
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6242
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6246
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6250
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6254
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6258
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6262
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6266
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6270
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6274
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6278
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6284
		{
			yyVAL.val = true
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6288
		{
			yyVAL.val = false
		}
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6298
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6324
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6328
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6332
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6337
		{
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6339
		{
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6342
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6346
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6352
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6356
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6362
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6366
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6370
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6374
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6378
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6382
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6386
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6390
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6394
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1062:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6398
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6402
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1064:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6406
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6410
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6414
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6427
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6431
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6435
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6439
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6443
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6447
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6451
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6456
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6460
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6466
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6470
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6476
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6480
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6486
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6516
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6542
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6570
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6600
		{
			yyVAL.val = EventName{}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6604
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6610
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6614
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6626
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6650
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6666
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6670
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6676
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6701
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[6].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				IfExists: yyDollar[3].val.(int) != 0,
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6726
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6744
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6761
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6778
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6798
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6818
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6833
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6848
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6867
		{

		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6871
		{
			yyVAL.val = Restrict
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6875
		{
			yyVAL.val = Cascade
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6881
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6894
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6909
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1108:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6915
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6919
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6923
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6936
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6940
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6944
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6948
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6954
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6958
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6965
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6969
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6975
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6979
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6983
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6987
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6993
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6997
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7001
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7005
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7011
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7022
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7033
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7044
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7056
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7068
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7081
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7094
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7105
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7116
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7127
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7138
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7148
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7158
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7171
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7181
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7192
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7202
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7212
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7223
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7235
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7247
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7261
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7274
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7285
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7299
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7311
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7321
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7332
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7345
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7355
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7367
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7378
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7391
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7400
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7411
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7422
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7433
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7444
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7458
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7468
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7478
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7488
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7500
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7506
		{
			yyVAL.val = false
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7510
		{
			yyVAL.val = true
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7516
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7520
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7526
		{
			yyVAL.val = ""
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7530
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7534
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7540
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7544
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7548
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7552
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7558
		{
			yyVAL.val = ""
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7562
		{
			yyVAL.val = SessionStr
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7566
		{
			yyVAL.val = GlobalStr
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7572
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7584
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7597
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7609
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7613
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7619
		{
			yyVAL.val = &Begin{}
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7623
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7629
		{
			yyVAL.val = &Begin{}
		}
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7633
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7637
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7641
		{
			yyVAL.val = &Begin{}
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7646
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7650
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7655
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7659
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7664
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7668
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7674
		{
			yyVAL.val = &Commit{}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7680
		{
			yyVAL.val = &Rollback{}
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7686
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7692
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7696
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7700
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7704
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7710
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7716
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7720
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7724
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7730
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7738
		{
			yyVAL.val = ""
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7742
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7747
		{
			yyVAL.val = false
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7751
		{
			yyVAL.val = true
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7763
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7783
		{
			setAllowComments(yylex, true)
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7787
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7795
		{
			yyVAL.val = Comments(nil)
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7799
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7805
		{
			yyVAL.val = UnionStr
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7809
		{
			yyVAL.val = UnionAllStr
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7813
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7819
		{
			yyVAL.val = IntersectStr
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7823
		{
			yyVAL.val = IntersectAllStr
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7827
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7833
		{
			yyVAL.val = ExceptStr
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7837
		{
			yyVAL.val = ExceptAllStr
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7841
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7846
		{
			yyVAL.val = QueryOpts{}
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7850
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7861
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7872
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7883
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7894
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7905
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7917
		{
			yyVAL.val = ""
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7921
		{
			yyVAL.val = AllStr
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7925
		{
			yyVAL.val = DistinctStr
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7931
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1254:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7939
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7950
		{
			yyVAL.val = &StarExpr{}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7954
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7958
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7962
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7968
		{
			yyVAL.val = &StarExpr{}
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7972
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7976
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1262:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7980
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7986
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7990
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7996
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8001
		{
			yyVAL.val = ColIdent{}
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8004
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8009
		{
			yyVAL.val = Exprs(nil)
		}
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8013
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8018
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8022
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8027
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8031
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8035
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8042
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8065
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8080
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8084
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8088
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8092
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8099
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8107
		{
			yyVAL.val = Window(nil)
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8110
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8116
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8119
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8125
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8165
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8169
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8174
		{
			yyVAL.val = ColIdent{}
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8178
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8182
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8186
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8192
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8196
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8200
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8206
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8210
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8220
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8224
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8239
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8254
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8260
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8266
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8274
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8280
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8284
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8289
		{
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8291
		{
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8295
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8305
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8320
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8324
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8328
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8332
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8338
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8342
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8346
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8350
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8354
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8360
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8364
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8368
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8374
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8378
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8382
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1355:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8386
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1356:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8390
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8394
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8400
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8406
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8410
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8416
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8420
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8424
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8429
		{
			yyVAL.val = Expr(nil)
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8433
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8439
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8443
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8448
		{
			yyVAL.val = Columns(nil)
		}
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8452
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8458
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8462
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8468
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8472
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8478
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8482
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8496
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8500
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8504
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8508
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8514
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8516
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8520
		{
			yyVAL.val = JoinCondition{}
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8522
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8526
		{
			yyVAL.val = JoinCondition{}
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8528
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8533
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8537
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8543
		{
			yyVAL.val = JoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8547
		{
			yyVAL.val = JoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8551
		{
			yyVAL.val = JoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8557
		{
			yyVAL.val = StraightJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8563
		{
			yyVAL.val = LeftJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8567
		{
			yyVAL.val = LeftJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8571
		{
			yyVAL.val = RightJoinStr
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8575
		{
			yyVAL.val = RightJoinStr
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8579
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8583
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8589
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8593
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1401:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8603
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8610
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8615
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8621
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8625
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8629
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1407:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8634
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8641
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8645
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8649
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8653
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8657
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8661
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8665
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8669
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1416:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8673
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8677
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8683
		{
			yyVAL.val = &NullVal{}
		}
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8687
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8693
		{
			yyVAL.val = &NullVal{}
		}
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8697
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8703
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8707
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8713
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8719
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8723
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8729
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8733
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8737
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8741
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8745
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8749
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8755
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8759
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8765
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8770
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8774
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8778
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8782
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8787
		{
			yyVAL.val = Expr(nil)
		}
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8791
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8797
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8801
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8805
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8809
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8813
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8817
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8821
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8825
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8831
		{
			yyVAL.val = ""
		}
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8835
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8841
		{
			yyVAL.val = BoolVal(true)
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8845
		{
			yyVAL.val = BoolVal(false)
		}
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8851
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8855
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8859
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8863
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8867
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8871
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8875
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1461:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8879
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1462:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8883
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8887
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8893
		{
			yyVAL.val = IsNullStr
		}
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8897
		{
			yyVAL.val = IsNotNullStr
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8901
		{
			yyVAL.val = IsTrueStr
		}
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8905
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8909
		{
			yyVAL.val = IsFalseStr
		}
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8913
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8919
		{
			yyVAL.val = EqualStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8923
		{
			yyVAL.val = LessThanStr
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8927
		{
			yyVAL.val = GreaterThanStr
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8931
		{
			yyVAL.val = LessEqualStr
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8935
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8939
		{
			yyVAL.val = NotEqualStr
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8943
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8948
		{
			yyVAL.val = Expr(nil)
		}
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8952
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8958
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8962
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8966
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8972
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8978
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8982
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8987
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8994
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8998
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9004
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9008
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9014
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9018
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9022
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9026
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9030
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9034
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9038
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9042
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9046
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9050
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9054
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9058
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9062
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9066
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9070
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9074
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9078
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9082
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9086
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9090
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9094
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9098
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9102
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9106
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9110
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9114
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9122
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9136
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9140
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9144
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9152
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("CONCAT"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}}}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9168
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1529:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9172
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1530:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9182
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9186
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9190
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9194
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9198
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9202
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9206
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9210
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9214
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9218
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9222
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9226
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9230
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9234
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9238
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9242
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9246
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9255
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9259
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9263
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9267
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9271
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9275
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9279
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9283
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9287
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9291
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9295
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9306
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9310
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9314
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9318
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9322
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1563:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9326
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1564:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9330
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9334
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9338
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1567:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9342
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1568:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9346
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9350
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1570:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9354
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1571:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9358
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1572:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9362
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9366
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9370
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9374
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1576:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9378
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1577:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9382
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1578:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9386
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1579:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9390
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9394
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1581:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9398
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9402
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9406
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9410
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9415
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9419
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9430
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9434
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9438
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9443
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9447
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9451
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9455
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9459
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1595:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9463
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1596:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9467
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1597:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9471
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9479
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9483
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9487
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9491
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9495
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9508
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9512
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9522
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9526
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9530
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9534
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9538
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9542
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9548
		{
			yyVAL.val = ""
		}
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9552
		{
			yyVAL.val = BooleanModeStr
		}
	case 1615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9556
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1616:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9560
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9564
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9570
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9574
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9578
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9584
		{
			yyVAL.val = Armscii8Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9588
		{
			yyVAL.val = AsciiStr
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9592
		{
			yyVAL.val = Big5Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9596
		{
			yyVAL.val = UBinaryStr
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9600
		{
			yyVAL.val = Cp1250Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9604
		{
			yyVAL.val = Cp1251Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9608
		{
			yyVAL.val = Cp1256Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9612
		{
			yyVAL.val = Cp1257Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9616
		{
			yyVAL.val = Cp850Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9620
		{
			yyVAL.val = Cp852Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9624
		{
			yyVAL.val = Cp866Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9628
		{
			yyVAL.val = Cp932Str
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9632
		{
			yyVAL.val = Dec8Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9636
		{
			yyVAL.val = EucjpmsStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9640
		{
			yyVAL.val = EuckrStr
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9644
		{
			yyVAL.val = Gb18030Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9648
		{
			yyVAL.val = Gb2312Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9652
		{
			yyVAL.val = GbkStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9656
		{
			yyVAL.val = Geostd8Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9660
		{
			yyVAL.val = GreekStr
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9664
		{
			yyVAL.val = HebrewStr
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9668
		{
			yyVAL.val = Hp8Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9672
		{
			yyVAL.val = Keybcs2Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9676
		{
			yyVAL.val = Koi8rStr
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9680
		{
			yyVAL.val = Koi8uStr
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9684
		{
			yyVAL.val = Latin1Str
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9688
		{
			yyVAL.val = Latin2Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9692
		{
			yyVAL.val = Latin5Str
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9696
		{
			yyVAL.val = Latin7Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9700
		{
			yyVAL.val = MacceStr
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9704
		{
			yyVAL.val = MacromanStr
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9708
		{
			yyVAL.val = SjisStr
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9712
		{
			yyVAL.val = Swe7Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9716
		{
			yyVAL.val = Tis620Str
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9720
		{
			yyVAL.val = Ucs2Str
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9724
		{
			yyVAL.val = UjisStr
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9728
		{
			yyVAL.val = Utf16Str
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9732
		{
			yyVAL.val = Utf16leStr
		}
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9736
		{
			yyVAL.val = Utf32Str
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9740
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9744
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9748
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9754
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9758
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9762
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9766
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9770
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9774
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9778
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9782
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9789
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9793
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9797
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9801
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9805
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9809
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9813
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9817
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9821
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9825
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9829
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9833
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9839
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9843
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9848
		{
			yyVAL.val = Expr(nil)
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9852
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9857
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9861
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9867
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9871
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9877
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9882
		{
			yyVAL.val = Expr(nil)
		}
	case 1693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9886
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9892
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9896
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9900
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9904
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9908
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9912
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9916
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9920
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9924
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9928
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9932
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9936
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9940
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9944
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9948
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9952
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9956
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9962
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9966
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9970
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9974
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9978
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9982
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9986
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9990
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9994
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9998
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10002
		{
			yyVAL.val = &NullVal{}
		}
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10008
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10012
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10016
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10021
		{
			yyVAL.val = Exprs(nil)
		}
	case 1726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10025
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10031
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10035
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10041
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10046
		{
			yyVAL.val = Expr(nil)
		}
	case 1731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10050
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10056
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10061
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10065
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10071
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10075
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10081
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10086
		{
			yyVAL.val = AscScr
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10090
		{
			yyVAL.val = AscScr
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10094
		{
			yyVAL.val = DescScr
		}
	case 1741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10099
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10103
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10107
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10111
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10117
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10121
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10125
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10130
		{
			yyVAL.val = ""
		}
	case 1749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10134
		{
			yyVAL.val = ForUpdateStr
		}
	case 1750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10138
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10142
		{
			yyVAL.val = ForUpdateNowaitStr
		}
	case 1752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10146
		{
			yyVAL.val = ShareModeStr
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10152
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10156
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10176
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10180
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10185
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10192
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10196
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10200
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1761:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10205
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10212
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10216
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10225
		{
			yyVAL.val = Columns(nil)
		}
	case 1767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10229
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10235
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10239
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10245
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10249
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10253
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10257
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10261
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10265
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10269
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10274
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10278
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10284
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10288
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10294
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10298
		{
			yyVAL.val = ValTuple{}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10304
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10310
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10320
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10324
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10330
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10333
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10337
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10341
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10347
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10351
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10357
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10368
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10381
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10394
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10400
		{
			yyVAL.val = SetScope_Global
		}
	case 1798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10404
		{
			yyVAL.val = SetScope_Session
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10410
		{
			yyVAL.val = SetScope_Session
		}
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10414
		{
			yyVAL.val = SetScope_Persist
		}
	case 1801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10418
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10424
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10428
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10432
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10442
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10449
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10456
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10460
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10464
		{
			yyVAL.val = &Default{}
		}
	case 1812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10468
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10477
		{
			yyVAL.val = 0
		}
	case 1816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10479
		{
			yyVAL.val = 1
		}
	case 1817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10482
		{
			yyVAL.val = 0
		}
	case 1818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10484
		{
			yyVAL.val = 1
		}
	case 1819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10487
		{
			yyVAL.val = 0
		}
	case 1820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10489
		{
			yyVAL.val = 1
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10492
		{
			yyVAL.val = ""
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10494
		{
			yyVAL.val = IgnoreStr
		}
	case 1823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10497
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10499
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10501
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10504
		{
			yyVAL.val = struct{}{}
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10506
		{
			yyVAL.val = struct{}{}
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10510
		{
			yyVAL.val = struct{}{}
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10512
		{
			yyVAL.val = struct{}{}
		}
	case 1830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10515
		{
			yyVAL.val = struct{}{}
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10517
		{
			yyVAL.val = struct{}{}
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10521
		{
			yyVAL.val = UniqueStr
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10523
		{
			yyVAL.val = FulltextStr
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10525
		{
			yyVAL.val = SpatialStr
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10527
		{
			yyVAL.val = VectorStr
		}
	case 1836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10530
		{
			yyVAL.val = ""
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10532
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10535
		{
			yyVAL.val = ColIdent{}
		}
	case 1839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10537
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10541
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10545
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10551
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10555
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10562
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10568
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10572
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10579
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10583
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10587
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10592
		{
			yyVAL.val = string("")
		}
	case 1853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10594
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10597
		{
			yyVAL.val = string("")
		}
	case 1855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10599
		{
			yyVAL.val = IgnoreStr
		}
	case 1856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10601
		{
			yyVAL.val = ReplaceStr
		}
	case 1857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10604
		{
			yyVAL.val = BoolVal(false)
		}
	case 1858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10606
		{
			yyVAL.val = BoolVal(true)
		}
	case 1859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10609
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10613
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10618
		{
			yyVAL.val = BoolVal(false)
		}
	case 1862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10622
		{
			yyVAL.val = BoolVal(true)
		}
	case 1863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10627
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10631
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10636
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10640
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10648
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10652
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10657
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10661
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10666
		{
			yyVAL.val = &Lines{}
		}
	case 1872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10670
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10679
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10690
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10696
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10700
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10706
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10721
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10739
		{
			yyVAL.val = LockRead
		}
	case 1880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10743
		{
			yyVAL.val = LockReadLocal
		}
	case 1881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10747
		{
			yyVAL.val = LockWrite
		}
	case 1882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10751
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10757
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10763
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10774
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10784
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11715
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11724
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
