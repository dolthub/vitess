// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	replicationOption        *ReplicationOption
	replicationOptions       []*ReplicationOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const EXTENDED = 57545
const MAXVALUE = 57546
const REORGANIZE = 57547
const LESS = 57548
const THAN = 57549
const PROCEDURE = 57550
const TRIGGER = 57551
const TRIGGERS = 57552
const FUNCTION = 57553
const STATUS = 57554
const VARIABLES = 57555
const WARNINGS = 57556
const ERRORS = 57557
const KILL = 57558
const CONNECTION = 57559
const SEQUENCE = 57560
const ENABLE = 57561
const DISABLE = 57562
const EACH = 57563
const ROW = 57564
const BEFORE = 57565
const FOLLOWS = 57566
const PRECEDES = 57567
const DEFINER = 57568
const INVOKER = 57569
const INOUT = 57570
const OUT = 57571
const DETERMINISTIC = 57572
const CONTAINS = 57573
const READS = 57574
const MODIFIES = 57575
const SQL = 57576
const SECURITY = 57577
const TEMPORARY = 57578
const ALGORITHM = 57579
const MERGE = 57580
const TEMPTABLE = 57581
const UNDEFINED = 57582
const CLASS_ORIGIN = 57583
const SUBCLASS_ORIGIN = 57584
const MESSAGE_TEXT = 57585
const MYSQL_ERRNO = 57586
const CONSTRAINT_CATALOG = 57587
const CONSTRAINT_SCHEMA = 57588
const CONSTRAINT_NAME = 57589
const CATALOG_NAME = 57590
const SCHEMA_NAME = 57591
const TABLE_NAME = 57592
const COLUMN_NAME = 57593
const CURSOR_NAME = 57594
const SIGNAL = 57595
const RESIGNAL = 57596
const SQLSTATE = 57597
const DECLARE = 57598
const CONDITION = 57599
const CURSOR = 57600
const CONTINUE = 57601
const EXIT = 57602
const UNDO = 57603
const HANDLER = 57604
const FOUND = 57605
const SQLWARNING = 57606
const SQLEXCEPTION = 57607
const FETCH = 57608
const OPEN = 57609
const CLOSE = 57610
const LOOP = 57611
const LEAVE = 57612
const ITERATE = 57613
const REPEAT = 57614
const UNTIL = 57615
const WHILE = 57616
const DO = 57617
const RETURN = 57618
const USER = 57619
const IDENTIFIED = 57620
const ROLE = 57621
const REUSE = 57622
const GRANT = 57623
const GRANTS = 57624
const REVOKE = 57625
const NONE = 57626
const ATTRIBUTE = 57627
const RANDOM = 57628
const PASSWORD = 57629
const INITIAL = 57630
const AUTHENTICATION = 57631
const SSL = 57632
const X509 = 57633
const CIPHER = 57634
const ISSUER = 57635
const SUBJECT = 57636
const ACCOUNT = 57637
const EXPIRE = 57638
const NEVER = 57639
const DAY = 57640
const OPTION = 57641
const OPTIONAL = 57642
const EXCEPT = 57643
const ADMIN = 57644
const PRIVILEGES = 57645
const MAX_QUERIES_PER_HOUR = 57646
const MAX_UPDATES_PER_HOUR = 57647
const MAX_CONNECTIONS_PER_HOUR = 57648
const MAX_USER_CONNECTIONS = 57649
const FLUSH = 57650
const FAILED_LOGIN_ATTEMPTS = 57651
const PASSWORD_LOCK_TIME = 57652
const REQUIRE = 57653
const PROXY = 57654
const ROUTINE = 57655
const TABLESPACE = 57656
const CLIENT = 57657
const SLAVE = 57658
const EVENT = 57659
const EXECUTE = 57660
const FILE = 57661
const RELOAD = 57662
const REPLICATION = 57663
const SHUTDOWN = 57664
const SUPER = 57665
const USAGE = 57666
const LOGS = 57667
const ENGINE = 57668
const ERROR = 57669
const GENERAL = 57670
const HOSTS = 57671
const OPTIMIZER_COSTS = 57672
const RELAY = 57673
const SLOW = 57674
const USER_RESOURCES = 57675
const NO_WRITE_TO_BINLOG = 57676
const CHANNEL = 57677
const REPLICA = 57678
const SOURCE = 57679
const STOP = 57680
const RESET = 57681
const FILTER = 57682
const SOURCE_HOST = 57683
const SOURCE_USER = 57684
const SOURCE_PASSWORD = 57685
const SOURCE_PORT = 57686
const SOURCE_CONNECT_RETRY = 57687
const SOURCE_RETRY_COUNT = 57688
const REPLICATE_DO_TABLE = 57689
const REPLICATE_IGNORE_TABLE = 57690
const REPLICATION_SLAVE_ADMIN = 57691
const BEGIN = 57692
const START = 57693
const TRANSACTION = 57694
const COMMIT = 57695
const ROLLBACK = 57696
const SAVEPOINT = 57697
const WORK = 57698
const RELEASE = 57699
const CHAIN = 57700
const BIT = 57701
const TINYINT = 57702
const SMALLINT = 57703
const MEDIUMINT = 57704
const INT = 57705
const INTEGER = 57706
const BIGINT = 57707
const INTNUM = 57708
const SERIAL = 57709
const REAL = 57710
const DOUBLE = 57711
const FLOAT_TYPE = 57712
const DECIMAL = 57713
const NUMERIC = 57714
const DEC = 57715
const FIXED = 57716
const PRECISION = 57717
const TIME = 57718
const TIMESTAMP = 57719
const DATETIME = 57720
const YEAR = 57721
const CHAR = 57722
const VARCHAR = 57723
const BOOL = 57724
const CHARACTER = 57725
const VARBINARY = 57726
const NCHAR = 57727
const NVARCHAR = 57728
const NATIONAL = 57729
const VARYING = 57730
const TEXT = 57731
const TINYTEXT = 57732
const MEDIUMTEXT = 57733
const LONGTEXT = 57734
const LONG = 57735
const BLOB = 57736
const TINYBLOB = 57737
const MEDIUMBLOB = 57738
const LONGBLOB = 57739
const JSON = 57740
const ENUM = 57741
const GEOMETRY = 57742
const POINT = 57743
const LINESTRING = 57744
const POLYGON = 57745
const GEOMETRYCOLLECTION = 57746
const MULTIPOINT = 57747
const MULTILINESTRING = 57748
const MULTIPOLYGON = 57749
const LOCAL = 57750
const LOW_PRIORITY = 57751
const NULLX = 57752
const AUTO_INCREMENT = 57753
const APPROXNUM = 57754
const SIGNED = 57755
const UNSIGNED = 57756
const ZEROFILL = 57757
const SRID = 57758
const COLLATION = 57759
const DATABASES = 57760
const SCHEMAS = 57761
const TABLES = 57762
const FULL = 57763
const PROCESSLIST = 57764
const COLUMNS = 57765
const FIELDS = 57766
const ENGINES = 57767
const PLUGINS = 57768
const NAMES = 57769
const CHARSET = 57770
const GLOBAL = 57771
const SESSION = 57772
const ISOLATION = 57773
const LEVEL = 57774
const READ = 57775
const WRITE = 57776
const ONLY = 57777
const REPEATABLE = 57778
const COMMITTED = 57779
const UNCOMMITTED = 57780
const SERIALIZABLE = 57781
const ENCRYPTION = 57782
const CURRENT_TIMESTAMP = 57783
const NOW = 57784
const DATABASE = 57785
const CURRENT_DATE = 57786
const CURRENT_USER = 57787
const CURRENT_TIME = 57788
const LOCALTIME = 57789
const LOCALTIMESTAMP = 57790
const UTC_DATE = 57791
const UTC_TIME = 57792
const UTC_TIMESTAMP = 57793
const REPLACE = 57794
const CONVERT = 57795
const CAST = 57796
const SUBSTR = 57797
const SUBSTRING = 57798
const TRIM = 57799
const LEADING = 57800
const TRAILING = 57801
const BOTH = 57802
const GROUP_CONCAT = 57803
const SEPARATOR = 57804
const TIMESTAMPADD = 57805
const TIMESTAMPDIFF = 57806
const OVER = 57807
const WINDOW = 57808
const GROUPING = 57809
const CURRENT = 57810
const AVG = 57811
const BIT_AND = 57812
const BIT_OR = 57813
const BIT_XOR = 57814
const COUNT = 57815
const JSON_ARRAYAGG = 57816
const JSON_OBJECTAGG = 57817
const MAX = 57818
const MIN = 57819
const STDDEV_POP = 57820
const STDDEV = 57821
const STD = 57822
const STDDEV_SAMP = 57823
const SUM = 57824
const VAR_POP = 57825
const VARIANCE = 57826
const VAR_SAMP = 57827
const CUME_DIST = 57828
const DENSE_RANK = 57829
const FIRST_VALUE = 57830
const LAG = 57831
const LAST_VALUE = 57832
const LEAD = 57833
const NTH_VALUE = 57834
const NTILE = 57835
const ROW_NUMBER = 57836
const PERCENT_RANK = 57837
const RANK = 57838
const DUAL = 57839
const JSON_TABLE = 57840
const PATH = 57841
const AVG_ROW_LENGTH = 57842
const CHECKSUM = 57843
const COMPRESSION = 57844
const DIRECTORY = 57845
const DELAY_KEY_WRITE = 57846
const ENGINE_ATTRIBUTE = 57847
const INSERT_METHOD = 57848
const MAX_ROWS = 57849
const MIN_ROWS = 57850
const PACK_KEYS = 57851
const ROW_FORMAT = 57852
const SECONDARY_ENGINE_ATTRIBUTE = 57853
const STATS_AUTO_RECALC = 57854
const STATS_PERSISTENT = 57855
const STATS_SAMPLE_PAGES = 57856
const STORAGE = 57857
const DISK = 57858
const MEMORY = 57859
const DYNAMIC = 57860
const COMPRESSED = 57861
const REDUNDANT = 57862
const COMPACT = 57863
const LIST = 57864
const HASH = 57865
const PARTITIONS = 57866
const SUBPARTITION = 57867
const SUBPARTITIONS = 57868
const PREPARE = 57869
const DEALLOCATE = 57870
const MATCH = 57871
const AGAINST = 57872
const BOOLEAN = 57873
const LANGUAGE = 57874
const WITH = 57875
const QUERY = 57876
const EXPANSION = 57877
const ACCESSIBLE = 57878
const ASENSITIVE = 57879
const CUBE = 57880
const DAY_HOUR = 57881
const DAY_MICROSECOND = 57882
const DAY_MINUTE = 57883
const DAY_SECOND = 57884
const DELAYED = 57885
const DISTINCTROW = 57886
const EMPTY = 57887
const FLOAT4 = 57888
const FLOAT8 = 57889
const GET = 57890
const HIGH_PRIORITY = 57891
const HOUR_MICROSECOND = 57892
const HOUR_MINUTE = 57893
const HOUR_SECOND = 57894
const INSENSITIVE = 57895
const INT1 = 57896
const INT2 = 57897
const INT3 = 57898
const INT4 = 57899
const INT8 = 57900
const IO_AFTER_GTIDS = 57901
const IO_BEFORE_GTIDS = 57902
const LINEAR = 57903
const MASTER_BIND = 57904
const MASTER_SSL_VERIFY_SERVER_CERT = 57905
const MIDDLEINT = 57906
const MINUTE_MICROSECOND = 57907
const MINUTE_SECOND = 57908
const PURGE = 57909
const READ_WRITE = 57910
const RLIKE = 57911
const SECOND_MICROSECOND = 57912
const SENSITIVE = 57913
const SPECIFIC = 57914
const SQL_BIG_RESULT = 57915
const SQL_SMALL_RESULT = 57916
const VARCHARACTER = 57917
const YEAR_MONTH = 57918
const UNUSED = 57919
const DESCRIPTION = 57920
const LATERAL = 57921
const MEMBER = 57922
const RECURSIVE = 57923
const BUCKETS = 57924
const CLONE = 57925
const COMPONENT = 57926
const DEFINITION = 57927
const ENFORCED = 57928
const EXCLUDE = 57929
const GEOMCOLLECTION = 57930
const GET_MASTER_PUBLIC_KEY = 57931
const HISTOGRAM = 57932
const HISTORY = 57933
const INACTIVE = 57934
const INVISIBLE = 57935
const LOCKED = 57936
const MASTER_COMPRESSION_ALGORITHMS = 57937
const MASTER_PUBLIC_KEY_PATH = 57938
const MASTER_TLS_CIPHERSUITES = 57939
const MASTER_ZSTD_COMPRESSION_LEVEL = 57940
const NESTED = 57941
const NETWORK_NAMESPACE = 57942
const NOWAIT = 57943
const NULLS = 57944
const OJ = 57945
const OLD = 57946
const ORDINALITY = 57947
const ORGANIZATION = 57948
const OTHERS = 57949
const PERSIST = 57950
const PERSIST_ONLY = 57951
const PRIVILEGE_CHECKS_USER = 57952
const PROCESS = 57953
const REFERENCE = 57954
const REQUIRE_ROW_FORMAT = 57955
const RESOURCE = 57956
const RESPECT = 57957
const RESTART = 57958
const RETAIN = 57959
const SECONDARY = 57960
const SECONDARY_ENGINE = 57961
const SECONDARY_LOAD = 57962
const SECONDARY_UNLOAD = 57963
const SKIP = 57964
const THREAD_PRIORITY = 57965
const TIES = 57966
const VCPU = 57967
const VISIBLE = 57968
const SYSTEM = 57969
const INFILE = 57970
const ACTIVE = 57971
const AGGREGATE = 57972
const ANY = 57973
const ARRAY = 57974
const ASCII = 57975
const AT = 57976
const AUTOEXTEND_SIZE = 57977
const ENDS = 57978
const EVENTS = 57979
const GENERATED = 57980
const ALWAYS = 57981
const STORED = 57982
const VIRTUAL = 57983
const NVAR = 57984
const PASSWORD_LOCK = 57985

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"REPLICA",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"REPLICATION_SLAVE_ADMIN",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 39,
	663, 39,
	-2, 61,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	190, 1441,
	191, 1460,
	-2, 261,
	-1, 55,
	231, 909,
	232, 909,
	-2, 898,
	-1, 78,
	5, 66,
	-2, 47,
	-1, 460,
	1, 2122,
	23, 2122,
	178, 2122,
	663, 2122,
	-2, 943,
	-1, 473,
	178, 1470,
	-2, 1464,
	-1, 474,
	178, 1471,
	-2, 1465,
	-1, 537,
	1, 573,
	663, 573,
	-2, 571,
	-1, 559,
	178, 1831,
	-2, 1107,
	-1, 589,
	178, 1939,
	-2, 1358,
	-1, 590,
	178, 2020,
	-2, 1109,
	-1, 591,
	178, 1851,
	-2, 1110,
	-1, 658,
	178, 1802,
	-2, 1328,
	-1, 661,
	178, 1819,
	-2, 1257,
	-1, 662,
	178, 2032,
	-2, 1257,
	-1, 663,
	178, 2031,
	-2, 1257,
	-1, 664,
	178, 2030,
	-2, 1257,
	-1, 665,
	178, 1919,
	-2, 1257,
	-1, 666,
	178, 1920,
	-2, 1257,
	-1, 667,
	178, 1817,
	-2, 1257,
	-1, 668,
	178, 1818,
	-2, 1257,
	-1, 669,
	178, 1820,
	-2, 1257,
	-1, 917,
	101, 2135,
	178, 2135,
	-2, 1424,
	-1, 918,
	101, 2248,
	178, 2248,
	-2, 1425,
	-1, 923,
	101, 2159,
	178, 2159,
	-2, 1426,
	-1, 924,
	101, 2203,
	178, 2203,
	-2, 1427,
	-1, 925,
	101, 2204,
	178, 2204,
	-2, 1428,
	-1, 926,
	101, 2070,
	178, 2070,
	-2, 1433,
	-1, 928,
	101, 2180,
	178, 2180,
	-2, 1435,
	-1, 1092,
	376, 922,
	-2, 926,
	-1, 1094,
	376, 922,
	-2, 926,
	-1, 1206,
	5, 66,
	-2, 48,
	-1, 1211,
	1, 573,
	663, 573,
	-2, 571,
	-1, 1213,
	1, 574,
	663, 574,
	-2, 571,
	-1, 1476,
	1, 573,
	663, 573,
	-2, 571,
	-1, 1478,
	1, 573,
	663, 573,
	-2, 571,
	-1, 1959,
	178, 1473,
	-2, 1469,
	-1, 2079,
	1, 1018,
	5, 1018,
	12, 1018,
	13, 1018,
	14, 1018,
	15, 1018,
	17, 1018,
	19, 1018,
	29, 1018,
	30, 1018,
	56, 1018,
	57, 1018,
	58, 1018,
	59, 1018,
	60, 1018,
	62, 1018,
	63, 1018,
	66, 1018,
	67, 1018,
	69, 1018,
	70, 1018,
	88, 1018,
	440, 1018,
	485, 1018,
	663, 1018,
	-2, 1051,
	-1, 2087,
	67, 83,
	69, 83,
	-2, 87,
	-1, 2105,
	178, 1943,
	-2, 1429,
	-1, 2278,
	44, 773,
	197, 775,
	199, 773,
	200, 773,
	-2, 819,
	-1, 2327,
	5, 67,
	-2, 1139,
	-1, 2908,
	197, 776,
	-2, 774,
	-1, 2981,
	69, 1715,
	70, 1715,
	178, 1715,
	-2, 949,
	-1, 3007,
	1, 1093,
	5, 1093,
	12, 1093,
	13, 1093,
	14, 1093,
	15, 1093,
	17, 1093,
	19, 1093,
	29, 1093,
	30, 1093,
	56, 1093,
	57, 1093,
	58, 1093,
	59, 1093,
	60, 1093,
	62, 1093,
	63, 1093,
	66, 1093,
	67, 1093,
	69, 1093,
	70, 1093,
	88, 1093,
	440, 1093,
	485, 1093,
	663, 1093,
	-2, 1051,
	-1, 3198,
	5, 67,
	-2, 1390,
	-1, 3301,
	41, 1480,
	-2, 1478,
	-1, 3547,
	5, 67,
	-2, 1393,
	-1, 3573,
	281, 329,
	-2, 1535,
	-1, 3574,
	281, 330,
	-2, 1576,
	-1, 3575,
	281, 331,
	-2, 1752,
	-1, 3770,
	96, 315,
	98, 315,
	100, 315,
	-2, 61,
	-1, 3845,
	98, 322,
	99, 322,
	100, 322,
	-2, 61,
}

const yyPrivate = 57344

const yyLast = 58398

var yyAct = [...]int{
	601, 86, 3733, 3774, 3713, 2680, 1227, 3714, 2527, 3793,
	1034, 485, 3663, 3579, 2489, 3735, 2102, 533, 3611, 3454,
	7, 3580, 3539, 3453, 6, 3446, 2842, 1406, 3452, 5,
	3455, 8, 3451, 3, 2488, 2871, 3566, 3414, 3070, 1907,
	561, 3549, 3239, 3370, 3017, 1310, 3567, 3413, 2706, 3537,
	3001, 600, 2974, 2795, 1311, 2412, 3301, 2171, 2634, 1509,
	565, 3303, 2410, 568, 2188, 545, 2554, 2975, 2881, 2785,
	2406, 3155, 1984, 2855, 3129, 3123, 1931, 552, 464, 467,
	1334, 2796, 512, 512, 518, 3107, 529, 86, 3447, 89,
	2707, 2971, 101, 2902, 2479, 1333, 1078, 2120, 2536, 578,
	2983, 1905, 114, 2992, 1924, 1059, 2133, 2277, 1049, 1105,
	2254, 1508, 2475, 2135, 564, 2784, 1913, 2438, 2395, 543,
	2129, 1004, 2076, 1990, 1511, 2075, 2237, 2650, 1851, 2044,
	2116, 2388, 542, 2218, 2083, 2157, 1814, 1892, 1795, 2518,
	1485, 997, 2153, 1906, 1388, 1228, 919, 2687, 2035, 1961,
	1384, 1235, 2079, 1136, 1231, 1114, 1212, 548, 996, 1856,
	922, 1387, 915, 916, 2089, 1216, 1249, 532, 2688, 1215,
	78, 488, 1214, 1098, 487, 1113, 2710, 1826, 1017, 1827,
	1794, 470, 2602, 1033, 570, 135, 1022, 1479, 538, 91,
	110, 106, 1239, 3845, 3838, 3827, 462, 2496, 3813, 3799,
	3770, 3768, 2500, 2480, 3748, 3745, 3744, 3743, 3728, 3726,
	3652, 3648, 3643, 88, 3372, 3371, 2810, 1849, 2505, 2504,
	3280, 2840, 3100, 3021, 3842, 3836, 3834, 480, 3755, 3535,
	40, 93, 3108, 99, 40, 40, 3278, 994, 40, 40,
	2501, 3706, 3110, 43, 128, 124, 125, 3422, 126, 2202,
	3293, 3281, 2547, 2701, 2202, 3666, 2507, 1031, 2486, 3523,
	2852, 3534, 2672, 424, 3626, 3421, 2487, 3354, 3223, 1047,
	84, 2702, 3229, 3236, 3237, 3339, 2408, 3062, 2767, 3018,
	1001, 2766, 130, 129, 910, 911, 912, 531, 1019, 2045,
	1024, 1025, 87, 3711, 2908, 3673, 87, 87, 3394, 2511,
	87, 87, 558, 3607, 1147, 2365, 1027, 2104, 2490, 2965,
	3330, 1016, 539, 3543, 3543, 2749, 2750, 1920, 1266, 1265,
	1275, 1276, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1267,
	2236, 3538, 1277, 459, 2748, 1092, 3086, 3050, 1190, 3092,
	3094, 3093, 3090, 3091, 3089, 3088, 3087, 2099, 2100, 3540,
	3540, 131, 1855, 132, 1389, 2474, 1390, 3113, 3095, 3096,
	2098, 97, 95, 96, 2430, 1082, 1083, 2429, 1895, 1896,
	2431, 2503, 992, 118, 2506, 3352, 1853, 1854, 1081, 1873,
	87, 87, 1166, 479, 478, 1175, 2509, 482, 2235, 2397,
	2400, 2401, 2402, 2398, 1133, 2399, 2404, 2131, 2132, 3111,
	3112, 3114, 3115, 3116, 1467, 2499, 2727, 527, 2401, 2402,
	2139, 2141, 1852, 2140, 3544, 3544, 2147, 2136, 107, 2951,
	2949, 2224, 2223, 1013, 2397, 2400, 2401, 2402, 2398, 2136,
	2399, 2404, 1063, 1064, 2993, 2994, 1067, 1832, 457, 2759,
	454, 477, 3179, 3645, 1088, 521, 3646, 522, 3647, 2154,
	2779, 524, 1468, 1893, 1894, 523, 1095, 2590, 87, 1902,
	86, 522, 86, 1901, 583, 582, 585, 586, 587, 588,
	1065, 1066, 1900, 584, 1996, 2821, 2822, 1188, 1899, 1100,
	1189, 528, 1898, 1102, 1013, 1897, 520, 2542, 1101, 2572,
	1170, 1171, 1099, 3700, 543, 3130, 3131, 3132, 3133, 3307,
	2285, 2279, 2280, 3791, 2278, 2281, 2282, 1104, 2880, 2577,
	1089, 1090, 2249, 1468, 2814, 1149, 1163, 127, 109, 2862,
	3593, 3592, 3513, 2546, 3644, 3398, 1140, 2189, 120, 119,
	86, 3279, 3141, 1013, 1210, 1068, 3840, 1182, 3511, 3150,
	1183, 1222, 2288, 2255, 2256, 2257, 2258, 2259, 2260, 2856,
	2857, 2858, 2859, 2860, 1050, 3124, 2287, 2286, 2250, 3790,
	1286, 1288, 1468, 3127, 1290, 505, 3388, 498, 510, 491,
	1885, 3396, 3600, 2544, 116, 3139, 2499, 3125, 3126, 537,
	3841, 3815, 3275, 3722, 117, 121, 1918, 3814, 1079, 499,
	1080, 1082, 1083, 1302, 468, 3297, 1305, 1306, 1307, 1308,
	1309, 133, 1314, 2865, 2502, 2786, 2787, 1149, 2853, 2498,
	3811, 3741, 2788, 1137, 2856, 2857, 2858, 2859, 2860, 458,
	122, 3778, 3640, 3272, 1287, 111, 3273, 112, 1483, 1174,
	3730, 1919, 3638, 3639, 543, 3271, 3268, 465, 469, 3270,
	1246, 1247, 1245, 1921, 3269, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1248,
	1331, 1332, 1335, 1335, 1335, 1341, 1335, 1335, 1341, 1335,
	1341, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1206, 3109, 3052, 116, 481, 1062, 3019, 3267, 2758, 142,
	1246, 1247, 1245, 143, 121, 3390, 144, 145, 2512, 1149,
	87, 1023, 146, 1194, 3541, 3541, 123, 3384, 3385, 1248,
	116, 1256, 2882, 3617, 2839, 2183, 2184, 2243, 1833, 2545,
	490, 489, 492, 1337, 1339, 3021, 1343, 1345, 2284, 1348,
	497, 3331, 3420, 2757, 3227, 3225, 2516, 1096, 1336, 1338,
	1340, 1342, 1344, 1346, 1347, 1349, 3723, 501, 2138, 3228,
	142, 2499, 506, 2403, 143, 2156, 544, 144, 145, 1148,
	544, 544, 1141, 146, 544, 79, 3294, 509, 2548, 3672,
	2403, 108, 1094, 1184, 1103, 1150, 1157, 1158, 1160, 1161,
	1162, 3395, 1164, 1165, 3276, 1167, 1168, 1169, 2403, 1172,
	1173, 1221, 1176, 1177, 1178, 1179, 1180, 1855, 1207, 142,
	1204, 3792, 2651, 143, 98, 3296, 144, 145, 466, 3512,
	2180, 2497, 146, 2864, 3562, 3563, 2790, 1159, 466, 466,
	3449, 1853, 1854, 3213, 1156, 3746, 3051, 3053, 3054, 3055,
	2816, 2819, 2733, 3380, 3389, 1077, 2817, 2818, 1074, 496,
	3739, 2179, 3702, 3734, 2562, 2563, 2789, 1492, 1493, 1491,
	1075, 1076, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 3737,
	1073, 1992, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1072, 493, 494, 495, 502, 1863,
	507, 508, 511, 3661, 2653, 463, 1154, 3041, 3362, 1791,
	3042, 1200, 3043, 1857, 3368, 3649, 1021, 1020, 3797, 3156,
	3157, 2799, 1828, 3822, 1013, 118, 1013, 504, 2126, 1013,
	2126, 3240, 1003, 1199, 1195, 1196, 1197, 1198, 1201, 1202,
	1203, 1205, 1023, 1013, 2608, 2907, 3242, 1155, 3848, 1151,
	1859, 3843, 3828, 1858, 1266, 1265, 1275, 1276, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1267, 2415, 2417, 1277, 3802,
	1018, 1036, 3400, 539, 3167, 554, 922, 2620, 3166, 2878,
	2128, 922, 2128, 1152, 1153, 2571, 2567, 2550, 2549, 2244,
	1890, 1497, 1495, 1097, 2174, 1015, 2740, 2739, 2738, 2128,
	1014, 2565, 1219, 1026, 419, 1145, 3170, 2128, 2128, 1292,
	1293, 1291, 104, 2988, 87, 1289, 2937, 2747, 2340, 2569,
	2568, 1382, 2337, 2435, 2319, 2308, 2270, 1463, 1464, 1465,
	1466, 2181, 2094, 1934, 1294, 2483, 512, 1487, 1400, 1304,
	1303, 1257, 2104, 1131, 2199, 1048, 3393, 1050, 1267, 2198,
	1277, 1277, 2219, 2415, 2417, 512, 1510, 1091, 2426, 2875,
	3415, 466, 1392, 1824, 3193, 3241, 3283, 1393, 3074, 3595,
	3736, 3738, 2627, 3618, 3619, 3615, 3616, 2389, 2655, 1927,
	120, 119, 1401, 2659, 1486, 2654, 104, 2652, 1490, 1245,
	1294, 1061, 2657, 3795, 3425, 3424, 3796, 2416, 3794, 1379,
	1380, 2897, 3284, 2898, 86, 2656, 1248, 1248, 1266, 1265,
	1275, 1276, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1267,
	2658, 2660, 1277, 1100, 1291, 1470, 2127, 1102, 2127, 3075,
	1144, 103, 1101, 2608, 2615, 2608, 1099, 1013, 1405, 2612,
	2609, 2126, 2611, 2614, 1499, 2127, 3596, 1822, 2619, 3165,
	1473, 1815, 2616, 2127, 2127, 1084, 512, 1247, 1245, 2597,
	3171, 2598, 2899, 1035, 1799, 1513, 2594, 3442, 2595, 2210,
	1050, 1070, 102, 1503, 2273, 1248, 2990, 2989, 1810, 1968,
	1811, 1812, 1813, 1402, 2416, 1846, 1292, 1293, 1060, 500,
	1292, 1293, 1883, 2987, 1966, 1967, 1965, 2586, 2585, 1805,
	1806, 1807, 1808, 1482, 1809, 1488, 1866, 1475, 1474, 2332,
	2584, 2331, 2583, 3568, 1489, 3679, 1818, 3678, 1819, 2582,
	2599, 2581, 2263, 86, 1507, 2262, 1842, 2596, 86, 1506,
	1398, 1246, 1247, 1245, 1107, 1798, 3805, 3775, 3804, 1844,
	1029, 1803, 1804, 1932, 1933, 1801, 1028, 1889, 2674, 3826,
	1248, 1816, 1086, 2036, 3801, 543, 1864, 1265, 1275, 1276,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1267, 1923, 2211,
	1277, 1071, 1830, 1829, 2036, 3724, 2353, 1834, 1270, 1271,
	1272, 1273, 1274, 1267, 1837, 1838, 1277, 3680, 1840, 86,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1954, 1888, 3568,
	1477, 3634, 1861, 3633, 1843, 2333, 3667, 1246, 1247, 1245,
	3140, 3134, 1962, 1093, 3698, 1314, 2933, 1865, 1862, 3172,
	2231, 543, 1925, 1432, 1963, 2808, 1248, 1242, 3674, 1988,
	3558, 1994, 3516, 1995, 1997, 1925, 3508, 1246, 1247, 1245,
	3823, 87, 1884, 2001, 2003, 1887, 1232, 543, 3832, 1233,
	1246, 1247, 1245, 1964, 1922, 3443, 1248, 1985, 3830, 1986,
	2012, 3355, 474, 3642, 2305, 2306, 2307, 3291, 1914, 1248,
	3509, 1246, 1247, 1245, 1959, 3290, 1903, 3289, 1941, 1917,
	3758, 2080, 1953, 1915, 2021, 2024, 1916, 1910, 3710, 1821,
	1248, 3288, 2037, 1246, 1247, 1245, 3824, 1936, 1206, 1275,
	1276, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1267, 2103,
	3282, 1277, 1248, 141, 3391, 421, 423, 1950, 3510, 141,
	3099, 3059, 1937, 3654, 141, 1938, 3057, 1256, 1419, 1236,
	1246, 1247, 1245, 3098, 515, 515, 1246, 1247, 1245, 1258,
	2109, 3784, 141, 3568, 2084, 3047, 3037, 922, 3030, 1248,
	2893, 2074, 2892, 1867, 2891, 1248, 1870, 1871, 1872, 2811,
	1874, 1875, 3392, 2523, 1876, 141, 1006, 2111, 1877, 3060,
	2521, 1878, 2510, 1139, 3058, 1879, 1880, 1138, 3653, 1881,
	1882, 3597, 2050, 1312, 2052, 141, 515, 3594, 1006, 2432,
	2088, 2433, 3522, 3387, 3386, 2000, 1046, 141, 2004, 2005,
	2006, 2007, 2008, 1246, 1247, 1245, 3367, 3298, 3266, 2196,
	1433, 3682, 1111, 3235, 2073, 3234, 2087, 1959, 1246, 1247,
	1245, 2033, 1248, 3220, 3189, 2110, 3637, 3137, 2137, 3136,
	2142, 2143, 2144, 2145, 2146, 3135, 1110, 1248, 3097, 3056,
	1330, 2150, 2151, 2152, 3048, 3040, 2117, 3038, 2092, 2096,
	2095, 3034, 3033, 2101, 3032, 2896, 2194, 2195, 2890, 2889,
	2112, 2888, 1960, 2114, 2827, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1989, 1001, 2630, 2629, 2163, 2164, 2165, 2166, 2600, 2167,
	2168, 2169, 2519, 2434, 2232, 2159, 2160, 2161, 2162, 2205,
	2155, 1246, 1247, 1245, 1839, 2013, 2014, 2015, 2125, 2676,
	1793, 2019, 2020, 2023, 2026, 3847, 2031, 2032, 1792, 448,
	1248, 3846, 2038, 2190, 1946, 1948, 1949, 3831, 2027, 2192,
	2193, 3816, 1947, 2175, 1218, 2177, 2200, 3810, 2040, 3750,
	3742, 3650, 2043, 3631, 2046, 2047, 3630, 3585, 3584, 2051,
	3578, 2053, 2054, 3577, 3397, 3315, 2483, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 3309,
	3163, 2970, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1211,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 2344, 1434,
	1435, 1436, 1437, 1413, 1417, 1447, 1414, 1420, 1416, 1418,
	1415, 2927, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 425, 2923, 2909, 2866, 1261, 2557, 1264, 2556, 2524,
	2225, 2207, 3581, 2272, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 2206, 1262, 1263, 1260, 1987, 1836, 1226, 1246, 1247,
	1245, 1831, 1266, 1265, 1275, 1276, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1267, 1505, 1504, 1277, 1248, 428, 1478,
	1476, 1134, 3835, 1057, 476, 1498, 1181, 438, 446, 447,
	484, 2335, 141, 2317, 1226, 3249, 1226, 1056, 3249, 3676,
	3065, 3659, 3528, 1226, 3622, 1226, 1266, 1265, 1275, 1276,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1267, 1226, 1226,
	1277, 3065, 3603, 3308, 434, 3065, 3524, 436, 3249, 3430,
	444, 445, 3065, 3378, 1341, 1266, 1265, 1275, 1276, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1267, 2317, 1226, 1277,
	3259, 141, 3249, 3345, 1448, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1267, 517, 3258, 1277, 2845, 1266, 1265, 1275,
	1276, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1267, 2830,
	2234, 1277, 583, 582, 585, 586, 587, 588, 3249, 3248,
	3013, 584, 1996, 2228, 3202, 1226, 2269, 1226, 441, 1791,
	3153, 1791, 3152, 141, 3065, 3064, 2837, 2836, 2833, 2834,
	2833, 2832, 2392, 1226, 2829, 2267, 2828, 141, 2391, 442,
	2246, 2245, 2010, 2229, 2555, 2208, 2555, 1252, 90, 2221,
	2212, 2090, 2090, 2010, 1226, 2217, 2203, 2421, 2216, 1791,
	1266, 1265, 1275, 1276, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1267, 435, 1802, 1277, 1404, 1403, 2972, 2392, 2187,
	2986, 1929, 2215, 1185, 1145, 2309, 1143, 1186, 3786, 3440,
	583, 582, 585, 586, 587, 588, 1820, 3703, 2084, 584,
	1996, 2392, 2317, 2986, 1954, 3665, 2986, 2091, 2091, 2093,
	1791, 1142, 3196, 2010, 1143, 1137, 2392, 2202, 2241, 426,
	2186, 3003, 2846, 2835, 2628, 2601, 2580, 2227, 2097, 2317,
	2359, 2358, 1928, 2261, 2233, 1841, 2204, 2201, 1930, 1208,
	2968, 2248, 1312, 993, 2251, 1145, 1886, 1962, 1850, 1791,
	2240, 1496, 1494, 440, 429, 430, 1386, 451, 87, 1963,
	3559, 431, 433, 3525, 427, 450, 449, 3002, 1266, 1265,
	1275, 1276, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1267,
	3411, 1959, 1277, 3312, 3210, 3101, 2134, 2266, 2158, 2110,
	1266, 1265, 1275, 1276, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1267, 2993, 2994, 1277, 87, 2136, 2807, 2589, 443,
	2588, 2409, 2297, 2295, 2296, 2154, 2418, 2419, 2473, 1149,
	2080, 2182, 2149, 2080, 2148, 1471, 2039, 1130, 2172, 2220,
	1054, 2414, 1053, 2314, 3821, 3819, 3762, 3760, 3715, 2996,
	2972, 2844, 2525, 543, 1860, 2310, 1501, 1187, 1146, 2726,
	2723, 453, 3613, 2304, 2725, 2724, 2721, 1942, 1943, 1944,
	2320, 2722, 3000, 2999, 2967, 2998, 2720, 2719, 2226, 549,
	550, 3533, 2631, 2294, 2084, 1240, 1241, 1940, 3605, 3199,
	2302, 2301, 3336, 2084, 3162, 3068, 2084, 922, 3587, 2922,
	2422, 2921, 2826, 2423, 2825, 2824, 2485, 2477, 3405, 2801,
	3402, 3521, 2405, 3520, 1238, 3302, 3300, 3383, 2247, 3382,
	475, 455, 456, 2352, 1266, 1265, 1275, 1276, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1267, 1312, 3588, 1277, 1835,
	2626, 2017, 2018, 3285, 3286, 1229, 2625, 2390, 3027, 2812,
	2760, 1513, 2271, 1399, 1128, 3779, 1230, 2364, 2366, 2420,
	1112, 1109, 1108, 1058, 2372, 2373, 2374, 2375, 3319, 3318,
	1218, 512, 2561, 1932, 1933, 2176, 3194, 2482, 2484, 1500,
	3142, 1470, 2427, 1392, 2424, 3704, 1486, 3143, 3514, 3304,
	3073, 1106, 2513, 2514, 2515, 2517, 2472, 2436, 2843, 1240,
	1241, 546, 2552, 104, 2173, 1904, 1223, 1224, 86, 2311,
	2312, 2313, 1192, 2300, 3686, 141, 3685, 3684, 3263, 2265,
	2108, 2299, 1087, 3599, 1006, 3598, 3532, 3518, 3434, 2520,
	3406, 3335, 2752, 547, 2321, 2322, 2323, 2324, 2325, 2522,
	543, 90, 3531, 3417, 2555, 2530, 2531, 2532, 3763, 2528,
	2592, 3764, 3763, 3789, 3651, 3174, 2885, 2578, 2576, 2575,
	2341, 2338, 2559, 2350, 2252, 1817, 2478, 2543, 2481, 1243,
	1052, 2345, 2346, 2347, 1051, 3764, 2551, 3427, 2823, 1926,
	993, 541, 92, 2553, 3468, 58, 3470, 22, 2636, 3469,
	21, 61, 2558, 2170, 3471, 23, 2573, 3472, 24, 1954,
	3466, 17, 2564, 2566, 2579, 3586, 2681, 2570, 3465, 16,
	3464, 15, 3467, 18, 3463, 14, 1, 1006, 141, 3457,
	10, 3492, 38, 3490, 36, 3489, 35, 515, 515, 2703,
	2705, 515, 2242, 2080, 2080, 2080, 2080, 2080, 141, 2587,
	1868, 141, 3488, 31, 3122, 2661, 515, 515, 2663, 2605,
	2409, 141, 2734, 2591, 3487, 30, 1797, 1797, 3486, 29,
	2606, 543, 2080, 2729, 3483, 26, 3121, 141, 141, 141,
	141, 2736, 141, 2632, 2704, 3128, 1959, 3482, 25, 2637,
	2673, 2641, 543, 2851, 2643, 2638, 1910, 3485, 27, 2854,
	515, 2541, 2708, 3138, 141, 2012, 2084, 2084, 2084, 2084,
	2084, 2662, 2610, 1484, 2621, 2622, 3462, 13, 2624, 3274,
	2737, 3459, 12, 2084, 1032, 2636, 3458, 11, 3456, 9,
	2185, 1135, 2603, 2613, 2618, 2084, 3519, 2743, 3401, 2745,
	2746, 3403, 2744, 3299, 1006, 3145, 3106, 2809, 3105, 2535,
	2534, 2820, 1129, 1848, 2604, 2607, 2197, 515, 515, 515,
	2283, 2264, 1006, 1891, 2253, 1193, 2715, 2716, 2714, 2718,
	2118, 2717, 2560, 2728, 3625, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2682, 2683, 2684, 2685,
	2686, 2813, 3353, 3222, 515, 3020, 3016, 2437, 2741, 515,
	515, 3049, 2113, 3548, 995, 512, 2861, 2751, 100, 2209,
	1069, 432, 2115, 2494, 3404, 2847, 1132, 2493, 2508, 2130,
	1213, 141, 2800, 1006, 2802, 1217, 2492, 2491, 3399, 2495,
	1410, 1408, 141, 1409, 1407, 1412, 1411, 2793, 3757, 3671,
	2803, 2804, 2805, 437, 2806, 1394, 2167, 3572, 2169, 2872,
	2969, 1244, 594, 115, 3164, 2617, 141, 525, 526, 105,
	2868, 2863, 113, 1252, 1939, 2815, 439, 1285, 2640, 2298,
	2428, 920, 921, 913, 2290, 1209, 3423, 3606, 3662, 3561,
	2831, 1234, 3608, 3530, 3416, 2351, 1329, 2034, 567, 1225,
	2664, 2665, 2732, 2666, 2667, 3192, 3610, 2668, 1945, 581,
	580, 579, 1006, 576, 1006, 577, 3542, 1006, 1935, 2700,
	2841, 2677, 2678, 1259, 1006, 2838, 1006, 1006, 2870, 1191,
	556, 2078, 2071, 2963, 2230, 2396, 141, 2394, 2393, 2874,
	1502, 1383, 2995, 2879, 2867, 2991, 2407, 2883, 2884, 2082,
	2886, 2887, 2077, 2081, 42, 3173, 1085, 2894, 2895, 2633,
	2873, 2964, 3329, 2977, 86, 2303, 94, 2906, 540, 2900,
	551, 28, 2934, 1006, 1006, 2926, 2905, 20, 19, 2276,
	1030, 44, 2742, 1050, 1050, 46, 47, 2529, 2178, 3571,
	3732, 1470, 1115, 3749, 3005, 3773, 543, 37, 2932, 3009,
	3010, 3011, 141, 141, 141, 34, 33, 32, 3484, 2978,
	2973, 3478, 2924, 3477, 2976, 3480, 3479, 3476, 2944, 2945,
	3481, 2946, 2708, 3475, 2948, 3474, 2950, 1006, 3473, 3491,
	3461, 3460, 3717, 2985, 3716, 4, 1220, 85, 39, 991,
	2, 0, 0, 0, 0, 3004, 0, 0, 2914, 2919,
	0, 2947, 3008, 2938, 2939, 2940, 2941, 2942, 0, 0,
	0, 0, 0, 0, 0, 2980, 0, 0, 0, 0,
	0, 3015, 1236, 0, 0, 0, 0, 3078, 3080, 3082,
	3083, 2997, 0, 0, 0, 0, 0, 0, 0, 3025,
	0, 0, 3031, 3014, 0, 3006, 0, 0, 0, 0,
	3039, 0, 0, 86, 0, 0, 0, 0, 0, 0,
	2958, 141, 3103, 0, 0, 3076, 0, 141, 141, 515,
	515, 515, 0, 0, 141, 0, 0, 0, 0, 3022,
	3023, 3024, 0, 0, 0, 543, 3118, 3119, 3120, 2793,
	1910, 0, 0, 0, 0, 0, 0, 2793, 3102, 3044,
	3045, 3046, 2326, 0, 0, 0, 3069, 0, 0, 3061,
	0, 0, 0, 0, 3066, 3067, 0, 0, 0, 0,
	3063, 0, 3077, 3079, 3081, 0, 0, 0, 2354, 0,
	0, 0, 0, 3085, 0, 0, 0, 0, 0, 0,
	0, 3158, 3159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2936, 3147, 0, 3117, 0, 0, 3149, 0,
	1266, 1265, 1275, 1276, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1267, 0, 3160, 1277, 0, 0, 0, 3146, 0,
	0, 0, 2960, 2961, 2962, 0, 3144, 2636, 0, 3104,
	2872, 3178, 0, 0, 0, 0, 0, 0, 0, 0,
	3148, 0, 3175, 3176, 0, 3154, 0, 3151, 3168, 0,
	0, 3161, 0, 0, 0, 0, 2800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3224,
	3226, 3169, 0, 0, 0, 0, 0, 0, 0, 0,
	2167, 0, 0, 0, 0, 0, 0, 0, 3007, 0,
	0, 3212, 0, 0, 0, 0, 0, 2708, 3217, 3218,
	3219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3215, 0, 3195, 0, 0, 0, 0,
	0, 0, 0, 0, 3251, 3203, 0, 3204, 0, 0,
	3221, 0, 0, 0, 0, 0, 0, 1335, 1335, 1335,
	1341, 1335, 1335, 1341, 1335, 1341, 1350, 1351, 3232, 3230,
	3216, 0, 3233, 0, 0, 0, 0, 0, 0, 0,
	0, 3261, 3072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3084, 0, 0, 0, 0, 0, 0,
	3262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3244, 3245, 2793, 0, 3243, 0, 0,
	0, 0, 0, 3238, 141, 3260, 0, 0, 0, 0,
	0, 0, 0, 0, 3264, 0, 0, 0, 1337, 1339,
	0, 1343, 1345, 3320, 1348, 2080, 0, 0, 141, 141,
	141, 3246, 3247, 1336, 1338, 1340, 1342, 1344, 1346, 1347,
	1349, 0, 3265, 0, 0, 0, 0, 2977, 3277, 0,
	2977, 3341, 0, 3287, 0, 3295, 0, 0, 3292, 0,
	0, 3306, 2957, 141, 3005, 141, 0, 3305, 0, 1006,
	0, 0, 0, 0, 1006, 0, 3357, 0, 3359, 3360,
	3361, 0, 2414, 543, 3348, 2675, 0, 0, 2084, 0,
	3321, 3317, 0, 0, 0, 3323, 3340, 1006, 2976, 3344,
	1006, 2976, 3338, 3324, 0, 0, 0, 0, 3180, 3181,
	3182, 3183, 0, 86, 3337, 3346, 3187, 0, 0, 3343,
	3190, 3191, 0, 0, 3313, 3314, 0, 3347, 0, 3310,
	3311, 3364, 3334, 0, 0, 0, 0, 0, 1006, 0,
	0, 3381, 0, 0, 3356, 543, 3358, 0, 0, 0,
	0, 0, 0, 0, 3363, 0, 0, 0, 3379, 2671,
	3365, 0, 1266, 1265, 1275, 1276, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1267, 0, 0, 1277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2977, 2793, 86, 2793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3432, 3433, 0, 0, 2793, 0, 0,
	0, 0, 0, 0, 3407, 0, 3409, 3408, 3252, 0,
	3253, 3410, 3254, 3256, 543, 0, 0, 0, 0, 0,
	0, 0, 86, 3418, 0, 0, 0, 3429, 3448, 0,
	3426, 2976, 3428, 0, 0, 0, 3436, 0, 3438, 0,
	3441, 3439, 0, 3450, 3431, 0, 0, 2009, 2011, 0,
	0, 0, 0, 0, 0, 2016, 0, 1266, 1265, 1275,
	1276, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1267, 0,
	0, 1277, 0, 0, 0, 141, 0, 2869, 0, 0,
	0, 0, 0, 141, 0, 0, 141, 0, 0, 0,
	3515, 0, 141, 2048, 2049, 141, 141, 141, 3517, 3564,
	2055, 2056, 2057, 2058, 0, 3526, 0, 0, 0, 0,
	0, 0, 3550, 0, 0, 3545, 3546, 0, 0, 3552,
	0, 3551, 0, 0, 0, 0, 0, 0, 2708, 3560,
	3364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 0, 86, 3444, 0, 2928, 0, 0, 86, 0,
	0, 0, 0, 0, 0, 3582, 554, 0, 0, 0,
	0, 3591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1006, 3576, 141, 0, 0,
	0, 0, 0, 0, 1006, 1006, 0, 0, 0, 515,
	3601, 0, 0, 0, 3373, 0, 0, 0, 2966, 3627,
	0, 3614, 0, 0, 141, 515, 3604, 1797, 0, 0,
	3629, 0, 0, 0, 0, 0, 0, 0, 3623, 3602,
	0, 0, 0, 515, 0, 3620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3628, 0,
	3641, 0, 3632, 1006, 0, 0, 0, 515, 0, 1006,
	0, 512, 3658, 3635, 0, 515, 0, 0, 0, 0,
	0, 3412, 0, 0, 0, 0, 0, 0, 0, 3660,
	0, 0, 1006, 1006, 0, 86, 0, 0, 86, 0,
	0, 0, 0, 0, 86, 86, 86, 86, 3681, 86,
	86, 3683, 0, 86, 2274, 2275, 3677, 0, 3692, 3693,
	3694, 141, 3550, 3697, 3670, 3690, 3675, 0, 0, 0,
	3690, 1006, 0, 0, 3690, 0, 2872, 3687, 0, 3635,
	86, 0, 3688, 86, 3705, 3701, 86, 3709, 0, 0,
	3707, 0, 0, 3725, 0, 0, 3727, 3721, 0, 0,
	3729, 3720, 2103, 3752, 3740, 2681, 3719, 0, 3718, 0,
	3754, 512, 3751, 0, 0, 0, 3753, 0, 543, 3761,
	0, 3759, 0, 86, 0, 3765, 3756, 86, 1006, 86,
	3767, 3731, 0, 86, 0, 0, 3766, 0, 0, 0,
	0, 0, 0, 0, 86, 86, 86, 86, 3690, 86,
	3690, 0, 0, 0, 3776, 141, 141, 141, 141, 141,
	3783, 0, 0, 0, 0, 3690, 3690, 3690, 141, 86,
	3690, 86, 141, 86, 3798, 0, 141, 3806, 0, 0,
	3808, 0, 0, 0, 141, 0, 3803, 0, 0, 0,
	3690, 0, 3690, 0, 0, 0, 0, 0, 1006, 0,
	86, 0, 0, 0, 0, 0, 86, 0, 0, 3589,
	0, 0, 0, 0, 86, 0, 0, 0, 0, 3829,
	0, 3690, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 86, 0, 2792, 0, 3690, 1006, 0, 0, 86,
	0, 0, 0, 0, 3839, 0, 86, 0, 0, 3690,
	0, 0, 0, 2956, 0, 0, 0, 0, 0, 1312,
	3690, 0, 0, 0, 0, 0, 0, 3690, 0, 3205,
	3206, 3207, 3208, 0, 0, 3209, 0, 0, 3211, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1006, 1006, 1006, 0, 0, 0, 515, 0, 0,
	0, 0, 141, 515, 0, 0, 0, 0, 0, 0,
	0, 2222, 2955, 0, 0, 0, 0, 0, 141, 2670,
	515, 0, 1006, 0, 515, 0, 0, 0, 515, 515,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 141, 1266, 1265, 1275, 1276, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1267, 2904, 0, 1277, 0, 0,
	0, 0, 0, 0, 2912, 2917, 1006, 0, 0, 0,
	141, 1006, 0, 0, 2904, 0, 0, 1006, 0, 0,
	1006, 1006, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2268, 0, 0, 2593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2623, 0,
	2289, 0, 1266, 1265, 1275, 1276, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1267, 0, 0, 1277, 1266, 1265, 1275,
	1276, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1267, 0,
	0, 1277, 0, 0, 0, 3787, 0, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 1006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3809, 0, 2316, 0, 2318, 0, 0, 0,
	0, 0, 0, 0, 3820, 0, 0, 1006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2327,
	2328, 2329, 2330, 0, 0, 0, 2334, 2336, 0, 0,
	2339, 0, 0, 2342, 2343, 2792, 0, 0, 2348, 2349,
	0, 0, 0, 2792, 2355, 2356, 0, 2357, 0, 0,
	2360, 2361, 0, 2362, 2363, 0, 0, 2367, 2368, 2369,
	2370, 2371, 0, 0, 0, 0, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 0, 0,
	1006, 0, 0, 0, 0, 2753, 2754, 2755, 2756, 0,
	0, 2761, 2762, 2763, 2764, 2765, 0, 0, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 0,
	2780, 2781, 2782, 2783, 0, 2794, 2669, 141, 0, 1006,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 2639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1237, 0, 0, 0, 0, 2315, 0, 0,
	0, 515, 0, 0, 0, 0, 0, 0, 515, 1266,
	1265, 1275, 1276, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1267, 0, 0, 1277, 2904, 1266, 1265, 1275, 1276, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1267, 0, 0, 1277,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 452,
	2904, 0, 0, 0, 136, 0, 0, 472, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 1266, 1265, 1275, 1276, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1267, 555, 0, 1277, 0,
	0, 0, 930, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1006, 0, 136, 0, 0,
	0, 0, 1006, 1006, 1006, 3565, 3569, 0, 0, 0,
	0, 0, 0, 0, 3583, 0, 0, 0, 0, 0,
	0, 2792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2471, 0, 3609, 3612, 0, 0, 2644, 2645, 2646,
	2647, 2648, 2649, 0, 0, 0, 0, 0, 1006, 2471,
	0, 0, 0, 0, 2445, 0, 0, 0, 0, 0,
	0, 0, 2452, 0, 0, 0, 0, 0, 0, 0,
	3636, 0, 2445, 0, 0, 0, 0, 0, 0, 0,
	2452, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2449, 0,
	0, 3026, 0, 3028, 3029, 0, 0, 0, 0, 0,
	3035, 3036, 0, 2730, 2731, 0, 2449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3695,
	1006, 0, 0, 0, 0, 0, 0, 141, 0, 2448,
	0, 0, 0, 0, 0, 0, 0, 3612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2448, 0, 0,
	0, 0, 0, 0, 0, 1006, 0, 0, 0, 0,
	0, 0, 0, 1006, 0, 0, 0, 141, 3747, 141,
	0, 0, 0, 0, 0, 0, 0, 2792, 0, 2792,
	0, 0, 0, 0, 0, 0, 0, 2453, 0, 0,
	0, 0, 0, 2792, 0, 0, 0, 2459, 0, 0,
	0, 0, 1006, 0, 0, 2453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 3807, 0, 0,
	2451, 0, 0, 0, 3812, 0, 0, 515, 0, 0,
	0, 0, 0, 0, 0, 1006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 2463, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 1006, 0, 1006, 0, 0, 0, 0, 0,
	2463, 141, 0, 0, 2935, 0, 0, 0, 0, 2470,
	0, 0, 0, 0, 0, 0, 0, 2943, 0, 0,
	0, 2456, 0, 0, 0, 0, 0, 2470, 2952, 2953,
	2954, 3231, 0, 534, 0, 2959, 0, 0, 0, 2456,
	0, 0, 0, 0, 1006, 0, 2465, 534, 1006, 0,
	0, 0, 566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2465, 1006, 0, 0, 0, 0,
	2979, 0, 0, 0, 0, 0, 0, 0, 2446, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2446, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 2442, 1432, 3012, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 2444, 2442, 0, 0, 0, 0, 1006,
	0, 0, 535, 0, 0, 2455, 0, 0, 0, 0,
	0, 2444, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 931, 2455, 0, 137, 999, 0, 1006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 137, 998, 0,
	0, 0, 1006, 0, 0, 2443, 2447, 2450, 0, 2454,
	2457, 2458, 2460, 2461, 2462, 2464, 2466, 2467, 2468, 2469,
	1037, 0, 1419, 2443, 2447, 2450, 0, 2454, 2457, 2458,
	2460, 2461, 2462, 2464, 2466, 2467, 2468, 2469, 0, 0,
	0, 0, 0, 515, 0, 0, 0, 0, 0, 593,
	1006, 0, 0, 0, 0, 3366, 0, 0, 0, 0,
	0, 0, 0, 1006, 0, 1006, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 1433, 0, 0, 0, 0, 0,
	0, 138, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3184, 3185, 3186,
	2441, 3188, 0, 515, 0, 0, 1006, 0, 0, 0,
	0, 141, 138, 1000, 3197, 3198, 0, 3200, 2441, 0,
	3201, 0, 0, 0, 0, 0, 141, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3214, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1385, 0, 0, 930, 0,
	0, 0, 0, 930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3255, 3257, 0, 0, 0, 0, 1446, 1449, 1450, 1451,
	1452, 1453, 1454, 0, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 137, 1434, 1435, 1436, 1437, 1413, 1417, 1447,
	1414, 1420, 1416, 1418, 1415, 0, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 1481, 472, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 136, 0, 0, 1481, 472, 0, 3325, 3326, 3327,
	3328, 1512, 0, 0, 0, 0, 0, 3332, 3333, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 136, 136,
	136, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 3349, 3350, 3351, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3374,
	3375, 3376, 0, 3377, 0, 0, 0, 0, 1448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 136, 3435, 0, 3437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3445, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3536, 0, 0, 1993, 1255, 0, 3547, 0, 0, 0,
	0, 0, 0, 3553, 0, 3554, 3555, 3556, 3557, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 1993, 1993,
	1993, 0, 0, 0, 1993, 1993, 1993, 1993, 0, 1993,
	1993, 0, 0, 0, 930, 1993, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1993, 1993, 1993, 1993, 0,
	0, 1993, 1993, 1993, 1993, 1993, 0, 0, 0, 0,
	1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
	1993, 1993, 136, 136, 136, 0, 0, 0, 0, 930,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3621, 0, 0, 3624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 40, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 931, 0,
	0, 0, 64, 931, 0, 0, 0, 0, 83, 0,
	0, 43, 0, 0, 0, 0, 0, 0, 3669, 0,
	0, 136, 0, 0, 0, 0, 0, 136, 136, 0,
	929, 0, 0, 0, 136, 929, 1395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 3500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3712, 0, 0, 0, 0, 3493, 0, 0,
	3772, 3775, 3771, 0, 0, 0, 1469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 1472,
	0, 0, 0, 0, 0, 1480, 471, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 137, 137, 137,
	137, 0, 137, 0, 0, 0, 1480, 471, 0, 0,
	0, 0, 0, 45, 80, 49, 48, 51, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3494, 0,
	0, 0, 138, 0, 3817, 3818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 82, 81, 0, 0,
	0, 0, 50, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 62, 63, 0, 3496, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 3505, 3497, 3498,
	3499, 3503, 3504, 3501, 0, 3502, 0, 3506, 0, 0,
	0, 0, 71, 0, 72, 138, 0, 0, 0, 0,
	0, 535, 0, 1908, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 138, 0, 0, 138, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 0, 0, 136, 1912, 137, 0, 0, 0,
	0, 0, 0, 1253, 138, 138, 138, 138, 0, 138,
	1956, 0, 0, 0, 0, 0, 0, 0, 2213, 2214,
	136, 3507, 3495, 0, 59, 60, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 1912, 0, 1912, 0, 0, 1998,
	0, 0, 0, 0, 931, 0, 1999, 0, 1912, 1912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 137, 137, 2041, 2042, 1512, 0, 931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 1956, 0, 0, 0, 999, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 1912, 0, 0, 0, 998,
	1255, 0, 0, 0, 0, 0, 0, 1955, 52, 54,
	0, 0, 0, 1993, 79, 0, 0, 1993, 1993, 1993,
	1993, 1993, 0, 0, 0, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 64,
	0, 0, 0, 0, 0, 83, 1993, 0, 43, 0,
	0, 137, 0, 0, 0, 0, 0, 137, 137, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 87, 0, 0,
	0, 0, 3500, 136, 0, 0, 534, 0, 0, 0,
	0, 0, 136, 0, 0, 136, 2425, 1512, 0, 930,
	0, 0, 0, 0, 3493, 0, 0, 0, 0, 3844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	138, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 0, 0, 1000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	45, 80, 49, 48, 51, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 3494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 82, 81, 0, 0, 0, 138, 50,
	0, 0, 0, 0, 138, 138, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 63, 0, 3496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3505, 3497, 3498, 3499, 3503, 3504,
	3501, 136, 3502, 0, 3506, 0, 0, 0, 0, 71,
	0, 72, 1993, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 1512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 53, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 3507, 3495,
	0, 59, 60, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 930, 136, 136, 136, 136, 136,
	0, 0, 0, 137, 0, 535, 0, 0, 534, 0,
	0, 0, 136, 0, 0, 0, 534, 0, 0, 0,
	0, 1993, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2239, 0, 0, 0, 0, 2239, 0, 0, 0,
	0, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 64, 0, 0, 0, 2239,
	0, 83, 2239, 0, 43, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 40, 0, 0,
	2293, 0, 0, 87, 0, 0, 0, 0, 3500, 1912,
	0, 64, 0, 0, 0, 0, 0, 83, 136, 0,
	43, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	3493, 0, 0, 0, 0, 3837, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 52, 54, 138, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 136, 87,
	0, 0, 0, 0, 3500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 136, 136, 0, 0, 0, 3493, 0, 0, 0,
	0, 3833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 137, 45, 80, 49, 48,
	51, 0, 0, 137, 0, 0, 535, 555, 0, 0,
	0, 3494, 137, 0, 0, 137, 0, 0, 0, 931,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 82,
	81, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 0, 2476, 0, 1955, 0, 0, 0, 0, 0,
	0, 929, 45, 80, 49, 48, 51, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3494, 0, 0,
	0, 0, 0, 0, 930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 82, 81, 62, 63, 0,
	3496, 50, 0, 0, 0, 0, 0, 137, 0, 0,
	3505, 3497, 3498, 3499, 3503, 3504, 3501, 0, 3502, 0,
	3506, 0, 0, 0, 0, 71, 0, 72, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 2526, 0, 0,
	0, 0, 0, 0, 0, 0, 2533, 2537, 0, 0,
	0, 0, 77, 62, 63, 0, 3496, 0, 0, 0,
	0, 0, 53, 0, 0, 0, 3505, 3497, 3498, 3499,
	3503, 3504, 3501, 0, 3502, 0, 3506, 0, 0, 0,
	0, 71, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 3507, 3495, 0, 59, 60, 66,
	138, 67, 1908, 0, 0, 2239, 0, 0, 77, 138,
	0, 2574, 138, 0, 0, 0, 0, 0, 53, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 137, 0, 0, 1912, 1912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3507, 3495, 1956, 59, 60, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 2709, 137, 137, 137, 137, 137,
	2679, 0, 0, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 137, 0, 0, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 929, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 0, 0, 930,
	0, 52, 54, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1909,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1912, 0, 0, 0, 0, 0, 2798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 54, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 2797, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 1993, 0, 1993, 0, 1993, 1993, 0, 0, 0,
	0, 0, 0, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 64, 0, 0,
	0, 0, 0, 83, 0, 0, 43, 0, 137, 0,
	0, 0, 0, 2848, 2849, 2850, 0, 0, 0, 0,
	0, 0, 138, 138, 138, 138, 138, 0, 0, 0,
	0, 137, 137, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 2877, 87, 0, 0, 0, 0,
	3500, 138, 2476, 0, 2911, 2916, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 136, 555, 0,
	0, 0, 3493, 0, 0, 0, 0, 3825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2920, 0,
	0, 0, 0, 2925, 0, 0, 0, 0, 0, 2929,
	0, 0, 2930, 2931, 0, 0, 0, 534, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2709, 0, 1908, 0, 64, 0,
	0, 0, 0, 0, 83, 138, 0, 43, 45, 80,
	49, 48, 51, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3494, 0, 0, 929, 0, 1912, 138,
	2984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 82, 81, 0, 0, 138, 87, 50, 0, 0,
	0, 3500, 0, 0, 0, 0, 0, 0, 0, 2984,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 138,
	0, 0, 0, 3493, 0, 0, 0, 0, 3800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2913, 2918, 0, 0, 0, 0, 138, 0, 62,
	63, 0, 3496, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 3505, 3497, 3498, 3499, 3503, 3504, 3501, 0,
	3502, 0, 3506, 0, 0, 0, 0, 71, 0, 72,
	0, 0, 3071, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 40, 77, 0, 0, 0, 0, 45,
	80, 49, 48, 51, 53, 0, 0, 64, 0, 0,
	930, 2537, 0, 83, 3494, 0, 43, 0, 0, 0,
	0, 0, 0, 1909, 0, 0, 0, 0, 0, 0,
	0, 55, 82, 81, 0, 0, 3507, 3495, 50, 59,
	60, 66, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	3500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3493, 0, 0, 0, 0, 3785, 0, 0,
	62, 63, 0, 3496, 0, 0, 0, 0, 0, 0,
	0, 0, 1912, 3505, 3497, 3498, 3499, 3503, 3504, 3501,
	0, 3502, 0, 3506, 0, 535, 0, 0, 71, 2709,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 53, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 3071, 45, 80,
	49, 48, 51, 0, 3071, 3071, 3071, 0, 0, 0,
	0, 0, 0, 3494, 0, 0, 0, 3507, 3495, 0,
	59, 60, 66, 0, 67, 0, 0, 0, 2798, 0,
	55, 82, 81, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 52, 54, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2797, 0, 0, 0, 2798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 62,
	63, 0, 3496, 0, 0, 0, 2797, 0, 0, 0,
	0, 0, 3505, 3497, 3498, 3499, 3503, 3504, 3501, 0,
	3502, 0, 3506, 0, 0, 0, 0, 71, 0, 72,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 137, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 53, 0, 0, 0, 0, 0,
	0, 0, 3316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 0, 535,
	0, 0, 0, 0, 0, 0, 3507, 3495, 0, 59,
	60, 66, 0, 67, 52, 54, 0, 3342, 0, 0,
	79, 0, 0, 0, 0, 3071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2798, 0, 0, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 0, 0, 0, 0, 83, 0,
	0, 43, 0, 0, 0, 0, 0, 2797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 3500, 0, 0, 0, 0,
	0, 0, 3071, 0, 3071, 0, 3071, 0, 0, 0,
	0, 0, 0, 52, 54, 0, 0, 3493, 0, 79,
	0, 0, 0, 0, 2798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2797, 0, 0, 0,
	3529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 929, 0, 0, 0, 0, 1912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 80, 49, 48, 51, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 82, 81, 2798, 0,
	0, 1912, 50, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	2797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 63, 0, 3496, 0, 0,
	0, 0, 0, 0, 3071, 0, 0, 3505, 3497, 3498,
	3499, 3503, 3504, 3501, 3782, 3502, 0, 3506, 0, 0,
	0, 0, 71, 0, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 3664, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 0, 0, 0, 3668, 0, 1912, 0, 0,
	0, 0, 3071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 1912, 0, 0,
	0, 3507, 3495, 0, 59, 60, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 889, 3664, 385,
	651, 893, 736, 759, 902, 765, 767, 830, 712, 807,
	307, 756, 713, 0, 0, 704, 560, 705, 737, 223,
	559, 863, 808, 891, 793, 823, 833, 222, 209, 800,
	799, 880, 748, 747, 828, 876, 890, 0, 0, 659,
	270, 0, 0, 410, 365, 290, 0, 0, 791, 0,
	644, 645, 776, 832, 724, 819, 895, 757, 824, 896,
	87, 0, 1226, 0, 0, 473, 583, 582, 585, 586,
	587, 588, 0, 0, 148, 584, 589, 590, 591, 0,
	786, 829, 907, 703, 557, 574, 708, 658, 0, 881,
	744, 745, 227, 0, 0, 0, 0, 0, 0, 0,
	789, 806, 848, 773, 404, 835, 844, 858, 766, 325,
	243, 0, 0, 0, 0, 571, 572, 1991, 52, 54,
	0, 674, 0, 573, 79, 718, 569, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 575,
	0, 0, 0, 723, 701, 742, 850, 702, 700, 291,
	715, 647, 879, 774, 259, 165, 885, 772, 672, 838,
	719, 867, 760, 267, 717, 166, 714, 720, 758, 302,
	847, 853, 656, 169, 269, 864, 738, 751, 210, 0,
	337, 825, 403, 563, 238, 811, 336, 271, 396, 839,
	887, 402, 761, 379, 411, 415, 234, 794, 201, 362,
	225, 219, 743, 857, 707, 244, 324, 214, 263, 777,
	831, 739, 206, 842, 818, 869, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 865, 852, 871, 734, 721, 726,
	722, 750, 888, 253, 245, 872, 870, 752, 311, 192,
	804, 797, 790, 660, 406, 903, 221, 854, 408, 155,
	350, 349, 764, 252, 855, 156, 147, 332, 157, 260,
	174, 875, 417, 188, 265, 387, 562, 237, 301, 212,
	827, 312, 749, 168, 328, 283, 285, 282, 286, 242,
	151, 158, 851, 330, 352, 391, 190, 368, 149, 150,
	152, 160, 342, 161, 162, 894, 277, 229, 233, 246,
	257, 826, 335, 369, 409, 820, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 849, 184,
	179, 883, 866, 813, 779, 785, 709, 0, 178, 845,
	741, 753, 733, 821, 732, 241, 837, 399, 400, 211,
	418, 650, 898, 180, 716, 897, 298, 306, 297, 900,
	395, 884, 814, 803, 801, 710, 882, 812, 802, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	805, 0, 175, 0, 366, 892, 909, 377, 193, 727,
	859, 390, 154, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 841, 906, 310, 338, 200, 405,
	363, 226, 661, 303, 673, 667, 669, 668, 665, 666,
	664, 663, 662, 675, 648, 649, 652, 653, 654, 796,
	886, 711, 657, 862, 670, 671, 834, 904, 646, 207,
	595, 687, 688, 689, 596, 690, 691, 597, 598, 692,
	693, 694, 695, 599, 696, 697, 698, 676, 677, 678,
	679, 680, 681, 682, 683, 686, 684, 685, 0, 792,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	655, 170, 181, 268, 905, 331, 236, 699, 706, 725,
	728, 729, 730, 731, 735, 740, 746, 754, 755, 763,
	768, 769, 770, 771, 778, 780, 781, 782, 783, 784,
	787, 788, 798, 809, 810, 816, 817, 0, 840, 843,
	856, 860, 861, 868, 873, 874, 899, 908, 407, 217,
	795, 815, 846, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 159, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 878, 775,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 762,
	172, 877, 901, 822, 836, 889, 0, 385, 651, 893,
	736, 759, 902, 765, 767, 830, 712, 807, 307, 756,
	713, 0, 0, 704, 560, 705, 737, 223, 559, 863,
	808, 891, 793, 823, 833, 222, 209, 800, 799, 880,
	748, 747, 828, 876, 890, 0, 0, 659, 270, 0,
	0, 410, 365, 290, 0, 0, 791, 0, 644, 645,
	776, 832, 724, 819, 895, 757, 824, 896, 87, 0,
	0, 0, 0, 473, 583, 582, 585, 586, 587, 588,
	0, 0, 148, 584, 589, 590, 591, 0, 786, 829,
	907, 703, 557, 574, 708, 658, 3568, 881, 744, 745,
	227, 0, 0, 0, 0, 0, 0, 0, 789, 806,
	848, 773, 404, 835, 844, 858, 766, 325, 243, 0,
	0, 0, 0, 571, 572, 0, 0, 0, 0, 674,
	0, 573, 0, 718, 569, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 575, 0, 0,
	0, 723, 701, 742, 850, 702, 700, 291, 715, 647,
	879, 774, 259, 165, 885, 772, 672, 838, 719, 867,
	760, 267, 717, 166, 714, 720, 758, 302, 847, 853,
	656, 169, 269, 864, 738, 751, 210, 0, 337, 825,
	403, 563, 238, 811, 336, 271, 396, 839, 887, 402,
	761, 379, 411, 415, 234, 794, 201, 362, 225, 219,
	743, 857, 707, 244, 324, 214, 263, 777, 831, 739,
	206, 842, 818, 869, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 865, 852, 871, 734, 721, 726, 722, 750,
	888, 253, 245, 872, 870, 752, 311, 192, 804, 797,
	790, 660, 406, 903, 221, 854, 408, 155, 350, 349,
	764, 252, 855, 156, 147, 332, 157, 260, 174, 875,
	417, 188, 265, 387, 562, 237, 301, 212, 827, 312,
	749, 168, 328, 283, 285, 282, 286, 242, 151, 158,
	851, 330, 352, 391, 190, 368, 149, 150, 152, 160,
	342, 161, 162, 894, 277, 229, 233, 246, 257, 826,
	335, 369, 409, 820, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 849, 184, 179, 883,
	866, 813, 779, 785, 709, 0, 178, 845, 741, 753,
	733, 821, 732, 241, 837, 399, 400, 211, 418, 650,
	898, 180, 716, 897, 298, 306, 297, 900, 395, 884,
	814, 803, 801, 710, 882, 812, 802, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 805, 0,
	175, 0, 366, 892, 909, 377, 193, 727, 859, 390,
	154, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 841, 906, 310, 338, 200, 405, 363, 226,
	661, 303, 673, 667, 669, 668, 665, 666, 664, 663,
	662, 675, 648, 649, 652, 653, 654, 796, 886, 711,
	657, 862, 670, 671, 834, 904, 646, 207, 595, 687,
	688, 689, 596, 690, 691, 597, 598, 692, 693, 694,
	695, 599, 696, 697, 698, 676, 677, 678, 679, 680,
	681, 682, 683, 686, 684, 685, 0, 792, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 655, 170,
	181, 268, 905, 331, 236, 699, 706, 725, 728, 729,
	730, 731, 735, 740, 746, 754, 755, 763, 768, 769,
	770, 771, 778, 780, 781, 782, 783, 784, 787, 788,
	798, 809, 810, 816, 817, 0, 840, 843, 856, 860,
	861, 868, 873, 874, 899, 908, 407, 217, 795, 815,
	846, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	159, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 878, 775, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 762, 172, 877,
	901, 822, 836, 889, 0, 385, 651, 893, 736, 759,
	902, 765, 767, 830, 712, 807, 307, 756, 713, 0,
	0, 704, 560, 705, 737, 223, 559, 863, 808, 891,
	793, 823, 833, 222, 209, 800, 799, 880, 748, 747,
	828, 876, 890, 0, 0, 659, 270, 0, 0, 410,
	365, 290, 0, 0, 791, 0, 644, 645, 776, 832,
	724, 819, 895, 757, 824, 896, 87, 0, 0, 0,
	0, 473, 583, 582, 585, 586, 587, 588, 0, 0,
	148, 584, 589, 590, 591, 0, 786, 829, 907, 703,
	557, 574, 708, 658, 0, 881, 744, 745, 227, 0,
	0, 0, 0, 0, 0, 0, 789, 806, 848, 773,
	404, 835, 844, 858, 766, 325, 243, 0, 0, 0,
	0, 571, 572, 553, 0, 0, 0, 674, 0, 573,
	0, 718, 569, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 575, 0, 0, 0, 723,
	701, 742, 850, 702, 700, 291, 715, 647, 879, 774,
	259, 165, 885, 772, 672, 838, 719, 867, 760, 267,
	717, 166, 714, 720, 758, 302, 847, 853, 656, 169,
	269, 864, 738, 751, 210, 0, 337, 825, 403, 563,
	238, 811, 336, 271, 396, 839, 887, 402, 761, 379,
	411, 415, 234, 794, 201, 362, 225, 219, 743, 857,
	707, 244, 324, 214, 263, 777, 831, 739, 206, 842,
	818, 869, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	865, 852, 871, 734, 721, 726, 722, 750, 888, 253,
	245, 872, 870, 752, 311, 192, 804, 797, 790, 660,
	406, 903, 221, 854, 408, 155, 350, 349, 764, 252,
	855, 156, 147, 332, 157, 260, 174, 875, 417, 188,
	265, 387, 562, 237, 301, 212, 827, 312, 749, 168,
	328, 283, 285, 282, 286, 242, 151, 158, 851, 330,
	352, 391, 190, 368, 149, 150, 152, 160, 342, 161,
	162, 894, 277, 229, 233, 246, 257, 826, 335, 369,
	409, 820, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 849, 184, 179, 883, 866, 813,
	779, 785, 709, 0, 178, 845, 741, 753, 733, 821,
	732, 241, 837, 399, 400, 211, 418, 650, 898, 180,
	716, 897, 298, 306, 297, 900, 395, 884, 814, 803,
	801, 710, 882, 812, 802, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 805, 0, 175, 0,
	366, 892, 909, 377, 193, 727, 859, 390, 154, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	841, 906, 310, 338, 200, 405, 363, 226, 661, 303,
	673, 667, 669, 668, 665, 666, 664, 663, 662, 675,
	648, 649, 652, 653, 654, 796, 886, 711, 657, 862,
	670, 671, 834, 904, 646, 207, 595, 687, 688, 689,
	596, 690, 691, 597, 598, 692, 693, 694, 695, 599,
	696, 697, 698, 676, 677, 678, 679, 680, 681, 682,
	683, 686, 684, 685, 0, 792, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 655, 170, 181, 268,
	905, 331, 236, 699, 706, 725, 728, 729, 730, 731,
	735, 740, 746, 754, 755, 763, 768, 769, 770, 771,
	778, 780, 781, 782, 783, 784, 787, 788, 798, 809,
	810, 816, 817, 0, 840, 843, 856, 860, 861, 868,
	873, 874, 899, 908, 407, 217, 795, 815, 846, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 159, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 878, 775, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 762, 172, 877, 901, 822,
	836, 889, 0, 385, 651, 893, 736, 759, 902, 765,
	767, 830, 712, 807, 307, 756, 713, 0, 0, 704,
	560, 705, 737, 223, 559, 863, 808, 891, 793, 823,
	833, 222, 209, 800, 799, 880, 748, 747, 828, 876,
	890, 0, 0, 659, 270, 0, 0, 410, 365, 290,
	0, 0, 791, 0, 644, 645, 776, 832, 724, 819,
	895, 757, 824, 896, 87, 0, 1226, 0, 0, 473,
	583, 582, 585, 586, 587, 588, 0, 0, 148, 584,
	589, 590, 591, 0, 786, 829, 907, 703, 557, 574,
	708, 658, 0, 881, 744, 745, 227, 0, 0, 0,
	0, 0, 0, 0, 789, 806, 848, 773, 404, 835,
	844, 858, 766, 325, 243, 0, 0, 0, 0, 571,
	572, 0, 0, 0, 0, 674, 0, 573, 0, 718,
	569, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 575, 0, 0, 0, 723, 701, 742,
	850, 702, 700, 291, 715, 647, 879, 774, 259, 165,
	885, 772, 672, 838, 719, 867, 760, 267, 717, 166,
	714, 720, 758, 302, 847, 853, 656, 169, 269, 864,
	738, 751, 210, 0, 337, 825, 403, 563, 238, 811,
	336, 271, 396, 839, 887, 402, 761, 379, 411, 415,
	234, 794, 201, 362, 225, 219, 743, 857, 707, 244,
	324, 214, 263, 777, 831, 739, 206, 842, 818, 869,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 865, 852,
	871, 734, 721, 726, 722, 750, 888, 253, 245, 872,
	870, 752, 311, 192, 804, 797, 790, 660, 406, 903,
	221, 854, 408, 155, 350, 349, 764, 252, 855, 156,
	147, 332, 157, 260, 174, 875, 417, 188, 265, 387,
	562, 237, 301, 212, 827, 312, 749, 168, 328, 283,
	285, 282, 286, 242, 151, 158, 851, 330, 352, 391,
	190, 368, 149, 150, 152, 160, 342, 161, 162, 894,
	277, 229, 233, 246, 257, 826, 335, 369, 409, 820,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 849, 184, 179, 883, 866, 813, 779, 785,
	709, 0, 178, 845, 741, 753, 733, 821, 732, 241,
	837, 399, 400, 211, 418, 650, 898, 180, 716, 897,
	298, 306, 297, 900, 395, 884, 814, 803, 801, 710,
	882, 812, 802, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 805, 0, 175, 0, 366, 892,
	909, 377, 193, 727, 859, 390, 154, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 841, 906,
	310, 338, 200, 405, 363, 226, 661, 303, 673, 667,
	669, 668, 665, 666, 664, 663, 662, 675, 648, 649,
	652, 653, 654, 796, 886, 711, 657, 862, 670, 671,
	834, 904, 646, 207, 595, 687, 688, 689, 596, 690,
	691, 597, 598, 692, 693, 694, 695, 599, 696, 697,
	698, 676, 677, 678, 679, 680, 681, 682, 683, 686,
	684, 685, 0, 792, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 0, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 655, 170, 181, 268, 905, 331,
	236, 699, 706, 725, 728, 729, 730, 731, 735, 740,
	746, 754, 755, 763, 768, 769, 770, 771, 778, 780,
	781, 782, 783, 784, 787, 788, 798, 809, 810, 816,
	817, 0, 840, 843, 856, 860, 861, 868, 873, 874,
	899, 908, 407, 217, 795, 815, 846, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 159, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 878, 775, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 762, 172, 877, 901, 822, 836, 889,
	0, 385, 651, 893, 736, 759, 902, 765, 767, 830,
	712, 807, 307, 756, 713, 0, 0, 704, 560, 705,
	737, 223, 559, 863, 808, 891, 793, 823, 833, 222,
	209, 800, 799, 880, 748, 747, 828, 876, 890, 0,
	0, 659, 270, 0, 0, 410, 365, 290, 0, 0,
	791, 0, 644, 645, 776, 832, 724, 819, 895, 757,
	824, 896, 87, 0, 0, 0, 0, 473, 583, 582,
	585, 586, 587, 588, 0, 0, 148, 584, 589, 590,
	591, 0, 786, 829, 907, 703, 557, 574, 708, 658,
	0, 881, 744, 745, 227, 0, 0, 0, 0, 0,
	0, 0, 789, 806, 848, 773, 404, 835, 844, 858,
	766, 325, 243, 0, 0, 0, 0, 571, 572, 1991,
	0, 0, 0, 674, 0, 573, 0, 718, 569, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 575, 0, 0, 0, 723, 701, 742, 850, 702,
	700, 291, 715, 647, 879, 774, 259, 165, 885, 772,
	672, 838, 719, 867, 760, 267, 717, 166, 714, 720,
	758, 302, 847, 853, 656, 169, 269, 864, 738, 751,
	210, 0, 337, 825, 403, 563, 238, 811, 336, 271,
	396, 839, 887, 402, 761, 379, 411, 415, 234, 794,
	201, 362, 225, 219, 743, 857, 707, 244, 324, 214,
	263, 777, 831, 739, 206, 842, 818, 869, 361, 393,
	171, 287, 394, 414, 189, 386, 288, 295, 203, 205,
	204, 183, 355, 392, 195, 208, 865, 852, 871, 734,
	721, 726, 722, 750, 888, 253, 245, 872, 870, 752,
	311, 192, 804, 797, 790, 660, 406, 903, 221, 854,
	408, 155, 350, 349, 764, 252, 855, 156, 147, 332,
	157, 260, 174, 875, 417, 188, 265, 387, 562, 237,
	301, 212, 827, 312, 749, 168, 328, 283, 285, 282,
	286, 242, 151, 158, 851, 330, 352, 391, 190, 368,
	149, 150, 152, 160, 342, 161, 162, 894, 277, 229,
	233, 246, 257, 826, 335, 369, 409, 820, 185, 339,
	370, 383, 344, 240, 372, 376, 373, 374, 371, 375,
	340, 341, 0, 177, 378, 401, 196, 351, 354, 416,
	849, 184, 179, 883, 866, 813, 779, 785, 709, 0,
	178, 845, 741, 753, 733, 821, 732, 241, 837, 399,
	400, 211, 418, 650, 898, 180, 716, 897, 298, 306,
	297, 900, 395, 884, 814, 803, 801, 710, 882, 812,
	802, 266, 232, 248, 322, 273, 323, 249, 293, 292,
	294, 275, 805, 0, 175, 0, 366, 892, 909, 377,
	193, 727, 859, 390, 154, 329, 194, 239, 230, 321,
	296, 186, 251, 364, 264, 272, 841, 906, 310, 338,
	200, 405, 363, 226, 661, 303, 673, 667, 669, 668,
	665, 666, 664, 663, 662, 675, 648, 649, 652, 653,
	654, 796, 886, 711, 657, 862, 670, 671, 834, 904,
	646, 207, 595, 687, 688, 689, 596, 690, 691, 597,
	598, 692, 693, 694, 695, 599, 696, 697, 698, 676,
	677, 678, 679, 680, 681, 682, 683, 686, 684, 685,
	0, 792, 318, 176, 187, 199, 218, 216, 231, 261,
	284, 289, 316, 353, 358, 380, 381, 382, 384, 220,
	0, 224, 198, 333, 197, 274, 254, 317, 388, 389,
	326, 213, 655, 170, 181, 268, 905, 331, 236, 699,
	706, 725, 728, 729, 730, 731, 735, 740, 746, 754,
	755, 763, 768, 769, 770, 771, 778, 780, 781, 782,
	783, 784, 787, 788, 798, 809, 810, 816, 817, 0,
	840, 843, 856, 860, 861, 868, 873, 874, 899, 908,
	407, 217, 795, 815, 846, 182, 191, 202, 215, 228,
	235, 247, 250, 255, 256, 258, 262, 276, 278, 279,
	280, 281, 299, 300, 304, 305, 308, 309, 313, 314,
	315, 319, 320, 327, 159, 334, 343, 345, 346, 347,
	348, 356, 357, 359, 360, 367, 397, 398, 412, 413,
	878, 775, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 762, 172, 877, 901, 822, 836, 889, 0, 385,
	651, 893, 736, 759, 902, 765, 767, 830, 712, 807,
	307, 756, 713, 0, 0, 704, 560, 705, 737, 223,
	559, 863, 808, 891, 793, 823, 833, 222, 209, 800,
	799, 880, 748, 747, 828, 876, 890, 0, 0, 659,
	270, 0, 0, 410, 365, 290, 0, 0, 791, 0,
	644, 645, 776, 832, 724, 819, 895, 757, 2105, 896,
	87, 0, 0, 0, 0, 473, 583, 2107, 585, 586,
	587, 588, 0, 0, 148, 584, 589, 590, 591, 2106,
	786, 829, 907, 703, 557, 574, 708, 658, 0, 881,
	744, 745, 227, 0, 0, 0, 0, 0, 0, 0,
	789, 806, 848, 773, 404, 835, 844, 858, 766, 325,
	243, 0, 0, 0, 0, 571, 572, 0, 0, 0,
	0, 674, 0, 573, 0, 718, 569, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 575,
	0, 0, 0, 723, 701, 742, 850, 702, 700, 291,
	715, 647, 879, 774, 259, 165, 885, 772, 672, 838,
	719, 867, 760, 267, 717, 166, 714, 720, 758, 302,
	847, 853, 656, 169, 269, 864, 738, 751, 210, 0,
	337, 825, 403, 563, 238, 811, 336, 271, 396, 839,
	887, 402, 761, 379, 411, 415, 234, 794, 201, 362,
	225, 219, 743, 857, 707, 244, 324, 214, 263, 777,
	831, 739, 206, 842, 818, 869, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 865, 852, 871, 734, 721, 726,
	722, 750, 888, 253, 245, 872, 870, 752, 311, 192,
	804, 797, 790, 660, 406, 903, 221, 854, 408, 155,
	350, 349, 764, 252, 855, 156, 147, 332, 157, 260,
	174, 875, 417, 188, 265, 387, 562, 237, 301, 212,
	827, 312, 749, 168, 328, 283, 285, 282, 286, 242,
	151, 158, 851, 330, 352, 391, 190, 368, 149, 150,
	152, 160, 342, 161, 162, 894, 277, 229, 233, 246,
	257, 826, 335, 369, 409, 820, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 849, 184,
	179, 883, 866, 813, 779, 785, 709, 0, 178, 845,
	741, 753, 733, 821, 732, 241, 837, 399, 400, 211,
	418, 650, 898, 180, 716, 897, 298, 306, 297, 900,
	395, 884, 814, 803, 801, 710, 882, 812, 802, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	805, 0, 175, 0, 366, 892, 909, 377, 193, 727,
	859, 390, 154, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 841, 906, 310, 338, 200, 405,
	363, 226, 661, 303, 673, 667, 669, 668, 665, 666,
	664, 663, 662, 675, 648, 649, 652, 653, 654, 796,
	886, 711, 657, 862, 670, 671, 834, 904, 646, 207,
	595, 687, 688, 689, 596, 690, 691, 597, 598, 692,
	693, 694, 695, 599, 696, 697, 698, 676, 677, 678,
	679, 680, 681, 682, 683, 686, 684, 685, 0, 792,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	655, 170, 181, 268, 905, 331, 236, 699, 706, 725,
	728, 729, 730, 731, 735, 740, 746, 754, 755, 763,
	768, 769, 770, 771, 778, 780, 781, 782, 783, 784,
	787, 788, 798, 809, 810, 816, 817, 0, 840, 843,
	856, 860, 861, 868, 873, 874, 899, 908, 407, 217,
	795, 815, 846, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 159, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 878, 775,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 762,
	172, 877, 901, 822, 836, 889, 0, 385, 651, 893,
	736, 759, 902, 765, 767, 830, 712, 807, 307, 756,
	713, 0, 0, 704, 949, 705, 737, 223, 947, 863,
	808, 891, 793, 823, 833, 222, 209, 800, 799, 880,
	748, 747, 828, 876, 890, 0, 0, 659, 270, 0,
	0, 410, 365, 290, 0, 0, 791, 0, 644, 645,
	776, 832, 724, 819, 895, 757, 824, 896, 87, 0,
	1226, 0, 0, 473, 583, 582, 585, 586, 587, 588,
	0, 0, 148, 584, 589, 590, 591, 0, 786, 829,
	907, 703, 966, 574, 708, 658, 0, 881, 744, 745,
	227, 0, 0, 0, 0, 0, 0, 0, 789, 806,
	848, 773, 404, 835, 844, 858, 766, 325, 243, 0,
	0, 0, 0, 571, 572, 0, 0, 0, 0, 674,
	0, 573, 0, 718, 569, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 575, 0, 0,
	0, 723, 701, 742, 850, 702, 700, 291, 715, 647,
	879, 774, 259, 165, 885, 772, 672, 838, 719, 867,
	760, 267, 717, 166, 714, 720, 758, 302, 847, 853,
	656, 169, 269, 864, 738, 751, 210, 0, 337, 825,
	403, 563, 238, 811, 336, 271, 396, 839, 887, 402,
	761, 379, 411, 415, 234, 794, 201, 362, 225, 219,
	743, 857, 707, 244, 324, 214, 263, 777, 831, 739,
	206, 842, 818, 869, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 865, 852, 871, 734, 721, 726, 722, 750,
	888, 253, 245, 872, 870, 752, 311, 192, 804, 797,
	790, 660, 406, 903, 221, 854, 408, 155, 350, 349,
	764, 252, 855, 156, 147, 332, 157, 260, 174, 875,
	417, 188, 265, 387, 562, 237, 301, 212, 827, 312,
	749, 168, 328, 283, 285, 282, 286, 242, 151, 158,
	851, 330, 352, 391, 190, 368, 149, 150, 152, 160,
	342, 161, 162, 894, 277, 229, 233, 246, 257, 826,
	335, 369, 409, 820, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 849, 184, 179, 883,
	866, 813, 779, 785, 709, 0, 178, 845, 741, 753,
	733, 821, 732, 241, 837, 399, 400, 211, 418, 650,
	898, 180, 716, 897, 298, 306, 297, 900, 395, 884,
	814, 803, 801, 710, 882, 812, 802, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 805, 0,
	175, 0, 366, 892, 909, 377, 193, 727, 859, 390,
	154, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 841, 906, 310, 338, 200, 405, 363, 226,
	661, 303, 673, 667, 669, 668, 665, 666, 664, 663,
	662, 675, 648, 649, 652, 653, 654, 796, 886, 711,
	657, 862, 670, 671, 834, 904, 646, 207, 595, 687,
	688, 689, 596, 690, 691, 597, 598, 692, 693, 694,
	695, 599, 696, 697, 698, 676, 677, 678, 679, 680,
	681, 682, 683, 686, 684, 685, 0, 792, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 655, 170,
	181, 268, 905, 331, 236, 699, 706, 725, 728, 729,
	730, 731, 735, 740, 746, 754, 755, 763, 768, 769,
	770, 771, 778, 780, 781, 782, 783, 784, 787, 788,
	798, 809, 810, 816, 817, 0, 840, 843, 856, 860,
	861, 868, 873, 874, 899, 908, 407, 217, 795, 815,
	846, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	159, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 878, 775, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 762, 172, 877,
	901, 822, 836, 889, 0, 385, 651, 893, 736, 759,
	902, 765, 767, 830, 712, 807, 307, 756, 713, 0,
	0, 704, 560, 705, 737, 223, 559, 863, 808, 891,
	793, 823, 833, 222, 209, 800, 799, 880, 748, 747,
	828, 876, 890, 0, 0, 659, 270, 0, 0, 410,
	365, 290, 0, 0, 791, 0, 644, 645, 776, 832,
	724, 819, 895, 757, 824, 896, 87, 0, 0, 0,
	0, 473, 583, 2025, 585, 586, 587, 588, 0, 0,
	148, 584, 589, 590, 591, 0, 786, 829, 907, 703,
	557, 574, 708, 658, 0, 881, 744, 745, 227, 0,
	0, 0, 0, 0, 0, 0, 789, 806, 848, 773,
	404, 835, 844, 858, 766, 325, 243, 0, 0, 0,
	0, 571, 572, 1991, 0, 0, 0, 674, 0, 573,
	0, 718, 569, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 575, 0, 0, 0, 723,
	701, 742, 850, 702, 700, 291, 715, 647, 879, 774,
	259, 165, 885, 772, 672, 838, 719, 867, 760, 267,
	717, 166, 714, 720, 758, 302, 847, 853, 656, 169,
	269, 864, 738, 751, 210, 0, 337, 825, 403, 563,
	238, 811, 336, 271, 396, 839, 887, 402, 761, 379,
	411, 415, 234, 794, 201, 362, 225, 219, 743, 857,
	707, 244, 324, 214, 263, 777, 831, 739, 206, 842,
	818, 869, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	865, 852, 871, 734, 721, 726, 722, 750, 888, 253,
	245, 872, 870, 752, 311, 192, 804, 797, 790, 660,
	406, 903, 221, 854, 408, 155, 350, 349, 764, 252,
	855, 156, 147, 332, 157, 260, 174, 875, 417, 188,
	265, 387, 562, 237, 301, 212, 827, 312, 749, 168,
	328, 283, 285, 282, 286, 242, 151, 158, 851, 330,
	352, 391, 190, 368, 149, 150, 152, 160, 342, 161,
	162, 894, 277, 229, 233, 246, 257, 826, 335, 369,
	409, 820, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 849, 184, 179, 883, 866, 813,
	779, 785, 709, 0, 178, 845, 741, 753, 733, 821,
	732, 241, 837, 399, 400, 211, 418, 650, 898, 180,
	716, 897, 298, 306, 297, 900, 395, 884, 814, 803,
	801, 710, 882, 812, 802, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 805, 0, 175, 0,
	366, 892, 909, 377, 193, 727, 859, 390, 154, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	841, 906, 310, 338, 200, 405, 363, 226, 661, 303,
	673, 667, 669, 668, 665, 666, 664, 663, 662, 675,
	648, 649, 652, 653, 654, 796, 886, 711, 657, 862,
	670, 671, 834, 904, 646, 207, 595, 687, 688, 689,
	596, 690, 691, 597, 598, 692, 693, 694, 695, 599,
	696, 697, 698, 676, 677, 678, 679, 680, 681, 682,
	683, 686, 684, 685, 0, 792, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 655, 170, 181, 268,
	905, 331, 236, 699, 706, 725, 728, 729, 730, 731,
	735, 740, 746, 754, 755, 763, 768, 769, 770, 771,
	778, 780, 781, 782, 783, 784, 787, 788, 798, 809,
	810, 816, 817, 0, 840, 843, 856, 860, 861, 868,
	873, 874, 899, 908, 407, 217, 795, 815, 846, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 159, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 878, 775, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 762, 172, 877, 901, 822,
	836, 889, 0, 385, 651, 893, 736, 759, 902, 765,
	767, 830, 712, 807, 307, 756, 713, 0, 0, 704,
	560, 705, 737, 223, 559, 863, 808, 891, 793, 823,
	833, 222, 209, 800, 799, 880, 748, 747, 828, 876,
	890, 0, 0, 659, 270, 0, 0, 410, 365, 290,
	0, 0, 791, 0, 644, 645, 776, 832, 724, 819,
	895, 757, 824, 896, 87, 0, 0, 0, 0, 473,
	583, 2022, 585, 586, 587, 588, 0, 0, 148, 584,
	589, 590, 591, 0, 786, 829, 907, 703, 557, 574,
	708, 658, 0, 881, 744, 745, 227, 0, 0, 0,
	0, 0, 0, 0, 789, 806, 848, 773, 404, 835,
	844, 858, 766, 325, 243, 0, 0, 0, 0, 571,
	572, 1991, 0, 0, 0, 674, 0, 573, 0, 718,
	569, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 575, 0, 0, 0, 723, 701, 742,
	850, 702, 700, 291, 715, 647, 879, 774, 259, 165,
	885, 772, 672, 838, 719, 867, 760, 267, 717, 166,
	714, 720, 758, 302, 847, 853, 656, 169, 269, 864,
	738, 751, 210, 0, 337, 825, 403, 563, 238, 811,
	336, 271, 396, 839, 887, 402, 761, 379, 411, 415,
	234, 794, 201, 362, 225, 219, 743, 857, 707, 244,
	324, 214, 263, 777, 831, 739, 206, 842, 818, 869,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 865, 852,
	871, 734, 721, 726, 722, 750, 888, 253, 245, 872,
	870, 752, 311, 192, 804, 797, 790, 660, 406, 903,
	221, 854, 408, 155, 350, 349, 764, 252, 855, 156,
	147, 332, 157, 260, 174, 875, 417, 188, 265, 387,
	562, 237, 301, 212, 827, 312, 749, 168, 328, 283,
	285, 282, 286, 242, 151, 158, 851, 330, 352, 391,
	190, 368, 149, 150, 152, 160, 342, 161, 162, 894,
	277, 229, 233, 246, 257, 826, 335, 369, 409, 820,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 849, 184, 179, 883, 866, 813, 779, 785,
	709, 0, 178, 845, 741, 753, 733, 821, 732, 241,
	837, 399, 400, 211, 418, 650, 898, 180, 716, 897,
	298, 306, 297, 900, 395, 884, 814, 803, 801, 710,
	882, 812, 802, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 805, 0, 175, 0, 366, 892,
	909, 377, 193, 727, 859, 390, 154, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 841, 906,
	310, 338, 200, 405, 363, 226, 661, 303, 673, 667,
	669, 668, 665, 666, 664, 663, 662, 675, 648, 649,
	652, 653, 654, 796, 886, 711, 657, 862, 670, 671,
	834, 904, 646, 207, 595, 687, 688, 689, 596, 690,
	691, 597, 598, 692, 693, 694, 695, 599, 696, 697,
	698, 676, 677, 678, 679, 680, 681, 682, 683, 686,
	684, 685, 0, 792, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 0, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 655, 170, 181, 268, 905, 331,
	236, 699, 706, 725, 728, 729, 730, 731, 735, 740,
	746, 754, 755, 763, 768, 769, 770, 771, 778, 780,
	781, 782, 783, 784, 787, 788, 798, 809, 810, 816,
	817, 0, 840, 843, 856, 860, 861, 868, 873, 874,
	899, 908, 407, 217, 795, 815, 846, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 159, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 878, 775, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 762, 172, 877, 901, 822, 836, 889,
	40, 385, 651, 893, 736, 759, 902, 765, 767, 830,
	712, 807, 307, 756, 713, 0, 0, 704, 560, 705,
	737, 223, 559, 863, 808, 891, 793, 823, 833, 222,
	209, 800, 799, 880, 748, 747, 828, 876, 890, 0,
	0, 659, 270, 0, 0, 410, 365, 290, 0, 0,
	791, 0, 644, 645, 776, 832, 724, 819, 895, 757,
	824, 896, 87, 0, 0, 0, 0, 473, 583, 582,
	585, 586, 587, 588, 0, 0, 148, 584, 589, 590,
	591, 0, 786, 829, 907, 703, 557, 574, 708, 658,
	0, 881, 744, 745, 227, 0, 0, 0, 0, 0,
	0, 0, 789, 806, 848, 773, 404, 835, 844, 858,
	766, 325, 243, 0, 0, 0, 0, 571, 572, 0,
	0, 0, 0, 674, 0, 573, 0, 718, 569, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 575, 0, 0, 0, 723, 701, 742, 850, 702,
	700, 291, 715, 647, 879, 774, 259, 165, 885, 772,
	672, 838, 719, 867, 760, 267, 717, 166, 714, 720,
	758, 302, 847, 853, 656, 169, 269, 864, 738, 751,
	210, 0, 337, 825, 403, 563, 238, 811, 336, 271,
	396, 839, 887, 402, 761, 379, 411, 415, 234, 794,
	201, 362, 225, 219, 743, 857, 707, 244, 324, 214,
	263, 777, 831, 739, 206, 842, 818, 869, 361, 393,
	171, 287, 394, 414, 189, 386, 288, 295, 203, 205,
	204, 183, 355, 392, 195, 208, 865, 852, 871, 734,
	721, 726, 722, 750, 888, 253, 245, 872, 870, 752,
	311, 192, 804, 797, 790, 660, 406, 903, 221, 854,
	408, 155, 350, 349, 764, 252, 855, 156, 147, 332,
	157, 260, 174, 875, 417, 188, 265, 387, 562, 237,
	301, 212, 827, 312, 749, 168, 328, 283, 285, 282,
	286, 242, 151, 158, 851, 330, 352, 391, 190, 368,
	149, 150, 152, 160, 342, 161, 162, 894, 277, 229,
	233, 246, 257, 826, 335, 369, 409, 820, 185, 339,
	370, 383, 344, 240, 372, 376, 373, 374, 371, 375,
	340, 341, 0, 177, 378, 401, 196, 351, 354, 416,
	849, 184, 179, 883, 866, 813, 779, 785, 709, 0,
	178, 845, 741, 753, 733, 821, 732, 241, 837, 399,
	400, 211, 418, 650, 898, 180, 716, 897, 298, 306,
	297, 900, 395, 884, 814, 803, 801, 710, 882, 812,
	802, 266, 232, 248, 322, 273, 323, 249, 293, 292,
	294, 275, 805, 0, 175, 0, 366, 892, 909, 377,
	193, 727, 859, 390, 154, 329, 194, 239, 230, 321,
	296, 186, 251, 364, 264, 272, 841, 906, 310, 338,
	200, 405, 363, 226, 661, 303, 673, 667, 669, 668,
	665, 666, 664, 663, 662, 675, 648, 649, 652, 653,
	654, 796, 886, 711, 657, 862, 670, 671, 834, 904,
	646, 207, 595, 687, 688, 689, 596, 690, 691, 597,
	598, 692, 693, 694, 695, 599, 696, 697, 698, 676,
	677, 678, 679, 680, 681, 682, 683, 686, 684, 685,
	0, 792, 318, 176, 187, 199, 218, 216, 231, 261,
	284, 289, 316, 353, 358, 380, 381, 382, 384, 220,
	0, 224, 198, 333, 197, 274, 254, 317, 388, 389,
	326, 213, 655, 170, 181, 268, 1313, 331, 236, 699,
	706, 725, 728, 729, 730, 731, 735, 740, 746, 754,
	755, 763, 768, 769, 770, 771, 778, 780, 781, 782,
	783, 784, 787, 788, 798, 809, 810, 816, 817, 0,
	840, 843, 856, 860, 861, 868, 873, 874, 899, 908,
	407, 217, 795, 815, 846, 182, 191, 202, 215, 228,
	235, 247, 250, 255, 256, 258, 262, 276, 278, 279,
	280, 281, 299, 300, 304, 305, 308, 309, 313, 314,
	315, 319, 320, 327, 159, 334, 343, 345, 346, 347,
	348, 356, 357, 359, 360, 367, 397, 398, 412, 413,
	878, 775, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 762, 172, 877, 901, 822, 836, 889, 0, 385,
	651, 893, 736, 759, 902, 765, 767, 830, 712, 807,
	307, 756, 713, 0, 0, 704, 560, 705, 737, 223,
	559, 863, 808, 891, 793, 823, 833, 222, 209, 800,
	799, 880, 748, 747, 828, 876, 890, 0, 0, 659,
	270, 0, 0, 410, 365, 290, 0, 0, 791, 0,
	644, 645, 776, 832, 724, 819, 895, 757, 824, 896,
	87, 0, 1845, 0, 0, 473, 583, 582, 585, 586,
	587, 588, 0, 0, 148, 584, 589, 590, 591, 0,
	786, 829, 907, 703, 557, 574, 708, 658, 0, 881,
	744, 745, 227, 0, 0, 0, 0, 0, 0, 0,
	789, 806, 848, 773, 404, 835, 844, 858, 766, 325,
	243, 0, 0, 0, 0, 571, 572, 0, 0, 0,
	0, 674, 0, 573, 0, 718, 569, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 575,
	0, 0, 0, 723, 701, 742, 850, 702, 700, 291,
	715, 647, 879, 774, 259, 165, 885, 772, 672, 838,
	719, 867, 760, 267, 717, 166, 714, 720, 758, 302,
	847, 853, 656, 169, 269, 864, 738, 751, 210, 0,
	337, 825, 403, 563, 238, 811, 336, 271, 396, 839,
	887, 402, 761, 379, 411, 415, 234, 794, 201, 362,
	225, 219, 743, 857, 707, 244, 324, 214, 263, 777,
	831, 739, 206, 842, 818, 869, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 865, 852, 871, 734, 721, 726,
	722, 750, 888, 253, 245, 872, 870, 752, 311, 192,
	804, 797, 790, 660, 406, 903, 221, 854, 408, 155,
	350, 349, 764, 252, 855, 156, 147, 332, 157, 260,
	174, 875, 417, 188, 265, 387, 562, 237, 301, 212,
	827, 312, 749, 168, 328, 283, 285, 282, 286, 242,
	151, 158, 851, 330, 352, 391, 190, 368, 149, 150,
	152, 160, 342, 161, 162, 894, 277, 229, 233, 246,
	257, 826, 335, 369, 409, 820, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 849, 184,
	179, 883, 866, 813, 779, 785, 709, 0, 178, 845,
	741, 753, 733, 821, 732, 241, 837, 399, 400, 211,
	418, 650, 898, 180, 716, 897, 298, 306, 297, 900,
	395, 884, 814, 803, 801, 710, 882, 812, 802, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	805, 0, 175, 0, 366, 892, 909, 377, 193, 727,
	859, 390, 154, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 841, 906, 310, 338, 200, 405,
	363, 226, 661, 303, 673, 667, 669, 668, 665, 666,
	664, 663, 662, 675, 648, 649, 652, 653, 654, 796,
	886, 711, 657, 862, 670, 671, 834, 904, 646, 207,
	595, 687, 688, 689, 596, 690, 691, 597, 598, 692,
	693, 694, 695, 599, 696, 697, 698, 676, 677, 678,
	679, 680, 681, 682, 683, 686, 684, 685, 0, 792,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	655, 170, 181, 268, 905, 331, 236, 699, 706, 725,
	728, 729, 730, 731, 735, 740, 746, 754, 755, 763,
	768, 769, 770, 771, 778, 780, 781, 782, 783, 784,
	787, 788, 798, 809, 810, 816, 817, 0, 840, 843,
	856, 860, 861, 868, 873, 874, 899, 908, 407, 217,
	795, 815, 846, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 159, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 878, 775,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 762,
	172, 877, 901, 822, 836, 889, 0, 385, 651, 893,
	736, 759, 902, 765, 767, 830, 712, 807, 307, 756,
	713, 0, 0, 704, 949, 705, 737, 223, 947, 863,
	808, 891, 793, 823, 833, 222, 209, 800, 799, 880,
	748, 747, 828, 876, 890, 0, 0, 659, 270, 0,
	0, 410, 365, 290, 0, 0, 791, 0, 644, 645,
	776, 832, 724, 819, 895, 757, 824, 896, 87, 0,
	0, 0, 0, 473, 583, 582, 585, 586, 587, 588,
	0, 0, 148, 584, 589, 590, 591, 0, 786, 829,
	907, 703, 966, 574, 708, 658, 0, 881, 744, 745,
	227, 0, 0, 0, 0, 0, 0, 0, 789, 806,
	848, 773, 404, 835, 844, 858, 766, 325, 243, 0,
	0, 0, 0, 571, 572, 0, 0, 0, 0, 674,
	0, 573, 0, 718, 569, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 575, 0, 0,
	0, 723, 701, 742, 850, 702, 700, 291, 715, 647,
	879, 774, 259, 165, 885, 772, 672, 838, 719, 867,
	760, 267, 717, 166, 714, 720, 758, 302, 847, 853,
	656, 169, 269, 864, 738, 751, 210, 0, 337, 825,
	403, 563, 238, 811, 336, 271, 396, 839, 887, 402,
	761, 379, 411, 415, 234, 794, 201, 362, 225, 219,
	743, 857, 707, 244, 324, 214, 263, 777, 831, 739,
	206, 842, 818, 869, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 865, 852, 871, 734, 721, 726, 722, 750,
	888, 253, 245, 872, 870, 752, 311, 192, 804, 797,
	790, 660, 406, 903, 221, 854, 408, 155, 350, 349,
	764, 252, 855, 156, 147, 332, 157, 260, 174, 875,
	417, 188, 265, 387, 562, 237, 301, 212, 827, 312,
	749, 168, 328, 283, 285, 282, 286, 242, 151, 158,
	851, 330, 352, 391, 190, 368, 149, 150, 152, 160,
	342, 161, 162, 894, 277, 229, 233, 246, 257, 826,
	335, 369, 409, 820, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 849, 184, 179, 883,
	866, 813, 779, 785, 709, 0, 178, 845, 741, 753,
	733, 821, 732, 241, 837, 399, 400, 211, 418, 650,
	898, 180, 716, 897, 298, 306, 297, 900, 395, 884,
	814, 803, 801, 710, 882, 812, 802, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 805, 0,
	175, 0, 366, 892, 909, 377, 193, 727, 859, 390,
	154, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 841, 906, 310, 338, 200, 405, 363, 226,
	661, 303, 673, 667, 669, 668, 665, 666, 664, 663,
	662, 675, 648, 649, 652, 653, 654, 796, 886, 711,
	657, 862, 670, 671, 834, 904, 646, 207, 595, 687,
	688, 689, 596, 690, 691, 597, 598, 692, 693, 694,
	695, 599, 696, 697, 698, 676, 677, 678, 679, 680,
	681, 682, 683, 686, 684, 685, 0, 792, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 655, 170,
	181, 268, 905, 331, 236, 699, 706, 725, 728, 729,
	730, 731, 735, 740, 746, 754, 755, 763, 768, 769,
	770, 771, 778, 780, 781, 782, 783, 784, 787, 788,
	798, 809, 810, 816, 817, 0, 840, 843, 856, 860,
	861, 868, 873, 874, 899, 908, 407, 217, 795, 815,
	846, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	159, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 878, 775, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 762, 172, 877,
	901, 822, 836, 889, 0, 385, 651, 893, 736, 759,
	902, 765, 767, 830, 712, 807, 307, 756, 713, 0,
	0, 704, 560, 705, 737, 223, 559, 863, 808, 891,
	793, 823, 833, 222, 209, 800, 799, 880, 748, 747,
	828, 876, 890, 0, 0, 659, 270, 0, 0, 410,
	365, 290, 0, 0, 791, 0, 644, 645, 776, 832,
	724, 819, 895, 757, 824, 896, 87, 0, 0, 0,
	0, 473, 583, 582, 585, 586, 587, 588, 0, 0,
	148, 584, 589, 590, 591, 0, 786, 829, 907, 703,
	557, 574, 708, 658, 0, 881, 744, 745, 227, 0,
	0, 0, 0, 0, 0, 0, 789, 806, 848, 773,
	404, 835, 844, 858, 766, 325, 243, 0, 0, 0,
	0, 571, 572, 0, 0, 0, 0, 674, 0, 573,
	0, 718, 569, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 575, 0, 0, 0, 723,
	701, 742, 850, 702, 700, 291, 715, 647, 879, 774,
	259, 165, 885, 772, 672, 838, 719, 867, 760, 267,
	717, 166, 714, 720, 758, 302, 847, 853, 656, 169,
	269, 864, 738, 751, 210, 0, 337, 825, 403, 563,
	238, 811, 336, 271, 396, 839, 887, 402, 761, 379,
	411, 415, 234, 794, 201, 362, 225, 219, 743, 857,
	707, 244, 324, 214, 263, 777, 831, 739, 206, 842,
	818, 869, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	865, 852, 871, 734, 721, 726, 722, 750, 888, 253,
	245, 872, 870, 752, 311, 192, 804, 797, 790, 660,
	406, 903, 221, 854, 408, 155, 350, 349, 764, 252,
	855, 156, 147, 332, 157, 260, 174, 875, 417, 188,
	265, 387, 562, 237, 301, 212, 827, 312, 749, 168,
	328, 283, 285, 282, 286, 242, 151, 158, 851, 330,
	352, 391, 190, 368, 149, 150, 152, 160, 342, 161,
	162, 894, 277, 229, 233, 246, 257, 826, 335, 369,
	409, 820, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 849, 184, 179, 883, 866, 813,
	779, 785, 709, 0, 178, 845, 741, 753, 733, 821,
	732, 241, 837, 399, 400, 211, 418, 650, 898, 180,
	716, 897, 298, 306, 297, 900, 395, 884, 814, 803,
	801, 710, 882, 812, 802, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 805, 0, 175, 0,
	366, 892, 909, 377, 193, 727, 859, 390, 154, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	841, 906, 310, 338, 200, 405, 363, 226, 661, 303,
	673, 667, 669, 668, 665, 666, 664, 663, 662, 675,
	648, 649, 652, 653, 654, 796, 886, 711, 657, 862,
	670, 671, 834, 904, 646, 207, 595, 687, 688, 689,
	596, 690, 691, 597, 598, 692, 693, 694, 695, 599,
	696, 697, 698, 676, 677, 678, 679, 680, 681, 682,
	683, 686, 684, 685, 0, 792, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 655, 170, 181, 268,
	905, 331, 236, 699, 706, 725, 728, 729, 730, 731,
	735, 740, 746, 754, 755, 763, 768, 769, 770, 771,
	778, 780, 781, 782, 783, 784, 787, 788, 798, 809,
	810, 816, 817, 0, 840, 843, 856, 860, 861, 868,
	873, 874, 899, 908, 407, 217, 795, 815, 846, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 159, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 878, 775, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 762, 172, 877, 901, 822,
	836, 889, 0, 385, 651, 893, 736, 759, 902, 765,
	767, 830, 712, 807, 307, 756, 713, 0, 0, 704,
	949, 705, 737, 223, 947, 863, 808, 891, 793, 823,
	833, 222, 209, 800, 799, 880, 748, 747, 828, 876,
	890, 0, 0, 659, 270, 0, 0, 410, 365, 290,
	0, 0, 791, 0, 644, 645, 776, 832, 724, 819,
	895, 757, 824, 896, 87, 0, 0, 0, 0, 473,
	583, 582, 585, 586, 587, 588, 0, 0, 148, 584,
	589, 590, 591, 0, 786, 829, 907, 703, 966, 574,
	708, 658, 0, 881, 744, 745, 227, 0, 0, 0,
	0, 0, 0, 0, 789, 806, 848, 773, 404, 835,
	844, 858, 766, 325, 243, 0, 0, 0, 0, 571,
	572, 0, 0, 0, 0, 674, 0, 573, 0, 718,
	569, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 575, 0, 0, 0, 723, 701, 742,
	850, 702, 700, 291, 715, 647, 879, 774, 259, 165,
	885, 772, 672, 838, 719, 867, 760, 267, 717, 166,
	714, 720, 758, 302, 847, 853, 656, 169, 269, 864,
	738, 751, 210, 0, 337, 825, 403, 563, 238, 3788,
	336, 271, 396, 839, 887, 402, 761, 379, 411, 415,
	234, 794, 201, 362, 225, 219, 743, 857, 707, 244,
	324, 214, 263, 777, 831, 739, 206, 842, 818, 869,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 865, 852,
	871, 734, 721, 726, 722, 750, 888, 253, 245, 872,
	870, 752, 311, 192, 804, 797, 790, 660, 406, 903,
	221, 854, 408, 155, 350, 349, 764, 252, 855, 156,
	147, 332, 157, 260, 174, 875, 417, 188, 265, 387,
	562, 237, 301, 212, 827, 312, 749, 168, 328, 283,
	285, 282, 286, 242, 151, 158, 851, 330, 352, 391,
	190, 368, 149, 150, 152, 160, 342, 161, 162, 894,
	277, 229, 233, 246, 257, 826, 335, 369, 409, 820,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 849, 184, 179, 883, 866, 813, 779, 785,
	709, 0, 178, 845, 741, 753, 733, 821, 732, 241,
	837, 399, 400, 211, 418, 650, 898, 180, 716, 897,
	298, 306, 297, 900, 395, 884, 814, 803, 801, 710,
	882, 812, 802, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 805, 0, 175, 0, 366, 892,
	909, 377, 193, 727, 859, 390, 154, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 841, 906,
	310, 338, 200, 405, 363, 226, 661, 303, 673, 667,
	669, 668, 665, 666, 664, 663, 662, 675, 648, 649,
	652, 653, 654, 796, 886, 711, 657, 862, 670, 671,
	834, 904, 646, 207, 595, 687, 688, 689, 596, 690,
	691, 597, 598, 692, 693, 694, 695, 599, 696, 697,
	698, 676, 677, 678, 679, 680, 681, 682, 683, 686,
	684, 685, 0, 792, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 0, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 655, 170, 181, 268, 905, 331,
	236, 699, 706, 725, 728, 729, 730, 731, 735, 740,
	746, 754, 755, 763, 768, 769, 770, 771, 778, 780,
	781, 782, 783, 784, 787, 788, 798, 809, 810, 816,
	817, 0, 840, 843, 856, 860, 861, 868, 873, 874,
	899, 908, 407, 217, 795, 815, 846, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 159, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 878, 775, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 762, 172, 877, 901, 822, 836, 889,
	0, 385, 651, 893, 736, 759, 902, 765, 767, 830,
	712, 807, 307, 756, 713, 0, 0, 704, 949, 705,
	737, 223, 947, 863, 808, 891, 793, 823, 833, 222,
	209, 800, 799, 880, 748, 747, 828, 876, 890, 0,
	0, 659, 270, 0, 0, 410, 365, 290, 0, 0,
	791, 0, 644, 645, 776, 832, 724, 819, 895, 757,
	824, 896, 87, 0, 0, 0, 0, 473, 583, 582,
	585, 586, 587, 588, 0, 0, 148, 584, 589, 590,
	591, 0, 786, 829, 907, 703, 966, 574, 708, 658,
	0, 881, 744, 745, 227, 0, 0, 0, 0, 0,
	0, 0, 789, 806, 848, 773, 404, 835, 844, 858,
	766, 325, 243, 0, 0, 0, 0, 571, 572, 0,
	0, 0, 0, 674, 0, 573, 0, 718, 569, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 575, 0, 0, 0, 723, 701, 742, 850, 702,
	700, 291, 715, 647, 879, 774, 259, 165, 885, 772,
	672, 838, 719, 867, 760, 267, 717, 166, 714, 720,
	758, 302, 847, 853, 656, 169, 269, 864, 738, 751,
	210, 0, 337, 825, 403, 563, 238, 811, 336, 271,
	396, 839, 887, 402, 761, 379, 411, 415, 234, 794,
	201, 362, 225, 219, 743, 857, 707, 244, 324, 214,
	263, 777, 831, 739, 206, 842, 818, 869, 361, 393,
	171, 287, 394, 414, 189, 386, 288, 295, 203, 205,
	204, 183, 355, 392, 195, 208, 865, 852, 871, 734,
	721, 726, 722, 750, 888, 253, 245, 872, 870, 752,
	311, 192, 804, 797, 790, 660, 406, 903, 221, 854,
	408, 155, 350, 349, 764, 252, 855, 156, 147, 332,
	157, 260, 174, 875, 417, 188, 265, 387, 562, 237,
	301, 212, 827, 312, 749, 168, 328, 283, 285, 282,
	286, 242, 151, 158, 851, 330, 352, 391, 190, 368,
	149, 150, 152, 160, 342, 161, 162, 894, 277, 229,
	233, 246, 257, 826, 335, 369, 409, 820, 185, 339,
	370, 383, 344, 240, 372, 376, 373, 374, 371, 375,
	340, 341, 0, 177, 378, 401, 196, 351, 354, 416,
	849, 184, 179, 883, 866, 813, 779, 785, 709, 0,
	178, 845, 741, 753, 733, 821, 732, 241, 837, 399,
	400, 211, 418, 650, 898, 180, 716, 897, 298, 306,
	297, 900, 395, 884, 814, 803, 801, 710, 882, 812,
	802, 266, 232, 248, 322, 273, 323, 249, 293, 292,
	294, 275, 805, 0, 175, 0, 366, 892, 909, 377,
	193, 727, 859, 390, 154, 329, 194, 239, 230, 321,
	296, 186, 251, 364, 264, 272, 841, 906, 310, 338,
	200, 405, 363, 226, 661, 303, 673, 667, 669, 668,
	665, 666, 664, 663, 662, 675, 648, 649, 652, 653,
	654, 2028, 2029, 2030, 657, 862, 670, 671, 834, 904,
	646, 207, 595, 687, 688, 689, 596, 690, 691, 597,
	598, 692, 693, 694, 695, 599, 696, 697, 698, 676,
	677, 678, 679, 680, 681, 682, 683, 686, 684, 685,
	0, 792, 318, 176, 187, 199, 218, 216, 231, 261,
	284, 289, 316, 353, 358, 380, 381, 382, 384, 220,
	0, 224, 198, 333, 197, 274, 254, 317, 388, 389,
	326, 213, 655, 170, 181, 268, 905, 331, 236, 699,
	706, 725, 728, 729, 730, 731, 735, 740, 746, 754,
	755, 763, 768, 769, 770, 771, 778, 780, 781, 782,
	783, 784, 787, 788, 798, 809, 810, 816, 817, 0,
	840, 843, 856, 860, 861, 868, 873, 874, 899, 908,
	407, 217, 795, 815, 846, 182, 191, 202, 215, 228,
	235, 247, 250, 255, 256, 258, 262, 276, 278, 279,
	280, 281, 299, 300, 304, 305, 308, 309, 313, 314,
	315, 319, 320, 327, 159, 334, 343, 345, 346, 347,
	348, 356, 357, 359, 360, 367, 397, 398, 412, 413,
	878, 775, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 762, 172, 877, 901, 822, 836, 1762, 2981, 385,
	1617, 1766, 1566, 1596, 1783, 1602, 1605, 1686, 1532, 1655,
	307, 1593, 1533, 1516, 1571, 1520, 1584, 1521, 1568, 223,
	1564, 1727, 1658, 1764, 1637, 1679, 1689, 222, 209, 1647,
	1646, 1752, 1582, 1581, 1684, 1741, 1763, 1636, 0, 1773,
	270, 1738, 1009, 410, 365, 290, 1012, 1011, 1632, 1747,
	1653, 1716, 1615, 1688, 1548, 1671, 1768, 1594, 1680, 1769,
	87, 0, 1226, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 1676, 1760, 1587, 1010,
	1627, 1685, 1788, 1519, 1672, 0, 1524, 1535, 1782, 1753,
	1578, 1579, 227, 0, 0, 0, 0, 0, 0, 0,
	1630, 1654, 1706, 1612, 404, 1691, 1701, 1719, 1604, 325,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	0, 1669, 0, 0, 0, 1540, 1526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 0, 1547, 1517, 1575, 1708, 1518, 1515, 291,
	1536, 1721, 1751, 1613, 259, 165, 1757, 1611, 1610, 1695,
	1541, 1731, 1597, 267, 1539, 166, 1534, 1542, 1595, 302,
	1705, 1713, 153, 169, 269, 1728, 1569, 1586, 210, 1911,
	337, 1681, 403, 1008, 238, 1662, 336, 271, 396, 1696,
	1759, 402, 1598, 379, 411, 415, 234, 1638, 201, 362,
	225, 219, 1577, 1718, 1523, 244, 324, 214, 263, 1616,
	1687, 1570, 206, 1699, 1670, 1733, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 1729, 1712, 1735, 1563, 1543, 1554,
	1544, 1585, 1761, 253, 245, 1736, 1734, 1588, 311, 192,
	1651, 1644, 1631, 1709, 406, 1784, 221, 1714, 408, 155,
	350, 349, 1601, 252, 1715, 156, 147, 332, 157, 260,
	174, 1740, 417, 188, 265, 387, 1007, 237, 301, 212,
	1683, 312, 1583, 168, 328, 283, 285, 282, 286, 242,
	151, 158, 1711, 330, 352, 391, 190, 368, 149, 150,
	152, 160, 342, 161, 162, 1767, 277, 229, 233, 246,
	257, 1682, 335, 369, 409, 1673, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 1707, 184,
	179, 1755, 1730, 1664, 1619, 1625, 1525, 0, 178, 1703,
	1574, 1590, 1562, 1677, 1561, 241, 1694, 399, 400, 211,
	418, 1537, 1775, 180, 1538, 1774, 298, 306, 297, 1778,
	395, 1756, 1665, 1650, 1648, 1530, 1754, 1663, 1649, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	1652, 0, 175, 0, 366, 1765, 1790, 377, 193, 1556,
	1722, 390, 154, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 1698, 1787, 310, 338, 200, 405,
	363, 226, 1552, 303, 1555, 1550, 1553, 1551, 1656, 1657,
	1770, 1771, 1772, 1710, 1545, 0, 1748, 1749, 0, 1643,
	1758, 1531, 0, 1726, 163, 164, 1690, 1785, 1603, 207,
	142, 1527, 1528, 1529, 143, 1633, 1634, 144, 145, 1744,
	1743, 1742, 1745, 146, 1779, 1777, 1780, 1546, 1567, 1589,
	1639, 1640, 1642, 1674, 1675, 1720, 1693, 1702, 1576, 1635,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	1661, 170, 181, 268, 2982, 331, 236, 1514, 1522, 1549,
	1557, 1558, 1559, 1560, 1565, 1572, 1580, 1591, 1592, 1600,
	1606, 1607, 1608, 1609, 1618, 1620, 1621, 1622, 1623, 1624,
	1628, 1629, 1645, 1659, 1660, 1667, 1668, 0, 1697, 1700,
	1717, 1723, 1725, 1732, 1737, 1739, 1776, 1789, 407, 217,
	1641, 1666, 1704, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 159, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 1750, 1614,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 1599,
	172, 1746, 1781, 1678, 1692, 1762, 1724, 385, 1617, 1766,
	1566, 1596, 1783, 1602, 1605, 1686, 1532, 1655, 307, 1593,
	1533, 1516, 1571, 1520, 1584, 1521, 1568, 223, 1564, 1727,
	1658, 1764, 1637, 1679, 1689, 222, 209, 1647, 1646, 1752,
	1582, 1581, 1684, 1741, 1763, 1636, 0, 1773, 270, 1738,
	1009, 410, 365, 290, 1012, 1011, 1632, 1747, 1653, 1716,
	1615, 1688, 1548, 1671, 1768, 1594, 1680, 1769, 0, 0,
	0, 0, 0, 1005, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 0, 1676, 1760, 1587, 1010, 1627, 1685,
	1788, 1519, 1672, 0, 1524, 1535, 1782, 1753, 1578, 1579,
	227, 0, 0, 0, 0, 0, 0, 0, 1630, 1654,
	1706, 1612, 404, 1691, 1701, 1719, 1604, 325, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 1573, 0, 1669,
	0, 0, 0, 1540, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 1547, 1517, 1575, 1708, 1518, 1515, 291, 1536, 1721,
	1751, 1613, 259, 165, 1757, 1611, 1610, 1695, 1541, 1731,
	1597, 267, 1539, 166, 1534, 1542, 1595, 302, 1705, 1713,
	153, 169, 269, 1728, 1569, 1586, 210, 1911, 337, 1681,
	403, 1008, 238, 1662, 336, 271, 396, 1696, 1759, 402,
	1598, 379, 411, 415, 234, 1638, 201, 362, 225, 219,
	1577, 1718, 1523, 244, 324, 214, 263, 1616, 1687, 1570,
	206, 1699, 1670, 1733, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 1729, 1712, 1735, 1563, 1543, 1554, 1544, 1585,
	1761, 253, 245, 1736, 1734, 1588, 311, 192, 1651, 1644,
	1631, 1709, 406, 1784, 221, 1714, 408, 155, 350, 349,
	1601, 252, 1715, 156, 147, 332, 157, 260, 174, 1740,
	417, 188, 265, 387, 1007, 237, 301, 212, 1683, 312,
	1583, 168, 328, 283, 285, 282, 286, 242, 151, 158,
	1711, 330, 352, 391, 190, 368, 149, 150, 152, 160,
	342, 161, 162, 1767, 277, 229, 233, 246, 257, 1682,
	335, 369, 409, 1673, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 1707, 184, 179, 1755,
	1730, 1664, 1619, 1625, 1525, 0, 178, 1703, 1574, 1590,
	1562, 1677, 1561, 241, 1694, 399, 400, 211, 418, 1537,
	1775, 180, 1538, 1774, 298, 306, 297, 1778, 395, 1756,
	1665, 1650, 1648, 1530, 1754, 1663, 1649, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 1652, 0,
	175, 0, 366, 1765, 1790, 377, 193, 1556, 1722, 390,
	154, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 1698, 1787, 310, 338, 200, 405, 363, 226,
	1552, 303, 1555, 1550, 1553, 1551, 1656, 1657, 1770, 1771,
	1772, 1710, 1545, 0, 1748, 1749, 0, 1643, 1758, 1531,
	0, 1726, 163, 164, 1690, 1785, 1603, 207, 142, 1527,
	1528, 1529, 143, 1633, 1634, 144, 145, 1744, 1743, 1742,
	1745, 146, 1779, 1777, 1780, 1546, 1567, 1589, 1639, 1640,
	1642, 1674, 1675, 1720, 1693, 1702, 1576, 1635, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 1661, 170,
	181, 268, 1786, 331, 236, 1514, 1522, 1549, 1557, 1558,
	1559, 1560, 1565, 1572, 1580, 1591, 1592, 1600, 1606, 1607,
	1608, 1609, 1618, 1620, 1621, 1622, 1623, 1624, 1628, 1629,
	1645, 1659, 1660, 1667, 1668, 0, 1697, 1700, 1717, 1723,
	1725, 1732, 1737, 1739, 1776, 1789, 407, 217, 1641, 1666,
	1704, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	159, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 1750, 1614, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 1599, 172, 1746,
	1781, 1678, 1692, 1762, 1724, 385, 1617, 1766, 1566, 1596,
	1783, 1602, 1605, 1686, 1532, 1655, 307, 1593, 1533, 1516,
	1571, 1520, 1584, 1521, 1568, 223, 1564, 1727, 1658, 1764,
	1637, 1679, 1689, 222, 209, 1647, 1646, 1752, 1582, 1581,
	1684, 1741, 1763, 1636, 0, 1773, 270, 1738, 0, 410,
	365, 290, 0, 0, 1632, 1747, 1653, 1716, 1615, 1688,
	1548, 1671, 1768, 1594, 1680, 1769, 0, 0, 0, 0,
	0, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 1676, 1760, 1587, 0, 1627, 1685, 1788, 1519,
	1672, 0, 1524, 1535, 1782, 1753, 1578, 1579, 227, 0,
	0, 0, 0, 0, 0, 0, 1630, 1654, 1706, 1612,
	404, 1691, 1701, 1719, 1604, 325, 243, 0, 0, 0,
	0, 0, 0, 2642, 0, 1573, 0, 1669, 0, 0,
	0, 1540, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 1547,
	1517, 1575, 1708, 1518, 1515, 291, 1536, 1721, 1751, 1613,
	259, 165, 1757, 1611, 1610, 1695, 1541, 1731, 1597, 267,
	1539, 166, 1534, 1542, 1595, 302, 1705, 1713, 153, 169,
	269, 1728, 1569, 1586, 210, 0, 337, 1681, 403, 1958,
	238, 1662, 336, 271, 396, 1696, 1759, 402, 1598, 379,
	411, 415, 234, 1638, 201, 362, 225, 219, 1577, 1718,
	1523, 244, 324, 214, 263, 1616, 1687, 1570, 206, 1699,
	1670, 1733, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	1729, 1712, 1735, 1563, 1543, 1554, 1544, 1585, 1761, 253,
	245, 1736, 1734, 1588, 311, 192, 1651, 1644, 1631, 1709,
	406, 1784, 221, 1714, 408, 155, 350, 349, 1601, 252,
	1715, 156, 147, 332, 157, 260, 174, 1740, 417, 188,
	265, 387, 1957, 237, 301, 212, 1683, 312, 1583, 168,
	328, 283, 285, 282, 286, 242, 151, 158, 1711, 330,
	352, 391, 190, 368, 149, 150, 152, 160, 342, 161,
	162, 1767, 277, 229, 233, 246, 257, 1682, 335, 369,
	409, 1673, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 1707, 184, 179, 1755, 1730, 1664,
	1619, 1625, 1525, 0, 178, 1703, 1574, 1590, 1562, 1677,
	1561, 241, 1694, 399, 400, 211, 418, 1537, 1775, 180,
	1538, 1774, 298, 306, 297, 1778, 395, 1756, 1665, 1650,
	1648, 1530, 1754, 1663, 1649, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 1652, 0, 175, 0,
	366, 1765, 1790, 377, 193, 1556, 1722, 390, 154, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	1698, 1787, 310, 338, 200, 405, 363, 226, 1552, 303,
	1555, 1550, 1553, 1551, 1656, 1657, 1770, 1771, 1772, 1710,
	1545, 0, 1748, 1749, 0, 1643, 1758, 1531, 0, 1726,
	163, 164, 1690, 1785, 1603, 207, 142, 1527, 1528, 1529,
	143, 1633, 1634, 144, 145, 1744, 1743, 1742, 1745, 146,
	1779, 1777, 1780, 1546, 1567, 1589, 1639, 1640, 1642, 1674,
	1675, 1720, 1693, 1702, 1576, 1635, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 1661, 170, 181, 268,
	1786, 331, 236, 1514, 1522, 1549, 1557, 1558, 1559, 1560,
	1565, 1572, 1580, 1591, 1592, 1600, 1606, 1607, 1608, 1609,
	1618, 1620, 1621, 1622, 1623, 1624, 1628, 1629, 1645, 1659,
	1660, 1667, 1668, 0, 1697, 1700, 1717, 1723, 1725, 1732,
	1737, 1739, 1776, 1789, 407, 217, 1641, 1666, 1704, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 159, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 1750, 1614, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 1599, 172, 1746, 1781, 1678,
	1692, 1762, 1724, 385, 1617, 1766, 1566, 1596, 1783, 1602,
	1605, 1686, 1532, 1655, 307, 1593, 1533, 1516, 1571, 1520,
	1584, 1521, 1568, 223, 1564, 1727, 1658, 1764, 1637, 1679,
	1689, 222, 209, 1647, 1646, 1752, 1582, 1581, 1684, 1741,
	1763, 1636, 0, 1773, 270, 1738, 0, 410, 365, 290,
	0, 0, 1632, 1747, 1653, 1716, 1615, 1688, 1548, 1671,
	1768, 1594, 1680, 1769, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	1676, 1760, 1587, 0, 1627, 1685, 1788, 1519, 1672, 0,
	1524, 1535, 1782, 1753, 1578, 1579, 227, 0, 0, 0,
	0, 0, 0, 0, 1630, 1654, 1706, 1612, 404, 1691,
	1701, 1719, 1604, 325, 243, 0, 0, 0, 0, 0,
	0, 1952, 0, 1573, 0, 1669, 0, 0, 0, 1540,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 1547, 1517, 1575,
	1708, 1518, 1515, 291, 1536, 1721, 1751, 1613, 259, 165,
	1757, 1611, 1610, 1695, 1541, 1731, 1597, 267, 1539, 166,
	1534, 1542, 1595, 302, 1705, 1713, 153, 169, 269, 1728,
	1569, 1586, 210, 0, 337, 1681, 403, 1958, 238, 1662,
	336, 271, 396, 1696, 1759, 402, 1598, 379, 411, 415,
	234, 1638, 201, 362, 225, 219, 1577, 1718, 1523, 244,
	324, 214, 263, 1616, 1687, 1570, 206, 1699, 1670, 1733,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 1729, 1712,
	1735, 1563, 1543, 1554, 1544, 1585, 1761, 253, 245, 1736,
	1734, 1588, 311, 192, 1651, 1644, 1631, 1709, 406, 1784,
	221, 1714, 408, 155, 350, 349, 1601, 252, 1715, 156,
	147, 332, 157, 260, 174, 1740, 417, 188, 265, 387,
	1957, 237, 301, 212, 1683, 312, 1583, 168, 328, 283,
	285, 282, 286, 242, 151, 158, 1711, 330, 352, 391,
	190, 368, 149, 150, 152, 160, 342, 161, 162, 1767,
	277, 229, 233, 246, 257, 1682, 335, 369, 409, 1673,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 1707, 184, 179, 1755, 1730, 1664, 1619, 1625,
	1525, 0, 178, 1703, 1574, 1590, 1562, 1677, 1561, 241,
	1694, 399, 400, 211, 418, 1537, 1775, 180, 1538, 1774,
	298, 306, 297, 1778, 395, 1756, 1665, 1650, 1648, 1530,
	1754, 1663, 1649, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 1652, 0, 175, 0, 366, 1765,
	1790, 377, 193, 1556, 1722, 390, 154, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 1698, 1787,
	310, 338, 200, 405, 363, 226, 1552, 303, 1555, 1550,
	1553, 1551, 1656, 1657, 1770, 1771, 1772, 1710, 1545, 0,
	1748, 1749, 0, 1643, 1758, 1531, 0, 1726, 163, 164,
	1690, 1785, 1603, 207, 142, 1527, 1528, 1529, 143, 1633,
	1634, 144, 145, 1744, 1743, 1742, 1745, 146, 1779, 1777,
	1780, 1546, 1567, 1589, 1639, 1640, 1642, 1674, 1675, 1720,
	1693, 1702, 1576, 1635, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 0, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 1661, 170, 181, 268, 1786, 331,
	236, 1514, 1522, 1549, 1557, 1558, 1559, 1560, 1565, 1572,
	1580, 1591, 1592, 1600, 1606, 1607, 1608, 1609, 1618, 1620,
	1621, 1622, 1623, 1624, 1628, 1629, 1645, 1659, 1660, 1667,
	1668, 0, 1697, 1700, 1717, 1723, 1725, 1732, 1737, 1739,
	1776, 1789, 407, 217, 1641, 1666, 1704, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 159, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 1750, 1614, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 1599, 172, 1746, 1781, 1678, 1692, 1762,
	1724, 385, 1617, 1766, 1566, 1596, 1783, 1602, 1605, 1686,
	1532, 1655, 307, 1593, 1533, 1516, 1571, 1520, 1584, 1521,
	1568, 223, 1564, 1727, 1658, 1764, 1637, 1679, 1689, 222,
	209, 1647, 1646, 1752, 1582, 1581, 1684, 1741, 1763, 1636,
	0, 1773, 270, 1738, 0, 410, 365, 290, 0, 0,
	1632, 1747, 1653, 1716, 1615, 1688, 1548, 1671, 1768, 1594,
	1680, 1769, 0, 0, 0, 0, 0, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 0, 1676, 1760,
	1587, 0, 1627, 1685, 1788, 1519, 1672, 0, 1524, 1535,
	1782, 1753, 1578, 1579, 227, 0, 0, 0, 0, 0,
	0, 0, 1630, 1654, 1706, 1612, 404, 1691, 1701, 1719,
	1604, 325, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 1573, 0, 1669, 0, 0, 0, 1540, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 0, 0, 1547, 1517, 1575, 1708, 1518,
	1515, 291, 1536, 1721, 1751, 1613, 259, 165, 1757, 1611,
	1610, 1695, 1541, 1731, 1597, 267, 1539, 166, 1534, 1542,
	1595, 302, 1705, 1713, 153, 169, 269, 1728, 1569, 1586,
	210, 0, 337, 1681, 403, 1958, 238, 1662, 336, 271,
	396, 1696, 1759, 402, 1598, 379, 411, 415, 234, 1638,
	201, 362, 225, 219, 1577, 1718, 1523, 244, 324, 214,
	263, 1616, 1687, 1570, 206, 1699, 1670, 1733, 361, 393,
	171, 287, 394, 414, 189, 386, 288, 295, 203, 205,
	204, 183, 355, 392, 195, 208, 1729, 1712, 1735, 1563,
	1543, 1554, 1544, 1585, 1761, 253, 245, 1736, 1734, 1588,
	311, 192, 1651, 1644, 1631, 1709, 406, 1784, 221, 1714,
	408, 155, 350, 349, 1601, 252, 1715, 156, 147, 332,
	157, 260, 174, 1740, 417, 188, 265, 387, 1957, 237,
	301, 212, 1683, 312, 1583, 168, 328, 283, 285, 282,
	286, 242, 151, 158, 1711, 330, 352, 391, 190, 368,
	149, 150, 152, 160, 342, 161, 162, 1767, 277, 229,
	233, 246, 257, 1682, 335, 369, 409, 1673, 185, 339,
	370, 383, 344, 240, 372, 376, 373, 374, 371, 375,
	340, 341, 0, 177, 378, 401, 196, 351, 354, 416,
	1707, 184, 179, 1755, 1730, 1664, 1619, 1625, 1525, 0,
	178, 1703, 1574, 1590, 1562, 1677, 1561, 241, 1694, 399,
	400, 211, 418, 1537, 1775, 180, 1538, 1774, 298, 306,
	297, 1778, 395, 1756, 1665, 1650, 1648, 1530, 1754, 1663,
	1649, 266, 232, 248, 322, 273, 323, 249, 293, 292,
	294, 275, 1652, 0, 175, 0, 366, 1765, 1790, 377,
	193, 1556, 1722, 390, 154, 329, 194, 239, 230, 321,
	296, 186, 251, 364, 264, 272, 1698, 1787, 310, 338,
	200, 405, 363, 226, 1552, 303, 1555, 1550, 1553, 1551,
	1656, 1657, 1770, 1771, 1772, 1710, 1545, 0, 1748, 1749,
	0, 1643, 1758, 1531, 0, 1726, 163, 164, 1690, 1785,
	1603, 207, 142, 1527, 1528, 1529, 143, 1633, 1634, 144,
	145, 1744, 1743, 1742, 1745, 146, 1779, 1777, 1780, 1546,
	1567, 1589, 1639, 1640, 1642, 1674, 1675, 1720, 1693, 1702,
	1576, 1635, 318, 176, 187, 199, 218, 216, 231, 261,
	284, 289, 316, 353, 358, 380, 381, 382, 384, 220,
	0, 224, 198, 333, 197, 274, 254, 317, 388, 389,
	326, 213, 1661, 170, 181, 268, 1786, 331, 236, 1514,
	1522, 1549, 1557, 1558, 1559, 1560, 1565, 1572, 1580, 1591,
	1592, 1600, 1606, 1607, 1608, 1609, 1618, 1620, 1621, 1622,
	1623, 1624, 1628, 1629, 1645, 1659, 1660, 1667, 1668, 0,
	1697, 1700, 1717, 1723, 1725, 1732, 1737, 1739, 1776, 1789,
	407, 217, 1641, 1666, 1704, 182, 191, 202, 215, 228,
	235, 247, 250, 255, 256, 258, 262, 276, 278, 279,
	280, 281, 299, 300, 304, 305, 308, 309, 313, 314,
	315, 319, 320, 327, 159, 334, 343, 345, 346, 347,
	348, 356, 357, 359, 360, 367, 397, 398, 412, 413,
	1750, 1614, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 1599, 172, 1746, 1781, 1678, 1692, 889, 0, 385,
	954, 893, 736, 759, 902, 765, 767, 830, 712, 807,
	307, 756, 713, 0, 0, 704, 949, 705, 737, 223,
	947, 863, 808, 891, 793, 823, 833, 222, 209, 800,
	799, 880, 748, 747, 828, 876, 890, 0, 0, 987,
	270, 0, 1009, 410, 365, 290, 1012, 1011, 791, 0,
	961, 974, 776, 832, 724, 819, 895, 757, 824, 896,
	0, 0, 0, 0, 0, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 969, 983, 950, 1010,
	786, 829, 907, 703, 966, 0, 708, 938, 0, 881,
	744, 745, 227, 0, 0, 0, 0, 0, 0, 0,
	789, 806, 848, 773, 404, 835, 844, 858, 766, 325,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 965, 0, 0, 0, 718, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 955,
	0, 0, 0, 723, 701, 742, 850, 702, 700, 291,
	715, 976, 879, 774, 259, 165, 885, 772, 953, 838,
	719, 867, 760, 267, 717, 166, 714, 720, 758, 302,
	847, 853, 153, 169, 269, 864, 738, 751, 210, 2711,
	337, 825, 403, 2713, 238, 811, 336, 271, 396, 839,
	887, 402, 761, 379, 411, 415, 234, 794, 201, 362,
	225, 219, 743, 857, 707, 244, 324, 214, 263, 777,
	831, 739, 206, 842, 818, 869, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 865, 852, 871, 734, 721, 726,
	722, 750, 888, 253, 245, 872, 870, 752, 311, 192,
	804, 797, 790, 972, 406, 903, 221, 854, 408, 155,
	350, 349, 764, 252, 855, 156, 147, 332, 157, 260,
	174, 875, 417, 188, 265, 387, 2712, 237, 301, 212,
	827, 312, 749, 168, 328, 283, 285, 282, 286, 242,
	151, 158, 851, 330, 352, 391, 190, 368, 149, 150,
	152, 160, 342, 161, 162, 894, 277, 229, 233, 246,
	257, 826, 335, 369, 409, 820, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 849, 184,
	179, 883, 866, 813, 779, 785, 709, 0, 178, 845,
	741, 753, 733, 821, 732, 241, 837, 399, 400, 211,
	418, 939, 898, 180, 716, 897, 298, 306, 297, 900,
	395, 884, 814, 803, 801, 710, 882, 812, 802, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	805, 0, 175, 0, 366, 892, 909, 377, 193, 727,
	859, 390, 154, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 841, 906, 310, 338, 200, 405,
	363, 226, 944, 303, 946, 942, 945, 943, 962, 963,
	984, 985, 986, 973, 940, 0, 981, 982, 0, 796,
	886, 711, 0, 862, 163, 164, 834, 904, 952, 207,
	142, 935, 936, 937, 143, 956, 957, 144, 145, 979,
	978, 977, 980, 146, 989, 988, 990, 941, 948, 951,
	958, 959, 960, 967, 968, 975, 970, 971, 0, 792,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	964, 170, 181, 268, 905, 331, 236, 699, 706, 725,
	728, 729, 730, 731, 735, 740, 746, 754, 755, 763,
	768, 769, 770, 771, 778, 780, 781, 782, 783, 784,
	787, 788, 798, 809, 810, 816, 817, 0, 840, 843,
	856, 860, 861, 868, 873, 874, 899, 908, 407, 217,
	795, 815, 846, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 159, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 878, 775,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 762,
	172, 877, 901, 822, 836, 889, 0, 385, 954, 893,
	736, 759, 902, 765, 767, 830, 712, 807, 307, 756,
	713, 0, 0, 704, 949, 705, 737, 223, 947, 863,
	808, 891, 793, 823, 833, 222, 209, 800, 799, 880,
	748, 747, 828, 876, 890, 0, 0, 987, 270, 0,
	0, 410, 365, 290, 0, 0, 791, 0, 961, 974,
	776, 832, 724, 819, 895, 757, 824, 896, 0, 0,
	0, 0, 0, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 0, 969, 983, 950, 0, 786, 829,
	907, 703, 966, 0, 708, 938, 0, 881, 744, 745,
	227, 0, 0, 0, 0, 0, 0, 0, 789, 806,
	848, 773, 404, 835, 844, 858, 766, 325, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 965,
	0, 0, 0, 718, 934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 955, 0, 0,
	0, 723, 701, 742, 850, 702, 700, 291, 715, 976,
	879, 774, 259, 165, 885, 772, 953, 838, 719, 867,
	760, 267, 717, 166, 714, 720, 758, 302, 847, 853,
	153, 169, 269, 864, 738, 751, 210, 0, 337, 825,
	403, 933, 238, 811, 336, 271, 396, 839, 887, 402,
	761, 379, 411, 415, 234, 794, 201, 362, 225, 219,
	743, 857, 707, 244, 324, 214, 263, 777, 831, 739,
	206, 842, 818, 869, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 865, 852, 871, 734, 721, 726, 722, 750,
	888, 253, 245, 872, 870, 752, 311, 192, 804, 797,
	790, 972, 406, 903, 221, 854, 408, 155, 350, 349,
	764, 252, 855, 156, 147, 332, 157, 260, 174, 875,
	417, 188, 265, 387, 932, 237, 301, 212, 827, 312,
	749, 168, 328, 283, 285, 282, 286, 242, 151, 158,
	851, 330, 352, 391, 190, 368, 149, 150, 152, 160,
	342, 161, 162, 894, 277, 229, 233, 246, 257, 826,
	335, 369, 409, 820, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 849, 184, 179, 883,
	866, 813, 779, 785, 709, 0, 178, 845, 741, 753,
	733, 821, 732, 241, 837, 399, 400, 211, 418, 939,
	898, 180, 716, 897, 298, 306, 297, 900, 395, 884,
	814, 803, 801, 710, 882, 812, 802, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 805, 0,
	175, 0, 366, 892, 909, 377, 193, 727, 859, 390,
	154, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 841, 906, 310, 338, 200, 405, 363, 226,
	944, 303, 946, 942, 945, 943, 962, 963, 984, 985,
	986, 973, 940, 0, 981, 982, 0, 796, 886, 711,
	0, 862, 163, 164, 834, 904, 952, 207, 142, 935,
	936, 937, 143, 956, 957, 144, 145, 979, 978, 977,
	980, 146, 989, 988, 990, 941, 948, 951, 958, 959,
	960, 967, 968, 975, 970, 971, 0, 792, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 964, 170,
	181, 268, 905, 331, 236, 699, 706, 725, 728, 729,
	730, 731, 735, 740, 746, 754, 755, 763, 768, 769,
	770, 771, 778, 780, 781, 782, 783, 784, 787, 788,
	798, 809, 810, 816, 817, 0, 840, 843, 856, 860,
	861, 868, 873, 874, 899, 908, 407, 217, 795, 815,
	846, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	159, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 878, 775, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 762, 172, 877,
	901, 822, 836, 889, 0, 385, 954, 893, 736, 759,
	902, 765, 767, 830, 712, 807, 307, 756, 713, 0,
	0, 704, 949, 705, 737, 223, 947, 863, 808, 891,
	793, 823, 833, 222, 209, 800, 799, 880, 748, 747,
	828, 876, 890, 0, 0, 987, 270, 0, 0, 410,
	365, 290, 0, 0, 791, 0, 961, 974, 776, 832,
	724, 819, 895, 757, 824, 896, 0, 0, 0, 0,
	0, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 969, 983, 950, 0, 786, 829, 907, 703,
	966, 0, 708, 938, 0, 881, 744, 745, 227, 0,
	0, 0, 0, 0, 0, 0, 789, 806, 848, 773,
	404, 835, 844, 858, 766, 325, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 965, 0, 0,
	0, 718, 934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 723,
	701, 742, 850, 702, 700, 291, 715, 976, 879, 774,
	259, 165, 885, 772, 953, 838, 719, 867, 760, 267,
	717, 166, 714, 720, 758, 302, 847, 853, 153, 169,
	269, 864, 738, 751, 210, 0, 337, 825, 403, 933,
	238, 811, 336, 271, 396, 839, 887, 402, 761, 379,
	411, 415, 234, 794, 201, 362, 225, 219, 743, 857,
	707, 244, 324, 214, 263, 777, 831, 739, 206, 842,
	818, 869, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	865, 852, 871, 734, 721, 726, 722, 750, 888, 253,
	245, 872, 870, 752, 311, 192, 804, 797, 790, 972,
	406, 903, 221, 854, 408, 155, 350, 349, 764, 252,
	855, 156, 147, 332, 157, 260, 174, 875, 417, 188,
	265, 387, 932, 237, 301, 212, 827, 312, 749, 168,
	328, 283, 285, 282, 286, 242, 151, 158, 851, 330,
	352, 391, 190, 368, 149, 150, 152, 160, 342, 161,
	162, 894, 277, 229, 233, 246, 257, 826, 335, 369,
	409, 820, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 849, 184, 179, 883, 866, 813,
	779, 785, 709, 0, 178, 845, 741, 753, 733, 821,
	732, 241, 837, 399, 400, 211, 418, 939, 898, 180,
	927, 897, 298, 306, 297, 900, 395, 884, 814, 803,
	801, 710, 882, 812, 802, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 923, 805, 0, 175, 0,
	366, 892, 909, 377, 193, 727, 859, 390, 154, 329,
	194, 239, 230, 321, 928, 926, 917, 918, 264, 272,
	841, 906, 310, 338, 200, 405, 363, 226, 944, 303,
	946, 942, 945, 943, 962, 963, 984, 985, 986, 973,
	940, 0, 981, 982, 0, 796, 886, 711, 0, 862,
	163, 164, 834, 904, 952, 207, 142, 935, 936, 937,
	143, 956, 957, 144, 145, 979, 978, 977, 980, 146,
	989, 988, 990, 941, 948, 951, 958, 959, 960, 967,
	968, 975, 970, 971, 0, 792, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 964, 170, 181, 268,
	905, 331, 236, 699, 706, 725, 728, 729, 730, 731,
	735, 740, 746, 754, 755, 763, 768, 769, 770, 771,
	778, 780, 781, 782, 783, 784, 787, 788, 798, 809,
	810, 816, 817, 0, 840, 843, 856, 860, 861, 868,
	873, 874, 899, 908, 407, 217, 795, 815, 846, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 924, 925, 327, 159, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 878, 775, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 762, 172, 877, 901, 822,
	836, 889, 0, 385, 954, 893, 736, 759, 902, 765,
	767, 830, 712, 807, 307, 756, 713, 0, 0, 704,
	949, 705, 737, 223, 947, 863, 808, 891, 793, 823,
	833, 222, 209, 800, 799, 880, 748, 747, 828, 876,
	890, 0, 0, 987, 270, 0, 0, 410, 365, 290,
	0, 0, 791, 0, 961, 974, 776, 832, 724, 819,
	895, 757, 824, 896, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	969, 983, 950, 0, 786, 829, 907, 703, 966, 0,
	708, 938, 0, 881, 744, 745, 227, 0, 0, 0,
	0, 0, 0, 0, 789, 806, 848, 773, 404, 835,
	844, 858, 766, 325, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 965, 0, 0, 0, 718,
	934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 723, 701, 742,
	850, 702, 700, 291, 715, 976, 879, 774, 259, 165,
	885, 772, 953, 838, 719, 867, 760, 267, 717, 166,
	714, 720, 758, 302, 847, 853, 153, 169, 269, 864,
	738, 751, 210, 0, 337, 825, 403, 933, 238, 811,
	336, 271, 396, 839, 887, 402, 761, 379, 411, 415,
	234, 794, 201, 362, 225, 219, 743, 857, 707, 244,
	324, 214, 263, 777, 831, 739, 206, 842, 818, 869,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 865, 852,
	871, 734, 721, 726, 722, 750, 888, 253, 245, 872,
	870, 752, 311, 192, 804, 797, 790, 972, 406, 903,
	221, 854, 408, 155, 350, 349, 764, 252, 855, 156,
	147, 332, 157, 260, 174, 875, 417, 188, 265, 387,
	932, 237, 301, 212, 827, 312, 749, 168, 328, 283,
	285, 282, 286, 242, 151, 158, 851, 330, 352, 391,
	190, 368, 149, 150, 152, 160, 342, 161, 162, 894,
	277, 229, 233, 246, 257, 826, 335, 369, 409, 820,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 1391, 196, 351,
	354, 416, 849, 184, 179, 883, 866, 813, 779, 785,
	709, 0, 178, 845, 741, 753, 733, 821, 732, 241,
	837, 399, 400, 211, 418, 939, 898, 180, 716, 897,
	298, 306, 297, 900, 395, 884, 814, 803, 801, 710,
	882, 812, 802, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 805, 0, 175, 0, 366, 892,
	909, 377, 193, 727, 859, 390, 154, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 841, 906,
	310, 338, 200, 405, 363, 226, 944, 303, 946, 942,
	945, 943, 962, 963, 984, 985, 986, 973, 940, 0,
	981, 982, 0, 796, 886, 711, 0, 862, 163, 164,
	834, 904, 952, 207, 142, 935, 936, 937, 143, 956,
	957, 144, 145, 979, 978, 977, 980, 146, 989, 988,
	990, 941, 948, 951, 958, 959, 960, 967, 968, 975,
	970, 971, 0, 792, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 0, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 964, 170, 181, 268, 905, 331,
	236, 699, 706, 725, 728, 729, 730, 731, 735, 740,
	746, 754, 755, 763, 768, 769, 770, 771, 778, 780,
	781, 782, 783, 784, 787, 788, 798, 809, 810, 816,
	817, 0, 840, 843, 856, 860, 861, 868, 873, 874,
	899, 908, 407, 217, 795, 815, 846, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 159, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 878, 775, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 762, 172, 877, 901, 822, 836, 889,
	0, 385, 954, 893, 736, 759, 902, 765, 767, 830,
	712, 807, 307, 756, 713, 0, 0, 704, 949, 705,
	737, 223, 947, 863, 808, 891, 793, 823, 833, 222,
	209, 800, 799, 880, 748, 747, 828, 876, 890, 0,
	0, 987, 270, 0, 0, 410, 365, 290, 0, 0,
	791, 0, 961, 974, 776, 832, 724, 819, 895, 757,
	824, 896, 0, 0, 0, 0, 0, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 0, 969, 983,
	950, 0, 786, 829, 907, 703, 966, 0, 708, 938,
	0, 881, 744, 745, 227, 0, 0, 0, 0, 0,
	0, 0, 789, 806, 848, 773, 404, 835, 844, 858,
	766, 325, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 965, 0, 0, 0, 718, 934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 723, 701, 742, 850, 702,
	700, 291, 715, 976, 879, 774, 259, 165, 885, 772,
	953, 838, 719, 867, 760, 267, 717, 166, 714, 720,
	758, 302, 847, 853, 153, 169, 269, 864, 738, 751,
	210, 0, 337, 825, 403, 933, 238, 811, 336, 271,
	396, 839, 887, 402, 761, 379, 411, 415, 234, 794,
	201, 362, 225, 219, 743, 857, 707, 244, 324, 214,
	263, 777, 831, 739, 206, 842, 818, 869, 361, 393,
	171, 287, 394, 414, 189, 386, 288, 295, 203, 205,
	204, 183, 355, 392, 195, 208, 865, 852, 871, 734,
	721, 726, 722, 750, 888, 253, 245, 872, 870, 752,
	311, 192, 804, 797, 790, 972, 406, 903, 221, 854,
	408, 155, 350, 349, 764, 252, 855, 156, 147, 332,
	157, 260, 174, 875, 417, 188, 265, 387, 932, 237,
	301, 212, 827, 312, 749, 168, 328, 283, 285, 282,
	286, 242, 151, 158, 851, 330, 352, 391, 190, 368,
	149, 150, 152, 160, 342, 161, 162, 894, 277, 229,
	233, 246, 257, 826, 335, 369, 409, 820, 185, 339,
	370, 383, 344, 240, 372, 376, 373, 374, 371, 375,
	340, 341, 0, 177, 378, 914, 196, 351, 354, 416,
	849, 184, 179, 883, 866, 813, 779, 785, 709, 0,
	178, 845, 741, 753, 733, 821, 732, 241, 837, 399,
	400, 211, 418, 939, 898, 180, 927, 897, 298, 306,
	297, 900, 395, 884, 814, 803, 801, 710, 882, 812,
	802, 266, 232, 248, 322, 273, 323, 249, 293, 292,
	294, 923, 805, 0, 175, 0, 366, 892, 909, 377,
	193, 727, 859, 390, 154, 329, 194, 239, 230, 321,
	928, 926, 917, 918, 264, 272, 841, 906, 310, 338,
	200, 405, 363, 226, 944, 303, 946, 942, 945, 943,
	962, 963, 984, 985, 986, 973, 940, 0, 981, 982,
	0, 796, 886, 711, 0, 862, 163, 164, 834, 904,
	952, 207, 142, 935, 936, 937, 143, 956, 957, 144,
	145, 979, 978, 977, 980, 146, 989, 988, 990, 941,
	948, 951, 958, 959, 960, 967, 968, 975, 970, 971,
	0, 792, 318, 176, 187, 199, 218, 216, 231, 261,
	284, 289, 316, 353, 358, 380, 381, 382, 384, 220,
	0, 224, 198, 333, 197, 274, 254, 317, 388, 389,
	326, 213, 964, 170, 181, 268, 905, 331, 236, 699,
	706, 725, 728, 729, 730, 731, 735, 740, 746, 754,
	755, 763, 768, 769, 770, 771, 778, 780, 781, 782,
	783, 784, 787, 788, 798, 809, 810, 816, 817, 0,
	840, 843, 856, 860, 861, 868, 873, 874, 899, 908,
	407, 217, 795, 815, 846, 182, 191, 202, 215, 228,
	235, 247, 250, 255, 256, 258, 262, 276, 278, 279,
	280, 281, 299, 300, 304, 305, 308, 309, 313, 314,
	315, 924, 925, 327, 159, 334, 343, 345, 346, 347,
	348, 356, 357, 359, 360, 367, 397, 398, 412, 413,
	878, 775, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 762, 172, 877, 901, 822, 836, 1762, 1724, 385,
	1617, 1766, 1566, 1596, 1783, 1602, 1605, 1686, 1532, 1655,
	307, 1593, 1533, 1516, 1571, 1520, 1584, 1521, 1568, 223,
	1564, 1727, 1658, 1764, 1637, 1679, 1689, 222, 209, 1647,
	1646, 1752, 1582, 1581, 1684, 1741, 1763, 1636, 0, 1773,
	270, 1738, 0, 410, 365, 290, 0, 0, 1632, 1747,
	1653, 1716, 1615, 1688, 1548, 1671, 1768, 1594, 1680, 1769,
	0, 0, 0, 0, 0, 2791, 0, 2786, 2787, 0,
	0, 0, 0, 0, 2788, 0, 1676, 1760, 1587, 0,
	1627, 1685, 1788, 1519, 1672, 0, 1524, 1535, 1782, 1753,
	1578, 1579, 227, 0, 0, 0, 0, 0, 0, 0,
	1630, 1654, 1706, 1612, 404, 1691, 1701, 1719, 1604, 325,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	0, 1669, 0, 0, 0, 1540, 1526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 0, 1547, 1517, 1575, 1708, 1518, 1515, 291,
	1536, 1721, 1751, 1613, 259, 0, 1757, 1611, 1610, 1695,
	1541, 1731, 1597, 267, 1539, 166, 1534, 1542, 1595, 302,
	1705, 1713, 0, 169, 269, 1728, 1569, 1586, 210, 0,
	337, 1681, 403, 0, 238, 1662, 336, 271, 396, 1696,
	1759, 402, 1598, 379, 411, 415, 234, 1638, 201, 362,
	225, 219, 1577, 1718, 1523, 244, 324, 214, 263, 1616,
	1687, 1570, 206, 1699, 1670, 1733, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 1729, 1712, 1735, 1563, 1543, 1554,
	1544, 1585, 1761, 253, 245, 1736, 1734, 1588, 311, 192,
	1651, 1644, 1631, 1709, 406, 1784, 221, 1714, 408, 0,
	350, 349, 1601, 252, 1715, 0, 0, 332, 2790, 260,
	174, 1740, 417, 188, 265, 387, 0, 237, 301, 212,
	1683, 312, 1583, 168, 328, 283, 285, 282, 286, 242,
	0, 0, 1711, 330, 352, 391, 190, 368, 2789, 0,
	0, 0, 342, 0, 0, 1767, 277, 229, 233, 246,
	257, 1682, 335, 369, 409, 1673, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 1707, 184,
	179, 1755, 1730, 1664, 1619, 1625, 1525, 0, 178, 1703,
	1574, 1590, 1562, 1677, 1561, 241, 1694, 399, 400, 211,
	418, 1537, 1775, 180, 1538, 1774, 298, 306, 297, 1778,
	395, 1756, 1665, 1650, 1648, 1530, 1754, 1663, 1649, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	1652, 0, 175, 0, 366, 1765, 1790, 377, 193, 1556,
	1722, 390, 0, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 1698, 1787, 310, 338, 200, 405,
	363, 226, 1552, 303, 1555, 1550, 1553, 1551, 1656, 1657,
	1770, 1771, 1772, 1710, 1545, 0, 1748, 1749, 0, 1643,
	1758, 1531, 0, 1726, 0, 0, 1690, 1785, 1603, 207,
	0, 1527, 1528, 1529, 0, 1633, 1634, 0, 0, 1744,
	1743, 1742, 1745, 0, 1779, 1777, 1780, 1546, 1567, 1589,
	1639, 1640, 1642, 1674, 1675, 1720, 1693, 1702, 1576, 1635,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	1661, 170, 181, 268, 1786, 331, 236, 1514, 1522, 1549,
	1557, 1558, 1559, 1560, 1565, 1572, 1580, 1591, 1592, 1600,
	1606, 1607, 1608, 1609, 1618, 1620, 1621, 1622, 1623, 1624,
	1628, 1629, 1645, 1659, 1660, 1667, 1668, 0, 1697, 1700,
	1717, 1723, 1725, 1732, 1737, 1739, 1776, 1789, 407, 217,
	1641, 1666, 1704, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 0, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 1750, 1614,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 1599,
	172, 1746, 1781, 1678, 1692, 1762, 1724, 385, 1617, 1766,
	1566, 1596, 1783, 1602, 1605, 1686, 1532, 1655, 307, 1593,
	1533, 1516, 1571, 1520, 1584, 1521, 1568, 223, 1564, 1727,
	1658, 1764, 1637, 1679, 1689, 222, 209, 1647, 1646, 1752,
	1582, 1581, 1684, 1741, 1763, 1636, 0, 1773, 270, 1738,
	0, 410, 365, 290, 0, 0, 1632, 1747, 1653, 1716,
	1615, 1688, 1548, 1671, 1768, 1594, 1680, 1769, 0, 0,
	0, 0, 0, 1005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 1760, 1587, 0, 1627, 1685,
	1788, 1519, 1672, 0, 1524, 1535, 1782, 1753, 1578, 1579,
	227, 0, 0, 0, 0, 0, 0, 0, 1630, 1654,
	1706, 1612, 404, 1691, 1701, 1719, 1604, 325, 243, 0,
	0, 0, 0, 0, 0, 3177, 0, 1573, 0, 1669,
	0, 0, 0, 1540, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 1547, 1517, 1575, 1708, 1518, 1515, 291, 1536, 1721,
	1751, 1613, 259, 0, 1757, 1611, 1610, 1695, 1541, 1731,
	1597, 267, 1539, 166, 1534, 1542, 1595, 302, 1705, 1713,
	0, 169, 269, 1728, 1569, 1586, 210, 0, 337, 1681,
	403, 0, 238, 1662, 336, 271, 396, 1696, 1759, 402,
	1598, 379, 411, 415, 234, 1638, 201, 362, 225, 219,
	1577, 1718, 1523, 244, 324, 214, 263, 1616, 1687, 1570,
	206, 1699, 1670, 1733, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 1729, 1712, 1735, 1563, 1543, 1554, 1544, 1585,
	1761, 253, 245, 1736, 1734, 1588, 311, 192, 1651, 1644,
	1631, 1709, 406, 1784, 221, 1714, 408, 0, 350, 349,
	1601, 252, 1715, 0, 0, 332, 0, 260, 174, 1740,
	417, 188, 265, 387, 0, 237, 301, 212, 1683, 312,
	1583, 168, 328, 283, 285, 282, 286, 242, 0, 0,
	1711, 330, 352, 391, 190, 368, 0, 0, 0, 0,
	342, 0, 0, 1767, 277, 229, 233, 246, 257, 1682,
	335, 369, 409, 1673, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 1707, 184, 179, 1755,
	1730, 1664, 1619, 1625, 1525, 0, 178, 1703, 1574, 1590,
	1562, 1677, 1561, 241, 1694, 399, 400, 211, 418, 1537,
	1775, 180, 1538, 1774, 298, 306, 297, 1778, 395, 1756,
	1665, 1650, 1648, 1530, 1754, 1663, 1649, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 1652, 0,
	175, 0, 366, 1765, 1790, 377, 193, 1556, 1722, 390,
	0, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 1698, 1787, 310, 338, 200, 405, 363, 226,
	1552, 303, 1555, 1550, 1553, 1551, 1656, 1657, 1770, 1771,
	1772, 1710, 1545, 0, 1748, 1749, 0, 1643, 1758, 1531,
	0, 1726, 0, 0, 1690, 1785, 1603, 207, 0, 1527,
	1528, 1529, 0, 1633, 1634, 0, 0, 1744, 1743, 1742,
	1745, 0, 1779, 1777, 1780, 1546, 1567, 1589, 1639, 1640,
	1642, 1674, 1675, 1720, 1693, 1702, 1576, 1635, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 1661, 170,
	181, 268, 1786, 331, 236, 1514, 1522, 1549, 1557, 1558,
	1559, 1560, 1565, 1572, 1580, 1591, 1592, 1600, 1606, 1607,
	1608, 1609, 1618, 1620, 1621, 1622, 1623, 1624, 1628, 1629,
	1645, 1659, 1660, 1667, 1668, 0, 1697, 1700, 1717, 1723,
	1725, 1732, 1737, 1739, 1776, 1789, 407, 217, 1641, 1666,
	1704, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	0, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 1750, 1614, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 1599, 172, 1746,
	1781, 1678, 1692, 1762, 1724, 385, 1617, 1766, 1566, 1596,
	1783, 1602, 1605, 1686, 1532, 1655, 307, 1593, 1533, 1516,
	1571, 1520, 1584, 1521, 1568, 223, 1564, 1727, 1658, 1764,
	1637, 1679, 1689, 222, 209, 1647, 1646, 1752, 1582, 1581,
	1684, 1741, 1763, 1636, 0, 1773, 270, 1738, 0, 410,
	365, 290, 0, 0, 1632, 1747, 1653, 1716, 1615, 1688,
	1548, 1671, 1768, 1594, 1680, 1769, 0, 0, 0, 0,
	0, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 1760, 1587, 0, 1627, 1685, 1788, 1519,
	1672, 0, 1524, 1535, 1782, 1753, 1578, 1579, 227, 0,
	0, 0, 0, 0, 0, 0, 1630, 1654, 1706, 1612,
	404, 1691, 1701, 1719, 1604, 325, 243, 0, 0, 0,
	0, 0, 0, 2635, 0, 1573, 0, 1669, 0, 0,
	0, 1540, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 1547,
	1517, 1575, 1708, 1518, 1515, 291, 1536, 1721, 1751, 1613,
	259, 0, 1757, 1611, 1610, 1695, 1541, 1731, 1597, 267,
	1539, 166, 1534, 1542, 1595, 302, 1705, 1713, 0, 169,
	269, 1728, 1569, 1586, 210, 0, 337, 1681, 403, 0,
	238, 1662, 336, 271, 396, 1696, 1759, 402, 1598, 379,
	411, 415, 234, 1638, 201, 362, 225, 219, 1577, 1718,
	1523, 244, 324, 214, 263, 1616, 1687, 1570, 206, 1699,
	1670, 1733, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	1729, 1712, 1735, 1563, 1543, 1554, 1544, 1585, 1761, 253,
	245, 1736, 1734, 1588, 311, 192, 1651, 1644, 1631, 1709,
	406, 1784, 221, 1714, 408, 0, 350, 349, 1601, 252,
	1715, 0, 0, 332, 0, 260, 174, 1740, 417, 188,
	265, 387, 0, 237, 301, 212, 1683, 312, 1583, 168,
	328, 283, 285, 282, 286, 242, 0, 0, 1711, 330,
	352, 391, 190, 368, 0, 0, 0, 0, 342, 0,
	0, 1767, 277, 229, 233, 246, 257, 1682, 335, 369,
	409, 1673, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 1707, 184, 179, 1755, 1730, 1664,
	1619, 1625, 1525, 0, 178, 1703, 1574, 1590, 1562, 1677,
	1561, 241, 1694, 399, 400, 211, 418, 1537, 1775, 180,
	1538, 1774, 298, 306, 297, 1778, 395, 1756, 1665, 1650,
	1648, 1530, 1754, 1663, 1649, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 1652, 0, 175, 0,
	366, 1765, 1790, 377, 193, 1556, 1722, 390, 0, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	1698, 1787, 310, 338, 200, 405, 363, 226, 1552, 303,
	1555, 1550, 1553, 1551, 1656, 1657, 1770, 1771, 1772, 1710,
	1545, 0, 1748, 1749, 0, 1643, 1758, 1531, 0, 1726,
	0, 0, 1690, 1785, 1603, 207, 0, 1527, 1528, 1529,
	0, 1633, 1634, 0, 0, 1744, 1743, 1742, 1745, 0,
	1779, 1777, 1780, 1546, 1567, 1589, 1639, 1640, 1642, 1674,
	1675, 1720, 1693, 1702, 1576, 1635, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 1661, 170, 181, 268,
	1786, 331, 236, 1514, 1522, 1549, 1557, 1558, 1559, 1560,
	1565, 1572, 1580, 1591, 1592, 1600, 1606, 1607, 1608, 1609,
	1618, 1620, 1621, 1622, 1623, 1624, 1628, 1629, 1645, 1659,
	1660, 1667, 1668, 0, 1697, 1700, 1717, 1723, 1725, 1732,
	1737, 1739, 1776, 1789, 407, 217, 1641, 1666, 1704, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 0, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 1750, 1614, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 1599, 172, 1746, 1781, 1678,
	1692, 1762, 1724, 385, 1617, 1766, 1566, 1596, 1783, 1602,
	1605, 1686, 1532, 1655, 307, 1593, 1533, 1516, 1571, 1520,
	1584, 1521, 1568, 223, 1564, 1727, 1658, 1764, 1637, 1679,
	1689, 222, 209, 1647, 1646, 1752, 1582, 1581, 1684, 1741,
	1763, 1636, 0, 1773, 270, 1738, 0, 410, 365, 290,
	0, 0, 1632, 1747, 1653, 1716, 1615, 1688, 1548, 1671,
	1768, 1594, 1680, 1769, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 1760, 1587, 0, 1627, 1685, 1788, 1519, 1672, 0,
	1524, 1535, 1782, 1753, 1578, 1579, 227, 0, 0, 0,
	0, 0, 0, 0, 1630, 1654, 1706, 1612, 404, 1691,
	1701, 1719, 1604, 325, 243, 0, 0, 0, 0, 0,
	0, 2426, 0, 1573, 0, 1669, 0, 0, 0, 1540,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 1547, 1517, 1575,
	1708, 1518, 1515, 291, 1536, 1721, 1751, 1613, 259, 0,
	1757, 1611, 1610, 1695, 1541, 1731, 1597, 267, 1539, 166,
	1534, 1542, 1595, 302, 1705, 1713, 0, 169, 269, 1728,
	1569, 1586, 210, 0, 337, 1681, 403, 0, 238, 1662,
	336, 271, 396, 1696, 1759, 402, 1598, 379, 411, 415,
	234, 1638, 201, 362, 225, 219, 1577, 1718, 1523, 244,
	324, 214, 263, 1616, 1687, 1570, 206, 1699, 1670, 1733,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 1729, 1712,
	1735, 1563, 1543, 1554, 1544, 1585, 1761, 253, 245, 1736,
	1734, 1588, 311, 192, 1651, 1644, 1631, 1709, 406, 1784,
	221, 1714, 408, 0, 350, 349, 1601, 252, 1715, 0,
	0, 332, 0, 260, 174, 1740, 417, 188, 265, 387,
	0, 237, 301, 212, 1683, 312, 1583, 168, 328, 283,
	285, 282, 286, 242, 0, 0, 1711, 330, 352, 391,
	190, 368, 0, 0, 0, 0, 342, 0, 0, 1767,
	277, 229, 233, 246, 257, 1682, 335, 369, 409, 1673,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 1707, 184, 179, 1755, 1730, 1664, 1619, 1625,
	1525, 0, 178, 1703, 1574, 1590, 1562, 1677, 1561, 241,
	1694, 399, 400, 211, 418, 1537, 1775, 180, 1538, 1774,
	298, 306, 297, 1778, 395, 1756, 1665, 1650, 1648, 1530,
	1754, 1663, 1649, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 1652, 0, 175, 0, 366, 1765,
	1790, 377, 193, 1556, 1722, 390, 0, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 1698, 1787,
	310, 338, 200, 405, 363, 226, 1552, 303, 1555, 1550,
	1553, 1551, 1656, 1657, 1770, 1771, 1772, 1710, 1545, 0,
	1748, 1749, 0, 1643, 1758, 1531, 0, 1726, 0, 0,
	1690, 1785, 1603, 207, 0, 1527, 1528, 1529, 0, 1633,
	1634, 0, 0, 1744, 1743, 1742, 1745, 0, 1779, 1777,
	1780, 1546, 1567, 1589, 1639, 1640, 1642, 1674, 1675, 1720,
	1693, 1702, 1576, 1635, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 0, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 1661, 170, 181, 268, 1786, 331,
	236, 1514, 1522, 1549, 1557, 1558, 1559, 1560, 1565, 1572,
	1580, 1591, 1592, 1600, 1606, 1607, 1608, 1609, 1618, 1620,
	1621, 1622, 1623, 1624, 1628, 1629, 1645, 1659, 1660, 1667,
	1668, 0, 1697, 1700, 1717, 1723, 1725, 1732, 1737, 1739,
	1776, 1789, 407, 217, 1641, 1666, 1704, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 0, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 1750, 1614, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 1599, 172, 1746, 1781, 1678, 1692, 1762,
	1724, 385, 1617, 1766, 1566, 1596, 1783, 1602, 1605, 1686,
	1532, 1655, 307, 1593, 1533, 1516, 1571, 1520, 1584, 1521,
	1568, 223, 1564, 1727, 1658, 1764, 1637, 1679, 1689, 222,
	209, 1647, 1646, 1752, 1582, 1581, 1684, 1741, 1763, 1636,
	0, 1773, 270, 1738, 0, 410, 365, 290, 0, 0,
	1632, 1747, 1653, 1716, 1615, 1688, 1548, 1671, 1768, 1594,
	1680, 1769, 0, 0, 0, 0, 0, 1005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1676, 1760,
	1587, 0, 1627, 1685, 1788, 1519, 1672, 0, 1524, 1535,
	1782, 1753, 1578, 1579, 227, 0, 0, 0, 0, 0,
	0, 0, 1630, 1654, 1706, 1612, 404, 1691, 1701, 1719,
	1604, 325, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 1573, 0, 1669, 0, 0, 0, 1540, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 0, 0, 1547, 1517, 1575, 1708, 1518,
	1515, 291, 1536, 1721, 1751, 1613, 259, 0, 1757, 1611,
	1610, 1695, 1541, 1731, 1597, 267, 1539, 166, 1534, 1542,
	1595, 302, 1705, 1713, 0, 169, 269, 1728, 1569, 1586,
	210, 0, 337, 1681, 403, 0, 238, 1662, 336, 271,
	396, 1696, 1759, 402, 1598, 379, 411, 415, 234, 1638,
	201, 362, 225, 219, 1577, 1718, 1523, 244, 324, 214,
	263, 1616, 1687, 1570, 206, 1699, 1670, 1733, 361, 393,
	171, 287, 394, 414, 189, 386, 288, 295, 203, 205,
	204, 183, 355, 392, 195, 208, 1729, 1712, 1735, 1563,
	1543, 1554, 1544, 1585, 1761, 253, 245, 1736, 1734, 1588,
	311, 192, 1651, 1644, 1631, 1709, 406, 1784, 221, 1714,
	408, 0, 350, 349, 1601, 252, 1715, 0, 0, 332,
	0, 260, 174, 1740, 417, 188, 265, 387, 0, 237,
	301, 212, 1683, 312, 1583, 168, 328, 283, 285, 282,
	286, 242, 0, 0, 1711, 330, 352, 391, 190, 368,
	0, 0, 0, 0, 342, 0, 0, 1767, 277, 229,
	233, 246, 257, 1682, 335, 369, 409, 1673, 185, 339,
	370, 383, 344, 240, 372, 376, 373, 374, 371, 375,
	340, 341, 0, 177, 378, 401, 196, 351, 354, 416,
	1707, 184, 179, 1755, 1730, 1664, 1619, 1625, 1525, 0,
	178, 1703, 1574, 1590, 1562, 1677, 1561, 241, 1694, 399,
	400, 211, 418, 1537, 1775, 180, 1538, 1774, 298, 306,
	297, 1778, 395, 1756, 1665, 1650, 1648, 1530, 1754, 1663,
	1649, 266, 232, 248, 322, 273, 323, 249, 293, 292,
	294, 275, 1652, 0, 175, 0, 366, 1765, 1790, 377,
	193, 1556, 1722, 390, 2002, 329, 194, 239, 230, 321,
	296, 186, 251, 364, 264, 272, 1698, 1787, 310, 338,
	200, 405, 363, 226, 1552, 303, 1555, 1550, 1553, 1551,
	1656, 1657, 1770, 1771, 1772, 1710, 1545, 0, 1748, 1749,
	0, 1643, 1758, 1531, 0, 1726, 0, 0, 1690, 1785,
	1603, 207, 0, 1527, 1528, 1529, 0, 1633, 1634, 0,
	0, 1744, 1743, 1742, 1745, 0, 1779, 1777, 1780, 1546,
	1567, 1589, 1639, 1640, 1642, 1674, 1675, 1720, 1693, 1702,
	1576, 1635, 318, 176, 187, 199, 218, 216, 231, 261,
	284, 289, 316, 353, 358, 380, 381, 382, 384, 220,
	0, 224, 198, 333, 197, 274, 254, 317, 388, 389,
	326, 213, 1661, 170, 181, 268, 1786, 331, 236, 1514,
	1522, 1549, 1557, 1558, 1559, 1560, 1565, 1572, 1580, 1591,
	1592, 1600, 1606, 1607, 1608, 1609, 1618, 1620, 1621, 1622,
	1623, 1624, 1628, 1629, 1645, 1659, 1660, 1667, 1668, 0,
	1697, 1700, 1717, 1723, 1725, 1732, 1737, 1739, 1776, 1789,
	407, 217, 1641, 1666, 1704, 182, 191, 202, 215, 228,
	235, 247, 250, 255, 256, 258, 262, 276, 278, 279,
	280, 281, 299, 300, 304, 305, 308, 309, 313, 314,
	315, 319, 320, 327, 0, 334, 343, 345, 346, 347,
	348, 356, 357, 359, 360, 367, 397, 398, 412, 413,
	1750, 1614, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 1599, 172, 1746, 1781, 1678, 1692, 1762, 1724, 385,
	1617, 1766, 1566, 1596, 1783, 1602, 1605, 1686, 1532, 1655,
	307, 1593, 1533, 1516, 1571, 1520, 1584, 1521, 1568, 223,
	1564, 1727, 1658, 1764, 1637, 1679, 1689, 222, 209, 1647,
	1646, 1752, 1582, 1581, 1684, 1741, 1763, 1636, 0, 1773,
	270, 1738, 0, 410, 365, 290, 0, 0, 1632, 1747,
	1653, 1716, 1615, 1688, 1548, 1671, 1768, 1594, 1680, 1769,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 1760, 1587, 0,
	1627, 1685, 1788, 1519, 1672, 0, 1524, 1535, 1782, 1753,
	1578, 1579, 227, 0, 0, 0, 0, 0, 0, 0,
	1630, 1654, 1706, 1612, 404, 1691, 1701, 1719, 1604, 325,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	0, 1669, 0, 0, 0, 1540, 1526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 0, 1547, 1517, 1575, 1708, 1518, 1515, 291,
	1536, 1721, 1751, 1613, 259, 0, 1757, 1611, 1610, 1695,
	1541, 1731, 1597, 267, 1539, 166, 1534, 1542, 1595, 302,
	1705, 1713, 0, 169, 269, 1728, 1569, 1586, 210, 0,
	337, 1681, 403, 0, 238, 1662, 336, 271, 396, 1696,
	1759, 402, 1598, 379, 411, 415, 234, 1638, 201, 362,
	225, 219, 1577, 1718, 1523, 244, 324, 214, 263, 1616,
	1687, 1570, 206, 1699, 1670, 1733, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 1729, 1712, 1735, 1563, 1543, 1554,
	1544, 1585, 1761, 253, 245, 1736, 1734, 1588, 311, 192,
	1651, 1644, 1631, 1709, 406, 1784, 221, 1714, 408, 0,
	350, 349, 1601, 252, 1715, 0, 0, 332, 0, 260,
	174, 1740, 417, 188, 265, 387, 0, 237, 301, 212,
	1683, 312, 1583, 168, 328, 283, 285, 282, 286, 242,
	0, 0, 1711, 330, 352, 391, 190, 368, 0, 0,
	0, 0, 342, 0, 0, 1767, 277, 229, 233, 246,
	257, 1682, 335, 369, 409, 1673, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 1707, 184,
	179, 1755, 1730, 1664, 1619, 1625, 1525, 0, 178, 1703,
	1574, 1590, 1562, 1677, 1561, 241, 1694, 399, 400, 211,
	418, 1537, 1775, 180, 1538, 1774, 298, 306, 297, 1778,
	395, 1756, 1665, 1650, 1648, 1530, 1754, 1663, 1649, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	1652, 0, 175, 0, 366, 1765, 1790, 377, 193, 1556,
	1722, 390, 0, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 1698, 1787, 310, 338, 200, 405,
	363, 226, 1552, 303, 1555, 1550, 1553, 1551, 1656, 1657,
	1770, 1771, 1772, 1710, 1545, 0, 1748, 1749, 0, 1643,
	1758, 1531, 0, 1726, 0, 0, 1690, 1785, 1603, 207,
	0, 1527, 1528, 1529, 0, 1633, 1634, 0, 0, 1744,
	1743, 1742, 1745, 0, 1779, 1777, 1780, 1546, 1567, 1589,
	1639, 1640, 1642, 1674, 1675, 1720, 1693, 1702, 1576, 1635,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	1661, 170, 181, 268, 1786, 331, 236, 1514, 1522, 1549,
	1557, 1558, 1559, 1560, 1565, 1572, 1580, 1591, 1592, 1600,
	1606, 1607, 1608, 1609, 1618, 1620, 1621, 1622, 1623, 1624,
	1628, 1629, 1645, 1659, 1660, 1667, 1668, 0, 1697, 1700,
	1717, 1723, 1725, 1732, 1737, 1739, 1776, 1789, 407, 217,
	1641, 1666, 1704, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 0, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 1750, 1614,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 1599,
	172, 1746, 1781, 1678, 1692, 1762, 1724, 385, 1617, 1766,
	1566, 1596, 1783, 1602, 1605, 1686, 1532, 1655, 307, 1593,
	1533, 1516, 1571, 1520, 1584, 1521, 1568, 223, 1564, 1727,
	1658, 1764, 1637, 1679, 1689, 222, 209, 1647, 1646, 1752,
	1582, 1581, 1684, 1741, 1763, 1636, 0, 1773, 270, 1738,
	0, 410, 365, 290, 0, 0, 1632, 1747, 1653, 1716,
	1615, 1688, 1548, 1671, 1768, 1594, 1680, 1769, 0, 0,
	0, 0, 0, 3570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 1760, 1587, 0, 1627, 1685,
	1788, 1519, 1672, 0, 1524, 1535, 1782, 1753, 1578, 1579,
	227, 0, 0, 0, 0, 0, 0, 0, 1630, 1654,
	1706, 1612, 404, 1691, 1701, 1719, 1604, 325, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 1573, 0, 1669,
	0, 0, 0, 1540, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 1547, 1517, 1575, 1708, 1518, 1515, 291, 1536, 1721,
	1751, 1613, 259, 0, 1757, 1611, 1610, 1695, 1541, 1731,
	1597, 267, 1539, 166, 1534, 1542, 1595, 302, 1705, 1713,
	0, 169, 269, 1728, 1569, 1586, 210, 0, 337, 1681,
	403, 0, 238, 1662, 336, 271, 396, 1696, 1759, 402,
	1598, 379, 411, 415, 234, 1638, 201, 362, 225, 219,
	1577, 1718, 1523, 244, 324, 214, 263, 1616, 1687, 1570,
	206, 1699, 1670, 1733, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 1729, 1712, 1735, 1563, 1543, 1554, 3573, 3574,
	3575, 253, 245, 1736, 1734, 1588, 311, 192, 1651, 1644,
	1631, 1709, 406, 1784, 221, 1714, 408, 0, 350, 349,
	1601, 252, 1715, 0, 0, 332, 0, 260, 174, 1740,
	417, 188, 265, 387, 0, 237, 301, 212, 1683, 312,
	1583, 168, 328, 283, 285, 282, 286, 242, 0, 0,
	1711, 330, 352, 391, 190, 368, 0, 0, 0, 0,
	342, 0, 0, 1767, 277, 229, 233, 246, 257, 1682,
	335, 369, 409, 1673, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 1707, 184, 179, 1755,
	1730, 1664, 1619, 1625, 1525, 0, 178, 1703, 1574, 1590,
	1562, 1677, 1561, 241, 1694, 399, 400, 211, 418, 1537,
	1775, 180, 1538, 1774, 298, 306, 297, 1778, 395, 1756,
	1665, 1650, 1648, 1530, 1754, 1663, 1649, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 1652, 0,
	175, 0, 366, 1765, 1790, 377, 193, 1556, 1722, 390,
	0, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 1698, 1787, 310, 338, 200, 405, 363, 226,
	1552, 303, 1555, 1550, 1553, 1551, 1656, 1657, 1770, 1771,
	1772, 1710, 1545, 0, 1748, 1749, 0, 1643, 1758, 1531,
	0, 1726, 0, 0, 1690, 1785, 1603, 207, 0, 1527,
	1528, 1529, 0, 1633, 1634, 0, 0, 1744, 1743, 1742,
	1745, 0, 1779, 1777, 1780, 1546, 1567, 1589, 1639, 1640,
	1642, 1674, 1675, 1720, 1693, 1702, 1576, 1635, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 1661, 170,
	181, 268, 1786, 331, 236, 1514, 1522, 1549, 1557, 1558,
	1559, 1560, 1565, 1572, 1580, 1591, 1592, 1600, 1606, 1607,
	1608, 1609, 1618, 1620, 1621, 1622, 1623, 1624, 1628, 1629,
	1645, 1659, 1660, 1667, 1668, 0, 1697, 1700, 1717, 1723,
	1725, 1732, 1737, 1739, 1776, 1789, 407, 217, 1641, 1666,
	1704, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	0, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 1750, 1614, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 1599, 172, 1746,
	1781, 1678, 1692, 1762, 1724, 385, 1617, 1766, 1566, 1596,
	1783, 1602, 1605, 1686, 1532, 1655, 307, 1593, 1533, 1516,
	1571, 1520, 1584, 1521, 1568, 223, 1564, 1727, 1658, 1764,
	1637, 1679, 1689, 222, 209, 1647, 1646, 1752, 1582, 1581,
	1684, 1741, 1763, 1636, 0, 1773, 270, 1738, 0, 410,
	365, 290, 0, 0, 1632, 1747, 1653, 1716, 1615, 1688,
	1548, 1671, 1768, 1594, 1680, 1769, 0, 0, 0, 0,
	0, 2791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 1760, 1587, 0, 1627, 1685, 1788, 1519,
	1672, 0, 1524, 1535, 1782, 1753, 1578, 1579, 227, 0,
	0, 0, 0, 0, 0, 0, 1630, 1654, 1706, 1612,
	404, 1691, 1701, 1719, 1604, 325, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 1573, 0, 1669, 0, 0,
	0, 1540, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 1547,
	1517, 1575, 1708, 1518, 1515, 291, 1536, 1721, 1751, 1613,
	259, 0, 1757, 1611, 1610, 1695, 1541, 1731, 1597, 267,
	1539, 166, 1534, 1542, 1595, 302, 1705, 1713, 0, 169,
	269, 1728, 1569, 1586, 210, 0, 337, 1681, 403, 0,
	238, 1662, 336, 271, 396, 1696, 1759, 402, 1598, 379,
	411, 415, 234, 1638, 201, 362, 225, 219, 1577, 1718,
	1523, 244, 324, 214, 263, 1616, 1687, 1570, 206, 1699,
	1670, 1733, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	1729, 1712, 1735, 1563, 1543, 1554, 1544, 1585, 1761, 253,
	245, 1736, 1734, 1588, 311, 192, 1651, 1644, 1631, 1709,
	406, 1784, 221, 1714, 408, 0, 350, 349, 1601, 252,
	1715, 0, 0, 332, 0, 260, 174, 1740, 417, 188,
	265, 387, 0, 237, 301, 212, 1683, 312, 1583, 168,
	328, 283, 285, 282, 286, 242, 0, 0, 1711, 330,
	352, 391, 190, 368, 0, 0, 0, 0, 342, 0,
	0, 1767, 277, 229, 233, 246, 257, 1682, 335, 369,
	409, 1673, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 1707, 184, 179, 1755, 1730, 1664,
	1619, 1625, 1525, 0, 178, 1703, 1574, 1590, 1562, 1677,
	1561, 241, 1694, 399, 400, 211, 418, 1537, 1775, 180,
	1538, 1774, 298, 306, 297, 1778, 395, 1756, 1665, 1650,
	1648, 1530, 1754, 1663, 1649, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 1652, 0, 175, 0,
	366, 1765, 1790, 377, 193, 1556, 1722, 390, 0, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	1698, 1787, 310, 338, 200, 405, 363, 226, 1552, 303,
	1555, 1550, 1553, 1551, 1656, 1657, 1770, 1771, 1772, 1710,
	1545, 0, 1748, 1749, 0, 1643, 1758, 1531, 0, 1726,
	0, 0, 1690, 1785, 1603, 207, 0, 1527, 1528, 1529,
	0, 1633, 1634, 0, 0, 1744, 1743, 1742, 1745, 0,
	1779, 1777, 1780, 1546, 1567, 1589, 1639, 1640, 1642, 1674,
	1675, 1720, 1693, 1702, 1576, 1635, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 1661, 170, 181, 268,
	1786, 331, 236, 1514, 1522, 1549, 1557, 1558, 1559, 1560,
	1565, 1572, 1580, 1591, 1592, 1600, 1606, 1607, 1608, 1609,
	1618, 1620, 1621, 1622, 1623, 1624, 1628, 1629, 1645, 1659,
	1660, 1667, 1668, 0, 1697, 1700, 1717, 1723, 1725, 1732,
	1737, 1739, 1776, 1789, 407, 217, 1641, 1666, 1704, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 0, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 1750, 1614, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 1599, 172, 1746, 1781, 1678,
	1692, 1762, 1724, 385, 1617, 1766, 1566, 1596, 1783, 1602,
	1605, 1686, 1532, 1655, 307, 1593, 1533, 1516, 1571, 1520,
	1584, 1521, 1568, 223, 1564, 1727, 1658, 1764, 1637, 1679,
	1689, 222, 209, 1647, 1646, 1752, 1582, 1581, 1684, 1741,
	1763, 1636, 0, 1773, 270, 1738, 0, 410, 365, 290,
	0, 0, 1632, 1747, 1653, 1716, 1615, 1688, 1548, 1671,
	1768, 1594, 1680, 1769, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 1760, 1587, 0, 1627, 1685, 1788, 1519, 1672, 0,
	1524, 1535, 1782, 1753, 1578, 1579, 227, 0, 0, 0,
	0, 0, 0, 0, 1630, 1654, 1706, 1612, 404, 1691,
	1701, 1719, 1604, 325, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 1669, 0, 0, 0, 1540,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 1547, 1517, 1575,
	1708, 1518, 1515, 291, 1536, 1721, 1751, 1613, 259, 0,
	1757, 1611, 1610, 1695, 1541, 1731, 1597, 267, 1539, 166,
	1534, 1542, 1595, 302, 1705, 1713, 0, 169, 269, 1728,
	1569, 1586, 210, 0, 337, 1681, 403, 0, 238, 1662,
	336, 271, 396, 1696, 1759, 402, 1598, 379, 411, 415,
	234, 1638, 201, 362, 225, 219, 1577, 1718, 1523, 244,
	324, 214, 263, 1616, 1687, 1570, 206, 1699, 1670, 1733,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 1729, 1712,
	1735, 1563, 1543, 1554, 1544, 1585, 1761, 253, 245, 1736,
	1734, 1588, 311, 192, 1651, 1644, 1631, 1709, 406, 1784,
	221, 1714, 408, 0, 350, 349, 1601, 252, 1715, 0,
	0, 332, 0, 260, 174, 1740, 417, 188, 265, 387,
	0, 237, 301, 212, 1683, 312, 1583, 168, 328, 283,
	285, 282, 286, 242, 0, 0, 1711, 330, 352, 391,
	190, 368, 0, 0, 0, 0, 342, 0, 0, 1767,
	277, 229, 233, 246, 257, 1682, 335, 369, 409, 1673,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 1707, 184, 179, 1755, 1730, 1664, 1619, 1625,
	1525, 0, 178, 1703, 1574, 1590, 1562, 1677, 1561, 241,
	1694, 399, 400, 211, 418, 1537, 1775, 180, 1538, 1774,
	298, 306, 297, 1778, 395, 1756, 1665, 1650, 1648, 1530,
	1754, 1663, 1649, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 1652, 0, 175, 0, 366, 1765,
	1790, 377, 193, 1556, 1722, 390, 0, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 1698, 1787,
	310, 338, 200, 405, 363, 226, 1552, 303, 1555, 1550,
	1553, 1551, 1656, 1657, 1770, 1771, 1772, 1710, 1545, 0,
	1748, 1749, 0, 1643, 1758, 1531, 0, 1726, 0, 0,
	1690, 1785, 1603, 207, 0, 1527, 1528, 1529, 0, 1633,
	1634, 0, 0, 1744, 1743, 1742, 1745, 0, 1779, 1777,
	1780, 1546, 1567, 1589, 1639, 1640, 1642, 1674, 1675, 1720,
	1693, 1702, 1576, 1635, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 0, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 1661, 170, 181, 268, 1786, 331,
	236, 1514, 1522, 1549, 1557, 1558, 1559, 1560, 1565, 1572,
	1580, 1591, 1592, 1600, 1606, 1607, 1608, 1609, 1618, 1620,
	1621, 1622, 1623, 1624, 1628, 1629, 1645, 1659, 1660, 1667,
	1668, 0, 1697, 1700, 1717, 1723, 1725, 1732, 1737, 1739,
	1776, 1789, 407, 217, 1641, 1666, 1704, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 0, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 1750, 1614, 167, 0, 0, 173, 385, 0,
	0, 0, 0, 1599, 172, 1746, 1781, 1678, 1692, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 222, 209, 0, 0,
	0, 0, 0, 0, 0, 2124, 2128, 0, 0, 270,
	0, 1009, 410, 365, 290, 1012, 1011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1005, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 0, 0, 1010, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 325, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 2127, 259, 165, 0, 0, 0, 2121, 0,
	2122, 2123, 267, 1013, 166, 0, 2119, 2126, 302, 0,
	0, 153, 169, 269, 0, 0, 0, 210, 1002, 337,
	0, 403, 1008, 238, 0, 336, 271, 396, 0, 0,
	402, 0, 379, 411, 415, 234, 0, 201, 362, 225,
	219, 0, 0, 0, 244, 324, 214, 263, 0, 0,
	0, 206, 0, 0, 0, 361, 393, 171, 287, 394,
	414, 189, 386, 288, 295, 203, 205, 204, 183, 355,
	392, 195, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 245, 0, 0, 0, 311, 192, 0,
	0, 0, 0, 406, 0, 221, 0, 408, 155, 350,
	349, 0, 252, 0, 156, 147, 332, 157, 260, 174,
	0, 417, 188, 265, 387, 1007, 237, 301, 212, 0,
	312, 0, 168, 328, 283, 285, 282, 286, 242, 151,
	158, 0, 330, 352, 391, 190, 368, 149, 150, 152,
	160, 342, 161, 162, 0, 277, 229, 233, 246, 257,
	0, 335, 369, 409, 0, 185, 339, 370, 383, 344,
	240, 372, 376, 373, 374, 371, 375, 340, 341, 0,
	177, 378, 401, 196, 351, 354, 416, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 241, 0, 399, 400, 211, 418,
	0, 0, 180, 0, 0, 298, 306, 297, 0, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 232,
	248, 322, 273, 323, 249, 293, 292, 294, 275, 0,
	0, 175, 0, 366, 0, 0, 377, 193, 0, 0,
	390, 154, 329, 194, 239, 230, 321, 296, 186, 251,
	364, 264, 272, 0, 0, 310, 338, 200, 405, 363,
	226, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 164, 0, 0, 0, 207, 142,
	0, 0, 0, 143, 0, 0, 144, 145, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	176, 187, 199, 218, 216, 231, 261, 284, 289, 316,
	353, 358, 380, 381, 382, 384, 220, 0, 224, 198,
	333, 197, 274, 254, 317, 388, 389, 326, 213, 0,
	170, 181, 268, 0, 331, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 247, 250,
	255, 256, 258, 262, 276, 278, 279, 280, 281, 299,
	300, 304, 305, 308, 309, 313, 314, 315, 319, 320,
	327, 159, 334, 343, 345, 346, 347, 348, 356, 357,
	359, 360, 367, 397, 398, 412, 413, 385, 0, 167,
	0, 0, 173, 0, 0, 0, 0, 0, 307, 172,
	0, 0, 0, 1250, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 222, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	1009, 410, 365, 290, 1012, 1011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 1254, 0, 0, 0, 0,
	0, 0, 148, 0, 0, 0, 0, 1010, 0, 1246,
	1247, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 404, 0, 0, 0, 0, 325, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 259, 165, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 166, 0, 0, 0, 302, 0, 0,
	153, 169, 269, 0, 0, 0, 210, 0, 337, 0,
	403, 1008, 238, 0, 336, 271, 396, 0, 0, 402,
	0, 379, 411, 415, 234, 0, 201, 362, 225, 219,
	0, 0, 0, 244, 324, 214, 263, 0, 0, 0,
	206, 0, 0, 0, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 245, 0, 0, 0, 311, 192, 0, 0,
	0, 0, 406, 0, 221, 0, 408, 155, 350, 349,
	0, 252, 0, 156, 147, 332, 157, 260, 174, 0,
	417, 188, 265, 387, 1007, 237, 301, 212, 0, 312,
	0, 168, 328, 283, 285, 282, 286, 242, 151, 158,
	0, 330, 352, 391, 190, 368, 149, 150, 152, 160,
	342, 161, 162, 0, 277, 229, 233, 246, 257, 0,
	335, 369, 409, 0, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 0, 184, 179, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 241, 0, 399, 400, 211, 418, 0,
	0, 180, 0, 0, 298, 306, 297, 0, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 0, 0,
	175, 0, 366, 0, 0, 377, 193, 0, 0, 390,
	154, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 0, 0, 310, 338, 200, 405, 363, 226,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 164, 0, 0, 0, 207, 142, 0,
	0, 0, 143, 0, 0, 144, 145, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 0, 170,
	181, 268, 0, 331, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 217, 0, 0,
	0, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	159, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 385, 0, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 307, 172, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 222, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 1009,
	410, 365, 290, 1012, 1011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 1010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 325, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 259, 165, 0, 0, 0, 0, 0, 0, 0,
	267, 1013, 166, 0, 1003, 0, 302, 0, 0, 153,
	169, 269, 0, 0, 0, 210, 1002, 337, 0, 403,
	1008, 238, 0, 336, 271, 396, 0, 0, 402, 0,
	379, 411, 415, 234, 0, 201, 362, 225, 219, 0,
	0, 0, 244, 324, 214, 263, 0, 0, 0, 206,
	0, 0, 0, 361, 393, 171, 287, 394, 414, 189,
	386, 288, 295, 203, 205, 204, 183, 355, 392, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 245, 0, 0, 0, 311, 192, 0, 0, 0,
	0, 406, 0, 221, 0, 408, 155, 350, 349, 0,
	252, 0, 156, 147, 332, 157, 260, 174, 0, 417,
	188, 265, 387, 1007, 237, 301, 212, 0, 312, 0,
	168, 328, 283, 285, 282, 286, 242, 151, 158, 0,
	330, 352, 391, 190, 368, 149, 150, 152, 160, 342,
	161, 162, 0, 277, 229, 233, 246, 257, 0, 335,
	369, 409, 0, 185, 339, 370, 383, 344, 240, 372,
	376, 373, 374, 371, 375, 340, 341, 0, 177, 378,
	401, 196, 351, 354, 416, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 241, 0, 399, 400, 211, 418, 0, 0,
	180, 0, 0, 298, 306, 297, 0, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 232, 248, 322,
	273, 323, 249, 293, 292, 294, 275, 0, 0, 175,
	0, 366, 0, 0, 377, 193, 0, 0, 390, 154,
	329, 194, 239, 230, 321, 296, 186, 251, 364, 264,
	272, 0, 0, 310, 338, 200, 405, 363, 226, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 164, 0, 0, 0, 207, 142, 0, 0,
	0, 143, 0, 0, 144, 145, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 176, 187,
	199, 218, 216, 231, 261, 284, 289, 316, 353, 358,
	380, 381, 382, 384, 220, 0, 224, 198, 333, 197,
	274, 254, 317, 388, 389, 326, 213, 0, 170, 181,
	268, 0, 331, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 247, 250, 255, 256,
	258, 262, 276, 278, 279, 280, 281, 299, 300, 304,
	305, 308, 309, 313, 314, 315, 319, 320, 327, 159,
	334, 343, 345, 346, 347, 348, 356, 357, 359, 360,
	367, 397, 398, 412, 413, 385, 0, 167, 0, 0,
	173, 0, 0, 0, 0, 0, 307, 172, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 1009, 410,
	365, 290, 1012, 1011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 1254, 0, 0, 0, 0, 0, 0,
	148, 0, 0, 0, 0, 1010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 325, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	259, 165, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 166, 0, 0, 0, 302, 0, 0, 153, 169,
	269, 0, 0, 0, 210, 1951, 337, 0, 403, 1008,
	238, 0, 336, 271, 396, 0, 0, 402, 0, 379,
	411, 415, 234, 0, 201, 362, 225, 219, 0, 0,
	0, 244, 324, 214, 263, 0, 0, 0, 206, 0,
	0, 0, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	245, 0, 0, 0, 311, 192, 0, 0, 0, 0,
	406, 0, 221, 0, 408, 155, 350, 349, 0, 252,
	0, 156, 147, 332, 157, 260, 174, 0, 417, 188,
	265, 387, 1007, 237, 301, 212, 0, 312, 0, 168,
	328, 283, 285, 282, 286, 242, 151, 158, 0, 330,
	352, 391, 190, 368, 149, 150, 152, 160, 342, 161,
	162, 0, 277, 229, 233, 246, 257, 0, 335, 369,
	409, 0, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 241, 0, 399, 400, 211, 418, 0, 0, 180,
	0, 0, 298, 306, 297, 0, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 0, 0, 175, 0,
	366, 0, 0, 377, 193, 0, 0, 390, 154, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	0, 0, 310, 338, 200, 405, 363, 226, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 164, 0, 0, 0, 207, 142, 0, 0, 0,
	143, 0, 0, 144, 145, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 0, 170, 181, 268,
	0, 331, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 159, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 385, 0, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 307, 172, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 1009, 410, 365,
	290, 1012, 1011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2915, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 1010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 325, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 259,
	165, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	166, 0, 0, 0, 302, 0, 0, 153, 169, 269,
	0, 0, 0, 210, 0, 337, 0, 403, 1008, 238,
	0, 336, 271, 396, 0, 0, 402, 0, 379, 411,
	415, 234, 0, 201, 362, 225, 219, 0, 0, 0,
	244, 324, 214, 263, 0, 0, 0, 206, 0, 0,
	0, 361, 393, 171, 287, 394, 414, 189, 386, 288,
	295, 203, 205, 204, 183, 355, 392, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 245,
	0, 0, 0, 311, 192, 0, 0, 0, 0, 406,
	0, 221, 0, 408, 155, 350, 349, 0, 252, 0,
	156, 147, 332, 157, 260, 174, 0, 417, 188, 265,
	387, 1007, 237, 301, 212, 0, 312, 0, 168, 328,
	283, 285, 282, 286, 242, 151, 158, 0, 330, 352,
	391, 190, 368, 149, 150, 152, 160, 342, 161, 162,
	0, 277, 229, 233, 246, 257, 0, 335, 369, 409,
	0, 185, 339, 370, 383, 344, 240, 372, 376, 373,
	374, 371, 375, 340, 341, 0, 177, 378, 401, 196,
	351, 354, 416, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	241, 0, 399, 400, 211, 418, 0, 0, 180, 0,
	0, 298, 306, 297, 0, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 232, 248, 322, 273, 323,
	249, 293, 292, 294, 275, 0, 0, 175, 0, 366,
	0, 0, 377, 193, 0, 0, 390, 154, 329, 194,
	239, 230, 321, 296, 186, 251, 364, 264, 272, 0,
	0, 310, 338, 200, 405, 363, 226, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	164, 0, 0, 0, 207, 142, 0, 0, 0, 143,
	0, 0, 144, 145, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 176, 187, 199, 218,
	216, 231, 261, 284, 289, 316, 353, 358, 380, 381,
	382, 384, 220, 0, 224, 198, 333, 197, 274, 254,
	317, 388, 389, 326, 213, 0, 170, 181, 268, 0,
	331, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 247, 250, 255, 256, 258, 262,
	276, 278, 279, 280, 281, 299, 300, 304, 305, 308,
	309, 313, 314, 315, 319, 320, 327, 159, 334, 343,
	345, 346, 347, 348, 356, 357, 359, 360, 367, 397,
	398, 412, 413, 385, 0, 167, 0, 0, 173, 0,
	0, 0, 0, 0, 307, 172, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 222, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 1009, 410, 365, 290,
	1012, 1011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2910,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	0, 0, 0, 1010, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 325, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 259, 165,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 166,
	0, 0, 0, 302, 0, 0, 153, 169, 269, 0,
	0, 0, 210, 0, 337, 0, 403, 1008, 238, 0,
	336, 271, 396, 0, 0, 402, 0, 379, 411, 415,
	234, 0, 201, 362, 225, 219, 0, 0, 0, 244,
	324, 214, 263, 0, 0, 0, 206, 0, 0, 0,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 245, 0,
	0, 0, 311, 192, 0, 0, 0, 0, 406, 0,
	221, 0, 408, 155, 350, 349, 0, 252, 0, 156,
	147, 332, 157, 260, 174, 0, 417, 188, 265, 387,
	1007, 237, 301, 212, 0, 312, 0, 168, 328, 283,
	285, 282, 286, 242, 151, 158, 0, 330, 352, 391,
	190, 368, 149, 150, 152, 160, 342, 161, 162, 0,
	277, 229, 233, 246, 257, 0, 335, 369, 409, 0,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 0, 184, 179, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 241,
	0, 399, 400, 211, 418, 0, 0, 180, 0, 0,
	298, 306, 297, 0, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 0, 0, 175, 0, 366, 0,
	0, 377, 193, 0, 0, 390, 154, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 0, 0,
	310, 338, 200, 405, 363, 226, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 164,
	0, 0, 0, 207, 142, 0, 0, 0, 143, 0,
	0, 144, 145, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 0, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 0, 170, 181, 268, 0, 331,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 217, 0, 0, 0, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 159, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 0, 0, 167, 40, 385, 173, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 222, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2408, 270, 0, 0,
	410, 365, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 325, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 259, 165, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 166, 0, 0, 0, 302, 0, 0, 153,
	169, 269, 0, 0, 0, 210, 0, 337, 0, 403,
	0, 238, 0, 336, 271, 396, 0, 0, 402, 0,
	379, 411, 415, 234, 0, 201, 362, 225, 219, 0,
	0, 0, 244, 324, 214, 263, 0, 0, 0, 206,
	0, 0, 0, 361, 393, 171, 287, 394, 414, 189,
	386, 288, 295, 203, 205, 204, 183, 355, 392, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 245, 0, 0, 0, 311, 192, 0, 0, 0,
	0, 406, 0, 221, 0, 408, 155, 350, 349, 0,
	252, 0, 156, 147, 332, 157, 260, 174, 0, 417,
	188, 265, 387, 139, 237, 301, 212, 0, 312, 0,
	168, 328, 283, 285, 282, 286, 242, 151, 158, 0,
	330, 352, 391, 190, 368, 149, 150, 152, 160, 342,
	161, 162, 0, 277, 229, 233, 246, 257, 0, 335,
	369, 409, 0, 185, 339, 370, 383, 344, 240, 372,
	376, 373, 374, 371, 375, 340, 341, 0, 177, 378,
	401, 196, 351, 354, 416, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 241, 0, 399, 400, 211, 418, 0, 0,
	180, 0, 0, 298, 306, 297, 0, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 232, 248, 322,
	273, 323, 249, 293, 292, 294, 275, 0, 0, 175,
	0, 366, 0, 0, 377, 193, 0, 0, 390, 154,
	329, 194, 239, 230, 321, 296, 186, 251, 364, 264,
	272, 0, 0, 310, 338, 200, 405, 363, 226, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 164, 0, 0, 0, 207, 142, 0, 0,
	0, 143, 0, 0, 144, 145, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 318, 176, 187,
	199, 218, 216, 231, 261, 284, 289, 316, 353, 358,
	380, 381, 382, 384, 220, 0, 224, 198, 333, 197,
	274, 254, 317, 388, 389, 326, 213, 0, 170, 181,
	268, 544, 331, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 247, 250, 255, 256,
	258, 262, 276, 278, 279, 280, 281, 299, 300, 304,
	305, 308, 309, 313, 314, 315, 319, 320, 327, 159,
	334, 343, 345, 346, 347, 348, 356, 357, 359, 360,
	367, 397, 398, 412, 413, 385, 0, 167, 0, 0,
	173, 0, 0, 0, 0, 0, 307, 172, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 410,
	365, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 2085, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 325, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	259, 165, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 166, 0, 0, 0, 302, 0, 0, 153, 169,
	269, 0, 0, 0, 210, 0, 337, 0, 403, 0,
	238, 0, 336, 271, 396, 0, 0, 402, 0, 379,
	411, 415, 234, 0, 201, 362, 225, 219, 0, 0,
	0, 244, 324, 214, 263, 0, 0, 0, 206, 0,
	0, 0, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	245, 0, 0, 0, 311, 192, 0, 0, 0, 0,
	406, 0, 221, 0, 408, 155, 350, 349, 0, 252,
	0, 156, 147, 332, 157, 260, 174, 0, 417, 188,
	265, 387, 139, 237, 301, 212, 0, 312, 0, 168,
	328, 283, 285, 282, 286, 242, 151, 158, 0, 330,
	352, 391, 190, 368, 149, 150, 152, 160, 342, 161,
	162, 0, 277, 229, 233, 246, 257, 0, 335, 369,
	409, 0, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 241, 0, 399, 400, 211, 418, 0, 0, 180,
	0, 0, 298, 306, 297, 0, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 0, 0, 175, 0,
	366, 0, 0, 377, 193, 0, 0, 390, 154, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	0, 0, 310, 338, 200, 405, 363, 226, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 164, 0, 0, 0, 207, 142, 0, 0, 0,
	143, 0, 0, 144, 145, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3322, 2086, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 0, 170, 181, 268,
	0, 331, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 159, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 385, 0, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 307, 172, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 410, 365,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	2085, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 325, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 259,
	165, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	166, 0, 0, 0, 302, 0, 0, 153, 169, 269,
	0, 0, 0, 210, 0, 337, 0, 403, 0, 238,
	0, 336, 271, 396, 0, 0, 402, 0, 379, 411,
	415, 234, 0, 201, 362, 225, 219, 0, 0, 0,
	244, 324, 214, 263, 0, 0, 0, 206, 0, 0,
	0, 361, 393, 171, 287, 394, 414, 189, 386, 288,
	295, 203, 205, 204, 183, 355, 392, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 245,
	0, 0, 0, 311, 192, 0, 0, 0, 0, 406,
	0, 221, 0, 408, 155, 350, 349, 0, 252, 0,
	156, 147, 332, 157, 260, 174, 0, 417, 188, 265,
	387, 139, 237, 301, 212, 0, 312, 0, 168, 328,
	283, 285, 282, 286, 242, 151, 158, 0, 330, 352,
	391, 190, 368, 149, 150, 152, 160, 342, 161, 162,
	0, 277, 229, 233, 246, 257, 0, 335, 369, 409,
	0, 185, 339, 370, 383, 344, 240, 372, 376, 373,
	374, 371, 375, 340, 341, 0, 177, 378, 401, 196,
	351, 354, 416, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	241, 0, 399, 400, 211, 418, 0, 0, 180, 0,
	0, 298, 306, 297, 0, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 232, 248, 322, 273, 323,
	249, 293, 292, 294, 275, 0, 0, 175, 0, 366,
	0, 0, 377, 193, 0, 0, 390, 154, 329, 194,
	239, 230, 321, 296, 186, 251, 364, 264, 272, 0,
	0, 310, 338, 200, 405, 363, 226, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	164, 0, 0, 0, 207, 142, 0, 0, 0, 143,
	0, 0, 144, 145, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 318, 176, 187, 199, 218,
	216, 231, 261, 284, 289, 316, 353, 358, 380, 381,
	382, 384, 220, 0, 224, 198, 333, 197, 274, 254,
	317, 388, 389, 326, 213, 0, 170, 181, 268, 0,
	331, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 247, 250, 255, 256, 258, 262,
	276, 278, 279, 280, 281, 299, 300, 304, 305, 308,
	309, 313, 314, 315, 319, 320, 327, 159, 334, 343,
	345, 346, 347, 348, 356, 357, 359, 360, 367, 397,
	398, 412, 413, 385, 0, 167, 0, 0, 173, 0,
	0, 0, 0, 0, 307, 172, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 222, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 410, 365, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 325, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 0, 291, 0, 0, 0, 0, 259, 165,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 166,
	0, 0, 0, 302, 0, 0, 153, 169, 269, 0,
	0, 0, 210, 0, 337, 0, 403, 463, 460, 0,
	336, 271, 396, 0, 0, 402, 0, 379, 411, 415,
	234, 0, 201, 362, 225, 219, 0, 0, 0, 244,
	324, 214, 263, 0, 0, 0, 206, 0, 0, 0,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 245, 0,
	0, 0, 311, 192, 0, 0, 0, 0, 406, 0,
	221, 0, 408, 155, 350, 349, 0, 252, 0, 156,
	147, 332, 157, 260, 174, 0, 417, 188, 265, 387,
	139, 237, 301, 212, 0, 312, 0, 168, 328, 283,
	285, 282, 286, 242, 151, 158, 0, 330, 352, 391,
	190, 368, 149, 150, 152, 160, 342, 161, 162, 0,
	277, 229, 233, 246, 257, 0, 335, 369, 409, 0,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 0, 184, 179, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 241,
	0, 399, 400, 211, 418, 0, 0, 180, 0, 0,
	298, 306, 297, 0, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 0, 0, 175, 0, 366, 0,
	0, 377, 193, 0, 0, 390, 154, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 0, 0,
	310, 338, 200, 405, 363, 226, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 164,
	0, 0, 0, 207, 142, 0, 0, 0, 143, 0,
	0, 144, 145, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 0, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 0, 170, 181, 268, 0, 331,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 217, 0, 0, 0, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 159, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 385, 0, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 307, 172, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	222, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 410, 365, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 325, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 259, 165, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 166, 0,
	0, 0, 302, 0, 0, 153, 169, 269, 0, 0,
	0, 210, 0, 337, 0, 403, 2191, 238, 0, 336,
	271, 396, 0, 0, 402, 0, 379, 411, 415, 234,
	0, 201, 362, 225, 219, 0, 0, 0, 244, 324,
	214, 263, 0, 0, 0, 206, 0, 0, 0, 361,
	393, 171, 287, 394, 414, 189, 386, 288, 295, 203,
	205, 204, 183, 355, 392, 195, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 245, 0, 0,
	0, 311, 192, 0, 0, 0, 0, 406, 0, 221,
	0, 408, 155, 350, 349, 0, 252, 0, 156, 147,
	332, 157, 260, 174, 0, 417, 188, 265, 387, 139,
	237, 301, 212, 0, 312, 0, 168, 328, 283, 285,
	282, 286, 242, 151, 158, 0, 330, 352, 391, 190,
	368, 149, 150, 152, 160, 342, 161, 162, 0, 277,
	229, 233, 246, 257, 0, 335, 369, 409, 0, 185,
	339, 370, 383, 344, 240, 372, 376, 373, 374, 371,
	375, 340, 341, 0, 177, 378, 401, 196, 351, 354,
	416, 0, 184, 179, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 241, 0,
	399, 400, 211, 418, 0, 0, 180, 0, 0, 298,
	306, 297, 0, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 232, 248, 322, 273, 323, 249, 293,
	292, 294, 275, 0, 0, 175, 0, 366, 0, 0,
	377, 193, 0, 0, 390, 154, 329, 194, 239, 230,
	321, 296, 186, 251, 364, 264, 272, 0, 0, 310,
	338, 200, 405, 363, 226, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 164, 0,
	0, 0, 207, 142, 0, 0, 0, 143, 0, 0,
	144, 145, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 176, 187, 199, 218, 216, 231,
	261, 284, 289, 316, 353, 358, 380, 381, 382, 384,
	220, 0, 224, 198, 333, 197, 274, 254, 317, 388,
	389, 326, 213, 0, 170, 181, 268, 0, 331, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 217, 0, 0, 0, 182, 191, 202, 215,
	228, 235, 247, 250, 255, 256, 258, 262, 276, 278,
	279, 280, 281, 299, 300, 304, 305, 308, 309, 313,
	314, 315, 319, 320, 327, 159, 334, 343, 345, 346,
	347, 348, 356, 357, 359, 360, 367, 397, 398, 412,
	413, 385, 0, 167, 0, 0, 173, 0, 0, 0,
	0, 0, 307, 172, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 222,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 410, 365, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 325, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 259, 165, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 166, 0, 0,
	0, 302, 0, 0, 153, 169, 269, 0, 0, 0,
	210, 0, 337, 0, 403, 0, 238, 0, 336, 271,
	396, 0, 0, 402, 0, 379, 411, 415, 234, 0,
	201, 362, 225, 219, 0, 0, 0, 244, 324, 214,
	263, 0, 0, 0, 206, 0, 0, 0, 361, 393,
	171, 287, 394, 414, 189, 386, 288, 295, 203, 205,
	204, 183, 355, 392, 195, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 245, 0, 0, 0,
	311, 192, 0, 0, 0, 0, 406, 0, 221, 0,
	408, 155, 350, 349, 0, 252, 0, 156, 147, 332,
	157, 260, 174, 0, 417, 188, 265, 387, 139, 237,
	301, 212, 0, 312, 0, 168, 328, 283, 285, 282,
	286, 242, 151, 158, 0, 330, 352, 391, 190, 368,
	149, 150, 152, 160, 342, 161, 162, 0, 277, 229,
	233, 246, 257, 0, 335, 369, 409, 0, 185, 339,
	370, 383, 344, 240, 372, 376, 373, 374, 371, 375,
	340, 341, 0, 177, 378, 401, 196, 351, 354, 416,
	0, 184, 179, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 241, 0, 399,
	400, 211, 418, 0, 0, 180, 0, 0, 298, 306,
	297, 0, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 232, 248, 322, 273, 323, 249, 293, 292,
	294, 275, 0, 0, 175, 0, 366, 0, 0, 377,
	193, 0, 0, 390, 154, 329, 194, 239, 230, 321,
	296, 186, 251, 364, 264, 272, 0, 0, 310, 338,
	200, 405, 363, 226, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 164, 0, 0,
	0, 207, 142, 0, 0, 0, 143, 0, 0, 144,
	145, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 176, 187, 199, 218, 216, 231, 261,
	284, 289, 316, 353, 358, 380, 381, 382, 384, 220,
	0, 224, 198, 333, 197, 274, 254, 317, 388, 389,
	326, 213, 0, 170, 181, 268, 0, 331, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 217, 0, 0, 0, 182, 191, 202, 215, 228,
	235, 247, 250, 255, 256, 258, 262, 276, 278, 279,
	280, 281, 299, 300, 304, 305, 308, 309, 313, 314,
	315, 319, 320, 327, 159, 334, 343, 345, 346, 347,
	348, 356, 357, 359, 360, 367, 397, 398, 412, 413,
	385, 0, 167, 0, 1381, 173, 0, 0, 0, 0,
	0, 307, 172, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 222, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 410, 365, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	325, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 259, 165, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 166, 0, 0, 0,
	302, 0, 0, 153, 169, 269, 0, 0, 0, 210,
	0, 337, 0, 403, 0, 238, 0, 336, 271, 396,
	0, 0, 402, 0, 379, 411, 415, 234, 0, 201,
	362, 225, 219, 0, 0, 0, 244, 324, 214, 263,
	0, 0, 0, 206, 0, 0, 0, 361, 393, 171,
	287, 394, 414, 189, 386, 288, 295, 203, 205, 204,
	183, 355, 392, 195, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 245, 0, 0, 0, 311,
	192, 0, 0, 0, 0, 406, 0, 221, 0, 408,
	155, 350, 349, 0, 252, 0, 156, 147, 332, 157,
	260, 174, 0, 417, 188, 265, 387, 139, 237, 301,
	212, 0, 312, 0, 168, 328, 283, 285, 282, 286,
	242, 151, 158, 0, 330, 352, 391, 190, 368, 149,
	150, 152, 160, 342, 161, 162, 0, 277, 229, 233,
	246, 257, 0, 335, 369, 409, 0, 185, 339, 370,
	383, 344, 240, 372, 376, 373, 374, 371, 375, 340,
	341, 0, 177, 378, 401, 196, 351, 354, 416, 0,
	184, 179, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 241, 0, 399, 400,
	211, 418, 0, 0, 180, 0, 0, 298, 306, 297,
	0, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 232, 248, 322, 273, 323, 249, 293, 292, 294,
	275, 0, 0, 175, 0, 366, 0, 0, 377, 193,
	0, 0, 390, 154, 329, 194, 239, 230, 321, 296,
	186, 251, 364, 264, 272, 0, 0, 310, 338, 200,
	405, 363, 226, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 164, 0, 0, 0,
	207, 142, 0, 0, 0, 143, 0, 0, 144, 145,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 176, 187, 199, 218, 216, 231, 261, 284,
	289, 316, 353, 358, 380, 381, 382, 384, 220, 0,
	224, 198, 333, 197, 274, 254, 317, 388, 389, 326,
	213, 0, 170, 181, 268, 0, 331, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	217, 0, 0, 0, 182, 191, 202, 215, 228, 235,
	247, 250, 255, 256, 258, 262, 276, 278, 279, 280,
	281, 299, 300, 304, 305, 308, 309, 313, 314, 315,
	319, 320, 327, 159, 334, 343, 345, 346, 347, 348,
	356, 357, 359, 360, 367, 397, 398, 412, 413, 385,
	0, 167, 0, 0, 173, 0, 0, 0, 0, 0,
	307, 172, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 222, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 410, 365, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 325,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 134, 0, 259, 165, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 166, 0, 0, 0, 302,
	0, 0, 153, 169, 269, 0, 0, 0, 210, 0,
	337, 0, 403, 0, 238, 0, 336, 271, 396, 0,
	0, 402, 0, 379, 411, 415, 234, 0, 201, 362,
	225, 219, 0, 0, 0, 244, 324, 214, 263, 0,
	0, 0, 206, 0, 0, 0, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 245, 0, 0, 0, 311, 192,
	0, 0, 0, 0, 406, 0, 221, 0, 408, 155,
	350, 349, 0, 252, 0, 156, 147, 332, 157, 260,
	174, 0, 417, 188, 265, 387, 139, 237, 301, 212,
	0, 312, 0, 168, 328, 283, 285, 282, 286, 242,
	151, 158, 0, 330, 352, 391, 190, 368, 149, 150,
	152, 160, 342, 161, 162, 0, 277, 229, 233, 246,
	257, 0, 335, 369, 409, 0, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 0, 184,
	179, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 241, 0, 399, 400, 211,
	418, 0, 0, 180, 0, 0, 298, 306, 297, 0,
	395, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	0, 0, 175, 0, 366, 0, 0, 377, 193, 0,
	0, 390, 154, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 0, 0, 310, 338, 200, 405,
	363, 226, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 164, 0, 0, 0, 207,
	142, 0, 0, 0, 143, 0, 0, 144, 145, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	0, 170, 181, 268, 0, 331, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 217,
	0, 0, 0, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 159, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 385, 0,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 307,
	172, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 222, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 410, 365, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 325, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 259, 165, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 166, 0, 0, 0, 302, 0,
	0, 153, 169, 269, 0, 0, 0, 210, 0, 337,
	0, 403, 0, 238, 0, 336, 271, 396, 0, 0,
	402, 0, 379, 411, 415, 234, 0, 201, 362, 225,
	219, 0, 0, 0, 244, 324, 214, 263, 0, 0,
	0, 206, 0, 0, 0, 361, 393, 171, 287, 394,
	414, 189, 386, 288, 295, 203, 205, 204, 183, 355,
	392, 195, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 245, 0, 0, 0, 311, 192, 0,
	0, 0, 0, 406, 0, 221, 0, 408, 155, 350,
	349, 0, 252, 0, 156, 147, 332, 157, 260, 174,
	0, 417, 188, 265, 387, 139, 237, 301, 212, 0,
	312, 0, 168, 328, 283, 285, 282, 286, 242, 151,
	158, 0, 330, 352, 391, 190, 368, 149, 150, 152,
	160, 342, 161, 162, 0, 277, 229, 233, 246, 257,
	0, 335, 369, 409, 0, 185, 339, 370, 383, 344,
	240, 372, 376, 373, 374, 371, 375, 340, 341, 0,
	177, 378, 401, 196, 351, 354, 416, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 241, 0, 399, 400, 211, 418,
	0, 0, 180, 0, 0, 298, 306, 297, 0, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 232,
	248, 322, 273, 323, 249, 293, 292, 294, 275, 0,
	0, 175, 0, 366, 0, 0, 377, 193, 0, 0,
	390, 154, 329, 194, 239, 230, 321, 296, 186, 251,
	364, 264, 272, 0, 0, 310, 338, 200, 405, 363,
	226, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 164, 0, 0, 0, 207, 142,
	0, 0, 0, 143, 0, 0, 144, 145, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	176, 187, 199, 218, 216, 231, 261, 284, 289, 316,
	353, 358, 380, 381, 382, 384, 220, 0, 224, 198,
	333, 197, 274, 254, 317, 388, 389, 326, 213, 0,
	170, 181, 268, 0, 331, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 247, 250,
	255, 256, 258, 262, 276, 278, 279, 280, 281, 299,
	300, 304, 305, 308, 309, 313, 314, 315, 319, 320,
	327, 159, 334, 343, 345, 346, 347, 348, 356, 357,
	359, 360, 367, 397, 398, 412, 413, 0, 0, 167,
	0, 0, 173, 505, 385, 498, 510, 491, 0, 172,
	0, 0, 0, 0, 0, 307, 0, 0, 516, 0,
	0, 0, 0, 0, 223, 0, 0, 499, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 410, 365,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 325, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 489,
	492, 0, 0, 0, 291, 0, 0, 0, 497, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	166, 0, 0, 0, 302, 501, 0, 0, 169, 269,
	506, 0, 0, 210, 0, 337, 0, 403, 0, 238,
	0, 336, 271, 396, 0, 509, 402, 0, 379, 411,
	415, 234, 0, 201, 362, 225, 219, 0, 0, 0,
	244, 324, 214, 263, 0, 0, 0, 206, 0, 0,
	0, 361, 393, 171, 287, 394, 414, 189, 386, 288,
	295, 203, 205, 204, 183, 355, 392, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 245,
	0, 0, 0, 311, 192, 0, 0, 0, 0, 406,
	0, 221, 0, 408, 0, 350, 349, 496, 252, 0,
	0, 0, 332, 0, 260, 174, 0, 417, 188, 265,
	387, 0, 237, 301, 212, 0, 312, 0, 168, 328,
	283, 285, 282, 286, 242, 0, 0, 0, 519, 352,
	391, 190, 368, 493, 494, 495, 502, 503, 507, 508,
	511, 277, 229, 233, 246, 257, 0, 335, 369, 409,
	0, 185, 339, 370, 383, 344, 240, 372, 376, 373,
	374, 371, 375, 340, 341, 504, 177, 378, 401, 196,
	351, 354, 416, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	241, 0, 399, 400, 211, 418, 0, 0, 180, 0,
	0, 298, 306, 297, 0, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 232, 248, 322, 273, 323,
	249, 293, 292, 294, 275, 0, 0, 175, 0, 366,
	0, 0, 377, 193, 0, 0, 390, 0, 329, 194,
	239, 230, 321, 296, 186, 251, 364, 264, 272, 0,
	0, 310, 338, 200, 405, 363, 226, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 176, 187, 199, 218,
	216, 231, 261, 284, 289, 316, 353, 358, 380, 381,
	382, 384, 220, 0, 224, 198, 333, 197, 274, 254,
	317, 388, 389, 326, 213, 0, 170, 181, 268, 0,
	331, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 247, 250, 255, 256, 258, 262,
	276, 278, 279, 280, 281, 299, 300, 304, 305, 308,
	309, 313, 314, 315, 319, 320, 327, 500, 334, 343,
	345, 346, 347, 348, 356, 357, 359, 360, 367, 397,
	398, 412, 413, 0, 0, 167, 0, 0, 173, 505,
	385, 498, 510, 491, 0, 172, 0, 0, 0, 0,
	0, 307, 0, 0, 483, 0, 0, 0, 0, 0,
	223, 0, 0, 499, 0, 0, 0, 0, 222, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 410, 365, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	325, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 489, 492, 0, 0, 0,
	291, 0, 0, 0, 497, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 166, 0, 0, 0,
	302, 501, 0, 0, 169, 269, 506, 0, 0, 210,
	0, 337, 0, 403, 0, 238, 0, 336, 271, 396,
	0, 509, 402, 0, 379, 411, 415, 234, 0, 201,
	362, 225, 219, 0, 0, 0, 244, 324, 214, 263,
	0, 0, 0, 206, 0, 0, 0, 361, 393, 171,
	287, 394, 414, 189, 386, 288, 295, 203, 205, 204,
	183, 355, 392, 195, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 245, 0, 0, 0, 311,
	192, 0, 0, 0, 0, 406, 0, 221, 0, 408,
	0, 350, 349, 496, 252, 0, 0, 0, 332, 0,
	260, 174, 0, 417, 188, 265, 387, 0, 237, 301,
	212, 0, 312, 0, 168, 328, 283, 285, 282, 286,
	242, 0, 0, 0, 486, 352, 391, 190, 368, 493,
	494, 495, 502, 503, 507, 508, 511, 277, 229, 233,
	246, 257, 0, 335, 369, 409, 0, 185, 339, 370,
	383, 344, 240, 372, 376, 373, 374, 371, 375, 340,
	341, 504, 177, 378, 401, 196, 351, 354, 416, 0,
	184, 179, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 241, 0, 399, 400,
	211, 418, 0, 0, 180, 0, 0, 298, 306, 297,
	0, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 232, 248, 322, 273, 323, 249, 293, 292, 294,
	275, 0, 0, 175, 0, 366, 0, 0, 377, 193,
	0, 0, 390, 0, 329, 194, 239, 230, 321, 296,
	186, 251, 364, 264, 272, 0, 0, 310, 338, 200,
	405, 363, 226, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 176, 187, 199, 218, 216, 231, 261, 284,
	289, 316, 353, 358, 380, 381, 382, 384, 220, 0,
	224, 198, 333, 197, 274, 254, 317, 388, 389, 326,
	213, 0, 170, 181, 268, 0, 331, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	217, 0, 0, 0, 182, 191, 202, 215, 228, 235,
	247, 250, 255, 256, 258, 262, 276, 278, 279, 280,
	281, 299, 300, 304, 305, 308, 309, 313, 314, 315,
	319, 320, 327, 500, 334, 343, 345, 346, 347, 348,
	356, 357, 359, 360, 367, 397, 398, 412, 413, 385,
	0, 167, 0, 0, 173, 0, 0, 0, 0, 0,
	307, 172, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 222, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 410, 365, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 325,
	243, 1266, 1265, 1275, 1276, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1267, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 166, 0, 0, 0, 302,
	0, 0, 0, 169, 269, 0, 0, 0, 210, 0,
	337, 0, 403, 0, 238, 0, 336, 271, 396, 0,
	0, 402, 0, 379, 411, 415, 234, 0, 201, 362,
	225, 219, 0, 0, 0, 244, 324, 214, 263, 0,
	0, 0, 206, 0, 0, 0, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 245, 0, 0, 0, 311, 192,
	0, 0, 0, 0, 406, 0, 221, 0, 408, 0,
	350, 349, 0, 252, 0, 0, 0, 332, 0, 260,
	174, 0, 417, 188, 265, 387, 0, 237, 301, 212,
	0, 312, 0, 168, 328, 283, 285, 282, 286, 242,
	0, 0, 0, 330, 352, 391, 190, 368, 0, 0,
	0, 0, 342, 0, 0, 0, 277, 229, 233, 246,
	257, 0, 335, 369, 409, 0, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 0, 184,
	179, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 241, 0, 399, 400, 211,
	418, 0, 0, 180, 0, 0, 298, 306, 297, 0,
	395, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	0, 0, 175, 0, 366, 0, 0, 377, 193, 0,
	0, 390, 0, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 0, 0, 310, 338, 200, 405,
	363, 226, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	0, 170, 181, 268, 0, 331, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 217,
	0, 0, 0, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 0, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 385, 0,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 307,
	172, 0, 0, 0, 2413, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 222, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 410, 365, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2415, 2417, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 2411, 0, 0, 0, 325, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 259, 0, 0, 2416, 0, 0, 0,
	0, 0, 267, 0, 166, 0, 0, 0, 302, 0,
	0, 0, 169, 269, 0, 0, 0, 210, 0, 337,
	0, 403, 0, 238, 0, 336, 271, 396, 0, 0,
	402, 0, 379, 411, 415, 234, 0, 201, 362, 225,
	219, 0, 0, 0, 244, 324, 214, 263, 0, 0,
	0, 206, 0, 0, 0, 361, 393, 171, 287, 394,
	414, 189, 386, 288, 295, 203, 205, 204, 183, 355,
	392, 195, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 245, 0, 0, 0, 311, 192, 0,
	0, 0, 0, 406, 0, 221, 0, 408, 0, 350,
	349, 0, 252, 0, 0, 0, 332, 0, 260, 174,
	0, 417, 188, 265, 387, 0, 237, 301, 212, 0,
	312, 0, 168, 328, 283, 285, 282, 286, 242, 0,
	0, 0, 330, 352, 391, 190, 368, 0, 0, 0,
	0, 342, 0, 0, 0, 277, 229, 233, 246, 257,
	0, 335, 369, 409, 0, 185, 339, 370, 383, 344,
	240, 372, 376, 373, 374, 371, 375, 340, 341, 0,
	177, 378, 401, 196, 351, 354, 416, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 241, 0, 399, 400, 211, 418,
	0, 0, 180, 0, 0, 298, 306, 297, 0, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 232,
	248, 322, 273, 323, 249, 293, 292, 294, 275, 0,
	0, 175, 0, 366, 0, 0, 377, 193, 0, 0,
	390, 0, 329, 194, 239, 230, 321, 296, 186, 251,
	364, 264, 272, 0, 0, 310, 338, 200, 405, 363,
	226, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 142,
	0, 0, 0, 143, 0, 0, 144, 145, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	176, 187, 199, 218, 216, 231, 261, 284, 289, 316,
	353, 358, 380, 381, 382, 384, 220, 0, 224, 198,
	333, 197, 274, 254, 317, 388, 389, 326, 213, 0,
	170, 181, 268, 0, 331, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 247, 250,
	255, 256, 258, 262, 276, 278, 279, 280, 281, 299,
	300, 304, 305, 308, 309, 313, 314, 315, 319, 320,
	327, 0, 334, 343, 345, 346, 347, 348, 356, 357,
	359, 360, 367, 397, 398, 412, 413, 385, 0, 167,
	0, 0, 173, 0, 0, 0, 0, 0, 307, 172,
	0, 0, 0, 2413, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 222, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 410, 365, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2415, 2417, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 325, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 259, 0, 0, 2416, 0, 0, 0, 0,
	0, 267, 0, 166, 0, 0, 0, 302, 0, 0,
	0, 169, 269, 0, 0, 0, 210, 0, 337, 0,
	403, 0, 238, 0, 336, 271, 396, 0, 0, 402,
	0, 379, 411, 415, 234, 0, 201, 362, 225, 219,
	0, 0, 0, 244, 324, 214, 263, 0, 0, 0,
	206, 0, 0, 0, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 245, 0, 0, 0, 311, 192, 0, 0,
	0, 0, 406, 0, 221, 0, 408, 0, 350, 349,
	0, 252, 0, 0, 0, 332, 0, 260, 174, 0,
	417, 188, 265, 387, 0, 237, 301, 212, 0, 312,
	0, 168, 328, 283, 285, 282, 286, 242, 0, 0,
	0, 330, 352, 391, 190, 368, 0, 0, 0, 0,
	342, 0, 0, 0, 277, 229, 233, 246, 257, 0,
	335, 369, 409, 0, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 0, 184, 179, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 241, 0, 399, 400, 211, 418, 0,
	0, 180, 0, 0, 298, 306, 297, 0, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 0, 0,
	175, 0, 366, 0, 0, 377, 193, 0, 0, 390,
	0, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 0, 0, 310, 338, 200, 405, 363, 226,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 142, 0,
	0, 0, 143, 0, 0, 144, 145, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 0, 170,
	181, 268, 0, 331, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 217, 0, 0,
	0, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	0, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 385, 0, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 307, 172, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 222, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	410, 365, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 325, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 166, 0, 0, 0, 302, 0, 0, 0,
	169, 269, 0, 0, 0, 210, 0, 337, 0, 403,
	0, 238, 0, 336, 271, 396, 0, 0, 402, 0,
	379, 411, 415, 234, 0, 201, 362, 225, 219, 0,
	0, 0, 244, 324, 214, 263, 0, 0, 0, 206,
	0, 0, 0, 361, 393, 171, 287, 394, 414, 189,
	386, 288, 295, 203, 205, 204, 183, 355, 392, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 245, 0, 0, 0, 311, 192, 0, 0, 0,
	0, 406, 0, 221, 0, 408, 0, 350, 349, 0,
	252, 0, 0, 0, 332, 0, 260, 174, 0, 417,
	188, 265, 387, 0, 237, 301, 212, 0, 312, 0,
	168, 328, 283, 285, 282, 286, 242, 0, 0, 0,
	330, 352, 391, 190, 368, 0, 0, 0, 0, 342,
	0, 0, 0, 277, 229, 233, 246, 257, 0, 335,
	369, 409, 0, 185, 339, 370, 383, 344, 240, 372,
	376, 373, 374, 371, 375, 340, 341, 0, 177, 378,
	401, 196, 351, 354, 416, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 241, 0, 399, 400, 211, 418, 0, 0,
	180, 0, 0, 298, 306, 297, 0, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 232, 248, 322,
	273, 323, 249, 293, 292, 294, 275, 0, 0, 175,
	0, 366, 0, 0, 377, 193, 0, 0, 390, 0,
	329, 194, 239, 230, 321, 296, 186, 251, 364, 264,
	272, 0, 0, 310, 338, 200, 405, 363, 226, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 142, 0, 0,
	0, 143, 0, 0, 144, 145, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 176, 187,
	199, 218, 216, 231, 261, 284, 289, 316, 353, 358,
	380, 381, 382, 384, 220, 0, 224, 198, 333, 197,
	274, 254, 317, 388, 389, 326, 213, 0, 170, 181,
	268, 0, 331, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 217, 0, 0, 530,
	182, 191, 202, 215, 228, 235, 247, 250, 255, 256,
	258, 262, 276, 278, 279, 280, 281, 299, 300, 304,
	305, 308, 309, 313, 314, 315, 319, 320, 327, 0,
	334, 343, 345, 346, 347, 348, 356, 357, 359, 360,
	367, 397, 398, 412, 413, 385, 0, 167, 0, 0,
	173, 0, 0, 0, 0, 0, 307, 172, 0, 0,
	0, 3708, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 410,
	365, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 325, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 166, 0, 0, 0, 302, 0, 0, 0, 169,
	269, 0, 0, 0, 210, 0, 337, 0, 403, 0,
	238, 0, 336, 271, 396, 0, 0, 402, 0, 379,
	411, 415, 234, 0, 201, 362, 225, 219, 0, 0,
	0, 244, 324, 214, 263, 0, 0, 0, 206, 0,
	0, 0, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	245, 0, 0, 0, 311, 192, 0, 0, 0, 0,
	406, 0, 221, 0, 408, 0, 350, 349, 0, 252,
	0, 0, 0, 332, 0, 260, 174, 0, 417, 188,
	265, 387, 0, 237, 301, 212, 0, 312, 0, 168,
	328, 283, 285, 282, 286, 242, 0, 0, 0, 330,
	352, 391, 190, 368, 0, 0, 0, 0, 342, 0,
	0, 0, 277, 229, 233, 246, 257, 0, 335, 369,
	409, 0, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 241, 0, 399, 400, 211, 418, 0, 0, 180,
	0, 0, 298, 306, 297, 0, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 0, 0, 175, 0,
	366, 0, 0, 377, 193, 0, 0, 390, 0, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	0, 0, 310, 338, 200, 405, 363, 226, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 142, 0, 0, 0,
	143, 0, 0, 144, 145, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 0, 170, 181, 268,
	0, 331, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 0, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 385, 0, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 307, 172, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	2735, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 410, 365,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 325, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	166, 0, 0, 0, 302, 0, 0, 0, 169, 269,
	0, 0, 0, 210, 0, 337, 0, 403, 0, 238,
	0, 336, 271, 396, 0, 0, 402, 0, 379, 411,
	415, 234, 0, 201, 362, 225, 219, 0, 0, 0,
	244, 324, 214, 263, 0, 0, 0, 206, 0, 0,
	0, 361, 393, 171, 287, 394, 414, 189, 386, 288,
	295, 203, 205, 204, 183, 355, 392, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 245,
	0, 0, 0, 311, 192, 0, 0, 0, 0, 406,
	0, 221, 0, 408, 0, 350, 349, 0, 252, 0,
	0, 0, 332, 0, 260, 174, 0, 417, 188, 265,
	387, 0, 237, 301, 212, 0, 312, 0, 168, 328,
	283, 285, 282, 286, 242, 0, 0, 0, 330, 352,
	391, 190, 368, 0, 0, 0, 0, 342, 0, 0,
	0, 277, 229, 233, 246, 257, 0, 335, 369, 409,
	0, 185, 339, 370, 383, 344, 240, 372, 376, 373,
	374, 371, 375, 340, 341, 0, 177, 378, 401, 196,
	351, 354, 416, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	241, 0, 399, 400, 211, 418, 0, 0, 180, 0,
	0, 298, 306, 297, 0, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 232, 248, 322, 273, 323,
	249, 293, 292, 294, 275, 0, 0, 175, 0, 366,
	0, 0, 377, 193, 0, 0, 390, 0, 329, 194,
	239, 230, 321, 296, 186, 251, 364, 264, 272, 0,
	0, 310, 338, 200, 405, 363, 226, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 142, 0, 0, 0, 143,
	0, 0, 144, 145, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 176, 187, 199, 218,
	216, 231, 261, 284, 289, 316, 353, 358, 380, 381,
	382, 384, 220, 0, 224, 198, 333, 197, 274, 254,
	317, 388, 389, 326, 213, 0, 170, 181, 268, 0,
	331, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 247, 250, 255, 256, 258, 262,
	276, 278, 279, 280, 281, 299, 300, 304, 305, 308,
	309, 313, 314, 315, 319, 320, 327, 0, 334, 343,
	345, 346, 347, 348, 356, 357, 359, 360, 367, 397,
	398, 412, 413, 385, 0, 167, 0, 0, 173, 0,
	0, 0, 0, 0, 307, 172, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 222, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 410, 365, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 325, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 166,
	0, 0, 0, 302, 0, 0, 0, 169, 269, 0,
	0, 0, 210, 0, 337, 0, 403, 0, 238, 0,
	336, 271, 396, 0, 0, 402, 0, 379, 411, 415,
	234, 0, 201, 362, 225, 219, 0, 0, 0, 244,
	324, 214, 263, 0, 0, 0, 206, 0, 0, 0,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 245, 0,
	0, 0, 311, 192, 0, 0, 0, 0, 406, 0,
	221, 0, 408, 0, 350, 349, 0, 252, 0, 0,
	0, 332, 0, 260, 174, 0, 417, 188, 265, 387,
	0, 237, 301, 212, 0, 312, 0, 168, 328, 283,
	285, 282, 286, 242, 0, 0, 0, 330, 352, 391,
	190, 368, 0, 0, 0, 0, 342, 0, 0, 0,
	277, 229, 233, 246, 257, 0, 335, 369, 409, 0,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 0, 184, 179, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 241,
	0, 399, 400, 211, 418, 0, 0, 180, 0, 0,
	298, 306, 297, 0, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 0, 0, 175, 0, 366, 0,
	0, 377, 193, 0, 0, 390, 0, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 0, 0,
	310, 338, 200, 405, 363, 226, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 0, 207, 142, 0, 223, 0, 143, 0,
	0, 144, 145, 0, 222, 209, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	410, 365, 290, 0, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 1005, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 0, 170, 181, 268, 0, 331,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 325, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 217, 0, 0, 0, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 0, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 0, 0, 167, 0, 291, 173, 0, 0,
	0, 259, 0, 0, 172, 0, 0, 0, 0, 0,
	267, 0, 166, 0, 0, 0, 302, 0, 0, 0,
	169, 269, 0, 0, 0, 210, 0, 337, 0, 403,
	0, 238, 0, 336, 271, 396, 0, 0, 402, 0,
	379, 411, 415, 234, 0, 201, 362, 225, 219, 0,
	0, 0, 244, 324, 214, 263, 0, 0, 0, 206,
	0, 0, 0, 361, 393, 171, 287, 394, 414, 189,
	386, 288, 295, 203, 205, 204, 183, 355, 392, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 245, 0, 0, 0, 311, 192, 0, 0, 0,
	0, 406, 0, 221, 0, 408, 0, 350, 349, 0,
	252, 0, 0, 0, 332, 0, 260, 174, 0, 417,
	188, 265, 387, 0, 237, 301, 212, 0, 312, 0,
	168, 328, 283, 285, 282, 286, 242, 0, 0, 0,
	330, 352, 391, 190, 368, 0, 0, 0, 0, 342,
	0, 0, 0, 277, 229, 233, 246, 257, 0, 335,
	369, 409, 0, 185, 339, 370, 383, 344, 240, 372,
	376, 373, 374, 371, 375, 340, 341, 0, 177, 378,
	401, 196, 351, 354, 416, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 241, 0, 399, 400, 211, 418, 0, 0,
	180, 0, 0, 298, 306, 297, 0, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 232, 248, 322,
	273, 323, 249, 293, 292, 294, 275, 0, 0, 175,
	0, 366, 0, 0, 377, 193, 0, 0, 390, 0,
	329, 194, 239, 230, 321, 296, 186, 251, 364, 264,
	272, 0, 0, 310, 338, 200, 405, 363, 226, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 142, 0, 0,
	0, 143, 0, 0, 144, 145, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 176, 187,
	199, 218, 216, 231, 261, 284, 289, 316, 353, 358,
	380, 381, 382, 384, 220, 0, 224, 198, 333, 197,
	274, 254, 317, 388, 389, 326, 213, 0, 170, 181,
	268, 0, 331, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 247, 250, 255, 256,
	258, 262, 276, 278, 279, 280, 281, 299, 300, 304,
	305, 308, 309, 313, 314, 315, 319, 320, 327, 0,
	334, 343, 345, 346, 347, 348, 356, 357, 359, 360,
	367, 397, 398, 412, 413, 385, 0, 167, 0, 0,
	173, 0, 0, 0, 0, 0, 307, 172, 0, 3657,
	0, 0, 0, 0, 0, 223, 3655, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 410,
	365, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 325, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 166, 0, 0, 0, 302, 0, 0, 0, 169,
	269, 0, 0, 0, 210, 0, 337, 0, 403, 0,
	238, 0, 336, 271, 396, 0, 0, 402, 0, 379,
	411, 415, 234, 0, 201, 362, 225, 219, 0, 0,
	0, 244, 324, 214, 263, 0, 0, 0, 206, 0,
	0, 0, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	245, 0, 0, 0, 311, 192, 0, 0, 0, 0,
	406, 0, 221, 0, 408, 0, 350, 349, 0, 252,
	0, 3656, 0, 332, 0, 260, 174, 0, 417, 188,
	265, 387, 0, 237, 301, 212, 0, 312, 0, 168,
	328, 283, 285, 282, 286, 242, 0, 0, 0, 330,
	352, 391, 190, 368, 0, 0, 0, 0, 342, 0,
	0, 0, 277, 229, 233, 246, 257, 0, 335, 369,
	409, 0, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 241, 0, 399, 400, 211, 418, 0, 0, 180,
	0, 0, 298, 306, 297, 0, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 0, 0, 175, 0,
	366, 0, 0, 377, 193, 0, 0, 390, 0, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	0, 0, 310, 338, 200, 405, 363, 226, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 0, 207, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 222, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 410, 365, 290, 0, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 1005, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 0, 170, 181, 268,
	0, 331, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2538, 404, 0, 0, 0, 0, 325, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 0, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 0, 0, 167, 0, 291, 173,
	0, 0, 0, 259, 0, 0, 172, 0, 0, 0,
	0, 0, 267, 0, 166, 0, 0, 0, 302, 0,
	0, 0, 169, 269, 0, 0, 0, 210, 0, 337,
	0, 403, 0, 238, 0, 336, 271, 396, 0, 0,
	402, 0, 379, 411, 415, 234, 0, 201, 362, 225,
	219, 0, 0, 0, 244, 324, 214, 263, 2539, 2540,
	0, 206, 0, 0, 0, 361, 393, 171, 287, 394,
	414, 189, 386, 288, 295, 203, 205, 204, 183, 355,
	392, 195, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 245, 0, 0, 0, 311, 192, 0,
	0, 0, 0, 406, 0, 221, 0, 408, 0, 350,
	349, 0, 252, 0, 0, 0, 332, 0, 260, 174,
	0, 417, 188, 265, 387, 0, 237, 301, 212, 0,
	312, 0, 168, 328, 283, 285, 282, 286, 242, 0,
	0, 0, 330, 352, 391, 190, 368, 0, 0, 0,
	0, 342, 0, 0, 0, 277, 229, 233, 246, 257,
	0, 335, 369, 409, 0, 185, 339, 370, 383, 344,
	240, 372, 376, 373, 374, 371, 375, 340, 341, 0,
	177, 378, 401, 196, 351, 354, 416, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 241, 0, 399, 400, 211, 418,
	0, 0, 180, 0, 0, 298, 306, 297, 0, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 232,
	248, 322, 273, 323, 249, 293, 292, 294, 275, 0,
	0, 175, 0, 366, 0, 0, 377, 193, 0, 0,
	390, 0, 329, 194, 239, 230, 321, 296, 186, 251,
	364, 264, 272, 0, 0, 310, 338, 200, 405, 363,
	226, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	176, 187, 199, 218, 216, 231, 261, 284, 289, 316,
	353, 358, 380, 381, 382, 384, 220, 0, 224, 198,
	333, 197, 274, 254, 317, 388, 389, 326, 213, 0,
	170, 181, 268, 0, 331, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 247, 250,
	255, 256, 258, 262, 276, 278, 279, 280, 281, 299,
	300, 304, 305, 308, 309, 313, 314, 315, 319, 320,
	327, 0, 334, 343, 345, 346, 347, 348, 356, 357,
	359, 360, 367, 397, 398, 412, 413, 385, 0, 167,
	0, 0, 173, 0, 0, 0, 0, 0, 307, 172,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 222, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 410, 365, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 325, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 166, 0, 0, 0, 302, 0, 0,
	0, 169, 269, 0, 0, 0, 210, 0, 337, 0,
	403, 0, 238, 0, 336, 271, 396, 0, 0, 402,
	0, 379, 411, 415, 234, 0, 201, 362, 225, 219,
	0, 0, 0, 244, 324, 214, 263, 0, 0, 0,
	206, 0, 0, 0, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 245, 0, 0, 0, 311, 192, 0, 0,
	0, 0, 406, 0, 221, 0, 408, 0, 350, 349,
	0, 252, 0, 0, 0, 332, 0, 260, 174, 0,
	417, 188, 265, 387, 0, 237, 301, 212, 0, 312,
	0, 168, 328, 283, 285, 282, 286, 242, 0, 0,
	0, 330, 352, 391, 190, 368, 0, 0, 0, 0,
	342, 0, 0, 0, 277, 229, 233, 246, 257, 0,
	335, 369, 409, 0, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 0, 184, 179, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 241, 0, 399, 400, 211, 418, 0,
	0, 180, 0, 0, 298, 306, 297, 0, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 0, 0,
	175, 0, 366, 0, 0, 377, 193, 0, 0, 390,
	0, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 0, 0, 310, 338, 200, 405, 363, 226,
	0, 303, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 0, 170,
	181, 268, 0, 331, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 217, 0, 0,
	0, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	0, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 385, 0, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 307, 172, 0,
	0, 0, 0, 0, 0, 0, 223, 1397, 0, 0,
	0, 0, 0, 0, 222, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	410, 365, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1005, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 325, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 166, 0, 0, 0, 302, 0, 0, 0,
	169, 269, 0, 0, 0, 210, 0, 337, 0, 403,
	0, 238, 0, 336, 271, 396, 0, 0, 402, 0,
	379, 411, 415, 234, 0, 201, 362, 225, 219, 0,
	0, 0, 244, 324, 214, 263, 0, 0, 0, 206,
	0, 0, 0, 361, 393, 171, 287, 394, 414, 189,
	386, 288, 295, 203, 205, 204, 183, 355, 392, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 245, 0, 0, 0, 311, 192, 0, 0, 0,
	0, 406, 0, 221, 0, 408, 0, 350, 349, 0,
	252, 0, 0, 0, 332, 0, 260, 174, 0, 417,
	188, 265, 387, 0, 237, 301, 212, 0, 312, 0,
	168, 328, 283, 285, 282, 286, 242, 0, 0, 0,
	330, 352, 391, 190, 368, 0, 0, 0, 0, 342,
	0, 0, 0, 277, 229, 233, 246, 257, 0, 335,
	369, 409, 0, 185, 339, 370, 383, 344, 240, 372,
	376, 373, 374, 371, 375, 340, 341, 0, 177, 378,
	401, 196, 351, 354, 416, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 241, 0, 399, 400, 211, 418, 0, 0,
	180, 0, 0, 298, 306, 297, 0, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 232, 248, 322,
	273, 323, 249, 293, 292, 294, 275, 0, 0, 175,
	0, 366, 0, 0, 377, 193, 0, 0, 390, 0,
	329, 194, 239, 230, 321, 296, 186, 251, 364, 264,
	272, 0, 0, 310, 338, 200, 405, 363, 226, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 176, 187,
	199, 218, 216, 231, 261, 284, 289, 316, 353, 358,
	380, 381, 382, 384, 220, 0, 224, 198, 333, 197,
	274, 254, 317, 388, 389, 326, 213, 0, 170, 181,
	268, 0, 331, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 247, 250, 255, 256,
	258, 262, 276, 278, 279, 280, 281, 299, 300, 304,
	305, 308, 309, 313, 314, 315, 319, 320, 327, 0,
	334, 343, 345, 346, 347, 348, 356, 357, 359, 360,
	367, 397, 398, 412, 413, 385, 0, 167, 0, 0,
	173, 0, 0, 0, 0, 0, 307, 172, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 410,
	365, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 325, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 166, 0, 0, 0, 302, 0, 0, 0, 169,
	269, 0, 0, 0, 210, 0, 337, 0, 403, 0,
	238, 0, 336, 271, 396, 0, 0, 402, 0, 379,
	411, 415, 234, 0, 201, 362, 225, 219, 0, 0,
	0, 244, 324, 214, 263, 0, 0, 0, 206, 0,
	0, 0, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	245, 0, 0, 0, 311, 192, 0, 0, 0, 0,
	406, 0, 221, 0, 408, 0, 350, 349, 0, 252,
	0, 0, 0, 332, 0, 260, 174, 0, 417, 188,
	265, 387, 0, 237, 301, 212, 0, 312, 0, 168,
	328, 283, 285, 282, 286, 242, 0, 0, 0, 330,
	352, 391, 190, 368, 0, 0, 0, 0, 342, 0,
	0, 0, 277, 229, 233, 246, 257, 0, 335, 369,
	409, 0, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 241, 0, 399, 400, 211, 418, 0, 0, 180,
	0, 0, 298, 306, 297, 0, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 0, 0, 175, 0,
	366, 0, 0, 377, 193, 0, 0, 390, 0, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	0, 0, 310, 338, 200, 405, 363, 226, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 0, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 0, 170, 181, 268,
	0, 331, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 0, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 385, 0, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 307, 172, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 410, 365,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2901, 0, 0, 0, 0,
	2903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 325, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	166, 0, 0, 0, 302, 0, 0, 0, 169, 269,
	0, 0, 0, 210, 0, 337, 0, 403, 0, 238,
	0, 336, 271, 396, 0, 0, 402, 0, 379, 411,
	415, 234, 0, 201, 362, 225, 219, 0, 0, 0,
	244, 324, 214, 263, 0, 0, 0, 206, 0, 0,
	0, 361, 393, 171, 287, 394, 414, 189, 386, 288,
	295, 203, 205, 204, 183, 355, 392, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 245,
	0, 0, 0, 311, 192, 0, 0, 0, 0, 406,
	0, 221, 0, 408, 0, 350, 349, 0, 252, 0,
	0, 0, 332, 0, 260, 174, 0, 417, 188, 265,
	387, 0, 237, 301, 212, 0, 312, 0, 168, 328,
	283, 285, 282, 286, 242, 0, 0, 0, 330, 352,
	391, 190, 368, 0, 0, 0, 0, 342, 0, 0,
	0, 277, 229, 233, 246, 257, 0, 335, 369, 409,
	0, 185, 339, 370, 383, 344, 240, 372, 376, 373,
	374, 371, 375, 340, 341, 0, 177, 378, 401, 196,
	351, 354, 416, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	241, 0, 399, 400, 211, 418, 0, 0, 180, 0,
	0, 298, 306, 297, 0, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 232, 248, 322, 273, 323,
	249, 293, 292, 294, 275, 0, 0, 175, 0, 366,
	0, 0, 377, 193, 0, 0, 390, 0, 329, 194,
	239, 230, 321, 296, 186, 251, 364, 264, 272, 0,
	0, 310, 338, 200, 405, 363, 226, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 0, 0, 207, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 222, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 410, 365, 290, 0, 318, 176, 187, 199, 218,
	216, 231, 261, 284, 289, 316, 353, 358, 380, 381,
	382, 384, 220, 1005, 224, 198, 333, 197, 274, 254,
	317, 388, 389, 326, 213, 0, 170, 181, 268, 0,
	331, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 325, 243, 0,
	0, 0, 0, 0, 0, 2876, 0, 0, 0, 0,
	0, 0, 0, 407, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 247, 250, 255, 256, 258, 262,
	276, 278, 279, 280, 281, 299, 300, 304, 305, 308,
	309, 313, 314, 315, 319, 320, 327, 0, 334, 343,
	345, 346, 347, 348, 356, 357, 359, 360, 367, 397,
	398, 412, 413, 0, 0, 167, 0, 291, 173, 0,
	0, 0, 259, 0, 0, 172, 0, 0, 0, 0,
	0, 267, 0, 166, 0, 0, 0, 302, 0, 0,
	0, 169, 269, 0, 0, 0, 210, 0, 337, 0,
	403, 0, 238, 0, 336, 271, 396, 0, 0, 402,
	0, 379, 411, 415, 234, 0, 201, 362, 225, 219,
	0, 0, 0, 244, 324, 214, 263, 0, 0, 0,
	206, 0, 0, 0, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 245, 0, 0, 0, 311, 192, 0, 0,
	0, 0, 406, 0, 221, 0, 408, 0, 350, 349,
	0, 252, 0, 0, 0, 332, 0, 260, 174, 0,
	417, 188, 265, 387, 0, 237, 301, 212, 0, 312,
	0, 168, 328, 283, 285, 282, 286, 242, 0, 0,
	0, 330, 352, 391, 190, 368, 0, 0, 0, 0,
	342, 0, 0, 0, 277, 229, 233, 246, 257, 0,
	335, 369, 409, 0, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 0, 184, 179, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 241, 0, 399, 400, 211, 418, 0,
	0, 180, 0, 0, 298, 306, 297, 0, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 0, 0,
	175, 0, 366, 0, 0, 377, 193, 0, 0, 390,
	0, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 0, 0, 310, 338, 200, 405, 363, 226,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 0, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 0, 170,
	181, 268, 0, 331, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 217, 0, 0,
	0, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	0, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 385, 0, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 307, 172, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 222, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	410, 365, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 325, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 166, 0, 0, 0, 302, 0, 0, 0,
	169, 269, 0, 0, 0, 210, 0, 337, 0, 403,
	0, 238, 0, 336, 271, 396, 0, 0, 402, 0,
	379, 411, 415, 234, 0, 201, 362, 225, 219, 0,
	0, 0, 244, 324, 214, 263, 0, 0, 0, 206,
	0, 0, 0, 361, 393, 171, 287, 394, 414, 189,
	386, 288, 295, 203, 205, 204, 183, 355, 392, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 245, 0, 0, 0, 311, 192, 0, 0, 0,
	0, 406, 0, 221, 0, 408, 0, 350, 349, 0,
	252, 0, 0, 0, 332, 0, 260, 174, 0, 417,
	188, 265, 387, 0, 237, 301, 212, 0, 312, 0,
	168, 328, 283, 285, 282, 286, 242, 0, 0, 0,
	330, 352, 391, 190, 368, 0, 0, 0, 0, 342,
	0, 0, 0, 277, 229, 233, 246, 257, 0, 335,
	369, 409, 0, 185, 339, 370, 383, 344, 240, 372,
	376, 373, 374, 371, 375, 340, 341, 0, 177, 378,
	401, 196, 351, 354, 416, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 241, 0, 399, 400, 211, 418, 0, 0,
	180, 0, 0, 298, 306, 297, 0, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 232, 248, 322,
	273, 323, 249, 293, 292, 294, 275, 0, 0, 175,
	0, 366, 0, 0, 377, 193, 0, 0, 390, 0,
	329, 194, 239, 230, 321, 296, 186, 251, 364, 264,
	272, 0, 0, 310, 338, 200, 405, 363, 226, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 0, 207, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 222, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 410, 365, 290, 0, 318, 176, 187,
	199, 218, 216, 231, 261, 284, 289, 316, 353, 358,
	380, 381, 382, 384, 220, 1005, 224, 198, 333, 197,
	274, 254, 317, 388, 389, 326, 213, 0, 170, 181,
	268, 0, 331, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 325,
	243, 0, 0, 0, 0, 0, 0, 2238, 0, 0,
	0, 0, 0, 0, 0, 407, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 247, 250, 255, 256,
	258, 262, 276, 278, 279, 280, 281, 299, 300, 304,
	305, 308, 309, 313, 314, 315, 319, 320, 327, 0,
	334, 343, 345, 346, 347, 348, 356, 357, 359, 360,
	367, 397, 398, 412, 413, 0, 0, 167, 0, 291,
	173, 0, 0, 0, 259, 0, 0, 172, 0, 0,
	0, 0, 0, 267, 0, 166, 0, 0, 0, 302,
	0, 0, 0, 169, 269, 0, 0, 0, 210, 0,
	337, 0, 403, 0, 238, 0, 336, 271, 396, 0,
	0, 402, 0, 379, 411, 415, 234, 0, 201, 362,
	225, 219, 0, 0, 0, 244, 324, 214, 263, 0,
	0, 0, 206, 0, 0, 0, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 245, 0, 0, 0, 311, 192,
	0, 0, 0, 0, 406, 0, 221, 0, 408, 0,
	350, 349, 0, 252, 0, 0, 0, 332, 0, 260,
	174, 0, 417, 188, 265, 387, 0, 237, 301, 212,
	0, 312, 0, 168, 328, 283, 285, 282, 286, 242,
	0, 0, 0, 330, 352, 391, 190, 368, 0, 0,
	0, 0, 342, 0, 0, 0, 277, 229, 233, 246,
	257, 0, 335, 369, 409, 0, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 0, 184,
	179, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 241, 0, 399, 400, 211,
	418, 0, 0, 180, 0, 0, 298, 306, 297, 0,
	395, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	0, 0, 175, 0, 366, 0, 0, 377, 193, 0,
	0, 390, 0, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 0, 0, 310, 338, 200, 405,
	363, 226, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 0, 207,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 2291,
	2292, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 410, 365, 290, 0,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 1005, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	0, 170, 181, 268, 0, 331, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 325, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 217,
	0, 0, 0, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 0, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 0, 0,
	167, 0, 291, 173, 0, 0, 0, 259, 0, 0,
	172, 0, 0, 0, 0, 0, 267, 0, 166, 0,
	0, 0, 302, 0, 0, 0, 169, 269, 0, 0,
	0, 210, 0, 337, 0, 403, 0, 238, 0, 336,
	271, 396, 0, 0, 402, 0, 379, 411, 415, 234,
	0, 201, 362, 225, 219, 0, 0, 0, 244, 324,
	214, 263, 0, 0, 0, 206, 0, 0, 0, 361,
	393, 171, 287, 394, 414, 189, 386, 288, 295, 203,
	205, 204, 183, 355, 392, 195, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 245, 0, 0,
	0, 311, 192, 0, 0, 0, 0, 406, 0, 221,
	0, 408, 0, 350, 349, 0, 252, 0, 0, 0,
	332, 0, 260, 174, 0, 417, 188, 265, 387, 0,
	237, 301, 212, 0, 312, 0, 168, 328, 283, 285,
	282, 286, 242, 0, 0, 0, 330, 352, 391, 190,
	368, 0, 0, 0, 0, 342, 0, 0, 0, 277,
	229, 233, 246, 257, 0, 335, 369, 409, 0, 185,
	339, 370, 383, 344, 240, 372, 376, 373, 374, 371,
	375, 340, 341, 0, 177, 378, 401, 196, 351, 354,
	416, 0, 184, 179, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 241, 0,
	399, 400, 211, 418, 0, 0, 180, 0, 0, 298,
	306, 297, 0, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 232, 248, 322, 273, 323, 249, 293,
	292, 294, 275, 0, 0, 175, 0, 366, 0, 0,
	377, 193, 0, 0, 390, 0, 329, 194, 239, 230,
	321, 296, 186, 251, 364, 264, 272, 0, 0, 310,
	338, 200, 405, 363, 226, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	0, 0, 207, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 410,
	365, 290, 0, 318, 176, 187, 199, 218, 216, 231,
	261, 284, 289, 316, 353, 358, 380, 381, 382, 384,
	220, 1005, 224, 198, 333, 197, 274, 254, 317, 388,
	389, 326, 213, 0, 170, 181, 268, 0, 331, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 325, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 217, 0, 0, 0, 182, 191, 202, 215,
	228, 235, 247, 250, 255, 256, 258, 262, 276, 278,
	279, 280, 281, 299, 300, 304, 305, 308, 309, 313,
	314, 315, 319, 320, 327, 0, 334, 343, 345, 346,
	347, 348, 356, 357, 359, 360, 367, 397, 398, 412,
	413, 0, 0, 167, 0, 291, 173, 0, 0, 0,
	259, 0, 0, 172, 0, 0, 0, 0, 0, 267,
	0, 166, 0, 0, 0, 302, 0, 0, 0, 169,
	269, 0, 0, 0, 210, 0, 337, 0, 403, 0,
	238, 0, 336, 271, 396, 0, 0, 402, 0, 379,
	411, 415, 234, 0, 201, 362, 225, 219, 0, 0,
	0, 244, 324, 214, 263, 0, 0, 0, 206, 0,
	0, 0, 361, 393, 171, 287, 394, 414, 189, 386,
	288, 295, 203, 205, 204, 183, 355, 392, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	245, 0, 0, 0, 311, 192, 0, 0, 0, 0,
	406, 0, 221, 0, 408, 0, 350, 349, 0, 252,
	0, 0, 0, 332, 0, 260, 174, 0, 417, 188,
	265, 387, 0, 237, 301, 212, 0, 312, 0, 168,
	328, 283, 285, 282, 286, 242, 0, 0, 0, 330,
	352, 391, 190, 368, 0, 0, 0, 0, 342, 0,
	0, 0, 277, 229, 233, 246, 257, 0, 335, 369,
	409, 0, 185, 339, 370, 383, 344, 240, 372, 376,
	373, 374, 371, 375, 340, 341, 0, 177, 378, 401,
	196, 351, 354, 416, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 241, 0, 399, 400, 211, 418, 0, 0, 180,
	0, 0, 298, 306, 297, 0, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 232, 248, 322, 273,
	323, 249, 293, 292, 294, 275, 0, 0, 175, 0,
	366, 0, 0, 377, 193, 0, 0, 390, 0, 329,
	194, 239, 230, 321, 296, 186, 251, 364, 264, 272,
	0, 0, 310, 338, 200, 405, 363, 226, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 0, 207, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 222, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 410, 365, 290, 0, 318, 176, 187, 199,
	218, 216, 231, 261, 284, 289, 316, 353, 358, 380,
	381, 382, 384, 220, 2903, 224, 198, 333, 197, 274,
	254, 317, 388, 389, 326, 213, 0, 170, 181, 268,
	0, 331, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 325, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 247, 250, 255, 256, 258,
	262, 276, 278, 279, 280, 281, 299, 300, 304, 305,
	308, 309, 313, 314, 315, 319, 320, 327, 0, 334,
	343, 345, 346, 347, 348, 356, 357, 359, 360, 367,
	397, 398, 412, 413, 0, 0, 167, 0, 291, 173,
	0, 0, 0, 259, 0, 0, 172, 0, 0, 0,
	0, 0, 267, 0, 166, 0, 0, 0, 302, 0,
	0, 0, 169, 269, 0, 0, 0, 210, 0, 337,
	0, 403, 0, 238, 0, 336, 271, 396, 0, 0,
	402, 0, 379, 411, 415, 234, 0, 201, 362, 225,
	219, 0, 0, 0, 244, 324, 214, 263, 0, 0,
	0, 206, 0, 0, 0, 361, 393, 171, 287, 394,
	414, 189, 386, 288, 295, 203, 205, 204, 183, 355,
	392, 195, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 245, 0, 0, 0, 311, 192, 0,
	0, 0, 0, 406, 0, 221, 0, 408, 0, 350,
	349, 0, 252, 0, 0, 0, 332, 0, 260, 174,
	0, 417, 188, 265, 387, 0, 237, 301, 212, 0,
	312, 0, 168, 328, 283, 285, 282, 286, 242, 0,
	0, 0, 330, 352, 391, 190, 368, 0, 0, 0,
	0, 342, 0, 0, 0, 277, 229, 233, 246, 257,
	0, 335, 369, 409, 0, 185, 339, 370, 383, 344,
	240, 372, 376, 373, 374, 371, 375, 340, 341, 0,
	177, 378, 401, 196, 351, 354, 416, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 241, 0, 399, 400, 211, 418,
	0, 0, 180, 0, 0, 298, 306, 297, 0, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 232,
	248, 322, 273, 323, 249, 293, 292, 294, 275, 0,
	0, 175, 0, 366, 0, 0, 377, 193, 0, 0,
	390, 0, 329, 194, 239, 230, 321, 296, 186, 251,
	364, 264, 272, 0, 0, 310, 338, 200, 405, 363,
	226, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 0, 0, 207, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 222,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 410, 365, 290, 0, 318,
	176, 187, 199, 218, 216, 231, 261, 284, 289, 316,
	353, 358, 380, 381, 382, 384, 220, 1796, 224, 198,
	333, 197, 274, 254, 317, 388, 389, 326, 213, 0,
	170, 181, 268, 0, 331, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 325, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 247, 250,
	255, 256, 258, 262, 276, 278, 279, 280, 281, 299,
	300, 304, 305, 308, 309, 313, 314, 315, 319, 320,
	327, 0, 334, 343, 345, 346, 347, 348, 356, 357,
	359, 360, 367, 397, 398, 412, 413, 0, 0, 167,
	0, 291, 173, 0, 0, 0, 259, 0, 0, 172,
	0, 0, 0, 0, 0, 267, 0, 166, 0, 0,
	0, 302, 0, 0, 0, 169, 269, 0, 0, 0,
	210, 0, 337, 0, 403, 0, 238, 0, 336, 271,
	396, 0, 0, 402, 0, 379, 411, 415, 234, 0,
	201, 362, 225, 219, 0, 0, 0, 244, 324, 214,
	263, 0, 0, 0, 206, 0, 0, 0, 361, 393,
	171, 287, 394, 414, 189, 386, 288, 295, 203, 205,
	204, 183, 355, 392, 195, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 245, 0, 0, 0,
	311, 192, 0, 0, 0, 0, 406, 0, 221, 0,
	408, 0, 350, 349, 0, 252, 0, 0, 0, 332,
	0, 260, 174, 0, 417, 188, 265, 387, 0, 237,
	301, 212, 0, 312, 0, 168, 328, 283, 285, 282,
	286, 242, 0, 0, 0, 330, 352, 391, 190, 368,
	0, 0, 0, 0, 342, 0, 0, 0, 277, 229,
	233, 246, 257, 0, 335, 369, 409, 0, 185, 339,
	370, 383, 344, 240, 372, 376, 373, 374, 371, 375,
	340, 341, 0, 177, 378, 401, 196, 351, 354, 416,
	0, 184, 179, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 241, 0, 399,
	400, 211, 418, 0, 0, 180, 0, 0, 298, 306,
	297, 0, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 232, 248, 322, 273, 323, 249, 293, 292,
	294, 275, 0, 0, 175, 0, 366, 0, 0, 377,
	193, 0, 0, 390, 0, 329, 194, 239, 230, 321,
	296, 186, 251, 364, 264, 272, 0, 0, 310, 338,
	200, 405, 363, 226, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 0,
	0, 207, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 410, 365,
	290, 0, 318, 176, 187, 199, 218, 216, 231, 261,
	284, 289, 316, 353, 358, 380, 381, 382, 384, 220,
	140, 224, 198, 333, 197, 274, 254, 317, 388, 389,
	326, 213, 0, 170, 181, 268, 0, 331, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 325, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 217, 0, 0, 0, 182, 191, 202, 215, 228,
	235, 247, 250, 255, 256, 258, 262, 276, 278, 279,
	280, 281, 299, 300, 304, 305, 308, 309, 313, 314,
	315, 319, 320, 327, 0, 334, 343, 345, 346, 347,
	348, 356, 357, 359, 360, 367, 397, 398, 412, 413,
	0, 0, 167, 0, 291, 173, 0, 0, 0, 259,
	0, 0, 172, 0, 0, 0, 0, 0, 267, 0,
	166, 0, 0, 0, 302, 0, 0, 0, 169, 269,
	0, 0, 0, 210, 0, 337, 0, 403, 0, 238,
	0, 336, 271, 396, 0, 0, 402, 0, 379, 411,
	415, 234, 0, 201, 362, 225, 219, 0, 0, 0,
	244, 324, 214, 263, 0, 0, 0, 206, 0, 0,
	0, 361, 393, 171, 287, 394, 414, 189, 386, 288,
	295, 203, 205, 204, 183, 355, 392, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 245,
	0, 0, 0, 311, 192, 0, 0, 0, 0, 406,
	0, 221, 0, 408, 0, 350, 349, 0, 252, 0,
	0, 0, 332, 0, 260, 174, 0, 417, 188, 265,
	387, 0, 237, 301, 212, 0, 312, 0, 168, 328,
	283, 285, 282, 286, 242, 0, 0, 0, 330, 352,
	391, 190, 368, 0, 0, 0, 0, 342, 0, 0,
	0, 277, 229, 233, 246, 257, 0, 335, 369, 409,
	0, 185, 339, 370, 383, 344, 240, 372, 376, 373,
	374, 371, 375, 340, 341, 0, 177, 378, 401, 196,
	351, 354, 416, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	241, 0, 399, 400, 211, 418, 0, 0, 180, 0,
	0, 298, 306, 297, 0, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 232, 248, 322, 273, 323,
	249, 293, 292, 294, 275, 0, 0, 175, 0, 366,
	0, 0, 377, 193, 0, 0, 390, 0, 329, 194,
	239, 230, 321, 296, 186, 251, 364, 264, 272, 0,
	0, 310, 338, 200, 405, 363, 226, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 0, 0, 207, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 222, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 410, 365, 290, 0, 318, 176, 187, 199, 218,
	216, 231, 261, 284, 289, 316, 353, 358, 380, 381,
	382, 384, 220, 473, 224, 198, 333, 197, 274, 254,
	317, 388, 389, 326, 213, 0, 170, 181, 268, 0,
	331, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 325, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 247, 250, 255, 256, 258, 262,
	276, 278, 279, 280, 281, 299, 300, 304, 305, 308,
	309, 313, 314, 315, 319, 320, 327, 0, 334, 343,
	345, 346, 347, 348, 356, 357, 359, 360, 367, 397,
	398, 412, 413, 0, 0, 167, 0, 291, 173, 0,
	0, 0, 259, 0, 0, 172, 0, 0, 0, 0,
	0, 267, 0, 166, 0, 0, 0, 302, 0, 0,
	0, 169, 269, 0, 0, 0, 210, 0, 337, 0,
	403, 0, 238, 0, 336, 271, 396, 0, 0, 402,
	0, 379, 411, 415, 234, 0, 201, 362, 225, 219,
	0, 0, 0, 244, 324, 214, 263, 0, 0, 0,
	206, 0, 0, 0, 361, 393, 171, 287, 394, 414,
	189, 386, 288, 295, 203, 205, 204, 183, 355, 392,
	195, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 245, 0, 0, 0, 311, 192, 0, 0,
	0, 0, 406, 0, 221, 0, 408, 0, 350, 349,
	0, 252, 0, 0, 0, 332, 0, 260, 174, 0,
	417, 188, 265, 387, 0, 237, 301, 212, 0, 312,
	0, 168, 328, 283, 285, 282, 286, 242, 0, 0,
	0, 330, 352, 391, 190, 368, 0, 0, 0, 0,
	342, 0, 0, 0, 277, 229, 233, 246, 257, 0,
	335, 369, 409, 0, 185, 339, 370, 383, 344, 240,
	372, 376, 373, 374, 371, 375, 340, 341, 0, 177,
	378, 401, 196, 351, 354, 416, 0, 184, 179, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 241, 0, 399, 400, 211, 418, 0,
	0, 180, 0, 0, 298, 306, 297, 0, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 232, 248,
	322, 273, 323, 249, 293, 292, 294, 275, 0, 0,
	175, 0, 366, 0, 0, 377, 193, 0, 0, 390,
	0, 329, 194, 239, 230, 321, 296, 186, 251, 364,
	264, 272, 0, 0, 310, 338, 200, 405, 363, 226,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 0, 207, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 222, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 410, 365, 290, 0, 318, 176,
	187, 199, 218, 216, 231, 261, 284, 289, 316, 353,
	358, 380, 381, 382, 384, 220, 1055, 224, 198, 333,
	197, 274, 254, 317, 388, 389, 326, 213, 0, 170,
	181, 268, 0, 331, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	325, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 217, 0, 0,
	0, 182, 191, 202, 215, 228, 235, 247, 250, 255,
	256, 258, 262, 276, 278, 279, 280, 281, 299, 300,
	304, 305, 308, 309, 313, 314, 315, 319, 320, 327,
	0, 334, 343, 345, 346, 347, 348, 356, 357, 359,
	360, 367, 397, 398, 412, 413, 0, 0, 167, 0,
	291, 173, 0, 0, 0, 259, 0, 0, 172, 0,
	0, 0, 0, 0, 267, 0, 166, 0, 0, 0,
	302, 0, 0, 0, 169, 269, 0, 0, 0, 210,
	0, 337, 0, 403, 0, 238, 0, 336, 271, 396,
	0, 0, 402, 0, 379, 411, 415, 234, 0, 201,
	362, 225, 219, 0, 0, 0, 244, 324, 214, 263,
	0, 0, 0, 206, 0, 0, 0, 361, 393, 171,
	287, 394, 414, 189, 386, 288, 295, 203, 205, 204,
	183, 355, 392, 195, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 245, 0, 0, 0, 311,
	192, 0, 0, 0, 0, 406, 0, 221, 0, 408,
	0, 350, 349, 0, 252, 0, 0, 0, 332, 0,
	260, 174, 0, 417, 188, 265, 387, 0, 237, 301,
	212, 0, 312, 0, 168, 328, 283, 285, 282, 286,
	242, 0, 0, 0, 330, 352, 391, 190, 368, 0,
	0, 0, 0, 342, 0, 0, 0, 277, 229, 233,
	246, 257, 0, 335, 369, 409, 0, 185, 339, 370,
	383, 344, 240, 372, 376, 373, 374, 371, 375, 340,
	341, 0, 177, 378, 401, 196, 351, 354, 416, 0,
	184, 179, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 241, 0, 399, 400,
	211, 418, 0, 0, 180, 0, 0, 298, 306, 297,
	0, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 232, 248, 322, 273, 323, 249, 293, 292, 294,
	275, 0, 0, 175, 0, 366, 0, 0, 377, 193,
	0, 0, 390, 0, 329, 194, 239, 230, 321, 296,
	186, 251, 364, 264, 272, 0, 0, 310, 338, 200,
	405, 363, 226, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 0,
	207, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 222, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 410, 365, 290,
	0, 318, 176, 187, 199, 218, 216, 231, 261, 284,
	289, 316, 353, 358, 380, 381, 382, 384, 220, 1045,
	224, 198, 333, 197, 274, 254, 317, 388, 389, 326,
	213, 0, 170, 181, 268, 0, 331, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 325, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	217, 0, 0, 0, 182, 191, 202, 215, 228, 235,
	247, 250, 255, 256, 258, 262, 276, 278, 279, 280,
	281, 299, 300, 304, 305, 308, 309, 313, 314, 315,
	319, 320, 327, 0, 334, 343, 345, 346, 347, 348,
	356, 357, 359, 360, 367, 397, 398, 412, 413, 0,
	0, 167, 0, 291, 173, 0, 0, 0, 259, 0,
	0, 172, 0, 0, 0, 0, 0, 267, 0, 166,
	0, 0, 0, 302, 0, 0, 0, 169, 269, 0,
	0, 0, 210, 0, 337, 0, 403, 0, 238, 0,
	336, 271, 396, 0, 0, 402, 0, 379, 411, 415,
	234, 0, 201, 362, 225, 219, 0, 0, 0, 244,
	324, 214, 263, 0, 0, 0, 206, 0, 0, 0,
	361, 393, 171, 287, 394, 414, 189, 386, 288, 295,
	203, 205, 204, 183, 355, 392, 195, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 245, 0,
	0, 0, 311, 192, 0, 0, 0, 0, 406, 0,
	221, 0, 408, 0, 350, 349, 0, 252, 0, 0,
	0, 332, 0, 260, 174, 0, 417, 188, 265, 387,
	0, 237, 301, 212, 0, 312, 0, 168, 328, 283,
	285, 282, 286, 242, 0, 0, 0, 330, 352, 391,
	190, 368, 0, 0, 0, 0, 342, 0, 0, 0,
	277, 229, 233, 246, 257, 0, 335, 369, 409, 0,
	185, 339, 370, 383, 344, 240, 372, 376, 373, 374,
	371, 375, 340, 341, 0, 177, 378, 401, 196, 351,
	354, 416, 0, 184, 179, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 241,
	0, 399, 400, 211, 418, 0, 0, 180, 0, 0,
	298, 306, 297, 0, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 232, 248, 322, 273, 323, 249,
	293, 292, 294, 275, 0, 0, 175, 0, 366, 0,
	0, 377, 193, 0, 0, 390, 0, 329, 194, 239,
	230, 321, 296, 186, 251, 364, 264, 272, 0, 0,
	310, 338, 200, 405, 363, 226, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 0, 207, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 222, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	410, 365, 290, 0, 318, 176, 187, 199, 218, 216,
	231, 261, 284, 289, 316, 353, 358, 380, 381, 382,
	384, 220, 422, 224, 198, 333, 197, 274, 254, 317,
	388, 389, 326, 213, 0, 170, 181, 268, 0, 331,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 325, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 217, 0, 0, 0, 182, 191, 202,
	215, 228, 235, 247, 250, 255, 256, 258, 262, 276,
	278, 279, 280, 281, 299, 300, 304, 305, 308, 309,
	313, 314, 315, 319, 320, 327, 0, 334, 343, 345,
	346, 347, 348, 356, 357, 359, 360, 367, 397, 398,
	412, 413, 0, 0, 167, 0, 291, 173, 0, 0,
	0, 259, 0, 0, 172, 0, 0, 0, 0, 0,
	267, 0, 166, 0, 0, 0, 302, 0, 0, 0,
	169, 269, 0, 0, 0, 210, 0, 337, 0, 403,
	0, 238, 0, 336, 271, 396, 0, 0, 402, 0,
	379, 411, 415, 234, 0, 201, 362, 225, 219, 0,
	0, 0, 244, 324, 214, 263, 0, 0, 0, 206,
	0, 0, 0, 361, 393, 171, 287, 394, 414, 189,
	386, 288, 295, 203, 205, 204, 183, 355, 392, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 245, 0, 0, 0, 311, 192, 0, 0, 0,
	0, 406, 0, 221, 0, 408, 0, 350, 349, 0,
	252, 0, 0, 0, 332, 0, 260, 174, 0, 417,
	188, 265, 387, 0, 237, 301, 212, 0, 312, 0,
	168, 328, 283, 285, 282, 286, 242, 0, 0, 0,
	330, 352, 391, 190, 368, 0, 0, 0, 0, 342,
	0, 0, 0, 277, 229, 233, 246, 257, 0, 335,
	369, 409, 0, 185, 339, 370, 383, 344, 240, 372,
	376, 373, 374, 371, 375, 340, 341, 0, 177, 378,
	401, 196, 351, 354, 416, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 241, 0, 399, 400, 211, 418, 0, 0,
	180, 0, 0, 298, 306, 297, 0, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 232, 248, 322,
	273, 323, 249, 293, 292, 294, 275, 0, 0, 175,
	0, 366, 0, 0, 377, 193, 0, 0, 390, 0,
	329, 194, 239, 230, 321, 296, 186, 251, 364, 264,
	272, 0, 0, 310, 338, 200, 405, 363, 226, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 0, 207, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 222, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 410, 365, 290, 0, 318, 176, 187,
	199, 218, 216, 231, 261, 284, 289, 316, 353, 358,
	380, 381, 382, 384, 220, 420, 224, 198, 333, 197,
	274, 254, 317, 388, 389, 326, 213, 0, 170, 181,
	268, 0, 331, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 325,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 247, 250, 255, 256,
	258, 262, 276, 278, 279, 280, 281, 299, 300, 304,
	305, 308, 309, 313, 314, 315, 319, 320, 327, 0,
	334, 343, 345, 346, 347, 348, 356, 357, 359, 360,
	367, 397, 398, 412, 413, 0, 0, 167, 0, 291,
	173, 0, 0, 0, 259, 0, 0, 172, 0, 0,
	0, 0, 0, 267, 0, 166, 0, 0, 0, 302,
	0, 0, 0, 169, 269, 0, 0, 0, 210, 0,
	337, 0, 403, 0, 238, 0, 336, 271, 396, 0,
	0, 402, 0, 379, 411, 415, 234, 0, 201, 362,
	225, 219, 0, 0, 0, 244, 324, 214, 263, 0,
	0, 0, 206, 0, 0, 0, 361, 393, 171, 287,
	394, 414, 189, 386, 288, 295, 203, 205, 204, 183,
	355, 392, 195, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 245, 0, 0, 0, 311, 192,
	0, 0, 0, 0, 406, 0, 221, 0, 408, 0,
	350, 349, 0, 252, 0, 0, 0, 332, 0, 260,
	174, 0, 417, 188, 265, 387, 0, 237, 301, 212,
	0, 312, 0, 168, 328, 283, 285, 282, 286, 242,
	0, 0, 0, 330, 352, 391, 190, 368, 0, 0,
	0, 0, 342, 0, 0, 0, 277, 229, 233, 246,
	257, 0, 335, 369, 409, 0, 185, 339, 370, 383,
	344, 240, 372, 376, 373, 374, 371, 375, 340, 341,
	0, 177, 378, 401, 196, 351, 354, 416, 0, 184,
	179, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 241, 0, 399, 400, 211,
	418, 0, 0, 180, 0, 0, 298, 306, 297, 0,
	395, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	232, 248, 322, 273, 323, 249, 293, 292, 294, 275,
	0, 0, 175, 0, 366, 0, 0, 377, 193, 0,
	0, 390, 0, 329, 194, 239, 230, 321, 296, 186,
	251, 364, 264, 272, 0, 0, 310, 338, 200, 405,
	363, 226, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 0, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 64, 0, 0, 0,
	0, 0, 83, 0, 0, 43, 0, 0, 0, 0,
	318, 176, 187, 199, 218, 216, 231, 261, 284, 289,
	316, 353, 358, 380, 381, 382, 384, 220, 0, 224,
	198, 333, 197, 274, 254, 317, 388, 389, 326, 213,
	0, 170, 181, 268, 87, 331, 236, 0, 0, 3500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3493, 0, 0, 0, 0, 3781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 217,
	0, 0, 0, 182, 191, 202, 215, 228, 235, 247,
	250, 255, 256, 258, 262, 276, 278, 279, 280, 281,
	299, 300, 304, 305, 308, 309, 313, 314, 315, 319,
	320, 327, 0, 334, 343, 345, 346, 347, 348, 356,
	357, 359, 360, 367, 397, 398, 412, 413, 0, 0,
	167, 0, 0, 173, 0, 0, 0, 0, 40, 0,
	172, 0, 0, 0, 0, 0, 0, 45, 80, 49,
	48, 51, 64, 0, 0, 0, 0, 0, 83, 0,
	0, 43, 3494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	82, 81, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 3500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3493, 0, 0,
	0, 0, 3780, 0, 0, 0, 0, 0, 62, 63,
	0, 3496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3505, 3497, 3498, 3499, 3503, 3504, 3501, 0, 3502,
	0, 3506, 0, 0, 40, 0, 71, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 83, 0, 0, 43, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 80, 49, 48, 51, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 3777, 3494, 0,
	0, 3500, 0, 0, 0, 3507, 3495, 0, 59, 60,
	66, 0, 67, 0, 0, 55, 82, 81, 0, 0,
	0, 0, 50, 3493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 63, 0, 3496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3505, 3497, 3498,
	3499, 3503, 3504, 3501, 0, 3502, 0, 3506, 0, 0,
	40, 0, 71, 0, 72, 0, 0, 0, 0, 45,
	80, 49, 48, 51, 64, 0, 0, 0, 0, 0,
	83, 0, 0, 43, 3494, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 55, 82, 81, 0, 0, 0, 0, 50, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 3500, 0, 0,
	0, 3507, 3495, 0, 59, 60, 66, 0, 67, 0,
	0, 0, 52, 54, 0, 0, 0, 0, 79, 3493,
	0, 0, 0, 0, 3769, 0, 0, 0, 0, 0,
	62, 63, 0, 3496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3505, 3497, 3498, 3499, 3503, 3504, 3501,
	0, 3502, 0, 3506, 0, 0, 40, 0, 71, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 0, 0, 0, 0, 0, 83, 0, 0, 43,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 80, 49, 48, 51,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	3494, 0, 0, 3500, 0, 0, 0, 3507, 3495, 0,
	59, 60, 66, 0, 67, 0, 0, 55, 82, 81,
	0, 0, 0, 0, 50, 3493, 0, 0, 0, 0,
	3699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 54,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 63, 0, 3496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3505,
	3497, 3498, 3499, 3503, 3504, 3501, 0, 3502, 0, 3506,
	0, 0, 40, 0, 71, 0, 72, 0, 0, 0,
	0, 45, 80, 49, 48, 51, 64, 0, 0, 0,
	0, 0, 83, 0, 0, 43, 3494, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 0, 55, 82, 81, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 3500,
	0, 0, 0, 3507, 3495, 0, 59, 60, 66, 0,
	67, 0, 0, 0, 52, 54, 0, 0, 0, 0,
	79, 3493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 63, 0, 3496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3505, 3497, 3498, 3499, 3503,
	3504, 3501, 0, 3502, 0, 3506, 0, 0, 40, 0,
	71, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 0, 0, 0, 0, 83, 0,
	0, 43, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 45, 80, 49,
	48, 51, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 3494, 0, 0, 3500, 0, 0, 0, 3507,
	3495, 0, 59, 60, 66, 0, 67, 0, 0, 55,
	82, 81, 0, 0, 0, 0, 50, 3493, 0, 0,
	0, 0, 3691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 54, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 63,
	0, 3496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3505, 3497, 3498, 3499, 3503, 3504, 3501, 3696, 3502,
	0, 3506, 0, 0, 40, 0, 71, 0, 72, 0,
	0, 0, 0, 45, 80, 49, 48, 51, 64, 0,
	0, 0, 0, 0, 83, 0, 0, 43, 3494, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 0, 55, 82, 81, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 3500, 0, 0, 0, 3507, 3495, 0, 59, 60,
	66, 0, 67, 0, 0, 0, 52, 54, 0, 0,
	0, 0, 79, 3493, 0, 0, 0, 0, 3689, 0,
	0, 0, 0, 0, 62, 63, 0, 3496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3505, 3497, 3498,
	3499, 3503, 3504, 3501, 0, 3502, 0, 3506, 0, 0,
	40, 0, 71, 0, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 0, 0, 0, 0,
	83, 0, 0, 43, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 45,
	80, 49, 48, 51, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 3494, 0, 0, 3500, 0, 0,
	0, 3507, 3495, 0, 59, 60, 66, 0, 67, 0,
	0, 55, 82, 81, 0, 0, 0, 0, 50, 3493,
	0, 0, 0, 0, 3590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 54, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 63, 0, 3496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3505, 3497, 3498, 3499, 3503, 3504, 3501,
	0, 3502, 0, 3506, 0, 0, 40, 0, 71, 0,
	72, 0, 0, 0, 0, 45, 80, 49, 48, 51,
	64, 0, 0, 0, 0, 0, 83, 0, 0, 43,
	3494, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 0, 55, 82, 81,
	0, 0, 0, 0, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 3500, 0, 0, 0, 3507, 3495, 0,
	59, 60, 66, 0, 67, 0, 0, 0, 52, 54,
	0, 0, 0, 0, 79, 3493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 63, 0, 3496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3505,
	3497, 3498, 3499, 3503, 3504, 3501, 0, 3502, 0, 3506,
	0, 40, 41, 0, 71, 0, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 64, 0, 0, 0, 0,
	0, 83, 0, 0, 43, 68, 69, 0, 0, 0,
	0, 77, 65, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 45, 80, 49, 48, 51, 0, 0, 0, 56,
	0, 0, 0, 87, 0, 0, 3494, 0, 0, 0,
	0, 0, 0, 3507, 3495, 0, 59, 60, 66, 0,
	67, 0, 0, 55, 82, 81, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 54, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 63, 0, 3496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3505, 3497, 3498, 3499, 3503,
	3504, 3501, 0, 3502, 0, 3506, 0, 0, 0, 0,
	71, 0, 72, 0, 0, 0, 45, 80, 49, 48,
	51, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 55, 82,
	81, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	70, 0, 0, 0, 0, 0, 0, 0, 0, 3507,
	3495, 0, 59, 60, 66, 0, 67, 0, 0, 0,
	52, 54, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 63, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 75, 76, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 74, 0, 59, 60, 66,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 54, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 54, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	57845, -1000, -450, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2286,
	-1000, -1000, 353, -1000, 1063, 329, -1000, -1000, 430, 55,
	39182, 814, 55902, 55439, -283, 1587, 53587, 65, -1000, 65,
	244, 36626, 564, 565, 54050, 2144, 1701, 67, -55, -56,
	151, 41113, 40467, 146, 90, 100, 96, 54, -1000, 43669,
	117, -1000, -1000, -1000, -1000, 2336, 232, -1000, -1000, 2244,
	2277, 2085, -1000, 9828, -1000, -1000, -1000, -1000, -1000, 24304,
	-1000, 2334, 39821, 32149, -1000, 809, 802, -160, 774, 774,
	689, 774, 774, 813, -1000, 485, 1145, -1000, -1000, -1000,
	-1000, 1139, 39821, 49068, 775, 52198, 775, 775, 775, 775,
	775, 775, 775, 54976, 39821, -1000, 867, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39821,
	2323, 2319, 2035, 2033, 54513, 1700, 2194, 1079, 243, 1079,
	-1000, -1000, 1160, -1000, 663, 649, 627, 639, 624, 149,
	1143, 2263, -1000, 1960, 2244, 2244, -1000, -1000, -1000, -1000,
	-1000, -1000, 931, -1000, -1000, 1222, 1222, 383, 799, 233,
	684, 232, 2228, 1133, 2193, 2192, 1461, 2191, 622, 2185,
	2029, -1000, 865, -1000, -1000, -33, -1000, 1698, 39821, -1000,
	-1000, 1401, 1397, 460, 1915, 936, 2052, -1000, -1000, 447,
	651, 2021, 539, 2021, 2021, 2021, 198, 2021, 2021, -57,
	2021, 2021, 2021, 156, 2021, 2021, 192, 2021, 2021, 2021,
	2021, 2021, 1705, -1000, -1000, -1000, 471, 1887, 1946, 2051,
	121, -1000, -114, -1000, 2251, 589, -1000, -1000, -1000, 2007,
	45586, 1940, -1000, 1960, -1000, -1000, -1000, 1606, 812, -1000,
	2007, 2245, 1739, -1000, 43669, 2186, 1270, 16408, 2124, -1000,
	-1000, 1246, 2318, -1000, 31510, 863, -1000, 16408, 1633, 1960,
	1960, -1000, 837, 946, -1000, 830, 856, -1000, -1000, 15750,
	15750, 15750, 15750, 15750, 15750, 15750, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1960, 862, 861, 1960, 1960, 1960, 1960, 1960,
	-1000, 14434, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1960, 1960, 1960, 1960, 1960, 1960,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 16408, 1960,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	778, 778, 38543, 1957, -96, 23646, -1000, -1000, -1000, -1000,
	22330, 48429, 1129, -1000, -1000, -1000, -1000, 2184, -1000, -1000,
	860, 856, 837, 833, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2286, -1000, -1000, 1876, 727, -1000, 4808, 4808,
	4808, 4808, 4808, 331, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2027, 52198, 39821, 458, 1697, 1208, 1696,
	54050, 54050, -1000, 374, 49068, 49068, 774, 468, 49068, 610,
	1953, 798, 1952, 797, 1704, 39821, 2215, 2050, 39821, 1692,
	1691, 54050, 54050, 49068, 49068, -1000, -1000, -1000, 30226, 1950,
	-1000, 1543, 1535, 53124, 53124, -1000, -1000, -1000, 1079, -1000,
	5768, 16408, 774, 774, 39821, 39821, 39821, 39821, -1000, 39821,
	-1000, -1000, 1079, -1000, 1079, 1079, 1079, 1140, 2314, 1140,
	-1000, 1140, -1000, -1000, 16408, -1000, 15750, 47790, 938, -1000,
	-1000, 53587, 715, 715, 715, -1000, 1678, 364, -1000, -1000,
	-1000, -1000, -1000, 233, -1000, -1000, 2166, 1673, 622, 622,
	-1000, 1529, 622, 1936, -1000, 1125, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 622, 2228,
	15092, 52198, -430, -1000, -1000, 1949, -1000, 389, -1000, -1000,
	723, 2048, 723, 559, 49068, 49068, 49068, -1000, 2021, 52198,
	-1000, 2021, 2021, 2021, -60, 2021, 2021, -1000, -1000, 2021,
	-1000, -1000, -1000, 2021, -1000, -1000, 2021, -1000, -1000, -1000,
	2021, 2021, -1000, -1000, 2021, 2021, -1000, -1000, -1000, -1000,
	-1000, 49068, 723, 270, 1947, 723, 49068, 49068, 796, 87,
	-85, -1000, -1000, -1000, 141, 138, 134, 128, -1000, -1000,
	-1000, -1000, 119, 115, -1000, -1000, -1000, 1940, 45586, 2242,
	19040, 2202, -1000, 2202, -1000, -1000, -1000, 184, -1000, 39821,
	-1000, -1000, 232, -1000, -1000, -1000, -1000, 2007, 1234, 2330,
	968, 1933, -1000, -1000, 1939, -1000, 1218, 855, 1346, 2098,
	-1000, -1000, -1000, 39821, -1000, 16408, 16408, 16408, 1540, -1000,
	32788, -1000, -1000, -1000, -1000, -1000, -1000, 20356, 999, 15750,
	1273, 1085, 15750, 15750, 15750, 15750, 15750, 15750, 15750, 15750,
	15750, 15750, 15750, 15750, 15750, 15750, 15750, 1284, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1672, -1000, 232, 28252,
	11144, 28252, 1798, 1798, 52198, 917, 917, 917, 917, 917,
	917, 41752, 2238, 27594, 28252, 2238, 2238, 2238, 2238, 2238,
	1739, 1854, 1304, 43669, 14434, 11144, 11144, 11144, 1739, 16408,
	16408, 11144, 11144, 13776, 13118, 17724, 11144, 11144, 2238, 1157,
	1304, 22330, 11144, -1000, -1000, 12460, -1000, -1000, -1000, -1000,
	-1000, 1739, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	52198, 52198, 11144, 11144, 11144, 11144, 1739, 1739, 11144, 11144,
	11144, 11144, 11144, 1739, 1739, 1739, 1739, 11144, 11144, 11144,
	11144, 11144, 11144, 11144, 11144, 11144, 11144, 11144, 11144, 37904,
	35987, 39821, 1911, 1910, -1000, 854, 22988, 1929, -1000, -91,
	-106, -96, -1000, -1000, 909, -1000, -1000, -1000, 11802, -1000,
	21014, 2244, 2085, -1000, 30871, -1000, -1000, -35, -1000, -1000,
	-1000, 1988, -1000, 2008, 361, 11, 2008, 2008, 2008, 2008,
	2008, -1000, -1000, -1000, -1000, 16, -1000, -1000, -1000, -1000,
	-1000, 2026, 2024, -1000, 1988, 1988, 1988, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2017, 381, 1990, 1990,
	1990, 1990, 1990, -1000, -1000, -1000, -1000, 741, 741, 741,
	-1000, 16408, 2031, 2241, 801, 468, 2202, 2211, 2202, 619,
	-1000, 853, 2023, 490, 1921, -1000, 230, 1885, 37265, -1000,
	-1000, -1000, -1000, -1000, 39821, 39821, 49068, 49068, 49068, 840,
	-1000, 39821, 1938, -1000, -1000, -1000, -1000, -1000, 1918, -1000,
	1885, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 39821, -1000, -1000, 1937, -1000, -1000, -1000, 1937, -1000,
	-1000, 1524, 1304, 1668, 1658, 2228, -1000, -1000, -1000, 1158,
	-1000, -1000, -1000, -1000, 1079, 53587, 53587, 39821, 2228, 1079,
	1304, 835, 2032, 1960, 1739, -1000, -1000, 46, -1000, 44,
	-1000, -1000, -1000, 1657, -1000, 15750, -1000, 1936, 1936, -1000,
	1936, 622, 1798, 1936, -1000, -1000, 1843, -1000, 1232, 1519,
	39821, -1000, 45586, -39, -1000, -123, 51272, -1000, -1000, -1000,
	723, 51272, -1000, 156, 185, -1000, 795, -1000, 1841, -1000,
	-1000, -1000, -1000, 2021, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 51272, 194, 258, 51272, 1918, 2313,
	183, 1934, -1000, 1124, 1121, -1000, -1000, -1000, -1000, -1000,
	-1000, 2260, -1000, -1000, 1960, 1817, -1000, 848, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2183, 1073,
	1073, 1073, 318, 1739, -1000, 51735, -1000, 2091, 1270, 1270,
	16408, -1000, -1000, -1000, 21014, 2262, -1000, 2104, 2103, 2066,
	-1000, -1000, 999, 1067, 998, -1000, -1000, 1280, -1000, -1000,
	-1000, -1000, -1000, 847, 1960, -1000, -1000, -1000, -1000, -1000,
	1919, -1000, -1000, -1000, -1000, 1273, 15750, 15750, 15750, 835,
	1919, 4146, 1278, 1137, 917, 1153, 1153, 918, 918, 918,
	918, 918, 1722, 1722, -1000, -1000, -1000, 1739, -1000, 1768,
	-1000, -1000, 1304, 846, -1000, -1000, -1000, -1000, -1000, -1000,
	11144, -1000, -1000, -1000, 11144, 11144, 11144, 11144, 11144, -1000,
	16408, -1000, 1739, 1768, 1768, 1768, -1000, 1142, 1282, 1714,
	1768, 1011, 2310, 1768, 1007, 2309, 1768, 1677, 15750, 15750,
	15750, 1768, 1768, 11144, 1178, -1000, 16408, 1739, 1768, -1000,
	1738, 1932, 1931, 1768, 1739, 1930, 1768, 1768, -179, -179,
	1739, 1768, 1739, 1768, 1768, -179, -179, -179, -179, 1768,
	1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
	1768, 964, 39821, -1000, 1879, 333, -1000, -1000, -1000, 2240,
	34709, -1000, -1000, 42391, -1000, 1960, 1960, 964, 1860, 35987,
	-1000, -1000, 35987, 53587, 26936, -1000, 22330, -96, -88, -1000,
	-1000, 1929, -1000, -1000, 1416, -1000, -1000, 1518, 1304, -1000,
	845, 2186, 2238, 4406, 727, -1000, -1000, -1000, 2020, 282,
	-1000, 2122, 963, 963, 962, 1583, 2121, -1000, -1000, 174,
	-48, -1000, -1000, -1000, 1396, -1000, 223, -1000, 2008, 2008,
	349, 2008, -1000, -1000, -1000, -1000, -1000, -1000, 1517, 1517,
	-1000, -1000, -1000, -1000, 1394, -1000, 2017, -1000, 1387, -1000,
	-1000, -1000, -1000, 174, 174, 174, 174, -1000, -1000, -1000,
	1659, 2046, 52198, -1000, 39821, -1000, -1000, -1000, 2297, -1000,
	-1000, 52198, 47151, -1000, -1000, 157, 49068, 275, 432, 236,
	-1000, -1000, 794, -1000, 793, -1000, -1000, -1000, -1000, -1000,
	-1000, 39821, 49068, -1000, 53124, -1000, -1000, -1000, -1000, 2292,
	1655, 1653, -1000, -1000, -1000, 1140, 1079, -1000, -1000, 15750,
	49068, -1000, 631, -1000, -1000, -1000, 1919, -1000, -1000, -1000,
	964, 811, -1000, -1000, -76, -1000, -1000, 792, 842, 841,
	51272, 791, -1000, 168, 49068, -1000, 52198, -1000, 2308, 2307,
	191, 2306, 49068, 1927, -1000, 1120, 1118, 1111, 1109, 1097,
	1096, 87, 2012, 2010, -1000, 103, -1000, 229, -1000, 19040,
	28252, 1073, 1093, -1000, 1086, 1513, 1926, -1000, 935, 937,
	954, 746, 746, -1000, 1073, 746, 2174, 2168, 959, -1000,
	1925, 1508, 1507, -1000, 2089, -1000, -1000, -1000, 39821, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26278, 11144,
	-1000, 835, 1919, 4130, -1000, 15750, -1000, 11144, -1000, 19698,
	1739, 1768, 1768, 1768, 1768, 1768, 1304, -1000, -1000, -1000,
	-1000, 688, 1284, 688, -1000, 1284, -1000, 15750, 15750, -1000,
	15750, 15750, -1000, -1000, 15750, 4195, 3918, 3298, -287, -1000,
	1903, 1148, -1000, 16408, 1512, -1000, -1000, -1000, 15750, 15750,
	-1000, -1000, -1000, -1000, -1000, 50809, -1000, -179, -179, -179,
	-179, -179, -1000, -1000, -1000, -1000, -179, -179, -179, -179,
	-179, -179, -179, -179, -179, -179, -179, -179, 224, 1960,
	-1000, 21672, 35987, 35987, 35987, 35987, 35987, -1000, 2081, 2080,
	-1000, 2070, 2064, 2063, 350, 45586, 1833, 1739, 611, 34709,
	-1000, 1960, -1000, 44947, 902, 807, 806, 805, 11144, 15750,
	2292, 35987, 1902, 1902, -1000, 839, -1000, -1000, -1000, -118,
	-141, -1000, -1000, -1000, -1000, 28252, -1000, -1000, -1000, 4424,
	2276, 1073, 1073, 1073, 1073, 306, 2181, 1073, 1073, 1073,
	1073, 1073, -241, -244, 1073, 1073, 1073, 1073, 1073, 1073,
	1073, 1073, 1073, 1073, 1073, 79, 1073, 1073, 1073, 1073,
	24962, 1073, -1000, 46049, 724, 2125, 722, 1583, 1583, 1583,
	-1000, 1583, -1000, -1000, -1000, 2009, -1000, 1241, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1960, -442, 1383, 2180,
	390, 2329, -1000, 2120, -1000, 2119, 2117, 1489, -1000, -1000,
	1836, 1834, 1799, -1000, -1000, -1000, 2008, -1000, 1831, -1000,
	1829, 1924, -1000, 1827, 129, 39821, -1000, -1000, 2235, 2045,
	-1000, -1000, -1000, -1000, 1786, 1923, -1000, 4808, 52198, 52198,
	52198, -292, 305, -1000, 49068, 211, 230, 528, 1651, 39821,
	49068, -1000, -1000, -1000, -1000, 16408, -1000, -1000, 2228, -1000,
	1919, 1885, -1000, -1000, 3, 39821, -1000, 49068, 934, 50170,
	785, 49068, 190, 180, -1000, 49068, 49068, 2305, 49068, 1918,
	183, 1486, 1484, 1483, 1378, 1376, 1374, -1000, 39821, 39821,
	1480, -1000, -1000, 1028, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 318, 49707, 1583, 881, -1000, -1000, 748, -1000, 221,
	1650, 34066, 33427, 52198, 2116, 2114, 1649, 39821, 52198, -1000,
	-1000, 52661, 1628, 16408, 52198, -1000, -1000, 52198, 52198, -1000,
	-1000, -1000, -1000, 1247, 9828, -1000, -1000, 1739, -1000, 15750,
	1919, -1000, -1000, 838, -1000, -179, -179, -179, -179, -179,
	1739, 1988, 1988, -1000, 1988, 1990, -1000, 1988, 37, 1988,
	36, 1739, 1739, 1739, 3903, 3834, 3193, 2831, 1738, 15750,
	15750, 15750, 1960, -172, -1000, 1304, 16408, 2065, 1941, -1000,
	-1000, 1598, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2044, 21672, 1960, 18382, -1000, 52198, 1904, -1000, 1092, 912,
	1076, 1075, 837, 833, 333, 2006, 2043, 368, -1000, -1000,
	-1000, -1000, 2079, -1000, 2077, 2076, -1000, -1000, -1000, 1969,
	-1000, -1000, 1922, 1960, 52198, 15750, 902, -1000, 1960, 1960,
	1960, 1739, 1811, 2286, 1902, -1000, -1000, 933, -1000, -1000,
	-1000, -1000, 165, 530, 530, 530, 1284, 1073, 2179, 1073,
	1073, 1372, 29568, 1479, 1477, 1476, 1073, 1073, 1370, 1472,
	29568, 1470, 700, 530, 530, 530, 1369, 1469, 309, -1000,
	1464, 1398, 1393, 530, -1000, -257, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 530, 1825, -1000, 1988, 1988, 2110,
	-1000, 963, -1000, -1000, -1000, -1000, -1000, 52198, -1000, 15750,
	2227, -1000, 995, -1000, 1798, -1000, 1960, 1960, 1960, 1960,
	15750, -1000, -1000, -124, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1463, -1000, 1357, -1000, 1344, -1000, -1000,
	-383, 1987, 232, -1000, 39821, 150, 47151, -1000, 4808, 4808,
	4808, 249, 172, -1000, 1220, -1000, -1000, -1000, 1460, 1454,
	1452, 1885, 278, 1219, 226, -1000, 2224, -1000, -1000, 1304,
	1079, -77, -1000, -1000, 180, -1000, -1000, -1000, 49068, 180,
	-1000, -1000, 239, 1918, 1918, 49068, 1918, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1822, 1820, -1000, -1000, -1000, -1000,
	-1000, 52661, 709, 4808, 4808, 2031, 963, 2109, 722, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1597, -1000, 955, -1000, 780, 709, 52661, 1304, 977,
	1231, -1000, 2304, -1000, -1000, -1000, 1919, 25620, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 369, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 15750, 15750, 15750, 15750, -1000,
	1738, 1738, 1738, 15750, 1739, 1449, 1304, 15750, 15750, 951,
	-1000, -1000, 2209, 1881, 1913, -1000, -1000, 10486, 1739, 2102,
	1817, -1000, 43669, 1815, -1000, 2286, 21672, 16408, 16408, 16408,
	16408, -1000, -1000, 16408, 1986, -1000, 16408, -1000, -1000, -1000,
	-1000, -1000, 52198, 602, -1000, 16408, 1815, 989, -1000, 52198,
	52198, 52198, -1000, 1448, 2244, -1000, -275, -1000, 313, 312,
	227, -1000, -1000, -1000, -1000, -1000, 1284, 1073, 29568, 1284,
	-1000, -1000, -1000, -1000, -1000, 1440, 1438, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -262, -1000, 864, 46049, 2208, 2208, 1583, 1583,
	1809, -1000, 1738, 1960, -1000, -1000, -1000, -1000, 8512, -1000,
	8512, -1000, 8512, 8512, 1738, -1000, 1960, 1960, 1960, 1960,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, -1000, 1784, 1770,
	-1000, 46049, -1000, -1000, 2259, -1000, 150, -1000, 1433, 454,
	387, -1000, 391, 386, 382, 370, 372, -1000, -1000, -1000,
	-1000, 500, 249, -1000, -79, 1334, 990, 2173, 172, -1000,
	1315, 1301, 1299, 1291, 240, -1000, -1000, -1000, -1000, 234,
	230, -1000, 520, 1432, -1000, 2138, 2136, 2226, 180, 2226,
	181, 1918, -1000, -1000, 1743, -1000, -1000, 1596, -1000, -1000,
	1985, 1583, 1583, -1000, 1582, -1000, -1000, 52198, -1000, 709,
	2201, 2200, 1960, 2292, 35348, 9828, -1000, -1000, -1000, -1000,
	1738, 1738, 1738, 1738, -1000, -1000, -1000, 199, -1000, -1000,
	1738, 1738, 2286, 2275, 2107, -1000, 1960, -1000, -1000, 1960,
	228, -1000, 52198, 2244, -1000, 1304, 1304, 1304, 1304, 1304,
	52198, 1304, 1773, 1960, 43030, -1000, 45586, 1716, 1716, 1716,
	-67, -1000, -277, 1285, 29568, 1960, 29568, 1960, 1960, 652,
	-1000, 1284, -1000, -1000, -1000, -1000, -1000, -1000, 864, -1000,
	29568, 1073, 1431, -1000, -1000, -1000, -1000, -1000, 706, 52198,
	-445, 15750, 1768, 1768, 1768, -1000, 1768, -1000, -1000, -1000,
	1753, -1000, 232, 613, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2143, 2141, 482, -1000, 1419, 1418, -1000, 538, 1386,
	869, -189, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 496, 1581, -1000, 219, -1000, -1000, 777,
	2127, 2126, 2274, -1000, 49068, 2226, -1000, -1000, -1000, -1000,
	174, 174, 46049, 2031, 1982, -1000, -1000, -1000, 15750, -1000,
	947, 2290, -1000, 1917, -1000, -1000, -1000, -1000, -1000, 1739,
	202, -306, -1000, -1000, 980, 16408, 2328, -1000, 1913, 1960,
	-1000, 232, -1000, -1000, 1749, -1000, -1000, -1000, 902, -1000,
	-1000, -1000, 1960, 1960, 2272, -1000, 1739, 52198, 1739, 52198,
	1886, 52198, 1066, -1000, -1000, -1000, 1279, -1000, 39821, -1000,
	-1000, -1000, -1000, 1738, -1000, -1000, -1000, -1000, 864, -1000,
	599, 57720, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1260, -1000, -1000, 1342, 510, 216, -1000, 2225, -1000, 1969,
	1256, 2136, 2271, 2133, 2130, -1000, 1417, -293, -1000, 1746,
	1965, 46049, 1919, 1723, -1000, 52198, 2288, 2270, -1000, -1000,
	2088, -290, -325, 1739, 237, 237, 1914, 21672, 1913, 1739,
	-1000, -1000, 28252, 947, -357, -1000, 1716, -1000, 1716, 1739,
	1739, 1716, 1254, -1000, 1962, -445, -1000, 864, -1000, 591,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9170, 16408, 76, 28910, 1580, 1577, 57720,
	1660, 57720, 16408, 1575, 1574, 2147, 15750, 57554, 204, -1000,
	203, -1000, -1000, -1000, 1412, -1000, 1031, -1000, 1406, -1000,
	2269, 2267, -1000, 274, 864, 46049, 1742, -1000, 947, 2101,
	-182, 16408, 16408, -1000, 2069, -1000, -1000, -1000, 238, -1000,
	958, 492, 956, -1000, 1798, -1000, 1907, -1000, 1725, -1000,
	4808, 1723, -281, -1000, -1000, -1000, -1000, -1000, 1960, 52198,
	-1000, -1000, 1573, 1570, -1000, 1347, 1203, -1000, 16408, 1429,
	356, 341, 1294, -1000, -1000, -1000, -1000, -1000, -1000, -451,
	-1000, 155, -452, 621, -1000, -1000, 1568, -1000, 2303, 1919,
	-1000, -453, -1000, -1000, -1000, -1000, -1000, -1000, 1403, 1348,
	46688, -1000, 1721, 864, -1000, 678, -1000, 52198, -1000, 1304,
	1906, -1000, 1304, -297, 1215, -1000, -1000, -1000, -1000, -1000,
	52198, 1739, 28252, 271, -1000, -1000, 1252, 52198, 1719, -1000,
	-1000, -1000, 1117, 1192, 57720, -1000, 1414, 57720, 2258, 2257,
	2255, 3, 28252, 57428, 57262, 57720, 57720, 16408, 57136, 57720,
	1226, -1000, 56970, -1000, -1000, -1000, -1000, 173, 1885, 864,
	-1000, 636, 1898, -1000, 2222, 16408, -312, 238, -1000, 44308,
	-1000, -1000, 1313, -225, -1000, 1716, 2042, 214, 1180, 57720,
	-1000, -454, 57720, -455, 554, 232, 787, 909, -1000, 323,
	-1000, 1567, -456, -457, -458, 551, 16408, -459, 1566, -1000,
	49068, -1000, 1960, 52198, 1960, -1000, -326, -1000, 45586, -1000,
	-1000, 1305, -1000, 2041, 2040, 2302, -1000, -1000, -1000, -1000,
	-1000, -1000, 57720, 43669, -1000, -462, 56844, -463, 5682, -1000,
	-1000, -1000, 56678, -1000, -1000, -1000, -1000, 339, -1000, -1000,
	2187, -1000, -1000, 56552, 56386, 8092, 57720, 1341, 7637, 1889,
	-1000, 1885, 17066, -1000, -1000, -1000, -1000, 475, -1000, -1000,
	2326, -1000, 2298, 889, 889, -1000, -464, -1000, 7468, 1159,
	57720, 773, 57720, 1138, -1000, 16408, -1000, 787, -1000, 15750,
	1564, 322, 16408, -465, 296, 288, 1558, 1738, 1739, -1000,
	2039, 15750, 2038, -1000, -1000, -1000, 720, 1312, -1000, 7317,
	1154, -1000, -1000, -468, 756, 57720, -1000, 1261, -1000, 1919,
	-1000, 1554, 1248, 6731, -1000, -1000, -1000, -1000, -1000, -338,
	1706, -339, -1000, -1000, -1000, -1000, -1000, 6675, -1000, -469,
	57720, -1000, 245, 287, -1000, -340, -1000, 755, 6239, -470,
	1548, 1542, -1000, -1000, 752, 57720, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2780, 2779, 32, 170, 2778, 270, 2777, 2776, 45,
	2775, 28, 23, 19, 30, 2774, 2478, 2476, 2471, 2466,
	2447, 2772, 21, 2771, 2770, 2437, 2769, 2768, 2424, 2765,
	2763, 2760, 2757, 2756, 2755, 2753, 2751, 2748, 2418, 2414,
	2402, 2747, 2746, 2745, 2385, 2383, 2381, 2737, 13, 36,
	46, 2735, 3, 2733, 155, 175, 2732, 2, 2730, 2729,
	15, 2728, 2727, 2379, 2726, 2725, 2721, 2720, 107, 2719,
	2374, 2372, 2718, 2370, 2368, 2360, 2357, 2354, 173, 2717,
	2349, 2346, 2344, 2711, 2121, 179, 335, 177, 189, 2710,
	2708, 2706, 192, 2705, 157, 2702, 2701, 333, 133, 2699,
	289, 129, 77, 123, 881, 2696, 18, 70, 287, 2695,
	6, 2694, 125, 2693, 122, 2692, 2689, 167, 2686, 152,
	63, 103, 2685, 2682, 108, 2681, 2680, 2678, 118, 2677,
	2675, 187, 134, 2674, 2672, 150, 2671, 62, 181, 55,
	66, 2670, 114, 2669, 2665, 2663, 2659, 40, 302, 2658,
	109, 154, 2656, 2655, 99, 2653, 2651, 80, 2650, 2649,
	2648, 149, 54, 2646, 2645, 52, 2642, 51, 67, 2638,
	60, 2637, 148, 2636, 2635, 2634, 2633, 2632, 89, 2631,
	71, 2629, 151, 168, 147, 2628, 2627, 12, 5, 2626,
	49, 22, 8, 58, 26, 76, 65, 145, 143, 101,
	2625, 38, 50, 131, 100, 2624, 180, 138, 104, 91,
	48, 2623, 161, 2622, 90, 163, 146, 144, 162, 2621,
	2620, 2619, 188, 2617, 136, 96, 2616, 105, 1163, 178,
	2614, 2612, 102, 2609, 2608, 2607, 2605, 2604, 92, 182,
	2603, 190, 186, 191, 116, 2602, 1362, 4782, 4969, 176,
	4814, 39, 166, 2601, 57, 2600, 2597, 2595, 4232, 124,
	17, 72, 184, 2593, 127, 27, 120, 2589, 2588, 2586,
	2585, 2584, 2583, 2581, 2580, 113, 106, 2579, 2578, 2577,
	2576, 35, 34, 16, 14, 2575, 172, 169, 165, 2570,
	156, 43, 2569, 2568, 142, 135, 2567, 2566, 2564, 2563,
	139, 93, 158, 41, 2562, 130, 141, 203, 2561, 94,
	2560, 2559, 112, 1733, 2558, 2554, 2553, 2552, 117, 115,
	2551, 2547, 2546, 44, 2545, 2543, 2542, 2524, 2520, 81,
	53, 42, 88, 25, 2515, 2514, 2513, 110, 137, 2511,
	97, 121, 47, 37, 2510, 9, 4, 7, 2506, 2505,
	2504, 2503, 2502, 2500, 2499, 98, 2498, 2496, 85, 2495,
	2493, 2491, 56, 2488, 2486, 2481, 153, 128, 59, 171,
	111, 11, 2480, 2474, 10, 2469, 140, 2463, 64, 2453,
	73, 2451, 2449, 74, 2443, 2435, 75, 2426, 2404, 174,
	1780, 304, 2400, 159, 126, 61, 68, 2392, 69, 2376,
	0, 2096, 164, 2365, 95, 2351, 2342, 2313,
}

var yyR1 = [...]int{
	0, 399, 399, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	83, 3, 3, 9, 10, 4, 4, 5, 5, 110,
	110, 6, 109, 109, 109, 208, 208, 208, 208, 205,
	205, 111, 111, 108, 108, 117, 7, 7, 8, 8,
	11, 11, 91, 91, 12, 13, 13, 13, 13, 402,
	402, 126, 126, 124, 124, 125, 125, 203, 203, 14,
	14, 14, 212, 212, 217, 217, 217, 220, 220, 220,
	220, 192, 193, 194, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 372, 372, 381, 381,
	381, 382, 382, 380, 380, 380, 380, 380, 384, 384,
	385, 385, 383, 383, 383, 383, 387, 387, 388, 388,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 375, 375, 375, 44, 44, 44,
	44, 44, 45, 45, 45, 45, 45, 45, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 390, 390, 391, 391, 392, 392, 393, 393, 393,
	393, 394, 394, 394, 394, 394, 395, 395, 395, 395,
	395, 395, 395, 396, 396, 397, 397, 2, 353, 353,
	354, 354, 355, 355, 355, 355, 356, 356, 357, 357,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	26, 26, 26, 26, 26, 26, 243, 243, 240, 240,
	240, 241, 241, 242, 242, 242, 374, 374, 374, 368,
	368, 368, 370, 370, 369, 369, 369, 371, 371, 376,
	376, 376, 376, 376, 378, 378, 378, 378, 378, 378,
	379, 379, 379, 377, 377, 61, 61, 62, 62, 62,
	181, 181, 181, 15, 15, 15, 15, 15, 21, 23,
	23, 23, 23, 49, 49, 50, 24, 24, 24, 24,
	51, 51, 52, 27, 27, 27, 27, 27, 27, 59,
	59, 59, 58, 58, 57, 57, 57, 57, 57, 57,
	29, 30, 31, 403, 403, 403, 53, 53, 32, 32,
	32, 35, 35, 35, 36, 36, 36, 33, 34, 37,
	25, 25, 25, 25, 60, 60, 55, 55, 54, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 28, 28, 28, 28, 28, 28, 20, 352, 352,
	352, 48, 48, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 66, 66, 314, 315, 315,
	315, 315, 315, 315, 315, 315, 301, 301, 302, 302,
	302, 302, 302, 291, 291, 291, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	265, 265, 265, 265, 271, 271, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 270, 270, 270, 270,
	270, 270, 270, 270, 272, 272, 272, 272, 272, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 274, 274, 274, 274, 274, 274,
	274, 274, 300, 300, 276, 276, 275, 275, 275, 294,
	294, 295, 295, 295, 292, 292, 292, 293, 293, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 280, 296, 281, 281, 282, 282, 283, 283, 284,
	284, 285, 285, 290, 290, 289, 289, 289, 289, 289,
	289, 286, 286, 286, 286, 286, 286, 287, 287, 287,
	288, 299, 299, 299, 299, 299, 277, 46, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	339, 339, 234, 234, 235, 235, 47, 47, 47, 47,
	47, 143, 143, 335, 335, 337, 337, 337, 337, 337,
	337, 336, 336, 338, 338, 304, 304, 333, 333, 332,
	332, 331, 331, 331, 313, 313, 328, 328, 328, 328,
	328, 328, 328, 328, 308, 308, 308, 307, 307, 309,
	309, 312, 312, 330, 330, 329, 329, 305, 305, 305,
	340, 340, 340, 340, 340, 306, 306, 306, 306, 306,
	341, 310, 310, 311, 311, 311, 346, 347, 345, 345,
	345, 345, 345, 144, 144, 144, 317, 317, 317, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 319,
	319, 319, 319, 319, 320, 320, 320, 320, 320, 320,
	398, 398, 398, 321, 321, 321, 322, 322, 322, 322,
	322, 323, 323, 323, 323, 324, 324, 325, 325, 326,
	326, 327, 327, 350, 350, 349, 349, 63, 63, 65,
	65, 64, 69, 69, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 180, 180, 180, 239,
	239, 344, 342, 342, 343, 343, 17, 17, 67, 67,
	373, 373, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 348, 348, 348, 19, 19, 70, 73, 73, 206,
	206, 207, 207, 74, 74, 74, 74, 75, 75, 75,
	75, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 105, 226, 226,
	225, 225, 224, 224, 224, 227, 227, 227, 227, 263,
	263, 263, 72, 72, 72, 84, 84, 79, 79, 82,
	82, 82, 85, 85, 86, 86, 87, 87, 80, 81,
	38, 39, 39, 39, 39, 40, 77, 77, 77, 78,
	78, 78, 78, 97, 97, 405, 405, 405, 76, 406,
	88, 89, 89, 90, 90, 90, 230, 230, 94, 94,
	94, 92, 92, 92, 93, 93, 99, 99, 103, 103,
	103, 103, 102, 102, 102, 102, 183, 183, 188, 255,
	255, 164, 164, 184, 184, 189, 189, 189, 190, 190,
	191, 191, 191, 191, 191, 186, 186, 185, 185, 187,
	152, 152, 253, 253, 253, 253, 252, 252, 252, 252,
	252, 252, 107, 107, 112, 112, 114, 114, 114, 114,
	114, 114, 118, 166, 166, 136, 136, 137, 137, 137,
	137, 137, 150, 150, 202, 202, 201, 201, 204, 204,
	113, 115, 115, 115, 115, 121, 121, 122, 122, 123,
	123, 238, 238, 260, 260, 260, 127, 127, 127, 129,
	128, 128, 128, 128, 128, 128, 130, 130, 116, 116,
	316, 316, 303, 267, 267, 268, 407, 407, 407, 407,
	131, 131, 133, 134, 134, 132, 132, 132, 132, 132,
	138, 138, 135, 139, 139, 139, 139, 140, 140, 104,
	104, 104, 104, 104, 104, 104, 104, 223, 223, 142,
	142, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 160, 160, 160, 160, 160, 160, 145, 145, 145,
	145, 145, 145, 145, 98, 98, 161, 161, 161, 120,
	119, 119, 101, 101, 100, 100, 162, 162, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 155, 155, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 404, 404, 157,
	156, 156, 156, 156, 156, 156, 95, 95, 95, 95,
	95, 261, 261, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 173, 173,
	96, 96, 171, 171, 172, 174, 174, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 147, 147, 147, 147, 147, 147, 147, 147, 149,
	149, 149, 175, 175, 163, 163, 106, 176, 176, 177,
	178, 178, 179, 179, 182, 195, 195, 195, 196, 196,
	196, 196, 151, 151, 197, 197, 197, 146, 146, 146,
	146, 146, 146, 146, 200, 200, 199, 199, 198, 198,
	198, 198, 198, 198, 209, 209, 165, 165, 168, 168,
	167, 169, 210, 210, 214, 214, 214, 214, 211, 211,
	215, 215, 215, 215, 218, 218, 219, 219, 219, 216,
	216, 216, 216, 213, 213, 213, 257, 257, 257, 221,
	221, 231, 231, 228, 228, 229, 229, 222, 222, 278,
	278, 278, 237, 237, 236, 236, 236, 232, 232, 232,
	233, 233, 254, 254, 250, 250, 256, 256, 251, 251,
	258, 258, 259, 259, 351, 351, 297, 297, 361, 361,
	298, 298, 362, 362, 364, 364, 359, 359, 360, 360,
	363, 363, 41, 365, 365, 366, 366, 367, 367, 367,
	367, 42, 43, 43, 43, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 249, 249, 249, 249, 249, 249, 247, 247,
	247, 247, 247, 400, 401,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	11, 5, 7, 1, 5, 1, 3, 1, 3, 2,
	1, 13, 0, 2, 2, 0, 2, 3, 3, 1,
	3, 0, 2, 1, 3, 4, 1, 3, 1, 3,
	8, 9, 1, 1, 10, 9, 8, 7, 7, 1,
	1, 1, 3, 1, 3, 1, 3, 0, 4, 3,
	4, 5, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 0, 0, 0, 2, 3, 3, 11, 9, 11,
	5, 5, 16, 12, 9, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 6, 5, 5,
	4, 3, 5, 1, 3, 1, 1, 1, 1, 1,
	0, 2, 2, 1, 1, 1, 1, 1, 4, 5,
	8, 4, 7, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 5, 5, 5, 6, 5, 7, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	2, 2, 5, 0, 1, 2, 1, 3, 5, 7,
	8, 7, 9, 10, 7, 9, 10, 2, 2, 2,
	2, 4, 2, 4, 2, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 3, 2, 4, 4, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 5, 5, 5, 1, 1,
	2, 3, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 1, 1, 0, 2, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 6, 8, 3,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 3, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 3, 3, 2, 2, 3, 2, 3, 4, 2,
	2, 1, 1, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 4, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 3, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 2,
	3, 2, 3, 5, 3, 5, 3, 5, 4, 5,
	4, 3, 1, 0, 1, 3, 3, 0, 1, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 2, 1, 2, 1, 2, 2, 3, 2, 2,
	2, 2, 1, 1, 1, 1, 3, 2, 1, 1,
	0, 3, 1, 1, 0, 1, 5, 4, 2, 2,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 3, 5, 5, 5, 4, 0, 1, 1,
	2, 2, 3, 2, 0, 1, 3, 5, 3, 3,
	5, 3, 2, 2, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 1,
	10, 11, 11, 12, 12, 3, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 2, 3, 3,
	3, 3, 3, 4, 4, 5, 3, 3, 4, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 3, 3, 3, 2, 2, 4, 4, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 5, 8, 1, 4, 5, 4,
	5, 5, 5, 5, 8, 0, 1, 0, 2, 0,
	4, 0, 2, 0, 2, 0, 2, 1, 1, 4,
	3, 5, 1, 3, 5, 4, 3, 5, 3, 8,
	10, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 4, 5, 1, 2, 2, 4, 3,
	6, 5, 3, 9, 2, 2, 0, 1, 2, 0,
	1, 7, 1, 3, 8, 8, 3, 3, 3, 5,
	3, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 0, 1, 1, 3, 2, 3, 4, 4, 1,
	3, 1, 1, 2, 2, 4, 4, 3, 3, 3,
	3, 3, 4, 3, 5, 5, 5, 4, 4, 4,
	3, 2, 2, 6, 2, 4, 3, 4, 4, 5,
	8, 6, 3, 5, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 3, 2, 0,
	1, 1, 2, 4, 1, 0, 1, 2, 1, 2,
	4, 4, 0, 1, 0, 3, 0, 2, 4, 4,
	2, 3, 4, 4, 5, 3, 3, 4, 3, 1,
	1, 1, 1, 0, 3, 1, 1, 1, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 0, 1,
	1, 0, 1, 1, 0, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 2, 6, 0,
	1, 0, 3, 0, 1, 0, 2, 2, 4, 1,
	2, 2, 2, 2, 2, 0, 2, 1, 3, 3,
	1, 3, 0, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 1, 3,
	1, 1, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 3, 2, 2, 2, 12, 11,
	1, 3, 3, 4, 3, 0, 0, 3, 4, 3,
	1, 3, 3, 2, 1, 1, 3, 1, 1, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 3, 6,
	6, 4, 6, 6, 4, 8, 8, 8, 8, 4,
	6, 7, 7, 7, 9, 4, 7, 5, 4, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 1, 3, 1, 0, 2, 1,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 0, 2, 4, 2, 4, 1,
	3, 5, 4, 6, 0, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 4, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 0, 4,
	0, 1, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 3, 3, 1, 3, 2, 4, 1, 2, 1,
	2, 2, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -399, -1, -3, -10, -11, -12, -13, -14, -16,
	-63, -17, -18, -19, -70, -73, -74, -75, -71, -72,
	-79, -80, -81, -77, -76, -25, -28, -20, -83, -38,
	-39, -40, -41, -42, -43, -44, -45, -47, -46, -5,
	6, 7, -111, 29, -66, 181, -65, -64, 184, 183,
	220, 185, 546, 337, 547, 213, 64, 369, -82, 372,
	373, -405, 272, 273, 20, 37, 374, 376, 30, 31,
	235, 300, 302, 188, 370, 357, 358, 327, -4, 552,
	182, 215, 214, 26, -6, -7, -400, 68, 663, -178,
	15, -88, -406, -88, -91, 9, 10, 8, 471, -88,
	-314, -238, 109, 68, 23, -233, -243, 89, 462, 189,
	-241, 296, 298, -231, -232, -240, 245, 255, 44, 200,
	199, 256, 190, 296, 190, 191, 193, 462, 189, 228,
	227, 296, 298, 546, 190, -132, -258, -247, -248, 314,
	73, -246, 488, 492, 495, 496, 501, 304, 82, 336,
	337, 328, 338, 210, 440, 297, 303, 306, 329, 630,
	339, 341, 342, 482, 483, 193, 203, 648, 321, 211,
	549, 256, 658, 651, 308, 430, 519, 369, 386, 378,
	401, 550, 601, 267, 377, 354, 447, 520, 311, 260,
	334, 602, 287, 436, 442, 270, 372, 540, 538, 521,
	456, 236, 603, 264, 266, 265, 250, 487, 271, 36,
	216, 397, 317, 547, 245, 604, 523, 597, 522, 239,
	535, 294, 35, 27, 537, 238, 459, 100, 605, 345,
	444, 524, 418, 346, 234, 606, 554, 315, 222, 443,
	359, 393, 327, 118, 243, 282, 347, 607, 419, 423,
	608, 448, 301, 281, 542, 609, 610, 348, 611, 192,
	307, 525, 612, 246, 450, 312, 417, 201, 551, 212,
	48, 225, 451, 421, 541, 427, 613, 344, 614, 615,
	616, 617, 325, 323, 526, 324, 326, 257, 262, 527,
	53, 187, 425, 424, 426, 263, 446, 406, 404, 618,
	619, 316, 207, 461, 620, 621, 405, 18, 622, 623,
	454, 286, 319, 624, 625, 626, 528, 543, 518, 627,
	628, 445, 420, 422, 244, 117, 546, 629, 322, 441,
	331, 553, 305, 539, 631, 350, 224, 218, 455, 355,
	366, 367, 340, 632, 358, 633, 634, 635, 636, 299,
	298, 373, 332, 529, 374, 268, 637, 638, 530, 639,
	640, 254, 237, 458, 449, 52, 432, 641, 335, 351,
	356, 364, 360, 362, 363, 365, 361, 435, 370, 231,
	531, 532, 533, 357, 534, 7, 261, 313, 544, 545,
	439, 333, 269, 255, 258, 408, 226, 642, 643, 395,
	396, 371, 229, 220, 112, 457, 292, 596, 296, 352,
	51, 232, 644, 645, 259, 233, 375, 310, 398, 190,
	73, -246, 73, -246, 546, 134, 402, 447, 181, 437,
	438, 444, -308, 445, 227, 355, 230, -263, 190, -226,
	436, 301, 322, 492, 233, 234, 191, 192, 32, 449,
	448, 440, -258, -84, 375, -84, -84, 194, 375, -97,
	222, 185, -132, 221, -60, 73, 274, -60, 29, 73,
	-138, -250, -258, 73, -246, 36, 73, 374, 439, 439,
	76, 553, 236, 21, -390, -371, 331, -389, -369, 182,
	181, 10, 183, 336, 337, 338, 300, 191, 8, 30,
	630, 208, 339, 340, 368, 6, 213, 341, 342, 228,
	9, 343, -374, 75, 73, -246, 21, -390, -371, 331,
	340, 355, 371, 355, 355, -235, -234, 353, 427, -110,
	600, -108, -117, -260, -258, -247, 75, 462, -222, 195,
	-90, 5, -9, -3, 552, -196, 17, 16, -94, 54,
	55, -89, -102, 125, -104, -258, -141, 92, -148, 28,
	24, -147, 314, 221, -142, -170, -247, -169, -120, 134,
	-262, 123, 124, 131, 93, 177, -155, -153, -154, -156,
	-158, -159, 75, 74, 83, 76, 77, 78, 79, 84,
	85, 86, -250, -248, -245, 488, 492, 495, 496, 501,
	-167, -400, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 58, 59, 486, 189, 472, 473,
	399, 8, 474, 475, 476, 548, 210, 480, 95, 47,
	291, 460, 470, 469, 468, 466, 467, 463, 465, 464,
	482, 483, 196, 462, 129, 471, 505, 506, 507, 508,
	509, 510, 511, 512, 514, 515, 513, 489, 490, 491,
	493, 494, 497, 498, 499, 500, 502, 503, 504, 555,
	186, 182, 185, 91, 23, 25, 556, 242, 94, 384,
	413, 479, 16, 20, 204, 188, 402, 202, 133, 198,
	205, 276, 278, 181, 62, 557, 277, 437, 558, 559,
	560, 561, 392, 390, 275, 562, 10, 26, 214, 249,
	563, 388, 183, 240, 98, 99, 564, 41, 40, 320,
	279, 215, 285, 389, 565, 566, 19, 65, 206, 11,
	200, 230, 657, 567, 300, 13, 116, 14, 568, 569,
	570, 571, 195, 111, 191, 647, 60, 247, 572, 382,
	573, 574, 575, 576, 577, 383, 88, 578, 579, 108,
	290, 56, 517, 32, 235, 598, 477, 289, 580, 38,
	37, 412, 416, 411, 288, 428, 109, 17, 30, 581,
	582, 223, 415, 381, 410, 599, 583, 584, 252, 63,
	353, 391, 661, 33, 66, 219, 349, 318, 42, 89,
	15, 248, 61, 34, 484, 113, 662, 394, 197, 227,
	586, 452, 251, 587, 114, 387, 600, 208, 110, 376,
	184, 330, 273, 209, 295, 302, 588, 241, 115, 438,
	589, 590, 481, 29, 213, 272, 380, 199, 591, 253,
	284, 274, 283, 592, 593, 309, 43, 659, 646, 190,
	39, 97, 414, 379, 409, 194, 478, 228, 280, 5,
	44, 31, 433, 9, 343, 64, 67, 403, 400, 594,
	407, 660, 12, 293, 485, 552, 453, 90, 595, 434,
	-88, -88, -88, -211, 371, -218, -215, 448, 449, -216,
	-219, -213, -170, 427, 627, 628, 447, 402, 446, -250,
	-258, -247, 314, 221, 134, 489, 490, 491, 95, 399,
	472, 505, 463, 465, 460, 464, 462, 28, 506, 24,
	86, 507, 486, 196, 8, 177, 493, 494, 508, 509,
	510, 58, 466, 467, 548, 129, 92, 511, 512, 84,
	514, 515, 291, 471, 59, 513, 189, 499, 498, 497,
	500, 474, 475, 85, 468, 469, 470, 47, 503, 502,
	504, -2, -6, 6, -132, -315, -302, -306, -250, -247,
	-248, -249, 217, 205, -341, 73, -246, 314, 221, 50,
	87, 55, 54, 202, 191, 193, 471, -229, 196, -229,
	228, 227, -242, 253, -229, -229, 190, -241, 101, 101,
	-67, -132, -373, -368, -374, -228, 196, -250, -228, -228,
	-228, -228, -228, -228, -228, 73, -246, -132, 178, -124,
	-132, 11, 11, 67, 67, 73, -246, 73, 29, -227,
	109, 12, 462, 189, 190, 227, 228, 193, -227, -310,
	11, 111, 231, 231, 231, 231, 232, 231, -225, 439,
	441, 229, 442, 443, 12, -105, 109, 19, -400, -196,
	-196, 126, -86, 91, -86, 73, 374, 194, -78, -3,
	-13, -11, -12, -97, -9, -150, 23, 101, 29, 29,
	75, 51, 29, -55, -54, -56, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 29, -352,
	68, 178, -297, 427, 73, -365, -366, -132, 76, 76,
	66, 322, 66, 69, 194, 69, 66, -391, 332, 68,
	-391, 298, 332, 333, 255, 296, 193, -391, -391, 298,
	-391, -391, -391, 318, -391, -391, 439, -391, -391, -391,
	334, 335, -391, -391, 437, 193, -391, -391, -391, -391,
	-391, 71, 66, 69, 322, 66, 11, 66, 356, 359,
	452, -143, 21, -334, 134, 345, 346, 347, 348, 344,
	322, 349, 350, 351, 231, 352, -4, -108, 69, -200,
	-400, 73, -290, -289, -286, -287, -288, -285, 28, 190,
	-8, -6, -400, 21, 22, -401, 70, -110, -197, 19,
	30, -151, 76, 79, -179, -182, -104, -258, 50, -92,
	21, 22, 81, 11, -253, 91, 89, 90, 108, -252,
	23, 73, -246, -247, 75, -248, -249, 178, -104, -145,
	111, 92, 109, 110, 94, 120, 119, 130, 123, 124,
	125, 126, 127, 128, 129, 121, 122, 133, 101, 102,
	103, 104, 105, 106, 107, -223, -400, -120, -400, 178,
	-400, 178, 179, 180, 178, -148, -148, -148, -148, -148,
	-148, -148, -400, 178, 178, -400, -400, -400, -400, -400,
	-9, -162, -104, 552, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -173,
	-104, -400, -400, -404, -157, -400, -404, -157, -404, -157,
	-404, -400, -404, -157, -404, -157, -404, -404, -157, -404,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -222,
	-222, 11, -124, -125, -135, -258, 69, -212, -217, 450,
	452, 371, -216, -216, -257, -250, 75, 28, 101, 29,
	178, -178, -88, 70, 69, -306, -265, -271, -273, -272,
	-274, -269, -270, 399, 402, 406, 404, 400, 405, 134,
	403, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 418, 29, 216, 395, 396, 397, 398, 419, 420,
	421, 422, 423, 424, 425, 426, 378, 401, 550, 379,
	380, 381, 382, 383, 384, 386, 387, 388, 389, 390,
	391, 392, 393, -265, -265, -265, -265, 73, 231, -247,
	-341, 68, -250, -132, -243, -241, 73, 92, 73, -131,
	-250, -258, -138, 254, -377, -376, -368, -371, -229, -242,
	-368, 259, 257, 258, 69, 194, 69, 194, 71, -124,
	24, 66, -126, -132, 73, 73, -131, -138, -370, -368,
	-371, -259, -258, -244, 555, 186, 21, 182, 185, 91,
	23, 25, 556, 242, 94, 384, 134, 489, 490, 491,
	413, 479, 16, 20, 204, 95, 188, 399, 402, 202,
	133, 198, 205, 276, 278, 472, 505, 181, 62, 557,
	463, 465, 460, 464, 277, 462, 437, 558, 559, 560,
	561, 392, 390, 275, 28, 562, 10, 506, 26, 214,
	249, 22, 563, 127, 388, 183, 516, 240, 98, 99,
	564, 41, 40, 320, 24, 279, 215, 86, 285, 507,
	389, 565, 566, 19, 65, 206, 11, 200, 230, 657,
	567, 300, 13, 486, 116, 14, 568, 569, 570, 571,
	196, 195, 111, 191, 647, 60, 247, 8, 572, 382,
	573, 574, 575, 576, 577, 383, 177, 88, 578, 579,
	108, 290, 56, 493, 494, 517, 45, 32, 235, 508,
	509, 598, 510, 477, 289, 580, 38, 37, 412, 416,
	411, 288, 428, 58, 109, 17, 466, 467, 30, 581,
	582, 548, 223, 415, 381, 410, 599, 583, 584, 129,
	252, 63, 92, 353, 511, 512, 84, 391, 661, 33,
	66, 219, 349, 318, 42, 89, 15, 248, 61, 34,
	484, 113, 662, 514, 394, 197, 227, 586, 452, 251,
	587, 114, 515, 387, 600, 208, 110, 376, 184, 291,
	471, 330, 273, 209, 295, 302, 59, 588, 241, 115,
	513, 189, 438, 589, 6, 590, 481, 29, 213, 272,
	380, 199, 591, 253, 284, 274, 283, 592, 49, 593,
	309, 43, 499, 498, 497, 500, 659, 57, 474, 475,
	646, 190, 39, 97, 414, 379, 409, 194, 478, 228,
	85, 280, 5, 44, 31, 433, 9, 343, 64, 67,
	468, 469, 470, 47, 403, 400, 594, 503, 407, 502,
	504, 660, 96, 12, 293, 485, 552, 453, 90, 595,
	434, 69, 75, 75, -206, -207, 73, -246, -206, -227,
	75, -262, -104, -229, -229, -132, -132, -132, -132, -132,
	-227, -227, -227, -227, -224, 11, 111, 11, -224, -224,
	-104, -148, -368, 464, 125, -258, -87, -85, 207, -85,
	-87, 73, 73, 374, -78, 33, 73, -55, -55, 75,
	-55, 69, 101, -55, -150, 70, -162, -250, -351, 647,
	69, -367, 23, 452, 453, 428, -393, 190, 230, 227,
	66, -393, -389, 340, -370, -369, -368, -391, -392, -250,
	-391, -391, -391, 439, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -374, -393, 300, 69, -393, -370, -368,
	194, -336, -338, 366, 367, 453, 454, 344, 344, 344,
	344, 344, 344, -117, 23, -199, -198, -251, -247, -248,
	-249, 217, -250, -244, -290, -287, -286, -288, 402, 447,
	133, 459, -132, -9, -208, 88, 9, 111, 69, 18,
	69, -195, 25, 26, 178, -149, 51, 76, 79, -230,
	49, -132, -104, -104, -104, -160, 84, 92, 85, 86,
	-252, 217, 125, -259, -251, -248, -247, 314, 221, -244,
	-148, -161, -167, -120, 80, 111, 109, 110, 94, -148,
	-148, -148, -148, -148, -148, -148, -148, -148, -148, -148,
	-148, -148, -148, -148, -261, 73, 75, 73, -251, -100,
	-103, 125, -104, -258, -251, -147, 84, -147, -250, -250,
	-92, -251, 440, -251, -92, -92, -92, -92, -92, -401,
	69, -401, -9, -100, -100, -100, -401, -104, -104, -100,
	-100, -170, 75, -100, -170, 75, -100, -148, 477, 478,
	479, -100, -100, -92, -171, -172, 96, -170, -100, -401,
	-148, -250, -250, -100, -101, -100, -100, -100, -401, -401,
	-103, -100, -103, -100, -100, -401, -401, -401, -401, -100,
	-100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
	-100, -134, 88, -132, -107, -112, -114, -115, -136, -119,
	-400, -113, -116, -132, -120, 73, 517, -132, -124, -402,
	11, 67, -402, 69, 178, -215, -218, 69, 451, 453,
	454, -212, -283, -284, 133, 66, 87, 75, -104, -251,
	-259, -196, -94, -317, -302, -304, -305, -306, -328, 205,
	-340, 197, 199, 200, 44, -307, 206, 191, 45, -266,
	-292, 432, 433, -276, 68, -275, 68, -275, 407, 399,
	402, 400, -275, -275, -275, -275, -275, 400, 68, 68,
	-276, -276, -276, -294, 68, -294, 394, -295, 68, -295,
	-295, -295, -295, -266, -266, -266, -266, -341, -341, -341,
	-104, -254, 67, 23, 193, -290, 24, -290, -61, 242,
	211, 178, 68, 245, 246, -372, 69, 28, -378, 297,
	-132, 221, -132, -132, -368, -368, -374, -348, 209, 204,
	-132, 69, 69, -132, 69, 75, 73, 73, -150, -311,
	11, 111, -227, -258, -258, -132, -150, -227, -98, 217,
	67, -404, -401, 376, 377, 73, -148, -54, -147, 70,
	-133, 88, 75, -366, -260, 427, 453, -394, 125, -250,
	-393, -394, -397, 552, 194, 70, 69, -391, -394, 318,
	300, -394, 11, -335, -337, 360, 361, 362, 363, 364,
	365, 69, 101, 101, -339, 19, -119, -400, -401, 69,
	178, 29, -313, 101, -313, -313, -69, -68, 186, 183,
	184, 187, 188, -344, 430, 182, 239, 238, 224, -401,
	-205, 34, 35, -250, 52, -151, -151, -182, -221, 19,
	11, 47, 47, -93, 57, 84, 85, 86, 178, -400,
	-161, -148, -148, -148, -98, 91, -401, 69, -401, 178,
	-101, -100, -100, -100, -100, -100, -104, -401, -401, -401,
	-401, 69, 67, 23, -401, 67, -401, 11, 11, -401,
	11, 11, -401, -401, 11, -148, -148, -148, -401, -401,
	-100, -174, -172, 98, -104, -401, -401, -401, 69, 69,
	-401, -401, -401, -401, -183, 484, -183, -401, -401, -401,
	-401, -401, -183, -183, -183, -183, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -203, 113,
	-132, 29, 69, -127, -129, -128, -130, 56, 60, 62,
	57, 58, 59, 440, 63, -238, -107, -118, 47, -400,
	-137, 113, -139, 23, -260, 64, 195, 65, -400, -400,
	-203, 67, -107, -107, -135, -258, 125, -217, -220, 455,
	452, 458, 73, 75, 75, 178, -197, -321, -318, 69,
	113, 654, 430, 519, 447, 28, 402, 520, 133, 82,
	521, 236, 36, 191, 523, 459, 345, 524, 525, 201,
	526, 527, 528, 306, 529, 370, 530, 531, 532, 533,
	333, 5, -306, 68, 73, -312, -247, 45, -307, -309,
	-307, -307, -312, 73, -312, 45, 84, 92, -282, -284,
	134, -279, -280, -296, -299, -277, 23, 657, 435, 402,
	28, 66, 430, 197, 45, 44, 200, 82, -293, 434,
	76, 76, 495, -275, -275, -275, 407, -275, -300, 75,
	-300, 76, -294, 76, 70, 66, -250, -192, -132, -62,
	8, 9, 10, -250, -353, -354, -355, -250, 111, 247,
	248, -381, 330, -376, 298, 307, 91, 16, 552, 194,
	194, -132, -368, -207, -140, 12, 73, 73, -224, -227,
	-148, -371, 233, 234, -203, 190, -367, 194, 178, 178,
	-394, 194, 321, -370, -250, 11, 11, 318, 11, -370,
	69, 101, 101, 101, 101, 101, 101, -338, 68, 68,
	354, -198, -251, -313, 73, 75, 134, 73, 75, 134,
	75, 69, -239, -307, -350, -305, -306, -349, 198, 205,
	-239, 205, 202, -307, 206, 197, 198, -236, -307, 194,
	23, -239, -239, -313, -239, 32, 32, 113, 69, 75,
	75, 53, -132, -99, -193, 125, -251, -101, -98, 91,
	-148, -103, 125, -259, -401, -401, -401, -401, -401, -401,
	-264, 134, 399, 216, 397, 390, 417, 404, 432, 395,
	433, -261, -264, -261, -148, -148, -148, -148, -148, 11,
	11, 11, 549, -178, 100, -104, 97, -148, -148, -250,
	-188, -400, -183, -183, -183, -183, -183, -184, -183, -184,
	-184, -184, -184, -184, -184, -184, -184, -184, -184, -184,
	-146, 29, 47, -400, -9, -400, -210, -214, -170, -247,
	-249, 217, 314, 221, -112, -114, -114, -112, -114, 56,
	56, 56, 61, 56, 61, 61, 56, 56, -128, -260,
	-401, -401, -166, 241, -400, 33, -260, -139, 191, 191,
	191, -101, -148, -140, -107, -140, -140, 178, 452, 456,
	457, -318, 16, -313, -313, -313, -313, 447, 402, 133,
	29, -313, -313, -313, -313, -313, 522, 522, -313, -313,
	-313, -313, -313, -313, -313, -313, -313, -313, -313, 371,
	-313, -313, -313, -313, -319, -398, 75, 76, 82, 336,
	306, 73, -246, -244, -313, -330, -329, -250, -247, 197,
	-340, 44, -340, -312, -312, -312, -312, 68, 84, -400,
	658, 76, 29, -147, 124, -142, 460, 466, 467, 461,
	-400, 85, 86, 9, 45, 45, 45, 75, 70, 70,
	70, -275, 70, 69, 70, 69, 70, 69, -144, 605,
	92, -132, -194, 23, 66, 70, 69, -265, -250, -250,
	-250, -384, 552, 303, -382, -380, 309, 310, 311, 312,
	313, -371, 308, -378, 305, 75, 73, -132, -368, -104,
	-150, -281, -282, -132, -370, 125, 125, -250, 194, -370,
	318, -396, 552, -370, -370, 11, -370, -337, 75, 75,
	75, 76, 76, 76, -124, -124, 75, 73, 75, 134,
	-68, 68, -301, 73, -246, -312, -232, 197, 73, 73,
	73, -247, -246, -248, -249, 73, -247, -246, -248, -249,
	-250, 45, 45, 73, -132, -250, -301, 73, -104, -250,
	-250, -250, -208, 69, -102, -401, -148, 178, -184, -184,
	-184, -184, -184, -401, -276, -276, -276, -295, -276, 383,
	-276, 383, -401, -401, -401, 19, 19, 19, 19, -401,
	-148, -148, -148, -400, -96, 481, -104, 69, 69, -255,
	73, -209, 66, -210, -165, -168, -167, -400, -9, -401,
	-199, 6, 552, -204, -250, -140, 69, 101, 101, 101,
	101, -122, -121, 66, 67, -123, 66, -121, 56, 56,
	56, -202, 68, 69, -167, -400, -204, -148, -139, -400,
	-400, -400, -401, 69, -178, -140, -322, -323, 114, 541,
	-324, 580, -319, -319, -319, -261, -313, 29, -313, -313,
	76, -398, 75, 75, 75, -313, -313, 76, 75, -398,
	75, 207, 210, 212, -319, -319, -319, 76, 75, -320,
	28, 537, 393, 538, 539, 540, 75, 28, 76, 28,
	76, -319, 534, -319, 70, 69, -276, -276, 45, -309,
	-201, -250, -148, 23, 73, 134, -147, -404, -400, -404,
	-400, -404, -400, -400, -148, -154, 460, 470, 469, 468,
	466, 467, 463, 465, 464, 482, 483, 75, 76, 76,
	605, 68, -9, -192, -132, -356, -357, -358, 82, 551,
	92, 249, 250, 207, 251, 252, 253, -355, -265, -265,
	-265, -387, -388, -386, 306, 328, 329, 314, -385, -383,
	323, 324, 325, 326, 91, 75, 75, 75, -379, 297,
	91, 306, 16, 23, -227, -359, -225, -396, -370, -396,
	300, -370, 70, 70, -301, -180, 210, 211, -265, -265,
	-254, -309, 45, 73, -237, 194, 23, 194, -180, -301,
	29, 183, 88, -109, 11, -193, -193, 125, -281, 73,
	-148, -148, -148, -148, -401, -401, -401, -148, -401, 75,
	-148, -148, -164, 113, 27, -209, 69, -401, -401, 47,
	-401, -401, 69, -178, -214, -104, -104, -104, -104, -104,
	68, -104, -201, 241, -401, -139, -238, -201, -201, -201,
	75, -196, -325, 543, -400, 442, -400, 442, 542, 45,
	-261, -313, -398, -261, 75, 75, 535, 536, -332, -331,
	67, 201, 82, -329, -195, -195, -312, -312, 70, 69,
	-401, -400, -100, -100, -100, -401, -100, -401, 70, 70,
	-330, -192, -194, 19, -193, -358, 75, 253, 249, 253,
	253, 253, 253, 254, -375, 82, 304, -386, 315, 610,
	299, 330, 76, 76, 112, 30, 31, -383, 76, 76,
	76, 76, -380, 16, 552, -378, 305, 75, 75, -360,
	38, -362, 39, -395, 23, -396, -395, 318, 70, 73,
	-266, -266, 68, -312, -312, 73, -250, -180, 28, 28,
	-400, -140, 516, -107, -102, -401, -401, -401, -401, -95,
	111, 552, -401, -401, -178, 16, 45, -168, -165, 47,
	-9, -400, -250, -196, -201, 70, -167, -137, -260, -401,
	-401, -401, 442, -326, 544, 76, -398, -400, -398, -400,
	-400, -400, 256, -261, -331, -398, -313, 75, 208, -250,
	-291, 660, 659, -148, -401, -401, -401, -401, 70, -9,
	240, -194, 36, 36, 245, 246, 75, 75, 28, 316,
	177, 28, 76, 177, 487, 305, 75, 73, 306, -278,
	195, -363, 43, -361, -298, 42, 16, -368, -395, -330,
	-254, 68, -148, -342, -343, 113, -175, 13, -193, -401,
	550, 63, 553, -189, 115, 114, -162, 9, -165, -9,
	70, -139, -400, -400, 16, -401, -201, -401, -201, -147,
	73, -201, 101, 76, -132, -401, -333, -332, -192, 241,
	-22, -3, -11, -12, -13, -14, -16, -63, -17, -18,
	-23, -24, -19, -70, -73, -74, -75, -71, -82, -80,
	-81, -77, -76, -27, -29, -30, -32, -35, -36, -33,
	-34, -31, -25, -28, -37, -20, -38, -39, -40, -44,
	-45, -26, -46, 95, 196, 370, 275, 286, 287, 288,
	73, 291, 293, 289, 290, 285, 295, 369, 76, 28,
	76, 28, 319, 306, 23, -202, 76, -362, 16, -364,
	40, 41, 75, 552, 70, 68, -330, -401, 69, -250,
	-176, 14, 16, 53, 551, 554, -401, -190, 94, -191,
	112, 487, -152, 76, 177, -190, -210, -401, -316, -303,
	-251, -342, -323, -401, -401, -401, -401, -401, 76, 68,
	-291, -181, 243, 244, -192, -104, -49, -50, 96, -104,
	73, -59, -256, 278, 279, 280, -251, 73, 73, -48,
	-22, 72, -48, -104, 73, 73, -403, 11, 50, -148,
	100, -48, 317, 317, 75, 38, 115, 75, 16, 16,
	298, -333, -330, 70, -343, 47, -186, 485, -177, -104,
	-163, -106, -104, 53, -191, 117, 118, 241, 117, 118,
	-147, -401, 69, -265, -401, -327, 545, -400, -201, -192,
	73, 73, -49, 100, 98, -50, -104, 97, 276, 277,
	281, -265, 69, 663, 369, 288, 291, 293, 663, 294,
	73, 11, 663, 75, 75, 28, 303, 21, -371, 70,
	-333, 225, -185, -187, -250, 69, 552, 91, -250, -401,
	-303, -267, 518, 24, 76, -201, 70, -194, 100, 98,
	95, -48, 97, -48, 19, 19, 19, -281, -251, 100,
	-22, 100, -48, -48, -48, -104, 292, -48, 88, 100,
	320, -333, 226, 69, 23, -106, 553, -191, 23, -260,
	75, 518, -401, -346, -347, 66, -15, -21, -14, -11,
	-12, -13, 369, 552, 95, -48, 663, -48, 663, -60,
	76, -9, -58, -57, 76, -60, 283, 92, 284, 73,
	-283, 288, 73, 663, 663, 663, 294, -104, 663, -53,
	73, -371, -400, -187, -188, 554, -260, -268, 75, -347,
	66, -346, 66, 10, 9, -192, -48, -110, 663, 100,
	663, 100, 98, -51, -52, 99, -22, 69, 282, 28,
	100, 100, 292, -48, 100, 100, 69, -148, 223, -407,
	84, 28, 346, -345, 209, 204, 207, 29, -345, 663,
	100, 95, 196, -48, 100, 98, -52, -104, -57, -148,
	73, 288, -104, 663, 291, 293, 73, -401, -401, 66,
	-148, 66, 203, 28, 84, 100, 95, 663, 196, -48,
	97, 73, 100, 100, 564, 66, 564, 100, 663, -48,
	291, 293, 564, 196, 100, 663, 73, 73, 196,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 1370,
	949, 949, 0, 949, 1051, -2, 777, 778, 0, 0,
	0, 0, 0, 0, 0, -2, 914, 915, 918, 915,
	915, 943, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, -2, 0,
	1447, 945, 946, 947, 45, 0, 0, 2333, 2, 1378,
	0, 958, 951, 0, 949, 949, 949, 72, 73, 0,
	104, 0, 0, 0, 1052, 0, 0, 0, 1445, 1445,
	263, 1445, 1445, 0, 1461, 261, 0, 1442, 1457, 1458,
	1459, 0, 0, 0, 1443, 0, 1443, 1443, 1443, 1443,
	1443, 1443, 1443, 0, 0, 845, 1085, 1087, 1088, 1089,
	1470, 1471, 2328, 2329, 2330, 2331, 2332, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 0,
	0, 0, 853, 854, 0, 0, 0, 905, 0, 905,
	871, 872, 0, 874, 0, 0, 0, 0, 0, 0,
	885, 888, 892, 0, 1378, 1378, 654, 655, 656, 910,
	911, 899, 912, 917, 916, 924, 924, 0, 916, 61,
	-2, 0, 1032, 0, 360, 362, 0, 382, 0, 385,
	388, 1090, 0, -2, -2, 1476, 930, 0, 0, 1501,
	1502, 0, 0, 0, 0, 0, 2214, 201, 277, 203,
	203, 203, 203, 203, 203, 203, 0, 203, 203, 0,
	203, 203, 203, 2226, 203, 203, 0, 203, 203, 203,
	203, 203, 276, 266, 267, 268, 0, 0, 0, 2214,
	0, 618, 919, 619, 621, 0, 615, 612, 613, 62,
	0, 50, 63, 1394, 1053, 1054, 1055, -2, 0, 1448,
	0, 953, 0, 43, 0, 1384, 0, 0, 961, 959,
	960, 950, 0, 972, 1002, 0, 1099, 1935, 1105, -2,
	1848, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1793,
	0, 0, 0, 0, 0, 1890, 1178, 1179, 1180, 1181,
	1182, 1183, 1351, 1352, 1353, 1354, 1355, 1356, 1357, -2,
	-2, -2, 1337, 1338, 0, 2328, 2329, 2330, 2331, 2332,
	1411, 0, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1916, 1979, 1867, 1984, 1812, 0,
	1804, 1881, 2008, 2009, 0, 1924, 2309, 0, -2, 2033,
	1972, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2319, 2320, 1874, 1822, 1932, 1973, 1813, 1834, 1853, 1902,
	1903, 1905, 1937, 1938, 1956, 1965, 1983, 1794, 1795, 1796,
	1897, 1898, 2005, 2004, 2003, 2006, 2039, 2037, 2040, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1814, 1815, 1816, 1821, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1832, 1833, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1849, 1850, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871,
	1872, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1894,
	1895, 1896, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1921, 1922,
	1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934,
	1936, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970,
	1971, 1974, 1975, 1976, 1977, 1978, 1980, 1981, 1982, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2007, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2034, 2035, 2036,
	2038, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	1447, 1447, 0, 89, 2285, 0, 1418, -2, -2, 1420,
	0, 0, 0, -2, -2, -2, -2, 1805, -2, 1337,
	0, 0, 0, 0, 1793, 1794, 1795, 1796, 1802, 1804,
	1812, 1813, 1817, 1818, 1819, 1820, 1822, 1831, 1834, 1848,
	1851, 1853, 1867, 1874, 1881, 1890, 1897, 1898, 1902, 1903,
	1905, 1916, 1919, 1920, 1924, 1932, 1935, 1937, 1938, 1939,
	1956, 1965, 1972, 1973, 1979, 1983, 1984, 2003, 2004, 2005,
	2006, 2008, 2009, 2020, 2030, 2031, 2032, 2033, 2037, 2039,
	2040, 105, 1370, 949, 106, 0, 438, 439, 0, 0,
	0, 0, 0, 0, 679, 1464, 1465, 2322, 2323, 2324,
	2325, 2326, 2327, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 1445, 263, 0, 0,
	826, 0, 827, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 859, 860, 844, 0, 846,
	83, 0, 0, 0, 0, 857, 858, 861, 905, 863,
	0, 0, 1445, 1445, 0, 0, 0, 0, 870, 0,
	681, 682, 905, 876, 905, 905, 905, 902, 0, 902,
	882, 902, 900, 901, 0, 887, 0, 0, 0, 895,
	896, 0, -2, 922, -2, 931, 0, 0, 936, 939,
	940, 941, 942, 61, 938, 948, 0, 0, 0, 0,
	364, 0, 0, 384, 366, 0, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 1032,
	0, 0, 1474, 1477, 935, 1492, 1493, 0, 1503, 1504,
	207, 0, 207, 0, 0, 0, 0, 168, 203, 0,
	170, 203, 203, 203, 0, 203, 203, 177, 178, 203,
	180, 181, 182, 203, 184, 185, 203, 187, 188, 189,
	203, 203, 192, 193, 203, 203, 196, 197, 198, 199,
	200, 275, 207, 0, 0, 207, 0, 0, 0, 0,
	0, 620, 622, 597, 0, 0, 0, 0, 602, 603,
	604, 605, 0, 0, 608, 609, -2, 49, 0, 0,
	0, -2, 780, -2, 575, 576, 577, 0, 572, 0,
	46, 68, 0, 954, 955, 67, 2334, 0, 55, 0,
	0, 1379, 1382, 1383, 1371, 1372, 1375, 0, 0, 956,
	962, 963, 952, 0, 973, 0, 0, 0, 0, 1003,
	0, 1006, 1007, 1008, 1009, 1010, 1011, 0, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1106, 0, 1120, 0, 0,
	0, 0, 0, 0, 0, 1171, 1172, 1173, 1174, 1175,
	1176, 0, 961, 0, 0, 961, 961, 961, 961, 961,
	0, 0, 1146, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 961, 0,
	1329, 0, 0, 1240, 1249, 0, 1241, 1250, 1242, 1251,
	1243, 0, 1244, 1252, 1245, 1253, 1246, 1247, 1254, 1248,
	0, 0, 0, 1142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 1085, 0, 90, 92, 0,
	0, 2285, 1421, 1422, 567, 1436, 1437, 1438, 0, 1434,
	0, 1378, 958, 696, 0, 440, 456, 544, 471, 472,
	473, 534, 475, 536, 536, 0, 536, 536, 536, 536,
	536, 511, 512, 513, 514, 515, 517, 518, 519, 520,
	521, 0, 0, 494, 534, 534, 534, 498, 524, 525,
	526, 527, 528, 529, 530, 531, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 539, 539, 541, 541,
	541, 541, 541, 456, 456, 456, 456, 0, 0, 0,
	678, 0, 1462, 0, 0, 263, -2, 0, -2, 0,
	1080, 0, 0, 0, 116, 293, 279, 115, 0, 257,
	262, 258, 259, 260, 0, 0, 0, 0, 270, 841,
	1444, 0, 834, 81, 835, 836, 837, 838, 839, 272,
	840, 1086, 1472, 1473, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 0, 847, 848, 855, 849, 851, 852, 856, 862,
	906, 0, 908, 0, 0, 1032, 867, 868, 869, 683,
	875, 877, 878, 884, 905, 0, 0, 0, 1032, 905,
	886, 1134, 889, 1257, 0, 913, 928, 0, 923, 0,
	929, 933, 932, 0, 937, 0, 944, 361, 363, 365,
	383, 0, 0, 386, 387, 389, 0, 1091, 0, 0,
	0, 1495, 0, 1497, 1499, 0, 0, 208, 209, 210,
	207, 0, 202, 0, 225, 278, 0, 169, 0, 205,
	171, 172, 173, 203, 175, 176, 179, 183, 186, 190,
	191, 194, 195, 274, 0, 0, 0, 0, 166, 0,
	0, 617, 631, 0, 0, 920, 921, 598, 599, 600,
	601, 610, 607, 64, 0, 0, 1396, 1399, 1400, 1401,
	1402, 1403, 1468, 1469, 779, 578, 579, 580, 0, 644,
	644, 644, 0, 0, 41, 0, 1385, 0, 0, 0,
	0, 1374, 1376, 1377, 0, 0, 1359, 0, 0, 964,
	957, 44, 1100, 1101, 1102, 1104, 1121, 0, 1123, 1125,
	1004, 1005, 974, 0, 1339, 1340, 1341, 1342, 1343, -2,
	1111, 1112, 1136, 1137, 1138, 0, 0, 0, 0, 1134,
	1116, 0, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1170, 1271, 1272, 0, 1348, 0,
	1144, 968, 969, 0, 1349, 1168, 1358, 1169, 1344, 1177,
	1142, 1346, 1347, 1345, 0, 0, 0, 0, 0, 1139,
	0, 1410, 0, 0, 0, 0, 1218, 0, 0, 0,
	0, 1152, 1351, 0, 1152, 1351, 0, 0, 1906, 2018,
	1798, 0, 0, 0, 1335, 1332, 0, 0, 0, 1258,
	0, 0, 0, 0, 0, 1143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 1084, 0, 1012, 1014, 1015, 1016, -2,
	0, 1020, 1021, 1093, 1140, 1470, 0, -2, 0, 0,
	79, 80, 0, 0, 0, 1419, 0, 0, 0, 95,
	96, 91, 1423, 568, 0, -2, 1430, 1351, 1432, 1339,
	0, 1384, 961, 753, 441, 443, 444, 445, 0, 661,
	669, 0, 0, 659, 661, 661, 0, 657, 658, 448,
	547, 545, 546, 474, 0, 499, 0, 500, 536, 536,
	536, 536, 503, 504, 506, 509, 510, 516, 0, 0,
	495, 496, 497, 486, 0, 487, 539, 489, 0, 490,
	491, 492, 493, 449, 450, 451, 452, 675, 676, 677,
	0, 0, 0, 101, 0, 110, 1446, 111, 0, 295,
	296, 0, 228, 264, 265, 118, 0, 0, 280, 0,
	435, 436, 0, 828, 0, 830, 269, 832, 842, 843,
	833, 0, 0, 84, 0, 907, 864, 865, 866, 1097,
	0, 0, 879, 903, 904, 902, 905, 883, 897, 0,
	0, 890, 0, 927, 925, 934, 1033, 367, 368, 390,
	87, 0, 1475, 1494, 0, 1498, 1500, 0, 211, 213,
	0, 0, 160, 0, 0, 204, 0, 174, 0, 0,
	0, 0, 0, 616, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 0, 65, 0, 1395, 0,
	0, 644, 0, 645, 0, 0, 781, 782, -2, 819,
	1454, 819, 819, 805, 644, 819, 0, 0, 0, 69,
	56, 0, 2106, 59, 0, 1380, 1381, 1373, 0, 1439,
	1440, 1360, 1361, 102, 965, 1122, 1124, 1126, 0, 1142,
	1113, 1134, 1117, 0, 1114, 0, 1108, 0, 1216, 0,
	0, 0, 0, 0, 0, 0, 1147, -2, 1214, 1215,
	1217, 0, 0, 0, 1221, 0, 1224, 0, 0, 1264,
	0, 0, 1265, 1229, 0, 0, 0, 0, 0, 1235,
	1370, 0, 1333, 0, 0, 1238, 1239, 1259, 0, 0,
	1260, 1261, 1262, 1263, 1203, 0, 1204, 0, 0, 0,
	0, 0, 1210, 1211, 1212, 1213, 983, 983, 983, 983,
	983, 983, 983, 983, 983, 983, 983, 983, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 1056, 0, 0,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1025, 0, 1027, 0, 1093, 0, 0, 0, 1142, 0,
	1097, 0, 1097, 1097, 86, 0, 1092, 93, 94, 0,
	0, 100, 569, 570, 1431, 0, 227, 437, 697, 0,
	0, 644, 644, 644, 644, 0, 0, 644, 644, 644,
	644, 644, 0, 0, 644, 644, 644, 644, 644, 644,
	644, 644, 644, 644, 644, 0, 644, 644, 644, 644,
	0, 644, 442, 0, 662, 0, 0, 661, 661, 661,
	660, 661, 652, 662, 653, 0, 457, 0, 459, 460,
	461, 462, 463, 464, 465, 466, 0, 0, 0, 0,
	0, 0, 562, 0, 592, 594, 0, 0, 470, 548,
	0, 0, 0, 505, 501, 502, 536, 507, 0, 532,
	0, 0, 488, 0, 693, 0, 1463, 103, 0, 0,
	297, 298, 299, 1081, 0, 229, 230, 0, 0, 0,
	0, 128, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 82, 273, 850, 873, 0, 684, 685, 1032, 881,
	1135, 891, 893, 894, 563, 0, 1496, 0, 0, 0,
	0, 0, 0, 223, 206, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 1397, 1398, 0, 584, 585, 586, 587, 588, 589,
	590, 0, 0, 661, 0, 806, 807, 0, 820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1455,
	1456, 0, 0, 0, 0, 814, 815, 0, 0, 57,
	58, 1386, 42, 55, 0, 975, 1350, 0, 1115, 0,
	1118, 1145, 970, 0, 1184, 983, 983, 983, 983, 983,
	0, 534, 534, 1318, 534, 541, 1321, 534, 1323, 534,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 1237, 1336, 0, 0, 0, 976,
	977, 979, 1205, 1206, 1207, 1208, 1209, 1188, 984, 1189,
	1190, 1192, 1193, 1195, 1196, 1197, 1198, 1200, 1201, 1202,
	1404, 0, 0, 0, 1389, 0, 1097, 1412, 0, 0,
	0, 0, 2322, 2323, 1013, 1047, 1049, 0, 1044, 1057,
	1058, 1060, 0, 1062, 0, 0, 1065, 1066, 1067, 1034,
	1019, 1141, 1022, 0, 0, 0, 1093, 1031, 0, 0,
	0, 0, 0, 1370, 1097, 77, 78, 0, 97, 98,
	99, 698, 765, 0, 0, 0, 0, 644, 0, 644,
	644, 0, 0, 0, 0, 0, 644, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 0, 734, 735, 739, 740, 741, 742,
	743, 750, 751, 752, 0, 0, 663, 534, 534, 0,
	667, 659, 668, 646, 648, 649, 651, 0, 458, 0,
	0, 469, 0, 549, 0, 551, 1257, 1257, 1257, 0,
	0, 1109, 1110, 0, 591, 593, 595, 596, 535, 537,
	538, 508, 522, 0, 523, 0, 542, 0, 680, 694,
	0, 0, 0, 101, 0, 236, 0, 232, 0, 0,
	0, 136, 0, 119, 120, 121, 123, 124, 0, 0,
	0, 117, 0, 282, 0, 285, 286, 829, 831, 1098,
	905, 1486, 564, 1082, 223, 212, 214, 215, 0, 223,
	226, 161, 0, 162, 164, 0, 163, 624, 625, 626,
	627, 628, 629, 630, 0, 0, 611, 581, 582, 583,
	783, 0, 816, 0, 0, 1462, 659, 0, -2, 786,
	791, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 0, 812, 0, 788, 0, 816, 0, 809, 0,
	0, 60, 52, 102, 102, 1185, 1119, 0, 1187, 1191,
	1186, 1194, 1199, 1219, 1315, 563, 1319, 1320, 1322, 1324,
	1325, 1327, 1223, 1220, 1222, 0, 0, 0, 0, 1230,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 981,
	980, 70, 0, 1404, 1387, 1406, 1408, 0, 0, 0,
	0, -2, 1777, 0, 1038, 1370, 0, 0, 0, 0,
	0, 1041, 1048, 0, 0, 1042, 0, 1043, 1061, 1063,
	1064, 1017, 0, 0, 1023, 0, 0, -2, 1030, 0,
	0, 0, 1040, 0, 1378, 76, 767, 756, 0, 0,
	0, 766, 699, 700, 701, 702, 0, 644, 0, 0,
	706, 707, 709, 710, 711, 0, 0, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	744, 745, 746, 747, 748, 749, 728, 729, 730, 731,
	732, 733, 0, 738, 636, 0, 1375, 1375, 661, 661,
	0, 1036, 0, 0, 565, 566, 550, 552, 0, 554,
	0, 556, 0, 0, 0, 561, 1257, 1257, 1257, 1257,
	1257, 1257, 1257, 1257, 1257, 0, 0, 533, 0, 0,
	695, 0, 101, 103, 0, 102, 237, 238, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 231, 233, 234,
	235, 154, 137, 138, 0, 0, 0, 0, 129, 130,
	0, 0, 0, 0, 0, 125, 126, 127, 281, 0,
	0, 284, 0, 0, 880, 1488, 1482, 216, 223, 216,
	0, 165, 633, 634, 0, 785, 817, 0, 456, 456,
	0, 661, 661, 808, 0, 1452, 1453, 0, 803, 816,
	0, 0, 0, 1097, 0, 0, 966, 971, 1316, 1317,
	0, 0, 0, 0, 1231, 1232, 1233, 1266, 1236, 1331,
	0, 0, 1370, 0, 0, 71, 0, 1409, -2, 0,
	0, 88, 0, 1378, 1413, 1414, 1415, 1416, 1417, 1045,
	0, 1050, 0, 0, 1093, 1028, 0, 0, 0, 0,
	0, 75, 769, 0, 0, 0, 0, 0, 0, 0,
	703, 0, 708, 704, 712, 713, 736, 737, 635, 639,
	0, 644, 0, 664, 665, 666, 647, 650, 0, 0,
	453, 0, 0, 0, 0, 558, 0, 560, 540, 543,
	0, 108, 0, 0, 103, 239, 240, 241, 242, 244,
	245, 0, 0, 0, 114, 0, 0, 139, 0, 0,
	0, 0, 149, 150, 151, 152, 153, 131, 132, 133,
	134, 135, 122, 0, 0, 283, 0, 288, 289, 1449,
	1490, -2, 0, 157, 0, 216, 159, 224, 784, 818,
	446, 447, 0, 1462, 0, 787, 802, 804, 0, 811,
	0, 1362, 53, 54, 102, 1225, 1227, 1226, 1228, 0,
	0, 0, 1255, 1256, 985, 0, 0, 1407, 1388, 0,
	1392, 0, 1039, 74, 0, 1035, 1024, 1026, 1093, 1094,
	1095, 1096, 0, 754, 0, 768, 0, 0, 0, 0,
	0, 0, 0, 705, 640, 641, 0, 643, 0, 1037,
	467, 454, 455, 0, 553, 555, 557, 559, 637, 101,
	0, 61, 246, 247, 248, 249, 155, 156, 140, 141,
	0, 143, 144, 0, 0, 0, 291, 0, 287, 1034,
	0, 1482, 0, 1484, 0, 1481, 0, 217, 158, 0,
	0, 0, 810, 0, 822, 0, 1367, 0, 967, 1234,
	0, 0, 0, 0, 0, 0, 982, 0, 1391, 0,
	1046, 1029, 0, 0, 765, 757, 0, 759, 0, 0,
	0, 0, 0, 642, 0, 453, 107, 638, 109, 300,
	101, 393, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 0, 0, 0, 0, 0, 0, 61,
	0, 61, 0, 0, 0, 343, 0, 61, 0, 145,
	0, 147, 148, 290, 0, 40, 0, 1489, 0, 1487,
	0, 0, 1483, 0, 637, 0, 0, 821, 0, 0,
	995, 0, 0, 1267, 0, 1270, 978, 986, 0, 989,
	0, 0, 0, 1000, 0, 987, 1405, -2, 0, 1070,
	0, 0, 771, 758, 760, 761, 762, 763, 0, 0,
	468, 101, 0, 0, 113, 0, 0, 313, 0, 0,
	1464, 0, 0, -2, -2, -2, 1466, 340, 341, 0,
	391, 0, 0, 0, 357, 358, 0, 344, 0, 359,
	250, 0, 142, 146, 292, 1450, 1451, 1491, 0, 0,
	0, 789, 0, 637, 823, 0, 51, 0, 1368, 1369,
	1363, 1364, 1366, 1268, 0, 990, 991, 992, 993, 994,
	0, 0, 0, 0, 755, 770, 0, 0, 0, 103,
	301, 302, 0, 0, 61, 314, 0, 61, 0, 0,
	0, 563, 0, 61, 61, 61, 61, 0, 61, 61,
	0, 345, 61, 1485, 1479, 218, 219, 220, 222, 637,
	813, 0, 996, 997, 0, 0, 0, 0, 1001, 0,
	1071, 1072, 0, 0, 772, 0, 670, 61, 0, 61,
	311, 0, 61, 0, 0, 0, 0, 567, 1467, 0,
	392, 251, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 790, 0, 0, 0, 1365, 0, 988, 0, 1069,
	1075, 0, 764, 671, 672, 0, 101, 303, 304, 305,
	306, 307, 61, 0, 309, 0, 61, 0, 61, 323,
	324, 325, 61, 332, 334, 335, 336, 0, 338, 339,
	327, 348, 252, 61, 61, 61, 61, 0, 61, 342,
	346, 221, 0, 998, 999, 1269, 1068, 1076, 1074, 673,
	0, 674, 0, 0, 0, 112, 0, 62, 61, 0,
	-2, 0, 61, 0, 320, 0, 326, 0, 337, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 1925, 1073,
	0, 0, 0, 686, 688, 689, 0, 0, 687, 61,
	0, 312, 316, 0, 0, 61, 321, 0, 333, 328,
	255, 349, 0, 61, 351, 354, 347, 824, 825, 0,
	0, 0, 690, 691, 692, 308, 310, 61, 318, 0,
	61, 350, 0, 0, 1077, 0, 1079, 0, 61, 0,
	352, 355, 1078, 317, 0, -2, 353, 356, 319,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 93, 3, 3, 3, 128, 120, 3,
	68, 70, 125, 123, 69, 124, 178, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 72, 663,
	102, 101, 103, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 94, 95, 96, 97,
	98, 99, 100, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 121, 122,
	127, 129, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:570
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:616
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:622
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:628
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:639
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:655
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 51:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:692
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:700
		{
			yyVAL.tableExprs = nil
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyVAL.tableExprs = nil
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:717
		{
			yyVAL.into = nil
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:721
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:744
		{
			yyVAL.with = nil
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:748
		{
			yyVAL.with = yyDollar[2].with
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:754
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:758
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:764
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:778
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:784
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:798
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 71:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:811
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:823
		{
			yyVAL.str = InsertStr
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:827
		{
			yyVAL.str = ReplaceStr
		}
	case 74:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:833
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 75:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:839
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:843
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:847
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:851
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:861
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:890
		{
			yyVAL.partitions = nil
		}
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:894
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:904
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:911
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:930
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:948
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:952
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:956
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:961
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:966
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:971
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:977
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 107:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:996
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1000
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1006
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1012
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1020
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 112:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1028
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1032
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 114:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1036
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1055
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1064
		{
			yyVAL.accountNames = nil
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1068
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1073
		{
			yyVAL.tlsOptionItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1118
		{
			yyVAL.accountLimitItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1138
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1142
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItems = nil
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1175
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1183
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1187
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1195
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1199
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1203
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1207
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1232
		{
			yyVAL.str = ""
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 157:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1247
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 158:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1252
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 159:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1257
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1261
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1265
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 162:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1271
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1276
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 164:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1280
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 165:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1284
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1288
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1292
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1298
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1338
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1346
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1374
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1378
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1382
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1386
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1390
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Dynamic, Columns: yyDollar[2].strs, DynamicName: "REPLICATION_SLAVE_ADMIN"}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1410
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1414
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1418
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1422
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1426
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1441
		{
			yyVAL.strs = nil
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1460
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1482
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1490
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1494
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1499
		{
			yyVAL.grantAssumption = nil
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1503
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1507
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1511
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1515
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1519
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1523
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1528
		{
			yyVAL.boolean = false
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			yyVAL.boolean = true
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1537
		{
			yyVAL.boolean = false
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.boolean = true
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1548
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1560
		{
			yyVAL.procedureParams = nil
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1580
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1584
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1588
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1597
		{
			yyVAL.characteristics = nil
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1617
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1621
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1625
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1633
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1637
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1641
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1645
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1649
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.statement = &BeginEndBlock{Label: ""}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1663
		{
			yyVAL.statement = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1667
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &BeginEndBlock{Label: label}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1676
		{
			yyVAL.statement = &BeginEndBlock{Label: "", Statements: yyDollar[2].statements}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1680
		{
			yyVAL.statement = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements}
		}
	case 255:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1684
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &BeginEndBlock{Label: label, Statements: yyDollar[4].statements}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1695
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1699
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = ""
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1755
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1783
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1813
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1827
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1831
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 283:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1835
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1841
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1845
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1853
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1857
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1861
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1867
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1875
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = BeforeStr
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = AfterStr
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = InsertStr
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = UpdateStr
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = DeleteStr
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1914
		{
			yyVAL.triggerOrder = nil
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1938
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 310:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &CaseStatement{Expr: nil, Cases: yyDollar[2].caseStatementCases}
		}
	case 312:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1956
		{
			yyVAL.statement = &CaseStatement{Expr: nil, Cases: yyDollar[2].caseStatementCases, Else: yyDollar[4].statements}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1972
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 316:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1978
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 317:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1983
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 318:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1988
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 319:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1994
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2012
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2018
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2022
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 326:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2034
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2040
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2067
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.statement = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statement = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2111
		{
			yyVAL.statement = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].strs}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2116
		{
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.strs = []string{string(yyDollar[1].bytes)}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[3].bytes))
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2133
		{
			yyVAL.statement = &Loop{Label: "", Statements: yyDollar[2].statements}
		}
	case 349:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2137
		{
			yyVAL.statement = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements}
		}
	case 350:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2141
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &Loop{Label: label, Statements: yyDollar[4].statements}
		}
	case 351:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2152
		{
			yyVAL.statement = &Repeat{Label: "", Statements: yyDollar[2].statements, Condition: yyDollar[5].expr}
		}
	case 352:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2156
		{
			yyVAL.statement = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements, Condition: yyDollar[7].expr}
		}
	case 353:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2160
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &Repeat{Label: label, Statements: yyDollar[4].statements, Condition: yyDollar[7].expr}
		}
	case 354:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2171
		{
			yyVAL.statement = &While{Label: "", Condition: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 355:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2175
		{
			yyVAL.statement = &While{Label: string(yyDollar[1].bytes), Condition: yyDollar[4].expr, Statements: yyDollar[6].statements}
		}
	case 356:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2179
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &While{Label: label, Condition: yyDollar[4].expr, Statements: yyDollar[6].statements}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2190
		{
			yyVAL.statement = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2196
		{
			yyVAL.statement = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2202
		{
			yyVAL.statement = &Return{Expr: yyDollar[2].expr}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2212
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2220
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2226
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.statement = &Resignal{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2322
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2328
		{
			yyVAL.statement = &Call{ProcName: yyDollar[2].procedureName, Params: yyDollar[3].exprs, AsOf: yyDollar[4].expr}
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2333
		{
			yyVAL.exprs = nil
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yyVAL.exprs = nil
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2341
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2404
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2418
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2434
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2451
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2457
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2461
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2488
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2514
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2539
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2547
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2592
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2601
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2646
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 468:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2655
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2675
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2938
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2953
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2958
		{
			yyVAL.sqlVal = nil
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2967
		{
			yyVAL.sqlVal = nil
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2971
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2975
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2980
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2984
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2992
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2996
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3002
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3010
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3014
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3018
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3023
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3027
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3033
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3037
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3055
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3059
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3063
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3067
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3071
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3075
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3079
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3083
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3087
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3093
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3099
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3104
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.str = yyDollar[1].str
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = ""
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = yyDollar[1].str
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3137
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3142
		{
			yyVAL.boolean = false
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.boolean = true
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3151
		{
			yyVAL.charsetCollates = nil
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3173
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3187
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3191
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3195
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3199
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3203
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3207
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3213
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3217
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3221
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3227
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.colKeyOpt = colKey
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3241
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3245
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3255
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3267
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3271
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3275
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3287
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3303
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = ""
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3318
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3322
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3324
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3327
		{
			yyVAL.str = ""
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.str = yyDollar[1].str
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3333
		{
			yyVAL.statement = &ChangeReplicationSource{Options: yyDollar[5].replicationOptions}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3337
		{
			yyVAL.statement = &ChangeReplicationFilter{Options: yyDollar[4].replicationOptions}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3341
		{
			yyVAL.statement = &StartReplica{}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3345
		{
			yyVAL.statement = &StopReplica{}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.statement = &ResetReplica{All: yyDollar[3].boolean}
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3354
		{
			yyVAL.boolean = false
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.boolean = true
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3361
		{
			yyVAL.replicationOptions = []*ReplicationOption{yyDollar[1].replicationOption}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3365
		{
			yyVAL.replicationOptions = append(yyVAL.replicationOptions, yyDollar[3].replicationOption)
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3387
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3391
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.replicationOptions = []*ReplicationOption{yyDollar[1].replicationOption}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3401
		{
			yyVAL.replicationOptions = append(yyVAL.replicationOptions, yyDollar[3].replicationOption)
		}
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3407
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].tableNames}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3411
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].tableNames}
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3417
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3421
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3426
		{
			yyVAL.indexOptions = nil
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3446
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3450
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3455
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3461
		{
			yyVAL.str = ""
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3477
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3485
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3489
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3498
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3502
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3506
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = ""
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = yyDollar[1].str
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3544
		{
			yyVAL.str = ""
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3548
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3554
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3558
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3564
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3568
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3574
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 670:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3588
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 671:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3592
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 672:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3596
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 673:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3600
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 674:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3604
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3610
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3623
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3633
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3648
		{
			yyVAL.str = ""
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3662
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3668
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3674
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3686
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3695
		{
			yyVAL.boolean = true
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.boolean = true
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.boolean = false
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3708
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3738
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3742
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3746
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3750
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3758
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3762
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3766
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3770
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3774
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3778
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3782
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3786
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3790
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3794
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3798
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3802
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3806
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3810
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3814
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3870
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3874
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3878
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3919
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3938
		{
			yyVAL.str = ""
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 755:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3946
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = yyDollar[1].str
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 764:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3986
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = ""
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4027
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4031
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4036
		{
			yyVAL.str = string("")
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4050
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].bytes), CharsetCollate: yyDollar[4].charsetCollates}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4054
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, CharsetCollate: yyDollar[3].charsetCollates}
		}
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4060
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4077
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4083
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4090
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4101
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 789:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4110
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 790:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:4114
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4118
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4123
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4128
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4133
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4138
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4143
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4148
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4153
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4158
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4172
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4176
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4183
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4193
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4205
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 810:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4214
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4218
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4222
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 813:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4228
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4234
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4238
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.columnOrder = nil
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4256
		{
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
		}
	case 821:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4262
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4272
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 824:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4278
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 825:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4282
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4302
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4310
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4314
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4320
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4328
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4332
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4340
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4348
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4356
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4364
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4372
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4380
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{

		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4403
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4413
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4419
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4423
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4433
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4450
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4454
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4458
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4462
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4491
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4499
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4503
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4507
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4512
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4516
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4520
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4528
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4532
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4536
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4540
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4544
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4548
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4552
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4556
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4560
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 880:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4564
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 881:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4569
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4574
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4578
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4582
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4586
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4590
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4604
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4608
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4613
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4617
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4622
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4626
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4630
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4638
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4650
		{
			yyVAL.boolean = false
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4654
		{
			yyVAL.boolean = true
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4670
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4674
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4684
		{
			yyVAL.showFilter = nil
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4688
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4692
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4696
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = ""
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = SessionStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = GlobalStr
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4716
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4720
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4729
		{
			yyVAL.bytes = nil
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4739
		{
			yyVAL.statement = &Begin{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4743
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4749
		{
			yyVAL.statement = &Begin{}
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4753
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4757
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4762
		{
			yyVAL.bytes = nil
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4766
		{
			yyVAL.bytes = nil
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4771
		{
			yyVAL.bytes = nil
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4775
		{
			yyVAL.bytes = nil
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4780
		{
			yyVAL.bytes = nil
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4784
		{
			yyVAL.bytes = nil
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4790
		{
			yyVAL.statement = &Commit{}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4796
		{
			yyVAL.statement = &Rollback{}
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4802
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4808
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4812
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4816
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4820
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4836
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[3].str, Statement: yyDollar[4].statement}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4854
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4876
		{
			setAllowComments(yylex, true)
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4880
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4886
		{
			yyVAL.bytes2 = nil
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4890
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4896
		{
			yyVAL.str = UnionStr
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4900
		{
			yyVAL.str = UnionAllStr
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = UnionDistinctStr
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4909
		{
			yyVAL.byt = 0
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4913
		{
			yyVAL.byt = 1
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4918
		{
			yyVAL.str = ""
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4922
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4926
		{
			yyVAL.str = SQLCacheStr
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4931
		{
			yyVAL.str = ""
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4935
		{
			yyVAL.str = ""
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4939
		{
			yyVAL.str = DistinctStr
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4944
		{
			yyVAL.str = ""
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.str = StraightJoinHint
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4962
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4973
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4977
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4981
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4985
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4991
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4995
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4999
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5003
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5009
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5013
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5019
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5024
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5032
		{
			yyVAL.exprs = nil
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5036
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5041
		{
			yyVAL.over = nil
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
			yyVAL.over = yyDollar[1].over
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5050
		{
			yyVAL.frame = nil
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5054
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5058
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5065
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5103
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5107
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5111
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5115
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5122
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5130
		{
			yyVAL.window = nil
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5133
		{
			yyVAL.window = yyDollar[2].window
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5139
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5142
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5148
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5157
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5161
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5166
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5174
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5178
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5184
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5196
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5204
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5210
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5214
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5224
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5228
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5238
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5244
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5252
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5258
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5262
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5268
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5273
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5284
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5288
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5292
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5296
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5300
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5311
		{
			yyVAL.expr = nil
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5315
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5320
		{
			yyVAL.columns = nil
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5324
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5334
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5340
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5344
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5350
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5364
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5368
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5372
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5376
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5382
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5384
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5388
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5394
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5396
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5399
		{
			yyVAL.empty = struct{}{}
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.empty = struct{}{}
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5410
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5416
		{
			yyVAL.str = JoinStr
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5420
		{
			yyVAL.str = JoinStr
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5424
		{
			yyVAL.str = JoinStr
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = StraightJoinStr
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5436
		{
			yyVAL.str = LeftJoinStr
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5440
		{
			yyVAL.str = LeftJoinStr
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5444
		{
			yyVAL.str = RightJoinStr
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5448
		{
			yyVAL.str = RightJoinStr
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5452
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5456
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = NaturalJoinStr
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5466
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 1068:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5476
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 1069:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5480
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5491
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5499
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5511
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5521
		{

		}
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5539
		{

		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5543
		{

		}
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5547
		{

		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5551
		{

		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5557
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5561
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5567
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5573
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5577
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5587
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5595
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5599
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5605
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5609
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5615
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5620
		{
			yyVAL.indexHints = nil
		}
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5624
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5628
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5632
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5637
		{
			yyVAL.expr = nil
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5641
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5647
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5651
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5655
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5659
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5663
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5667
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5675
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5681
		{
			yyVAL.str = ""
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5685
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5691
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5695
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5701
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5705
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5709
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5713
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5717
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5721
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5725
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5729
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5733
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5737
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5743
		{
			yyVAL.str = IsNullStr
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5747
		{
			yyVAL.str = IsNotNullStr
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5751
		{
			yyVAL.str = IsTrueStr
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5755
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5759
		{
			yyVAL.str = IsFalseStr
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5763
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = EqualStr
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = LessThanStr
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5777
		{
			yyVAL.str = GreaterThanStr
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5781
		{
			yyVAL.str = LessEqualStr
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5785
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5789
		{
			yyVAL.str = NotEqualStr
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5793
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5798
		{
			yyVAL.expr = nil
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5802
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5808
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5812
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5816
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5822
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5828
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5832
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5838
		{
			yyVAL.selectExprs = nil
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5845
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5849
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5855
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5859
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5865
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5869
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5873
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5877
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5881
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5889
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5893
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5897
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5901
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5905
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5909
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5913
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5917
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5921
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5925
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5929
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5933
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5937
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5941
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5945
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5949
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5953
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5957
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5961
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5965
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5973
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5987
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5991
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5995
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6015
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6019
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6029
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6033
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6037
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6041
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6045
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6049
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6053
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6057
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6061
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6065
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6069
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6073
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6081
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6085
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6089
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6093
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6102
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6106
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6110
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6114
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6118
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6122
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6126
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6130
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6134
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6138
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6142
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6153
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6157
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6161
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6165
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6169
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6173
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6177
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6181
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6185
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6189
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6193
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6197
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1226:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6201
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6205
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6209
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6213
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6217
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1231:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6221
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1232:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6225
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1233:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6229
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1234:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:6233
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6237
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1236:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6241
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6245
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6249
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6253
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6263
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6267
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6271
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6276
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6281
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6286
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6292
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6297
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6301
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6306
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6310
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6314
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6319
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6324
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6329
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6333
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6337
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6348
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6358
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6362
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6366
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6370
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6374
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6378
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6384
		{
			yyVAL.str = ""
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6388
		{
			yyVAL.str = BooleanModeStr
		}
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6392
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1269:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6396
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6400
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6406
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6410
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6416
		{
			yyVAL.str = Armscii8Str
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6420
		{
			yyVAL.str = AsciiStr
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6424
		{
			yyVAL.str = Big5Str
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6428
		{
			yyVAL.str = UBinaryStr
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6432
		{
			yyVAL.str = Cp1250Str
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6436
		{
			yyVAL.str = Cp1251Str
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6440
		{
			yyVAL.str = Cp1256Str
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6444
		{
			yyVAL.str = Cp1257Str
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6448
		{
			yyVAL.str = Cp850Str
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6452
		{
			yyVAL.str = Cp852Str
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6456
		{
			yyVAL.str = Cp866Str
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6460
		{
			yyVAL.str = Cp932Str
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6464
		{
			yyVAL.str = Dec8Str
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6468
		{
			yyVAL.str = EucjpmsStr
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6472
		{
			yyVAL.str = EuckrStr
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6476
		{
			yyVAL.str = Gb18030Str
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6480
		{
			yyVAL.str = Gb2312Str
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6484
		{
			yyVAL.str = GbkStr
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6488
		{
			yyVAL.str = Geostd8Str
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6492
		{
			yyVAL.str = GreekStr
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6496
		{
			yyVAL.str = HebrewStr
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6500
		{
			yyVAL.str = Hp8Str
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6504
		{
			yyVAL.str = Keybcs2Str
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6508
		{
			yyVAL.str = Koi8rStr
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6512
		{
			yyVAL.str = Koi8uStr
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6516
		{
			yyVAL.str = Latin1Str
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6520
		{
			yyVAL.str = Latin2Str
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6524
		{
			yyVAL.str = Latin5Str
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6528
		{
			yyVAL.str = Latin7Str
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6532
		{
			yyVAL.str = MacceStr
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6536
		{
			yyVAL.str = MacromanStr
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6540
		{
			yyVAL.str = SjisStr
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6544
		{
			yyVAL.str = Swe7Str
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6548
		{
			yyVAL.str = Tis620Str
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6552
		{
			yyVAL.str = Ucs2Str
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6556
		{
			yyVAL.str = UjisStr
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6560
		{
			yyVAL.str = Utf16Str
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6564
		{
			yyVAL.str = Utf16leStr
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6568
		{
			yyVAL.str = Utf32Str
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6572
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6576
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6580
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6586
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6590
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6594
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6598
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6602
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6606
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6612
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6616
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6620
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6624
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6628
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6632
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6636
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6641
		{
			yyVAL.expr = nil
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6645
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6650
		{
			yyVAL.str = string("")
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6654
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6660
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6664
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6670
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6675
		{
			yyVAL.expr = nil
		}
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6679
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6685
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6689
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6693
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6697
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6701
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6705
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6709
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6713
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6717
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6721
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6725
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6729
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6733
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6737
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6743
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6747
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6751
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6755
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6759
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6763
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6767
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6771
		{
			yyVAL.expr = &NullVal{}
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6777
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6781
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6785
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6790
		{
			yyVAL.exprs = nil
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6794
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6800
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6804
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6810
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6815
		{
			yyVAL.expr = nil
		}
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6819
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6825
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6830
		{
			yyVAL.orderBy = nil
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6834
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6840
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6844
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6850
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6855
		{
			yyVAL.str = AscScr
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6859
		{
			yyVAL.str = AscScr
		}
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6863
		{
			yyVAL.str = DescScr
		}
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6868
		{
			yyVAL.limit = nil
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6872
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6876
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6880
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6886
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6890
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6895
		{
			yyVAL.str = ""
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6899
		{
			yyVAL.str = ForUpdateStr
		}
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6903
		{
			yyVAL.str = ShareModeStr
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6916
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6920
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6924
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6928
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6933
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6937
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6941
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6947
		{
			yyVAL.columns = nil
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6951
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6957
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6961
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6967
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6971
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6975
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6979
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6983
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6987
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6992
		{
			yyVAL.assignExprs = nil
		}
	case 1405:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6996
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7002
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7006
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7012
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7016
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7022
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7028
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7038
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7042
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7048
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7051
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7055
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7059
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7065
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7069
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7075
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7086
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7099
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7112
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7118
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7122
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7128
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7132
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7136
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7142
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7146
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7150
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7158
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7165
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7172
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7176
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7180
		{
			yyVAL.expr = &Default{}
		}
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7189
		{
			yyVAL.byt = 0
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7191
		{
			yyVAL.byt = 1
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7194
		{
			yyVAL.byt = 0
		}
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7196
		{
			yyVAL.byt = 1
		}
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7199
		{
			yyVAL.byt = 0
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7201
		{
			yyVAL.byt = 1
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7204
		{
			yyVAL.str = ""
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7206
		{
			yyVAL.str = IgnoreStr
		}
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7209
		{
			yyVAL.sqlVal = nil
		}
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7211
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7213
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7217
		{
			yyVAL.empty = struct{}{}
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7219
		{
			yyVAL.empty = struct{}{}
		}
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7222
		{
			yyVAL.empty = struct{}{}
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7224
		{
			yyVAL.empty = struct{}{}
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7226
		{
			yyVAL.empty = struct{}{}
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7230
		{
			yyVAL.str = UniqueStr
		}
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7232
		{
			yyVAL.str = FulltextStr
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7234
		{
			yyVAL.str = SpatialStr
		}
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7237
		{
			yyVAL.str = ""
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7239
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7242
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7244
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7248
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7252
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7258
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7262
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7269
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7275
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7279
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7286
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7291
		{
			yyVAL.str = string("")
		}
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7293
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7296
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7298
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7301
		{
			yyVAL.EnclosedBy = nil
		}
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7305
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7310
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7314
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7319
		{
			yyVAL.sqlVal = nil
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7323
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7328
		{
			yyVAL.sqlVal = nil
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7332
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7337
		{
			yyVAL.Fields = nil
		}
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7341
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7346
		{
			yyVAL.Lines = nil
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7350
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7355
		{
			yyVAL.sqlVal = nil
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7359
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7365
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7371
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7375
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7381
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7385
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7391
		{
			yyVAL.lockType = LockRead
		}
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7395
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7399
		{
			yyVAL.lockType = LockWrite
		}
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7403
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7409
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7415
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7419
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7423
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8293
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8302
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
