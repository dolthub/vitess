// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const RETURNING = 57368
const ALL = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const OF = 57381
const OUTFILE = 57382
const DUMPFILE = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const OPTIONALLY = 57390
const STARTING = 57391
const UNIQUE = 57392
const KEY = 57393
const SYSTEM_TIME = 57394
const CONTAINED = 57395
const VERSION = 57396
const VERSIONS = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const SQL_CALC_FOUND_ROWS = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const STRING = 57419
const ID = 57420
const HEX = 57421
const INTEGRAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const VALUE_ARG = 57425
const LIST_ARG = 57426
const COMMENT = 57427
const COMMENT_KEYWORD = 57428
const BIT_LITERAL = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const OFF = 57433
const INTO = 57434
const OR = 57435
const XOR = 57436
const AND = 57437
const NOT = 57438
const BETWEEN = 57439
const CASE = 57440
const WHEN = 57441
const THEN = 57442
const ELSE = 57443
const ELSEIF = 57444
const END = 57445
const LE = 57446
const GE = 57447
const NE = 57448
const NULL_SAFE_EQUAL = 57449
const IS = 57450
const LIKE = 57451
const REGEXP = 57452
const IN = 57453
const ASSIGNMENT_OP = 57454
const UNBOUNDED = 57455
const PARTITION = 57456
const RANGE = 57457
const ROWS = 57458
const GROUPS = 57459
const PRECEDING = 57460
const FOLLOWING = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_ARMSCII8 = 57469
const UNDERSCORE_ASCII = 57470
const UNDERSCORE_BIG5 = 57471
const UNDERSCORE_BINARY = 57472
const UNDERSCORE_CP1250 = 57473
const UNDERSCORE_CP1251 = 57474
const UNDERSCORE_CP1256 = 57475
const UNDERSCORE_CP1257 = 57476
const UNDERSCORE_CP850 = 57477
const UNDERSCORE_CP852 = 57478
const UNDERSCORE_CP866 = 57479
const UNDERSCORE_CP932 = 57480
const UNDERSCORE_DEC8 = 57481
const UNDERSCORE_EUCJPMS = 57482
const UNDERSCORE_EUCKR = 57483
const UNDERSCORE_GB18030 = 57484
const UNDERSCORE_GB2312 = 57485
const UNDERSCORE_GBK = 57486
const UNDERSCORE_GEOSTD8 = 57487
const UNDERSCORE_GREEK = 57488
const UNDERSCORE_HEBREW = 57489
const UNDERSCORE_HP8 = 57490
const UNDERSCORE_KEYBCS2 = 57491
const UNDERSCORE_KOI8R = 57492
const UNDERSCORE_KOI8U = 57493
const UNDERSCORE_LATIN1 = 57494
const UNDERSCORE_LATIN2 = 57495
const UNDERSCORE_LATIN5 = 57496
const UNDERSCORE_LATIN7 = 57497
const UNDERSCORE_MACCE = 57498
const UNDERSCORE_MACROMAN = 57499
const UNDERSCORE_SJIS = 57500
const UNDERSCORE_SWE7 = 57501
const UNDERSCORE_TIS620 = 57502
const UNDERSCORE_UCS2 = 57503
const UNDERSCORE_UJIS = 57504
const UNDERSCORE_UTF16 = 57505
const UNDERSCORE_UTF16LE = 57506
const UNDERSCORE_UTF32 = 57507
const UNDERSCORE_UTF8 = 57508
const UNDERSCORE_UTF8MB3 = 57509
const UNDERSCORE_UTF8MB4 = 57510
const INTERVAL = 57511
const JSON_EXTRACT_OP = 57512
const JSON_UNQUOTE_EXTRACT_OP = 57513
const CREATE = 57514
const ALTER = 57515
const DROP = 57516
const RENAME = 57517
const ANALYZE = 57518
const ADD = 57519
const MODIFY = 57520
const CHANGE = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const INDEXES = 57525
const VIEW = 57526
const TO = 57527
const IGNORE = 57528
const IF = 57529
const PRIMARY = 57530
const COLUMN = 57531
const SPATIAL = 57532
const VECTOR = 57533
const FULLTEXT = 57534
const KEY_BLOCK_SIZE = 57535
const CHECK = 57536
const ACTION = 57537
const CASCADE = 57538
const CONSTRAINT = 57539
const FOREIGN = 57540
const NO = 57541
const REFERENCES = 57542
const RESTRICT = 57543
const FIRST = 57544
const AFTER = 57545
const LAST = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const FORMAT = 57555
const EXTENDED = 57556
const PLAN = 57557
const MAXVALUE = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const TRIGGERS = 57564
const FUNCTION = 57565
const STATUS = 57566
const VARIABLES = 57567
const WARNINGS = 57568
const ERRORS = 57569
const KILL = 57570
const CONNECTION = 57571
const SEQUENCE = 57572
const ENABLE = 57573
const DISABLE = 57574
const EACH = 57575
const ROW = 57576
const BEFORE = 57577
const FOLLOWS = 57578
const PRECEDES = 57579
const DEFINER = 57580
const INVOKER = 57581
const INOUT = 57582
const OUT = 57583
const DETERMINISTIC = 57584
const CONTAINS = 57585
const READS = 57586
const MODIFIES = 57587
const SQL = 57588
const SECURITY = 57589
const TEMPORARY = 57590
const ALGORITHM = 57591
const MERGE = 57592
const TEMPTABLE = 57593
const UNDEFINED = 57594
const EVENT = 57595
const EVENTS = 57596
const SCHEDULE = 57597
const EVERY = 57598
const STARTS = 57599
const ENDS = 57600
const COMPLETION = 57601
const PRESERVE = 57602
const CASCADED = 57603
const INSTANT = 57604
const INPLACE = 57605
const COPY = 57606
const DISCARD = 57607
const IMPORT = 57608
const SHARED = 57609
const EXCLUSIVE = 57610
const WITHOUT = 57611
const VALIDATION = 57612
const COALESCE = 57613
const EXCHANGE = 57614
const REBUILD = 57615
const REMOVE = 57616
const PARTITIONING = 57617
const CLASS_ORIGIN = 57618
const SUBCLASS_ORIGIN = 57619
const MESSAGE_TEXT = 57620
const MYSQL_ERRNO = 57621
const CONSTRAINT_CATALOG = 57622
const CONSTRAINT_SCHEMA = 57623
const CONSTRAINT_NAME = 57624
const CATALOG_NAME = 57625
const SCHEMA_NAME = 57626
const TABLE_NAME = 57627
const COLUMN_NAME = 57628
const CURSOR_NAME = 57629
const SIGNAL = 57630
const RESIGNAL = 57631
const SQLSTATE = 57632
const DECLARE = 57633
const CONDITION = 57634
const CURSOR = 57635
const CONTINUE = 57636
const EXIT = 57637
const UNDO = 57638
const HANDLER = 57639
const FOUND = 57640
const SQLWARNING = 57641
const SQLEXCEPTION = 57642
const FETCH = 57643
const OPEN = 57644
const CLOSE = 57645
const LOOP = 57646
const LEAVE = 57647
const ITERATE = 57648
const REPEAT = 57649
const UNTIL = 57650
const WHILE = 57651
const DO = 57652
const RETURN = 57653
const USER = 57654
const IDENTIFIED = 57655
const ROLE = 57656
const REUSE = 57657
const GRANT = 57658
const GRANTS = 57659
const REVOKE = 57660
const NONE = 57661
const ATTRIBUTE = 57662
const RANDOM = 57663
const PASSWORD = 57664
const INITIAL = 57665
const AUTHENTICATION = 57666
const SSL = 57667
const X509 = 57668
const CIPHER = 57669
const ISSUER = 57670
const SUBJECT = 57671
const ACCOUNT = 57672
const EXPIRE = 57673
const NEVER = 57674
const OPTION = 57675
const OPTIONAL = 57676
const ADMIN = 57677
const PRIVILEGES = 57678
const MAX_QUERIES_PER_HOUR = 57679
const MAX_UPDATES_PER_HOUR = 57680
const MAX_CONNECTIONS_PER_HOUR = 57681
const MAX_USER_CONNECTIONS = 57682
const FLUSH = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const REQUIRE = 57686
const PROXY = 57687
const ROUTINE = 57688
const TABLESPACE = 57689
const CLIENT = 57690
const SLAVE = 57691
const EXECUTE = 57692
const FILE = 57693
const RELOAD = 57694
const REPLICATION = 57695
const SHUTDOWN = 57696
const SUPER = 57697
const USAGE = 57698
const LOGS = 57699
const ENGINE = 57700
const ERROR = 57701
const GENERAL = 57702
const HOSTS = 57703
const OPTIMIZER_COSTS = 57704
const RELAY = 57705
const SLOW = 57706
const USER_RESOURCES = 57707
const NO_WRITE_TO_BINLOG = 57708
const CHANNEL = 57709
const UNKNOWN = 57710
const APPLICATION_PASSWORD_ADMIN = 57711
const AUDIT_ABORT_EXEMPT = 57712
const AUDIT_ADMIN = 57713
const AUTHENTICATION_POLICY_ADMIN = 57714
const BACKUP_ADMIN = 57715
const BINLOG_ADMIN = 57716
const BINLOG_ENCRYPTION_ADMIN = 57717
const CLONE_ADMIN = 57718
const CONNECTION_ADMIN = 57719
const ENCRYPTION_KEY_ADMIN = 57720
const FIREWALL_ADMIN = 57721
const FIREWALL_EXEMPT = 57722
const FIREWALL_USER = 57723
const FLUSH_OPTIMIZER_COSTS = 57724
const FLUSH_STATUS = 57725
const FLUSH_TABLES = 57726
const FLUSH_USER_RESOURCES = 57727
const GROUP_REPLICATION_ADMIN = 57728
const GROUP_REPLICATION_STREAM = 57729
const INNODB_REDO_LOG_ARCHIVE = 57730
const INNODB_REDO_LOG_ENABLE = 57731
const NDB_STORED_USER = 57732
const PASSWORDLESS_USER_ADMIN = 57733
const PERSIST_RO_VARIABLES_ADMIN = 57734
const REPLICATION_APPLIER = 57735
const REPLICATION_SLAVE_ADMIN = 57736
const RESOURCE_GROUP_ADMIN = 57737
const RESOURCE_GROUP_USER = 57738
const ROLE_ADMIN = 57739
const SENSITIVE_VARIABLES_OBSERVER = 57740
const SESSION_VARIABLES_ADMIN = 57741
const SET_USER_ID = 57742
const SHOW_ROUTINE = 57743
const SKIP_QUERY_REWRITE = 57744
const SYSTEM_VARIABLES_ADMIN = 57745
const TABLE_ENCRYPTION_ADMIN = 57746
const TP_CONNECTION_ADMIN = 57747
const VERSION_TOKEN_ADMIN = 57748
const XA_RECOVER_ADMIN = 57749
const REPLICA = 57750
const REPLICAS = 57751
const SOURCE = 57752
const STOP = 57753
const RESET = 57754
const FILTER = 57755
const LOG = 57756
const MASTER = 57757
const SOURCE_HOST = 57758
const SOURCE_SSL = 57759
const SOURCE_USER = 57760
const SOURCE_PASSWORD = 57761
const SOURCE_PORT = 57762
const SOURCE_CONNECT_RETRY = 57763
const SOURCE_RETRY_COUNT = 57764
const SOURCE_AUTO_POSITION = 57765
const REPLICATE_DO_TABLE = 57766
const REPLICATE_IGNORE_TABLE = 57767
const IO_THREAD = 57768
const SQL_THREAD = 57769
const BEGIN = 57770
const START = 57771
const TRANSACTION = 57772
const COMMIT = 57773
const ROLLBACK = 57774
const SAVEPOINT = 57775
const WORK = 57776
const RELEASE = 57777
const CHAIN = 57778
const CONSISTENT = 57779
const SNAPSHOT = 57780
const BIT = 57781
const TINYINT = 57782
const SMALLINT = 57783
const MEDIUMINT = 57784
const INT = 57785
const INTEGER = 57786
const BIGINT = 57787
const INTNUM = 57788
const SERIAL = 57789
const INT1 = 57790
const INT2 = 57791
const INT3 = 57792
const INT4 = 57793
const INT8 = 57794
const REAL = 57795
const DOUBLE = 57796
const FLOAT_TYPE = 57797
const DECIMAL = 57798
const NUMERIC = 57799
const DEC = 57800
const FIXED = 57801
const PRECISION = 57802
const TIME = 57803
const TIMESTAMP = 57804
const DATETIME = 57805
const CHAR = 57806
const VARCHAR = 57807
const BOOL = 57808
const CHARACTER = 57809
const VARBINARY = 57810
const NCHAR = 57811
const NVARCHAR = 57812
const NATIONAL = 57813
const VARYING = 57814
const VARCHARACTER = 57815
const TEXT = 57816
const TINYTEXT = 57817
const MEDIUMTEXT = 57818
const LONGTEXT = 57819
const LONG = 57820
const BLOB = 57821
const TINYBLOB = 57822
const MEDIUMBLOB = 57823
const LONGBLOB = 57824
const JSON = 57825
const ENUM = 57826
const GEOMETRY = 57827
const POINT = 57828
const LINESTRING = 57829
const POLYGON = 57830
const GEOMETRYCOLLECTION = 57831
const MULTIPOINT = 57832
const MULTILINESTRING = 57833
const MULTIPOLYGON = 57834
const LOCAL = 57835
const LOW_PRIORITY = 57836
const SKIP = 57837
const LOCKED = 57838
const NULLX = 57839
const AUTO_INCREMENT = 57840
const APPROXNUM = 57841
const SIGNED = 57842
const UNSIGNED = 57843
const ZEROFILL = 57844
const SRID = 57845
const COLLATION = 57846
const DATABASES = 57847
const SCHEMAS = 57848
const TABLES = 57849
const FULL = 57850
const PROCESSLIST = 57851
const COLUMNS = 57852
const FIELDS = 57853
const ENGINES = 57854
const PLUGINS = 57855
const NAMES = 57856
const CHARSET = 57857
const GLOBAL = 57858
const SESSION = 57859
const ISOLATION = 57860
const LEVEL = 57861
const READ = 57862
const WRITE = 57863
const ONLY = 57864
const REPEATABLE = 57865
const COMMITTED = 57866
const UNCOMMITTED = 57867
const SERIALIZABLE = 57868
const ENCRYPTION = 57869
const CURRENT_TIMESTAMP = 57870
const NOW = 57871
const DATABASE = 57872
const CURRENT_DATE = 57873
const CURRENT_USER = 57874
const CURRENT_TIME = 57875
const LOCALTIME = 57876
const LOCALTIMESTAMP = 57877
const UTC_DATE = 57878
const UTC_TIME = 57879
const UTC_TIMESTAMP = 57880
const REPLACE = 57881
const CONVERT = 57882
const CAST = 57883
const POSITION = 57884
const SUBSTR = 57885
const SUBSTRING = 57886
const TRIM = 57887
const LEADING = 57888
const TRAILING = 57889
const BOTH = 57890
const GROUP_CONCAT = 57891
const SEPARATOR = 57892
const TIMESTAMPADD = 57893
const TIMESTAMPDIFF = 57894
const EXTRACT = 57895
const GET_FORMAT = 57896
const OVER = 57897
const WINDOW = 57898
const GROUPING = 57899
const CURRENT = 57900
const AVG = 57901
const BIT_AND = 57902
const BIT_OR = 57903
const BIT_XOR = 57904
const COUNT = 57905
const JSON_ARRAYAGG = 57906
const JSON_OBJECTAGG = 57907
const MAX = 57908
const MIN = 57909
const STDDEV_POP = 57910
const STDDEV = 57911
const STD = 57912
const STDDEV_SAMP = 57913
const SUM = 57914
const VAR_POP = 57915
const VARIANCE = 57916
const VAR_SAMP = 57917
const CUME_DIST = 57918
const DENSE_RANK = 57919
const FIRST_VALUE = 57920
const LAG = 57921
const LAST_VALUE = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const ROW_NUMBER = 57926
const PERCENT_RANK = 57927
const RANK = 57928
const DUAL = 57929
const JSON_TABLE = 57930
const PATH = 57931
const AVG_ROW_LENGTH = 57932
const CHECKSUM = 57933
const COMPACT = 57934
const COMPRESSED = 57935
const COMPRESSION = 57936
const DISK = 57937
const DIRECTORY = 57938
const DELAY_KEY_WRITE = 57939
const DYNAMIC = 57940
const ENGINE_ATTRIBUTE = 57941
const ENCRYPTED = 57942
const ENCRYPTION_KEY_ID = 57943
const HASH = 57944
const INSERT_METHOD = 57945
const ITEF_QUOTES = 57946
const LIST = 57947
const MIN_ROWS = 57948
const MAX_ROWS = 57949
const PACK_KEYS = 57950
const MEMORY = 57951
const PAGE_CHECKSUM = 57952
const PAGE_COMPRESSED = 57953
const PAGE_COMPRESSION_LEVEL = 57954
const PARTITIONS = 57955
const REDUNDANT = 57956
const ROW_FORMAT = 57957
const SECONDARY_ENGINE = 57958
const SECONDARY_ENGINE_ATTRIBUTE = 57959
const STATS_AUTO_RECALC = 57960
const STATS_PERSISTENT = 57961
const STATS_SAMPLE_PAGES = 57962
const STORAGE = 57963
const SUBPARTITION = 57964
const SUBPARTITIONS = 57965
const TABLE_CHECKSUM = 57966
const TRANSACTIONAL = 57967
const VERSIONING = 57968
const YES = 57969
const PREPARE = 57970
const DEALLOCATE = 57971
const MATCH = 57972
const AGAINST = 57973
const BOOLEAN = 57974
const LANGUAGE = 57975
const WITH = 57976
const QUERY = 57977
const EXPANSION = 57978
const MICROSECOND = 57979
const SECOND = 57980
const MINUTE = 57981
const HOUR = 57982
const DAY = 57983
const WEEK = 57984
const MONTH = 57985
const QUARTER = 57986
const YEAR = 57987
const SECOND_MICROSECOND = 57988
const MINUTE_MICROSECOND = 57989
const MINUTE_SECOND = 57990
const HOUR_MICROSECOND = 57991
const HOUR_SECOND = 57992
const HOUR_MINUTE = 57993
const DAY_MICROSECOND = 57994
const DAY_SECOND = 57995
const DAY_MINUTE = 57996
const DAY_HOUR = 57997
const YEAR_MONTH = 57998
const NAME = 57999
const SYSTEM = 58000
const ACCESSIBLE = 58001
const ASENSITIVE = 58002
const CUBE = 58003
const DELAYED = 58004
const DISTINCTROW = 58005
const EMPTY = 58006
const FLOAT4 = 58007
const FLOAT8 = 58008
const GET = 58009
const HIGH_PRIORITY = 58010
const INSENSITIVE = 58011
const IO_AFTER_GTIDS = 58012
const IO_BEFORE_GTIDS = 58013
const LINEAR = 58014
const MASTER_BIND = 58015
const MASTER_SSL_VERIFY_SERVER_CERT = 58016
const MIDDLEINT = 58017
const PURGE = 58018
const READ_WRITE = 58019
const RLIKE = 58020
const SENSITIVE = 58021
const SPECIFIC = 58022
const SQL_BIG_RESULT = 58023
const SQL_SMALL_RESULT = 58024
const UNUSED = 58025
const DESCRIPTION = 58026
const LATERAL = 58027
const MEMBER = 58028
const RECURSIVE = 58029
const BUCKETS = 58030
const CLONE = 58031
const COMPONENT = 58032
const DEFINITION = 58033
const ENFORCED = 58034
const NOT_ENFORCED = 58035
const EXCLUDE = 58036
const GEOMCOLLECTION = 58037
const GET_MASTER_PUBLIC_KEY = 58038
const HISTOGRAM = 58039
const HISTORY = 58040
const INACTIVE = 58041
const INVISIBLE = 58042
const MASTER_COMPRESSION_ALGORITHMS = 58043
const MASTER_PUBLIC_KEY_PATH = 58044
const MASTER_TLS_CIPHERSUITES = 58045
const MASTER_ZSTD_COMPRESSION_LEVEL = 58046
const NESTED = 58047
const NETWORK_NAMESPACE = 58048
const NOWAIT = 58049
const NULLS = 58050
const OJ = 58051
const OLD = 58052
const ORDINALITY = 58053
const ORGANIZATION = 58054
const OTHERS = 58055
const PERSIST = 58056
const PERSIST_ONLY = 58057
const PRIVILEGE_CHECKS_USER = 58058
const PROCESS = 58059
const REFERENCE = 58060
const REQUIRE_ROW_FORMAT = 58061
const RESOURCE = 58062
const RESPECT = 58063
const RESTART = 58064
const RETAIN = 58065
const SECONDARY = 58066
const SECONDARY_LOAD = 58067
const SECONDARY_UNLOAD = 58068
const THREAD_PRIORITY = 58069
const TIES = 58070
const VCPU = 58071
const VISIBLE = 58072
const INFILE = 58073
const ACTIVE = 58074
const AGGREGATE = 58075
const ANY = 58076
const ARRAY = 58077
const ASCII = 58078
const AT = 58079
const AUTOEXTEND_SIZE = 58080
const GENERATED = 58081
const ALWAYS = 58082
const STORED = 58083
const VIRTUAL = 58084
const NVAR = 58085
const PASSWORD_LOCK = 58086

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"RETURNING",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	764, 41,
	-2, 82,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	200, 1813,
	201, 1834,
	-2, 338,
	-1, 62,
	243, 1188,
	244, 1188,
	-2, 1177,
	-1, 90,
	272, 338,
	-2, 1819,
	-1, 94,
	8, 61,
	9, 61,
	10, 61,
	-2, 54,
	-1, 95,
	8, 64,
	9, 64,
	-2, 55,
	-1, 546,
	1, 2517,
	6, 2517,
	7, 2517,
	29, 2517,
	188, 2517,
	764, 2517,
	-2, 1223,
	-1, 559,
	188, 1844,
	-2, 1838,
	-1, 560,
	188, 1845,
	-2, 1839,
	-1, 664,
	1, 689,
	764, 689,
	-2, 687,
	-1, 673,
	1, 1329,
	8, 1329,
	9, 1329,
	10, 1329,
	17, 1329,
	18, 1329,
	19, 1329,
	20, 1329,
	22, 1329,
	24, 1329,
	26, 1329,
	35, 1329,
	36, 1329,
	65, 1329,
	66, 1329,
	67, 1329,
	68, 1329,
	69, 1329,
	71, 1329,
	72, 1329,
	75, 1329,
	76, 1329,
	78, 1329,
	79, 1329,
	97, 1329,
	527, 1329,
	575, 1329,
	653, 1329,
	764, 1329,
	-2, 1828,
	-1, 678,
	1, 1437,
	8, 1437,
	9, 1437,
	10, 1437,
	17, 1437,
	18, 1437,
	19, 1437,
	20, 1437,
	22, 1437,
	24, 1437,
	26, 1437,
	35, 1437,
	36, 1437,
	65, 1437,
	66, 1437,
	67, 1437,
	68, 1437,
	69, 1437,
	71, 1437,
	72, 1437,
	75, 1437,
	76, 1437,
	78, 1437,
	79, 1437,
	97, 1437,
	527, 1437,
	575, 1437,
	653, 1437,
	764, 1437,
	-2, 1828,
	-1, 707,
	188, 2213,
	-2, 1451,
	-1, 740,
	188, 2321,
	-2, 1721,
	-1, 741,
	188, 2403,
	-2, 1453,
	-1, 742,
	188, 2233,
	-2, 1454,
	-1, 811,
	188, 2184,
	-2, 1685,
	-1, 814,
	188, 2199,
	-2, 1603,
	-1, 815,
	188, 2202,
	-2, 1603,
	-1, 816,
	188, 2413,
	-2, 1603,
	-1, 818,
	188, 2200,
	-2, 1603,
	-1, 819,
	188, 2414,
	-2, 1603,
	-1, 820,
	188, 2415,
	-2, 1603,
	-1, 879,
	188, 2201,
	-2, 1603,
	-1, 962,
	188, 2301,
	-2, 1603,
	-1, 963,
	188, 2302,
	-2, 1603,
	-1, 1076,
	110, 2530,
	121, 2530,
	188, 2530,
	-2, 1795,
	-1, 1077,
	110, 2661,
	121, 2661,
	188, 2661,
	-2, 1796,
	-1, 1082,
	110, 2558,
	121, 2558,
	188, 2558,
	-2, 1797,
	-1, 1083,
	110, 2609,
	121, 2609,
	188, 2609,
	-2, 1798,
	-1, 1084,
	110, 2610,
	121, 2610,
	188, 2610,
	-2, 1799,
	-1, 1085,
	110, 2457,
	121, 2457,
	188, 2457,
	-2, 1804,
	-1, 1087,
	110, 2586,
	121, 2586,
	188, 2586,
	-2, 1806,
	-1, 1259,
	454, 1202,
	-2, 1206,
	-1, 1261,
	454, 1202,
	-2, 1206,
	-1, 1386,
	1, 689,
	764, 689,
	-2, 687,
	-1, 1388,
	1, 690,
	764, 690,
	-2, 687,
	-1, 1411,
	1, 1330,
	8, 1330,
	9, 1330,
	10, 1330,
	17, 1330,
	18, 1330,
	19, 1330,
	20, 1330,
	22, 1330,
	24, 1330,
	26, 1330,
	35, 1330,
	36, 1330,
	65, 1330,
	66, 1330,
	67, 1330,
	68, 1330,
	69, 1330,
	71, 1330,
	72, 1330,
	75, 1330,
	76, 1330,
	78, 1330,
	79, 1330,
	97, 1330,
	527, 1330,
	575, 1330,
	653, 1330,
	764, 1330,
	-2, 1828,
	-1, 1422,
	1, 1437,
	8, 1437,
	9, 1437,
	10, 1437,
	17, 1437,
	18, 1437,
	19, 1437,
	20, 1437,
	22, 1437,
	24, 1437,
	26, 1437,
	35, 1437,
	36, 1437,
	65, 1437,
	66, 1437,
	67, 1437,
	68, 1437,
	69, 1437,
	71, 1437,
	72, 1437,
	75, 1437,
	76, 1437,
	78, 1437,
	79, 1437,
	97, 1437,
	527, 1437,
	575, 1437,
	653, 1437,
	764, 1437,
	-2, 1828,
	-1, 1471,
	8, 62,
	9, 62,
	10, 62,
	-2, 50,
	-1, 1719,
	1, 689,
	764, 689,
	-2, 687,
	-1, 1721,
	1, 689,
	764, 689,
	-2, 687,
	-1, 2280,
	188, 1848,
	-2, 1697,
	-1, 2283,
	188, 2749,
	-2, 1700,
	-1, 2284,
	188, 2750,
	-2, 1701,
	-1, 2285,
	188, 1847,
	-2, 1843,
	-1, 2435,
	76, 101,
	78, 101,
	-2, 105,
	-1, 2453,
	188, 2325,
	-2, 1800,
	-1, 2460,
	1, 910,
	764, 910,
	-2, 687,
	-1, 2649,
	50, 931,
	207, 934,
	209, 931,
	210, 931,
	211, 931,
	-2, 1048,
	-1, 2731,
	8, 62,
	9, 62,
	10, 62,
	79, 50,
	-2, 1483,
	-1, 2748,
	1, 1375,
	8, 1375,
	9, 1375,
	10, 1375,
	17, 1375,
	18, 1375,
	19, 1375,
	20, 1375,
	22, 1375,
	24, 1375,
	26, 1375,
	35, 1375,
	36, 1375,
	65, 1375,
	66, 1375,
	67, 1375,
	68, 1375,
	69, 1375,
	71, 1375,
	72, 1375,
	75, 1375,
	76, 1375,
	78, 1375,
	79, 1375,
	97, 1375,
	527, 1375,
	575, 1375,
	653, 1375,
	764, 1375,
	-2, 1828,
	-1, 2926,
	213, 1042,
	217, 1042,
	-2, 798,
	-1, 2927,
	213, 1112,
	217, 1112,
	-2, 799,
	-1, 3198,
	1, 1437,
	8, 1437,
	9, 1437,
	10, 1437,
	17, 1437,
	18, 1437,
	19, 1437,
	20, 1437,
	22, 1437,
	24, 1437,
	26, 1437,
	35, 1437,
	36, 1437,
	65, 1437,
	66, 1437,
	67, 1437,
	68, 1437,
	69, 1437,
	71, 1437,
	72, 1437,
	75, 1437,
	76, 1437,
	78, 1437,
	79, 1437,
	97, 1437,
	527, 1437,
	575, 1437,
	653, 1437,
	764, 1437,
	-2, 1828,
	-1, 3302,
	1, 1753,
	26, 1753,
	75, 1753,
	764, 1753,
	-2, 1828,
	-1, 3505,
	50, 931,
	207, 934,
	209, 931,
	210, 931,
	211, 931,
	-2, 1048,
	-1, 3525,
	207, 935,
	213, 1042,
	217, 1042,
	-2, 933,
	-1, 3715,
	78, 2096,
	79, 2096,
	188, 2096,
	-2, 1231,
	-1, 3716,
	77, 1762,
	253, 1762,
	-2, 2145,
	-1, 3717,
	77, 1763,
	253, 1763,
	-2, 2715,
	-1, 4108,
	47, 1859,
	-2, 1857,
	-1, 4391,
	316, 435,
	-2, 1915,
	-1, 4392,
	316, 436,
	-2, 1956,
	-1, 4393,
	316, 437,
	-2, 2133,
	-1, 4630,
	105, 421,
	107, 421,
	109, 421,
	-2, 82,
	-1, 4711,
	107, 428,
	108, 428,
	109, 428,
	-2, 82,
}

const yyPrivate = 57344

const yyLast = 83698

var yyAct = [...]int{
	753, 44, 4684, 4647, 4584, 4621, 4634, 1192, 4398, 2943,
	4622, 2450, 699, 4586, 571, 3797, 4363, 698, 4251, 8,
	4500, 4373, 4499, 4248, 3, 4102, 4282, 28, 4397, 494,
	2942, 713, 4385, 3310, 4250, 7, 4249, 6, 4067, 1638,
	4252, 9, 3661, 4384, 4097, 108, 3467, 3367, 2374, 4010,
	657, 4224, 2373, 4375, 3989, 1421, 3278, 2727, 2310, 1710,
	4146, 726, 107, 4361, 3874, 709, 3923, 4115, 109, 4103,
	3916, 2984, 3512, 4152, 1540, 3910, 2664, 3631, 3051, 3875,
	4106, 689, 3957, 550, 553, 4052, 598, 3721, 1462, 3480,
	3866, 4104, 1753, 3188, 3713, 3934, 1752, 675, 3010, 3445,
	653, 2715, 2477, 101, 2541, 3803, 1173, 2255, 3820, 108,
	3368, 2924, 1469, 4374, 3909, 3311, 752, 3706, 3626, 491,
	1152, 1755, 3124, 1416, 3517, 2923, 2930, 2188, 2954, 1220,
	3637, 2931, 109, 2996, 1569, 3605, 3593, 2640, 3087, 817,
	2179, 2509, 3584, 1418, 135, 641, 1164, 105, 2646, 1081,
	2467, 1568, 1160, 1392, 1209, 2647, 2732, 2613, 2879, 2857,
	1269, 3465, 3186, 1381, 712, 718, 2880, 3240, 2241, 2571,
	700, 2243, 1420, 2644, 2180, 2158, 1246, 2117, 3024, 2052,
	1758, 2977, 2481, 1729, 1270, 2505, 1614, 694, 1078, 2595,
	2363, 1450, 1618, 2287, 1458, 2718, 2882, 1453, 1303, 2170,
	673, 1413, 2122, 1281, 2092, 1617, 1645, 1478, 3091, 1387,
	2437, 1155, 1074, 1075, 716, 1204, 2248, 682, 573, 670,
	669, 1399, 574, 1280, 43, 656, 2483, 1168, 1265, 3287,
	2084, 2051, 1391, 1390, 2326, 1722, 1175, 1191, 1181, 1182,
	1389, 3722, 1179, 2085, 692, 665, 556, 4711, 130, 126,
	4705, 1156, 4692, 4676, 4662, 4630, 4628, 4599, 4596, 4595,
	4594, 4579, 4577, 4479, 4475, 4470, 100, 4148, 4147, 3383,
	2115, 3886, 3639, 2526, 1183, 4345, 2756, 2558, 2557, 3458,
	3881, 3882, 3879, 3880, 3427, 3428, 4030, 86, 3513, 3515,
	4655, 99, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 3885, 4028, 97, 1441, 3171, 3461, 4617, 4615, 4700,
	4654, 679, 3990, 3459, 94, 4031, 4616, 688, 3366, 3137,
	2988, 2245, 1732, 4412, 4411, 71, 42, 3992, 42, 566,
	662, 1314, 4620, 4359, 3460, 47, 655, 4561, 2676, 667,
	2375, 2387, 2385, 2384, 2383, 2386, 2382, 2381, 2380, 2376,
	2377, 2394, 2378, 2393, 2392, 2379, 2391, 2390, 2389, 2388,
	42, 2555, 4230, 123, 2387, 2385, 2384, 2383, 2386, 2382,
	2381, 2380, 678, 42, 2394, 4038, 2393, 2392, 3008, 2391,
	2390, 2389, 2388, 3804, 3301, 1185, 42, 4511, 4376, 4317,
	2044, 2555, 89, 3806, 89, 3904, 3187, 1355, 4358, 2950,
	4229, 3268, 505, 3775, 2957, 3307, 3573, 1151, 4648, 3308,
	149, 570, 146, 4062, 147, 3772, 3622, 3860, 3307, 3337,
	2962, 2961, 3308, 3985, 3907, 3586, 89, 3336, 4419, 3147,
	157, 88, 3146, 702, 3606, 3864, 4344, 3986, 3908, 89,
	4434, 548, 4171, 4216, 4111, 2958, 2833, 3698, 3991, 1172,
	151, 150, 89, 1619, 2968, 1620, 4367, 545, 3322, 3323,
	2594, 2964, 3321, 2940, 115, 113, 114, 2447, 2448, 3408,
	1068, 2941, 2161, 2162, 4362, 3409, 3410, 1259, 138, 2871,
	2629, 2446, 2870, 154, 139, 2872, 4122, 2955, 2757, 1244,
	1245, 3942, 568, 4364, 1153, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 2588, 4436, 1503,
	3809, 1356, 2118, 2452, 2944, 96, 1189, 96, 4346, 2121,
	3659, 668, 2139, 89, 4367, 1333, 3286, 1253, 565, 1205,
	2196, 3940, 127, 564, 2920, 2956, 1341, 1242, 3330, 1243,
	1244, 1245, 152, 2966, 153, 2119, 2120, 1224, 1225, 96,
	3221, 1228, 3935, 3807, 3808, 3810, 3811, 3812, 4368, 1393,
	4452, 4364, 96, 2479, 2480, 1215, 2593, 2892, 2213, 650,
	1405, 1406, 1300, 137, 2494, 96, 2493, 2960, 2484, 2484,
	3544, 2963, 2498, 1167, 3679, 3683, 1163, 1226, 1227, 2953,
	2487, 2486, 3110, 2488, 3681, 4654, 2625, 2163, 1401, 1404,
	1405, 1406, 1402, 2881, 1403, 1408, 2506, 2577, 2576, 1254,
	1255, 540, 4616, 4614, 563, 2398, 2889, 644, 543, 4472,
	1229, 645, 4473, 3355, 4474, 2090, 4368, 4453, 1358, 1359,
	2159, 2160, 1262, 129, 1353, 647, 646, 1354, 3486, 645,
	1230, 3066, 4699, 133, 141, 140, 4655, 666, 2648, 598,
	4653, 4503, 4652, 4617, 1152, 2169, 1350, 2168, 1382, 643,
	2167, 2166, 2165, 1385, 2164, 1377, 1337, 1338, 1216, 4029,
	3199, 4095, 3902, 3894, 3892, 1412, 1417, 3116, 3044, 3199,
	3114, 1435, 1436, 1152, 3821, 1152, 1152, 3117, 3115, 1152,
	3199, 137, 3824, 1414, 3003, 3452, 651, 3007, 4565, 109,
	1152, 138, 142, 4333, 3822, 3823, 1256, 3241, 1512, 1514,
	4502, 4564, 1516, 1401, 1404, 1405, 1406, 1402, 1316, 1403,
	1408, 4310, 1456, 2719, 2720, 4515, 2893, 3850, 4056, 1409,
	3627, 3628, 3629, 3630, 3484, 4165, 4025, 2902, 3479, 4312,
	4176, 1307, 3048, 4471, 1531, 1330, 4175, 4573, 1535, 1536,
	1537, 1538, 1539, 3638, 1541, 3446, 3447, 3448, 3449, 3450,
	148, 2150, 1482, 3832, 2151, 131, 4173, 132, 3049, 1316,
	2607, 1414, 4047, 2891, 2914, 4416, 1268, 109, 3005, 1384,
	2614, 2617, 2615, 2616, 2618, 2619, 2620, 2621, 3514, 4045,
	3244, 2542, 4042, 3830, 3855, 4428, 4410, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1395, 1562, 1563, 1565, 1565, 1565, 3455, 1570,
	1570, 1570, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 3585, 3993, 3515, 2955, 1340, 155, 4454,
	2589, 1363, 1208, 1427, 4093, 664, 2909, 544, 2400, 2401,
	2399, 4708, 3994, 2194, 4678, 1411, 3443, 4707, 3608, 4677,
	1570, 3329, 3446, 3447, 3448, 3449, 3450, 2959, 4167, 679,
	679, 2918, 2952, 4674, 2955, 143, 4592, 1223, 567, 4638,
	1415, 3136, 2899, 4467, 2956, 4465, 4466, 4581, 1317, 1324,
	1325, 1327, 1328, 1329, 3549, 1331, 1332, 1375, 1334, 1335,
	1336, 2195, 1339, 1513, 1342, 1343, 1344, 1345, 1346, 3328,
	3116, 3114, 551, 2197, 2955, 3109, 3481, 1304, 4426, 3006,
	1316, 1378, 2956, 3127, 3805, 4338, 3920, 3190, 4365, 1564,
	1566, 1567, 4208, 4574, 2969, 3996, 3537, 3441, 3901, 3636,
	1373, 1218, 2242, 1570, 1570, 2172, 2601, 3893, 110, 4217,
	87, 1571, 1572, 2911, 1437, 3862, 1442, 1442, 3891, 4228,
	1449, 1396, 2956, 128, 4026, 3995, 2490, 1378, 1443, 1443,
	1444, 1379, 2971, 2491, 2091, 4501, 2121, 1438, 4418, 1438,
	1438, 1263, 110, 1438, 1267, 3863, 1315, 4039, 2508, 116,
	3009, 3611, 3609, 1459, 4343, 110, 4365, 3607, 1217, 4123,
	1261, 1308, 2119, 2120, 4172, 1326, 144, 1484, 110, 554,
	1407, 1604, 4068, 3610, 4022, 3248, 3247, 3249, 3246, 1727,
	4311, 2152, 2884, 3253, 3191, 3245, 3242, 4044, 3190, 3243,
	4041, 3251, 4166, 1349, 3173, 4021, 4020, 3181, 3183, 3182,
	1407, 4019, 4590, 3175, 4585, 3250, 1323, 4018, 4016, 1607,
	1180, 2896, 1369, 4017, 1241, 1542, 3454, 555, 4380, 4381,
	4588, 137, 3252, 3254, 4160, 4161, 1475, 1476, 1474, 2939,
	1475, 1476, 1474, 1368, 1364, 1365, 1366, 1367, 1370, 1371,
	1372, 1374, 4327, 1177, 1176, 1477, 1081, 2536, 2537, 1477,
	2532, 1081, 4447, 4246, 1605, 1606, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 2951, 1180,
	1321, 552, 2175, 1561, 2885, 2887, 1178, 3635, 2890, 663,
	2054, 2895, 2531, 2900, 2897, 2898, 4156, 2901, 2894, 1257,
	2904, 2903, 2905, 1635, 2906, 2907, 2908, 1240, 552, 2910,
	2912, 2913, 2915, 2916, 2917, 1717, 3551, 3552, 2888, 2919,
	107, 1737, 1738, 1736, 1237, 1407, 109, 1236, 2921, 3632,
	3633, 733, 2176, 734, 736, 737, 738, 739, 3032, 3033,
	598, 735, 2322, 2123, 1322, 1235, 1318, 1731, 1702, 1703,
	1704, 1705, 1706, 3538, 3539, 3540, 1238, 1239, 1234, 598,
	1266, 4424, 549, 137, 2044, 4239, 1754, 3594, 3550, 1629,
	3595, 1167, 3596, 2476, 142, 2474, 1611, 3255, 1319, 1320,
	3867, 3868, 2125, 3106, 2086, 2124, 1762, 4701, 4517, 4516,
	3094, 1167, 3094, 1376, 3176, 3104, 4688, 3523, 3103, 2543,
	1712, 4714, 3372, 4709, 4693, 1634, 4665, 2555, 1174, 642,
	1423, 1425, 4316, 1622, 3126, 668, 1152, 1312, 1623, 1635,
	2048, 2048, 2048, 2048, 1730, 1707, 4199, 1714, 1715, 1735,
	4087, 3900, 2883, 3897, 2094, 1726, 2098, 3634, 552, 2093,
	3477, 1733, 109, 2476, 3111, 3102, 3043, 4587, 4589, 3039,
	2096, 3013, 2095, 552, 139, 3082, 3012, 2670, 3081, 1410,
	1708, 2476, 2602, 3177, 3126, 1608, 1609, 4597, 2156, 1742,
	598, 4476, 1740, 1264, 2525, 2476, 2319, 1171, 2228, 2476,
	2059, 2060, 2227, 2226, 1760, 1170, 2476, 4090, 3472, 1744,
	1394, 2673, 2671, 2666, 124, 2079, 1193, 1184, 2668, 2055,
	489, 3016, 3189, 1423, 1425, 2149, 3015, 2042, 3883, 1518,
	1519, 3658, 119, 3320, 2067, 3041, 3040, 2068, 2069, 2070,
	2544, 696, 2112, 2475, 124, 4336, 2074, 652, 2877, 3100,
	3094, 1517, 1515, 3093, 3052, 3097, 2082, 2057, 3096, 3101,
	2046, 2050, 1424, 1311, 2774, 89, 3083, 3084, 675, 675,
	675, 675, 2667, 2669, 2672, 2674, 2132, 2750, 2130, 3371,
	122, 2636, 2185, 1635, 1713, 2804, 2556, 2071, 1417, 2073,
	2222, 1718, 1716, 4170, 1725, 2533, 4686, 1630, 1734, 4687,
	1414, 4685, 2442, 2258, 1750, 2221, 109, 1520, 1631, 3125,
	89, 109, 2452, 2475, 1613, 2053, 1751, 1633, 4198, 3100,
	3094, 121, 1534, 1533, 1532, 3097, 1483, 2110, 3096, 3101,
	2215, 2475, 4197, 3522, 141, 140, 1258, 2216, 3094, 1298,
	2801, 1206, 2223, 1167, 2181, 2475, 3095, 2474, 2225, 2475,
	1520, 1493, 3094, 1503, 1503, 1424, 2475, 1167, 2199, 3125,
	3095, 2474, 2088, 3120, 1432, 1433, 2097, 2867, 4206, 2103,
	2104, 3123, 3474, 2106, 2087, 1520, 1517, 2312, 2311, 2081,
	3788, 3786, 2127, 1762, 3876, 1635, 3884, 1426, 2200, 2109,
	3501, 3500, 2747, 2203, 4448, 4449, 3956, 534, 3117, 2128,
	2171, 2174, 1414, 96, 3115, 2131, 2043, 3102, 109, 1482,
	4445, 4446, 1541, 1434, 2058, 675, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 3093, 2221,
	1503, 1423, 1425, 96, 2648, 109, 4233, 4232, 1747, 2313,
	2858, 2077, 3787, 3389, 3387, 2279, 2173, 3075, 3074, 2320,
	2321, 3135, 3502, 3134, 2318, 2323, 2349, 2352, 1518, 1519,
	4483, 3133, 2367, 3132, 2365, 2224, 2190, 3131, 2061, 2062,
	2063, 2064, 2065, 2288, 2066, 3130, 2177, 2315, 3129, 2317,
	675, 2285, 679, 679, 679, 679, 4033, 2201, 2202, 1542,
	2204, 2193, 2191, 3128, 2329, 2189, 2332, 2395, 2396, 2192,
	2214, 2744, 679, 506, 2451, 3388, 1635, 1415, 1630, 3076,
	2265, 1247, 1415, 1518, 1519, 2572, 2566, 2133, 1081, 1631,
	2136, 2137, 2138, 4034, 2140, 2141, 2741, 2251, 2142, 109,
	688, 2294, 2143, 1762, 2278, 2144, 2808, 1160, 669, 2145,
	2146, 4484, 2147, 2148, 1232, 4190, 2292, 2293, 2291, 2263,
	509, 3072, 3071, 1474, 2874, 2873, 1477, 2275, 3062, 520,
	532, 533, 733, 1424, 734, 736, 737, 738, 739, 3061,
	1477, 2289, 735, 2322, 4668, 4635, 4667, 1542, 3060, 1432,
	1433, 1222, 1249, 3059, 3058, 3057, 2459, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 2457, 3056, 1503, 515, 696,
	522, 518, 1426, 3055, 527, 528, 1496, 1497, 1498, 1499,
	1500, 1493, 2624, 3073, 1503, 1248, 2875, 2403, 1613, 1613,
	2567, 2551, 4386, 2623, 4520, 2408, 4519, 2410, 1434, 679,
	2413, 2285, 529, 2108, 1274, 2436, 2464, 2198, 3270, 2473,
	2333, 2334, 2335, 2336, 2337, 1187, 1423, 1425, 1233, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 702, 3079, 1503, 2361, 1186, 2267, 2268, 2269, 1475,
	1476, 1474, 2364, 4691, 560, 2515, 2516, 2517, 2518, 2519,
	4697, 2434, 1221, 1251, 2458, 1476, 1474, 2364, 1477, 2817,
	3174, 103, 4664, 2440, 679, 524, 1419, 2449, 4575, 2444,
	2443, 4521, 3011, 1477, 2549, 2550, 2795, 2319, 2794, 1720,
	2511, 2512, 2513, 2514, 525, 2266, 2463, 4512, 2535, 2461,
	2501, 2502, 2503, 2485, 2520, 3831, 3825, 517, 1475, 1476,
	1474, 1260, 164, 1542, 492, 504, 4539, 111, 164, 117,
	3037, 2344, 2345, 164, 2489, 2492, 2249, 1477, 2495, 2496,
	2497, 3199, 2507, 640, 3381, 3917, 1475, 1476, 1474, 4386,
	1470, 4461, 164, 4460, 4695, 1475, 1476, 1474, 4702, 2552,
	3903, 164, 4680, 2504, 2522, 1477, 4644, 3082, 1424, 2670,
	3081, 1475, 1476, 1474, 1477, 164, 516, 530, 2264, 4523,
	1475, 1476, 1474, 531, 4415, 4555, 164, 1166, 4464, 2527,
	1477, 2529, 696, 4323, 1069, 1070, 1071, 2249, 2430, 1477,
	1475, 1476, 1474, 2673, 2671, 2666, 1169, 4386, 164, 640,
	2668, 2456, 2771, 2772, 2773, 4314, 4307, 4703, 4236, 1477,
	492, 164, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1493, 696, 507, 1503, 2271, 2273, 2274,
	2372, 2433, 4063, 2435, 4554, 2272, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 3083, 3084,
	1503, 2256, 2257, 4552, 2667, 2669, 2672, 2674, 2796, 1475,
	1476, 1474, 523, 510, 511, 2238, 537, 3272, 3764, 3762,
	512, 514, 89, 508, 536, 535, 2240, 4032, 1477, 3763,
	4510, 3769, 3915, 2521, 2290, 2983, 3914, 3211, 4308, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 3913, 2239, 1503, 1475, 1476, 1474, 1475, 1476, 1474,
	3912, 3208, 4551, 3614, 3612, 3841, 4713, 3767, 1475, 1476,
	1474, 526, 3795, 1477, 3613, 3619, 1477, 1475, 1476, 1474,
	2260, 1565, 3181, 3183, 3182, 696, 2234, 1477, 2524, 4309,
	2320, 2321, 3181, 3183, 3182, 3794, 1477, 2236, 1152, 2101,
	3562, 3617, 2237, 3496, 3495, 2261, 2545, 3494, 2262, 3493,
	3492, 2230, 2547, 2548, 3205, 3433, 2094, 1613, 3181, 3183,
	3182, 2093, 2232, 2235, 2100, 4168, 3181, 3183, 3182, 3384,
	2982, 2980, 2096, 2967, 2095, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 3691, 2231, 1503,
	1306, 3931, 3181, 3183, 3182, 4712, 1305, 3408, 1068, 4696,
	3398, 3399, 3401, 3409, 3410, 3400, 3402, 3403, 1393, 2592,
	3457, 3456, 4679, 2233, 2584, 4673, 4169, 4601, 4509, 1412,
	3404, 3405, 3406, 3407, 3930, 4593, 4477, 4458, 4457, 4508,
	1385, 4403, 4402, 4396, 4395, 4174, 4070, 3705, 2229, 3541,
	3027, 2568, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1493, 3026, 2574, 1503, 1386, 675, 2578,
	2563, 2562, 2564, 2314, 2102, 2089, 1749, 2736, 2737, 2738,
	1748, 1721, 1719, 1301, 2570, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 1278, 2611, 1503,
	562, 2610, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1493, 4507, 4504, 1503, 2729, 4433, 1277,
	2985, 4413, 4353, 4347, 4238, 4237, 2735, 4164, 4163, 4142,
	2775, 4094, 4046, 4043, 1456, 1456, 4015, 3984, 1762, 3983,
	3952, 3906, 3905, 3840, 164, 3839, 3838, 3837, 3828, 3827,
	3826, 3793, 2579, 3790, 2714, 3765, 2637, 3760, 3751, 4399,
	492, 2583, 3747, 3742, 3741, 2591, 3740, 2599, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 2598,
	3615, 1503, 3604, 3592, 3588, 3581, 3580, 3579, 3499, 3491,
	3490, 2730, 3489, 3415, 3220, 3219, 3217, 3077, 2978, 2876,
	2279, 1530, 2654, 2606, 1529, 1528, 2609, 2631, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 2590, 164,
	1503, 2628, 2561, 696, 2630, 2105, 1743, 2769, 2770, 2633,
	2798, 1347, 2749, 696, 4213, 696, 2285, 3642, 4563, 3777,
	4546, 4069, 1487, 679, 1490, 2645, 2734, 3777, 4423, 2723,
	4008, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 2288, 1488,
	1489, 1486, 3777, 4421, 3267, 3642, 696, 2559, 4077, 696,
	1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1493, 679, 4007, 1503, 3777, 4241, 3435, 675, 2458,
	2438, 675, 3642, 4150, 3418, 2569, 640, 3642, 4145, 2761,
	2759, 2760, 4091, 696, 3642, 4050, 3199, 696, 3025, 164,
	2635, 696, 3642, 3927, 3417, 2780, 2044, 3858, 2044, 3857,
	3416, 2605, 1762, 3777, 3776, 1312, 1081, 3642, 3641, 2316,
	164, 3425, 3424, 3421, 3422, 2776, 3421, 3420, 102, 1304,
	2749, 696, 2604, 2603, 4646, 2784, 2338, 2586, 2338, 696,
	2439, 3307, 2441, 2217, 696, 3308, 2289, 492, 2340, 2341,
	2342, 2438, 1637, 1636, 2346, 2154, 2348, 2351, 2354, 2217,
	2359, 2360, 89, 3025, 2860, 1382, 2370, 1492, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 2540,
	2402, 1503, 2404, 2405, 3725, 3707, 2749, 2409, 3725, 2411,
	2412, 2253, 2862, 2816, 2044, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2217, 2338, 2153,
	1760, 2439, 1310, 2044, 4354, 1309, 1459, 1312, 1310, 2264,
	4226, 598, 3967, 2539, 3725, 3199, 3642, 2217, 3031, 3436,
	3423, 3218, 3054, 2445, 706, 2861, 2827, 2825, 2934, 2937,
	2824, 2929, 2749, 2932, 2933, 2622, 2252, 2608, 2107, 2560,
	2555, 2554, 2254, 1708, 2886, 3929, 1380, 2925, 2116, 2044,
	2048, 1741, 1739, 1616, 1383, 89, 4451, 4422, 2865, 2728,
	4193, 4191, 1730, 1622, 4009, 3785, 2832, 2834, 2868, 2863,
	3782, 2482, 2864, 2510, 2841, 2842, 2843, 2484, 3019, 3193,
	3065, 2878, 679, 3064, 2506, 679, 2922, 2719, 2720, 3842,
	2790, 1316, 2534, 2500, 2499, 2185, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 1711, 1297,
	1503, 2573, 2979, 1213, 1212, 4683, 2818, 4682, 2986, 4659,
	4657, 4651, 4650, 4623, 2981, 4352, 4618, 4612, 3701, 3045,
	3029, 4610, 4557, 4556, 3922, 3918, 3707, 3434, 3429, 3022,
	3021, 3001, 2970, 2972, 2722, 2716, 2553, 2973, 2974, 2155,
	2975, 2976, 2126, 3004, 1313, 2212, 2209, 2181, 3069, 2207,
	2211, 2210, 2726, 2725, 2208, 1463, 1464, 2724, 2206, 2205,
	3023, 4443, 3206, 4357, 3222, 3209, 3028, 2758, 3212, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 4195, 2766, 1503, 4129, 2765, 1466, 3700, 539, 675,
	3038, 1468, 1467, 4405, 1465, 3195, 1463, 1464, 3092, 3898,
	1762, 3088, 3099, 3201, 3202, 3203, 3172, 3197, 3042, 3098,
	3105, 134, 3108, 3873, 3780, 3121, 3047, 3531, 3063, 3050,
	3085, 3119, 3530, 3414, 3213, 2859, 3413, 1466, 1461, 3412,
	3068, 2938, 1468, 1467, 2928, 1465, 4406, 3080, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	4221, 4351, 1503, 4349, 3279, 541, 542, 4348, 3180, 4109,
	4107, 4159, 2279, 4158, 4049, 561, 2582, 2581, 145, 2099,
	4035, 4036, 1451, 3113, 3256, 3112, 3067, 3258, 3304, 3309,
	4482, 3890, 3736, 675, 1452, 3542, 3229, 3386, 2638, 1632,
	1295, 1279, 1276, 1275, 1219, 3303, 164, 4639, 2285, 4080,
	4079, 109, 1393, 2256, 2257, 1166, 3959, 1272, 1273, 3835,
	3314, 3833, 3312, 3462, 2528, 1352, 1410, 3836, 2987, 3834,
	4355, 4313, 4053, 3798, 3784, 3431, 2327, 2328, 3200, 2178,
	1271, 2101, 2100, 1447, 1448, 1445, 1446, 1361, 3269, 1439,
	1440, 3214, 3958, 4527, 2764, 4526, 3017, 3018, 4525, 4012,
	2627, 3216, 2763, 1252, 690, 4440, 4439, 4438, 4437, 4222,
	3227, 4185, 4177, 4127, 3230, 3938, 3224, 3231, 3086, 691,
	102, 3382, 3305, 3937, 3664, 3025, 4661, 4660, 3395, 2990,
	2991, 2992, 4661, 4478, 3257, 4543, 3853, 3485, 492, 3229,
	3226, 3483, 3482, 3690, 3053, 2826, 2805, 2802, 2768, 2072,
	1472, 1211, 3370, 679, 1210, 4660, 640, 640, 1382, 4235,
	3411, 640, 2250, 683, 3363, 687, 686, 4265, 65, 1166,
	164, 4267, 23, 4266, 22, 640, 640, 4268, 24, 4269,
	25, 164, 3306, 598, 104, 492, 492, 492, 492, 3394,
	3451, 4263, 18, 3390, 4262, 17, 4261, 16, 4264, 19,
	164, 164, 164, 164, 164, 2886, 164, 3437, 4260, 15,
	3316, 3192, 3318, 3319, 3194, 68, 3180, 4404, 3324, 1,
	3380, 4342, 164, 164, 3374, 3375, 3376, 640, 3377, 3378,
	4254, 11, 677, 164, 3317, 3280, 3281, 3282, 3283, 3284,
	3285, 2520, 4289, 39, 50, 3373, 2600, 679, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	2134, 702, 1503, 597, 3524, 4287, 37, 4286, 36, 4290,
	40, 4285, 32, 1166, 4284, 31, 3464, 4283, 30, 4280,
	27, 3819, 3453, 4279, 26, 3818, 640, 640, 640, 4259,
	14, 1166, 3393, 3392, 3232, 4256, 13, 4255, 12, 4253,
	10, 106, 4, 3625, 3444, 3223, 3473, 3002, 4337, 3271,
	3478, 4207, 3829, 2713, 1728, 4024, 1190, 3519, 2538, 1302,
	3487, 3432, 640, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 3442, 4350, 1503, 4108, 4219,
	4218, 3802, 3801, 2995, 2994, 1296, 2587, 2114, 3089, 3519,
	164, 164, 3090, 3014, 3468, 164, 3624, 1166, 3078, 3470,
	4183, 2626, 2157, 2612, 1362, 3520, 3471, 2460, 3419, 164,
	640, 2465, 164, 164, 164, 164, 3859, 3511, 3526, 3527,
	3528, 4061, 3488, 3510, 164, 3533, 3534, 3509, 3536, 3497,
	3498, 1154, 164, 118, 3362, 2565, 164, 1231, 3504, 3591,
	513, 2462, 3554, 2654, 3521, 3559, 3085, 3503, 2948, 4220,
	3640, 1299, 1708, 2947, 3553, 3529, 2925, 2965, 2478, 1388,
	3980, 3662, 2946, 2945, 4315, 2949, 1642, 1640, 1641, 3532,
	1639, 1644, 1643, 519, 3657, 1624, 4390, 3704, 1473, 3696,
	746, 136, 3545, 3122, 3547, 648, 649, 164, 125, 521,
	1511, 3180, 2762, 2869, 492, 3560, 1079, 3563, 1080, 3565,
	3567, 3569, 3571, 1072, 3589, 4481, 2785, 2786, 2787, 2788,
	2789, 2752, 4231, 4110, 4223, 3714, 4379, 1457, 4112, 3936,
	3663, 2815, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1560,
	1166, 2362, 1166, 715, 2814, 1166, 3385, 661, 109, 3720,
	3955, 3314, 1166, 3312, 2185, 3709, 4114, 1166, 1166, 1166,
	3665, 2270, 3643, 729, 728, 727, 724, 3469, 164, 164,
	725, 2397, 4366, 2259, 3300, 3299, 3302, 1485, 3710, 3426,
	1360, 704, 1431, 1430, 1429, 1428, 3774, 1422, 672, 2431,
	3036, 1400, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295,
	3296, 3297, 3298, 1427, 1398, 3463, 1397, 1746, 3678, 1612,
	2721, 2717, 671, 676, 46, 2767, 2181, 1250, 3697, 1565,
	1565, 1565, 1570, 1570, 1570, 1573, 1574, 1575, 1576, 1570,
	1570, 1570, 4121, 164, 164, 164, 112, 685, 3708, 3750,
	3730, 684, 693, 3379, 3674, 3675, 3676, 29, 3677, 21,
	20, 1207, 2643, 2665, 3680, 1188, 3682, 1613, 1613, 48,
	54, 53, 1166, 51, 3574, 3712, 3576, 52, 2989, 2530,
	3726, 3727, 3728, 3729, 4389, 4583, 1282, 3789, 4600, 4633,
	1357, 3575, 3597, 3598, 3599, 38, 3723, 35, 34, 33,
	4281, 3180, 4275, 4274, 4277, 4276, 3621, 4273, 3814, 3815,
	3816, 3745, 3752, 4278, 3748, 4272, 4271, 4270, 4288, 3724,
	3761, 4258, 4257, 4567, 4566, 3556, 3731, 5, 3689, 3781,
	98, 95, 3662, 41, 120, 1150, 2, 0, 0, 0,
	0, 0, 3861, 3843, 3845, 0, 0, 0, 0, 1166,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3799, 1564, 1566, 1567, 0, 0, 164, 0,
	0, 0, 0, 0, 164, 164, 640, 640, 640, 164,
	0, 3792, 3778, 3779, 1571, 1572, 0, 0, 3869, 3870,
	1604, 1605, 1606, 3847, 0, 0, 3856, 0, 3849, 0,
	3813, 0, 3817, 3688, 3848, 0, 3519, 0, 0, 3851,
	3852, 0, 3854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3699, 0, 0, 0, 0, 0,
	3844, 3519, 3889, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3732, 3733, 3734, 3092, 0, 0, 3088, 3099, 0,
	0, 3865, 0, 3878, 3895, 3098, 3871, 0, 3872, 0,
	0, 0, 3753, 3754, 3755, 0, 0, 0, 0, 0,
	3933, 0, 0, 0, 0, 1471, 3887, 3771, 0, 0,
	3899, 0, 0, 0, 0, 0, 0, 3896, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	0, 0, 1503, 0, 0, 0, 0, 3210, 0, 0,
	3925, 0, 0, 0, 3924, 3926, 3662, 3662, 0, 0,
	0, 0, 3964, 0, 0, 3714, 0, 0, 3939, 3941,
	675, 0, 0, 3969, 0, 0, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 109, 3921,
	1503, 0, 0, 0, 3911, 0, 0, 0, 0, 0,
	3229, 0, 3180, 0, 0, 3314, 3919, 3312, 0, 0,
	0, 3962, 3668, 3669, 3670, 3671, 3672, 0, 0, 0,
	0, 0, 695, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4004, 0, 0, 0, 0,
	0, 3960, 0, 0, 3978, 0, 0, 0, 0, 0,
	0, 0, 3796, 0, 0, 0, 3963, 3800, 0, 0,
	0, 0, 3977, 3981, 4011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3961, 3971, 4002,
	0, 0, 4005, 0, 0, 0, 0, 3370, 0, 3968,
	0, 3972, 0, 669, 0, 3846, 2078, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4065, 4066, 3180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 3998, 3999, 3997, 3987,
	3988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3180, 0, 4089, 0, 4000, 4001, 4014, 0,
	0, 0, 0, 1166, 4013, 0, 0, 0, 0, 4023,
	0, 164, 0, 164, 0, 4037, 0, 1166, 4027, 0,
	4057, 4058, 1166, 4060, 679, 4055, 4040, 0, 4054, 0,
	4048, 4051, 0, 4073, 0, 0, 0, 4082, 0, 4083,
	4059, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	640, 0, 0, 0, 0, 3964, 3714, 0, 0, 0,
	0, 0, 4071, 4072, 0, 4098, 0, 0, 4081, 4074,
	0, 0, 0, 4133, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4075,
	0, 0, 0, 0, 0, 0, 3266, 0, 4084, 0,
	4086, 4154, 4088, 0, 0, 4096, 0, 0, 0, 0,
	4131, 164, 164, 0, 0, 0, 0, 1166, 4153, 0,
	164, 2247, 0, 0, 109, 0, 0, 0, 4137, 0,
	0, 0, 0, 4139, 4130, 0, 0, 4128, 3973, 3974,
	3975, 3976, 0, 4136, 1166, 4134, 0, 4151, 0, 4126,
	4132, 4155, 4184, 4157, 0, 0, 4140, 3265, 4189, 3370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2286, 0, 0, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 0, 0,
	0, 4162, 0, 0, 0, 0, 0, 0, 0, 4204,
	0, 0, 4187, 0, 0, 0, 0, 0, 3180, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 0, 4179, 1503, 0, 0, 0, 0, 4182, 0,
	4181, 0, 0, 0, 4214, 0, 4180, 2347, 0, 0,
	0, 2355, 0, 0, 4201, 4154, 4154, 4194, 1152, 0,
	0, 0, 0, 0, 0, 0, 4247, 4203, 4242, 0,
	0, 0, 4243, 4153, 4205, 0, 0, 0, 109, 109,
	1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1493, 0, 0, 1503, 0, 0, 0, 0, 4200,
	4192, 0, 4234, 0, 0, 1152, 0, 0, 0, 0,
	0, 0, 0, 4334, 0, 0, 0, 0, 0, 3180,
	0, 0, 0, 0, 0, 0, 0, 0, 4244, 4245,
	0, 0, 0, 4306, 0, 0, 4322, 164, 0, 4324,
	0, 4326, 164, 0, 0, 164, 164, 164, 0, 4318,
	0, 3370, 0, 3370, 0, 0, 0, 4329, 4319, 4113,
	4116, 4378, 0, 4382, 4325, 3314, 0, 3312, 0, 4370,
	3925, 2927, 0, 0, 3924, 4339, 4335, 2936, 2936, 4332,
	0, 0, 0, 4341, 3207, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 4356, 0, 0, 4369, 1152, 0,
	1152, 4372, 0, 0, 0, 0, 1152, 0, 0, 0,
	0, 4330, 0, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 0, 0, 1503, 4400, 0,
	164, 0, 0, 0, 4409, 0, 0, 0, 1166, 1166,
	0, 0, 0, 0, 640, 0, 0, 4435, 0, 0,
	4427, 0, 0, 0, 0, 0, 3279, 0, 164, 164,
	640, 1166, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 4414, 0, 0, 0, 0, 640, 4444,
	0, 0, 0, 0, 4431, 0, 4394, 4425, 0, 0,
	0, 0, 0, 0, 0, 4456, 4432, 0, 0, 0,
	3925, 0, 4429, 1166, 3924, 4430, 4441, 640, 0, 1166,
	0, 1166, 4442, 0, 1166, 0, 0, 4462, 0, 4489,
	0, 0, 0, 0, 598, 4494, 4480, 4459, 0, 4139,
	4468, 4488, 4455, 0, 4450, 0, 0, 4506, 0, 0,
	1166, 1166, 0, 4491, 4495, 4493, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 4490, 0,
	0, 4505, 1152, 4202, 0, 1152, 0, 0, 0, 0,
	4492, 1152, 1152, 1152, 1152, 4497, 1152, 1152, 4496, 4531,
	1152, 1152, 3370, 4498, 4531, 0, 0, 0, 4531, 4541,
	4522, 4545, 4462, 4524, 0, 0, 1152, 0, 4514, 3662,
	4533, 4534, 4535, 4513, 4549, 4538, 4518, 0, 0, 0,
	0, 4528, 3314, 0, 3312, 3179, 4542, 0, 0, 0,
	4550, 1152, 0, 4553, 1152, 0, 0, 1635, 0, 4562,
	0, 0, 4560, 1166, 0, 0, 0, 4572, 2451, 4580,
	4591, 1166, 1166, 1166, 4582, 4569, 0, 0, 4116, 4576,
	109, 598, 4578, 4571, 0, 4570, 0, 4602, 4603, 4568,
	0, 4529, 0, 0, 0, 4609, 0, 164, 4606, 4558,
	0, 0, 0, 164, 1152, 0, 0, 0, 1152, 1166,
	1152, 0, 4624, 0, 1152, 0, 4531, 4627, 4531, 0,
	0, 0, 4636, 0, 0, 1152, 1152, 1152, 1152, 0,
	1152, 0, 4625, 4531, 4531, 4531, 0, 0, 4531, 0,
	0, 0, 4371, 4383, 4387, 0, 0, 0, 4611, 0,
	0, 4613, 4401, 0, 0, 0, 4643, 0, 4658, 1152,
	0, 1152, 4656, 1152, 0, 0, 0, 4531, 1166, 4531,
	4669, 0, 4671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4681, 0, 0, 0, 0, 0, 0,
	0, 4666, 0, 1152, 4689, 0, 0, 164, 0, 1152,
	0, 4531, 0, 0, 0, 0, 0, 1152, 0, 0,
	0, 0, 1166, 0, 0, 4531, 0, 0, 0, 0,
	0, 0, 0, 1152, 2580, 0, 1152, 4694, 0, 0,
	0, 4531, 0, 0, 0, 0, 1152, 0, 4463, 0,
	0, 0, 1152, 0, 4531, 0, 3204, 0, 0, 0,
	4531, 0, 0, 3179, 4706, 0, 0, 492, 0, 0,
	0, 0, 0, 2936, 2936, 2936, 0, 2936, 2936, 0,
	0, 0, 0, 492, 0, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 0, 164, 1503,
	0, 0, 0, 2799, 0, 0, 0, 0, 0, 0,
	0, 2632, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1493, 0, 0, 1503, 0, 0, 0,
	1166, 0, 0, 0, 0, 0, 4536, 0, 0, 0,
	0, 0, 0, 1166, 1166, 1166, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 164, 640, 0,
	0, 0, 0, 0, 2739, 2740, 1166, 1166, 2742, 2743,
	0, 0, 2745, 2746, 0, 0, 0, 0, 0, 0,
	0, 0, 2781, 0, 640, 0, 1166, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 4598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	164, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 0, 0, 1503, 0, 2777, 2778, 2779,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	492, 492, 492, 492, 0, 0, 0, 1166, 492, 492,
	1166, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	1166, 0, 1166, 0, 492, 492, 1166, 164, 492, 0,
	0, 0, 0, 1166, 0, 1166, 1166, 1166, 1166, 1166,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2809, 2810, 2811, 0, 1460, 0, 4670, 3179, 0,
	0, 0, 3577, 3578, 4675, 0, 0, 0, 0, 0,
	3587, 0, 0, 3590, 0, 0, 0, 2751, 0, 0,
	3600, 3601, 3602, 3603, 0, 0, 0, 0, 3616, 3618,
	3620, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 1166, 3623, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 164, 538,
	0, 0, 0, 1166, 158, 0, 0, 558, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	0, 0, 1503, 658, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 1492, 1491, 1501, 1502, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1493, 658, 703, 1503, 0,
	0, 0, 0, 1089, 0, 0, 0, 158, 0, 2218,
	2219, 2220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 0, 584, 595, 577, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 158, 0, 1166, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3179, 0,
	0, 0, 3738, 3739, 0, 0, 0, 0, 0, 0,
	3746, 0, 0, 3749, 0, 0, 0, 3030, 0, 0,
	3756, 3757, 3758, 3759, 0, 0, 3034, 3035, 0, 3766,
	3768, 3770, 0, 0, 0, 3773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2339, 0, 0, 0,
	0, 0, 0, 0, 2343, 0, 0, 0, 0, 0,
	0, 2920, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2371, 0, 0, 164, 0, 2371, 0, 0, 164,
	0, 1166, 0, 0, 0, 0, 1393, 2406, 2407, 0,
	0, 0, 0, 0, 2892, 2414, 2415, 2416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 2429, 576, 575, 578, 164, 0, 0,
	0, 0, 640, 0, 583, 0, 0, 640, 640, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 587, 2889, 0, 0, 0, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 594, 0, 2936, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3259, 0, 3260, 3261, 0, 3262,
	3263, 0, 0, 3264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2893, 0, 0, 0, 0, 582, 3273,
	3274, 3275, 3276, 0, 2902, 0, 0, 0, 0, 3179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 1166, 0, 0,
	0, 0, 580, 581, 588, 2129, 592, 593, 596, 0,
	2891, 2914, 0, 1166, 0, 0, 0, 0, 0, 0,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	158, 0, 0, 164, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2909, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2918, 3179,
	0, 0, 492, 0, 0, 2936, 2936, 1166, 0, 2899,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	2911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2936, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 1166, 492, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2884,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 2575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3179, 0, 0, 0, 3648,
	3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 586,
	0, 2885, 2887, 0, 0, 2890, 0, 3667, 2895, 0,
	2900, 2897, 2898, 0, 2901, 2894, 0, 2904, 2903, 2905,
	0, 2906, 2907, 2908, 0, 2634, 2910, 2912, 2913, 2915,
	2916, 2917, 0, 0, 2056, 2888, 2919, 0, 640, 0,
	3693, 3694, 3695, 0, 0, 2921, 0, 0, 0, 0,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 2936,
	0, 0, 0, 0, 0, 0, 0, 2731, 0, 0,
	0, 0, 492, 0, 0, 164, 3179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2748, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2883,
	0, 0, 0, 0, 0, 0, 0, 3783, 0, 0,
	2782, 0, 2783, 0, 0, 0, 0, 0, 0, 0,
	3791, 0, 0, 0, 1166, 0, 492, 0, 492, 0,
	0, 0, 0, 0, 492, 0, 2791, 2792, 2793, 0,
	0, 0, 2797, 0, 2800, 0, 0, 2803, 1166, 0,
	2806, 2807, 0, 0, 0, 2812, 2813, 1615, 0, 0,
	1089, 2819, 2820, 2821, 0, 1089, 2822, 0, 2823, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2828, 2829,
	2830, 2831, 0, 0, 2835, 2836, 2837, 2838, 2839, 2840,
	0, 0, 0, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 0, 2856, 0, 0, 1166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 1724, 558, 0, 0, 1757, 1166,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 158, 158, 158, 158, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 3943, 3944, 3945, 3946, 0, 0, 0,
	0, 3950, 0, 0, 0, 3953, 3954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 158, 0, 0, 0, 658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	158, 0, 1757, 158, 158, 158, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 658, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2246, 0, 0, 0, 0, 0, 0, 3198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 703, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3234, 3235, 3236, 3237, 3238, 3239, 4064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	158, 2246, 2246, 2246, 0, 0, 0, 2246, 0, 2246,
	2246, 2246, 0, 2246, 2246, 0, 0, 0, 1089, 2246,
	0, 0, 0, 0, 4099, 4100, 4101, 0, 0, 0,
	0, 0, 0, 2246, 2246, 2246, 2246, 0, 0, 2246,
	2246, 2246, 2246, 2246, 2246, 0, 0, 0, 2246, 2246,
	2246, 2246, 2246, 2246, 2246, 2246, 2246, 2246, 2246, 2246,
	0, 0, 0, 0, 158, 158, 158, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	42, 45, 0, 0, 0, 714, 0, 0, 0, 4149,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 75, 76, 0, 0, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 4178, 0, 0, 0, 0, 0,
	0, 0, 63, 159, 0, 495, 89, 0, 0, 0,
	0, 4188, 0, 42, 159, 0, 0, 0, 0, 0,
	0, 158, 745, 0, 4196, 0, 0, 71, 0, 0,
	0, 0, 1757, 659, 93, 0, 0, 47, 0, 158,
	0, 0, 159, 0, 0, 158, 158, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 159, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	161, 0, 496, 0, 0, 4298, 0, 0, 0, 159,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 159, 0, 0, 0, 4291, 0, 0, 0,
	660, 4710, 0, 0, 0, 0, 0, 0, 0, 161,
	49, 90, 56, 55, 58, 0, 0, 80, 0, 96,
	0, 0, 0, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 1162, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 496, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4292, 0,
	0, 0, 0, 0, 0, 0, 0, 3645, 3646, 3647,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 3666, 0, 0, 4407,
	0, 0, 0, 0, 0, 0, 3673, 0, 0, 0,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 3684, 3685, 3686, 3687, 0, 0, 0, 0,
	3692, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 3702, 3703, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4294, 0, 0, 0, 0, 0, 0, 0,
	3711, 0, 4303, 4295, 4296, 4297, 4301, 4302, 4299, 0,
	4300, 0, 4304, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 64, 81, 158, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4544, 159, 0, 0, 0, 4547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4305,
	4293, 495, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 158, 0, 0, 0, 0, 496, 0,
	0, 658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1089, 1089,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 4672, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 2246, 0, 0, 0, 1090, 0, 0, 2246,
	2246, 2246, 2246, 2246, 0, 0, 0, 0, 495, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 2712, 0, 0, 0, 0, 2246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1393, 0, 2661,
	0, 0, 0, 0, 0, 2685, 743, 85, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3947,
	3948, 3949, 0, 3951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 0, 2660, 3965, 3966,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 3970,
	0, 0, 0, 158, 2682, 0, 158, 2866, 1759, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 2648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4003,
	0, 0, 0, 0, 0, 0, 0, 4006, 0, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2651, 2650, 2663, 2670, 2649,
	2662, 2653, 0, 0, 2686, 0, 0, 0, 0, 158,
	158, 0, 0, 0, 0, 2695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2673, 2671, 2666, 0, 0, 0, 0, 2668,
	4076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2684, 2706, 2657, 2656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2652, 0, 0, 0, 4092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2658, 2659, 0,
	0, 2676, 0, 2667, 2669, 2672, 2674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4117,
	4118, 4119, 4120, 0, 0, 0, 0, 0, 0, 4124,
	4125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4135, 0, 0, 0, 0,
	0, 0, 0, 0, 2702, 0, 0, 0, 0, 0,
	0, 0, 0, 4138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 2710,
	1090, 0, 0, 0, 0, 1090, 0, 0, 0, 0,
	2692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2246, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 158, 703, 0, 0, 0, 0,
	4186, 2246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 4209, 4210, 4211, 4212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4227, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 495, 495, 495,
	0, 0, 0, 0, 0, 4240, 1089, 0, 158, 0,
	2678, 159, 159, 159, 159, 159, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2689,
	0, 0, 0, 4320, 4321, 0, 0, 0, 0, 0,
	0, 0, 2655, 0, 0, 0, 0, 4331, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4340, 0,
	0, 0, 0, 496, 496, 496, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4360, 161, 161,
	161, 161, 161, 0, 161, 0, 0, 0, 0, 158,
	4377, 0, 2679, 2680, 0, 0, 2683, 0, 0, 2688,
	0, 2693, 2690, 2691, 0, 2694, 2687, 0, 2697, 2696,
	2698, 0, 2699, 2700, 2701, 0, 0, 2703, 2704, 2705,
	2707, 2708, 2709, 0, 0, 0, 2681, 2711, 0, 0,
	0, 0, 0, 0, 0, 0, 2675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 159, 159, 0, 0, 0, 659, 0, 2182, 0,
	0, 0, 0, 0, 4417, 0, 0, 0, 4420, 0,
	159, 0, 0, 159, 159, 159, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 659, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 1665, 0, 659, 0, 0,
	158, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 161,
	0, 0, 0, 660, 0, 2183, 0, 0, 4469, 0,
	2677, 0, 0, 0, 0, 0, 0, 161, 159, 0,
	161, 161, 161, 161, 0, 495, 0, 0, 158, 2281,
	0, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	159, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 2282, 0, 2366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 4559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 159, 159, 1666, 0, 0,
	4604, 0, 1090, 4607, 4608, 0, 660, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 4619, 0, 0, 2281,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4649, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 161, 161, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2282, 0, 0, 0,
	1162, 159, 0, 0, 0, 0, 2712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 159, 159, 160, 0, 493,
	159, 1393, 0, 2661, 0, 0, 0, 0, 160, 2685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 2660, 0, 0, 0, 158, 0, 0, 161, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 2682, 0,
	0, 160, 1159, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 161, 161, 0, 0, 0, 161, 2639, 0,
	0, 1088, 0, 160, 0, 0, 1088, 1625, 158, 0,
	0, 0, 0, 0, 0, 493, 160, 0, 1680, 1683,
	1684, 1685, 1686, 1687, 1688, 0, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 0,
	1667, 1668, 1669, 1649, 1648, 1681, 1650, 1653, 1647, 1651,
	1646, 0, 0, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1671, 1672, 1673, 1674, 1675, 1677,
	1678, 1679, 0, 0, 0, 0, 0, 0, 0, 2651,
	3506, 2663, 0, 3505, 2662, 2653, 0, 0, 2686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2695,
	0, 0, 0, 1723, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 1723, 557, 0, 0, 1756,
	0, 0, 0, 0, 0, 2684, 2706, 2657, 2656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 3507, 3508, 0, 0, 2676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1682, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 1670, 2113, 0, 0, 2702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2135, 0, 0, 658, 0, 159, 0,
	0, 0, 0, 2710, 658, 158, 0, 0, 0, 0,
	0, 1089, 0, 0, 2692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 659, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 161,
	0, 660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 159, 0, 0, 0, 0, 0, 0,
	0, 659, 0, 0, 2678, 0, 0, 0, 0, 0,
	2187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 1090, 1090,
	0, 0, 0, 2689, 2281, 0, 0, 0, 0, 0,
	0, 0, 2187, 0, 2187, 0, 2655, 2324, 0, 0,
	0, 0, 0, 0, 2325, 0, 0, 0, 0, 2187,
	2331, 2187, 0, 0, 0, 0, 0, 0, 0, 660,
	161, 0, 0, 0, 0, 0, 0, 0, 660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 2679, 2680, 0, 0,
	2683, 0, 0, 2688, 0, 2693, 2690, 2691, 0, 2694,
	2687, 2282, 2697, 2696, 2698, 0, 2699, 2700, 2701, 0,
	0, 2703, 2704, 2705, 2707, 2708, 2709, 0, 0, 0,
	2681, 2711, 0, 0, 0, 160, 0, 0, 0, 0,
	2675, 0, 0, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	2187, 0, 493, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 159, 0, 0, 159, 0, 0, 0,
	1090, 0, 0, 0, 0, 89, 158, 0, 0, 0,
	0, 4298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2523, 495, 0, 2677, 0, 0, 0, 0, 0,
	0, 0, 4291, 1756, 0, 4632, 4635, 4631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	161, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	159, 0, 0, 0, 0, 0, 495, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 62, 92, 91, 158, 0, 0, 161, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 161, 0, 0,
	0, 2182, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4303, 4295,
	4296, 4297, 4301, 4302, 4299, 0, 4300, 0, 4304, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 2281, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4305, 4293, 0, 66, 67,
	73, 0, 74, 2282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 1089, 0,
	0, 161, 0, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2585, 3313, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2597,
	0, 0, 0, 0, 2597, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	493, 493, 493, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 160, 160, 160, 160,
	0, 160, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 495, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 2755, 0, 0, 1088,
	1088, 0, 0, 0, 0, 2187, 0, 0, 159, 0,
	0, 496, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 160, 0, 0, 0,
	159, 159, 2184, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 160, 160, 160,
	160, 0, 0, 495, 0, 161, 0, 0, 0, 0,
	0, 495, 495, 495, 495, 0, 0, 160, 0, 495,
	495, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 495, 0, 159, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 493,
	496, 0, 0, 2280, 0, 0, 0, 0, 496, 496,
	496, 496, 0, 0, 0, 0, 496, 496, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1088, 496, 496, 0, 161, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2993, 2997, 0, 0, 0, 0, 660, 0, 160, 160,
	160, 0, 0, 0, 0, 0, 0, 3313, 0, 0,
	2182, 0, 0, 3020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2280, 0, 0, 0, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2597, 0, 0, 0, 0,
	0, 3046, 0, 2597, 0, 0, 2597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2183, 0, 0,
	0, 0, 2187, 2187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 160,
	160, 0, 0, 0, 160, 159, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 3196, 0, 0, 0, 0,
	0, 0, 0, 3196, 3196, 3196, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 2187, 0, 0,
	0, 0, 161, 0, 71, 0, 0, 161, 0, 0,
	0, 93, 495, 0, 47, 0, 0, 0, 0, 0,
	0, 2187, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 89, 0, 0, 0,
	0, 0, 4298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3277, 0, 0, 4291, 0, 0, 0, 0, 4704, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 0, 0, 1088, 0, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2187, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 659, 0, 0, 0,
	57, 0, 0, 0, 659, 159, 0, 0, 0, 0,
	0, 3313, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 3430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3438, 3439, 3440, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 3196, 3196,
	0, 0, 0, 495, 0, 71, 0, 0, 0, 0,
	0, 0, 93, 660, 0, 47, 69, 70, 3476, 4294,
	0, 660, 161, 0, 0, 0, 160, 0, 0, 4303,
	4295, 4296, 4297, 4301, 4302, 4299, 0, 4300, 0, 4304,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4298, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 2733,
	496, 0, 3535, 0, 4291, 0, 0, 0, 0, 4698,
	0, 0, 2733, 0, 2733, 0, 0, 0, 3555, 0,
	0, 0, 0, 0, 0, 2733, 0, 2733, 3564, 2733,
	2733, 2733, 2733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 495, 0, 495, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4305, 4293, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 2280, 0,
	3196, 49, 90, 56, 55, 58, 3644, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4292, 0, 0, 0,
	0, 0, 0, 0, 0, 3660, 0, 0, 0, 496,
	0, 496, 0, 496, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2641, 2642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 2187, 0, 0, 0, 0, 2733, 69, 70, 0,
	4294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4303, 4295, 4296, 4297, 4301, 4302, 4299, 0, 4300, 0,
	4304, 0, 496, 495, 0, 78, 159, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 160, 0, 0, 0, 0, 160, 0, 60,
	160, 0, 1761, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 2997, 0, 0, 0, 495, 0, 495,
	0, 0, 0, 0, 0, 495, 0, 4305, 4293, 0,
	66, 67, 73, 0, 74, 160, 0, 0, 0, 0,
	0, 0, 0, 3196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3313, 0, 160, 160, 159, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 0, 496, 0, 71, 0,
	0, 0, 496, 0, 0, 93, 3877, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 2184, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 4298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4291, 0, 0,
	0, 0, 4690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 3928,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 2187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 0,
	2280, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 160, 96, 0, 85, 0, 0, 160, 4292,
	0, 0, 0, 0, 0, 0, 0, 3070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 92, 91,
	0, 3107, 1088, 0, 57, 0, 0, 0, 3313, 0,
	3118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 3138, 3139, 3140, 3141,
	3142, 3143, 3144, 3145, 0, 660, 3148, 3149, 3150, 3151,
	3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161,
	3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3196,
	3184, 3185, 3196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 0, 4294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4303, 4295, 4296, 4297, 4301, 4302, 4299,
	659, 4300, 0, 4304, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 4078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4085, 0, 0, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4305, 4293, 160, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 3325, 3326, 3327, 0, 3331, 3332, 3333, 3334,
	3335, 0, 0, 3338, 3339, 3340, 3341, 3342, 3343, 3344,
	3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354,
	0, 3356, 3357, 3358, 3359, 3360, 3361, 0, 3364, 3365,
	0, 0, 0, 0, 160, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 493, 0, 0,
	0, 0, 0, 0, 0, 493, 493, 493, 493, 0,
	71, 0, 0, 493, 493, 0, 493, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	493, 0, 160, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 3196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 71, 0, 4298, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4225, 4291,
	0, 0, 0, 0, 4663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	59, 61, 0, 0, 4298, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4291, 0, 0, 0, 0,
	4645, 0, 0, 0, 0, 0, 0, 0, 0, 3543,
	0, 0, 0, 0, 0, 0, 3196, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	2187, 4292, 0, 0, 0, 3582, 3583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 62,
	92, 91, 1088, 0, 2184, 0, 57, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 2187, 57, 89, 0, 0, 0, 0, 0, 4298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 4294, 0, 0, 0, 0,
	4291, 0, 0, 0, 0, 4303, 4295, 4296, 4297, 4301,
	4302, 4299, 0, 4300, 0, 4304, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 4225, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 160, 84, 0, 0, 69, 70,
	0, 4294, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 4303, 4295, 4296, 4297, 4301, 4302, 4299, 0, 4300,
	0, 4304, 0, 0, 0, 0, 78, 3735, 79, 3737,
	0, 0, 160, 0, 0, 3743, 3744, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 84, 4292, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 2187, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 493, 57, 3196, 0,
	0, 0, 4305, 4293, 0, 66, 67, 73, 0, 74,
	0, 493, 42, 0, 0, 0, 2187, 0, 0, 0,
	0, 493, 0, 0, 0, 0, 71, 0, 0, 1088,
	0, 0, 0, 93, 0, 0, 47, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2187, 0, 0, 0, 0, 4305, 4293,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4294, 0, 89, 0,
	0, 0, 0, 0, 4298, 42, 4303, 4295, 4296, 4297,
	4301, 4302, 4299, 4642, 4300, 0, 4304, 0, 0, 71,
	0, 78, 0, 79, 0, 4291, 93, 0, 0, 47,
	4641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4298, 0, 0,
	0, 3888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4291, 0,
	0, 0, 0, 4640, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 160,
	0, 96, 59, 61, 0, 0, 0, 4292, 87, 0,
	0, 0, 0, 4305, 4293, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 493, 59, 61,
	0, 0, 0, 0, 87, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 85, 0, 69, 70,
	0, 4294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4303, 4295, 4296, 4297, 4301, 4302, 4299, 0, 4300,
	0, 4304, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3979, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 493, 0, 493, 0,
	493, 69, 70, 0, 4294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4303, 4295, 4296, 4297, 4301, 4302,
	4299, 0, 4300, 0, 4304, 0, 0, 0, 0, 78,
	0, 79, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 4305, 4293,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4305, 4293, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4141, 0, 4143, 4144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 0, 493, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 903, 1046, 0, 0, 449, 804, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 708, 858, 891, 260, 707, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 4328, 173, 479, 191,
	812, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 796, 797, 930, 988, 877, 975, 1052, 911, 980,
	1053, 89, 0, 0, 0, 0, 733, 559, 734, 736,
	737, 738, 739, 0, 0, 172, 735, 740, 741, 742,
	0, 940, 985, 1065, 856, 705, 722, 861, 811, 4386,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 719, 720, 0,
	0, 0, 493, 827, 0, 721, 0, 871, 717, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 723, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 799, 1036, 928, 302, 192, 1042, 926,
	825, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 809, 199, 314, 1021, 892,
	905, 730, 0, 393, 981, 468, 711, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	813, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 710, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 731, 732, 247, 802, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 879, 1068, 826, 814, 815, 818, 962, 963, 816,
	819, 820, 828, 800, 801, 803, 805, 806, 807, 950,
	1043, 864, 810, 1019, 821, 822, 823, 824, 990, 1062,
	798, 243, 747, 840, 841, 842, 748, 843, 844, 749,
	750, 845, 846, 847, 848, 751, 849, 850, 851, 829,
	830, 831, 832, 833, 834, 835, 836, 839, 837, 838,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 808, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 804, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	708, 858, 891, 260, 707, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 812, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 796, 797, 930,
	988, 877, 975, 1052, 911, 980, 1053, 89, 0, 696,
	0, 0, 733, 559, 734, 736, 737, 738, 739, 0,
	0, 172, 735, 740, 741, 742, 0, 940, 985, 1065,
	856, 705, 722, 861, 811, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 719, 720, 0, 0, 0, 0, 827,
	0, 721, 0, 871, 717, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 723, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 799,
	1036, 928, 302, 192, 1042, 926, 825, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 809, 199, 314, 1021, 892, 905, 730, 0, 393,
	981, 468, 711, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 813, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 710,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	731, 732, 247, 802, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 879, 1068, 826,
	814, 815, 818, 962, 963, 816, 819, 820, 828, 800,
	801, 803, 805, 806, 807, 950, 1043, 864, 810, 1019,
	821, 822, 823, 824, 990, 1062, 798, 243, 747, 840,
	841, 842, 748, 843, 844, 749, 750, 845, 846, 847,
	848, 751, 849, 850, 851, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 837, 838, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 808,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 0, 449, 804,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 708, 858, 891, 260,
	707, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 812, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1052,
	911, 980, 1053, 89, 0, 0, 0, 0, 733, 559,
	734, 736, 737, 738, 739, 0, 0, 172, 735, 740,
	741, 742, 0, 940, 985, 1065, 856, 705, 722, 861,
	811, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 719,
	720, 2244, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 799, 1036, 928, 302, 192,
	1042, 926, 825, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 809, 199, 314,
	1021, 892, 905, 730, 0, 393, 981, 468, 711, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 813, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 710, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 731, 732, 247, 802,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 879, 1068, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 950, 1043, 864, 810, 1019, 821, 822, 823, 824,
	990, 1062, 798, 243, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 808, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 0, 449, 804, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 708, 858, 891, 260, 707, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 812, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1052, 911, 980, 1053, 89,
	0, 0, 0, 0, 733, 559, 734, 736, 737, 738,
	739, 0, 0, 172, 735, 740, 741, 742, 0, 940,
	985, 1065, 856, 705, 722, 861, 811, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 719, 720, 701, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 799, 1036, 928, 302, 192, 1042, 926, 825, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 809, 199, 314, 1021, 892, 905, 730,
	0, 393, 981, 468, 711, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 813, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 710, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 731, 732, 247, 802, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 879,
	1068, 826, 814, 815, 818, 962, 963, 816, 819, 820,
	828, 800, 801, 803, 805, 806, 807, 950, 1043, 864,
	810, 1019, 821, 822, 823, 824, 990, 1062, 798, 243,
	747, 840, 841, 842, 748, 843, 844, 749, 750, 845,
	846, 847, 848, 751, 849, 850, 851, 829, 830, 831,
	832, 833, 834, 835, 836, 839, 837, 838, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 808, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 903, 1046, 0, 0,
	449, 804, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 708, 858,
	891, 260, 707, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 812, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 796, 797, 930, 988, 877,
	975, 1052, 911, 2453, 1053, 89, 0, 0, 0, 0,
	2455, 559, 734, 736, 737, 738, 739, 0, 0, 172,
	735, 740, 741, 742, 2454, 940, 985, 1065, 856, 705,
	722, 861, 811, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 719, 720, 0, 0, 0, 0, 827, 0, 721,
	0, 871, 717, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 723, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 799, 1036, 928,
	302, 192, 1042, 926, 825, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 809,
	199, 314, 1021, 892, 905, 730, 0, 393, 981, 468,
	711, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 813, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 710, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 731, 732,
	247, 802, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 879, 1068, 826, 814, 815,
	818, 962, 963, 816, 819, 820, 828, 800, 801, 803,
	805, 806, 807, 950, 1043, 864, 810, 1019, 821, 822,
	823, 824, 990, 1062, 798, 243, 747, 840, 841, 842,
	748, 843, 844, 749, 750, 845, 846, 847, 848, 751,
	849, 850, 851, 829, 830, 831, 832, 833, 834, 835,
	836, 839, 837, 838, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 808, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 903, 1046, 0, 0, 449, 804, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 708, 858, 891, 260, 707, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	812, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 796, 797, 930, 988, 877, 975, 1052, 911, 980,
	1053, 89, 0, 0, 0, 0, 2353, 559, 734, 736,
	737, 738, 739, 0, 0, 172, 735, 740, 741, 742,
	0, 940, 985, 1065, 856, 705, 722, 861, 811, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 719, 720, 2244,
	0, 0, 0, 827, 0, 721, 0, 871, 717, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 723, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 799, 1036, 928, 302, 192, 1042, 926,
	825, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 809, 199, 314, 1021, 892,
	905, 730, 0, 393, 981, 468, 711, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	813, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 710, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 731, 732, 247, 802, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 879, 1068, 826, 814, 815, 818, 962, 963, 816,
	819, 820, 828, 800, 801, 803, 805, 806, 807, 950,
	1043, 864, 810, 1019, 821, 822, 823, 824, 990, 1062,
	798, 243, 747, 840, 841, 842, 748, 843, 844, 749,
	750, 845, 846, 847, 848, 751, 849, 850, 851, 829,
	830, 831, 832, 833, 834, 835, 836, 839, 837, 838,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 808, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 804, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	708, 858, 891, 260, 707, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 812, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 796, 797, 930,
	988, 877, 975, 1052, 911, 980, 1053, 89, 0, 0,
	0, 0, 2350, 559, 734, 736, 737, 738, 739, 0,
	0, 172, 735, 740, 741, 742, 0, 940, 985, 1065,
	856, 705, 722, 861, 811, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 719, 720, 2244, 0, 0, 0, 827,
	0, 721, 0, 871, 717, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 723, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 799,
	1036, 928, 302, 192, 1042, 926, 825, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 809, 199, 314, 1021, 892, 905, 730, 0, 393,
	981, 468, 711, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 813, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 710,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	731, 732, 247, 802, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 879, 1068, 826,
	814, 815, 818, 962, 963, 816, 819, 820, 828, 800,
	801, 803, 805, 806, 807, 950, 1043, 864, 810, 1019,
	821, 822, 823, 824, 990, 1062, 798, 243, 747, 840,
	841, 842, 748, 843, 844, 749, 750, 845, 846, 847,
	848, 751, 849, 850, 851, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 837, 838, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 808,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 42, 449, 804,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 708, 858, 891, 260,
	707, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 812, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1052,
	911, 980, 1053, 89, 0, 0, 0, 0, 733, 559,
	734, 736, 737, 738, 739, 0, 0, 172, 735, 740,
	741, 742, 0, 940, 985, 1065, 856, 705, 722, 861,
	811, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 719,
	720, 0, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 799, 1544, 928, 302, 192,
	1042, 926, 825, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 809, 199, 314,
	1021, 892, 905, 730, 0, 393, 981, 468, 711, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 813, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 710, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 731, 732, 247, 802,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 879, 1068, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 950, 1043, 864, 810, 1019, 821, 822, 823, 824,
	990, 1062, 798, 243, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 808, 200, 213, 313, 1543,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 0, 449, 804, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 708, 858, 891, 260, 707, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 812, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1052, 911, 980, 1053, 89,
	0, 2111, 0, 0, 733, 559, 734, 736, 737, 738,
	739, 0, 0, 172, 735, 740, 741, 742, 0, 940,
	985, 1065, 856, 705, 722, 861, 811, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 719, 720, 0, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 799, 1036, 928, 302, 192, 1042, 926, 825, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 809, 199, 314, 1021, 892, 905, 730,
	0, 393, 981, 468, 711, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 813, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 710, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 731, 732, 247, 802, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 879,
	1068, 826, 814, 815, 818, 962, 963, 816, 819, 820,
	828, 800, 801, 803, 805, 806, 807, 950, 1043, 864,
	810, 1019, 821, 822, 823, 824, 990, 1062, 798, 243,
	747, 840, 841, 842, 748, 843, 844, 749, 750, 845,
	846, 847, 848, 751, 849, 850, 851, 829, 830, 831,
	832, 833, 834, 835, 836, 839, 837, 838, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 808, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 903, 1046, 0, 0,
	449, 804, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 708, 858,
	891, 260, 707, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 812, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 796, 797, 930, 988, 877,
	975, 1052, 911, 980, 1053, 89, 0, 0, 0, 0,
	733, 559, 734, 736, 737, 738, 739, 0, 0, 172,
	735, 740, 741, 742, 0, 940, 985, 1065, 856, 705,
	722, 861, 811, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 719, 720, 0, 0, 0, 0, 827, 0, 721,
	0, 871, 717, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 723, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 799, 1036, 928,
	302, 192, 1042, 926, 825, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 809,
	199, 314, 1021, 892, 905, 730, 0, 393, 981, 468,
	711, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 813, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 710, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 731, 732,
	247, 802, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 879, 1068, 826, 814, 815,
	818, 962, 963, 816, 819, 820, 828, 800, 801, 803,
	805, 806, 807, 950, 1043, 864, 810, 1019, 821, 822,
	823, 824, 990, 1062, 798, 243, 747, 840, 841, 842,
	748, 843, 844, 749, 750, 845, 846, 847, 848, 751,
	849, 850, 851, 829, 830, 831, 832, 833, 834, 835,
	836, 839, 837, 838, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 808, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 903, 1046, 0, 0, 449, 804, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 1108, 858, 891, 260, 1106, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	812, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 796, 797, 930, 988, 877, 975, 1052, 911, 980,
	1053, 89, 0, 0, 0, 0, 733, 559, 734, 736,
	737, 738, 739, 0, 0, 172, 735, 740, 741, 742,
	0, 940, 985, 1065, 856, 1125, 722, 861, 811, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 719, 720, 0,
	0, 0, 0, 827, 0, 721, 0, 871, 717, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 723, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 799, 1036, 928, 302, 192, 1042, 926,
	825, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 809, 199, 314, 1021, 892,
	905, 730, 0, 393, 981, 468, 711, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	813, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 710, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 731, 732, 247, 802, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 879, 1068, 826, 814, 815, 818, 962, 963, 816,
	819, 820, 828, 800, 801, 803, 805, 806, 807, 950,
	1043, 864, 810, 1019, 821, 822, 823, 824, 990, 1062,
	798, 243, 747, 840, 841, 842, 748, 843, 844, 749,
	750, 845, 846, 847, 848, 751, 849, 850, 851, 829,
	830, 831, 832, 833, 834, 835, 836, 839, 837, 838,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 808, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 804, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	1108, 858, 891, 260, 1106, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 812, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 796, 797, 930,
	988, 877, 975, 1052, 911, 980, 1053, 89, 0, 0,
	0, 0, 733, 559, 734, 736, 737, 738, 739, 0,
	0, 172, 735, 740, 741, 742, 0, 940, 985, 1065,
	856, 1125, 722, 861, 811, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 719, 720, 0, 0, 0, 0, 827,
	0, 721, 0, 871, 717, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 723, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 799,
	1036, 928, 302, 192, 1042, 926, 825, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 809, 199, 314, 1021, 892, 905, 730, 0, 393,
	981, 468, 711, 279, 0, 4548, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 813, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 710,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	731, 732, 247, 802, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 879, 1068, 826,
	814, 815, 818, 962, 963, 816, 819, 820, 828, 800,
	801, 803, 805, 806, 807, 950, 1043, 864, 810, 1019,
	821, 822, 823, 824, 990, 1062, 798, 243, 747, 840,
	841, 842, 748, 843, 844, 749, 750, 845, 846, 847,
	848, 751, 849, 850, 851, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 837, 838, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 808,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 0, 449, 804,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 1108, 858, 891, 260,
	1106, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 812, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1052,
	911, 980, 1053, 89, 0, 0, 0, 0, 733, 559,
	734, 736, 737, 738, 739, 0, 0, 172, 735, 740,
	741, 742, 0, 940, 985, 1065, 856, 1125, 722, 861,
	811, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 719,
	720, 0, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 799, 1036, 928, 302, 192,
	1042, 926, 825, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 809, 199, 314,
	1021, 892, 905, 730, 0, 393, 981, 468, 711, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 813, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 710, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 731, 732, 247, 802,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 879, 1068, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 2356, 2357, 2358, 810, 1019, 821, 822, 823, 824,
	990, 1062, 798, 243, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 808, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	1832, 2012, 0, 3715, 449, 1866, 2016, 1815, 1845, 2034,
	1851, 1854, 1935, 1781, 1904, 358, 1842, 1782, 1964, 1765,
	1820, 1769, 1833, 1770, 1817, 260, 1813, 1977, 1907, 2014,
	1886, 1928, 1938, 259, 245, 1896, 1895, 2002, 1831, 1830,
	1933, 1991, 2013, 1885, 0, 173, 479, 191, 3716, 315,
	1988, 499, 3717, 424, 340, 502, 501, 1881, 1997, 1902,
	1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929, 2019, 89,
	0, 696, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 1925, 2010, 1836, 500, 1876,
	1934, 2039, 1768, 1921, 0, 1773, 1784, 2033, 2003, 1827,
	1828, 264, 0, 0, 0, 0, 0, 0, 0, 1879,
	1903, 1955, 1861, 0, 469, 1940, 1950, 1969, 1853, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1918, 0, 0, 0, 1789, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1796, 1766, 1824, 1957, 1767, 1764, 341,
	1785, 1971, 3719, 1862, 302, 192, 2007, 1860, 1859, 1944,
	1790, 1981, 2031, 1846, 312, 1788, 196, 1783, 1791, 1844,
	354, 1954, 1962, 178, 199, 314, 1978, 1818, 1835, 246,
	2186, 393, 1930, 468, 498, 279, 0, 1911, 392, 316,
	461, 1945, 2009, 467, 1847, 443, 478, 483, 272, 1887,
	235, 421, 262, 255, 1826, 1968, 1772, 285, 376, 250,
	307, 1865, 1936, 1819, 242, 1948, 1919, 1983, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1979,
	1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011, 294, 286,
	1986, 1984, 1837, 362, 225, 1900, 1893, 1880, 1958, 472,
	2035, 258, 1963, 474, 181, 407, 406, 1850, 293, 1965,
	182, 171, 386, 183, 303, 205, 1990, 487, 221, 310,
	451, 497, 278, 353, 1932, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1960, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 2017, 323, 267,
	271, 287, 298, 1931, 390, 428, 475, 1922, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1956, 217, 238, 429,
	211, 2005, 1980, 1913, 1868, 1874, 1774, 0, 210, 1869,
	1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810,
	282, 1943, 464, 465, 247, 1786, 2025, 212, 1787, 2024,
	350, 357, 349, 2028, 2026, 460, 2006, 1914, 1899, 1897,
	1779, 2004, 1912, 1898, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1901, 426, 321, 0, 207,
	0, 425, 2015, 2041, 440, 227, 1805, 1972, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1947, 2038, 361, 394, 234, 470, 422, 263, 1801,
	0, 1804, 1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022,
	1959, 1794, 193, 194, 1998, 1999, 195, 1892, 2008, 1780,
	0, 1976, 189, 190, 175, 180, 1939, 2036, 1852, 243,
	165, 1776, 1777, 1778, 166, 1882, 1883, 168, 169, 1994,
	1993, 1992, 1995, 170, 2029, 2027, 2030, 1795, 1816, 1838,
	1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1910, 200, 213, 313, 3718, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1973, 1917, 0,
	1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040, 347, 2000,
	1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855,
	1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967,
	1975, 1982, 1987, 1989, 473, 253, 1890, 1915, 1953, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1863, 197, 0, 0, 203, 0, 204, 206,
	1848, 202, 1996, 2032, 1927, 1941, 1832, 2012, 0, 1974,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 173, 479, 191, 2023, 315, 1988, 499, 477, 424,
	340, 502, 501, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 1925, 2010, 1836, 500, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 3215, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 2001, 1862,
	302, 192, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 178,
	199, 314, 1978, 1818, 1835, 246, 0, 393, 1930, 468,
	2284, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 1793, 1834, 2011, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	181, 407, 406, 1850, 293, 1965, 182, 171, 386, 183,
	303, 205, 1990, 487, 221, 310, 451, 2283, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1960, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 193, 194,
	1998, 1999, 195, 1892, 2008, 1780, 0, 1976, 189, 190,
	175, 180, 1939, 2036, 1852, 243, 165, 1776, 1777, 1778,
	166, 1882, 1883, 168, 169, 1994, 1993, 1992, 1995, 170,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 2037, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 1832, 2012, 0, 1974, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 173, 479, 191,
	2023, 315, 1988, 499, 477, 424, 340, 502, 501, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1925, 2010, 1836,
	500, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 2001, 1862, 302, 192, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 178, 199, 314, 1978, 1818,
	1835, 246, 2186, 393, 1930, 468, 498, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 181, 407, 406, 1850,
	293, 1965, 182, 171, 386, 183, 303, 205, 1990, 487,
	221, 310, 451, 497, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1960, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 193, 194, 1998, 1999, 195, 1892,
	2008, 1780, 0, 1976, 189, 190, 175, 180, 1939, 2036,
	1852, 243, 165, 1776, 1777, 1778, 166, 1882, 1883, 168,
	169, 1994, 1993, 1992, 1995, 170, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 2037, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 173, 479, 191, 2023, 315, 1988, 499,
	477, 424, 340, 502, 501, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 1925, 2010, 1836, 500, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 2277, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 192, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 178, 199, 314, 1978, 1818, 1835, 246, 0, 393,
	1930, 468, 2284, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 1793, 1834, 2011, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 181, 407, 406, 1850, 293, 1965, 182, 171,
	386, 183, 303, 205, 1990, 487, 221, 310, 451, 2283,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1960, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	193, 194, 1998, 1999, 195, 1892, 2008, 1780, 0, 1976,
	189, 190, 175, 180, 1939, 2036, 1852, 243, 165, 1776,
	1777, 1778, 166, 1882, 1883, 168, 169, 1994, 1993, 1992,
	1995, 170, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 1832, 2012, 0, 1974, 449, 1866,
	2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781, 1904, 358,
	1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770, 1817, 260,
	1813, 1977, 1907, 2014, 1886, 1928, 1938, 259, 245, 1896,
	1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885, 0, 173,
	479, 191, 2023, 315, 1988, 499, 477, 424, 340, 502,
	501, 1881, 1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018,
	1843, 1929, 2019, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 1925,
	2010, 1836, 500, 1876, 1934, 2039, 1768, 1921, 0, 1773,
	1784, 2033, 2003, 1827, 1828, 264, 0, 0, 0, 0,
	0, 0, 0, 1879, 1903, 1955, 1861, 0, 469, 1940,
	1950, 1969, 1853, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 1918, 0, 0, 0, 1789,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1796, 1766, 1824,
	1957, 1767, 1764, 341, 1785, 1971, 2001, 1862, 302, 192,
	2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846, 312, 1788,
	196, 1783, 1791, 1844, 354, 1954, 1962, 178, 199, 314,
	1978, 1818, 1835, 246, 0, 393, 1930, 468, 2284, 279,
	0, 1911, 392, 316, 461, 1945, 2009, 467, 1847, 443,
	478, 483, 272, 1887, 235, 421, 262, 255, 1826, 1968,
	1772, 285, 376, 250, 307, 1865, 1936, 1819, 242, 1948,
	1919, 1983, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1979, 1961, 1985, 1812, 1792, 1803, 1793,
	1834, 2011, 294, 286, 1986, 1984, 1837, 362, 225, 1900,
	1893, 1880, 1958, 472, 2035, 258, 1963, 474, 181, 407,
	406, 1850, 293, 1965, 182, 171, 386, 183, 303, 205,
	1990, 487, 221, 310, 451, 2283, 278, 353, 1932, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1960,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 2017, 323, 267, 271, 287, 298, 1931, 390, 428,
	475, 1922, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1956, 217, 238, 429, 211, 2005, 1980, 1913, 1868, 1874,
	1774, 0, 210, 1869, 1870, 1871, 1872, 1873, 1952, 1823,
	1839, 1811, 1926, 1810, 282, 1943, 464, 465, 247, 1786,
	2025, 212, 1787, 2024, 350, 357, 349, 2028, 2026, 460,
	2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1901,
	426, 321, 0, 207, 0, 425, 2015, 2041, 440, 227,
	1805, 1972, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1947, 2038, 361, 394, 234,
	470, 422, 263, 1801, 0, 1804, 1799, 1802, 1800, 1905,
	1906, 2020, 2021, 2022, 1959, 1794, 193, 194, 1998, 1999,
	195, 1892, 2008, 1780, 0, 1976, 189, 190, 175, 180,
	1939, 2036, 1852, 243, 165, 1776, 1777, 1778, 166, 1882,
	1883, 168, 169, 1994, 1993, 1992, 1995, 170, 2029, 2027,
	2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970,
	1942, 1951, 1825, 1884, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1910, 200, 213, 313, 2037,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1973, 1917, 0, 1856, 1858, 1857, 1807, 1809, 1808,
	1806, 2040, 347, 2000, 1763, 1771, 1798, 1814, 1821, 1829,
	1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909,
	1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989, 473, 253,
	1890, 1915, 1953, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1863, 197, 0, 0,
	203, 0, 204, 206, 1848, 202, 1996, 2032, 1927, 1941,
	903, 1046, 0, 0, 449, 1113, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 1108, 858, 891, 260, 1106, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 1146, 315,
	0, 499, 477, 424, 340, 502, 501, 945, 0, 1120,
	1133, 930, 988, 877, 975, 1052, 911, 980, 1053, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 1128, 1142, 1109, 500, 940,
	985, 1065, 856, 1125, 0, 861, 1097, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1124, 0, 0, 0, 871, 1093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 1135, 1036, 928, 302, 192, 1042, 926, 1112, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 178, 199, 314, 1021, 892, 905, 246,
	3315, 393, 981, 468, 2369, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 1131, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 2368, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 464, 465, 247, 1098, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 1103,
	0, 1105, 1101, 1104, 1102, 1121, 1122, 1143, 1144, 1145,
	1132, 1099, 193, 194, 1140, 1141, 195, 950, 1043, 864,
	0, 1019, 189, 190, 175, 180, 990, 1062, 1111, 243,
	165, 1094, 1095, 1096, 166, 1115, 1116, 168, 169, 1138,
	1137, 1136, 1139, 170, 1148, 1147, 1149, 1100, 1107, 1110,
	1117, 1118, 1119, 1126, 1127, 1134, 1129, 1130, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1123, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 1832, 2012, 0, 1974,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 173, 479, 191, 2023, 315, 1988, 499, 477, 424,
	340, 502, 501, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 1925, 2010, 1836, 500, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 2867, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 2001, 1862,
	302, 192, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 178,
	199, 314, 1978, 1818, 1835, 246, 0, 393, 1930, 468,
	498, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	0, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 1793, 1834, 2011, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	181, 407, 406, 1850, 293, 1965, 182, 171, 386, 183,
	303, 205, 1990, 487, 221, 310, 451, 497, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1960, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 0, 0,
	1998, 1999, 0, 1892, 2008, 1780, 0, 1976, 189, 190,
	175, 180, 1939, 2036, 1852, 243, 0, 1776, 1777, 1778,
	0, 1882, 1883, 0, 0, 1994, 1993, 1992, 1995, 0,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 2037, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 903, 1046, 0, 0, 449, 1113, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 1108, 858, 891, 260, 1106, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	1146, 315, 0, 499, 477, 424, 340, 502, 501, 945,
	0, 1120, 1133, 930, 988, 877, 975, 1052, 911, 980,
	1053, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1128, 1142, 1109,
	500, 940, 985, 1065, 856, 1125, 0, 861, 1097, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1124, 0, 0, 0, 871, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 1135, 1036, 928, 302, 192, 1042, 926,
	1112, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 178, 199, 314, 1021, 892,
	905, 246, 0, 393, 981, 468, 2369, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	1131, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 2368, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 464, 465, 247, 1098, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 1103, 0, 1105, 1101, 1104, 1102, 1121, 1122, 1143,
	1144, 1145, 1132, 1099, 193, 194, 1140, 1141, 195, 950,
	1043, 864, 0, 1019, 189, 190, 175, 180, 990, 1062,
	1111, 243, 165, 1094, 1095, 1096, 166, 1115, 1116, 168,
	169, 1138, 1137, 1136, 1139, 170, 1148, 1147, 1149, 1100,
	1107, 1110, 1117, 1118, 1119, 1126, 1127, 1134, 1129, 1130,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1123, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 173, 479, 191, 2023, 315, 1988, 499,
	477, 424, 340, 502, 501, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 1925, 2010, 1836, 500, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 192, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 178, 199, 314, 1978, 1818, 1835, 246, 0, 393,
	1930, 468, 498, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 1793, 1834, 2011, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 181, 407, 406, 1850, 293, 1965, 182, 171,
	386, 183, 303, 205, 1990, 487, 221, 310, 451, 497,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1960, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	0, 0, 1998, 1999, 0, 1892, 2008, 1780, 0, 1976,
	189, 190, 175, 180, 1939, 2036, 1852, 243, 0, 1776,
	1777, 1778, 0, 1882, 1883, 0, 0, 1994, 1993, 1992,
	1995, 0, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 903, 1046, 0, 0, 449, 1113,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 1108, 858, 891, 260,
	1106, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 1146, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 1120, 1133, 930, 988, 877, 975, 1052,
	911, 980, 1053, 0, 0, 0, 0, 0, 0, 559,
	0, 1454, 0, 0, 1455, 0, 0, 172, 0, 1128,
	1142, 1109, 0, 940, 985, 1065, 856, 1125, 0, 861,
	1097, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1124, 0, 0, 0, 871,
	1093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 1135, 1036, 928, 302, 192,
	1042, 926, 1112, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 178, 199, 314,
	1021, 892, 905, 246, 0, 393, 981, 468, 1092, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 1131, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 1091, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 464, 465, 247, 1098,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 1103, 0, 1105, 1101, 1104, 1102, 1121,
	1122, 1143, 1144, 1145, 1132, 1099, 193, 194, 1140, 1141,
	195, 950, 1043, 864, 0, 1019, 189, 190, 175, 180,
	990, 1062, 1111, 243, 165, 1094, 1095, 1096, 166, 1115,
	1116, 168, 169, 1138, 1137, 1136, 1139, 170, 1148, 1147,
	1149, 1100, 1107, 1110, 1117, 1118, 1119, 1126, 1127, 1134,
	1129, 1130, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1123, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 0, 449, 1113, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 1108, 858, 891, 260, 1106, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 1146, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 1120,
	1133, 930, 988, 877, 975, 1052, 911, 980, 1053, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 1128, 1142, 1109, 0, 940,
	985, 1065, 856, 1125, 0, 861, 1097, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1124, 0, 0, 0, 871, 1093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 1135, 1036, 928, 302, 192, 1042, 926, 1112, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 178, 199, 314, 1021, 892, 905, 246,
	0, 393, 981, 468, 1092, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 1131, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 1091, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 464, 465, 247, 1098, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 1103,
	0, 1105, 1101, 1104, 1102, 1121, 1122, 1143, 1144, 1145,
	1132, 1099, 193, 194, 1140, 1141, 195, 950, 1043, 864,
	0, 1019, 189, 190, 175, 180, 990, 1062, 1111, 243,
	165, 1094, 1095, 1096, 166, 1115, 1116, 168, 169, 1138,
	1137, 1136, 1139, 170, 1148, 1147, 1149, 1100, 1107, 1110,
	1117, 1118, 1119, 1126, 1127, 1134, 1129, 1130, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1123, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 903, 1046, 0, 0,
	449, 1113, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 1108, 858,
	891, 260, 1106, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 1146, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 1120, 1133, 930, 988, 877,
	975, 1052, 911, 980, 1053, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 1128, 1142, 1109, 0, 940, 985, 1065, 856, 1125,
	0, 861, 1097, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 0, 0,
	0, 871, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 1135, 1036, 928,
	302, 192, 1042, 926, 1112, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 178,
	199, 314, 1021, 892, 905, 246, 0, 393, 981, 468,
	1092, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 1131, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 1091, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 464, 465,
	247, 1098, 1055, 212, 1086, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	1082, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 1087, 1085, 1076, 1077, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 1103, 0, 1105, 1101, 1104,
	1102, 1121, 1122, 1143, 1144, 1145, 1132, 1099, 193, 194,
	1140, 1141, 195, 950, 1043, 864, 0, 1019, 189, 190,
	175, 180, 990, 1062, 1111, 243, 165, 1094, 1095, 1096,
	166, 1115, 1116, 168, 169, 1138, 1137, 1136, 1139, 170,
	1148, 1147, 1149, 1100, 1107, 1110, 1117, 1118, 1119, 1126,
	1127, 1134, 1129, 1130, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1123, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 1083, 1084, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 903, 1046, 0, 0, 449, 1113, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 1108, 858, 891, 260, 1106, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	1146, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 1120, 1133, 930, 988, 877, 975, 1052, 911, 980,
	1053, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1128, 1142, 1109,
	0, 940, 985, 1065, 856, 1125, 0, 861, 1097, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1124, 0, 0, 0, 871, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 1135, 1036, 928, 302, 192, 1042, 926,
	1112, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 178, 199, 314, 1021, 892,
	905, 246, 0, 393, 981, 468, 1092, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	1131, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 1091, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 1621, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 464, 465, 247, 1098, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 1103, 0, 1105, 1101, 1104, 1102, 1121, 1122, 1143,
	1144, 1145, 1132, 1099, 193, 194, 1140, 1141, 195, 950,
	1043, 864, 0, 1019, 189, 190, 175, 180, 990, 1062,
	1111, 243, 165, 1094, 1095, 1096, 166, 1115, 1116, 168,
	169, 1138, 1137, 1136, 1139, 170, 1148, 1147, 1149, 1100,
	1107, 1110, 1117, 1118, 1119, 1126, 1127, 1134, 1129, 1130,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1123, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 1113, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	1108, 858, 891, 260, 1106, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 1146, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 1120, 1133, 930,
	988, 877, 975, 1052, 911, 980, 1053, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 1128, 1142, 1109, 0, 940, 985, 1065,
	856, 1125, 0, 861, 1097, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 0, 0, 871, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1114, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 1135,
	1036, 928, 302, 192, 1042, 926, 1112, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 178, 199, 314, 1021, 892, 905, 246, 0, 393,
	981, 468, 1092, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 1131, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 1091,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 1073,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	464, 465, 247, 1098, 1055, 212, 1086, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 1082, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 1087, 1085, 1076, 1077, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 1103, 0, 1105,
	1101, 1104, 1102, 1121, 1122, 1143, 1144, 1145, 1132, 1099,
	193, 194, 1140, 1141, 195, 950, 1043, 864, 0, 1019,
	189, 190, 175, 180, 990, 1062, 1111, 243, 165, 1094,
	1095, 1096, 166, 1115, 1116, 168, 169, 1138, 1137, 1136,
	1139, 170, 1148, 1147, 1149, 1100, 1107, 1110, 1117, 1118,
	1119, 1126, 1127, 1134, 1129, 1130, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1123,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 1083, 1084, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 1832, 2012, 0, 1974, 449, 1866,
	2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781, 1904, 358,
	1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770, 1817, 260,
	1813, 1977, 1907, 2014, 1886, 1928, 1938, 259, 245, 1896,
	1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885, 0, 0,
	479, 0, 2023, 315, 1988, 0, 477, 424, 340, 0,
	0, 1881, 1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018,
	1843, 1929, 2019, 0, 0, 0, 0, 0, 3173, 3178,
	0, 3181, 3183, 3182, 0, 0, 0, 3175, 0, 1925,
	2010, 1836, 0, 1876, 1934, 2039, 1768, 1921, 0, 1773,
	1784, 2033, 2003, 1827, 1828, 264, 0, 0, 0, 0,
	0, 0, 0, 1879, 1903, 1955, 1861, 0, 469, 1940,
	1950, 1969, 1853, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 1918, 0, 0, 0, 1789,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1796, 1766, 1824,
	1957, 1767, 1764, 341, 1785, 1971, 2001, 1862, 302, 0,
	2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846, 312, 1788,
	196, 1783, 1791, 1844, 354, 1954, 1962, 0, 199, 314,
	1978, 1818, 1835, 246, 0, 393, 1930, 468, 0, 279,
	0, 1911, 392, 316, 461, 1945, 2009, 467, 1847, 443,
	478, 483, 272, 1887, 235, 421, 262, 255, 1826, 1968,
	1772, 285, 376, 250, 307, 1865, 1936, 1819, 242, 1948,
	1919, 1983, 420, 458, 201, 335, 459, 482, 3176, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1979, 1961, 1985, 1812, 1792, 1803, 1793,
	1834, 2011, 294, 286, 1986, 1984, 1837, 362, 225, 1900,
	1893, 1880, 1958, 472, 2035, 258, 1963, 474, 0, 407,
	406, 1850, 293, 1965, 0, 0, 386, 3177, 303, 205,
	1990, 487, 221, 310, 451, 0, 278, 353, 1932, 363,
	198, 381, 330, 332, 329, 333, 283, 0, 0, 1960,
	383, 409, 456, 223, 427, 0, 0, 0, 399, 0,
	0, 2017, 323, 267, 271, 287, 298, 1931, 390, 428,
	475, 1922, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1956, 217, 238, 429, 211, 2005, 1980, 1913, 1868, 1874,
	1774, 0, 210, 1869, 1870, 1871, 1872, 1873, 1952, 1823,
	1839, 1811, 1926, 1810, 282, 1943, 464, 465, 247, 1786,
	2025, 212, 1787, 2024, 350, 357, 349, 2028, 2026, 460,
	2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1901,
	426, 321, 0, 207, 0, 425, 2015, 2041, 440, 227,
	1805, 1972, 455, 0, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1947, 2038, 361, 394, 234,
	470, 422, 263, 1801, 0, 1804, 1799, 1802, 1800, 1905,
	1906, 2020, 2021, 2022, 1959, 1794, 0, 0, 1998, 1999,
	0, 1892, 2008, 1780, 0, 1976, 0, 0, 0, 0,
	1939, 2036, 1852, 243, 0, 1776, 1777, 1778, 0, 1882,
	1883, 0, 0, 1994, 1993, 1992, 1995, 0, 2029, 2027,
	2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970,
	1942, 1951, 1825, 1884, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1910, 200, 213, 313, 2037,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1973, 1917, 0, 1856, 1858, 1857, 1807, 1809, 1808,
	1806, 2040, 347, 2000, 1763, 1771, 1798, 1814, 1821, 1829,
	1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909,
	1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989, 473, 253,
	1890, 1915, 1953, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 0, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1863, 197, 0, 0,
	203, 0, 204, 206, 1848, 202, 1996, 2032, 1927, 1941,
	1832, 2012, 0, 1974, 449, 1866, 2016, 1815, 1845, 2034,
	1851, 1854, 1935, 1781, 1904, 358, 1842, 1782, 1964, 1765,
	1820, 1769, 1833, 1770, 1817, 260, 1813, 1977, 1907, 2014,
	1886, 1928, 1938, 259, 245, 1896, 1895, 2002, 1831, 1830,
	1933, 1991, 2013, 1885, 0, 0, 479, 0, 2023, 315,
	1988, 0, 477, 424, 340, 0, 0, 1881, 1997, 1902,
	1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929, 2019, 0,
	0, 0, 0, 0, 3982, 3178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1925, 2010, 1836, 0, 1876,
	1934, 2039, 1768, 1921, 0, 1773, 1784, 2033, 2003, 1827,
	1828, 264, 0, 0, 0, 0, 0, 0, 0, 1879,
	1903, 1955, 1861, 0, 469, 1940, 1950, 1969, 1853, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1918, 0, 0, 0, 1789, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1796, 1766, 1824, 1957, 1767, 1764, 341,
	1785, 1971, 2001, 1862, 302, 0, 2007, 1860, 1859, 1944,
	1790, 1981, 2031, 1846, 312, 1788, 196, 1783, 1791, 1844,
	354, 1954, 1962, 0, 199, 314, 1978, 1818, 1835, 246,
	0, 393, 1930, 468, 0, 279, 0, 1911, 392, 316,
	461, 1945, 2009, 467, 1847, 443, 478, 483, 272, 1887,
	235, 421, 262, 255, 1826, 1968, 1772, 285, 376, 250,
	307, 1865, 1936, 1819, 242, 1948, 1919, 1983, 420, 458,
	201, 335, 459, 482, 0, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1979,
	1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011, 294, 286,
	1986, 1984, 1837, 362, 225, 1900, 1893, 1880, 1958, 472,
	2035, 258, 1963, 474, 0, 407, 406, 1850, 293, 1965,
	0, 0, 386, 0, 303, 205, 1990, 487, 221, 310,
	451, 0, 278, 353, 1932, 363, 198, 381, 330, 332,
	329, 333, 283, 0, 0, 1960, 383, 409, 456, 223,
	427, 0, 0, 0, 399, 0, 0, 2017, 323, 267,
	271, 287, 298, 1931, 390, 428, 475, 1922, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1956, 217, 238, 429,
	211, 2005, 1980, 1913, 1868, 1874, 1774, 0, 210, 1869,
	1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810,
	282, 1943, 464, 465, 247, 1786, 2025, 212, 1787, 2024,
	350, 357, 349, 2028, 2026, 460, 2006, 1914, 1899, 1897,
	1779, 2004, 1912, 1898, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1901, 426, 321, 0, 207,
	0, 425, 2015, 2041, 440, 227, 1805, 1972, 455, 0,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1947, 2038, 361, 394, 234, 470, 422, 263, 1801,
	0, 1804, 1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022,
	1959, 1794, 0, 0, 1998, 1999, 0, 1892, 2008, 1780,
	0, 1976, 0, 0, 0, 0, 1939, 2036, 1852, 243,
	0, 1776, 1777, 1778, 0, 1882, 1883, 0, 0, 1994,
	1993, 1992, 1995, 0, 2029, 2027, 2030, 1795, 1816, 1838,
	1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1910, 200, 213, 313, 2037, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1973, 1917, 0,
	1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040, 347, 2000,
	1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855,
	1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967,
	1975, 1982, 1987, 1989, 473, 253, 1890, 1915, 1953, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 0, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1863, 197, 0, 0, 203, 0, 204, 206,
	1848, 202, 1996, 2032, 1927, 1941, 1832, 2012, 0, 1974,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 0, 479, 0, 2023, 315, 1988, 0, 477, 424,
	340, 0, 0, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 0, 0, 0, 0, 0,
	0, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 2010, 1836, 0, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 3932, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 2001, 1862,
	302, 0, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 0,
	199, 314, 1978, 1818, 1835, 246, 0, 393, 1930, 468,
	0, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	0, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 1793, 1834, 2011, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	0, 407, 406, 1850, 293, 1965, 0, 0, 386, 0,
	303, 205, 1990, 487, 221, 310, 451, 0, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 0,
	0, 1960, 383, 409, 456, 223, 427, 0, 0, 0,
	399, 0, 0, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 0, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 0, 0,
	1998, 1999, 0, 1892, 2008, 1780, 0, 1976, 0, 0,
	0, 0, 1939, 2036, 1852, 243, 0, 1776, 1777, 1778,
	0, 1882, 1883, 0, 0, 1994, 1993, 1992, 1995, 0,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 2037, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 0, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 1832, 2012, 0, 1974, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 0, 479, 0,
	2023, 315, 1988, 0, 477, 424, 340, 0, 0, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 2010, 1836,
	0, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 3228,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 2001, 1862, 302, 0, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 0, 199, 314, 1978, 1818,
	1835, 246, 0, 393, 1930, 468, 0, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 0, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 0, 407, 406, 1850,
	293, 1965, 0, 0, 386, 0, 303, 205, 1990, 487,
	221, 310, 451, 0, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 1960, 383, 409,
	456, 223, 427, 0, 0, 0, 399, 0, 0, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 0, 0, 1998, 1999, 0, 1892,
	2008, 1780, 0, 1976, 0, 0, 0, 0, 1939, 2036,
	1852, 243, 0, 1776, 1777, 1778, 0, 1882, 1883, 0,
	0, 1994, 1993, 1992, 1995, 0, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 2037, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	0, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 0, 479, 0, 2023, 315, 1988, 0,
	477, 424, 340, 0, 0, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 2010, 1836, 0, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 0, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 0, 199, 314, 1978, 1818, 1835, 246, 0, 393,
	1930, 468, 0, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 1793, 1834, 2011, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 0, 407, 406, 1850, 293, 1965, 0, 0,
	386, 0, 303, 205, 1990, 487, 221, 310, 451, 0,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 0, 0, 1960, 383, 409, 456, 223, 427, 0,
	0, 0, 399, 0, 0, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 2330, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	0, 0, 1998, 1999, 0, 1892, 2008, 1780, 0, 1976,
	0, 0, 0, 0, 1939, 2036, 1852, 243, 0, 1776,
	1777, 1778, 0, 1882, 1883, 0, 0, 1994, 1993, 1992,
	1995, 0, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 0, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 1832, 2012, 0, 1974, 449, 1866,
	2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781, 1904, 358,
	1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770, 1817, 260,
	1813, 1977, 1907, 2014, 1886, 1928, 1938, 259, 245, 1896,
	1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885, 0, 0,
	479, 0, 2023, 315, 1988, 0, 477, 424, 340, 0,
	0, 1881, 1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018,
	1843, 1929, 2019, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	2010, 1836, 0, 1876, 1934, 2039, 1768, 1921, 0, 1773,
	1784, 2033, 2003, 1827, 1828, 264, 0, 0, 0, 0,
	0, 0, 0, 1879, 1903, 1955, 1861, 0, 469, 1940,
	1950, 1969, 1853, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 1918, 0, 0, 0, 1789,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1796, 1766, 1824,
	1957, 1767, 1764, 341, 1785, 1971, 2001, 1862, 302, 0,
	2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846, 312, 1788,
	196, 1783, 1791, 1844, 354, 1954, 1962, 0, 199, 314,
	1978, 1818, 1835, 246, 0, 393, 1930, 468, 0, 279,
	0, 1911, 392, 316, 461, 1945, 2009, 467, 1847, 443,
	478, 483, 272, 1887, 235, 421, 262, 255, 1826, 1968,
	1772, 285, 376, 250, 307, 1865, 1936, 1819, 242, 1948,
	1919, 1983, 420, 458, 201, 335, 459, 482, 0, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1979, 1961, 1985, 1812, 1792, 1803, 1793,
	1834, 2011, 294, 286, 1986, 1984, 1837, 362, 225, 1900,
	1893, 1880, 1958, 472, 2035, 258, 1963, 474, 0, 407,
	406, 1850, 293, 1965, 0, 0, 386, 0, 303, 205,
	1990, 487, 221, 310, 451, 0, 278, 353, 1932, 363,
	198, 381, 330, 332, 329, 333, 283, 0, 0, 1960,
	383, 409, 456, 223, 427, 0, 0, 0, 399, 0,
	0, 2017, 323, 267, 271, 287, 298, 1931, 390, 428,
	475, 1922, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1956, 217, 238, 429, 211, 2005, 1980, 1913, 1868, 1874,
	1774, 0, 210, 1869, 1870, 1871, 1872, 1873, 1952, 1823,
	1839, 1811, 1926, 1810, 282, 1943, 464, 465, 247, 1786,
	2025, 212, 1787, 2024, 350, 357, 349, 2028, 2026, 460,
	2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1901,
	426, 321, 0, 207, 0, 425, 2015, 2041, 440, 227,
	1805, 1972, 455, 0, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1947, 2038, 361, 394, 234,
	470, 422, 263, 1801, 0, 1804, 1799, 1802, 1800, 1905,
	1906, 2020, 2021, 2022, 1959, 1794, 0, 0, 1998, 1999,
	0, 1892, 2008, 1780, 0, 1976, 0, 0, 0, 0,
	1939, 2036, 1852, 243, 0, 1776, 1777, 1778, 0, 1882,
	1883, 0, 0, 1994, 1993, 1992, 1995, 0, 2029, 2027,
	2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970,
	1942, 1951, 1825, 1884, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1910, 200, 213, 313, 2037,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1973, 1917, 0, 1856, 1858, 1857, 1807, 1809, 1808,
	1806, 2040, 347, 2000, 1763, 1771, 1798, 1814, 1821, 1829,
	1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909,
	1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989, 473, 253,
	1890, 1915, 1953, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	4105, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 0, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1863, 197, 0, 0,
	203, 0, 204, 206, 1848, 202, 1996, 2032, 1927, 1941,
	1832, 2012, 0, 1974, 449, 1866, 2016, 1815, 1845, 2034,
	1851, 1854, 1935, 1781, 1904, 358, 1842, 1782, 1964, 1765,
	1820, 1769, 1833, 1770, 1817, 260, 1813, 1977, 1907, 2014,
	1886, 1928, 1938, 259, 245, 1896, 1895, 2002, 1831, 1830,
	1933, 1991, 2013, 1885, 0, 0, 479, 0, 2023, 315,
	1988, 0, 477, 424, 340, 0, 0, 1881, 1997, 1902,
	1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929, 2019, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1925, 2010, 1836, 0, 1876,
	1934, 2039, 1768, 1921, 0, 1773, 1784, 2033, 2003, 1827,
	1828, 264, 0, 0, 0, 0, 0, 0, 0, 1879,
	1903, 1955, 1861, 0, 469, 1940, 1950, 1969, 1853, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1918, 0, 0, 0, 1789, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1796, 1766, 1824, 1957, 1767, 1764, 341,
	1785, 1971, 2001, 1862, 302, 0, 2007, 1860, 1859, 1944,
	1790, 1981, 2031, 1846, 312, 1788, 196, 1783, 1791, 1844,
	354, 1954, 1962, 0, 199, 314, 1978, 1818, 1835, 246,
	0, 393, 1930, 468, 0, 279, 0, 1911, 392, 316,
	461, 1945, 2009, 467, 1847, 443, 478, 483, 272, 1887,
	235, 421, 262, 255, 1826, 1968, 1772, 285, 376, 250,
	307, 1865, 1936, 1819, 242, 1948, 1919, 1983, 420, 458,
	201, 335, 459, 482, 0, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1979,
	1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011, 294, 286,
	1986, 1984, 1837, 362, 225, 1900, 1893, 1880, 1958, 472,
	2035, 258, 1963, 474, 0, 407, 406, 1850, 293, 1965,
	0, 0, 386, 0, 303, 205, 1990, 487, 221, 310,
	451, 0, 278, 353, 1932, 363, 198, 381, 330, 332,
	329, 333, 283, 0, 0, 1960, 383, 409, 456, 223,
	427, 0, 0, 0, 399, 0, 0, 2017, 323, 267,
	271, 287, 298, 1931, 390, 428, 475, 1922, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1956, 217, 238, 429,
	211, 2005, 1980, 1913, 1868, 1874, 1774, 0, 210, 1869,
	1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810,
	282, 1943, 464, 465, 247, 1786, 2025, 212, 1787, 2024,
	350, 357, 349, 2028, 2026, 460, 2006, 1914, 1899, 1897,
	1779, 2004, 1912, 1898, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1901, 426, 321, 0, 207,
	0, 425, 2015, 2041, 440, 227, 1805, 1972, 455, 0,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1947, 2038, 361, 394, 234, 470, 422, 263, 1801,
	0, 1804, 1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022,
	1959, 1794, 0, 0, 1998, 1999, 0, 1892, 2008, 1780,
	0, 1976, 0, 0, 0, 0, 1939, 2036, 1852, 243,
	0, 1776, 1777, 1778, 0, 1882, 1883, 0, 0, 1994,
	1993, 1992, 1995, 0, 2029, 2027, 2030, 1795, 1816, 1838,
	1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1910, 200, 213, 313, 2037, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1973, 1917, 0,
	1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040, 347, 2000,
	1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855,
	1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967,
	1975, 1982, 1987, 1989, 473, 253, 1890, 1915, 1953, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 0, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1863, 197, 0, 0, 203, 0, 204, 206,
	1848, 202, 1996, 2032, 1927, 1941, 1832, 2012, 0, 1974,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 0, 479, 0, 2023, 315, 1988, 0, 477, 424,
	340, 0, 0, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 0, 0, 0, 0, 0,
	0, 4388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 2010, 1836, 0, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 2001, 1862,
	302, 0, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 0,
	199, 314, 1978, 1818, 1835, 246, 0, 393, 1930, 468,
	0, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	0, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 4391, 4392, 4393, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	0, 407, 406, 1850, 293, 1965, 0, 0, 386, 0,
	303, 205, 1990, 487, 221, 310, 451, 0, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 0,
	0, 1960, 383, 409, 456, 223, 427, 0, 0, 0,
	399, 0, 0, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 0, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 0, 0,
	1998, 1999, 0, 1892, 2008, 1780, 0, 1976, 0, 0,
	0, 0, 1939, 2036, 1852, 243, 0, 1776, 1777, 1778,
	0, 1882, 1883, 0, 0, 1994, 1993, 1992, 1995, 0,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 2037, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 0, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 1832, 2012, 0, 1974, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 0, 479, 0,
	2023, 315, 1988, 0, 477, 424, 340, 0, 0, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 0, 0, 0, 0, 0, 0, 3178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 2010, 1836,
	0, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 2001, 1862, 302, 0, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 0, 199, 314, 1978, 1818,
	1835, 246, 0, 393, 1930, 468, 0, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 0, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 0, 407, 406, 1850,
	293, 1965, 0, 0, 386, 0, 303, 205, 1990, 487,
	221, 310, 451, 0, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 1960, 383, 409,
	456, 223, 427, 0, 0, 0, 399, 0, 0, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 0, 0, 1998, 1999, 0, 1892,
	2008, 1780, 0, 1976, 0, 0, 0, 0, 1939, 2036,
	1852, 243, 0, 1776, 1777, 1778, 0, 1882, 1883, 0,
	0, 1994, 1993, 1992, 1995, 0, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 2037, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	0, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 590, 449,
	584, 595, 577, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 1348, 0, 0, 0, 0, 0,
	260, 0, 0, 585, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 638,
	639, 0, 733, 0, 734, 736, 737, 738, 739, 0,
	0, 0, 735, 2322, 3396, 3397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 3391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 0, 576, 575,
	578, 0, 0, 0, 341, 0, 0, 0, 583, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 587, 0, 0, 199,
	314, 591, 0, 0, 246, 0, 393, 2319, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 594, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 579,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 582, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 1351, 409, 456, 223, 427, 580, 581, 588, 589,
	592, 593, 596, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	2320, 2321, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 3408, 1068, 0,
	3398, 3399, 3401, 3409, 3410, 3400, 3402, 3403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3404, 3405, 3406, 3407, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 586, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 0, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 590, 449, 584,
	595, 577, 0, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 260,
	0, 0, 585, 0, 0, 0, 0, 259, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 0, 0, 315, 0, 0, 477, 424, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 638, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 575, 578,
	0, 0, 0, 341, 0, 0, 0, 583, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	196, 0, 0, 0, 354, 587, 0, 0, 199, 314,
	591, 0, 0, 246, 0, 393, 0, 468, 0, 279,
	0, 0, 392, 316, 461, 0, 594, 467, 0, 443,
	478, 483, 272, 0, 235, 421, 262, 255, 0, 0,
	0, 285, 376, 250, 307, 0, 0, 0, 242, 0,
	0, 0, 420, 458, 201, 335, 459, 482, 579, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 286, 0, 0, 0, 362, 225, 0,
	0, 0, 0, 472, 0, 258, 0, 474, 0, 407,
	406, 582, 293, 0, 0, 0, 386, 0, 303, 205,
	0, 487, 221, 310, 451, 0, 278, 353, 0, 363,
	198, 381, 330, 332, 329, 333, 283, 0, 0, 0,
	572, 409, 456, 223, 427, 580, 581, 588, 589, 592,
	593, 596, 323, 267, 271, 287, 298, 0, 390, 428,
	475, 0, 218, 471, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	0, 217, 238, 429, 211, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 464, 465, 247, 0,
	0, 212, 0, 0, 350, 357, 349, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 0,
	426, 321, 0, 207, 0, 425, 0, 0, 440, 227,
	0, 0, 455, 0, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 0, 0, 361, 394, 234,
	470, 422, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 0, 200, 213, 313, 0,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 253,
	0, 0, 0, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 586, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 449, 197, 0, 0,
	203, 0, 204, 206, 0, 202, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 259, 245, 0, 0, 0,
	0, 0, 0, 0, 2472, 2476, 0, 173, 479, 191,
	0, 315, 0, 499, 477, 424, 340, 502, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 2475, 302, 192, 0, 0,
	0, 2468, 0, 2469, 2471, 2470, 312, 1167, 196, 0,
	2466, 2474, 354, 0, 0, 178, 199, 314, 0, 0,
	0, 246, 1161, 393, 0, 468, 498, 279, 0, 0,
	392, 316, 461, 0, 0, 467, 0, 443, 478, 483,
	272, 0, 235, 421, 262, 255, 0, 0, 0, 285,
	376, 250, 307, 0, 0, 0, 242, 0, 0, 0,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 286, 0, 0, 0, 362, 225, 0, 0, 0,
	0, 472, 0, 258, 0, 474, 181, 407, 406, 0,
	293, 0, 182, 171, 386, 183, 303, 205, 0, 487,
	221, 310, 451, 497, 278, 353, 0, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 0, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 0,
	323, 267, 271, 287, 298, 0, 390, 428, 475, 0,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 0, 217,
	238, 429, 211, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 464, 465, 247, 0, 0, 212,
	0, 0, 350, 357, 349, 0, 0, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 0, 426, 321,
	0, 207, 0, 425, 0, 0, 440, 227, 0, 0,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 0, 0, 361, 394, 234, 470, 422,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 0, 0, 195, 0,
	0, 0, 0, 0, 189, 190, 175, 180, 0, 0,
	0, 243, 165, 0, 0, 0, 166, 0, 0, 168,
	169, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 0, 200, 213, 313, 0, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 253, 0, 0,
	0, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 449, 197, 0, 0, 203, 0,
	204, 206, 0, 202, 0, 358, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 259, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 479, 191, 0, 315,
	0, 499, 477, 424, 340, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 1480, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 500, 0,
	1475, 1476, 1474, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 302, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 196, 0, 0, 0,
	354, 0, 0, 178, 199, 314, 0, 0, 0, 246,
	0, 393, 0, 468, 498, 279, 0, 0, 392, 316,
	461, 0, 0, 467, 0, 443, 478, 483, 272, 0,
	235, 421, 262, 255, 0, 0, 0, 285, 376, 250,
	307, 0, 0, 0, 242, 0, 0, 0, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 286,
	0, 0, 0, 362, 225, 0, 0, 0, 0, 472,
	0, 258, 0, 474, 181, 407, 406, 0, 293, 0,
	182, 171, 386, 183, 303, 205, 0, 487, 221, 310,
	451, 497, 278, 353, 0, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 0, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 0, 323, 267,
	271, 287, 298, 0, 390, 428, 475, 0, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 0, 217, 238, 429,
	211, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 464, 465, 247, 0, 0, 212, 0, 0,
	350, 357, 349, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 0, 426, 321, 0, 207,
	0, 425, 0, 0, 440, 227, 0, 0, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 0, 0, 361, 394, 234, 470, 422, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 0, 0, 195, 0, 0, 0,
	0, 0, 189, 190, 175, 180, 0, 0, 0, 243,
	165, 0, 0, 0, 166, 0, 0, 168, 169, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 0, 200, 213, 313, 0, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 253, 0, 0, 0, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 449, 197, 0, 0, 203, 0, 204, 206,
	0, 202, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 259, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 479, 191, 0, 315, 0, 499,
	477, 424, 340, 502, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 0, 0, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 302, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 1167, 196, 0, 1163, 0, 354, 0,
	0, 178, 199, 314, 0, 0, 0, 246, 1161, 393,
	0, 468, 498, 279, 0, 0, 392, 316, 461, 0,
	0, 467, 0, 443, 478, 483, 272, 0, 235, 421,
	262, 255, 0, 0, 0, 285, 376, 250, 307, 0,
	0, 0, 242, 0, 0, 0, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 286, 0, 0,
	0, 362, 225, 0, 0, 0, 0, 472, 0, 258,
	0, 474, 181, 407, 406, 0, 293, 0, 182, 171,
	386, 183, 303, 205, 0, 487, 221, 310, 451, 497,
	278, 353, 0, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 0, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 0, 323, 267, 271, 287,
	298, 0, 390, 428, 475, 0, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 0, 217, 238, 429, 211, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	464, 465, 247, 0, 0, 212, 0, 0, 350, 357,
	349, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 0, 426, 321, 0, 207, 0, 425,
	0, 0, 440, 227, 0, 0, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 0,
	0, 361, 394, 234, 470, 422, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 0, 0, 195, 0, 0, 0, 0, 0,
	189, 190, 175, 180, 0, 0, 0, 243, 165, 0,
	0, 0, 166, 0, 0, 168, 169, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 0,
	200, 213, 313, 0, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 253, 0, 0, 0, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	449, 197, 0, 0, 203, 0, 204, 206, 0, 202,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 259,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 479, 191, 0, 315, 0, 499, 477, 424,
	340, 502, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 0, 0, 0, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	302, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 3558, 196, 0, 0, 3557, 354, 0, 0, 178,
	199, 314, 0, 0, 0, 246, 0, 393, 0, 468,
	498, 279, 0, 0, 392, 316, 461, 0, 0, 467,
	0, 443, 478, 483, 272, 0, 235, 421, 262, 255,
	0, 0, 0, 285, 376, 250, 307, 0, 0, 0,
	242, 0, 0, 0, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 286, 0, 0, 0, 362,
	225, 0, 0, 0, 0, 472, 0, 258, 0, 474,
	181, 407, 406, 0, 293, 0, 182, 171, 386, 183,
	303, 205, 0, 487, 221, 310, 451, 497, 278, 353,
	0, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 0, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 0, 323, 267, 271, 287, 298, 0,
	390, 428, 475, 0, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 0, 217, 238, 429, 211, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 464, 465,
	247, 0, 0, 212, 0, 0, 350, 357, 349, 0,
	0, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 0, 426, 321, 0, 207, 0, 425, 0, 0,
	440, 227, 0, 0, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 0, 0, 361,
	394, 234, 470, 422, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	0, 0, 195, 0, 0, 0, 0, 0, 189, 190,
	175, 180, 0, 0, 0, 243, 165, 0, 0, 0,
	166, 0, 0, 168, 169, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 0, 200, 213,
	313, 0, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 253, 0, 0, 0, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 449, 197,
	0, 0, 203, 0, 204, 206, 0, 202, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 259, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	479, 191, 0, 315, 0, 499, 477, 424, 340, 502,
	501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3525,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 302, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 1167,
	196, 0, 0, 2474, 354, 0, 0, 178, 199, 314,
	0, 0, 0, 246, 0, 393, 0, 468, 498, 279,
	0, 0, 392, 316, 461, 0, 0, 467, 0, 443,
	478, 483, 272, 0, 235, 421, 262, 255, 0, 0,
	0, 285, 376, 250, 307, 0, 0, 0, 242, 0,
	0, 0, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 286, 0, 0, 0, 362, 225, 0,
	0, 0, 0, 472, 0, 258, 0, 474, 181, 407,
	406, 0, 293, 0, 182, 171, 386, 183, 303, 205,
	0, 487, 221, 310, 451, 497, 278, 353, 0, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 0,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 0, 323, 267, 271, 287, 298, 0, 390, 428,
	475, 0, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	0, 217, 238, 429, 211, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 464, 465, 247, 0,
	0, 212, 0, 0, 350, 357, 349, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 0,
	426, 321, 0, 207, 0, 425, 0, 0, 440, 227,
	0, 0, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 0, 0, 361, 394, 234,
	470, 422, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 0, 0,
	195, 0, 0, 0, 0, 0, 189, 190, 175, 180,
	0, 0, 0, 243, 165, 0, 0, 0, 166, 0,
	0, 168, 169, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 0, 200, 213, 313, 0,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 253,
	0, 0, 0, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 449, 197, 0, 0,
	203, 0, 204, 206, 0, 202, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 259, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 479, 191,
	0, 315, 0, 499, 477, 424, 340, 502, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2926, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 302, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 1167, 196, 0,
	0, 2474, 354, 0, 0, 178, 199, 314, 0, 0,
	0, 246, 0, 393, 0, 468, 498, 279, 0, 0,
	392, 316, 461, 0, 0, 467, 0, 443, 478, 483,
	272, 0, 235, 421, 262, 255, 0, 0, 0, 285,
	376, 250, 307, 0, 0, 0, 242, 0, 0, 0,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 286, 0, 0, 0, 362, 225, 0, 0, 0,
	0, 472, 0, 258, 0, 474, 181, 407, 406, 0,
	293, 0, 182, 171, 386, 183, 303, 205, 0, 487,
	221, 310, 451, 497, 278, 353, 0, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 0, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 0,
	323, 267, 271, 287, 298, 0, 390, 428, 475, 0,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 0, 217,
	238, 429, 211, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 464, 465, 247, 0, 0, 212,
	0, 0, 350, 357, 349, 0, 0, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 0, 426, 321,
	0, 207, 0, 425, 0, 0, 440, 227, 0, 0,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 0, 0, 361, 394, 234, 470, 422,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 0, 0, 195, 0,
	0, 0, 0, 0, 189, 190, 175, 180, 0, 0,
	0, 243, 165, 0, 0, 0, 166, 0, 0, 168,
	169, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 0, 200, 213, 313, 0, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 253, 0, 0,
	0, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 449, 197, 0, 0, 203, 0,
	204, 206, 0, 202, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 259, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 479, 191, 0, 315,
	0, 499, 477, 424, 340, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 1480, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 302, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 196, 0, 0, 0,
	354, 0, 0, 178, 199, 314, 0, 0, 0, 246,
	2276, 393, 0, 468, 498, 279, 0, 0, 392, 316,
	461, 0, 0, 467, 0, 443, 478, 483, 272, 0,
	235, 421, 262, 255, 0, 0, 0, 285, 376, 250,
	307, 0, 0, 0, 242, 0, 0, 0, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 286,
	0, 0, 0, 362, 225, 0, 0, 0, 0, 472,
	0, 258, 0, 474, 181, 407, 406, 0, 293, 0,
	182, 171, 386, 183, 303, 205, 0, 487, 221, 310,
	451, 497, 278, 353, 0, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 0, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 0, 323, 267,
	271, 287, 298, 0, 390, 428, 475, 0, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 0, 217, 238, 429,
	211, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 464, 465, 247, 0, 0, 212, 0, 0,
	350, 357, 349, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 0, 426, 321, 0, 207,
	0, 425, 0, 0, 440, 227, 0, 0, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 0, 0, 361, 394, 234, 470, 422, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 0, 0, 195, 0, 0, 0,
	0, 0, 189, 190, 175, 180, 0, 0, 0, 243,
	165, 0, 0, 0, 166, 0, 0, 168, 169, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 0, 200, 213, 313, 0, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 253, 0, 0, 0, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 0, 197, 42, 449, 203, 0, 204, 206,
	0, 202, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 88,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 96, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 162, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 110, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 674, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3516, 0,
	0, 0, 0, 0, 3518, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2049, 2047, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2045,
	2047, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 1167, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3369, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3518, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 162, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3225, 681, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 674, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 162, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 674, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 549, 546, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 162, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 2546, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 162, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 2432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	162, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 162, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 1665, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 1652, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 1676, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 1666, 378, 249, 0, 200,
	213, 313, 2172, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 0,
	197, 0, 0, 203, 0, 204, 206, 449, 202, 0,
	0, 1610, 0, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 1680, 1683, 1684, 1685,
	1686, 1687, 1688, 0, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 0, 1667, 1668,
	1669, 1649, 1648, 1681, 1650, 1653, 1647, 1651, 1646, 0,
	0, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 1682,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 1670, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 162, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 156, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 162, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	162, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 654, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 733, 1165, 734, 736, 737,
	738, 739, 0, 0, 0, 735, 2322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	730, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 731, 732, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 4487, 0,
	0, 0, 0, 0, 260, 4485, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 4486,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2998,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 2999, 3000,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 1627, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 2476, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 2475, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 638, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 3572, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 3570, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 3568, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	3566, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 3561, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 3548, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 3546, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	3475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3466, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 2596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 2754, 2753, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 42, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 4637, 71, 0, 0, 0, 4298,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4291, 0, 0, 0, 0, 4629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 71, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 47, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 62, 92, 91, 0, 0, 0,
	89, 57, 0, 0, 0, 71, 4298, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4294, 4291, 0, 0,
	0, 0, 4626, 0, 0, 0, 4303, 4295, 4296, 4297,
	4301, 4302, 4299, 0, 4300, 0, 4304, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 69, 70, 0,
	4294, 0, 0, 0, 4291, 60, 0, 0, 0, 4540,
	4303, 4295, 4296, 4297, 4301, 4302, 4299, 0, 4300, 0,
	4304, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4292,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 4305, 4293, 0, 66, 67, 73, 0,
	74, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 4305, 4293, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	69, 70, 0, 4294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4303, 4295, 4296, 4297, 4301, 4302, 4299,
	0, 4300, 0, 4304, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 69, 70, 0,
	4294, 0, 60, 0, 0, 42, 0, 0, 0, 0,
	4303, 4295, 4296, 4297, 4301, 4302, 4299, 0, 4300, 71,
	4304, 0, 0, 0, 0, 78, 93, 79, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 59, 61, 0, 0, 4298, 0, 87,
	4305, 4293, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 4305, 4293, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 49, 90, 56, 55, 58,
	93, 0, 0, 47, 96, 0, 0, 0, 0, 0,
	4292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 42, 0, 0,
	0, 4298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 4291, 0, 0, 0, 0, 4532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 89, 4294, 0, 0, 0, 0, 4298,
	0, 0, 0, 0, 4303, 4295, 4296, 4297, 4301, 4302,
	4299, 4537, 4300, 0, 4304, 0, 0, 0, 85, 78,
	4291, 79, 0, 0, 0, 4530, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 84, 0, 0, 0, 96, 0,
	0, 0, 0, 60, 4292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 85, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 49, 90, 56,
	55, 58, 93, 0, 0, 47, 96, 0, 0, 0,
	0, 0, 4292, 0, 0, 0, 0, 0, 0, 0,
	0, 4305, 4293, 0, 66, 67, 73, 0, 74, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 89, 4294, 0,
	0, 0, 0, 4298, 0, 0, 0, 0, 4303, 4295,
	4296, 4297, 4301, 4302, 4299, 0, 4300, 0, 4304, 0,
	0, 0, 0, 78, 4291, 79, 0, 0, 4215, 4408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 69, 70, 0, 4294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4303, 4295, 4296, 4297,
	4301, 4302, 4299, 0, 4300, 0, 4304, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 84, 71, 0, 0,
	96, 0, 0, 0, 93, 60, 4292, 47, 0, 0,
	0, 0, 0, 0, 0, 4305, 4293, 0, 66, 67,
	73, 0, 74, 0, 62, 92, 91, 0, 1652, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 59, 61, 0, 0, 4298, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4291, 0, 0, 0,
	0, 0, 0, 4305, 4293, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 1676, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4294, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	4303, 4295, 4296, 4297, 4301, 4302, 4299, 0, 4300, 0,
	4304, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 49, 90, 56, 55, 58, 0, 60,
	0, 0, 96, 0, 0, 0, 0, 0, 4292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4305, 4293, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4294, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 4303, 4295, 4296, 4297, 4301, 4302, 4299, 0,
	4300, 0, 4304, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 0,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 0, 1667, 1668, 1669, 1649, 1648, 1681,
	1650, 1653, 1647, 1651, 1646, 0, 0, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1671, 1672,
	1673, 1674, 1675, 1677, 1678, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4305,
	4293, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	6579, -1000, -498, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2930, -1000, 2930, 375, -1000, 451, -1000, 1333, 434,
	-1000, -1000, -1000, -1000, -1000, 695, 211, 60463, 1150, 54551,
	81127, -245, 1489, 80389, 158, -1000, 158, 414, 56765, 849,
	994, 79651, 2803, 2167, 162, 7, 2, 244, 40526, 1053,
	287, 190, 209, 208, 184, 1233, -1000, 62677, 886, -1000,
	316, -1000, -1000, -1000, -1000, -1000, 56027, 2983, 2987, 2983,
	-1000, 2912, 2928, -1000, -1000, 2912, 2294, 2294, 375, -1000,
	62677, 14832, -1000, -1000, -1000, -1000, -1000, 32220, -1000, 1363,
	-1000, 61201, 42740, 2930, -1000, 1134, 1124, -109, 1052, 1052,
	864, 1052, 1052, -463, 1147, -1000, 824, 1685, -1000, -1000,
	-1000, -1000, 1665, 61201, 68581, 1146, 1053, 1053, 1053, 1053,
	1053, 1053, 1053, 1053, 1053, 53813, 61201, -1000, 1283, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 61201,
	2968, 2965, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2608, 2607, 53075, 585, 2839, 1694, 348,
	1694, -1000, -1000, 1658, -1000, 965, 952, 934, 931, 963,
	914, 11, 1625, 1695, 2909, -1000, 2548, 2912, 2912, 1625,
	-1000, 906, -1000, -1000, -1000, -1000, -1000, -1000, 1330, -1000,
	-1000, 1761, 1761, 549, 1119, 976, 980, 976, 2881, 1654,
	2838, 2837, 2187, 2836, 821, 2835, 2602, -1000, 1281, -1000,
	-1000, 60, -1000, 2150, 61201, -1000, -1000, 2071, 2065, 666,
	2500, 1189, 2649, -1000, -1000, 641, 863, 2584, 692, 2584,
	2584, 2584, 393, 2584, 2584, -1, 2584, 2584, 2584, 299,
	2584, 333, 2584, 2584, 2584, 2584, 2584, -1000, 2301, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 39777, 2865, 205, -1000, -142, 183, 2890, 717, -1000,
	-1000, -1000, 289, 1363, 63415, 2538, -1000, 2548, -1000, -1000,
	-1000, 2546, 2548, -1000, 2134, 1140, 1053, 709, -1000, 533,
	-1000, -1000, -1000, 2867, 2548, 46433, -1000, -1000, 1703, -1000,
	2548, 2548, 1363, 2892, 1363, 1363, 2888, 2886, 1363, 2828,
	29196, 19368, 2749, 1800, -1000, -1000, -1000, -1000, 2294, 1363,
	2964, -1000, 42002, 1268, -1000, 19368, 2291, 2548, 2548, -1000,
	1194, 1318, -1000, 1170, 1249, -1000, -1000, 20124, 20124, 20124,
	20124, 20124, 20124, 20124, -1000, -1000, -1000, -1000, -1000, -1000,
	2273, 2272, 2269, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2548, 1266, 1265, 1264, 2548, 2548, 2548,
	2548, 2548, -1000, 17856, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2548, 2548, 2548, 2548,
	2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548,
	2548, 19368, 2548, 2548, 2548, 2548, 2548, -1000, 2548, 2548,
	2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548,
	2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548,
	2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548,
	2548, 2548, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2548,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2548, 2548, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2548, 1060,
	1060, 59725, 2545, -84, 31464, -1000, -1000, -1000, -1000, 29952,
	66367, 1528, -1000, -1000, -1000, -1000, 2834, -1000, -1000, 1259,
	1249, 1194, 1193, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2930, 315, -1000, 2434, -1000, -1000, 59398, 59398, 59398,
	59398, 59398, 59398, 49385, -1000, -1000, -1000, 2601, 2912, -1000,
	1052, 1052, 956, 2149, 1738, 2148, 79651, 79651, 1052, -1000,
	773, 68581, 68581, -355, 1052, 805, 68581, 902, 2544, 1118,
	2543, 1115, 2296, 1053, 78175, 61201, 2147, 2143, 79651, 79651,
	68581, 68581, 79651, -1000, -1000, -1000, 28440, -1000, 1343, 2541,
	48647, 47909, 52337, 52337, -1000, -1000, -1000, 897, -1000, 1694,
	-1000, 5772, 19368, 1052, 1052, 61201, 61201, 61201, 61201, 61201,
	-1000, 61201, -1000, -1000, 1694, -1000, -1000, 1694, 1694, 1694,
	1625, 2963, 1625, -1000, -1000, -1000, 1694, 80389, 80389, 19368,
	-1000, 20124, 67843, 1374, -1000, -1000, 1694, -1000, 80389, 1016,
	1016, 1016, -1000, 2142, 542, 317, -1000, 976, 315, -1000,
	-1000, 2810, 2883, 2882, 2141, 821, 821, -1000, 2293, 821,
	2530, -1000, 1653, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 821, 2881, 18612, 78175, -480,
	-1000, -1000, 2540, -1000, 483, -1000, -1000, 993, 2647, 993,
	5083, 68581, 68581, 68581, -1000, 2584, 78175, -1000, 2584, 2584,
	2584, -4, 2584, 2584, -1000, -1000, 2584, -1000, -1000, -1000,
	2584, -1000, -1000, 2584, -1000, -1000, -1000, 2584, 2584, -1000,
	2584, 2584, -1000, -1000, -1000, -1000, -1000, 68581, 686, 2494,
	2499, 2644, -1000, 1114, 187, -68, 141, -1000, -1000, -1000,
	-1000, -1000, -1000, 288, 286, 285, 284, -1000, -1000, -1000,
	-1000, 281, 279, -1000, -1000, 58979, 58979, 928, -1000, 2538,
	63415, 2880, 23904, 886, -1000, 19368, 2848, -1000, 2848, -1000,
	-1000, -1000, 387, -1000, 61201, 68581, 79651, 56027, 56027, 56027,
	56027, -1000, 2674, 2673, -1000, 2664, 2661, 2660, 503, 63415,
	-1000, 2867, 375, 2425, 2294, 2294, 533, 46433, -1000, 2548,
	-1000, 63415, 1280, 1132, 1131, 1127, 2810, -1000, -1000, -1000,
	-1000, -1000, 2095, 2070, 1999, 14076, 20124, -1000, -1000, -1000,
	-1000, -1000, 2983, 2983, -1000, -1000, -1000, -1000, -1000, -1000,
	1779, 2978, 1537, 2528, -1000, -1000, -1000, 2534, -1000, 1970,
	1245, 2020, 1840, -1000, -1000, -1000, -1000, -1000, -1000, 14832,
	-1000, -1000, 61201, -1000, 19368, 19368, 19368, 1884, -1000, 45692,
	-1000, -1000, -1000, 24660, 1569, 20124, 1945, 1558, 20124, 20124,
	20124, 20124, 20124, 20124, 20124, 20124, 20124, 20124, 20124, 20124,
	20124, 20124, 20124, 1425, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2140, -1000, 315, 37512, 14076, 37512, 1099, 1099,
	78175, 1340, 1340, 1340, 1340, 1340, 1340, 61939, -1000, -1000,
	-1000, 2879, 36000, 78175, 37512, 2879, 2879, 2879, 2879, 2879,
	2420, 17856, 1959, 62677, 56027, 14076, 14076, 14076, 2294, 19368,
	19368, 14076, 20124, 14076, 17100, 16344, 21636, 14076, 14076, 2879,
	1697, 1959, 27684, 14076, -1000, 2294, -1000, -1000, -1000, -1000,
	1895, -1000, -1000, -316, -316, -316, 388, 14076, 14076, 14076,
	14076, 2294, 2294, 14076, 14076, 14076, 14076, 14076, 14076, 2294,
	2294, 2294, 14076, 14076, 14076, 14076, 14076, 14076, 14076, 14076,
	14076, 14076, 14076, 14076, -1000, -1000, -1000, 1853, 58241, 56027,
	61201, 2495, 2424, -1000, -1000, 1244, 30708, 2515, -1000, -57,
	-73, -84, -1000, -1000, 1299, -1000, -1000, -1000, -1000, 15588,
	-1000, -1000, -1000, 25416, 2912, 315, -1000, 41264, -1000, 44,
	-1000, -1000, -1000, 2564, -1000, 2570, 107, 502, 2570, 85,
	83, 2570, 2570, 2570, -1000, -1000, -1000, -1000, 98, -1000,
	-1000, -1000, -1000, -1000, 2587, 2586, -1000, 2564, 2564, 2564,
	-1000, -1000, -1000, -1000, -1000, -1000, 2570, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2577, 529, 2566, 2566, 2566,
	2566, 2566, -1000, -1000, -1000, -1000, -1000, 1028, -1000, -1000,
	-1000, 19368, 2828, 2708, 78175, 61201, 1121, -464, 805, 2848,
	2864, 2848, 888, -1000, 1237, 2585, 79651, 850, 2505, -1000,
	459, 2397, 1164, 57503, -1000, -1000, -1000, -1000, -1000, 61201,
	61201, 68581, 68581, 68581, 61201, 2641, 2533, -1000, -1000, -1000,
	-1000, -1000, 2532, -1000, 2397, -1000, -1000, 1228, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -438, -439, 61201, -1000, -1000, -1000, -1000, -1000,
	-1000, 2531, -1000, 2531, -1000, -1000, -1000, 2290, 1959, 2138,
	2137, 2881, -1000, -1000, -1000, -1000, 1630, -1000, -1000, -1000,
	-1000, 1694, 61201, 2881, -1000, -1000, -1000, 1959, 1417, 2605,
	2548, 2294, -1000, -1000, -1000, 154, -1000, 152, -1000, -1000,
	-1000, 2136, -1000, -1000, -1000, -1000, -1000, 317, -1000, 20124,
	2808, 2807, -1000, 2530, 2530, -1000, 2530, 821, 64153, 2530,
	-1000, -1000, 2418, -1000, 302, 2286, 61201, -1000, 63415, 54,
	-1000, -80, 76699, -1000, -1000, -1000, 993, 76699, -1000, 299,
	313, -1000, 1108, -1000, 2414, -1000, -1000, -1000, -1000, 2584,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	993, 435, 2529, 993, 68581, 68581, 345, 2527, -1000, 1643,
	1632, -1000, -1000, 139, -1000, -1000, -1000, -1000, 2906, -1000,
	-1000, 312, -59, -1000, 312, 2275, 20124, -1000, 2548, 2382,
	-1000, 1223, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2548,
	-1000, -1000, -1000, -1000, 2833, 1528, 1528, 1528, 7303, 459,
	2640, 2582, 2639, 648, -1000, -1000, -1000, -1000, 2672, -1000,
	2668, 2667, -1000, -1000, -1000, 2552, 63415, 56027, -1000, -1000,
	-1000, 2294, 78175, 1187, -1000, 63415, 2548, 2548, 2548, 20124,
	20124, 1536, -1000, 20124, 20124, 1511, -1000, 20124, 20124, 1402,
	-1000, 2294, 2524, -1000, -1000, 1959, 1219, 4899, -1000, 77437,
	-238, 2686, 29196, 29196, 19368, -1000, -1000, -1000, 25416, 2908,
	-1000, 2709, 2706, 2962, -1000, -1000, -1000, 1569, 1716, 1583,
	-1000, -1000, 1859, -1000, -1000, -1000, -1000, -1000, 1206, 2548,
	-1000, -1000, -1000, -1000, -1000, -1000, 4925, -1000, -1000, -1000,
	-1000, 1945, 20124, 20124, 20124, 1417, 4925, 4742, 2227, 2188,
	1340, 1601, 1601, 1341, 1341, 1341, 1341, 1341, 1584, 1584,
	-1000, -1000, -1000, -1000, 2294, -1000, 2412, -1000, -1000, 2273,
	2272, 2269, -1000, -1000, -1000, -1000, 14076, -1000, -1000, -1000,
	-1000, -1000, -1000, 14076, 14076, 14076, 14076, 14076, 19368, -1000,
	2412, 2412, 2412, -1000, 1760, 1979, 2304, 4643, 2412, 1454,
	2961, 2412, 1399, 2960, 2412, 1650, 20124, 20124, 20124, 2412,
	2412, 14076, 1712, -1000, 19368, 2294, 1292, 2294, 1194, 1193,
	2412, -1000, 2294, 2522, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2519, 2959, 2518, -1000, -1000,
	-1000, -1000, 2412, 2294, 2412, 2412, -128, -128, 2294, 2412,
	2294, 2412, 2412, 2294, -128, -128, -128, 2412, 2412, 2412,
	2412, 2412, 2412, 2412, 2412, 2412, 2412, 2412, 2412, -1000,
	2294, 1447, 61201, -1000, 2489, 1447, 2476, 56027, -1000, -1000,
	56027, 80389, 26928, -1000, 29952, -84, -60, -1000, -1000, 2515,
	-1000, -1000, 1602, -1000, -1000, 2267, 1959, -1000, 1190, 2828,
	525, -1000, -1000, -1000, -1000, 2579, 44954, -1000, 2763, 1278,
	1278, 1278, 67105, 78913, 2760, -1000, -1000, 370, 22, -1000,
	-1000, -1000, 2048, -1000, 369, 501, 2570, -1000, -1000, -1000,
	2570, 2570, -1000, 2570, 2570, -1000, -1000, -1000, -1000, 2266,
	2266, -1000, -1000, -1000, -1000, -1000, 2046, -1000, 2577, -1000,
	2045, -1000, -1000, -1000, -1000, 370, 370, 370, 370, 370,
	-1000, 1956, -1000, 2194, 2548, 61201, -357, -1000, -1000, -1000,
	2946, -1000, -1000, 78175, 65629, 2636, -1000, -1000, 331, 68581,
	445, 597, 357, -1000, 1731, -1000, -1000, 1102, -1000, 1097,
	-1000, -1000, 1136, 61201, 61201, 68581, 78175, 2635, 2634, -1000,
	52337, -1000, -1000, -1000, -1000, 2938, 2131, 2117, -1000, 1625,
	1694, -1000, 20124, 68581, -1000, 943, -1000, -1000, -1000, -1000,
	4925, 20124, 20124, -1000, -1000, -1000, -1000, 1773, -1000, -1000,
	-1000, -1000, 6, -1000, -1000, 1095, 1178, 1177, 76699, 1092,
	-1000, 324, 68581, -1000, 78175, -1000, 76699, 390, 433, 76699,
	1179, 2958, 2514, -1000, 1623, 1616, 1605, 1604, 1603, 1598,
	1589, 1578, 187, 2576, 2573, -1000, -1000, 255, -1000, 2820,
	-1000, -1000, 4925, -1000, -1000, 23904, 37512, -1000, 1528, 1599,
	-1000, 1495, 2265, 1714, 1112, -1000, -1000, -1000, 2927, 1260,
	1172, 1032, 1528, 1034, 449, 1090, 2817, 2815, 565, 564,
	-1000, 1528, 1034, 1285, 654, -1000, 1500, 1485, 1482, 1474,
	1470, 1468, 1460, 1458, 607, -358, -1000, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, -183, -186, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	32976, 1528, 1528, -257, -1000, 1158, 770, -1000, -1000, 19368,
	2572, -1000, 19368, -1000, -1000, -1000, -1000, -1000, 78175, 2552,
	533, -1000, 2378, -1000, -1000, 1187, 78175, 78175, 78175, 4616,
	1910, 2548, 4184, 1857, 2548, 3597, 1833, 2548, 2867, 14076,
	23148, 2264, 2513, 2263, 2262, -1000, 35, -1000, 2682, -1000,
	-1000, -1000, 61201, -1000, -1000, -1000, -1000, 2938, 55289, 14832,
	-1000, -1000, -1000, -1000, 35244, 14076, -1000, 1417, 4925, 3024,
	-1000, 20124, -1000, -1000, 2294, 2412, 2412, 2412, 2412, 2412,
	1959, -1000, -1000, -1000, 563, 1425, 563, -1000, 1425, 20124,
	-1000, 20124, 20124, -1000, 20124, 20124, -1000, -1000, 20124, 4051,
	3990, 2398, -249, -1000, 2468, 1659, -1000, 19368, 1911, -1000,
	-1000, -1000, -1000, -1000, 20124, 20124, 20124, 20124, -1000, -1000,
	-1000, -1000, -1000, 75961, -1000, -128, -128, -128, -128, -128,
	-128, -1000, -1000, -1000, -128, -128, -128, -128, -128, -128,
	-128, -128, -128, -128, -128, -128, -1000, 349, 2548, -1000,
	26172, 2938, 56027, 2441, 2441, -1000, 1175, -1000, -1000, -1000,
	-77, -85, -1000, -1000, -1000, -1000, -1000, 37512, -1000, -1000,
	-1000, 5212, -1000, 1528, 1528, 1528, 395, 1528, 1528, 1528,
	1528, 1528, -188, -196, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 174, 1528, 1528, 1528, 1528, 1528, 1528, 32976, 1528,
	1528, -359, 50123, 1202, 1008, -1000, -1000, -1000, 78913, 78913,
	78913, -1000, 78913, 78913, -1000, -1000, -1000, -1000, 50861, -1000,
	-1000, 1791, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2548, -490, 2044, 61201, -1000, 2832, 1491, 39780, 2976, -1000,
	2758, -1000, 2755, 2752, 2261, -1000, -1000, 2391, 2385, 2365,
	-1000, 2570, -1000, -1000, -1000, -1000, -1000, 2408, -1000, 2405,
	2512, -1000, 2403, -427, 2633, 78175, 2876, 2548, 2030, 2632,
	-1000, -1000, -1000, -1000, 2358, 2511, -1000, 59398, 78175, 78175,
	78175, 683, -257, 538, -1000, 68581, 352, 459, 736, 2088,
	-397, 2863, 61201, 68581, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 75223, 75223, -1000, -1000, 19368, -1000, -1000, 2881, -1000,
	4925, 2397, -1000, -1000, 4925, 4925, 1447, 1138, -1000, 68581,
	1367, 74485, 1086, 68581, 386, 283, -1000, 2956, 2955, 382,
	2951, -1000, 251, 68581, 345, 2260, 2258, 2257, 2025, 2024,
	2022, 2019, 2018, -1000, 61201, 61201, 2256, -1000, -1000, -1000,
	1438, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1441, 8307,
	1112, 1435, 1414, 1411, 1405, -1000, 164, 47171, 1052, 1254,
	1040, -1000, -1000, 2548, -1000, 44216, 50861, 50861, 50861, 1053,
	2751, 2746, 78175, 50861, 50861, 78175, 50861, 922, 2116, 2830,
	1528, 94, -1000, -1000, -1000, 73747, -1000, 73009, 880, 51599,
	50861, 78175, 61201, 43478, -1000, -1000, -1000, -1000, 72271, 2015,
	78175, 78175, 71533, 70795, 70057, 69319, -1000, -239, 972, 19368,
	972, 2007, 2007, 2255, 2254, 2253, 1528, 1528, 207, 2007,
	2252, 207, 2007, 39024, 2251, 999, 972, 972, 972, 2007,
	2007, 2007, 2007, 2250, 400, 1981, 2248, 2007, 2067, 2041,
	972, -1000, -224, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2007, 2548, -1000, 374, 929, 1083,
	858, -3, 1959, 78175, 1959, 2399, -1000, -1000, 1488, 78175,
	-1000, 2337, 2337, 2337, 20124, 20124, 20124, 20124, 20124, 20124,
	20124, 20124, 20124, 63415, -1000, -1000, 1173, -9, 78175, -1000,
	1, -1000, -1000, -1000, 2936, -1000, 2509, -1000, -1000, -1000,
	2294, -1000, 20124, 4925, -1000, -128, -128, -128, -128, -128,
	2294, 2564, 2564, 2564, -1000, 2564, 2566, 105, -1000, -1000,
	-1000, 2564, 131, 2564, 122, -1000, 2294, 2294, 2294, 2006,
	3549, 3474, 2949, 2123, 2006, 20124, 20124, 20124, 2548, -122,
	-1000, 1959, 19368, 2689, 2620, 2006, 2006, -1000, -1000, 2114,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2631,
	2631, 26172, 2867, -1000, 22392, -1000, 886, -1000, -1000, 78175,
	2506, -1000, 1528, 1317, 1528, 1528, 2930, 2441, -1000, -1000,
	1362, -1000, -1000, -1000, -1000, 972, 972, 972, 1528, 2827,
	1528, 2007, 2007, 2234, 2232, 2231, 1528, 1528, 207, 2007,
	2230, 207, 2007, 39024, 2226, 999, 972, 972, 972, 2007,
	2007, 2007, 2007, 2225, 400, -1000, 1936, 2223, 2007, 2033,
	1997, 972, -1000, -225, 2007, 2548, -242, 2395, -1000, 2564,
	2564, 2743, 1278, -1000, -1000, -1000, -1000, -1000, -1000, 2563,
	-1000, -1000, 20124, 2875, -1000, 2558, 1428, -1000, -1000, -1000,
	-1000, 1099, 2221, -1000, -1000, 20124, -1000, -1000, 2548, 2548,
	2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548, 2548,
	2548, -78, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2219, -1000, 2010, -1000, 1987, -1000, -1000, -1000, 61201,
	-1000, -1000, 2874, -1000, 61201, 292, 65629, -1000, 59398, 59398,
	59398, -3, 343, -1000, 1756, -1000, -1000, -1000, 2218, 2217,
	2216, 2397, 461, 1755, 422, -1000, 2870, 2868, 2215, 2214,
	2213, 2211, 1980, -1000, -1000, 2583, 78175, 2508, -1000, 1959,
	1694, 1, 61201, 283, -1000, -1000, -1000, 68581, 283, -1000,
	-1000, 392, 68581, 68581, 2950, 68581, 463, 1179, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2390, 2388, -1000,
	-1000, -1000, -1000, -1000, -1000, 1274, 1242, 314, 311, -215,
	-1000, 446, 384, -1000, -1000, -1000, 51599, 1009, 59398, 59398,
	78913, 1278, -1000, 2742, 1391, -1000, -1000, -1000, -1000, 78175,
	-1000, 50861, 2507, -429, -431, 1323, -448, -1000, -1000, -1000,
	-1000, 51599, 1528, 1425, 2826, 612, 308, 601, 307, -1000,
	-1000, -1000, -1000, 1009, 1235, 1079, -1000, 2728, 50861, 1077,
	592, 306, -1000, 1803, -258, 2507, -1000, 2507, -1000, 2507,
	-1000, 2507, -1000, -1000, -1000, 1959, -1000, -1000, -1000, -1000,
	-1000, -1000, 2210, 2209, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -190, -1000, 39024, 374, -1000, 1975, 1966, 1951,
	1947, 1794, -1000, 2630, 79651, -1000, 667, 2629, 1610, 1099,
	2384, -1000, 78175, -1000, -1000, -1000, -1000, -1000, 4925, 4925,
	2537, 4925, 4925, 2106, 4925, 4925, 2073, -1000, 34488, 2548,
	-1000, -40, -1000, 2934, 2924, -1000, -1000, 4925, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 448, 408, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20124, 20124,
	20124, 20124, -1000, 2006, 2006, 2006, 20124, 2294, 2208, 1959,
	20124, 20124, -1000, -1000, 1403, -1000, 2896, 2853, 2896, 2470,
	63415, 2445, 2382, 2294, 362, -1000, -1000, -1000, 62677, 56027,
	2504, -1000, 2548, 2378, 2930, 26172, 19368, 19368, 19368, 19368,
	2912, -1000, -1000, -1000, -1000, 1425, 1528, 33732, -1000, -1000,
	-1000, -1000, -1000, 2207, 2205, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -191, -1000, 39024, -1000, 236, 50123, 2852, 2852,
	78913, 78913, 78175, 2006, 2548, 78175, -1000, -1000, -1000, -1000,
	-1000, 2006, -1000, -1000, 2354, 2321, 2557, -1000, -1000, -397,
	2905, -1000, 292, -1000, 2204, 803, 812, -1000, 802, 796,
	791, 790, 768, -1000, -1000, -1000, -1000, 2629, 645, 343,
	-1000, -48, 1942, 1531, 2814, 411, -1000, -1000, -1000, -1000,
	354, 459, -1000, 710, 2201, 707, 2200, -1000, -1000, 440,
	-1000, -1000, 2802, 2376, -1000, -40, -1000, 2873, 283, 2873,
	376, 1179, 1179, 68581, 1179, -1000, -1000, -1000, -1000, -228,
	1897, 20124, 2548, 2548, 764, 2312, -1000, -1000, 2113, -1000,
	-1000, 2194, 1052, 78913, 2340, -1000, 78175, -1000, -1000, -1000,
	-1000, -1000, -1000, 2846, 2845, -1000, -1000, 1009, 1425, -1000,
	1425, -1000, -1000, -1000, -1000, -1000, 50861, 78175, 50861, 1076,
	50861, -1000, -1000, 2548, 1137, -1000, -1000, -1000, -1000, 2374,
	-1000, -1000, -1000, -1000, -1000, -1000, 535, 2199, 303, -1000,
	-1000, 1158, 669, -1000, -1000, -1000, -293, -1000, -1000, 20124,
	20124, 20124, -1000, 36756, 2796, 2794, -131, 19368, 19368, -1000,
	-1000, -1000, -1000, 2006, 2006, 2006, 2006, -1000, -1000, -1000,
	366, -1000, -1000, 2006, 2006, 2930, 2922, -1000, -1000, 2713,
	-1000, 2896, 2552, -1000, 2445, 362, -1000, 886, -1000, 13320,
	-1000, 2912, -1000, 1959, 1959, 1959, 1959, -1000, -1000, 1425,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2374, 236, -1000,
	39024, 1528, 2197, 1528, 1528, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2369, -493, 20124, 2364, -1000, -1000, -1000, 50123,
	315, -1000, 894, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2801, 2799, 827, 929, -1000, 2196, 2195, -1000, 701, 2091,
	1236, -135, -1000, -1000, -1000, -1000, -1000, -1000, 684, 2112,
	-1000, 405, -1000, -1000, 399, -1000, -1000, 2921, -397, 20124,
	-1000, 2796, -1000, 68581, 2873, -1000, -1000, -1000, -1000, 1179,
	-1000, 2548, 2920, -1000, 2006, 78175, 20124, 2548, 1565, -1000,
	-1000, 370, 370, 2554, 78913, 2553, -1000, 1391, 2705, 20124,
	-1000, -1000, 1319, 1305, -1000, -1000, 1072, 50861, -1000, 1391,
	61201, 39024, -1000, -1000, -1000, -1000, 929, 1365, 676, 2006,
	2006, 2006, 2306, -1000, 82914, 361, -1000, -1000, 2782, 2918,
	-1000, 78175, -1000, 1959, 2502, -1000, 1959, -1000, -1000, -1000,
	-1000, 2294, 328, -292, -1000, -1000, 1442, 19368, 2501, 2975,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1873, -1000, 2193, 2192, 996, -1000, -1000, -1000, 2006,
	-1000, 2357, -1000, -1000, 315, 315, 860, 83002, -1000, -1000,
	-1000, -1000, 1794, -1000, -1000, -1000, -1000, 1871, -1000, -1000,
	2004, 687, 398, -1000, 2872, -1000, -1000, 1870, 4925, 1057,
	-264, -1000, -1000, -1000, 1391, -402, -1000, 2337, 2006, 78175,
	1848, 50123, 2194, 50123, -1000, 865, 4925, 1528, 1425, 50861,
	-1000, 2340, 50, -1000, 83002, 1794, 1188, 668, 1610, -1000,
	-1000, -1000, 2294, 36756, 406, -455, -11, 2191, 2788, 2785,
	2648, -1000, 2190, 2496, -1000, 2871, 19368, -1000, 2681, -254,
	-322, 2294, 371, 371, 2490, 26172, -1000, -1000, -1000, 61201,
	-493, 236, -265, 2294, 2294, -1000, 823, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12564, 19368, 172, 38268, 2111, 2110, 83002, 2228, 83002,
	19368, 2109, 2108, 2757, 20124, 82830, 467, -336, -1000, -337,
	-1000, -1000, -1000, 2189, -1000, 2552, 1839, 442, 2340, 377,
	-1000, -1000, 2337, -1000, 2334, 2550, 2319, 973, 1425, -1000,
	-1000, -1000, 649, -1000, -1000, 466, 1099, -1000, 1610, -1000,
	2867, -1000, -1000, 2186, -168, -1000, 2548, -21, 2917, 2916,
	-1000, 2915, 2914, -1000, 78175, 2548, -1000, -1000, 2679, -1000,
	-1000, -1000, 439, -1000, 1413, 859, 1397, -1000, 1099, -1000,
	2466, 2549, -1000, -1000, 236, -1000, 347, -1000, -265, -1000,
	2105, 2104, -1000, 1842, 1784, -1000, 19368, 1822, 594, 587,
	7980, -1000, -1000, -1000, -1000, -1000, -1000, -499, -1000, 296,
	-500, 992, -1000, -1000, 2103, -1000, 2947, 4925, -1000, -501,
	-1000, -1000, -1000, -1000, 2825, 1546, 64891, -1000, 2548, 764,
	-1000, 236, 50123, 236, 2548, -1000, -1000, -1000, -1000, -293,
	-1000, 1365, 63415, 617, 2183, 36756, 2548, 2182, 2107, 2096,
	1948, -1000, -1000, -266, 1747, -1000, -1000, -1000, -1000, -1000,
	-316, 78175, 373, 1026, 1025, -1000, -1000, -1000, -1000, 1647,
	1727, 83002, -1000, 1813, 83002, 2904, 2901, 2899, 1, 37512,
	82666, 82598, 83002, 83002, 19368, 82434, 83002, 1769, -1000, 82130,
	83002, -1000, 26172, -1000, -1000, -1000, -1000, 2957, 2397, 20124,
	2548, -1000, 2311, -1000, 20880, 83002, -1000, 1365, -1000, 1969,
	1891, 2628, 2627, 1099, -1000, 2306, 36756, -1000, -1000, -1000,
	-1000, -317, 439, -1000, 2309, -1000, 359, 346, 300, 1724,
	83002, -1000, -502, 83002, -503, 822, 315, 979, 1299, -1000,
	573, -1000, 2102, -504, -505, -506, 988, 19368, -507, 2094,
	-1000, -1000, 2466, 68581, 2006, 20124, 236, 2006, 2294, -1000,
	-1000, 2626, 1099, -1000, 2622, 1099, -70, -71, 2621, -1000,
	2306, -323, -1000, 2618, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 82073, 62677, -1000, -508, 81920, -509, 8968,
	-1000, -1000, -1000, 81866, -1000, -1000, -1000, -1000, 582, -1000,
	-1000, 2843, -1000, -1000, 11874, 11801, 11566, 83002, 1797, 11411,
	2416, -1000, -1000, 2397, -234, 2006, -1000, -1000, -1000, -1000,
	275, 2617, -367, 2616, 274, 272, -1000, -1000, -88, -1000,
	-1000, 2615, 2614, 2942, -1000, -510, -1000, -1000, 11355, 1718,
	83002, 1050, 83002, 1597, -1000, 19368, -1000, 979, -1000, 20124,
	2092, 570, 19368, -511, 553, 546, 2089, -1000, 1817, -234,
	268, -373, 2612, 2610, -1000, -1000, -1000, 2948, -1000, 2970,
	1211, 1211, 10843, 1699, -1000, -1000, -512, 1048, 83002, -1000,
	1788, -1000, 4925, -1000, 2076, 1701, 10350, -1000, -1000, -1000,
	-1000, -1000, 264, -374, -1000, -1000, -1000, 1023, 1864, -1000,
	-1000, -1000, 10079, -1000, -514, 83002, -1000, 551, 543, -1000,
	-1000, -1000, -1000, -1000, 1047, 6652, -517, 2072, 1983, -1000,
	1045, 83002, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3506, 3505, 3504, 23, 3503, 287, 291, 314, 17,
	73, 3131, 3501, 303, 3500, 304, 3497, 36, 34, 18,
	40, 3494, 3129, 3127, 3125, 3119, 26, 3493, 8, 3492,
	3491, 3113, 3488, 3487, 3109, 3486, 3485, 3483, 3477, 3475,
	3474, 3473, 3472, 3470, 3107, 3104, 3101, 3099, 3469, 3468,
	3467, 3097, 3095, 3072, 3465, 78, 3460, 28, 43, 32,
	3459, 6, 3458, 203, 223, 3456, 4, 3455, 3454, 13,
	206, 3449, 3448, 76, 3060, 3447, 3443, 3441, 3440, 3439,
	3435, 148, 3433, 3432, 3038, 3431, 3028, 3430, 3026, 3024,
	3021, 3009, 3007, 204, 3429, 3003, 3001, 2997, 3427, 2768,
	243, 477, 230, 3423, 136, 142, 1821, 3422, 234, 3421,
	217, 3417, 3416, 3412, 457, 228, 3398, 169, 88, 962,
	168, 170, 171, 321, 3397, 67, 201, 336, 3395, 12,
	3394, 123, 3393, 219, 3392, 225, 224, 200, 214, 195,
	3391, 3390, 154, 3389, 3387, 3386, 221, 3384, 3371, 235,
	372, 3370, 3369, 186, 3368, 143, 3367, 184, 3365, 3364,
	3363, 3362, 246, 121, 93, 172, 178, 3361, 164, 3360,
	3359, 3357, 3356, 3355, 3354, 94, 65, 2594, 3353, 160,
	197, 3352, 66, 52, 48, 3351, 3350, 61, 3346, 3345,
	151, 3344, 3343, 139, 3341, 193, 74, 3336, 3330, 3329,
	3327, 116, 87, 3323, 31, 3321, 190, 3319, 3311, 3310,
	3309, 3308, 103, 3307, 90, 3306, 194, 229, 526, 3304,
	3303, 51, 56, 3302, 63, 16, 15, 112, 49, 107,
	81, 191, 174, 140, 163, 46, 161, 57, 159, 156,
	82, 3301, 231, 179, 216, 117, 33, 3295, 3293, 205,
	3288, 115, 213, 188, 192, 212, 3286, 3283, 3282, 245,
	3280, 176, 552, 3279, 129, 145, 106, 2791, 244, 144,
	3278, 3276, 3275, 3273, 122, 55, 138, 3271, 38, 248,
	242, 249, 53, 127, 3270, 1804, 6595, 6672, 8279, 29,
	59, 111, 7346, 91, 207, 3268, 71, 3267, 3266, 3265,
	4955, 180, 50, 58, 165, 3263, 167, 39, 102, 3262,
	3261, 3260, 3258, 3257, 3256, 226, 182, 3255, 3254, 70,
	3253, 3252, 42, 30, 11, 9, 3250, 153, 240, 233,
	232, 3249, 209, 60, 3248, 3247, 185, 141, 3243, 3241,
	3239, 3238, 181, 124, 211, 3231, 208, 128, 131, 3230,
	126, 3227, 3225, 125, 8418, 137, 3223, 3221, 305, 135,
	158, 196, 3217, 3213, 3211, 72, 3207, 3206, 3, 3201,
	110, 47, 54, 113, 21, 166, 3197, 3194, 199, 3193,
	3192, 157, 175, 3191, 150, 146, 64, 3190, 79, 155,
	3188, 173, 2, 5, 10, 3183, 3182, 3178, 3177, 3176,
	3175, 3174, 3173, 133, 3172, 3171, 105, 95, 80, 3170,
	3169, 3168, 3166, 3149, 198, 177, 92, 222, 96, 14,
	3148, 3146, 7, 3145, 183, 3144, 104, 3143, 3142, 130,
	3141, 3138, 77, 101, 44, 99, 3137, 3134, 118, 162,
	3133, 108, 3115, 3111, 218, 411, 3093, 331, 3090, 202,
	189, 85, 89, 3076, 75, 114, 3074, 98, 3062, 25,
	69, 3051, 22, 20, 1820, 3049, 0, 3665, 210, 3047,
	134, 3045, 3014, 241, 3012,
}

var yyR1 = [...]int{
	0, 465, 465, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 247, 247, 98, 4, 4, 11, 11, 9,
	9, 10, 10, 16, 6, 6, 12, 12, 12, 13,
	13, 7, 7, 14, 14, 15, 15, 5, 5, 129,
	129, 8, 8, 128, 128, 128, 244, 244, 244, 244,
	241, 241, 130, 130, 127, 127, 135, 17, 17, 17,
	112, 112, 18, 19, 19, 19, 19, 468, 468, 144,
	144, 142, 142, 143, 143, 238, 238, 240, 240, 20,
	20, 20, 249, 249, 254, 254, 254, 257, 257, 257,
	257, 226, 227, 228, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 456,
	456, 456, 457, 457, 457, 457, 457, 282, 282, 282,
	282, 420, 420, 436, 436, 436, 437, 437, 435, 435,
	435, 435, 435, 439, 439, 440, 440, 438, 438, 438,
	438, 442, 442, 443, 443, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 423,
	423, 423, 51, 51, 51, 51, 51, 55, 55, 52,
	52, 52, 52, 52, 52, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 445, 445,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 447,
	447, 448, 448, 449, 449, 449, 449, 450, 450, 450,
	450, 450, 451, 451, 451, 451, 451, 451, 451, 452,
	452, 453, 453, 3, 2, 401, 401, 402, 402, 403,
	403, 403, 403, 404, 404, 405, 405, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 32, 32, 32,
	32, 32, 32, 281, 281, 277, 277, 277, 279, 279,
	280, 280, 280, 422, 422, 422, 416, 416, 416, 418,
	418, 417, 417, 417, 419, 419, 424, 424, 424, 424,
	424, 427, 427, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 428, 428, 428, 425, 425, 163, 163,
	429, 429, 434, 434, 430, 430, 431, 431, 433, 433,
	433, 432, 432, 432, 432, 319, 319, 182, 182, 71,
	71, 72, 72, 72, 215, 215, 215, 21, 21, 21,
	21, 21, 21, 27, 27, 29, 29, 29, 29, 58,
	58, 59, 30, 30, 30, 30, 60, 60, 61, 33,
	33, 33, 33, 33, 33, 68, 68, 68, 67, 67,
	66, 66, 66, 66, 66, 66, 35, 36, 37, 469,
	469, 469, 62, 62, 38, 38, 38, 41, 41, 41,
	42, 42, 42, 39, 40, 43, 31, 31, 31, 31,
	69, 69, 64, 64, 63, 63, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 34, 34,
	34, 34, 34, 34, 26, 400, 400, 400, 57, 57,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 79, 79, 356, 357, 357, 357, 357,
	357, 357, 343, 343, 344, 344, 344, 344, 344, 344,
	333, 333, 333, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	307, 307, 307, 307, 311, 311, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 310, 310, 310, 310, 310, 310, 310, 310, 312,
	312, 312, 312, 312, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 342,
	342, 316, 316, 315, 315, 315, 336, 336, 337, 337,
	337, 334, 334, 334, 335, 335, 320, 320, 320, 320,
	320, 320, 321, 338, 322, 322, 323, 323, 323, 323,
	323, 323, 324, 324, 325, 325, 325, 327, 327, 332,
	332, 331, 331, 331, 331, 331, 331, 328, 328, 328,
	328, 328, 328, 329, 329, 329, 330, 341, 341, 341,
	341, 341, 317, 47, 47, 53, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 378, 378, 383, 383, 271, 271, 272, 272,
	54, 54, 54, 54, 54, 169, 169, 56, 56, 56,
	379, 379, 381, 381, 381, 381, 381, 381, 381, 381,
	380, 380, 382, 382, 345, 345, 374, 374, 373, 373,
	372, 372, 372, 372, 372, 372, 372, 354, 354, 355,
	355, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	349, 349, 349, 348, 348, 350, 350, 353, 353, 353,
	371, 371, 370, 370, 346, 346, 346, 384, 384, 384,
	384, 384, 103, 103, 347, 347, 347, 385, 351, 351,
	352, 352, 352, 393, 394, 392, 392, 392, 392, 392,
	170, 170, 170, 376, 376, 376, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 104, 104, 104, 105, 105, 326,
	326, 358, 358, 358, 358, 358, 464, 464, 464, 359,
	359, 359, 359, 359, 359, 455, 455, 454, 454, 454,
	360, 360, 361, 362, 362, 362, 363, 363, 365, 365,
	278, 278, 366, 366, 367, 367, 364, 364, 364, 368,
	368, 397, 397, 397, 396, 396, 74, 74, 74, 74,
	76, 76, 75, 75, 75, 83, 83, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	73, 73, 291, 291, 78, 214, 214, 214, 276, 276,
	390, 390, 391, 391, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 387, 387, 386, 386, 388,
	388, 77, 77, 77, 77, 164, 164, 23, 23, 80,
	80, 421, 421, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 395, 395, 395, 25, 25, 84, 85,
	85, 85, 290, 290, 290, 290, 290, 88, 88, 88,
	88, 242, 242, 243, 243, 89, 89, 89, 89, 90,
	90, 90, 90, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 124, 263, 263, 262,
	262, 261, 261, 261, 264, 264, 264, 264, 305, 305,
	305, 87, 87, 87, 99, 99, 94, 94, 97, 97,
	97, 97, 100, 100, 101, 101, 102, 102, 95, 96,
	44, 45, 45, 45, 45, 46, 92, 92, 92, 93,
	93, 93, 93, 114, 114, 115, 115, 471, 471, 471,
	91, 472, 106, 107, 107, 109, 109, 109, 110, 110,
	110, 111, 111, 111, 268, 268, 268, 268, 268, 268,
	268, 108, 108, 108, 118, 118, 122, 122, 122, 122,
	121, 121, 121, 121, 217, 217, 222, 297, 297, 198,
	198, 218, 218, 223, 223, 223, 224, 224, 225, 225,
	225, 225, 225, 220, 220, 219, 219, 221, 185, 185,
	185, 185, 183, 183, 183, 183, 183, 183, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 181, 181, 295, 295, 295, 295, 294,
	294, 294, 126, 126, 131, 131, 133, 133, 133, 133,
	133, 133, 133, 133, 136, 200, 200, 473, 473, 154,
	154, 155, 155, 155, 155, 156, 156, 156, 156, 156,
	158, 158, 158, 159, 159, 159, 159, 159, 159, 160,
	161, 161, 157, 157, 157, 179, 179, 236, 236, 237,
	237, 235, 235, 239, 239, 132, 132, 134, 134, 134,
	134, 139, 139, 140, 140, 141, 141, 302, 302, 302,
	145, 145, 145, 147, 146, 146, 146, 146, 146, 146,
	148, 148, 458, 459, 459, 460, 460, 460, 460, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 462,
	462, 463, 463, 149, 149, 151, 152, 152, 150, 150,
	150, 150, 150, 150, 162, 162, 153, 165, 165, 165,
	165, 166, 166, 123, 123, 123, 123, 123, 123, 123,
	123, 260, 260, 168, 168, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 194, 194, 194, 194, 194,
	194, 171, 171, 171, 171, 171, 171, 171, 117, 117,
	195, 195, 195, 138, 137, 137, 120, 120, 119, 119,
	196, 196, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 188, 188,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 193, 193,
	193, 193, 193, 470, 470, 190, 190, 189, 189, 189,
	189, 189, 189, 113, 113, 113, 113, 113, 303, 303,
	303, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 70, 70, 207, 207, 116, 116, 205,
	205, 206, 208, 208, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 178, 178, 178, 209, 209, 197, 197, 125,
	210, 210, 211, 212, 212, 213, 213, 216, 229, 229,
	229, 230, 230, 230, 230, 180, 180, 180, 231, 231,
	231, 231, 231, 173, 173, 172, 172, 172, 174, 174,
	175, 175, 474, 474, 234, 234, 233, 233, 232, 232,
	232, 232, 232, 232, 232, 245, 245, 199, 199, 202,
	202, 201, 203, 246, 246, 251, 251, 251, 251, 248,
	248, 252, 252, 252, 252, 255, 255, 256, 256, 256,
	253, 253, 253, 253, 250, 250, 250, 299, 299, 299,
	299, 258, 258, 267, 267, 265, 265, 266, 266, 259,
	259, 318, 318, 318, 273, 273, 274, 274, 275, 275,
	269, 269, 269, 269, 270, 270, 296, 296, 292, 292,
	298, 298, 293, 293, 300, 300, 301, 301, 301, 301,
	398, 398, 399, 399, 399, 339, 339, 410, 410, 340,
	340, 411, 411, 412, 412, 407, 407, 408, 408, 409,
	409, 409, 48, 413, 413, 414, 414, 415, 415, 415,
	415, 49, 50, 50, 50, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 289,
	289, 289, 289, 289, 289, 286, 286, 286, 286, 286,
	286, 287, 287, 287, 466, 467,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	3, 1, 3, 5, 1, 1, 1, 3, 3, 3,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 2,
	1, 10, 2, 0, 2, 2, 0, 2, 3, 6,
	1, 3, 0, 2, 1, 3, 4, 9, 9, 10,
	1, 1, 10, 9, 8, 7, 7, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 0, 2, 3,
	4, 5, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 0, 0, 0, 2, 3, 2, 3, 12, 12,
	13, 5, 5, 16, 12, 9, 4, 15, 1, 6,
	9, 8, 0, 3, 3, 6, 3, 0, 3, 4,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 0, 3, 9,
	9, 9, 10, 6, 8, 2, 3, 2, 3, 3,
	3, 4, 3, 3, 2, 2, 3, 2, 2, 2,
	3, 2, 2, 3, 2, 2, 2, 3, 3, 2,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 1, 3, 0, 1, 1, 1, 1, 3, 1,
	3, 3, 0, 2, 5, 5, 5, 7, 5, 0,
	3, 0, 3, 4, 4, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 2, 4, 5,
	4, 6, 7, 2, 3, 3, 3, 3, 0, 3,
	0, 3, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 0, 1, 4, 3, 3, 3, 6, 6, 5,
	5, 5, 5, 4, 3, 5, 1, 3, 1, 3,
	3, 5, 0, 5, 0, 3, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 4, 2, 5, 8, 4, 7, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 5, 7, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 2, 5, 0,
	1, 2, 1, 3, 5, 7, 8, 7, 9, 10,
	7, 9, 10, 2, 2, 2, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	4, 3, 2, 4, 4, 0, 2, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 5, 5, 5, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 6, 8, 3, 6, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 3, 2, 3, 3, 2,
	3, 3, 2, 3, 4, 2, 2, 1, 1, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 4, 4,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 2, 3, 3, 2,
	2, 4, 3, 1, 0, 1, 3, 3, 3, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 5, 5, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 2, 2,
	3, 3, 0, 3, 0, 3, 1, 1, 0, 1,
	5, 4, 2, 3, 3, 0, 1, 0, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 3, 5, 5, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 3, 3, 1, 1, 0, 1, 1,
	1, 3, 5, 3, 3, 3, 5, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	1, 3, 3, 3, 3, 2, 1, 11, 12, 12,
	13, 13, 0, 1, 3, 2, 1, 5, 1, 1,
	0, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 2, 3, 3, 3, 3, 4,
	5, 3, 3, 4, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 3, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	0, 1, 6, 1, 4, 5, 5, 6, 0, 1,
	0, 3, 1, 1, 0, 2, 0, 8, 9, 0,
	2, 0, 1, 2, 0, 2, 1, 1, 1, 1,
	4, 3, 7, 5, 5, 1, 3, 5, 4, 9,
	11, 9, 2, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 3, 3, 6, 5, 4, 4, 5, 5,
	8, 4, 5, 7, 2, 2, 2, 2, 3, 4,
	3, 4, 1, 3, 3, 3, 3, 4, 5, 5,
	3, 7, 6, 5, 2, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 4, 4, 3, 5, 3,
	1, 1, 1, 1, 6, 0, 1, 2, 0, 1,
	0, 1, 1, 2, 5, 3, 4, 4, 4, 4,
	4, 4, 3, 7, 6, 8, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 3, 1, 3, 8,
	8, 8, 11, 12, 15, 0, 3, 3, 3, 3,
	5, 3, 5, 6, 6, 4, 4, 4, 4, 4,
	4, 4, 4, 0, 1, 1, 3, 2, 3, 8,
	5, 1, 1, 1, 1, 1, 1, 4, 4, 4,
	4, 1, 3, 1, 1, 2, 2, 4, 4, 3,
	3, 3, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 4, 3, 2, 2, 6, 2, 4, 3,
	3, 4, 4, 5, 8, 6, 3, 4, 4, 2,
	4, 3, 2, 4, 5, 6, 2, 6, 6, 3,
	3, 4, 2, 4, 3, 3, 3, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 3, 2, 0, 1,
	1, 2, 4, 1, 0, 1, 2, 1, 2, 4,
	4, 5, 0, 1, 0, 3, 0, 2, 4, 4,
	2, 3, 4, 4, 5, 3, 4, 5, 4, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 0, 2, 2, 2, 2, 2,
	2, 0, 1, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 2, 6, 0, 1, 0,
	3, 0, 1, 0, 2, 2, 4, 1, 2, 2,
	2, 2, 2, 0, 2, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 2, 2, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 5, 1,
	2, 3, 1, 1, 2, 2, 4, 0, 1, 2,
	6, 1, 3, 2, 4, 1, 1, 1, 1, 1,
	5, 5, 8, 5, 5, 8, 5, 5, 8, 2,
	2, 2, 3, 4, 4, 0, 1, 3, 1, 0,
	3, 1, 3, 1, 3, 4, 6, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 1, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 3, 2,
	2, 2, 12, 1, 3, 3, 3, 6, 7, 2,
	3, 3, 4, 4, 5, 5, 8, 8, 3, 3,
	4, 3, 4, 1, 3, 3, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 4, 6, 6, 6, 4,
	8, 8, 8, 8, 4, 6, 7, 7, 7, 9,
	4, 7, 5, 4, 4, 4, 4, 2, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 6, 3, 4,
	2, 2, 2, 0, 2, 1, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 1, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	0, 2, 1, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 1, 1, 1, 0, 2,
	4, 3, 4, 1, 4, 1, 3, 4, 1, 4,
	2, 3, 1, 1, 0, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 0, 5, 1, 3, 2,
	3, 3, 1, 1, 3, 3, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 4, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 3, 3, 0, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 1, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 2, 0,
	4, 4, 3, 1, 3, 2, 4, 1, 2, 1,
	2, 2, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -465, -1, -4, -11, -16, -17, -18, -19, -20,
	-22, -74, -23, -24, -25, -84, -88, -89, -90, -86,
	-87, -94, -95, -96, -92, -91, -31, -34, -26, -98,
	-44, -45, -46, -48, -49, -50, -51, -52, -54, -53,
	-47, -5, 11, -136, -466, 12, -130, 35, -79, 191,
	-456, -76, -75, -77, -78, 194, 193, 231, 195, 647,
	369, 648, 224, 73, 447, -97, 450, 451, -471, 307,
	308, 25, 43, 452, 454, 36, 37, 247, 335, 337,
	198, 448, 430, 431, 360, 695, -6, 653, 56, 77,
	192, 226, 225, 32, -8, -12, 200, -13, -14, -7,
	764, -212, 20, -106, -472, -212, -11, -9, -466, -4,
	653, -106, -112, 14, 15, 13, 558, -106, -356, 29,
	-3, 118, 77, -8, 11, -270, -281, 98, 549, 199,
	-279, 331, 333, 209, -267, -269, -277, 257, 267, 50,
	211, 210, 268, 200, 331, -267, 201, 203, 549, 199,
	240, 239, 331, 333, 272, 647, 200, -150, -300, -286,
	-288, -287, 349, 83, -285, 578, 582, 272, 585, 586,
	591, 339, 91, 53, 369, 572, 361, 370, 221, 527,
	573, 332, 338, 341, 362, 736, 371, 373, 374, 570,
	571, 55, 203, 560, 561, 564, 214, 751, 354, 222,
	650, 268, 759, 754, 756, 343, 757, 517, 609, 447,
	466, 458, 485, 651, 707, 280, 302, 455, 386, 534,
	610, 346, 295, 367, 708, 322, 290, 523, 529, 305,
	450, 611, 612, 613, 543, 248, 278, 709, 456, 299,
	301, 300, 262, 577, 306, 42, 227, 482, 660, 648,
	257, 710, 616, 703, 615, 251, 284, 614, 329, 41,
	33, 617, 250, 546, 109, 277, 711, 377, 531, 618,
	503, 378, 246, 273, 275, 291, 713, 655, 350, 233,
	530, 432, 478, 360, 128, 255, 317, 379, 714, 504,
	508, 715, 535, 336, 316, 621, 716, 717, 380, 659,
	285, 718, 202, 342, 622, 281, 719, 258, 445, 537,
	347, 502, 212, 652, 223, 57, 237, 538, 506, 624,
	512, 515, 433, 376, 434, 720, 721, 722, 723, 358,
	356, 626, 357, 359, 628, 269, 297, 656, 625, 658,
	62, 197, 662, 510, 509, 511, 298, 676, 533, 490,
	488, 724, 725, 351, 218, 726, 727, 489, 23, 728,
	729, 541, 321, 353, 730, 731, 732, 627, 294, 632,
	608, 733, 734, 532, 505, 507, 256, 127, 647, 279,
	735, 355, 528, 364, 663, 654, 340, 292, 633, 737,
	382, 293, 236, 229, 542, 427, 428, 443, 444, 372,
	738, 431, 739, 740, 741, 742, 334, 333, 451, 365,
	634, 452, 274, 303, 657, 743, 635, 636, 744, 745,
	266, 249, 545, 536, 61, 519, 514, 368, 383, 457,
	429, 440, 435, 436, 438, 439, 442, 441, 437, 446,
	522, 448, 276, 243, 637, 638, 639, 430, 640, 12,
	296, 348, 641, 642, 643, 526, 366, 304, 267, 270,
	493, 238, 746, 747, 480, 481, 449, 241, 231, 122,
	544, 387, 327, 702, 331, 384, 289, 60, 244, 54,
	748, 749, 271, 245, 661, 288, 453, 345, 664, 200,
	83, -290, -285, -288, -289, -286, -287, 349, 232, 59,
	96, 64, 63, 83, -285, 647, 144, 486, 534, 191,
	524, 525, 531, -349, 532, 239, 427, 368, 242, -305,
	200, -263, 241, 523, 336, 355, 582, 245, 246, 273,
	428, 434, 201, 202, 38, 536, 535, 527, -300, -99,
	453, -99, -99, 204, 453, -114, 233, 195, -150, 232,
	-69, 83, 309, -69, 35, 83, -162, -292, -300, 83,
	-285, 42, 83, 452, 526, 526, 85, 654, 248, 27,
	-445, -419, 364, -444, -417, 192, 191, 15, 193, 272,
	369, 370, 335, 201, 13, 36, 736, 219, 371, 372,
	11, 224, 373, 374, 240, 14, 375, -446, -422, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 82, 83,
	-285, -265, 206, 372, 427, 449, 427, 427, -272, -271,
	385, 512, 144, -129, 706, -127, -135, -302, -300, -286,
	-287, -200, -473, 253, 549, -259, 331, -279, 205, -131,
	-133, -134, -154, -137, 704, -466, -132, -458, -150, -138,
	83, 607, -110, 10, -109, -111, 9, 8, -110, -230,
	22, 21, -268, -107, -230, -467, 79, -467, -9, -129,
	-121, 135, -123, -300, -167, 101, -177, 34, 30, -176,
	349, 232, -168, -204, -286, -203, -138, 144, -304, 133,
	134, 141, 102, 187, -188, -186, -187, -189, -191, -192,
	227, 480, 481, 82, 84, 92, 85, 86, 87, 88,
	93, 94, 95, -292, -288, -287, -284, 578, 582, 585,
	586, 591, -201, -466, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 67, 68, 576, 199,
	559, 560, 483, 561, 13, 562, 563, 564, 649, 221,
	568, 104, 56, 326, 550, 551, 555, -193, 552, 556,
	557, 570, 571, 572, 573, 206, 549, 139, 558, 595,
	596, 597, 598, 599, 600, 601, 602, 604, 605, 603,
	579, 580, 581, 583, 584, 587, 588, 589, 590, 592,
	593, 594, 678, 196, 192, 195, 100, 29, 31, 679,
	254, 103, 464, 498, 567, 21, 25, 215, 198, 486,
	213, 143, 208, 216, 311, 313, 191, 71, 680, 547,
	312, 524, 674, 671, 673, 672, 477, 475, 310, 681,
	15, 32, 225, 261, 682, 473, 193, 252, 107, 108,
	683, 47, 46, 8, 314, 226, 320, 474, 684, 685,
	24, 74, 217, 16, 211, 242, 758, 686, 335, 18,
	126, 19, 687, 668, 670, 669, 205, 120, 201, 750,
	69, 259, 688, 462, 467, 468, 469, 470, 471, 463,
	97, 689, 690, 117, 325, 65, 607, 38, 247, 704,
	565, 324, 691, 44, 43, 497, 501, 496, 323, 513,
	118, 22, 553, 554, 36, 692, 693, 235, 500, 461,
	495, 705, 694, 666, 264, 72, 385, 476, 762, 39,
	75, 230, 381, 352, 48, 98, 20, 260, 70, 40,
	574, 123, 763, 479, 207, 239, 695, 539, 263, 696,
	124, 472, 706, 219, 119, 454, 194, 363, 308, 220,
	330, 26, 337, 697, 253, 125, 525, 665, 698, 569,
	35, 224, 307, 460, 209, 699, 265, 319, 309, 318,
	700, 701, 344, 49, 760, 677, 200, 45, 106, 499,
	459, 494, 204, 566, 240, 315, 9, 50, 37, 520,
	14, 375, 73, 76, 487, 484, 492, 491, 210, 761,
	17, 328, 575, 653, 540, 99, 675, 521, 548, -106,
	-106, -106, -248, 449, -255, -252, 535, 536, -253, -256,
	-250, -204, 512, 733, 734, 534, 486, 533, -292, -300,
	-286, 349, 232, 144, 579, 580, 581, 104, 483, 559,
	595, 550, 552, 547, 551, 549, 34, 596, 30, 95,
	597, 576, 206, 13, 187, 583, 584, 598, 599, 600,
	67, 553, 554, 649, 139, 101, 601, 602, 93, 604,
	605, 326, 558, 68, 603, 199, 589, 588, 587, 590,
	562, 563, 94, 555, 556, 557, 56, 593, 592, 594,
	-2, -6, -466, -150, -357, -344, -347, -292, -286, -288,
	-289, 228, -287, 216, -385, 83, -285, 213, -212, -106,
	201, 203, 558, -266, 206, -266, 240, 239, 272, -280,
	265, -266, -266, 737, 200, -279, 110, 110, -80, -150,
	-421, -416, -422, 200, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, 83, -290, -150, 188, -85, -150, -142,
	16, 16, 76, 76, 83, -290, 83, 433, 376, 35,
	-264, 118, 17, 549, 199, 200, 239, 240, 203, 272,
	-264, -351, 16, 120, 243, 243, 243, 243, 243, 244,
	243, -262, 526, 528, 529, 530, -261, 16, 120, 17,
	-124, 118, 24, -466, -230, -230, -261, 243, 136, -101,
	100, -101, 83, 452, 204, -115, 234, -114, -115, -179,
	-157, 29, 6, 7, 110, 35, 35, 82, 60, 35,
	-64, -63, -65, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 35, -400, 77, 188, -339,
	512, 83, -413, -414, -150, 85, 85, 75, 355, 75,
	78, 204, 78, 75, -447, 365, 77, -447, 333, 365,
	366, 267, 331, 203, -447, -447, 333, -447, -447, -447,
	352, -447, -447, 526, -447, -447, -447, 367, 368, -447,
	524, 203, -447, -447, -447, -447, -447, 80, 27, -445,
	-419, 364, 30, 429, 432, 539, 653, -56, 445, 446,
	-169, 27, -377, 144, 377, 378, 379, 380, 376, 355,
	381, 382, 383, 243, 384, 200, 526, 376, -6, -127,
	78, -234, -466, 78, -201, -466, 83, -332, -331, -328,
	-329, -330, -327, 34, 200, -265, 272, -145, -147, -146,
	-148, 65, 69, 71, 66, 67, 68, 527, 72, -275,
	29, -137, -466, -126, -9, -136, -131, -466, -155, 123,
	-165, -275, -156, 73, 205, 74, 29, -157, -158, -159,
	-160, -161, 6, 7, 55, -466, -466, -7, -8, 27,
	28, -15, -7, -13, -15, 27, 28, 27, 28, -7,
	-231, 24, 36, -180, 85, 88, -204, -213, -216, -123,
	-300, 59, -118, 27, 28, 66, 58, 64, 63, -227,
	90, -467, 16, -295, 100, 98, 99, 117, -294, 29,
	83, 82, -290, 188, -123, -171, 120, 101, 118, 119,
	103, 130, 129, 140, 133, 134, 135, 136, 137, 138,
	139, 131, 132, 143, 110, 111, 112, 113, 114, 115,
	116, -260, -466, -138, -466, 188, -466, 188, 189, 190,
	188, -177, -177, -177, -177, -177, -177, -177, 82, 82,
	82, -466, 188, 188, 188, -466, -466, -466, -466, -466,
	-196, -466, -123, 653, 200, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-207, -123, -466, -466, -470, -466, -470, -470, -190, -470,
	-466, -190, -190, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -190, -190, -190, -466, -259, -259,
	16, -142, -143, -150, -153, -300, 78, -249, -254, 537,
	539, 449, -253, -253, -299, -292, 82, 34, 144, -355,
	110, 121, 35, 188, -212, -466, 79, 78, -307, -311,
	-313, -312, -314, -309, -310, -70, 490, 488, 484, 483,
	486, 489, 144, 487, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 35, 227, 480, 481, 482,
	664, 504, 505, 506, 507, 508, 210, 509, 510, 511,
	458, 485, 651, 459, 460, 461, 462, 463, 464, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, -307, -307, -307, -307, -307, -291, -385, 83,
	-290, 77, -230, -268, -266, -266, -281, 209, -279, 83,
	101, 83, -149, -292, -300, -162, -266, 266, -425, -424,
	-416, -419, 677, -266, -280, -416, 271, 269, 270, 78,
	204, 78, 204, 80, -265, -292, -144, -150, 83, 83,
	-149, -162, -418, -416, -419, -163, -292, -300, -301, -300,
	-283, -288, -289, 678, 196, 27, 192, 195, 100, 29,
	31, 679, 254, 103, 464, 144, 579, 580, 581, 498,
	567, 21, 25, 215, 104, 198, 483, 486, 213, 143,
	208, 216, 311, 313, 559, 595, 191, 71, 680, 550,
	552, 547, 551, 312, 549, 524, 674, 671, 673, 672,
	477, 475, 310, 34, 681, 15, 596, 32, 225, 261,
	28, 682, 137, 473, 193, 606, 252, 107, 108, 683,
	47, 46, 8, 30, 314, 226, 95, 320, 597, 474,
	684, 685, 24, 74, 217, 16, 211, 242, 758, 686,
	335, 18, 576, 126, 19, 687, 668, 670, 669, 206,
	205, 120, 201, 750, 69, 259, 13, 688, 462, 467,
	468, 469, 470, 471, 463, 187, 97, 689, 690, 117,
	325, 65, 583, 584, 607, 51, 38, 247, 598, 599,
	704, 600, 565, 324, 691, 44, 43, 497, 501, 496,
	323, 513, 67, 118, 22, 553, 554, 36, 692, 693,
	649, 235, 500, 461, 495, 705, 694, 666, 139, 264,
	72, 101, 385, 601, 602, 93, 476, 762, 39, 75,
	230, 381, 352, 48, 98, 20, 260, 70, 40, 574,
	123, 763, 604, 479, 207, 239, 695, 539, 263, 696,
	124, 605, 472, 706, 219, 119, 454, 194, 326, 558,
	363, 308, 220, 330, 26, 337, 68, 697, 253, 125,
	603, 199, 525, 665, 11, 698, 569, 35, 224, 307,
	460, 209, 699, 265, 319, 309, 318, 700, 58, 701,
	344, 49, 589, 588, 587, 590, 760, 66, 562, 563,
	677, 200, 45, 106, 499, 459, 494, 204, 566, 240,
	94, 315, 9, 50, 37, 520, 14, 375, 73, 76,
	555, 556, 557, 56, 487, 484, 492, 593, 491, 592,
	594, 210, 761, 105, 17, 328, 575, 653, 540, 99,
	675, 521, 14, 193, 78, 82, -243, 83, -290, 82,
	-243, -242, -243, -242, 243, -264, 82, -304, -123, -266,
	-266, -150, -150, -150, -150, -150, -150, -264, -264, -264,
	-264, -261, 16, -261, -264, -300, -300, -123, -177, -416,
	551, 135, -264, -300, -102, -100, 218, -100, -102, 83,
	83, 452, -93, -4, -19, -17, -18, -115, -9, 39,
	29, 29, 83, -64, -64, 82, -64, 78, 110, -64,
	-179, 79, -196, -292, -398, 750, 78, -415, 29, 539,
	540, 513, -449, 200, 242, 239, 75, -449, -444, 372,
	-418, -417, -416, -447, -448, -292, -447, -447, -447, 526,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -422,
	75, 78, 355, 75, 16, 75, 204, -380, -382, 443,
	444, 540, 541, 456, 376, 376, 376, 376, 376, 376,
	-378, -142, 653, -378, -142, 204, 254, -135, 29, -233,
	-232, -293, -286, -287, -288, -289, 228, -292, -283, -473,
	-332, -329, -328, -330, 486, 534, 143, 546, -150, -416,
	-163, -133, -133, -131, -133, 65, 65, 65, 70, 65,
	70, 70, 65, 65, -146, -302, -275, 78, -467, -467,
	-467, -9, -466, -302, -165, -275, 201, 201, 201, 103,
	16, 53, 27, 103, 16, 53, 27, 103, 16, 53,
	27, -120, -119, -122, 135, -123, -300, -177, -244, 97,
	14, 120, 78, 23, 78, -229, 31, 32, 188, -178,
	60, 85, 88, -244, 78, -121, -150, -123, -123, -123,
	-194, 93, 101, 94, 95, -294, 228, 135, -301, -293,
	-288, -286, -287, 349, 232, -283, -177, -195, -201, -138,
	89, 120, 118, 119, 103, -177, -177, -177, -177, -177,
	-177, -177, -177, -177, -177, -177, -177, -177, -177, -177,
	-303, 83, 82, 144, 83, -293, -119, -293, -176, 227,
	480, 481, 93, -176, -292, -292, -108, 27, 28, -293,
	527, -292, -293, -108, -108, -108, -108, -108, 78, -467,
	-119, -119, -119, -467, -123, -123, -119, -177, -119, -204,
	82, -119, -204, 82, -119, -177, 565, 566, 567, -119,
	-119, -108, -205, -206, 105, -204, -286, -289, 349, 232,
	-119, -467, 85, -183, -184, 656, 665, 666, 668, 671,
	664, 663, 662, 660, 659, 658, 661, 657, 675, 674,
	673, 672, 670, 669, 667, -183, -183, -185, 227, 482,
	480, 481, -119, -120, -119, -119, -467, -467, -122, -119,
	-122, -119, -119, -122, -467, -467, -467, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -467,
	85, -152, 97, -150, -126, -150, -142, -468, 16, 76,
	-468, 78, 188, -252, -255, 78, 538, 540, 541, -249,
	-324, -325, 143, 75, 96, 82, -123, -293, -301, -230,
	-376, -344, -345, -346, -347, -369, 216, -384, 207, 209,
	211, 210, 50, -348, 217, 201, 51, -308, -334, 519,
	520, -316, 77, -315, 77, -70, 484, 483, 486, -315,
	484, 491, -315, 491, 491, -315, -315, -315, 484, 77,
	77, -316, -316, -316, -315, -336, 77, -336, 479, -337,
	77, -337, -337, -337, -337, -308, -308, -308, -308, -308,
	-385, -123, -231, -292, -150, 203, 737, -332, 30, -332,
	-71, 254, 222, 188, 77, -163, 257, 258, -420, 78,
	34, -426, 332, 85, 206, -150, 232, -150, -150, -416,
	-416, -422, -142, 75, 78, 78, 188, 716, 716, -150,
	78, 82, 83, 83, -179, -352, 16, 120, -264, -150,
	-179, -117, 228, 76, -470, -467, 454, 455, 83, -93,
	-177, 39, 39, -63, -176, -292, 79, -399, 205, 558,
	82, -414, -302, 512, 540, -450, 135, -292, -449, -450,
	-453, 653, 204, 79, 78, -447, -449, 335, 78, -449,
	-418, -416, -379, -381, 435, 437, 438, 436, 439, 440,
	441, 442, 78, 110, 110, 457, -383, 24, -378, 539,
	-378, 82, -177, -137, -467, 78, 188, -201, 35, -354,
	-355, -354, -354, -83, -391, -361, -81, -389, 123, 196,
	193, 192, 268, 198, -327, 559, 251, 250, 284, 285,
	74, 36, 197, 194, -73, -82, 231, 290, 236, 291,
	195, 230, 292, 229, 293, 653, 288, 757, 517, 609,
	610, 643, 91, 613, 248, 42, 201, 623, 616, 546,
	619, 620, 377, 618, 622, 212, 626, 625, 627, 629,
	630, 631, 341, 634, 635, 636, 249, 637, 638, 639,
	366, 644, 9, -427, -426, -433, 75, -140, -139, 75,
	76, -141, 75, -139, 65, 65, 65, -237, 77, -302,
	-131, -467, -239, -292, -165, -302, -466, -466, -466, -177,
	-177, 120, -177, -177, 120, -177, -177, 120, -467, 78,
	188, 78, -241, 41, 40, -292, 514, 726, 61, -180,
	-180, -216, -258, 24, 16, 56, 56, -128, 16, -227,
	-227, 93, 94, 95, 188, -466, -195, -177, -177, -177,
	-117, 100, -467, -467, -120, -119, -119, -119, -119, -119,
	-123, -467, -467, -467, 78, 76, 29, -467, 76, 120,
	-467, 16, 16, -467, 16, 16, -467, -467, 16, -177,
	-177, -177, -467, -467, -119, -208, -206, 107, -123, -467,
	-467, -467, -467, -467, 78, 78, 16, 78, -467, -467,
	-467, -467, -217, 574, -217, -467, -467, -467, -467, -467,
	-467, -217, -217, -217, -467, -467, -467, -467, -467, -467,
	-467, -467, -467, -467, -467, -467, -467, -238, 123, -150,
	35, -238, 76, -126, -126, -153, -300, 135, -254, -257,
	542, 539, 545, 83, 82, 144, 82, 188, -231, -360,
	-375, 78, -361, 757, 517, 609, -327, 610, 643, 91,
	613, 248, 42, 201, 623, 616, 546, 619, 620, 377,
	618, 622, 212, 626, 625, 627, 629, 630, 631, 341,
	634, 448, 635, 636, 249, 637, 638, 639, 366, 644,
	9, 653, 77, -353, -291, -384, 83, -285, 51, -348,
	-350, -348, -348, -348, -353, 83, -285, -353, 51, 719,
	93, 101, -323, -325, 144, -320, -321, -338, -341, -317,
	29, 758, 522, 219, -347, 486, 534, 34, 75, 517,
	207, 51, 50, 211, 91, -335, 521, 85, 85, 585,
	-315, 491, -315, -315, -315, -315, -315, -342, 82, -342,
	85, -336, 85, 79, -296, 76, -234, -150, 677, -72,
	13, 14, 15, -292, -401, -402, -403, -292, 120, 259,
	260, 75, -436, 363, -424, 333, 342, 100, 21, 653,
	-457, 101, 204, 204, -395, 220, 215, -150, -150, -416,
	-292, 75, 75, -243, -166, 17, 83, 83, -261, -264,
	-177, -419, 245, 246, -177, -177, -151, 97, -415, 204,
	188, 188, -450, 204, 354, -418, -292, -450, 352, 335,
	-450, -55, 205, 16, 78, 110, 110, 110, 110, 110,
	110, 110, 110, -382, 77, 77, 386, 36, -232, -293,
	-354, 83, 82, 144, 83, 82, 144, 82, -390, 78,
	-391, 196, 193, 284, 285, -389, 21, -276, -348, -397,
	-396, -346, -347, 123, 208, 216, 216, 213, -276, -348,
	207, 217, 123, 216, 213, -276, 201, -354, -276, 486,
	143, 204, 38, 38, 366, 123, 366, 123, -354, -276,
	208, -348, -273, 216, -274, 204, 29, 289, 123, 123,
	123, 123, 123, 123, 123, 123, 294, 677, -354, -354,
	-354, -354, -354, -354, -354, -354, 615, 615, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -358, -454, 82, -464, 91, 272, 341, 83, -285,
	-283, 85, 87, 86, -354, -354, -439, 653, -164, 194,
	278, 274, -123, 77, -123, -235, -292, -237, -467, 78,
	-165, -235, -235, -235, 100, 204, -466, 100, 204, -466,
	100, 204, -466, -275, -122, 135, -301, 82, 78, 82,
	82, 515, 62, -150, -166, 606, -126, -121, 135, -293,
	-120, -117, 100, -177, -467, -467, -467, -467, -467, -467,
	-306, 144, 483, 486, 227, 482, 475, 473, 472, 474,
	502, 488, 519, 480, 520, 664, -303, -306, -303, -177,
	-177, -177, -177, -177, -177, 16, 16, 16, 650, -212,
	109, -123, 106, -177, -177, -177, -177, -292, -222, -466,
	-217, -217, -217, -217, -217, -217, -218, -217, -218, -218,
	-218, -218, -218, -218, -218, -218, -218, -218, -218, -173,
	-174, 35, -172, -9, -466, -175, -474, 56, 60, -466,
	-246, -251, -204, -286, -289, 228, -166, -126, -166, -166,
	188, 539, 543, 544, -375, -354, -354, -354, 534, 486,
	143, -354, -354, -354, -354, -354, 615, 615, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, 449, -354, -354, -354, -354,
	-354, -354, -358, -454, -354, -354, 677, -371, -370, 83,
	-290, 207, 50, -384, -353, -353, -353, -353, -353, -103,
	-291, 93, -466, 759, 85, -150, 35, 83, 144, 82,
	-176, 134, -304, -168, -187, -466, 94, 95, 550, 551,
	555, 552, 556, 557, 570, 571, 572, 573, 547, 553,
	554, 14, 51, 51, 51, 82, 79, 79, 79, -315,
	79, 78, 79, 78, 79, 78, -170, 711, 712, 75,
	-292, 29, -234, 85, 75, 79, 78, -307, -292, -292,
	-292, 274, -439, 338, -437, -435, 344, 345, 346, 347,
	348, -419, 343, -426, 340, 82, 83, 82, 676, 710,
	731, 703, 30, -150, -416, -236, 77, -235, -236, -123,
	-179, -238, 200, -418, 135, 135, -292, 204, -418, 352,
	-452, 653, 16, 16, 352, 16, 387, -418, -381, 82,
	82, 82, 85, 85, 85, 85, 85, -142, -142, 82,
	83, 82, 144, -360, -81, 196, 193, 284, 285, -362,
	-363, -366, -365, 124, 624, 691, 77, -343, 83, -290,
	-266, -269, 209, 207, -466, 83, -291, -291, -291, -265,
	51, 51, -239, -291, -291, -292, -291, 34, 281, 282,
	283, 83, 35, -354, 486, -239, 27, -239, 27, 34,
	338, 286, 287, -343, -291, -292, -150, 217, 213, -291,
	-239, 27, 85, -239, -292, -239, 27, -239, 27, -239,
	27, -239, 27, 645, -358, -123, -358, -464, -464, 82,
	82, 82, -354, -354, -105, 646, 218, -464, 82, -105,
	-464, -454, 82, -104, 218, 221, 223, -358, -358, -358,
	-464, -464, -464, -464, 82, -359, 34, 617, 478, 612,
	633, 611, 83, 93, 82, 82, -464, 34, -464, 34,
	-464, -358, 640, -464, -466, -440, -438, 356, 357, 358,
	359, -432, 250, 251, 204, 279, 101, -429, 756, 275,
	-235, 79, 78, -155, -292, -467, -467, -467, -177, -177,
	-177, -177, -177, -177, -177, -177, -177, -302, 188, 529,
	-292, -322, -323, -209, 18, -227, -467, -177, -218, -218,
	-218, -218, -218, -467, -316, -316, -316, -316, -337, 479,
	-316, 463, -316, 463, -467, -467, -467, -467, 24, 24,
	24, 24, -467, -177, -177, -177, -466, -116, 569, -123,
	78, 78, -467, -467, -297, 83, -245, 75, -245, -246,
	-275, -467, -233, -175, -466, 11, 56, 60, 653, 200,
	-199, -202, -473, -239, -166, 78, -355, -355, -355, -355,
	-212, -166, -358, -358, -358, -354, 35, -354, -464, -464,
	82, 82, 82, -354, -354, -105, -464, 82, -105, -464,
	-454, 82, -104, -358, -358, -358, -464, -464, -464, -464,
	82, -359, 83, 93, 82, 82, -464, 34, -464, 34,
	-464, -358, 640, -464, -466, 645, 79, 78, -316, -316,
	51, -350, 77, -177, 29, 77, 83, 144, 82, -176,
	82, -177, -193, 82, 85, 85, -150, -226, 29, -457,
	-150, -404, -405, -406, 91, 652, 101, 261, 262, 218,
	263, 264, 265, -403, -307, -307, -307, -429, -442, -443,
	-441, 341, 361, 362, 349, 100, 82, 82, 82, -428,
	332, 100, 341, 21, 29, 21, 29, 82, 82, 82,
	82, 85, 76, -235, -264, -322, -150, -452, -418, -452,
	335, -418, -418, 16, -418, 331, -55, 79, 79, -367,
	632, -466, 529, 621, 51, -343, -214, 221, 222, -307,
	-307, -353, -350, 51, -386, -388, 123, -292, -291, 711,
	712, 711, 712, 35, 193, 749, 719, -343, -354, -303,
	35, 366, 366, 366, 366, -214, -274, 204, 51, -291,
	204, 366, 366, 97, 653, 82, 82, 614, 628, -455,
	-454, -438, 85, 85, 85, 85, -319, 91, 75, -163,
	279, -433, 75, -182, -176, -187, -176, 79, -292, 78,
	78, 78, 135, -466, -407, -262, -210, 19, 21, -322,
	83, -322, 83, -177, -177, -177, -177, -467, -467, -467,
	-177, -467, 82, -177, -177, -198, 123, -240, 26, 33,
	-240, -245, -302, -175, -466, -467, -467, 78, -201, -466,
	-467, -212, -251, -123, -123, -123, -123, -230, -303, -354,
	-326, -454, 82, 82, 82, 614, 628, -455, -373, -372,
	76, 212, 91, 618, 636, 749, 719, -370, -229, -229,
	-353, -353, -235, -467, -466, -235, -467, 79, 79, 77,
	-228, -226, 24, -227, -406, 82, 265, 261, 265, 265,
	265, 265, 266, -433, -423, 91, 339, -441, 350, 717,
	334, 363, 85, 85, 122, 36, 37, -435, 21, 653,
	-426, 340, 82, 82, 340, 82, 82, 332, -457, 42,
	79, -407, -451, 29, -452, -451, 352, -55, -55, -418,
	-55, -364, 641, 85, -177, -466, -466, -278, 268, 79,
	83, -308, -308, -296, -266, -353, -467, 78, -292, 34,
	34, -214, -303, -303, -291, -292, -291, 204, -291, -466,
	200, 78, -467, 329, 82, 368, -164, -434, -184, -177,
	-177, -177, -459, -460, -293, 724, -408, 44, -411, 45,
	-220, 575, -211, -123, -197, -125, -123, -467, -467, -467,
	-467, -113, 120, 653, -467, -467, -212, 21, -118, 51,
	-240, -237, -175, -9, -202, -467, -230, -303, -467, -372,
	-454, -354, 82, -354, -354, 79, -333, 761, 760, -177,
	79, -371, -10, -9, -466, -228, 252, -228, 42, 42,
	257, 258, -432, 82, 82, 34, 351, 187, 34, 85,
	187, 577, 340, 82, 83, 341, 341, 21, -177, -408,
	-416, -451, -55, -387, -466, 21, -467, -235, -177, -466,
	110, 77, -353, 77, -388, 56, -177, 143, 143, 204,
	-291, -386, -150, -454, -226, -432, 133, -430, 276, -467,
	-467, -467, -467, 78, -307, 24, 82, 608, -409, -410,
	-340, 48, 21, -219, -221, -292, 78, -467, 651, 72,
	654, -223, 125, 124, -196, 14, 85, 82, 82, 219,
	-467, 79, -226, -9, -10, -10, 253, -28, -4, -17,
	-18, -19, -20, -22, -74, -23, -24, -29, -30, -25,
	-84, -88, -89, -90, -86, -97, -95, -96, -92, -91,
	-33, -35, -36, -38, -41, -42, -39, -40, -37, -31,
	-34, -43, -26, -44, -45, -46, -51, -52, -32, -53,
	-47, 104, 206, 448, 310, 321, 322, 323, 83, 326,
	328, 324, 325, 320, 330, 447, -319, 85, 34, 85,
	34, 353, 341, 29, 85, -318, 205, 653, -386, -365,
	-467, -467, -235, 85, -371, -296, -371, 237, -354, -303,
	-291, -467, -73, 653, -28, -319, 187, -431, 277, -182,
	-467, -460, -461, 608, 30, 730, 529, 82, 49, 45,
	-412, 46, 47, 82, 78, 29, -125, 62, 652, 655,
	-467, -224, 103, -225, 122, 577, -181, 85, 187, -224,
	-246, -150, -333, -374, -373, -282, 653, -467, -226, -215,
	255, 256, -226, -123, -58, -59, 105, -123, 83, -68,
	-298, 313, 314, 315, -293, 83, 83, -57, -28, 81,
	-57, -123, 83, 83, -469, 16, 59, -177, 109, -57,
	329, 660, 660, 82, -237, 85, 333, -467, 621, 51,
	-467, 79, 77, 79, 238, -303, 289, -226, 329, -176,
	-182, -434, -275, 82, 608, -466, 529, 21, 21, 21,
	21, -221, -222, 62, -225, 127, 128, 253, 127, 128,
	-176, 77, 213, 280, 512, -282, -226, 83, 83, -58,
	109, 107, -59, -123, 106, 311, 312, 316, -307, 78,
	764, 447, 323, 326, 328, 764, 329, 83, 16, 764,
	-226, -247, 35, 44, 125, 34, 338, 27, -419, -466,
	-278, -374, -371, -374, -466, -226, -184, -434, -302, -462,
	-463, 378, 93, 34, 82, -459, -466, 82, 82, 82,
	82, 653, 100, -183, -235, 352, 213, 213, -228, 109,
	107, 104, -57, 106, -57, 24, 24, 24, -322, -293,
	109, -28, 109, -57, -57, -57, -123, 327, -57, 97,
	109, -28, -246, 8, -177, -466, 79, -177, 235, -28,
	-463, 93, 34, -462, 93, 34, 75, 75, -176, -467,
	-459, 654, -225, 79, 352, 352, -21, -27, -20, -26,
	-17, -18, -19, 447, 653, 104, -57, 764, -57, 764,
	-69, 85, -9, -67, -66, 85, -69, 318, 101, 319,
	83, -324, 323, 83, 764, 764, 764, 329, -123, 764,
	-62, 83, -226, -419, -467, -177, -374, -467, -467, -226,
	75, -176, 75, -176, 683, 378, 683, 378, 75, -467,
	655, -393, -394, 75, -226, -57, 109, -129, 764, 109,
	764, 109, 107, -60, -61, 108, -28, 78, 317, 34,
	109, 109, 327, -57, 109, 109, 78, -368, 642, -467,
	75, 75, 378, 378, 683, 378, -394, 75, -393, 75,
	15, 14, 764, 109, 104, 206, -57, 109, 107, -61,
	-123, -66, -177, 83, 323, -123, 764, 326, 328, 83,
	85, -368, 75, 75, -392, 220, 215, 218, 35, -392,
	109, 104, 764, 206, -57, 106, 83, 109, 109, 378,
	683, 214, 34, 93, 109, 764, -57, 326, 328, 206,
	109, 764, 83, 83, 206,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1733, 1231, 1733, 0, 1231, 0, 1231, 0, -2,
	138, 936, 937, 938, 939, 0, 1813, 0, 0, 0,
	0, 0, -2, 1193, 1194, 1197, 1194, 1194, 1223, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 738, 0, 67, 0, 1337, 2764,
	-2, 1227, 1228, 1229, -2, -2, 0, 56, 0, 63,
	2, 1741, 0, 1244, 1233, 1741, 0, 0, 0, 49,
	0, 0, 1231, 1231, 1231, 90, 91, 0, 124, 0,
	126, 0, 0, 1733, 1231, 0, 0, 0, 1817, 1817,
	340, 1817, 1817, 1832, 0, 1835, 338, 0, 1814, 1830,
	1831, 1833, 0, 0, 0, 0, 1815, 1815, 1815, 1815,
	1815, 1815, 1815, 1815, 1815, 0, 0, 1107, 1428, 1430,
	1431, 1432, 1433, 1844, 1845, 2755, 2756, 2757, 2758, 2759,
	2760, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2761, 2762, 2763, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 0,
	0, 0, 1112, 1113, 1114, 1115, 1116, 2749, 2750, 2751,
	2752, 2753, 2754, 1125, 1126, 0, 0, 0, 1184, 0,
	1184, 1144, 1145, 0, 1147, 0, 0, 0, 0, 0,
	0, 0, 1181, 1159, 1162, 1166, 0, 1741, 1741, 1181,
	1172, 0, 790, 791, 792, 1189, 1190, 1178, 1191, 1196,
	1195, 1204, 1204, 0, 1195, 1225, -2, 1225, 1365, 0,
	466, 468, 0, 489, 0, 492, 495, 1434, 0, -2,
	-2, 1855, 1210, 0, 0, 1881, 1882, 0, 0, 0,
	0, 0, 2621, 238, 354, 279, 279, 279, 279, 279,
	279, 279, 0, 279, 279, 0, 279, 279, 279, 2637,
	279, 0, 279, 279, 279, 279, 279, 237, 353, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276, 277, 278, 343, 344,
	345, 0, 0, 0, 742, 1198, 747, 745, 0, 739,
	736, 737, 0, 83, 0, 70, 84, 1764, 1387, 1388,
	1389, 1334, 0, 1338, -2, 0, 1815, 0, 1820, 72,
	1324, 1325, 1326, -2, 0, 0, 1332, 1333, -2, 1484,
	1844, 0, 0, 1238, 0, 0, 1235, 1241, 0, 1748,
	0, 0, 122, 1232, 47, 48, 2765, 62, 0, 0,
	0, 1260, 1315, 0, 1443, 2317, 1449, -2, 2230, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 2175, 0, 0,
	0, 0, 0, 2272, 1522, 1523, 1524, 1525, 1526, 1527,
	2484, 2702, 2703, 1711, 1715, 1716, 1717, 1718, 1719, 1720,
	-2, -2, -2, 1694, 1695, 1709, 0, 2755, 2756, 2758,
	2759, 2760, 1782, 0, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 2298, 2362, 2249, 2367,
	2194, 2761, 2186, 2762, 2263, 2391, 2392, 2763, 2306, 2734,
	0, -2, 2416, 2354, -2, -2, -2, 1590, -2, -2,
	-2, 2745, 2746, 2731, 2736, 2256, 2204, 2314, 2355, 2195,
	2216, 2235, 2284, 2285, 2287, 2319, 2320, 2338, 2347, 2366,
	2176, 2177, 2178, 2279, 2280, 2388, 2387, 2386, 2389, 2422,
	2420, 2423, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2179, 2180, 2181, 2182, 2183, 2185, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2196, 2197, 2198, -2,
	2203, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2214,
	2215, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2231, 2232, 2234, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2250, 2251, 2252, 2253, 2254, 2255, 2257, 2258, 2259, 2260,
	2261, 2262, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2273, 2274, 2275, 2276, 2277, 2278, 2281, 2282, 2283, 2286,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2299, 2300, -2, -2, 2303, 2304, 2305, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2315, 2316, 2318, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2348, 2349, 2350, 2351, 2352, 2353, 2356, 2357, 2358,
	2359, 2360, 2361, 2363, 2364, 2365, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2390, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2417, 2418, 2419, 2421, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 0, 1819,
	1819, 0, 109, 2704, 0, 1789, -2, -2, 1791, 0,
	0, 0, -2, -2, -2, -2, 2187, -2, 1694, 0,
	0, 0, 0, 2175, 2176, 2177, 2178, 2184, 2186, 2194,
	2195, 2199, 2200, 2201, 2202, 2204, 2213, 2216, 2230, 2233,
	2235, 2249, 2256, 2263, 2272, 2279, 2280, 2284, 2285, 2287,
	2298, 2301, 2302, 2306, 2314, 2317, 2319, 2320, 2321, 2338,
	2347, 2354, 2355, 2362, 2366, 2367, 2386, 2387, 2388, 2389,
	2391, 2392, 2403, 2413, 2414, 2415, 2416, 2420, 2422, 2423,
	125, 1733, 0, 127, 0, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 816, 1838, 1839, 0, 1741, 1244,
	1817, 1817, 338, 0, 0, 0, 0, 0, 1817, 333,
	0, 0, 0, 0, 1817, 340, 0, 0, 1087, 0,
	1088, 0, 348, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1131, 1132, 1106, 0, 1108, 101, 1111,
	0, 0, 0, 0, 1129, 1130, 1133, 0, 1175, 1184,
	1135, 0, 0, 1817, 1817, 0, 0, 0, 0, 0,
	1143, 0, 818, 819, 1184, 1149, 1150, 1184, 1184, 1184,
	1181, 0, 1181, 1156, 1179, 1180, 1184, 0, 0, 0,
	1161, 0, 0, 0, 1169, 1170, 1184, 1174, 0, -2,
	1202, -2, 1211, 0, 0, 82, 1226, 1225, 0, 1230,
	1366, 0, 0, 0, 0, 0, 0, 470, 0, 0,
	491, 472, 0, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 1365, 0, 0, 1850,
	1856, 1215, 1872, 1873, 0, 1883, 1884, 283, 0, 283,
	0, 0, 0, 0, 205, 279, 0, 207, 279, 279,
	279, 0, 279, 279, 214, 215, 279, 217, 218, 219,
	279, 221, 222, 279, 224, 225, 226, 279, 279, 229,
	279, 279, 232, 233, 234, 235, 236, 352, 0, 0,
	0, 2621, 1816, 0, 0, 0, 0, 743, 748, 749,
	744, 746, 715, 0, 0, 0, 0, 720, 721, 722,
	723, 0, 0, 726, 727, 732, 732, 0, 68, 69,
	0, 0, 0, 1337, 1335, 0, -2, 941, -2, 691,
	692, 693, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 1393, 0, 0, 0, 0, 0,
	1829, -2, 0, 0, 0, 0, 1322, 0, 1339, 0,
	1341, 0, -2, 0, 0, 0, 1829, 1345, 1346, 1347,
	1348, 1349, 0, 0, 0, 1486, 0, 60, 61, 1239,
	1240, 57, 65, 66, 58, 1236, 1237, 1242, 1243, 59,
	76, 0, 0, 1742, 1745, 1746, 1747, 1734, 1735, 1738,
	0, 0, 76, 1245, 1246, 1247, 1248, 1249, 1250, 0,
	1234, -2, 0, 1261, 0, 0, 0, 0, 1316, 0,
	1319, 1320, 1321, 0, 1447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1450, 0, 1464, 0, 0, 0, 0, 0, 0,
	0, 1515, 1516, 1517, 1518, 1519, 1520, 0, 1712, 1713,
	1714, 1251, 0, 0, 0, 1251, 1251, 1251, 1251, 1251,
	0, 0, 1490, 2429, 2394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1251,
	0, 1686, 0, 0, 1587, 0, 1588, 1589, 1591, 1605,
	0, 1592, 1593, 0, 0, 0, 0, 0, 1486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 1601, 1602, 0, 0, 0,
	0, 0, 0, 101, 103, 1428, 0, 110, 112, 0,
	0, 2704, 1792, 1793, 682, 1807, 1808, 1809, 1810, 0,
	779, 780, 1805, 0, 1741, 0, 833, 0, 563, 661,
	581, 582, 583, 651, 585, 653, 0, 653, 653, 1683,
	1684, 653, 653, 653, 627, 628, 629, 630, 631, 633,
	634, 635, 636, 637, 0, 0, 609, 651, 651, 651,
	613, 640, 641, 642, 643, 644, 653, 646, 647, 648,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 656, 656, 658, 658, 658,
	658, 658, 563, 563, 563, 563, 563, 0, 815, 1042,
	1043, 0, 1748, 122, 0, 0, 0, 0, 340, -2,
	0, -2, 0, 1423, 0, 0, 0, 0, 151, 376,
	356, 136, 0, 0, 334, 339, 335, 336, 337, 0,
	0, 0, 0, 347, 0, 0, 1095, 99, 1096, 1097,
	1098, 1099, 1100, 349, 1101, 1102, 378, 0, 1429, 1846,
	1847, 1848, 1849, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 0, 0, 0, 1117, 1119, 1123, 1124, 1118,
	1120, 1127, 1121, 1128, 1173, 1134, 1185, 0, 1187, 0,
	0, 1365, 1139, 1140, 1141, 1142, 820, 1148, 1151, 1152,
	1158, 1184, 0, 1365, 1157, 1182, 1183, 1160, 1478, 1163,
	1603, 0, 1171, 1192, 1208, 0, 1203, 0, 1209, 1213,
	1212, 0, 1216, 1219, 1220, 1221, 1222, 82, 1218, 0,
	0, 0, 1224, 467, 469, 471, 490, 0, 0, 493,
	494, 496, 0, 1435, 1852, 0, 0, 1875, 0, 1877,
	1879, 0, 0, 284, 285, 286, 283, 0, 239, 0,
	301, 355, 0, 206, 0, 281, 208, 209, 210, 279,
	212, 213, 216, 220, 223, 227, 228, 230, 231, 351,
	283, 0, 0, 283, 0, 0, 0, 741, 760, 0,
	0, 1199, 1200, 0, 716, 717, 718, 719, 734, 725,
	728, 732, 0, 729, 732, 0, 0, 85, 0, 0,
	1766, 1769, 1770, 1771, 1772, 1773, 1774, 1842, 1843, 0,
	940, 694, 695, 696, 0, 777, 777, 777, 687, 361,
	388, 1383, 1385, 0, 1380, 1391, 1392, 1394, 0, 1396,
	0, 0, 1399, 1400, 1401, 1369, 0, 0, 1331, 1483,
	1485, 0, 0, 1437, 1343, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 0, 0, 1360, 0, 0, 0,
	1361, 0, 1487, 1488, 1256, 1257, 0, 0, 45, 0,
	1749, 0, 0, 0, 0, 1737, 1739, 1740, 0, 0,
	1722, 0, 0, 73, 122, 122, 53, 1444, 1445, 1446,
	1448, 1465, 0, 1467, 1469, 1317, 1318, 1262, 0, 1696,
	-2, 1698, 1699, -2, -2, -2, 1455, 1456, 1480, 1481,
	1482, 0, 0, 0, 0, 1478, 1460, 0, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1514, 1618, 1619, 1620, 0, 1707, 0, 1708, 1512, 0,
	0, 0, 1721, 1513, 1702, 1521, 1486, 1252, 1253, 1705,
	1706, 1703, 1704, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 1562, 0, 0, 0, 0, 0, 1496,
	1711, 0, 1496, 1711, 0, 0, 2288, 2401, 2180, 0,
	0, 0, 1692, 1689, 0, 0, 0, 0, 2749, 2750,
	0, 1604, 0, 0, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 0, 0, 0, 1288, 1289,
	1290, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 105, 0, 1427, 0, -2, 0, 0, 97, 98,
	0, 0, 0, 1790, 0, 0, 0, 115, 116, 111,
	1794, 683, 0, -2, 1801, 1711, 1803, 1696, 0, 1748,
	-2, 548, 549, 550, 551, 0, 797, 806, 0, 0,
	795, 0, 797, 797, 0, 793, 794, 554, 664, 662,
	663, 584, 0, 614, 0, 653, 653, 1683, 1684, 616,
	653, 653, 619, 653, 653, 622, 625, 626, 632, 0,
	0, 610, 611, 612, 645, 601, 0, 602, 656, 604,
	0, 605, 606, 607, 608, 555, 556, 557, 558, 559,
	814, 0, 303, 1836, 1764, 0, 0, 131, 1818, 132,
	0, 399, 400, 0, 305, 0, 341, 342, 153, 0,
	0, 357, 0, 142, 0, 543, 544, 0, 1089, 0,
	1091, 346, 1103, 0, 0, 0, 0, 0, 0, 102,
	0, 1186, 1136, 1137, 1138, 1441, 0, 0, 1153, 1181,
	1184, 1176, 0, 0, 1164, 0, 1207, 1205, 1214, 1217,
	1362, 0, 0, 473, 474, 475, 497, 0, 1853, 1854,
	1851, 1874, 0, 1878, 1880, 0, 287, 289, 0, 0,
	195, 0, 0, 280, 0, 211, 0, 0, 0, 0,
	197, 0, 740, 750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1201, 724, 0, 730, 0,
	731, 713, 714, 86, 1765, 0, 0, 1336, 777, 0,
	778, 0, 0, 1050, 943, 944, 945, 1052, 0, -2,
	1048, 1048, 777, 1048, 0, 0, 0, 0, 0, 0,
	982, 777, 1048, 1824, 0, 995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1040, 1041, 777, 777, 777,
	777, 777, 777, 777, 777, 0, 0, 777, 777, 777,
	777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
	777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
	0, 777, 777, 163, 362, 1085, 0, 1377, 1384, 0,
	0, 1378, 0, 1379, 1395, 1397, 1398, 1327, 0, 1369,
	1323, -2, 0, 1373, 1342, 1437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 0, 77, 2497, 0, 80, 0, 1751, 0, 1743,
	1744, 1736, 0, 1811, 1812, 1723, 1724, 1441, 0, 0,
	1254, 1466, 1468, 1470, 0, 1486, 1457, 1478, 1461, 0,
	1458, 0, 1452, 1560, 0, 0, 0, 0, 0, 0,
	1491, 1558, 1559, 1561, 0, 0, 0, 1565, 0, 0,
	1569, 0, 0, 1611, 0, 0, 1612, 1574, 0, 0,
	0, 0, 0, 1580, 1733, 0, 1690, 0, 0, 1583,
	1584, 1585, 1586, 1606, 0, 0, 0, 0, 1607, 1608,
	1609, 1610, 1547, 0, 1548, 0, 0, 0, 0, 0,
	0, 1555, 1556, 1557, 1271, 1271, 1271, 1271, 1271, 1271,
	1271, 1271, 1271, 1271, 1271, 1271, 1599, 0, 0, 1426,
	0, 1441, 0, 1441, 1441, 104, 0, 1436, 113, 114,
	0, 0, 120, 684, 685, 686, 1802, 0, 304, 545,
	834, 687, 911, 777, 777, 777, 0, 777, 777, 777,
	777, 777, 0, 0, 777, 777, 777, 777, 777, 777,
	777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
	777, 0, 777, 777, 777, 777, 777, 777, 0, 777,
	777, 0, 0, 0, 0, 805, -2, -2, 797, 797,
	797, 796, 797, 797, 788, 798, 799, 789, 812, 564,
	565, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 673,
	0, 708, 710, 0, 0, 580, 665, 0, 0, 0,
	615, 653, 623, 617, 618, 620, 621, 0, 649, 0,
	0, 603, 0, 830, 0, 0, 0, 1764, 0, 0,
	401, 402, 403, 1424, 0, 306, 307, 0, 0, 0,
	0, 0, 163, 0, 377, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 1093, 1104, 1105, 1094, 100, 350,
	379, 0, 0, 1122, 1146, 0, 821, 822, 1365, 1155,
	1479, 1165, 1167, 1168, 1363, 1364, 105, 0, 1876, 0,
	0, 0, 0, 0, 0, 299, 282, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 0, 0, 0, 733, 1767, 1768,
	0, 700, 701, 702, 703, 704, 705, 706, 910, 687,
	1051, 0, 0, 0, 0, 1053, 918, 0, 1817, 0,
	0, 952, 953, 0, 1049, 932, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 0, 974, 975, 976, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 1825, 1826, 1827, 994, 0, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 777, 777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1033, 1034, 891, 892, 893, 894, 895, 907, 908,
	909, 896, 897, 898, 0, 0, 1044, 0, 391, 0,
	0, 0, 1381, 0, 1386, 0, 1371, 1328, -2, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1489, 1258, 0, 0, 0, 78,
	674, 1750, 1752, 46, 1725, 74, 75, 122, 1263, 1710,
	0, 1459, 0, 1462, 1528, 1271, 1271, 1271, 1271, 1271,
	0, 651, 651, 651, 1668, 651, 658, 1671, 1673, 1674,
	1675, 651, 1677, 651, 1680, 1682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1687,
	1582, 1693, 0, 0, 0, 0, 0, 1264, 1265, 1267,
	1549, 1550, 1551, 1552, 1553, 1554, 1532, 1272, 1533, 1534,
	1536, 1537, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1775,
	1775, 0, -2, 1758, 0, 1755, 1337, 1762, 1763, 0,
	1441, 1783, 0, 0, 0, 0, 1733, 1441, 95, 96,
	0, 117, 118, 119, 835, 0, 0, 0, 777, 0,
	777, 0, 0, 0, 0, 0, 777, 777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 866, 0, 0, 0, 0,
	0, 0, 877, 878, 0, 0, 0, 0, 800, 651,
	651, 0, 795, 804, 781, 783, 784, 785, 787, 0,
	813, 566, 0, 0, 577, 0, 0, 679, 680, 681,
	666, 0, 0, 669, 670, 0, 1453, 1454, 1603, 1603,
	1603, 1603, 1603, 1603, 0, 0, 0, 0, 1603, 1603,
	1603, 0, 707, 709, 711, 712, 652, 654, 655, 624,
	638, 0, 639, 0, 659, 0, 817, 831, 832, 0,
	1837, 121, 0, 142, 0, 313, 0, 309, 0, 0,
	0, 0, 171, 154, 155, 156, 158, 159, 0, 0,
	0, 152, 0, 359, 0, 364, 365, 366, 0, 0,
	0, 0, 0, 1090, 1092, 0, 0, 1368, 1110, 1442,
	1184, 674, 0, 299, 288, 290, 291, 0, 299, 302,
	196, 0, 0, 0, 0, 0, 0, 197, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 0, 0, 735,
	697, 698, 699, 942, 946, -2, 1048, 0, 0, 924,
	913, 0, 0, 922, 923, 919, 0, 1045, 0, 0,
	797, 795, 1832, 0, 0, -2, 954, 955, 978, 0,
	980, 0, 1055, 0, 0, 0, 0, 960, 961, 962,
	963, 0, 777, 0, 0, 0, 0, 0, 0, 983,
	984, 985, 986, 1045, 0, 0, 990, 0, 0, 0,
	0, 0, 1062, 0, 0, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1039, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 0, 0, 1006, 887, 888, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 884, 885, 886, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 899, 900, 901, 902,
	903, 904, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 0, 1037, 0, 164, 165, 0, 0, 0,
	0, 395, 392, 393, 0, 389, 0, 388, 0, 0,
	0, 1370, 0, 1340, 1374, 1438, 1439, 1440, 1350, 1351,
	0, 1353, 1354, 0, 1356, 1357, 0, 1376, 0, 0,
	81, 1865, 675, 1730, 0, 1255, 1529, 1463, 1531, 1535,
	1530, 1538, 1543, 1563, 1663, 674, 674, 1669, 1670, 1672,
	1676, 1678, 1679, 1681, 1567, 1564, 1566, 1568, 0, 0,
	0, 0, 1575, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 1596, 1597, 1269, 1268, 107, 0, 107, 1775,
	0, 0, 0, 0, 0, -2, -2, -2, 2159, 2123,
	1760, 1777, 0, 0, 1733, 0, 0, 0, 0, 0,
	1741, 94, 836, 837, 838, 0, 777, 0, 841, 842,
	844, 845, 846, 0, 0, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 0, 881, 0, 883, 765, 0, 1738, 1738,
	797, 797, 0, 0, 0, 0, 676, 677, 678, 667,
	668, 0, 672, 650, 0, 0, 0, 123, 121, 141,
	0, 122, 314, 315, 0, 0, 0, 320, 0, 0,
	0, 0, 0, 308, 310, 311, 312, 388, 189, 172,
	173, 0, 0, 0, 0, 0, 160, 161, 162, 358,
	0, 0, 363, 0, 0, 0, 0, 143, 144, 0,
	146, 142, 0, 0, 1154, 1865, 1425, 292, 299, 292,
	0, 197, 197, 0, 197, 198, 204, 762, 763, 926,
	0, 0, 0, 0, 920, 0, 948, 1046, 0, 563,
	563, 1836, 1817, 797, 0, 1077, 0, 979, 981, 956,
	958, 957, 959, 0, 0, 966, 967, 1045, 0, 971,
	0, 1056, 1057, 1058, 1059, 987, 0, 0, 0, 0,
	0, 1060, 1061, 0, 0, 1004, 1005, 1035, 1036, 0,
	905, 166, 167, 168, 169, 170, 1081, 0, 0, 1086,
	390, 1085, 0, 382, 397, 398, 0, 1382, 1372, 0,
	0, 0, 1259, 0, 1867, 1861, 1283, 0, 0, 1664,
	1665, 1666, 1667, 0, 0, 0, 0, 1576, 1577, 1578,
	1613, 1581, 1688, 0, 0, 1733, 0, 87, 122, 0,
	88, 107, 1369, 1756, 0, 0, 1761, 1337, 1779, 0,
	106, 1741, 1784, 1785, 1786, 1787, 1788, 93, 839, 0,
	843, 889, 890, 847, 848, 879, 880, 0, 764, 768,
	0, 777, 0, 777, 777, 775, 776, 801, 802, 803,
	782, 786, 0, 560, 0, 0, 671, 657, 660, 0,
	0, 123, 0, 123, 316, 317, 318, 319, 321, 322,
	0, 0, 0, 391, 135, 0, 0, 174, 0, 0,
	0, 0, 184, 185, 186, 187, 188, 157, 0, 0,
	360, 0, 369, 371, 0, 370, 372, 0, 140, 0,
	1367, 1867, 192, 0, 292, 194, 300, 199, 201, 197,
	200, 1075, 0, 925, 0, 0, 0, 0, 0, 947,
	1047, 552, 553, 0, 797, 0, 1054, 0, 0, 0,
	965, 968, 969, 972, 988, 989, 0, 0, 993, 0,
	0, 0, 1038, 121, 396, 394, 391, 380, 384, 0,
	0, 0, 0, 1403, 0, 2589, 79, 1869, -2, 0,
	71, 0, 1731, 1732, 1726, 1727, 1729, 1570, 1572, 1571,
	1573, 0, 0, 0, 1594, 1595, 1273, 0, 108, 0,
	89, 1754, 1757, 1759, 1778, 1780, 92, 840, 882, 769,
	770, 0, 772, 0, 0, 0, 575, 561, 562, 0,
	578, 0, 121, 51, 0, 0, 0, 82, 323, 324,
	325, 326, 395, 190, 191, 175, 176, 0, 178, 179,
	0, 0, 0, 374, 0, 367, 368, 0, 1109, 1821,
	293, 193, 202, 912, 0, 918, 914, 0, 0, 0,
	0, 0, 1836, 0, 1078, 0, 964, 777, 0, 0,
	992, 0, 1064, 906, 82, 395, 0, 386, 0, 1352,
	1355, 1358, 0, 0, 0, 0, 0, 0, 1868, 1863,
	0, 1860, 0, 1284, 1285, 0, 0, 1579, 0, 0,
	0, 0, 0, 0, 1270, 0, 771, 773, 774, 0,
	560, 766, 147, 0, 0, 121, 404, 121, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 0, 0, 0, 0, 0, 82, 0, 82,
	0, 0, 0, 449, 0, 82, 0, 0, 180, 0,
	182, 183, 373, 0, 145, 1369, 0, 0, 0, 0,
	915, 916, 0, 921, 0, 0, 0, 0, 0, 973,
	991, 1063, 0, 1040, 121, 1082, 0, 381, 0, 382,
	1828, 1404, 1405, 0, 0, 1406, 0, 0, 0, 0,
	1866, 0, 0, 1862, 0, 0, 1728, 1614, 0, 1617,
	1266, 1274, 0, 1277, 0, 0, 0, 1313, 0, 1275,
	1776, 0, 576, 128, 767, 129, 0, 52, 147, 121,
	0, 0, 134, 0, 0, 419, 0, 0, 1838, 0,
	0, -2, -2, -2, 1840, 446, 447, 0, 498, 0,
	0, 0, 463, 464, 0, 450, 0, 465, 327, 0,
	121, 177, 181, 375, 42, 0, 0, 1076, 0, 920,
	917, 766, 0, 766, 0, 970, 1065, 1083, 121, 0,
	382, 385, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 1286, 1287, 1615, 0, 1278, 1279, 1280, 1281, 1282,
	0, 0, 0, 0, 0, 130, 123, 405, 406, 0,
	0, 82, 420, 0, 82, 0, 0, 0, 674, 0,
	82, 82, 82, 82, 0, 82, 82, 0, 451, 82,
	82, 44, 0, 1822, 1823, 294, 295, 296, 298, 0,
	0, 949, 0, 951, 0, 82, 383, 387, 1402, 1410,
	1411, 0, 0, 0, 1418, 0, 0, 1870, 1871, 1864,
	1858, 0, 0, 1314, 0, 148, 0, 0, 82, 0,
	82, 417, 0, 82, 0, 0, 0, 0, 682, 1841,
	0, 499, 328, 0, 0, 0, 0, 0, 0, 0,
	330, 121, 43, 0, 0, 0, 766, 0, 2307, 121,
	1412, 0, 0, 1413, 0, 0, 0, 0, 0, 1407,
	0, 0, 1276, 807, 149, 150, 121, 407, 408, 409,
	410, 411, 412, 82, 0, 415, 0, 82, 0, 82,
	429, 430, 431, 82, 438, 440, 441, 442, 0, 444,
	445, 433, 454, 329, 82, 82, 82, 82, 0, 82,
	448, 452, 137, 297, 929, 0, 950, 1079, 1080, 1084,
	0, 0, 0, 0, 1414, 1415, 1419, 1421, 0, 1408,
	1616, 808, 809, 0, 133, 0, 414, 83, 82, 0,
	-2, 0, 82, 0, 426, 0, 432, 0, 443, 0,
	331, 0, 0, 0, 0, 0, 0, 927, 0, 929,
	0, 0, 0, 0, 1420, 1422, 810, 0, 811, 0,
	0, 0, 82, 0, 418, 422, 0, 0, 82, 427,
	0, 439, 434, 332, 455, 0, 82, 457, 460, 453,
	930, 928, 0, 0, 823, 825, 826, 0, 0, 824,
	413, 416, 82, 424, 0, 82, 456, 0, 0, 1416,
	1417, 827, 828, 829, 0, 82, 0, 458, 461, 423,
	0, -2, 459, 462, 425,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 138, 130, 3,
	77, 79, 135, 133, 78, 134, 188, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 81, 764,
	111, 110, 112, 3, 80, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 106, 107,
	108, 109, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 131, 132,
	137, 139, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 58086, 763, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:619
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:625
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:647
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:659
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			// Allow parenthesized SELECT statements in contexts that disallow INTO
			// Enables INSERT INTO t (SELECT ...) for MySQL compatibility
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:717
		{
			// Handle nested parentheses recursively for CREATE VIEW (dolt#9738)
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:724
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:732
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:743
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:751
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:760
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:764
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:771
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:779
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:803
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:809
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:813
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:823
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 71:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:832
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:846
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:854
		{
			yyVAL.val = TableExprs(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:858
		{
			yyVAL.val = TableExprs(nil)
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:862
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:871
		{
			yyVAL.val = (*Into)(nil)
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:875
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:879
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 79:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:883
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:889
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:893
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:898
		{
			yyVAL.val = (*With)(nil)
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:902
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:908
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:912
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:918
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:930
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:956
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:982
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Returning:  yyDollar[10].val.(SelectExprs),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.val = InsertStr
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1022
		{
			yyVAL.val = ReplaceStr
		}
	case 92:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1028
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1046
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1069
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1082
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1095
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1124
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1149
		{
			yyVAL.val = Partitions(nil)
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1153
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1158
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1162
		{
			yyVAL.val = yyDollar[2].val.(SelectExprs)
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1172
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1179
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1188
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1198
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1220
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1224
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1229
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1239
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1245
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1263
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1268
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 128:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1273
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[8].val.(TableName)
			ddl := &DDL{
				Action:      AlterStr,
				Table:       tableName,
				IfNotExists: yyDollar[4].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      yyDollar[5].val.(ColIdent),
					Using:       yyDollar[6].val.(ColIdent),
					Type:        yyDollar[2].val.(string),
					Columns:     yyDollar[10].val.([]*IndexColumn),
					Options:     yyDollar[12].val.([]*IndexOption),
					ifNotExists: yyDollar[4].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[8].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1302
		{
			viewName := yyDollar[5].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[10].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[6].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[12].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				IfNotExists:               yyDollar[4].val.(int) != 0,
				SpecialCommentMode:        yyDollar[9].val.(bool),
				SubStatementPositionStart: yyDollar[8].val.(int),
				SubStatementPositionEnd:   yyDollar[11].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1323
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1344
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1362
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1380
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1404
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1426
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1458
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1473
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 139:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1507
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1519
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1532
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1546
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1550
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 145:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1568
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1589
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1597
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1601
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1606
		{
			yyVAL.val = []AccountName(nil)
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1610
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1615
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1623
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1633
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1651
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1655
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1660
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1664
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1680
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1688
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1692
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1711
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1725
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1737
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1741
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1745
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1749
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1774
		{
			yyVAL.val = ""
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1778
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 192:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1789
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1805
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1821
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1836
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1848
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1861
		{
			yyVAL.val = false
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1865
		{
			yyVAL.val = true
		}
	case 199:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1871
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1887
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 201:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1902
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 202:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1918
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1934
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 204:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1947
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1978
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1986
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2022
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2034
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2050
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2058
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2066
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2146
		{
			yyVAL.val = []string(nil)
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2160
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2165
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2187
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2195
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2199
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2204
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2212
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2216
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2220
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 297:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2224
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2228
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2233
		{
			yyVAL.val = false
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.val = true
		}
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2242
		{
			yyVAL.val = false
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.val = true
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2253
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2266
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2278
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2315
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2377
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2381
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2385
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2394
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 331:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2398
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 332:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2402
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2413
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2423
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2427
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2436
		{
			yyVAL.val = ""
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2440
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2445
		{
			yyVAL.val = ""
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2449
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2459
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2463
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2473
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2481
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2495
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2501
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2509
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2537
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2545
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2549
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 360:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2553
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2558
		{
			yyVAL.val = &Authentication{}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2562
		{
			yyVAL.val = yyDollar[1].val
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2568
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2572
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2580
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2584
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2588
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2592
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2596
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2600
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2604
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2610
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2614
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2618
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2624
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2628
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2648
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2653
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2657
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2662
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2666
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2671
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2675
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2680
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2684
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2688
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2693
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.val = EventStatus_Enable
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.val = EventStatus_Disable
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2710
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2714
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.val = BeforeStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.val = AfterStr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.val = InsertStr
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.val = UpdateStr
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.val = DeleteStr
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2753
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2757
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2778
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2782
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2788
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2792
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2796
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 418:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2800
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2810
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2816
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2822
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 423:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2827
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2832
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 425:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2838
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2856
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2862
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2866
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2870
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2874
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2878
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2885
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2913
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2945
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2951
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2957
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2962
		{
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2965
		{
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2969
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2979
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 455:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2983
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 456:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2987
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2998
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 458:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3002
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 459:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3006
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3017
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 461:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3021
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 462:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3025
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3036
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3042
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3048
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3054
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3058
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3066
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3072
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3076
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3082
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3086
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3096
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3110
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3122
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3138
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.val = &Resignal{}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3160
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3164
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3172
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3178
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3194
		{
			yyVAL.val = Exprs(nil)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3198
		{
			yyVAL.val = Exprs(nil)
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3202
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3266
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3293
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3323
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3351
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3361
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3372
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3396
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3407
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3429
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3452
		{
			yyVAL.val = BoolVal(false)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3456
		{
			yyVAL.val = BoolVal(false)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3460
		{
			yyVAL.val = BoolVal(true)
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3465
		{
			yyVAL.val = ColumnType{}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3469
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3505
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3516
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3538
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3549
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3560
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3571
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3582
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3593
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3604
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3616
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3627
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3658
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3664
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3668
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3680
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3688
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3700
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3704
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3712
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3716
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3720
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3726
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3733
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3740
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3792
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3810
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3814
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3818
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3822
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3830
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3834
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3842
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3846
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3850
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3854
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3874
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3878
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3882
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3886
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3890
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3894
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3898
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3902
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3907
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3925
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3933
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3945
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3956
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3961
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3965
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3970
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3978
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3983
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3987
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3995
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3999
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4005
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4013
		{
			yyVAL.val = BoolVal(false)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4017
		{
			yyVAL.val = BoolVal(false)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4026
		{
			yyVAL.val = BoolVal(false)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.val = BoolVal(true)
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4040
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4054
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4058
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4062
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4066
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4072
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4078
		{
			yyVAL.val = BoolVal(true)
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = ""
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4093
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4101
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4105
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4109
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4113
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4119
		{
			yyVAL.val = ""
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4129
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4133
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4137
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.val = false
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.val = true
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4151
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4161
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4173
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4187
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4191
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4195
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4199
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4203
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4207
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4213
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4217
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4221
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4227
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4233
		{
			yyVAL.val = colKeyPrimary
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.val = colKey
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.val = colKeyUnique
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4249
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4261
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4265
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4285
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4289
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4293
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4317
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4321
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4333
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4337
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4350
		{
			yyVAL.val = false
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4352
		{
			yyVAL.val = true
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4355
		{
			yyVAL.val = ""
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4357
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4366
		{
			yyVAL.val = ""
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4368
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4372
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4382
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4392
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4410
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4421
		{
			yyVAL.val = false
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.val = true
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4426
		{
			yyVAL.bytes = nil
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4444
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4450
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4454
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4458
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4462
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4466
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4470
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4474
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4478
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4494
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4498
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4504
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4508
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4513
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4527
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4533
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4542
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4546
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4564
		{
			yyVAL.val = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4578
		{
			yyVAL.val = ":="
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4586
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4590
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4594
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4602
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4606
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4615
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4619
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4623
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.val = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4656
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4661
		{
			yyVAL.val = ""
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4679
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4689
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4699
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 807:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4709
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4713
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 809:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4717
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 810:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4721
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 811:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4725
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4730
		{
			yyVAL.bytes = []byte(nil)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4740
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4744
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4748
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4754
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4760
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4764
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4769
		{
			yyVAL.val = ""
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4773
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4777
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4783
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.val = Restrict
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.val = Cascade
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{
			yyVAL.val = NoAction
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4807
		{
			yyVAL.val = SetDefault
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{
			yyVAL.val = SetNull
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4816
		{
			yyVAL.val = true
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.val = true
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4824
		{
			yyVAL.val = false
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4829
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4833
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4843
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4855
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4859
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4867
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4871
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4875
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4883
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4887
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4891
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4899
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4903
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4907
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4911
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4919
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4931
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4935
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4939
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4963
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4971
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4979
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4983
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4987
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4991
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4995
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4999
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5003
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5007
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5011
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5015
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5019
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5023
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5027
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5031
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5037
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5075
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5102
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5112
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5116
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5124
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5134
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5138
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5149
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5159
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5168
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5172
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5179
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5188
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5196
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5206
		{
			yyVAL.val = false
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5210
		{
			yyVAL.val = true
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5215
		{
			yyVAL.val = ""
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5219
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5229
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5234
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5238
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5243
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5247
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 928:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5256
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5267
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5271
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5276
		{
			yyVAL.val = ""
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5280
		{
			yyVAL.val = ""
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5284
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5289
		{
			yyVAL.val = string("")
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5293
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5305
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5319
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5334
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5354
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5367
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5385
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5391
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5409
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 949:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5428
		{
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(yyDollar[4].val.(string)),
					Using:       yyDollar[5].val.(ColIdent),
					Columns:     yyDollar[7].val.([]*IndexColumn),
					Options:     yyDollar[9].val.([]*IndexOption),
					ifNotExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5447
		{
			idxName := yyDollar[6].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[5].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(idxName),
					Type:        yyDollar[3].val.(string),
					Using:       yyDollar[7].val.(ColIdent),
					Columns:     yyDollar[9].val.([]*IndexColumn),
					Options:     yyDollar[11].val.([]*IndexOption),
					ifNotExists: yyDollar[5].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5473
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5495
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5509
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5523
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5541
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5560
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5570
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5580
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5590
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5600
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5610
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5620
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5630
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5640
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5655
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5671
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5681
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5691
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5707
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5721
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5735
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5749
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5763
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5777
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5790
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5803
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5813
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5823
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5835
		{
			yyVAL.val = &DDL{
				Action:   AlterStr,
				IfExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5851
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5865
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5882
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5892
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5912
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5922
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5932
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			if len(ddl.TableSpec.Constraints) > 0 {
				ddl.ConstraintAction = AddStr
			}
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5952
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5965
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5980
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 991:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5994
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6015
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6036
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6055
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6065
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6077
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6081
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6085
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6089
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6093
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6097
		{
			yyVAL.val = &DDL{Action: AlterStr, AlterCommentSpec: &AlterCommentSpec{Comment: string(yyDollar[3].bytes)}}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6101
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6105
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6109
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6113
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6117
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6121
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6125
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6129
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6133
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6137
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6141
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6145
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6149
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6153
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6157
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6161
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6165
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6169
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6173
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6177
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6181
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6185
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6189
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6193
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6197
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6201
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6205
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6209
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6213
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6217
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6221
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6225
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6229
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6233
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6237
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6241
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6245
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6249
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6255
		{
			yyVAL.val = true
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6259
		{
			yyVAL.val = false
		}
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6269
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6295
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6299
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6303
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6308
		{
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6310
		{
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6313
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6317
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6323
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6327
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6333
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6337
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6341
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6345
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6349
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6353
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6357
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6361
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6365
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6369
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6373
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1065:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6377
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6381
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6385
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6398
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6402
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6406
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6410
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6414
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6418
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6422
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6427
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6431
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6437
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6441
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6447
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6451
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1081:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6457
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6487
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6513
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6541
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6571
		{
			yyVAL.val = EventName{}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6575
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6581
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6585
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6597
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6621
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6637
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6641
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6647
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6672
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[6].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				IfExists: yyDollar[3].val.(int) != 0,
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6697
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6715
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6732
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6749
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6769
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6789
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6804
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6819
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6838
		{

		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6842
		{
			yyVAL.val = Restrict
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6846
		{
			yyVAL.val = Cascade
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6852
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6865
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6880
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6886
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6890
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6894
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6907
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6911
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6915
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6919
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6925
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6929
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6936
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6940
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6946
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6950
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6954
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6958
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6964
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6968
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6972
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6976
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6982
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6993
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7004
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7015
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7027
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7039
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7052
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7065
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7076
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7087
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7098
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7109
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7119
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7129
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7142
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7152
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7163
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7173
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7183
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7194
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7206
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7218
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7232
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7245
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7256
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7270
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7282
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7292
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7303
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7316
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7326
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7338
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7349
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7362
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7371
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7382
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7393
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7404
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7415
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7429
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7439
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7449
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7459
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7471
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7477
		{
			yyVAL.val = false
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7481
		{
			yyVAL.val = true
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7487
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7491
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7497
		{
			yyVAL.val = ""
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7501
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7505
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7511
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7515
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7519
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7523
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7529
		{
			yyVAL.val = ""
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7533
		{
			yyVAL.val = SessionStr
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7537
		{
			yyVAL.val = GlobalStr
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7543
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7555
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7568
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7580
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7584
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7590
		{
			yyVAL.val = &Begin{}
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7594
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7600
		{
			yyVAL.val = &Begin{}
		}
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7604
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7608
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7612
		{
			yyVAL.val = &Begin{}
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7617
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7621
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7626
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7630
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7635
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7639
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7645
		{
			yyVAL.val = &Commit{}
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7651
		{
			yyVAL.val = &Rollback{}
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7657
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7663
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7667
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7671
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7675
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7681
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7687
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7691
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7695
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7701
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7709
		{
			yyVAL.val = ""
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7713
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7718
		{
			yyVAL.val = false
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7722
		{
			yyVAL.val = true
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7734
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7754
		{
			setAllowComments(yylex, true)
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7758
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7766
		{
			yyVAL.val = Comments(nil)
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7770
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7776
		{
			yyVAL.val = UnionStr
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7780
		{
			yyVAL.val = UnionAllStr
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7784
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7790
		{
			yyVAL.val = IntersectStr
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7794
		{
			yyVAL.val = IntersectAllStr
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7798
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7804
		{
			yyVAL.val = ExceptStr
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7808
		{
			yyVAL.val = ExceptAllStr
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7812
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7817
		{
			yyVAL.val = QueryOpts{}
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7821
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7832
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7843
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7854
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7865
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7876
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7888
		{
			yyVAL.val = ""
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7892
		{
			yyVAL.val = AllStr
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7896
		{
			yyVAL.val = DistinctStr
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7902
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7910
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7921
		{
			yyVAL.val = &StarExpr{}
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7925
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7929
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7933
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7939
		{
			yyVAL.val = &StarExpr{}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7943
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7947
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7951
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7957
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7961
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7967
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7972
		{
			yyVAL.val = ColIdent{}
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7975
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7980
		{
			yyVAL.val = Exprs(nil)
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7984
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7989
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7993
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7998
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8002
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8006
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8013
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8036
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8051
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8055
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8059
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8063
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8070
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8078
		{
			yyVAL.val = Window(nil)
		}
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8081
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8087
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8090
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8096
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8136
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8140
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8145
		{
			yyVAL.val = ColIdent{}
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8149
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8153
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8157
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8163
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8167
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8171
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8177
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8181
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8191
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8195
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8210
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8225
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8231
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8237
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8245
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8251
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8255
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8260
		{
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8262
		{
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8266
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8276
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8291
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8295
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8299
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8303
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8309
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8313
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8317
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8321
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8325
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8331
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8335
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8339
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8345
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1354:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8349
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8353
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1356:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8357
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8361
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8365
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8371
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8377
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8381
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8387
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8391
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8395
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8400
		{
			yyVAL.val = Expr(nil)
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8404
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8410
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8414
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8419
		{
			yyVAL.val = Columns(nil)
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8423
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8429
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8433
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8439
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8443
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8449
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8453
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8467
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8471
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8475
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8479
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8485
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8487
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8491
		{
			yyVAL.val = JoinCondition{}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8493
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8497
		{
			yyVAL.val = JoinCondition{}
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8499
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8504
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8508
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8514
		{
			yyVAL.val = JoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8518
		{
			yyVAL.val = JoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8522
		{
			yyVAL.val = JoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8528
		{
			yyVAL.val = StraightJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8534
		{
			yyVAL.val = LeftJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8538
		{
			yyVAL.val = LeftJoinStr
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8542
		{
			yyVAL.val = RightJoinStr
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8546
		{
			yyVAL.val = RightJoinStr
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8550
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8554
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8560
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8564
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1402:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8574
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8581
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8586
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8592
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8596
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8600
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1408:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8605
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8612
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8616
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8620
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8624
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8628
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8632
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8636
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1416:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8640
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1417:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8644
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8648
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8654
		{
			yyVAL.val = &NullVal{}
		}
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8658
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8664
		{
			yyVAL.val = &NullVal{}
		}
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8668
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8674
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8678
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8684
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8690
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8694
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8700
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8704
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8708
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8712
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8716
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8720
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8726
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8730
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8736
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8741
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8745
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8749
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1440:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8753
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8758
		{
			yyVAL.val = Expr(nil)
		}
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8762
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8768
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8772
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8776
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8780
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8784
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8788
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8792
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8796
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8802
		{
			yyVAL.val = ""
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8806
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8812
		{
			yyVAL.val = BoolVal(true)
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8816
		{
			yyVAL.val = BoolVal(false)
		}
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8822
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8826
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8830
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8834
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8838
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8842
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8846
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8850
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1463:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8854
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8858
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8864
		{
			yyVAL.val = IsNullStr
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8868
		{
			yyVAL.val = IsNotNullStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8872
		{
			yyVAL.val = IsTrueStr
		}
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8876
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8880
		{
			yyVAL.val = IsFalseStr
		}
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8890
		{
			yyVAL.val = EqualStr
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8894
		{
			yyVAL.val = LessThanStr
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8898
		{
			yyVAL.val = GreaterThanStr
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8902
		{
			yyVAL.val = LessEqualStr
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8906
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8910
		{
			yyVAL.val = NotEqualStr
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8914
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8919
		{
			yyVAL.val = Expr(nil)
		}
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8923
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8929
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8933
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8937
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8943
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8949
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8953
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8958
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8965
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8969
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8975
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8979
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8985
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8989
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8993
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8997
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9001
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9005
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9009
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9013
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9017
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9021
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9025
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9029
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9033
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9037
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9041
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9045
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9049
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9053
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9057
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9061
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9065
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9069
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9073
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9077
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9081
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9085
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9093
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9107
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9111
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9115
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9135
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1529:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9139
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1530:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9149
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9153
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9157
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9161
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9165
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9169
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9173
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9177
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9181
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9185
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9189
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9193
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9197
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9201
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9205
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9209
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9213
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9222
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9226
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9230
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9234
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9238
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9242
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9246
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9250
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9254
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9258
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9262
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9273
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9277
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9281
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9285
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9289
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1563:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9293
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1564:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9297
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9301
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9305
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1567:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9309
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1568:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9313
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9317
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1570:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9321
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1571:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9325
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1572:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9329
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9333
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9337
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9341
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1576:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9345
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1577:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9349
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1578:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9353
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1579:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9357
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9361
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1581:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9365
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9369
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9373
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9377
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9382
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9386
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9397
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9401
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9405
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9410
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9414
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9418
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9422
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9426
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1595:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9430
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1596:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9434
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1597:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9438
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9446
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9450
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9454
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9458
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9462
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9475
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9479
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9489
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9493
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9497
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9501
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9505
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9509
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9515
		{
			yyVAL.val = ""
		}
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9519
		{
			yyVAL.val = BooleanModeStr
		}
	case 1615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9523
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1616:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9527
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9531
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9537
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9541
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9545
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9551
		{
			yyVAL.val = Armscii8Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9555
		{
			yyVAL.val = AsciiStr
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9559
		{
			yyVAL.val = Big5Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9563
		{
			yyVAL.val = UBinaryStr
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9567
		{
			yyVAL.val = Cp1250Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9571
		{
			yyVAL.val = Cp1251Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9575
		{
			yyVAL.val = Cp1256Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9579
		{
			yyVAL.val = Cp1257Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9583
		{
			yyVAL.val = Cp850Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9587
		{
			yyVAL.val = Cp852Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9591
		{
			yyVAL.val = Cp866Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9595
		{
			yyVAL.val = Cp932Str
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9599
		{
			yyVAL.val = Dec8Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9603
		{
			yyVAL.val = EucjpmsStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9607
		{
			yyVAL.val = EuckrStr
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9611
		{
			yyVAL.val = Gb18030Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9615
		{
			yyVAL.val = Gb2312Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9619
		{
			yyVAL.val = GbkStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9623
		{
			yyVAL.val = Geostd8Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9627
		{
			yyVAL.val = GreekStr
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9631
		{
			yyVAL.val = HebrewStr
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9635
		{
			yyVAL.val = Hp8Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9639
		{
			yyVAL.val = Keybcs2Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9643
		{
			yyVAL.val = Koi8rStr
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9647
		{
			yyVAL.val = Koi8uStr
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9651
		{
			yyVAL.val = Latin1Str
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9655
		{
			yyVAL.val = Latin2Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9659
		{
			yyVAL.val = Latin5Str
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9663
		{
			yyVAL.val = Latin7Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9667
		{
			yyVAL.val = MacceStr
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9671
		{
			yyVAL.val = MacromanStr
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9675
		{
			yyVAL.val = SjisStr
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9679
		{
			yyVAL.val = Swe7Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9683
		{
			yyVAL.val = Tis620Str
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9687
		{
			yyVAL.val = Ucs2Str
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9691
		{
			yyVAL.val = UjisStr
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9695
		{
			yyVAL.val = Utf16Str
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9699
		{
			yyVAL.val = Utf16leStr
		}
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9703
		{
			yyVAL.val = Utf32Str
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9707
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9711
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9715
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9721
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9725
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9729
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9733
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9737
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9741
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9745
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9749
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9756
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9760
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9764
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9768
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9772
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9776
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9780
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9784
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9788
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9792
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9796
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9800
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9806
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9810
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9815
		{
			yyVAL.val = Expr(nil)
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9819
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9824
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9828
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9834
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9838
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9844
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9849
		{
			yyVAL.val = Expr(nil)
		}
	case 1693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9853
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9859
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9863
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9867
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9871
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9875
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9879
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9883
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9887
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9891
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9895
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9899
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9903
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9907
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9911
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9919
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9923
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9929
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9933
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9937
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9941
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9945
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9949
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9953
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9957
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9961
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9965
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9969
		{
			yyVAL.val = &NullVal{}
		}
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9975
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9979
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9983
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9988
		{
			yyVAL.val = Exprs(nil)
		}
	case 1726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9992
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9998
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10002
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10008
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10013
		{
			yyVAL.val = Expr(nil)
		}
	case 1731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10017
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10023
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10028
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10032
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10038
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10042
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10048
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10053
		{
			yyVAL.val = AscScr
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10057
		{
			yyVAL.val = AscScr
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10061
		{
			yyVAL.val = DescScr
		}
	case 1741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10066
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10070
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10074
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10078
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10084
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10088
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10092
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10097
		{
			yyVAL.val = ""
		}
	case 1749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10101
		{
			yyVAL.val = ForUpdateStr
		}
	case 1750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10105
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10109
		{
			yyVAL.val = ForUpdateNowaitStr
		}
	case 1752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10113
		{
			yyVAL.val = ShareModeStr
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10119
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10123
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10143
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10147
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10152
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10159
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10163
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10170
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10174
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10183
		{
			yyVAL.val = Columns(nil)
		}
	case 1765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10187
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10193
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10197
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10203
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10207
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10211
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10215
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10219
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10223
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10227
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10232
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10236
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10242
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10246
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10252
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10256
		{
			yyVAL.val = ValTuple{}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10262
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10268
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10278
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10282
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10288
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10291
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10295
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10299
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10305
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10309
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10315
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10326
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10339
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10352
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10358
		{
			yyVAL.val = SetScope_Global
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10362
		{
			yyVAL.val = SetScope_Session
		}
	case 1797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10368
		{
			yyVAL.val = SetScope_Session
		}
	case 1798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10372
		{
			yyVAL.val = SetScope_Persist
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10376
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10382
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10386
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10390
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10400
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10407
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10414
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10418
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10422
		{
			yyVAL.val = &Default{}
		}
	case 1810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10426
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10435
		{
			yyVAL.val = 0
		}
	case 1814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10437
		{
			yyVAL.val = 1
		}
	case 1815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10440
		{
			yyVAL.val = 0
		}
	case 1816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10442
		{
			yyVAL.val = 1
		}
	case 1817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10445
		{
			yyVAL.val = 0
		}
	case 1818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = 1
		}
	case 1819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10450
		{
			yyVAL.val = ""
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10452
		{
			yyVAL.val = IgnoreStr
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10455
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10457
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10459
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10462
		{
			yyVAL.val = struct{}{}
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10464
		{
			yyVAL.val = struct{}{}
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10468
		{
			yyVAL.val = struct{}{}
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10470
		{
			yyVAL.val = struct{}{}
		}
	case 1828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10473
		{
			yyVAL.val = struct{}{}
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10475
		{
			yyVAL.val = struct{}{}
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10479
		{
			yyVAL.val = UniqueStr
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10481
		{
			yyVAL.val = FulltextStr
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10483
		{
			yyVAL.val = SpatialStr
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10485
		{
			yyVAL.val = VectorStr
		}
	case 1834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10488
		{
			yyVAL.val = ""
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10490
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10493
		{
			yyVAL.val = ColIdent{}
		}
	case 1837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10495
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10499
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10503
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10509
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10513
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10520
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10526
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10530
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10537
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10541
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10545
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10550
		{
			yyVAL.val = string("")
		}
	case 1851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10552
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10555
		{
			yyVAL.val = string("")
		}
	case 1853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10557
		{
			yyVAL.val = IgnoreStr
		}
	case 1854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10559
		{
			yyVAL.val = ReplaceStr
		}
	case 1855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10562
		{
			yyVAL.val = BoolVal(false)
		}
	case 1856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10564
		{
			yyVAL.val = BoolVal(true)
		}
	case 1857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10567
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10571
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10576
		{
			yyVAL.val = BoolVal(false)
		}
	case 1860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10580
		{
			yyVAL.val = BoolVal(true)
		}
	case 1861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10585
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10589
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10594
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10598
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10606
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1866:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10610
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10615
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10619
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10624
		{
			yyVAL.val = &Lines{}
		}
	case 1870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10628
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10637
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10648
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10654
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10658
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10664
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10679
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10697
		{
			yyVAL.val = LockRead
		}
	case 1878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10701
		{
			yyVAL.val = LockReadLocal
		}
	case 1879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10705
		{
			yyVAL.val = LockWrite
		}
	case 1880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10709
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10715
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10721
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10732
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10742
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11673
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11682
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
