// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const AND = 57427
const NOT = 57428
const BETWEEN = 57429
const CASE = 57430
const WHEN = 57431
const THEN = 57432
const ELSE = 57433
const ELSEIF = 57434
const END = 57435
const LE = 57436
const GE = 57437
const NE = 57438
const NULL_SAFE_EQUAL = 57439
const IS = 57440
const LIKE = 57441
const REGEXP = 57442
const IN = 57443
const UNBOUNDED = 57444
const PARTITION = 57445
const RANGE = 57446
const ROWS = 57447
const GROUPS = 57448
const PRECEDING = 57449
const FOLLOWING = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_ARMSCII8 = 57458
const UNDERSCORE_ASCII = 57459
const UNDERSCORE_BIG5 = 57460
const UNDERSCORE_BINARY = 57461
const UNDERSCORE_CP1250 = 57462
const UNDERSCORE_CP1251 = 57463
const UNDERSCORE_CP1256 = 57464
const UNDERSCORE_CP1257 = 57465
const UNDERSCORE_CP850 = 57466
const UNDERSCORE_CP852 = 57467
const UNDERSCORE_CP866 = 57468
const UNDERSCORE_CP932 = 57469
const UNDERSCORE_DEC8 = 57470
const UNDERSCORE_EUCJPMS = 57471
const UNDERSCORE_EUCKR = 57472
const UNDERSCORE_GB18030 = 57473
const UNDERSCORE_GB2312 = 57474
const UNDERSCORE_GBK = 57475
const UNDERSCORE_GEOSTD8 = 57476
const UNDERSCORE_GREEK = 57477
const UNDERSCORE_HEBREW = 57478
const UNDERSCORE_HP8 = 57479
const UNDERSCORE_KEYBCS2 = 57480
const UNDERSCORE_KOI8R = 57481
const UNDERSCORE_KOI8U = 57482
const UNDERSCORE_LATIN1 = 57483
const UNDERSCORE_LATIN2 = 57484
const UNDERSCORE_LATIN5 = 57485
const UNDERSCORE_LATIN7 = 57486
const UNDERSCORE_MACCE = 57487
const UNDERSCORE_MACROMAN = 57488
const UNDERSCORE_SJIS = 57489
const UNDERSCORE_SWE7 = 57490
const UNDERSCORE_TIS620 = 57491
const UNDERSCORE_UCS2 = 57492
const UNDERSCORE_UJIS = 57493
const UNDERSCORE_UTF16 = 57494
const UNDERSCORE_UTF16LE = 57495
const UNDERSCORE_UTF32 = 57496
const UNDERSCORE_UTF8 = 57497
const UNDERSCORE_UTF8MB3 = 57498
const UNDERSCORE_UTF8MB4 = 57499
const INTERVAL = 57500
const JSON_EXTRACT_OP = 57501
const JSON_UNQUOTE_EXTRACT_OP = 57502
const CREATE = 57503
const ALTER = 57504
const DROP = 57505
const RENAME = 57506
const ANALYZE = 57507
const ADD = 57508
const MODIFY = 57509
const CHANGE = 57510
const SCHEMA = 57511
const TABLE = 57512
const INDEX = 57513
const INDEXES = 57514
const VIEW = 57515
const TO = 57516
const IGNORE = 57517
const IF = 57518
const PRIMARY = 57519
const COLUMN = 57520
const SPATIAL = 57521
const FULLTEXT = 57522
const KEY_BLOCK_SIZE = 57523
const CHECK = 57524
const ACTION = 57525
const CASCADE = 57526
const CONSTRAINT = 57527
const FOREIGN = 57528
const NO = 57529
const REFERENCES = 57530
const RESTRICT = 57531
const FIRST = 57532
const AFTER = 57533
const SHOW = 57534
const DESCRIBE = 57535
const EXPLAIN = 57536
const DATE = 57537
const ESCAPE = 57538
const REPAIR = 57539
const OPTIMIZE = 57540
const TRUNCATE = 57541
const FORMAT = 57542
const MAXVALUE = 57543
const REORGANIZE = 57544
const LESS = 57545
const THAN = 57546
const PROCEDURE = 57547
const TRIGGER = 57548
const TRIGGERS = 57549
const FUNCTION = 57550
const STATUS = 57551
const VARIABLES = 57552
const WARNINGS = 57553
const ERRORS = 57554
const KILL = 57555
const CONNECTION = 57556
const SEQUENCE = 57557
const ENABLE = 57558
const DISABLE = 57559
const EACH = 57560
const ROW = 57561
const BEFORE = 57562
const FOLLOWS = 57563
const PRECEDES = 57564
const DEFINER = 57565
const INVOKER = 57566
const INOUT = 57567
const OUT = 57568
const DETERMINISTIC = 57569
const CONTAINS = 57570
const READS = 57571
const MODIFIES = 57572
const SQL = 57573
const SECURITY = 57574
const TEMPORARY = 57575
const ALGORITHM = 57576
const MERGE = 57577
const TEMPTABLE = 57578
const UNDEFINED = 57579
const CLASS_ORIGIN = 57580
const SUBCLASS_ORIGIN = 57581
const MESSAGE_TEXT = 57582
const MYSQL_ERRNO = 57583
const CONSTRAINT_CATALOG = 57584
const CONSTRAINT_SCHEMA = 57585
const CONSTRAINT_NAME = 57586
const CATALOG_NAME = 57587
const SCHEMA_NAME = 57588
const TABLE_NAME = 57589
const COLUMN_NAME = 57590
const CURSOR_NAME = 57591
const SIGNAL = 57592
const RESIGNAL = 57593
const SQLSTATE = 57594
const DECLARE = 57595
const CONDITION = 57596
const CURSOR = 57597
const CONTINUE = 57598
const EXIT = 57599
const UNDO = 57600
const HANDLER = 57601
const FOUND = 57602
const SQLWARNING = 57603
const SQLEXCEPTION = 57604
const USER = 57605
const IDENTIFIED = 57606
const ROLE = 57607
const REUSE = 57608
const GRANT = 57609
const GRANTS = 57610
const REVOKE = 57611
const NONE = 57612
const ATTRIBUTE = 57613
const RANDOM = 57614
const PASSWORD = 57615
const INITIAL = 57616
const AUTHENTICATION = 57617
const SSL = 57618
const X509 = 57619
const CIPHER = 57620
const ISSUER = 57621
const SUBJECT = 57622
const ACCOUNT = 57623
const EXPIRE = 57624
const NEVER = 57625
const DAY = 57626
const OPTION = 57627
const OPTIONAL = 57628
const EXCEPT = 57629
const ADMIN = 57630
const PRIVILEGES = 57631
const MAX_QUERIES_PER_HOUR = 57632
const MAX_UPDATES_PER_HOUR = 57633
const MAX_CONNECTIONS_PER_HOUR = 57634
const MAX_USER_CONNECTIONS = 57635
const FLUSH = 57636
const FAILED_LOGIN_ATTEMPTS = 57637
const PASSWORD_LOCK_TIME = 57638
const REQUIRE = 57639
const PROXY = 57640
const ROUTINE = 57641
const TABLESPACE = 57642
const CLIENT = 57643
const SLAVE = 57644
const EVENT = 57645
const EXECUTE = 57646
const FILE = 57647
const RELOAD = 57648
const REPLICATION = 57649
const SHUTDOWN = 57650
const SUPER = 57651
const USAGE = 57652
const LOGS = 57653
const ENGINE = 57654
const ERROR = 57655
const GENERAL = 57656
const HOSTS = 57657
const OPTIMIZER_COSTS = 57658
const RELAY = 57659
const SLOW = 57660
const USER_RESOURCES = 57661
const NO_WRITE_TO_BINLOG = 57662
const CHANNEL = 57663
const BEGIN = 57664
const START = 57665
const TRANSACTION = 57666
const COMMIT = 57667
const ROLLBACK = 57668
const SAVEPOINT = 57669
const WORK = 57670
const RELEASE = 57671
const BIT = 57672
const TINYINT = 57673
const SMALLINT = 57674
const MEDIUMINT = 57675
const INT = 57676
const INTEGER = 57677
const BIGINT = 57678
const INTNUM = 57679
const SERIAL = 57680
const REAL = 57681
const DOUBLE = 57682
const FLOAT_TYPE = 57683
const DECIMAL = 57684
const NUMERIC = 57685
const DEC = 57686
const FIXED = 57687
const PRECISION = 57688
const TIME = 57689
const TIMESTAMP = 57690
const DATETIME = 57691
const YEAR = 57692
const CHAR = 57693
const VARCHAR = 57694
const BOOL = 57695
const CHARACTER = 57696
const VARBINARY = 57697
const NCHAR = 57698
const NVARCHAR = 57699
const NATIONAL = 57700
const VARYING = 57701
const TEXT = 57702
const TINYTEXT = 57703
const MEDIUMTEXT = 57704
const LONGTEXT = 57705
const LONG = 57706
const BLOB = 57707
const TINYBLOB = 57708
const MEDIUMBLOB = 57709
const LONGBLOB = 57710
const JSON = 57711
const ENUM = 57712
const GEOMETRY = 57713
const POINT = 57714
const LINESTRING = 57715
const POLYGON = 57716
const GEOMETRYCOLLECTION = 57717
const MULTIPOINT = 57718
const MULTILINESTRING = 57719
const MULTIPOLYGON = 57720
const LOCAL = 57721
const LOW_PRIORITY = 57722
const NULLX = 57723
const AUTO_INCREMENT = 57724
const APPROXNUM = 57725
const SIGNED = 57726
const UNSIGNED = 57727
const ZEROFILL = 57728
const COLLATION = 57729
const DATABASES = 57730
const SCHEMAS = 57731
const TABLES = 57732
const FULL = 57733
const PROCESSLIST = 57734
const COLUMNS = 57735
const FIELDS = 57736
const ENGINES = 57737
const PLUGINS = 57738
const NAMES = 57739
const CHARSET = 57740
const GLOBAL = 57741
const SESSION = 57742
const ISOLATION = 57743
const LEVEL = 57744
const READ = 57745
const WRITE = 57746
const ONLY = 57747
const REPEATABLE = 57748
const COMMITTED = 57749
const UNCOMMITTED = 57750
const SERIALIZABLE = 57751
const ENCRYPTION = 57752
const CURRENT_TIMESTAMP = 57753
const DATABASE = 57754
const CURRENT_DATE = 57755
const CURRENT_USER = 57756
const CURRENT_TIME = 57757
const LOCALTIME = 57758
const LOCALTIMESTAMP = 57759
const UTC_DATE = 57760
const UTC_TIME = 57761
const UTC_TIMESTAMP = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const TRIM = 57768
const LEADING = 57769
const TRAILING = 57770
const BOTH = 57771
const GROUP_CONCAT = 57772
const SEPARATOR = 57773
const TIMESTAMPADD = 57774
const TIMESTAMPDIFF = 57775
const OVER = 57776
const WINDOW = 57777
const GROUPING = 57778
const CURRENT = 57779
const AVG = 57780
const BIT_AND = 57781
const BIT_OR = 57782
const BIT_XOR = 57783
const COUNT = 57784
const JSON_ARRAYAGG = 57785
const JSON_OBJECTAGG = 57786
const MAX = 57787
const MIN = 57788
const STDDEV_POP = 57789
const STDDEV = 57790
const STD = 57791
const STDDEV_SAMP = 57792
const SUM = 57793
const VAR_POP = 57794
const VARIANCE = 57795
const VAR_SAMP = 57796
const CUME_DIST = 57797
const DENSE_RANK = 57798
const FIRST_VALUE = 57799
const LAG = 57800
const LAST_VALUE = 57801
const LEAD = 57802
const NTH_VALUE = 57803
const NTILE = 57804
const ROW_NUMBER = 57805
const PERCENT_RANK = 57806
const RANK = 57807
const MATCH = 57808
const AGAINST = 57809
const BOOLEAN = 57810
const LANGUAGE = 57811
const WITH = 57812
const QUERY = 57813
const EXPANSION = 57814
const UNUSED = 57815
const ARRAY = 57816
const DESCRIPTION = 57817
const EMPTY = 57818
const JSON_TABLE = 57819
const LATERAL = 57820
const MEMBER = 57821
const RECURSIVE = 57822
const ACTIVE = 57823
const BUCKETS = 57824
const CLONE = 57825
const COMPONENT = 57826
const DEFINITION = 57827
const ENFORCED = 57828
const EXCLUDE = 57829
const GEOMCOLLECTION = 57830
const GET_MASTER_PUBLIC_KEY = 57831
const HISTOGRAM = 57832
const HISTORY = 57833
const INACTIVE = 57834
const INVISIBLE = 57835
const LOCKED = 57836
const MASTER_COMPRESSION_ALGORITHMS = 57837
const MASTER_PUBLIC_KEY_PATH = 57838
const MASTER_TLS_CIPHERSUITES = 57839
const MASTER_ZSTD_COMPRESSION_LEVEL = 57840
const NESTED = 57841
const NETWORK_NAMESPACE = 57842
const NOWAIT = 57843
const NULLS = 57844
const OJ = 57845
const OLD = 57846
const ORDINALITY = 57847
const ORGANIZATION = 57848
const OTHERS = 57849
const PATH = 57850
const PERSIST = 57851
const PERSIST_ONLY = 57852
const PRIVILEGE_CHECKS_USER = 57853
const PROCESS = 57854
const REFERENCE = 57855
const REQUIRE_ROW_FORMAT = 57856
const RESOURCE = 57857
const RESPECT = 57858
const RESTART = 57859
const RETAIN = 57860
const SECONDARY = 57861
const SECONDARY_ENGINE = 57862
const SECONDARY_LOAD = 57863
const SECONDARY_UNLOAD = 57864
const SKIP = 57865
const SRID = 57866
const THREAD_PRIORITY = 57867
const TIES = 57868
const VCPU = 57869
const VISIBLE = 57870
const SYSTEM = 57871
const INFILE = 57872
const GENERATED = 57873
const ALWAYS = 57874
const STORED = 57875
const VIRTUAL = 57876
const NVAR = 57877
const PASSWORD_LOCK = 57878

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 58,
	-2, 1130,
	-1, 43,
	188, 1194,
	189, 1212,
	-2, 245,
	-1, 49,
	227, 718,
	228, 718,
	-2, 707,
	-1, 559,
	176, 1222,
	-2, 1216,
	-1, 560,
	176, 1223,
	-2, 1217,
	-1, 705,
	99, 1510,
	176, 1510,
	-2, 1178,
	-1, 706,
	99, 1629,
	176, 1629,
	-2, 1179,
	-1, 711,
	99, 1534,
	176, 1534,
	-2, 1180,
	-1, 712,
	99, 1582,
	176, 1582,
	-2, 1181,
	-1, 713,
	99, 1583,
	176, 1583,
	-2, 1182,
	-1, 714,
	99, 1455,
	176, 1455,
	-2, 1186,
	-1, 716,
	99, 1559,
	176, 1559,
	-2, 1188,
	-1, 1237,
	1, 815,
	5, 815,
	12, 815,
	13, 815,
	14, 815,
	15, 815,
	17, 815,
	19, 815,
	29, 815,
	30, 815,
	56, 815,
	57, 815,
	58, 815,
	59, 815,
	60, 815,
	62, 815,
	63, 815,
	66, 815,
	67, 815,
	69, 815,
	70, 815,
	87, 815,
	453, 815,
	555, 815,
	-2, 847,
	-1, 1243,
	67, 75,
	69, 75,
	-2, 79,
	-1, 1339,
	1, 497,
	555, 497,
	-2, 495,
	-1, 1341,
	1, 497,
	555, 497,
	-2, 495,
	-1, 1503,
	176, 1225,
	-2, 1221,
	-1, 1669,
	44, 563,
	-2, 1467,
	-1, 1673,
	68, 561,
	72, 561,
	-2, 1504,
	-1, 1674,
	68, 563,
	-2, 1413,
	-1, 1677,
	68, 559,
	72, 559,
	-2, 1330,
	-1, 1678,
	68, 560,
	72, 560,
	-2, 1340,
	-1, 1725,
	1, 498,
	555, 498,
	-2, 495,
	-1, 1809,
	44, 606,
	195, 608,
	197, 606,
	198, 606,
	-2, 643,
	-1, 1889,
	5, 59,
	-2, 917,
	-1, 2204,
	69, 1387,
	70, 1387,
	176, 1387,
	-2, 749,
	-1, 2227,
	1, 872,
	5, 872,
	12, 872,
	13, 872,
	14, 872,
	15, 872,
	17, 872,
	19, 872,
	29, 872,
	30, 872,
	56, 872,
	57, 872,
	58, 872,
	59, 872,
	60, 872,
	62, 872,
	63, 872,
	66, 872,
	67, 872,
	69, 872,
	70, 872,
	87, 872,
	453, 872,
	555, 872,
	-2, 847,
	-1, 2337,
	195, 609,
	-2, 607,
	-1, 2398,
	5, 59,
	-2, 1150,
	-1, 2613,
	41, 1232,
	-2, 1230,
	-1, 2712,
	5, 59,
	-2, 1153,
}

const yyPrivate = 57344

const yyLast = 38966

var yyAct = [...]int{
	625, 80, 2937, 2894, 2911, 2944, 930, 2810, 2032, 2893,
	2721, 3, 2146, 2784, 430, 2724, 7, 2913, 2845, 2809,
	2864, 2778, 2723, 6, 2722, 5, 2281, 2698, 2725, 8,
	2555, 2782, 560, 1191, 2830, 2410, 562, 1274, 2241, 1661,
	2658, 2700, 2613, 2221, 1924, 2129, 2716, 1192, 1954, 2825,
	1720, 2197, 2115, 1975, 1621, 551, 2497, 2298, 2473, 83,
	1679, 1627, 2615, 1744, 565, 2467, 2451, 2242, 1481, 1625,
	730, 544, 2717, 455, 455, 413, 416, 624, 1670, 2198,
	129, 80, 461, 129, 1981, 728, 567, 2048, 2128, 129,
	577, 543, 476, 963, 2321, 1711, 2331, 1660, 1925, 458,
	458, 2194, 106, 1474, 1374, 93, 1659, 2206, 1808, 2213,
	1838, 1472, 129, 2168, 542, 1528, 1376, 725, 986, 1771,
	1537, 1666, 1489, 129, 1422, 2093, 1350, 129, 733, 1604,
	2023, 1240, 1728, 1600, 1727, 726, 1091, 1982, 1373, 1394,
	707, 1726, 1707, 1611, 1594, 1505, 1254, 129, 458, 1234,
	733, 1098, 1233, 1015, 1237, 994, 710, 2139, 129, 1724,
	1094, 724, 547, 1253, 699, 475, 703, 704, 1208, 569,
	1427, 1345, 1111, 946, 432, 433, 993, 1342, 918, 126,
	913, 696, 1245, 1209, 102, 1102, 98, 2976, 412, 2972,
	2967, 85, 1788, 1995, 2952, 2950, 2932, 2906, 1997, 2853,
	82, 2660, 2659, 2255, 1420, 1649, 2438, 2923, 2592, 2279,
	2793, 2892, 2710, 425, 2002, 2001, 2452, 2869, 1757, 2770,
	929, 1757, 698, 2295, 2590, 2454, 722, 2792, 1695, 87,
	88, 89, 90, 91, 2709, 2605, 1998, 2189, 2678, 2593,
	36, 2060, 36, 2826, 1539, 1860, 927, 36, 473, 2392,
	912, 2004, 69, 1988, 2039, 1423, 36, 941, 1787, 2645,
	1989, 2788, 448, 1025, 442, 453, 436, 1126, 1125, 1135,
	1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127, 1919,
	2236, 1137, 915, 2540, 920, 921, 443, 36, 1623, 72,
	39, 40, 923, 2237, 2238, 1084, 2785, 1920, 1645, 120,
	116, 117, 81, 118, 81, 1646, 1647, 966, 680, 81,
	686, 688, 687, 684, 685, 683, 682, 681, 81, 1426,
	72, 39, 40, 950, 951, 1963, 2006, 954, 1962, 2430,
	2431, 1964, 553, 1468, 1469, 122, 121, 1255, 1443, 1256,
	2457, 41, 1424, 1425, 967, 968, 720, 1043, 424, 81,
	2788, 423, 1816, 1810, 1811, 1681, 1809, 1812, 1813, 952,
	953, 2789, 1786, 465, 1012, 2000, 2526, 2783, 2003, 1701,
	427, 1696, 1051, 1687, 1689, 1696, 1688, 2379, 1406, 2377,
	2455, 2456, 2458, 2459, 2460, 2785, 407, 1683, 1683, 976,
	422, 472, 1819, 123, 2090, 124, 1464, 1463, 973, 1462,
	1461, 1460, 1708, 1459, 1047, 1048, 1818, 1817, 2468, 1027,
	80, 80, 129, 2055, 1058, 2082, 2471, 1059, 2884, 2618,
	980, 543, 466, 2320, 2087, 981, 2474, 2475, 2476, 2477,
	2469, 2470, 983, 2591, 982, 435, 434, 437, 2305, 2059,
	1799, 2812, 2811, 2493, 984, 441, 2760, 2682, 2680, 2758,
	2789, 2296, 2609, 2485, 1800, 1745, 129, 2299, 2300, 2301,
	2302, 2303, 445, 2308, 1454, 2818, 449, 2057, 114, 1080,
	974, 975, 2299, 2300, 2301, 2302, 2303, 1088, 2483, 2941,
	452, 2672, 2850, 2848, 2849, 2585, 2587, 1348, 108, 2584,
	964, 2583, 965, 967, 968, 2037, 1357, 1358, 1356, 113,
	2582, 2581, 2579, 417, 2169, 917, 916, 129, 919, 2580,
	108, 943, 2668, 2669, 1739, 1740, 1027, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 2797,
	2798, 919, 2835, 2719, 2412, 1735, 414, 1945, 2908, 2038,
	408, 2664, 119, 2073, 2074, 2917, 418, 2962, 2912, 960,
	961, 2040, 962, 2887, 959, 1016, 958, 2862, 2657, 1146,
	2245, 115, 1148, 2915, 1734, 1273, 949, 2498, 2499, 2101,
	1999, 1273, 1815, 1273, 2336, 2101, 1272, 438, 439, 440,
	446, 1433, 450, 451, 454, 2171, 1114, 1050, 2948, 2099,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 2453, 2278, 1190, 1428, 1194, 426, 2674, 1246,
	1426, 110, 1027, 2556, 1273, 2977, 543, 2322, 2646, 1980,
	1793, 2786, 2058, 2112, 1980, 2974, 2968, 2558, 1147, 1630,
	1632, 1407, 2902, 1424, 1425, 1060, 2953, 2708, 1026, 1077,
	1430, 914, 977, 1429, 2679, 1980, 1696, 110, 2608, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 2307,
	1207, 1210, 1210, 1210, 1216, 1210, 1210, 1216, 1210, 1216,
	1225, 1226, 1227, 1228, 2588, 1238, 2013, 1686, 1710, 1028,
	1035, 1036, 1038, 1039, 1040, 1041, 1042, 2606, 1044, 1045,
	1046, 99, 1049, 2061, 1052, 1053, 1054, 1055, 1056, 1996,
	73, 1079, 79, 1086, 79, 2759, 129, 129, 129, 79,
	2786, 1037, 2173, 415, 415, 410, 932, 2177, 79, 2172,
	2684, 2170, 733, 415, 415, 2508, 2175, 471, 2509, 1232,
	1023, 73, 2914, 2916, 2673, 1034, 1980, 2081, 1723, 2174,
	2078, 2946, 1754, 2063, 2947, 2557, 2945, 1753, 710, 79,
	411, 2062, 1794, 710, 2176, 2178, 1362, 1980, 1631, 911,
	1267, 1241, 1360, 1979, 112, 111, 444, 978, 1979, 2107,
	2099, 1099, 1952, 1065, 2104, 2099, 1951, 2103, 2106, 1273,
	1950, 1118, 2100, 2101, 1985, 910, 2076, 1083, 2512, 1979,
	101, 1898, 2111, 1333, 922, 1032, 2108, 379, 1149, 1150,
	112, 111, 2362, 2354, 2080, 1231, 2079, 1243, 1967, 1126,
	1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1127, 1895, 1271, 1137, 1258, 1033, 1959, 1029, 1855, 1259,
	1211, 1213, 1215, 1217, 1219, 1221, 1222, 1224, 1843, 1824,
	1738, 1736, 1484, 1266, 108, 1212, 1214, 1251, 1218, 1220,
	1193, 1223, 1117, 1022, 109, 113, 942, 1244, 2677, 2573,
	1249, 1030, 1031, 1650, 1127, 2445, 2443, 1137, 1075, 1125,
	1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127,
	1979, 2268, 1137, 1137, 103, 2316, 104, 1130, 1131, 1132,
	1133, 1134, 1127, 1268, 2507, 1137, 1641, 1404, 2836, 2837,
	96, 1979, 2699, 1206, 2833, 2834, 1772, 2595, 455, 2705,
	2704, 2522, 2120, 1512, 1605, 1395, 1352, 1763, 956, 2574,
	1477, 1109, 1108, 733, 129, 2446, 2444, 455, 1510, 1511,
	1509, 948, 1108, 458, 458, 1375, 969, 458, 563, 1110,
	2513, 2269, 2596, 1110, 129, 95, 2116, 129, 1071, 1110,
	2211, 2210, 458, 458, 1415, 129, 1264, 1149, 1150, 2956,
	2938, 2955, 1109, 1108, 129, 129, 129, 129, 129, 2970,
	1070, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1076, 2846,
	1110, 2873, 985, 2872, 94, 458, 925, 1149, 1150, 924,
	2191, 1595, 2966, 1378, 1135, 1136, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1127, 2903, 1351, 1137, 1340, 2514, 1355,
	455, 931, 1595, 1396, 1910, 1764, 957, 470, 478, 2867,
	1893, 2484, 1892, 1336, 1482, 1483, 947, 557, 2478, 2357,
	1782, 971, 1475, 100, 2963, 458, 458, 458, 1418, 2253,
	733, 1109, 1108, 698, 1452, 81, 1368, 1475, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1127, 1508, 1402, 1137, 1110,
	1105, 80, 2763, 1385, 1386, 1387, 1388, 1389, 2755, 1095,
	458, 543, 1096, 1109, 1108, 458, 458, 1338, 2713, 1337,
	2905, 2855, 1354, 1353, 1398, 2603, 1399, 1109, 1108, 2964,
	1372, 1110, 2602, 1364, 1466, 1371, 129, 1381, 129, 1379,
	2756, 733, 2601, 1090, 2600, 1110, 693, 694, 1473, 1436,
	1383, 1384, 1390, 1391, 1392, 1393, 2594, 1894, 2437, 129,
	1109, 1108, 1109, 1108, 2436, 1114, 1597, 2847, 2846, 80,
	934, 935, 936, 937, 938, 939, 940, 1502, 1110, 543,
	1110, 1434, 1840, 1841, 1842, 1410, 1411, 2757, 1458, 1413,
	1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1127, 1109, 1108, 1137, 1416, 1532, 1533, 1503, 2193,
	733, 1431, 2028, 1382, 2029, 1194, 1432, 2675, 1506, 1435,
	1110, 1457, 1109, 1108, 1529, 543, 1530, 1507, 2026, 402,
	2007, 1018, 1109, 1108, 1400, 1467, 2854, 733, 733, 1017,
	1110, 1486, 2815, 2138, 1495, 1497, 1498, 2813, 1575, 1453,
	1110, 1496, 1456, 1965, 1501, 1966, 991, 2769, 1491, 1624,
	1465, 2671, 2670, 1633, 2676, 1487, 1238, 2656, 1488, 543,
	1238, 1470, 2610, 2578, 2536, 1193, 2481, 2480, 2479, 990,
	2447, 2434, 2327, 129, 2261, 1581, 1584, 2125, 2124, 2024,
	1783, 129, 1596, 129, 1758, 1412, 2843, 2842, 129, 129,
	2681, 2654, 129, 129, 129, 1499, 2627, 1547, 1985, 2621,
	1437, 2505, 1552, 1440, 1441, 1442, 2365, 1444, 1445, 2350,
	1636, 1446, 733, 733, 1638, 2346, 1654, 1447, 2338, 380,
	726, 1448, 1449, 2309, 1450, 1451, 2068, 710, 2067, 1776,
	1760, 1759, 1378, 1531, 1408, 1241, 1405, 1370, 1369, 1341,
	1339, 1013, 1241, 1629, 944, 421, 1241, 1503, 419, 1656,
	2547, 2870, 1090, 1620, 1535, 2421, 2861, 2620, 1543, 2776,
	1090, 2421, 2774, 1492, 1493, 1363, 383, 1057, 1333, 1554,
	1555, 2569, 1606, 2421, 2772, 392, 400, 401, 2421, 2662,
	1751, 2568, 1567, 1634, 2547, 2650, 1571, 2288, 1637, 2547,
	2563, 2547, 1090, 1655, 2547, 2546, 129, 2262, 1667, 1635,
	1592, 1246, 129, 129, 458, 458, 458, 2421, 2420, 129,
	389, 2402, 1090, 390, 1216, 84, 398, 399, 1675, 1823,
	1090, 2276, 2275, 2272, 2273, 1639, 1955, 1717, 1718, 1643,
	1642, 1648, 2619, 1713, 1714, 1715, 1716, 1023, 129, 129,
	129, 1657, 1664, 478, 2272, 2271, 1955, 96, 1247, 1193,
	1853, 1090, 1607, 1579, 1580, 1608, 1090, 1796, 1795, 1573,
	1780, 1479, 1779, 2888, 129, 1247, 129, 1573, 1090, 1853,
	733, 1270, 1269, 395, 733, 1743, 1749, 1750, 1709, 1062,
	2866, 2195, 1821, 1608, 2209, 2209, 1573, 2396, 1630, 1632,
	2357, 1608, 1608, 81, 396, 1746, 733, 1061, 1757, 733,
	1021, 1747, 1748, 2209, 1248, 2289, 1250, 1020, 1755, 2274,
	1021, 1732, 1478, 1844, 1761, 2223, 1742, 2123, 733, 1653,
	2092, 1248, 1115, 1246, 1969, 1644, 1785, 1769, 1853, 1697,
	1698, 1699, 1700, 1882, 1502, 1881, 1414, 1023, 1756, 1768,
	1480, 1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1127, 1085, 1455, 1137, 1421, 1361, 1359, 381,
	1252, 2794, 721, 1016, 2773, 1503, 2222, 2626, 1241, 1613,
	1616, 1617, 1618, 1614, 2624, 1615, 1619, 2439, 1765, 1683,
	1778, 1721, 1774, 1770, 2408, 1784, 1712, 2252, 1708, 1719,
	2214, 2215, 394, 384, 385, 1973, 405, 1506, 1027, 1737,
	386, 388, 1703, 382, 404, 403, 1507, 1702, 1334, 1010,
	1773, 1655, 2927, 429, 2925, 1921, 1923, 1631, 2895, 1238,
	1238, 1238, 1238, 1238, 81, 543, 1151, 1152, 1153, 1154,
	1155, 1156, 1157, 2287, 1791, 1624, 1820, 1946, 2217, 2195,
	2030, 1366, 1832, 1849, 1063, 543, 1238, 397, 1922, 1830,
	1831, 129, 129, 129, 129, 129, 1798, 1024, 1019, 1801,
	1839, 1805, 2220, 129, 1937, 1845, 2219, 129, 1575, 1938,
	1934, 129, 1933, 1613, 1616, 1617, 1618, 1614, 129, 1615,
	1619, 460, 1926, 2214, 2215, 1935, 548, 549, 1927, 1939,
	1936, 1617, 1618, 2839, 2791, 1957, 1332, 1958, 1902, 1089,
	1956, 1949, 733, 2126, 1829, 1241, 1241, 1241, 1241, 1241,
	1490, 2824, 1859, 1861, 2247, 1887, 2399, 1797, 710, 1837,
	1836, 1241, 2537, 1941, 2504, 1873, 1874, 1875, 1876, 1103,
	1104, 1948, 1241, 2424, 2345, 1099, 2344, 1987, 1984, 1986,
	582, 581, 584, 585, 586, 587, 2260, 2259, 1909, 583,
	588, 2258, 1977, 2686, 2689, 2768, 2767, 1090, 1101, 2614,
	2814, 2612, 2667, 1682, 733, 1333, 129, 1970, 2666, 1929,
	1930, 1928, 1932, 1940, 1931, 420, 1409, 1953, 2119, 733,
	733, 733, 2597, 2598, 1092, 458, 2118, 2283, 2017, 1265,
	455, 1008, 1972, 992, 1258, 1093, 989, 988, 2072, 129,
	458, 1960, 945, 1968, 1126, 1125, 1135, 1136, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1127, 458, 2880, 1137, 2631,
	1978, 2066, 1983, 2630, 1730, 1482, 1483, 2486, 1888, 2394,
	1731, 1365, 80, 2889, 2487, 2761, 2616, 458, 2428, 733,
	987, 2282, 543, 1722, 2025, 458, 1103, 1104, 1835, 96,
	1911, 1471, 1081, 1082, 2879, 2878, 1834, 1351, 2877, 2575,
	1804, 972, 545, 2027, 2817, 2033, 733, 733, 2036, 2816,
	2034, 2147, 2065, 2121, 2122, 2780, 129, 2035, 2765, 2056,
	2690, 2637, 546, 84, 2779, 2701, 733, 1955, 2042, 2043,
	2044, 2929, 2928, 2131, 2517, 623, 2325, 2088, 2064, 2086,
	2085, 1899, 1896, 733, 1802, 1502, 1397, 1106, 2928, 2929,
	2647, 2016, 2257, 2018, 2019, 2020, 2021, 1476, 2069, 721,
	2077, 2075, 467, 2008, 2009, 469, 2735, 52, 2737, 19,
	2015, 2200, 80, 2736, 18, 86, 1503, 2097, 2091, 55,
	2022, 2096, 543, 2083, 2738, 20, 2102, 1, 2113, 2114,
	1792, 2089, 2117, 2070, 2739, 21, 2225, 2094, 2105, 2110,
	1438, 2229, 2230, 2231, 733, 2201, 733, 2734, 15, 2733,
	14, 1473, 2727, 10, 2196, 2127, 2133, 2190, 2750, 34,
	2748, 33, 2141, 2208, 2137, 2747, 32, 717, 2132, 733,
	2466, 729, 2746, 28, 1926, 2745, 27, 2744, 26, 2465,
	1927, 2742, 23, 2741, 22, 2472, 2254, 2294, 2199, 2297,
	733, 2054, 733, 933, 733, 2235, 733, 2131, 2180, 2179,
	2228, 2743, 24, 2482, 2233, 2732, 13, 2729, 12, 1401,
	1349, 2148, 2586, 2224, 928, 2151, 2152, 2153, 2385, 1741,
	2156, 1014, 2249, 2203, 2766, 2250, 2685, 2251, 2728, 11,
	2687, 2218, 2726, 9, 478, 2611, 2489, 2450, 2449, 2047,
	2046, 1009, 1419, 2246, 2226, 2248, 2095, 2098, 1752, 1814,
	1717, 2697, 1718, 129, 455, 1803, 1064, 1668, 1658, 2240,
	723, 1115, 2304, 92, 1762, 955, 2239, 387, 1665, 1993,
	2688, 1011, 1992, 733, 733, 733, 2005, 2290, 1680, 1725,
	458, 2284, 2285, 2286, 1729, 129, 458, 1991, 1990, 2683,
	1994, 1278, 1276, 1277, 1275, 1280, 1279, 391, 1260, 129,
	2804, 458, 2364, 733, 458, 1107, 107, 56, 458, 458,
	2506, 458, 2109, 2306, 463, 464, 1126, 1125, 1135, 1136,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127, 733, 97,
	1137, 105, 129, 733, 393, 1145, 1833, 1961, 2334, 708,
	733, 709, 701, 733, 1825, 2192, 733, 1087, 2703, 2863,
	2796, 1097, 2280, 2827, 1908, 1205, 1593, 1504, 2311, 566,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 2358, 1333, 1944, 2312, 2521,
	2390, 2829, 1494, 580, 2310, 579, 578, 575, 2335, 478,
	2234, 2329, 2328, 576, 2787, 1485, 1918, 1119, 2314, 2277,
	2349, 564, 555, 1236, 2263, 2264, 1229, 2315, 1781, 1612,
	2319, 2267, 1610, 1609, 2323, 2324, 1367, 2326, 2270, 697,
	2216, 1332, 2356, 2212, 1622, 1235, 1239, 70, 129, 2265,
	2516, 2347, 970, 409, 2391, 2644, 38, 468, 550, 25,
	1587, 17, 979, 16, 1807, 733, 926, 42, 1598, 44,
	2041, 1733, 733, 733, 733, 2416, 2417, 2418, 2403, 2375,
	2803, 2910, 733, 995, 1926, 2936, 2844, 31, 30, 29,
	1927, 2740, 80, 2749, 1601, 733, 2731, 2730, 2426, 2414,
	2897, 2441, 543, 2896, 4, 1078, 71, 35, 2395, 719,
	2, 0, 0, 0, 2313, 2419, 0, 0, 2404, 0,
	1544, 1545, 0, 0, 0, 2440, 0, 0, 0, 0,
	129, 0, 733, 1557, 1558, 1559, 1560, 0, 0, 2462,
	2463, 2464, 2425, 2415, 0, 0, 2442, 1970, 1572, 1574,
	0, 0, 0, 0, 1578, 0, 0, 0, 2429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	2351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2500, 2501, 0, 0, 553, 0, 0, 2461, 0, 0,
	0, 0, 478, 0, 0, 2502, 0, 733, 0, 0,
	0, 0, 0, 0, 2515, 733, 0, 2200, 0, 0,
	2200, 2542, 2131, 2518, 2519, 0, 2510, 2490, 0, 0,
	2491, 543, 0, 2225, 2492, 0, 2246, 2495, 0, 2448,
	2503, 2384, 0, 1717, 0, 0, 0, 2496, 0, 2565,
	0, 1184, 1185, 0, 2541, 733, 0, 0, 2393, 0,
	0, 733, 0, 0, 2545, 1193, 129, 2511, 129, 2571,
	0, 2539, 0, 0, 733, 2405, 2406, 1777, 0, 2407,
	0, 0, 2409, 0, 2494, 0, 0, 0, 2572, 0,
	1193, 2432, 733, 0, 2199, 2544, 2538, 2199, 2570, 2562,
	0, 0, 0, 2549, 0, 0, 2488, 0, 0, 2559,
	2548, 2560, 2561, 2554, 0, 2576, 0, 0, 0, 0,
	2433, 0, 2435, 0, 0, 0, 1629, 0, 2550, 0,
	0, 0, 0, 0, 0, 2632, 0, 2577, 1238, 1126,
	1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1127, 2599, 2589, 1137, 0, 0, 2604, 0, 0, 0,
	0, 2200, 733, 80, 0, 0, 0, 0, 2607, 0,
	129, 1775, 0, 543, 0, 2617, 0, 2625, 1846, 1847,
	1848, 2622, 2623, 0, 0, 2633, 0, 0, 2629, 0,
	0, 0, 2634, 80, 2635, 0, 2649, 0, 0, 478,
	733, 2636, 0, 543, 0, 2653, 0, 478, 0, 717,
	0, 0, 2648, 0, 717, 1261, 0, 0, 0, 0,
	0, 0, 2525, 2665, 1241, 0, 2663, 0, 0, 0,
	2655, 0, 2652, 1806, 0, 0, 0, 0, 2199, 1822,
	1238, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 1903, 1904, 1905, 2566,
	0, 2567, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 0, 129, 0, 0, 0, 0, 733, 0, 733,
	0, 0, 0, 2693, 0, 2695, 80, 0, 0, 0,
	0, 0, 2718, 2720, 2692, 2383, 2694, 0, 1851, 0,
	0, 2702, 0, 1854, 0, 2706, 0, 0, 1856, 1857,
	129, 0, 2711, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 0, 0, 1872, 0, 0, 1241, 0, 1877, 1878,
	1879, 1880, 1926, 0, 0, 1884, 1885, 1886, 1927, 0,
	0, 2691, 1889, 1890, 1891, 0, 0, 2762, 2764, 2799,
	1897, 0, 733, 1900, 1901, 0, 0, 2790, 1906, 0,
	0, 2771, 0, 1912, 0, 1913, 1914, 1915, 2653, 1916,
	1917, 0, 0, 0, 0, 80, 2795, 0, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 0, 1942, 1943,
	0, 0, 0, 1126, 1125, 1135, 1136, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1127, 0, 733, 1137, 0, 2714,
	0, 0, 0, 2808, 0, 0, 1335, 2832, 0, 0,
	0, 0, 1343, 1346, 2823, 2841, 733, 0, 0, 0,
	0, 0, 2821, 2819, 0, 0, 0, 0, 0, 2820,
	2071, 2822, 0, 1343, 1346, 455, 2838, 733, 0, 0,
	2840, 0, 0, 2859, 0, 0, 0, 0, 0, 0,
	0, 2860, 2851, 0, 0, 0, 0, 0, 80, 0,
	0, 458, 0, 0, 80, 0, 0, 0, 0, 733,
	0, 2883, 0, 2874, 0, 0, 0, 2876, 2871, 0,
	0, 733, 0, 0, 80, 0, 0, 0, 0, 80,
	0, 2891, 1193, 0, 0, 733, 0, 2901, 2920, 543,
	2147, 455, 2881, 2904, 2900, 2907, 2899, 2924, 2135, 2919,
	2898, 2890, 2922, 80, 2926, 2930, 80, 80, 2886, 2921,
	2885, 80, 2909, 1439, 2883, 0, 0, 458, 2939, 0,
	0, 733, 2931, 0, 0, 2933, 0, 0, 0, 2161,
	2162, 0, 2244, 80, 0, 2949, 80, 0, 0, 2957,
	2883, 0, 0, 2181, 2182, 2959, 2183, 2184, 0, 0,
	2185, 80, 0, 80, 0, 2954, 0, 80, 2883, 0,
	2883, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 80, 0, 80, 729, 2883, 2969, 80, 0, 0,
	2883, 0, 0, 0, 2883, 0, 0, 0, 0, 0,
	2973, 0, 0, 0, 0, 2227, 2800, 2801, 0, 2136,
	0, 0, 0, 729, 0, 2144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2154, 2155, 0,
	0, 0, 0, 0, 2828, 2831, 0, 0, 0, 0,
	2163, 0, 0, 0, 2167, 1684, 1685, 0, 1690, 1691,
	1692, 1693, 1694, 1534, 0, 2256, 0, 0, 0, 0,
	0, 0, 2333, 0, 0, 0, 1704, 1705, 1706, 1976,
	0, 0, 2340, 2342, 0, 0, 0, 0, 2202, 0,
	1565, 1566, 2333, 0, 0, 0, 0, 0, 0, 0,
	2142, 2143, 0, 0, 0, 0, 2382, 0, 0, 2149,
	2150, 2875, 0, 717, 0, 0, 0, 0, 0, 0,
	2232, 2157, 2158, 2159, 2160, 0, 0, 0, 2164, 2165,
	2166, 2831, 1121, 0, 1124, 0, 0, 0, 0, 0,
	0, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 0, 1122,
	1123, 1120, 2188, 0, 0, 0, 0, 0, 717, 1126,
	1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1127, 2369, 729, 1137, 0, 729, 729, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 2360, 2958, 1126, 1125, 1135, 1136, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1127, 0, 0, 1137, 1126,
	1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1127, 0, 0, 1137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 406, 0, 0, 0,
	0, 0, 127, 0, 2387, 2388, 2389, 0, 1126, 1125,
	1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127,
	0, 0, 1137, 0, 0, 477, 0, 0, 0, 0,
	0, 0, 0, 554, 0, 0, 700, 718, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 2359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2333,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 2427, 0, 0, 0, 0, 0, 0, 2333,
	0, 0, 0, 1790, 0, 2371, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 2380, 2381, 0, 0,
	0, 0, 2386, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 1790, 0, 0, 0, 0, 2397, 2398, 0,
	2400, 2368, 0, 2401, 0, 0, 0, 0, 0, 0,
	2361, 1828, 0, 0, 0, 0, 0, 0, 2363, 0,
	729, 0, 478, 2413, 478, 0, 0, 0, 2366, 2367,
	2244, 0, 0, 0, 0, 0, 0, 2370, 2187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2244, 1126,
	1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1127, 2186, 0, 1137, 0, 0, 2523, 2524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2527, 2528, 2529, 2530, 0, 0, 0, 0, 2534, 0,
	2010, 2011, 2012, 2014, 1536, 1541, 1542, 0, 0, 0,
	1546, 0, 1548, 1549, 1550, 1551, 0, 1553, 0, 0,
	1556, 0, 0, 0, 0, 1561, 1562, 1563, 1564, 0,
	0, 0, 1568, 1569, 1570, 0, 0, 0, 0, 0,
	1576, 1577, 0, 0, 0, 1583, 1586, 0, 1591, 0,
	0, 0, 0, 717, 1126, 1125, 1135, 1136, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1127, 0, 0, 1137, 0,
	1599, 0, 1602, 1603, 0, 0, 0, 1126, 1125, 1135,
	1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127, 717,
	0, 1137, 0, 0, 2531, 2532, 2533, 0, 2535, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 36, 0,
	72, 39, 40, 0, 0, 127, 0, 0, 2134, 0,
	0, 0, 59, 2551, 2552, 2553, 0, 0, 78, 0,
	0, 41, 0, 0, 2564, 0, 0, 0, 0, 0,
	0, 0, 0, 2244, 0, 2244, 1126, 1125, 1135, 1136,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127, 0, 127,
	1137, 0, 0, 0, 0, 0, 0, 2031, 0, 0,
	81, 0, 0, 2661, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 2049, 2053, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2751, 0, 0, 2935, 2938,
	2934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 1126, 1125, 1135, 1136, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1127, 0, 0, 1137, 0, 0,
	2638, 2639, 0, 0, 2640, 2641, 2642, 2643, 2696, 0,
	0, 0, 2084, 1126, 1125, 1135, 1136, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1127, 0, 0, 1137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 0, 0, 0, 729,
	0, 0, 2244, 0, 0, 0, 2752, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 2145, 0, 0, 0,
	0, 0, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 2266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2707, 0, 0, 0, 536, 2712, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 729, 2715, 2207,
	57, 58, 0, 2753, 0, 0, 2337, 0, 0, 0,
	1852, 0, 0, 0, 0, 541, 0, 66, 1858, 67,
	0, 0, 2207, 0, 0, 0, 0, 0, 0, 1870,
	1871, 0, 492, 0, 2775, 0, 0, 0, 0, 0,
	2781, 0, 1883, 729, 68, 729, 0, 729, 0, 2243,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	127, 127, 0, 0, 0, 0, 0, 1907, 0, 718,
	0, 0, 2754, 75, 718, 53, 54, 61, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2372, 2373, 0, 2374, 0, 2918, 2376,
	0, 2378, 0, 0, 0, 540, 2291, 2292, 2293, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 498, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 2318, 0, 2942, 0,
	0, 527, 0, 0, 493, 0, 488, 0, 0, 0,
	0, 73, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 2343, 0, 0, 0, 0, 2348, 2422, 2423, 0,
	0, 0, 0, 2352, 0, 0, 2353, 0, 0, 2355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 0, 506, 0, 0, 0,
	79, 0, 514, 482, 0, 518, 0, 0, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 496, 520, 0,
	0, 0, 0, 0, 0, 494, 495, 497, 524, 0,
	526, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 2960,
	2961, 0, 1344, 1347, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 2411, 0,
	127, 0, 0, 1344, 1347, 2411, 2411, 2411, 1377, 0,
	0, 0, 0, 0, 0, 729, 0, 127, 127, 127,
	127, 127, 0, 0, 0, 0, 0, 0, 2411, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 0, 0, 0, 0,
	484, 485, 486, 487, 489, 507, 508, 512, 513, 530,
	529, 528, 531, 535, 538, 537, 539, 490, 491, 499,
	509, 510, 511, 515, 516, 525, 521, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 2543, 0,
	0, 0, 0, 1377, 2411, 0, 0, 517, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 2243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1540, 1540, 1540, 0, 0,
	0, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 0,
	0, 1540, 0, 0, 0, 0, 1540, 1540, 1540, 1540,
	0, 0, 0, 1540, 1540, 1540, 0, 0, 0, 0,
	0, 1540, 1540, 0, 0, 0, 1540, 1540, 0, 1540,
	0, 0, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2628, 0, 0, 0, 0,
	0, 1540, 1540, 1540, 1540, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 477, 0, 0, 0,
	0, 127, 127, 0, 536, 127, 1640, 1377, 718, 0,
	0, 0, 0, 2651, 0, 0, 0, 0, 0, 0,
	0, 2330, 1377, 0, 0, 2332, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2243, 0, 2243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 717, 0, 127, 127, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 1766, 1767, 127, 0, 0, 0, 0, 0, 0,
	0, 498, 481, 0, 0, 2777, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 0, 0, 127, 0, 477,
	527, 0, 0, 493, 0, 488, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	505, 503, 0, 0, 0, 506, 0, 0, 0, 2243,
	1377, 514, 482, 0, 518, 0, 0, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 0, 0, 0,
	2411, 0, 0, 0, 0, 0, 496, 520, 0, 0,
	0, 0, 0, 0, 494, 495, 497, 524, 0, 526,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 2865, 0, 0, 0, 0, 0, 0, 1540,
	0, 0, 0, 0, 2868, 536, 0, 0, 0, 0,
	1540, 1540, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 1540, 0, 0, 1974, 1540, 0, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1540, 0,
	0, 0, 492, 483, 2865, 0, 0, 0, 0, 0,
	0, 0, 504, 718, 127, 127, 127, 127, 127, 0,
	500, 0, 0, 0, 0, 0, 477, 0, 0, 0,
	127, 0, 0, 0, 477, 0, 0, 0, 0, 1540,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 533, 534, 0, 0, 0, 0, 484,
	485, 486, 487, 489, 507, 508, 512, 513, 530, 529,
	528, 531, 535, 538, 537, 539, 490, 491, 499, 509,
	510, 511, 515, 516, 525, 521, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 498, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 127,
	0, 527, 0, 522, 493, 0, 488, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 517, 519, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 0, 506, 0, 0, 0,
	1331, 0, 514, 482, 0, 518, 0, 0, 0, 541,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 496, 520, 0,
	0, 0, 0, 0, 0, 494, 495, 497, 524, 0,
	526, 532, 0, 0, 500, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 1377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 540,
	0, 0, 0, 504, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 718, 498, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 0, 0, 493, 0,
	488, 0, 0, 0, 533, 534, 0, 501, 0, 0,
	484, 485, 486, 487, 489, 507, 508, 512, 513, 530,
	529, 528, 531, 535, 538, 537, 539, 490, 491, 499,
	509, 510, 511, 515, 516, 525, 521, 523, 0, 0,
	0, 0, 0, 0, 0, 505, 503, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 514, 482, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 520, 0, 522, 0, 127, 0, 0, 494,
	495, 497, 524, 0, 526, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2332, 0,
	0, 0, 0, 0, 0, 127, 0, 541, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 0, 0, 0, 492, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	0, 0, 0, 0, 484, 485, 486, 487, 489, 507,
	508, 512, 513, 530, 529, 528, 531, 535, 538, 537,
	539, 490, 491, 499, 509, 510, 511, 515, 516, 525,
	521, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 481, 0, 0, 522, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 0, 0, 493, 0, 488, 0,
	0, 517, 519, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1380, 0, 0, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 514, 482, 0, 518, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	520, 0, 0, 0, 0, 0, 0, 494, 495, 497,
	524, 0, 526, 532, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 0, 0,
	0, 0, 484, 485, 486, 487, 489, 507, 508, 512,
	513, 530, 529, 528, 531, 535, 538, 537, 539, 490,
	491, 499, 509, 510, 511, 515, 516, 525, 521, 523,
	0, 0, 0, 127, 554, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 522, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 517,
	519, 0, 2802, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 127, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 2805, 2806, 2807, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 732, 0, 1662, 1663, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 1971,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 732, 0, 1662, 1663, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 2204, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 81, 0,
	1090, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 2205, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 2520, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 2140, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 2130, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 1641, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 1500, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 1674, 1678, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 1677,
	213, 904, 886, 804, 803, 1671, 0, 1672, 1673, 223,
	731, 130, 146, 1669, 1676, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	731, 130, 146, 727, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 340, 795,
	135, 875, 905, 838, 849, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 561, 0, 0, 183, 558,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 679, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 668,
	669, 0, 0, 0, 0, 0, 0, 1651, 0, 81,
	0, 0, 0, 559, 582, 581, 584, 585, 586, 587,
	0, 0, 541, 583, 588, 621, 622, 1652, 0, 0,
	0, 556, 573, 0, 678, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 570, 571, 0, 0, 0, 0, 691, 0,
	572, 0, 0, 568, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 670, 0,
	0, 213, 540, 0, 0, 689, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 596,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 598,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	680, 690, 686, 688, 687, 684, 685, 683, 682, 681,
	692, 671, 672, 673, 674, 675, 0, 0, 0, 677,
	0, 615, 616, 0, 0, 0, 169, 589, 590, 591,
	592, 593, 599, 600, 604, 605, 613, 612, 611, 614,
	617, 619, 618, 620, 594, 595, 597, 601, 602, 603,
	606, 607, 610, 608, 609, 676, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 36, 340,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 556, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	79, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 556, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 552, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 1090, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 556, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 556, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 1538, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 1585, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 556, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 1538, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 1582, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 556, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 1538, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 1417, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 556, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 556, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 0, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 1588, 1589, 1590,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 0, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 2943, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 1090, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 0, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 0, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 1628, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 1632, 0, 0,
	0, 0, 0, 0, 128, 0, 479, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 1631, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 1628, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 1632, 0, 0,
	0, 0, 0, 0, 128, 0, 479, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 1626, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 1631, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 1112, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1113, 0, 1116, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	1109, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 1110, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 479, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	474, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 1947, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 479, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 479, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1113, 0, 1116, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 0,
	0, 0, 135, 0, 0, 517, 519, 448, 340, 442,
	453, 436, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 459, 0, 0, 0, 0, 0, 183, 0,
	0, 443, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 0, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 434, 437, 0, 0, 0, 251, 148, 0, 0,
	441, 213, 0, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 445, 309, 0,
	0, 449, 0, 0, 172, 0, 301, 270, 359, 0,
	0, 300, 226, 349, 0, 452, 358, 0, 0, 368,
	373, 0, 0, 0, 324, 185, 180, 184, 0, 137,
	0, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 364, 0, 312, 311, 0, 208, 0, 0,
	0, 293, 0, 214, 136, 337, 376, 154, 220, 342,
	0, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 0, 0, 0, 462, 314, 344,
	156, 331, 438, 439, 440, 446, 447, 450, 451, 454,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 0, 0, 329, 362, 378, 158, 0, 317, 343,
	0, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 444, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 0, 0,
	0, 135, 448, 340, 442, 453, 436, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 428, 0, 0,
	0, 0, 0, 183, 0, 0, 443, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 434, 437, 0, 0,
	0, 251, 148, 0, 0, 441, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 445, 309, 0, 0, 449, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	452, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 431, 314, 344, 156, 331, 438, 439, 440,
	446, 447, 450, 451, 454, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 444, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 1126, 1125, 1135, 1136, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1127, 0, 0, 1137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 2858, 0, 0,
	0, 0, 0, 183, 2856, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 2857, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 36, 340, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 1623, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 1242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 79, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	2051, 2052, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 1403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 1263, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 1242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	2317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 1826, 1827, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 695, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 125, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 715,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 711, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 716, 714, 705, 706, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 712, 713, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 1257,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 702,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 715,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 711, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 536, 290, 159, 196,
	189, 281, 716, 714, 705, 706, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 2341, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 712, 713, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 0, 0, 540, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 0, 0, 493, 0, 488, 0, 0,
	0, 0, 0, 0, 501, 1300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 505, 503, 0, 2852, 0, 506, 0, 0,
	2339, 0, 0, 514, 482, 0, 518, 0, 0, 541,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 496, 520,
	0, 0, 0, 0, 0, 0, 494, 495, 497, 524,
	0, 526, 532, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 540,
	0, 0, 0, 0, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 498, 481, 0, 1301,
	0, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 0, 0, 493, 0,
	488, 0, 0, 0, 1300, 533, 534, 501, 0, 0,
	0, 484, 485, 486, 487, 489, 507, 508, 512, 513,
	530, 529, 528, 531, 535, 538, 537, 539, 490, 491,
	499, 509, 510, 511, 515, 516, 525, 521, 523, 0,
	0, 0, 0, 0, 0, 505, 503, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 514, 482, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 520, 0, 0, 522, 0, 0, 0, 494,
	495, 497, 524, 0, 526, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 517, 519,
	0, 0, 0, 0, 1314, 1317, 1318, 1319, 1320, 1321,
	1322, 0, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	0, 1302, 1303, 1304, 1305, 1281, 1285, 1315, 1282, 1288,
	1284, 1286, 1283, 0, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	0, 0, 0, 0, 484, 485, 486, 487, 489, 507,
	508, 512, 513, 530, 529, 528, 531, 535, 538, 537,
	539, 490, 491, 499, 509, 510, 511, 515, 516, 525,
	521, 523, 1316, 36, 37, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 41, 63, 64, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 517, 519, 1314, 1317, 1318, 1319, 1320, 1321, 1322,
	0, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 0,
	1302, 1303, 1304, 1305, 1281, 1285, 1315, 1282, 1288, 1284,
	1286, 1283, 0, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 41, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 77, 76,
	2751, 1316, 0, 0, 47, 2975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 41, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 2752, 0, 0, 0, 0, 0, 0, 0, 0,
	2751, 0, 0, 0, 0, 2971, 0, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 51, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 41, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 2752, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 73, 49, 77, 76,
	2751, 0, 0, 0, 47, 2965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2754, 75, 0,
	53, 54, 61, 36, 62, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 79, 41, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 2752, 0, 0, 0, 0, 0, 0, 0, 0,
	2751, 0, 0, 0, 0, 2951, 73, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 2754, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 79, 41, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 81, 2940, 0, 0, 0,
	0, 2752, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 73, 49, 77, 76,
	2751, 0, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2754, 75, 0,
	53, 54, 61, 36, 62, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 79, 41, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 2752, 0, 0, 0, 0, 0, 0, 0, 0,
	2751, 0, 0, 0, 0, 2882, 73, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 2754, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 79, 41, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 2752, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 73, 49, 77, 76,
	2751, 0, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2754, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 2752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 2754, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2754, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	37667, -1000, -355, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1858, -1000, -1000, -1000, -1000,
	-1000, -1000, 897, 623, -1000, 280, 112, 33377, 629, 1177,
	34457, -1000, -1000, -1000, 194, 552, 34457, 464, 474, 1266,
	1729, 1263, 45, -57, -60, 138, 25276, 24731, 25, -1000,
	1906, 1910, -1000, -1000, 554, 49, -1000, -1000, -1000, 22022,
	234, -1000, -1000, 1835, 1856, 1622, -1000, 14462, 554, 554,
	32837, 36617, -1000, 1903, 34457, 12840, -1000, 616, 588, -189,
	467, 467, 282, 467, 467, 626, -1000, 269, 910, -1000,
	-1000, -1000, -1000, 907, 34457, 29057, 542, 33917, 542, 542,
	542, 542, 542, 542, 542, 34457, -1000, 700, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34457,
	1262, 1763, 939, 136, -1000, -1000, -1000, 927, -1000, 329,
	327, 322, 325, 82, 944, 1832, -1000, 1415, 1835, 1835,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 317, 595, 281,
	234, 903, 1807, 1758, 1757, 1185, 1754, 261, 1752, 1531,
	-33, -1000, 1259, 34457, -1000, -1000, 1144, 1136, 1582, 1431,
	681, 1581, -1000, -1000, 341, 564, 1520, 448, 1520, 1520,
	1520, 1520, 1520, -61, 1520, 1520, 1520, 85, 1520, 181,
	1520, 1520, 1520, 1520, 1520, 1286, -1000, -1000, -1000, 348,
	1421, 1458, 1568, 661, -1000, -1000, -1000, -1000, 1546, 1821,
	619, -1000, -126, 1474, 23102, -1000, 1415, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1272, -1000, 1755, 1014, 17702, 1698, -1000, -1000,
	1000, 1886, -1000, 21482, 696, -1000, 17702, 3022, 1415, -1000,
	-1000, 1415, -1000, -1000, -1000, 641, -1000, -1000, 19862, 19862,
	19862, 19862, 19862, 19862, 19862, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1415,
	1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415,
	1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415,
	1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415,
	1415, -1000, -1000, 1415, -1000, 13922, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1415, 1415,
	1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415, 17702, 1415,
	1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415, 1415,
	1415, 1415, 1415, 32297, 29597, 34457, 1444, 1427, -1000, -1000,
	691, 1481, -82, 36077, -1000, -1000, -1000, -1000, 34997, 28517,
	877, -1000, -1000, -1000, -1000, 1750, -1000, -1000, 687, -1000,
	1858, -1000, -1000, 1392, 373, -1000, 37395, 4888, -1000, -1000,
	-1000, 1530, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	33917, 34457, 247, 1258, 937, 1257, 34997, 34997, -1000, 237,
	29057, 29057, 467, 259, 29057, 243, 1479, 590, 1478, 584,
	1284, 34457, 1797, 1565, 34457, 1256, 1255, 34997, 34997, 29057,
	29057, -1000, 12290, -1000, -1000, 939, -1000, 5401, 17702, 467,
	467, 34457, 34457, 34457, 34457, 34457, -1000, -1000, 939, 939,
	939, 939, 924, 1885, 924, -1000, 924, -1000, -1000, 17702,
	-1000, 19862, 27977, 794, -1000, -1000, -1000, 1254, 306, -1000,
	-1000, -1000, -1000, -1000, -1000, 1252, -1000, 1733, 261, 261,
	-1000, 1201, 261, 1457, -1000, 875, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 261, -1000,
	17162, -344, -1000, -1000, 1477, -1000, 232, -1000, -1000, 437,
	437, 256, 29057, 29057, 29057, -1000, 1520, 33917, -1000, 1520,
	1520, 1520, -70, 1520, 1520, -1000, -1000, 1520, -1000, -1000,
	-1000, -1000, -1000, 1520, -1000, -1000, -1000, 1520, 1520, -1000,
	1520, 1520, -1000, -1000, -1000, -1000, -1000, 29057, 437, 179,
	1475, 437, 29057, 29057, -1000, 74, 72, 71, 70, -1000,
	-1000, -1000, -1000, 68, 67, -1000, -1000, 1622, -1000, -1000,
	234, -1000, -1000, 34457, -89, 23102, 1474, 1818, 10640, -1000,
	-1000, 965, 1898, 831, 1433, -1000, -1000, 1461, -1000, 1019,
	686, 1170, 1651, -1000, -1000, -1000, 34457, -1000, 17702, 17702,
	1141, -1000, 23642, -1000, -1000, -1000, -1000, 10090, 857, 19862,
	997, 841, 19862, 19862, 19862, 19862, 19862, 19862, 19862, 19862,
	19862, 19862, 19862, 19862, 19862, 19862, 19862, 1132, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1251, -1000, 234, 1657,
	1657, 772, 772, 772, 772, 772, 772, 25816, 1815, 15542,
	15542, 15542, 1815, 1272, 1272, 15542, 15542, 15542, 15542, 15542,
	15542, 15542, 15542, 1815, 1815, 15542, 1272, 1272, 1272, 1272,
	15542, 15542, 15542, 15542, 33917, 33917, 1815, 15542, 15542, 15542,
	1815, 1272, 1388, 853, 13922, 15542, 15542, 1272, 17702, 17702,
	16622, 16082, 18242, 15542, 1815, 917, 853, 34997, -1000, -1000,
	19322, -1000, -1000, -1000, -1000, -1000, 1272, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 15542, 15542, 15542, 15542, 823,
	34457, -1000, 1413, 1503, -1000, -1000, -1000, 1816, 26897, -1000,
	20942, -1000, 1415, 823, 1322, 29597, 34457, -1000, -1000, 29597,
	34457, 9540, 35537, 1446, -1000, -122, -117, -82, -1000, -1000,
	752, -1000, -1000, -1000, 13381, -1000, 11190, 1835, 1622, 6790,
	11740, -1000, 4888, 1530, -1000, -48, -1000, -1000, -1000, 1501,
	-1000, 1501, 320, 4, 1501, 1501, 1501, 1501, 1501, 3,
	3, 3, 3, -1, -1000, -1000, -1000, -1000, -1000, 1529,
	1524, -1000, 1501, 1501, 1501, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1510, 334, 1508, 1508, 1508, 1508,
	1508, 434, 434, -1000, 17702, 1504, 1810, 567, 259, 1786,
	1796, 1786, 326, -1000, 685, 1521, -1000, 684, 273, 1437,
	-1000, 173, 1358, 34457, -1000, -1000, -1000, -1000, -1000, 34457,
	34457, 29057, 29057, 29057, 560, -1000, 34457, 1459, -1000, -1000,
	-1000, -1000, -1000, 1419, -1000, 1358, -1000, -1000, -1000, -1000,
	-1000, 1200, 853, 1249, 1248, 1807, -1000, -1000, -1000, 926,
	-1000, -1000, -1000, -1000, 939, 34457, 34457, 34457, 1807, 939,
	853, 712, 1533, 1415, 1272, -1000, -1000, 1247, -1000, 19862,
	1457, 1457, -1000, 1457, 261, 1657, 1457, -1000, 1380, 963,
	1196, 34457, -1000, 23102, -35, -1000, -164, 31757, -1000, -1000,
	-1000, 31757, -1000, 85, 152, -1000, 580, -1000, 1378, -1000,
	-1000, -1000, -1000, 1520, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 31757, 137, 169, 31757, 1419, 1883, -1000,
	-1000, -1000, -1000, 1831, -1000, 1815, 1272, 172, -1000, -1000,
	-1000, 1415, 1340, 683, -1000, 31217, -1000, 1642, 1014, 1014,
	17702, -1000, -1000, -1000, 11190, 1827, -1000, 1663, 1662, 1593,
	-1000, -1000, 857, 863, -1000, -1000, 1079, -1000, -1000, -1000,
	-1000, 682, 1415, -1000, 3566, -1000, -1000, -1000, -1000, 997,
	19862, 19862, 19862, 712, 3566, 3536, 895, 771, 772, 784,
	784, 756, 756, 756, 756, 756, 947, 947, -1000, -1000,
	-1000, 1272, -1000, -1000, -1000, 15542, 1371, -1000, -1000, 853,
	672, 1371, 1371, 15542, -207, -207, 1371, 1272, 1371, 1371,
	1371, 1371, 1272, 1371, 15542, 15542, 1371, -207, -207, -207,
	-207, 1371, 1371, 1371, 1371, 1456, 1454, 15542, 1371, 1371,
	1371, 15542, -1000, 17702, -1000, 1272, 1371, 1371, -1000, 973,
	1114, 830, 1881, 1371, 800, 1880, 1371, 1677, 19862, 19862,
	19862, 1371, 15542, 938, -1000, 17702, 1272, -1000, 1053, 1371,
	1272, 1449, 1371, 1371, 250, 1415, -1000, 11190, 29597, 29597,
	29597, 29597, 29597, -1000, 1606, 1604, -1000, 1619, 1598, 1623,
	23102, 1376, 1272, 300, 26897, -1000, 1415, -1000, 22562, 585,
	611, 607, 603, 15542, 1865, 29597, 1404, -1000, 1404, -1000,
	670, -1000, -1000, 34997, -82, -96, -1000, -1000, 1446, -1000,
	1161, -1000, -1000, 853, -1000, 652, 1755, 1815, 1445, 6240,
	-1000, -1000, -1000, -1000, 373, -1000, -1000, -1000, 1517, 4674,
	-1000, 1697, 711, 711, 732, 1216, 1682, -1000, -1000, 170,
	-78, -1000, -1000, 1135, 3, 3, 1501, 1501, 319, 1501,
	-1000, 3, -1000, -1000, -1000, 752, 1749, 752, 752, 752,
	752, 3, 1195, 1195, -1000, -1000, -1000, -1000, 1133, -1000,
	1510, -1000, 1117, -1000, -1000, -1000, -1000, -1000, -1000, 1124,
	1564, 33917, -1000, 34457, -1000, 1786, -1000, -1000, -1000, 123,
	-1000, -1000, -1000, 1870, -1000, -1000, 33917, 27437, 33917, -1000,
	-1000, 98, 29057, 184, 350, 225, -1000, 579, -1000, 571,
	-1000, -1000, -1000, -1000, -1000, -1000, 34457, 29057, -1000, -1000,
	-1000, -1000, 1865, 1246, 1244, -1000, -1000, -1000, 924, 939,
	-1000, -1000, 19862, 29057, -1000, 314, -1000, 3566, -1000, -1000,
	-1000, 823, 618, -1000, -1000, -79, -1000, -1000, 568, 650,
	648, 565, -1000, 109, 29057, -1000, 33917, -1000, 1879, 1878,
	121, 1876, 29057, -1000, 55, 1651, -1000, 1441, -1000, 599,
	594, 620, 393, 393, -1000, 867, 393, 1744, 1736, 821,
	-1000, 241, -1000, 10640, 10640, 1438, 1194, 1193, -1000, 1640,
	-1000, -1000, -1000, 34457, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8990, 15542, -1000, 712, 3566, 3469, -1000,
	19862, -1000, 1371, 15542, -207, 8440, -207, -207, 1371, -1000,
	30677, -1000, -1000, -207, -1000, -207, -207, -207, -207, -207,
	1371, 1371, -207, -1000, -1000, -1000, -1000, -207, -207, -207,
	-207, 19862, 19862, 1371, -207, -207, -207, 1272, 853, -1000,
	-1000, -1000, 372, 1132, 372, 19862, 19862, -1000, 19862, 19862,
	-1000, -1000, 19862, 3400, 3377, 3121, -248, 1390, 912, -1000,
	17702, 1094, -1000, -1000, -1000, -1000, -1000, -1000, 1563, 11190,
	1415, 7340, -1000, 33917, 1424, -1000, 872, 871, 1503, 1514,
	1562, 1607, -1000, -1000, -1000, -1000, 1600, -1000, 1596, -1000,
	-1000, 1488, -1000, -1000, 1436, 1415, 33917, 19862, 585, -1000,
	1415, 1415, 1415, 1272, 1858, 17702, 1404, -1000, -1000, 793,
	-1000, -1000, -141, -132, -1000, -1000, -1000, 10640, -1000, 6790,
	-1000, 6790, -1000, 24182, 365, 1660, 371, -1000, 1216, -1000,
	-1000, 1216, -1000, 1216, -1000, -1000, -1000, 1509, -1000, 976,
	-1000, -1000, -1000, -1000, -1000, 1415, -347, 19862, 1893, -1000,
	1696, -1000, 1692, 1691, 1190, -1000, -1000, 1317, 752, 752,
	3, -1000, -1000, 1501, -1000, 752, -1000, 829, -1000, -1000,
	-1000, -1000, 752, 1365, -1000, 1344, 1430, -1000, 1342, 119,
	34457, -1000, -1000, 1808, -1000, -1000, -1000, 1748, 867, 867,
	867, 1557, -1000, -1000, -1000, -1000, 1307, 1426, -1000, 37395,
	33917, 33917, 33917, -1000, -265, 163, -1000, 29057, 145, 173,
	389, 1241, 34457, 29057, -1000, -1000, -1000, -1000, -1000, 1807,
	-1000, 3566, 1358, -1000, -1000, 3, 34457, -1000, 29057, 782,
	30137, 29057, 120, 149, -1000, 29057, 29057, 1875, 29057, 1419,
	1188, 1593, 172, 4373, 1216, 587, -1000, -1000, 379, -1000,
	3744, 1682, 1236, 37188, 36975, 33917, 1681, 1679, 1233, 34457,
	33917, -1000, -1000, 5206, 1227, 17702, -1000, 33917, -1000, -1000,
	33917, 647, -1000, 33917, -1000, -1000, -1000, -1000, 980, 14462,
	-1000, -1000, 1272, -1000, 19862, 3566, -207, -1000, -1000, -1000,
	-1000, 646, -1000, -1000, -207, -1000, -1000, 1224, -1000, -1000,
	-1000, -1000, -1000, -1000, -207, -207, -1000, -1000, -1000, -1000,
	-1000, 3282, 3082, -207, -1000, -1000, -1000, -1000, 1272, 1501,
	1501, -1000, 1501, 1508, -1000, 1501, 26, 1501, 24, 1272,
	1272, 3067, 2656, 2402, 2009, 1053, 19862, 19862, 19862, 1415,
	-200, -1000, 853, 17702, -1000, 1792, 1405, 1408, -1000, -1000,
	15002, 1272, 1659, 1340, -1000, 22022, 1332, -1000, 1858, 11190,
	17702, 17702, -1000, -1000, 17702, 1506, -1000, 17702, -1000, -1000,
	-1000, -1000, 33917, 297, -1000, 17702, 1332, 1414, -1000, 33917,
	33917, 33917, -1000, 1835, 853, -1000, -1000, -1000, -1000, 6240,
	-1000, 1328, -1000, 1501, 1501, 1678, -1000, 711, -1000, -1000,
	-1000, -1000, 33917, -1000, 19862, 1805, 3566, -121, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 752, -1000, -1000, -1000, -1000,
	-1000, 3, 1187, 3, 1069, -1000, 1063, -1000, -1000, -298,
	1499, 234, -1000, 867, 814, 813, 1186, 34457, 135, 27437,
	-1000, 37395, 37395, 37395, 117, 118, -1000, 959, -1000, -1000,
	-1000, 1184, 1183, 1182, 1358, 196, 952, 162, -1000, 1801,
	-1000, -1000, 939, -67, -1000, 149, -1000, -1000, -1000, 149,
	-1000, -1000, 158, 1419, 1419, 29057, 1419, -1000, -1000, -1000,
	5206, 359, 37395, 37395, 1504, 711, 1669, 371, -1000, -1000,
	-1000, -1000, -1000, -1000, 1219, -1000, 722, -1000, 556, 359,
	5206, 853, 779, 941, 10640, -1000, 1873, -1000, -1000, -1000,
	3566, -1000, 7890, -1000, 820, -1000, -1000, -1000, 19862, 19862,
	-1000, -1000, -1000, 294, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19862, 19862, 19862, 19862, -1000, 1053, 1053, 1053,
	19862, 1272, 1180, 853, 1667, -1000, 1415, -1000, -1000, 1415,
	236, -1000, 33917, 1835, -1000, 853, 853, 853, 33917, 853,
	1315, -1000, 1415, 20402, -1000, 23102, 1312, 1312, 1312, -1000,
	566, 24182, 1790, 1790, -1000, 1216, 1310, 1053, 1415, -1000,
	1415, 1415, -1000, 752, -1000, 752, 1301, 1291, -1000, 24182,
	-1000, -1000, 807, -1000, -1000, -1000, -1000, -1000, 1830, -1000,
	135, -1000, 1179, 253, 264, -1000, 252, 251, 242, 240,
	235, -1000, -1000, -1000, -1000, 405, 117, -1000, -76, 1061,
	852, 1742, 118, -1000, 1049, 1047, 1037, 1030, 178, -1000,
	-1000, -1000, -1000, 219, 173, -1000, 378, 1178, -1000, 1713,
	1710, 1803, 1803, 116, 1419, 1411, 1277, -1000, -1000, 1217,
	-1000, -1000, 1496, 1216, 1489, -1000, 1214, -1000, -1000, 33917,
	-1000, 359, 1785, 1781, 1415, -1000, 1865, 29597, 14462, -1000,
	-1000, 1858, 1855, 1053, 1053, -1000, -1000, 1053, 1053, 1053,
	1053, -1000, -1000, -1000, 150, -1000, -1000, 1891, -1000, 1408,
	1415, -1000, 234, -1000, -1000, 1305, -1000, 33917, -1000, -1000,
	585, -1000, -1000, -1000, 566, -1000, 1209, 867, 1173, -1000,
	-1000, -1000, -1000, 352, -350, 19862, -1000, -1000, -1000, -1000,
	1299, -1000, 234, -1000, -1000, 305, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1722, 1716, 271, -1000, 1168, 1167, -1000,
	453, 1169, 703, -217, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 374, 1208, -1000, 156, -1000,
	-1000, 547, 1700, 1702, 1854, -1000, 29057, -1000, -1000, 29597,
	-1000, -1000, 170, 170, 24182, 1504, 24182, -1000, -1000, -1000,
	19862, -1000, 811, 1862, 1412, -1000, 817, 17702, -1000, -1000,
	-1000, -1000, -1000, -1000, 1272, 171, -277, 11190, 1408, 1272,
	-1000, -1000, -1000, -1000, -1000, 1023, -1000, 34457, -1000, -1000,
	-1000, 1053, 566, -1000, 296, 38477, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1013, -1000, -1000, 1092, 421, 155,
	-1000, 1802, -1000, 1488, 1007, 1710, 1852, 1706, 1704, -1000,
	1163, -269, 1404, 1294, 1486, 1282, 3566, 1280, -1000, 33917,
	1860, 1849, -1000, 1272, 275, 275, 1407, -1000, 1631, -260,
	-280, 1406, -1000, -1000, 1483, -350, -1000, 566, -1000, 290,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17702, 17702, 5690, 38477, 140, -1000, 139, -1000, -1000,
	-1000, 1153, -1000, 1712, -1000, 1148, -1000, 1843, 1838, -1000,
	182, 1862, 566, 24182, 566, -1000, 811, 1654, -210, 17702,
	17702, -1000, -1000, 186, -1000, 809, 295, 803, -1000, 1657,
	-1000, -1000, 1630, -1000, 33917, -1000, -1000, 1205, 1204, -1000,
	1054, 1052, 211, 205, 37186, -1000, -1000, -1000, -1000, -356,
	-1000, -1000, -1000, -1000, -1000, -1000, 1142, 1027, 26356, 1860,
	-1000, 1276, -1000, -1000, 336, -1000, 33917, -1000, 853, 1401,
	-1000, 853, 950, -1000, -1000, -1000, -1000, -1000, 33917, -271,
	1271, -1000, -1000, -1000, 905, -1000, 17702, 38477, 1829, 1826,
	1825, 1779, 10640, 38357, -1000, -1000, -1000, -1000, 113, 1358,
	-210, 566, 331, 1384, -1000, 1800, 17702, 186, -1000, -278,
	1542, 312, 931, 38477, -1000, 1005, -358, 463, 234, 473,
	19862, -1000, -1000, -1000, 29057, -1000, -1000, 1415, 33917, 1415,
	-1000, -1000, -283, 1538, 1536, 1872, -1000, -1000, -1000, -1000,
	-1000, -1000, 38477, -1000, -359, 38477, 3542, -1000, -1000, -1000,
	38247, -1000, -1000, -1000, -1000, 201, -1000, -1000, 3566, 1358,
	18782, -1000, -1000, -1000, -1000, 1890, -1000, 1888, 559, 559,
	-1000, -360, 38127, -361, 462, 38477, 883, -1000, 17702, -1000,
	473, -1000, 1053, 1272, -1000, -1000, -1000, 346, 1026, -1000,
	38017, 919, 38477, -1000, -365, 452, 38477, -1000, 894, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 37897, -1000, -366,
	38477, 451, 37787, -368, -1000, 441, 38477, -1000,
}

var yyPgo = [...]int{
	0, 2300, 2299, 10, 2297, 252, 2296, 2295, 33, 2294,
	24, 22, 15, 28, 2293, 2042, 2038, 2017, 2015, 2011,
	2290, 7, 2287, 2286, 1993, 2283, 2281, 1991, 1987, 1985,
	1982, 2279, 2278, 2277, 1975, 1970, 1968, 19, 2276, 18,
	2275, 2, 155, 176, 2273, 4, 2271, 2270, 17, 2261,
	2260, 1962, 2259, 2257, 2256, 108, 2254, 1959, 1957, 2253,
	1944, 1934, 2252, 2251, 1923, 1918, 1916, 2249, 191, 2248,
	2247, 2246, 185, 110, 162, 2245, 2244, 2243, 119, 88,
	2284, 133, 55, 120, 244, 2242, 34, 54, 248, 2240,
	2237, 152, 2236, 149, 2235, 165, 2234, 154, 86, 109,
	2233, 2230, 181, 2229, 2226, 2223, 143, 2222, 2219, 177,
	131, 2218, 2216, 164, 2213, 69, 171, 61, 48, 2212,
	2211, 2209, 2207, 2206, 36, 1047, 2205, 118, 160, 2204,
	2203, 90, 2197, 2196, 183, 2195, 2193, 2192, 145, 47,
	2191, 2189, 51, 2187, 77, 79, 2169, 64, 2166, 144,
	2165, 2164, 41, 21, 2163, 59, 2161, 56, 2160, 151,
	157, 1223, 2159, 49, 20, 12, 2158, 31, 13, 8,
	45, 26, 68, 71, 136, 111, 2157, 35, 43, 129,
	107, 2154, 103, 101, 44, 2152, 163, 2151, 98, 167,
	140, 146, 166, 2149, 2147, 2146, 1037, 2145, 139, 93,
	2144, 173, 1031, 180, 122, 2141, 102, 2139, 2125, 2124,
	2122, 2120, 105, 125, 2117, 2116, 184, 178, 186, 70,
	32, 958, 1885, 39, 172, 2115, 50, 2112, 2110, 2108,
	3175, 116, 92, 115, 169, 2107, 113, 37, 60, 2106,
	2105, 2104, 2103, 2102, 2101, 1753, 2100, 2099, 2098, 2097,
	228, 205, 2094, 141, 134, 132, 2089, 159, 40, 2088,
	2086, 142, 95, 2082, 2081, 2080, 2079, 130, 96, 161,
	2078, 121, 117, 137, 2077, 84, 2075, 2074, 53, 52,
	2073, 2070, 2068, 106, 97, 2067, 67, 38, 30, 72,
	46, 2066, 2065, 78, 85, 2061, 27, 2059, 5, 9,
	3, 2058, 2057, 2056, 2052, 2051, 2050, 2049, 87, 2048,
	2047, 66, 2046, 2045, 2040, 42, 2036, 2034, 2031, 153,
	124, 104, 175, 138, 14, 2029, 2024, 6, 2022, 126,
	2020, 63, 2013, 57, 2001, 1999, 58, 1997, 1995, 65,
	1989, 1980, 174, 1603, 263, 1950, 170, 192, 62, 94,
	1940, 1937, 0, 1146, 182, 168, 1929, 1925,
}

var yyR1 = [...]int{
	0, 351, 351, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 182, 182, 182,
	182, 181, 181, 90, 90, 88, 88, 95, 6, 6,
	7, 7, 10, 10, 71, 71, 11, 12, 12, 12,
	12, 354, 354, 104, 104, 102, 102, 103, 103, 179,
	179, 13, 13, 13, 186, 186, 191, 191, 191, 194,
	194, 194, 194, 169, 170, 171, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 325, 325,
	334, 334, 334, 335, 335, 333, 333, 333, 333, 333,
	337, 337, 338, 338, 336, 336, 336, 336, 340, 340,
	341, 341, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 328, 328, 328, 34,
	34, 34, 34, 35, 35, 35, 35, 35, 35, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	343, 343, 344, 344, 345, 345, 346, 346, 346, 346,
	347, 347, 347, 347, 347, 348, 348, 348, 348, 348,
	348, 348, 349, 349, 350, 350, 2, 306, 306, 307,
	307, 308, 308, 308, 308, 309, 309, 310, 310, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 25,
	218, 218, 215, 215, 215, 216, 216, 217, 217, 217,
	327, 327, 327, 321, 321, 321, 323, 323, 322, 322,
	322, 324, 324, 329, 329, 329, 329, 329, 331, 331,
	331, 331, 331, 331, 332, 332, 332, 330, 330, 49,
	49, 50, 50, 50, 158, 158, 158, 14, 14, 14,
	14, 14, 20, 22, 22, 38, 38, 39, 23, 23,
	23, 23, 40, 40, 41, 26, 26, 26, 26, 26,
	26, 47, 47, 47, 46, 46, 45, 45, 45, 45,
	45, 45, 24, 24, 24, 24, 48, 48, 43, 43,
	42, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 27, 27, 27, 27, 27, 27, 19,
	305, 305, 305, 37, 37, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 53, 280, 281, 281, 281,
	281, 281, 281, 281, 281, 268, 268, 269, 258, 258,
	258, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 237, 237, 237, 237, 241, 241, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 240, 240, 240,
	240, 240, 240, 240, 240, 242, 242, 242, 242, 242,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 244, 244, 244, 244, 244,
	244, 244, 244, 267, 267, 245, 245, 261, 261, 262,
	262, 262, 259, 259, 260, 260, 248, 249, 263, 250,
	250, 250, 251, 251, 251, 252, 252, 257, 257, 256,
	256, 256, 256, 256, 256, 253, 253, 253, 253, 254,
	254, 255, 266, 266, 266, 266, 266, 246, 36, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 292, 292, 208, 208, 209, 209, 270, 270, 290,
	290, 289, 289, 288, 288, 288, 279, 279, 285, 285,
	285, 285, 285, 285, 285, 285, 274, 274, 274, 273,
	273, 275, 275, 278, 278, 287, 287, 286, 286, 271,
	271, 271, 293, 293, 293, 293, 293, 272, 272, 272,
	272, 294, 276, 276, 277, 277, 277, 299, 300, 298,
	298, 298, 298, 298, 121, 121, 121, 282, 282, 282,
	283, 283, 283, 284, 284, 284, 303, 303, 302, 302,
	51, 52, 56, 56, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	157, 157, 157, 213, 213, 297, 295, 295, 296, 296,
	16, 16, 54, 54, 326, 326, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 301, 301, 301, 18, 18,
	57, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 85, 200, 200, 199,
	199, 198, 198, 198, 201, 201, 201, 201, 235, 235,
	235, 59, 59, 63, 63, 66, 66, 66, 64, 65,
	28, 29, 29, 29, 29, 30, 214, 214, 61, 61,
	62, 62, 62, 62, 77, 77, 356, 356, 60, 357,
	68, 69, 69, 70, 70, 70, 204, 204, 74, 74,
	74, 72, 72, 72, 73, 73, 79, 79, 83, 83,
	83, 83, 82, 82, 82, 82, 160, 160, 165, 227,
	227, 141, 141, 161, 161, 166, 166, 166, 167, 167,
	168, 168, 168, 168, 168, 163, 163, 162, 162, 164,
	129, 129, 225, 225, 225, 224, 224, 224, 224, 87,
	87, 91, 91, 93, 93, 93, 93, 93, 96, 143,
	143, 114, 114, 115, 115, 115, 115, 115, 127, 127,
	178, 178, 177, 177, 180, 180, 92, 94, 94, 94,
	94, 99, 99, 100, 100, 101, 101, 212, 212, 232,
	232, 232, 105, 105, 105, 107, 106, 106, 106, 106,
	108, 108, 109, 109, 111, 112, 112, 110, 110, 116,
	116, 113, 117, 117, 117, 117, 118, 118, 84, 84,
	84, 84, 84, 84, 84, 197, 197, 120, 120, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 137,
	137, 137, 137, 137, 137, 122, 122, 122, 122, 122,
	122, 122, 78, 78, 138, 138, 138, 98, 97, 97,
	81, 81, 80, 80, 139, 139, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	132, 132, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 355, 355,
	134, 133, 133, 133, 133, 133, 133, 75, 75, 75,
	75, 75, 233, 233, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 150,
	150, 76, 76, 148, 148, 149, 151, 151, 147, 147,
	147, 124, 124, 124, 124, 124, 124, 124, 124, 126,
	126, 126, 152, 152, 140, 140, 86, 153, 153, 154,
	155, 155, 156, 156, 159, 172, 172, 172, 173, 173,
	173, 173, 128, 128, 174, 174, 174, 123, 123, 123,
	123, 123, 123, 123, 176, 176, 175, 175, 175, 175,
	183, 183, 142, 142, 145, 145, 144, 146, 184, 184,
	188, 188, 185, 185, 189, 189, 189, 189, 192, 192,
	193, 193, 193, 190, 190, 190, 187, 187, 187, 229,
	229, 229, 195, 195, 205, 205, 202, 202, 203, 203,
	196, 196, 247, 247, 211, 211, 210, 210, 210, 206,
	206, 206, 207, 207, 226, 226, 222, 222, 228, 228,
	223, 223, 230, 230, 231, 231, 304, 304, 264, 264,
	314, 314, 265, 265, 315, 315, 317, 317, 312, 312,
	313, 313, 316, 316, 31, 318, 318, 319, 319, 320,
	320, 320, 320, 32, 33, 33, 33, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 352, 353,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 1, 3, 4, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 0, 2, 3, 3, 11,
	9, 11, 5, 5, 16, 12, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 4, 3,
	3, 6, 5, 5, 4, 3, 5, 1, 3, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 4, 5, 8, 1, 2, 5, 7, 10,
	8, 11, 1, 2, 5, 5, 5, 5, 6, 3,
	5, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 2, 4, 2, 4, 2, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 3,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 5, 4, 1, 1, 2,
	3, 4, 3, 3, 3, 3, 3, 3, 0, 1,
	1, 0, 2, 3, 2, 2, 2, 2, 2, 6,
	8, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 2, 3, 1, 0,
	3, 3, 0, 2, 2, 0, 1, 0, 1, 1,
	1, 1, 2, 2, 2, 5, 5, 4, 4, 4,
	4, 4, 2, 1, 2, 1, 2, 2, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 3, 2, 1,
	1, 0, 3, 1, 1, 0, 1, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 3, 2,
	1, 5, 1, 1, 0, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 0, 1, 3,
	1, 2, 3, 1, 1, 1, 0, 2, 0, 2,
	1, 5, 1, 3, 5, 4, 3, 5, 3, 8,
	10, 3, 3, 3, 3, 3, 5, 4, 5, 1,
	2, 2, 4, 3, 6, 5, 3, 8, 2, 2,
	0, 1, 2, 0, 1, 7, 1, 3, 8, 8,
	3, 3, 3, 5, 3, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 3, 4, 3, 5, 5, 5, 4, 4, 4,
	2, 2, 2, 6, 2, 4, 4, 4, 5, 8,
	6, 3, 5, 4, 2, 4, 3, 2, 4, 5,
	6, 2, 6, 6, 3, 3, 3, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 3, 2, 0, 1,
	1, 2, 1, 1, 1, 2, 4, 4, 1, 1,
	2, 3, 4, 4, 5, 3, 1, 1, 3, 3,
	1, 1, 1, 1, 0, 3, 1, 1, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 0, 1,
	1, 0, 1, 1, 0, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 2, 6, 0,
	1, 0, 3, 0, 1, 0, 2, 2, 4, 1,
	2, 2, 2, 2, 2, 0, 2, 1, 3, 3,
	1, 3, 0, 1, 2, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 4, 1, 3, 1, 2, 2,
	4, 2, 6, 1, 4, 6, 3, 2, 0, 3,
	0, 3, 1, 3, 1, 3, 4, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 1, 3, 3, 2, 1, 1, 3, 1,
	3, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 1, 3, 1, 0, 2, 1,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 0, 2, 4, 2, 4, 1,
	3, 5, 4, 6, 0, 3, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -351, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -71, 9,
	10, 29, -53, 179, -52, 182, 181, 217, 183, 210,
	64, 340, -66, 343, 344, -356, -214, 268, 269, 20,
	37, 345, 347, 30, 31, 231, 285, 287, 312, -5,
	-90, -6, 8, 439, 180, 341, 212, 211, 26, 488,
	-352, 68, 555, -155, 15, -68, -357, -68, -68, -68,
	-68, -68, -280, -212, 107, 68, 23, -207, -218, 88,
	430, 187, -216, 281, 283, -205, -206, -215, 241, 251,
	44, 198, 197, 252, 188, 281, 188, 189, 191, 430,
	187, 224, 223, 281, 283, 188, -110, -230, 72, -220,
	201, 499, 306, 485, 252, 550, 293, 238, 340, 354,
	356, 348, 383, 371, 486, 500, 202, 263, 186, 339,
	369, 372, 416, 200, 296, 256, 319, 501, 405, 411,
	266, 343, 425, 502, 203, 260, 262, 261, 246, 455,
	267, 36, 213, 367, 302, 360, 271, 241, 503, 493,
	235, 358, 35, 27, 236, 234, 428, 504, 330, 413,
	388, 331, 305, 505, 490, 300, 412, 363, 359, 312,
	204, 198, 332, 506, 389, 393, 507, 417, 286, 333,
	508, 509, 510, 190, 292, 352, 353, 511, 242, 419,
	297, 387, 32, 199, 487, 48, 221, 420, 38, 391,
	37, 397, 512, 329, 386, 381, 398, 513, 514, 515,
	516, 310, 308, 309, 311, 385, 351, 380, 253, 258,
	53, 185, 395, 394, 396, 259, 415, 376, 374, 517,
	518, 301, 205, 519, 520, 361, 18, 521, 522, 423,
	216, 303, 304, 42, 523, 524, 525, 111, 526, 527,
	528, 414, 390, 392, 240, 115, 364, 195, 529, 307,
	410, 316, 489, 290, 112, 421, 357, 531, 335, 347,
	220, 215, 424, 325, 532, 269, 533, 534, 535, 207,
	536, 284, 283, 344, 317, 113, 345, 407, 264, 537,
	538, 539, 540, 250, 233, 427, 418, 52, 268, 402,
	541, 320, 336, 350, 197, 270, 542, 294, 341, 43,
	7, 257, 298, 408, 318, 265, 251, 254, 378, 222,
	543, 544, 365, 366, 384, 349, 379, 342, 225, 217,
	110, 426, 403, 491, 281, 337, 373, 370, 228, 377,
	545, 546, 255, 229, 346, 422, 295, 368, 404, 188,
	132, 372, 416, 179, 406, 407, 413, -274, 414, 223,
	226, -235, 188, -200, 405, 286, 307, 460, 229, 230,
	189, 190, 32, 418, 417, 409, -230, 192, 346, -77,
	183, 218, -110, -48, 72, 270, -48, 29, 72, 72,
	36, 72, 345, 408, 408, 75, 489, 232, 21, -343,
	-324, 316, -342, -322, 180, 179, 10, 181, 321, 322,
	323, 189, 8, 30, 530, 206, 324, 325, 6, 210,
	326, 327, 224, 9, 328, -327, 74, 72, -220, 21,
	-343, -324, 316, -209, -208, 338, 397, 6, -70, 5,
	-196, 193, 342, -88, 498, -95, -232, -230, -221, 74,
	299, 209, 289, 400, 456, 457, 458, 459, 232, 460,
	473, 474, 98, 230, 321, 322, 313, 323, 208, 475,
	116, 239, 218, 278, 409, 277, 282, 461, 462, 476,
	477, 478, 463, 464, 288, 479, 480, 553, 291, 554,
	314, 482, 530, 483, 324, 481, 326, 227, 467, 466,
	465, 468, 327, 450, 451, 469, 51, 471, 470, 472,
	191, 81, -8, -3, -173, 17, 16, -74, 54, 55,
	-69, -82, 123, -84, -230, -119, 90, -125, 28, 72,
	-220, 24, -124, -221, -120, -147, -146, -98, 132, -234,
	121, 122, 129, 91, 175, -132, -130, -131, -133, -135,
	-136, 74, 73, 82, 75, 76, 77, 78, 83, 456,
	457, 458, 459, 460, 473, 474, 208, 475, 218, 461,
	462, 476, 477, 478, 463, 464, 479, 480, 482, 483,
	481, 467, 466, 465, 468, 450, 451, 469, 471, 470,
	472, 84, 85, -222, -144, -352, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 58, 59,
	187, 440, 441, 442, 443, 444, 484, 448, 93, 47,
	429, 438, 437, 436, 434, 435, 431, 433, 432, 194,
	430, 127, 439, -196, -196, 11, -102, -103, -110, -113,
	-230, -185, 342, -192, -189, 417, 418, -190, -193, -187,
	-147, 397, 527, 528, 416, 372, 415, -222, -230, -2,
	-5, 6, -110, -281, -269, -272, -223, 203, -294, -222,
	-219, 200, 72, -220, 299, 184, 209, 180, 89, 492,
	23, 25, 289, 400, 456, 92, 132, 457, 458, 459,
	16, 20, 93, 131, 81, 440, 232, 460, 179, 62,
	431, 433, 429, 430, 406, 28, 10, 26, 211, 245,
	22, 125, 181, 96, 97, 98, 230, 214, 321, 322,
	24, 212, 313, 85, 323, 208, 116, 239, 19, 65,
	218, 278, 11, 409, 226, 549, 285, 13, 454, 114,
	277, 14, 282, 194, 193, 109, 243, 189, 60, 8,
	175, 87, 106, 56, 461, 462, 495, 45, 231, 496,
	58, 107, 17, 434, 435, 30, 484, 463, 219, 497,
	464, 127, 248, 63, 50, 288, 90, 83, 553, 33,
	86, 66, 334, 88, 15, 244, 61, 452, 291, 554,
	314, 223, 530, 247, 498, 206, 108, 324, 182, 439,
	315, 287, 59, 187, 6, 449, 29, 210, 326, 249,
	227, 467, 466, 465, 468, 551, 57, 442, 443, 469,
	327, 547, 188, 95, 450, 451, 192, 224, 84, 5,
	44, 31, 9, 328, 64, 67, 436, 437, 438, 47,
	51, 471, 470, 472, 191, 552, 94, 12, 453, 488,
	189, 191, 439, -203, 194, -203, 224, 223, -217, 249,
	-203, -203, 188, -216, 99, 99, -54, -110, -326, -321,
	-327, -202, 194, -222, -202, -202, -202, -202, -202, -202,
	-202, -110, 176, -110, 72, 29, -201, 107, 12, 430,
	187, 188, 223, 224, 191, -276, 11, 109, 227, 227,
	227, 228, 227, -199, 408, 410, 225, 411, 412, 12,
	-85, 107, 19, -352, -173, -173, 72, 345, 192, -62,
	-3, -12, -10, -11, -8, 99, -127, 23, 29, 29,
	74, 51, 29, -43, -42, -44, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 29, -305,
	68, -264, 397, 72, -318, -319, -110, 75, 75, 66,
	66, 69, 192, 69, 66, -344, 317, 68, -344, 283,
	317, 318, 251, 281, 191, -344, -344, 283, -344, -344,
	-344, -344, -344, 408, -344, -344, -344, 319, 320, -344,
	406, 191, -344, -344, -344, -344, -344, 71, 66, 69,
	307, 66, 11, 66, -291, 132, 330, 331, 332, 333,
	329, 307, 334, 335, 336, 227, 337, -68, -7, -5,
	-352, 21, 22, 188, 421, 69, -88, -176, -352, -353,
	70, -174, 19, 30, -128, 75, 78, -156, -159, -84,
	-230, 50, -72, 21, 22, 80, 11, -225, 89, 88,
	106, -224, 23, 72, -220, -221, 74, 176, -84, -122,
	109, 90, 107, 108, 92, 118, 117, 128, 121, 122,
	123, 124, 125, 126, 127, 119, 120, 131, 99, 100,
	101, 102, 103, 104, 105, -197, -352, -98, -352, 177,
	178, -125, -125, -125, -125, -125, -125, -125, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -8, -139, -84, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -150, -84, -352, -355, -134,
	-352, -355, -134, -355, -134, -355, -352, -355, -134, -355,
	-134, -355, -355, -134, -355, -352, -352, -352, -352, -112,
	87, -110, -87, -91, -93, -94, -114, -97, -352, -92,
	-110, -98, 72, -110, -102, -354, 69, 11, 67, -354,
	69, 176, 69, -186, -191, 419, 421, 342, -190, -190,
	-229, -222, 74, 28, 99, 29, 176, -155, -68, 70,
	69, -272, 203, 200, -237, -241, -243, -242, -244, -239,
	-240, 369, 372, 376, 374, 370, 375, 132, 373, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	29, 213, 365, 366, 367, 368, 389, 390, 391, 392,
	393, 394, 395, 396, 348, 371, 486, 349, 350, 351,
	352, 353, 354, 356, 357, 358, 359, 360, 361, 362,
	363, 72, -221, -294, 68, -222, -110, -218, -216, 72,
	90, 72, -109, -222, -230, -116, -222, -230, 250, -330,
	-329, -321, -324, -203, -217, -321, 255, 253, 254, 69,
	192, 69, 192, 71, -102, 24, 66, -104, -110, 72,
	72, -109, -116, -323, -321, -324, -231, -230, -219, -201,
	74, -234, -84, -203, -203, -110, -110, -110, -110, -110,
	-201, -201, -201, -201, -198, 11, 109, 11, -198, -198,
	-84, -125, -321, 432, 123, 72, 72, 345, 72, 33,
	-43, -43, 74, -43, 69, 99, -43, 70, -139, -304,
	548, 69, -320, 23, 421, 422, 398, -346, 188, 226,
	223, -346, -342, 325, -323, -322, -321, -344, -345, -222,
	-344, -344, -344, 408, -344, -344, -344, -344, -344, -344,
	-344, -344, -327, -346, 285, 69, -346, -323, -321, 329,
	329, 329, 329, 329, 329, -74, -8, -110, 422, 423,
	-95, 23, -175, -223, -182, 87, 9, 109, 69, 18,
	69, -172, 25, 26, 176, -126, 51, 75, 78, -204,
	49, -110, -84, -84, -137, 83, 90, 84, 85, -224,
	123, -231, -223, -219, -125, -138, -144, -98, 79, 109,
	107, 108, 92, -125, -125, -125, -125, -125, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -233, 72,
	74, 72, -124, -124, -222, -72, -80, -83, 123, -84,
	-230, -80, -80, -72, -353, -353, -80, -83, -80, -80,
	-80, -80, -83, -80, -72, -72, -80, -353, -353, -353,
	-353, -80, -80, -80, -80, -222, -222, -72, -80, -80,
	-80, -72, -353, 69, -353, -8, -80, -80, -353, -84,
	-84, -147, 74, -80, -147, 74, -80, -125, 445, 446,
	447, -80, -72, -148, -149, 94, -147, -353, -125, -80,
	-81, -80, -80, -80, -179, 111, -110, 29, 69, -105,
	-107, -106, -108, 56, 60, 62, 57, 58, 59, 63,
	-212, -87, -96, 47, -352, -115, 111, -117, 23, -232,
	64, 193, 65, -352, -179, 67, -87, -110, -87, -113,
	-230, 123, -189, -192, 69, 420, 422, 423, -186, -251,
	131, 66, 86, -84, -223, -231, -173, -74, -282, -283,
	-284, -223, 74, 75, -269, -270, -271, -272, -285, 203,
	-293, 195, 197, 198, 44, -273, 204, 189, 45, -238,
	-259, 403, -245, 68, -245, -245, 377, 369, 372, 370,
	-245, -245, -245, -245, -245, -250, 372, -250, -250, -250,
	-250, 370, 68, 68, -245, -245, -245, -261, 68, -261,
	364, -262, 68, -262, -262, -262, -262, -294, -294, -84,
	-226, 67, 23, 191, -257, -256, -253, -254, -255, -252,
	28, 24, -257, -49, 238, 209, 176, 68, 176, 241,
	242, -325, 69, 28, -331, 282, -110, -110, -110, -321,
	-321, -327, -301, 207, 202, -110, 69, 69, 74, 72,
	72, -127, -277, 11, 109, -201, -230, -230, -110, -127,
	-201, -78, 214, 67, -355, -353, 72, -125, -42, -124,
	70, -111, 87, 74, -319, -232, 397, 422, -347, 123,
	-222, -347, -350, 488, 192, 70, 69, -344, -347, 303,
	285, -347, 11, -292, 19, -72, -353, -56, -55, 184,
	181, 182, 185, 186, -297, 400, 180, 235, 234, 220,
	-97, -352, -353, 69, 176, -181, 34, 35, -222, 52,
	-128, -128, -159, -195, 19, 11, 47, 47, -73, 57,
	83, 84, 85, 176, -352, -138, -125, -125, -125, -78,
	89, -353, -80, 69, -353, 176, -353, -353, -80, -160,
	452, -160, -353, -353, -353, -353, -353, -353, -353, -353,
	-80, -80, -353, -160, -160, -160, -160, -353, -353, -353,
	-353, 69, 69, -80, -353, -353, -353, -81, -84, -353,
	-353, -353, 69, 67, 23, 11, 11, -353, 11, 11,
	-353, -353, 11, -125, -125, -125, -353, -80, -151, -149,
	96, -84, -353, -353, -353, -353, -353, -353, -123, 29,
	47, -352, -8, -352, -184, -188, -147, -219, -91, -93,
	-93, -91, -93, 56, 56, 56, 61, 56, 61, 56,
	-106, -232, -353, -353, -143, 237, -352, 33, -232, -117,
	189, 189, 189, -81, -118, 12, -87, -118, -118, 176,
	-191, -194, 424, 421, 427, 72, 74, 176, -174, 69,
	-284, 99, -272, 68, 72, -278, -221, 45, -273, 189,
	45, -275, -273, -273, -278, 72, -278, 45, 83, 90,
	-248, -249, -263, -266, -246, 23, 549, 28, 66, 400,
	195, 45, 44, 198, 81, -260, 404, 75, -250, -250,
	-245, -245, -245, 377, -245, -250, -251, 29, -251, -251,
	-251, -251, -250, -267, 74, -267, 75, -261, 75, 70,
	66, -222, -169, -110, -254, -253, -255, 372, 416, 131,
	428, -50, 8, 9, 10, -222, -306, -307, -308, -222,
	109, 243, 244, -222, -334, 315, -329, 283, 292, 89,
	16, 488, 192, 192, -110, -321, -118, 72, 72, -198,
	-201, -125, -324, 229, 230, -179, 188, -320, 192, 176,
	176, 192, 306, -323, -222, 11, 11, 303, 11, -323,
	339, -204, 69, -213, -273, -303, -271, -272, -302, 196,
	203, 204, -213, 203, 200, -273, 204, 195, 196, -210,
	-273, 192, 23, -213, -213, -279, 99, -213, 32, 32,
	111, -223, -223, 69, 74, 74, 53, -110, -79, -170,
	123, -223, -81, -78, 89, -125, -353, -83, -161, -160,
	123, -231, -161, -161, -353, -222, -165, -352, -160, -161,
	-161, -160, -160, -160, -353, -353, -160, -161, -161, -161,
	-161, -125, -125, -353, -161, -161, -161, -353, -236, 132,
	369, 213, 367, 360, 387, 374, 402, 365, 403, -233,
	-236, -125, -125, -125, -125, -125, 11, 11, 11, 485,
	-155, 98, -84, 95, -183, 66, -184, -142, -145, -144,
	-352, -8, -353, -175, 6, 488, -180, -222, -118, 69,
	99, 99, -100, -99, 66, 67, -101, 66, -99, 56,
	56, -178, 68, 69, -144, -352, -180, -125, -117, -352,
	-352, -352, -353, -155, -84, -118, 421, 425, 426, -283,
	-284, -287, -286, -222, -221, 195, -293, 44, -293, -278,
	-278, -278, 68, 83, -352, 550, -125, 9, 45, 45,
	45, 74, 70, -251, -251, -250, -245, -251, 72, 132,
	-251, 70, 69, 70, 69, 70, 69, -121, 504, 90,
	-110, -171, 23, 29, -279, -279, -279, 66, 70, 69,
	-237, -222, -222, -222, -337, 488, 288, -335, -333, 294,
	295, 296, 297, 298, -324, 293, -331, 290, 74, 72,
	-110, -321, -127, -250, -110, -323, 123, 123, -222, -323,
	303, -349, 488, -323, -323, 11, -323, 74, -73, -55,
	68, -268, 72, -221, -278, -206, 195, 72, 72, 72,
	-221, 72, -221, -222, 45, 45, 72, -110, -222, -268,
	72, -84, -222, -222, 176, -222, -182, 69, -82, -353,
	-125, -161, 176, -161, -227, 72, -161, -161, 69, 69,
	-161, -353, -245, -245, -245, -262, -245, 353, -245, 353,
	-353, -353, 19, 19, 19, 19, -353, -125, -125, -125,
	-352, -76, 449, -84, 27, -183, 69, -353, -353, 47,
	-353, -353, 69, -155, -188, -84, -84, -84, 68, -84,
	-177, -222, 237, -353, -117, -212, -177, -177, -177, -173,
	70, 69, -245, -245, 45, -275, -177, -125, 23, -131,
	450, 451, -251, -250, 74, -250, 75, 75, 504, 68,
	-8, -169, -279, 72, 132, 72, 132, 74, -110, -309,
	-310, -311, 81, 487, 90, 245, 246, 205, 247, 248,
	249, -308, -237, -237, -237, -340, -341, -339, 291, 313,
	314, 299, -338, -336, 308, 309, 310, 311, 89, 74,
	74, 74, -332, 282, 89, 291, 16, 23, -201, -312,
	-199, -349, -349, 285, -323, -79, -268, -157, 208, 209,
	-237, -237, -226, -275, 45, 72, -211, 192, 23, 192,
	-157, -268, 29, 181, 87, -223, -89, 11, -170, -170,
	123, -141, 111, -125, -125, -250, 72, -125, -125, -125,
	-125, -353, -353, -353, -125, -353, 74, 45, -145, -142,
	47, -8, -352, -222, -173, -177, 70, 69, -144, -115,
	-232, -353, -353, -353, -289, -288, 67, 199, 81, -286,
	-172, -172, -278, 70, -353, -352, -251, -251, 70, 70,
	-287, -169, -171, 72, 132, 19, -170, -311, 74, 249,
	245, 249, 249, 249, 249, 250, -328, 81, 289, -339,
	300, 509, 284, 315, 75, 75, 110, 30, 31, -336,
	75, 75, 75, 75, -333, 16, 488, -331, 290, 74,
	74, -313, 38, -315, 39, -348, 23, -348, 303, 11,
	70, 72, -238, -238, 68, -278, 68, 72, -222, -157,
	28, 28, -352, -118, -87, -82, -155, 16, -353, -353,
	-353, -353, -353, -353, -75, 109, 488, 9, -142, -8,
	70, -222, -117, -288, 72, -279, 74, 206, -258, 552,
	551, -125, 70, -8, 236, -171, 36, 36, 241, 242,
	74, 74, 28, 301, 175, 28, 75, 175, 455, 290,
	74, 72, 291, -247, 193, -316, 43, -314, -265, 42,
	16, -321, -87, -287, -226, -287, -125, -295, -296, 111,
	-152, 13, -170, -166, 113, 112, -139, -353, 486, 63,
	489, -184, -353, 75, -110, -353, -290, -289, -169, 237,
	-21, -3, -10, -11, -12, -13, -15, -51, -16, -17,
	-22, -23, -18, -57, -58, -66, -64, -65, -61, -60,
	-26, -24, -27, -19, -28, -29, -30, -34, -35, -25,
	-36, 93, 194, 271, 340, 75, 28, 75, 28, 304,
	291, 23, -178, 75, -315, 16, -317, 40, 41, 74,
	488, -118, 70, 68, 70, -353, 69, -222, -153, 14,
	16, -353, -167, 92, -168, 110, 455, -129, 75, 175,
	-167, 53, 487, 490, 68, -258, -158, 239, 240, -169,
	-84, -84, 72, -47, -228, 274, 275, 276, -223, -37,
	-21, 302, 302, 74, 38, 74, 16, 16, 283, -152,
	-290, -287, -290, -296, 47, -163, 453, -154, -84, -140,
	-86, -84, -168, 115, 116, 237, 115, 116, -124, 53,
	-177, -169, 72, 72, -38, -39, 94, 95, 272, 273,
	277, -237, 69, 555, 74, 74, 28, 288, 21, -324,
	-153, 70, 221, -162, -164, -222, 69, 89, -222, 488,
	70, -171, 98, 96, -39, -84, -37, 19, 19, 19,
	28, -223, 98, -21, 305, -163, -290, 222, 69, 23,
	-86, -168, 489, -299, -300, 66, -14, -20, -13, -10,
	-11, -12, 340, 93, -37, 95, 555, -48, 75, -8,
	-46, -45, 75, -48, 279, 90, 280, 72, -125, -324,
	-352, -164, -165, 490, -300, 66, -299, 66, 10, 9,
	-169, -37, 555, -37, 98, 96, -40, -41, 97, -21,
	69, 278, -125, 219, -298, 207, 202, 205, 29, -298,
	555, 98, 555, 194, -37, 98, 96, -41, -84, -45,
	-353, -353, 201, 28, 83, 98, 93, 555, 194, -37,
	95, 98, 555, -37, 194, 98, 555, 194,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 749, 749, 749, 749,
	749, 749, 847, -2, 610, 0, 0, 0, 0, -2,
	722, 723, 724, 728, 729, 744, 746, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 41,
	0, 0, 64, 65, 1200, 0, 747, 736, 737, 0,
	0, 1744, 2, 1138, 0, 758, 751, 0, 1200, 1200,
	0, 0, 96, 0, 0, 0, 848, 0, 0, 0,
	1198, 1198, 247, 1198, 1198, 0, 1213, 245, 0, 1195,
	1209, 1210, 1211, 0, 0, 0, 1196, 0, 1196, 1196,
	1196, 1196, 1196, 1196, 1196, 0, 669, 867, 1222, 1223,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 0,
	0, 0, 714, 0, 680, 681, 682, 0, 684, 0,
	0, 0, 0, 0, 694, 697, 701, 0, 1138, 1138,
	556, 557, 558, 719, 720, 708, 721, 0, 0, 0,
	0, 0, 828, 322, 324, 0, 344, 0, 347, 350,
	1228, 730, 0, 0, 1253, 1254, 0, 0, 0, 0,
	0, 1594, 190, 261, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 0, 192, 192, 192, 1606, 192, 0,
	192, 192, 192, 192, 192, 260, 250, 251, 252, 0,
	0, 0, 1594, 0, 536, 533, 534, 749, 0, 753,
	0, 1201, 725, 53, 0, 55, 1154, 849, 850, 851,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 0, 39, 1144, 0, 0, 761, 759, 760,
	750, 0, 772, 802, 0, 878, 0, 883, 885, -2,
	-2, 0, 926, 927, 928, 929, 930, 931, 0, 0,
	0, 0, 0, 0, 0, 954, 955, 956, 957, 958,
	959, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1686,
	1687, 1688, 1689, 1691, 1692, 1693, 1700, 1701, 1704, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1723, 1725,
	1727, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1739, 1740,
	1741, 887, 888, 1108, 1167, 0, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 77,
	867, 81, 1660, 0, 1172, -2, -2, 1174, 0, 0,
	0, -2, -2, -2, -2, 1454, -2, 1108, 0, 97,
	1130, 749, 98, 0, 387, 388, 0, 1467, 580, 1220,
	1221, 1456, 1216, 1217, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	0, 0, 245, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 1198, 247, 0, 0, 650, 0, 651, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 0, 670, 671, 714, 673, 0, 0, 1198,
	1198, 0, 0, 0, 0, 0, 582, 583, 714, 714,
	714, 714, 711, 0, 711, 691, 711, 709, 710, 0,
	696, 0, 0, 0, 704, 705, 731, 0, 0, 738,
	740, 741, 742, 743, 739, 0, 748, 0, 0, 0,
	326, 0, 0, 346, 328, 0, 331, 332, 333, 334,
	335, 336, 337, 338, 339, 340, 341, 342, 0, 349,
	0, 1226, 1229, 735, 1244, 1245, 0, 1255, 1256, 196,
	196, 0, 0, 0, 0, 159, 192, 0, 161, 192,
	192, 192, 0, 192, 192, 168, 169, 192, 171, 172,
	173, 174, 175, 192, 177, 178, 179, 192, 192, 182,
	192, 192, 185, 186, 187, 188, 189, 259, 196, 0,
	0, 196, 0, 0, 518, 0, 0, 0, 0, 523,
	524, 525, 526, 0, 0, 529, 530, 758, 43, 60,
	0, 754, 755, 0, 0, 0, 54, 0, 0, 59,
	1745, 47, 0, 0, 1139, 1142, 1143, 1131, 1132, 1135,
	0, 0, 756, 762, 763, 752, 0, 773, 0, 0,
	0, 803, 0, 805, 806, 807, 808, 0, 881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 905, 906,
	907, 908, 909, 910, 911, 884, 0, 898, 0, 0,
	0, 947, 948, 949, 950, 951, 952, 0, 761, 0,
	0, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 0, 0, 0,
	761, 0, 0, 924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 1100, 0, 1011, 1020,
	0, 1012, 1021, 1013, 1022, 1014, 0, 1015, 1023, 1016,
	1024, 1017, 1018, 1025, 1019, 0, 920, 0, 0, 79,
	0, 866, 0, 809, 811, 812, 813, -2, 0, 817,
	872, 918, 1222, -2, 0, 0, 0, 71, 72, 0,
	0, 0, 0, 82, 84, 0, 0, 1660, 1175, 1176,
	492, 1189, 1190, 1191, 0, 1187, 0, 1138, 758, 597,
	0, 389, 0, 0, 401, 482, 412, 413, 414, 475,
	416, 475, 475, 0, 475, 475, 475, 475, 475, 489,
	489, 489, 489, 489, 458, 459, 460, 461, 462, 0,
	0, 435, 475, 475, 475, 439, 465, 466, 467, 468,
	469, 470, 471, 472, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 477, 477, 479, 479, 479, 479,
	479, 0, 0, 579, 0, 1214, 0, 0, 247, -2,
	0, -2, 0, 862, 0, 0, 869, 0, 0, 108,
	277, 263, 107, 0, 241, 246, 242, 243, 244, 0,
	0, 0, 0, 254, 665, 1197, 0, 658, 73, 659,
	660, 661, 662, 663, 256, 664, 868, 1224, 1225, 672,
	715, 0, 717, 0, 0, 828, 677, 678, 679, 584,
	685, 686, 687, 693, 714, 0, 0, 0, 828, 714,
	695, 912, 698, 1028, 0, 733, 732, 0, 745, 0,
	323, 325, 327, 345, 0, 0, 348, 351, 0, 0,
	0, 0, 1247, 0, 1249, 1251, 0, 0, 197, 198,
	199, 0, 191, 0, 214, 262, 0, 160, 0, 194,
	162, 163, 164, 192, 166, 167, 170, 176, 180, 181,
	183, 184, 258, 0, 0, 0, 0, 157, 0, 519,
	520, 521, 522, 531, 528, 761, 0, 0, 726, 727,
	56, 0, 0, 1156, 37, 0, 1145, 0, 0, 0,
	0, 1134, 1136, 1137, 0, 0, 1119, 0, 0, 764,
	757, 40, 879, 880, 882, 899, 0, 901, 903, 804,
	774, 0, 1109, -2, 889, 890, 914, 915, 916, 0,
	0, 0, 0, 912, 894, 0, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 946, 1042,
	1043, 0, 944, 945, 953, 0, 0, 922, 768, 769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 920, 917, 0, 1166, 0, 0, 0, 993, 0,
	0, 929, 1111, 0, 929, 1111, 0, 0, 0, 0,
	0, 0, 0, 1106, 1103, 0, 0, 1029, 0, 0,
	0, 921, 0, 0, 0, 0, 865, 0, 0, 0,
	0, 0, 0, 852, 0, 0, 855, 0, 0, 0,
	0, 0, 0, 0, 0, 821, 1580, 823, 0, 872,
	0, 0, 0, 920, 876, 0, 876, 76, 876, 78,
	0, 871, 1173, 0, 0, 0, 87, 88, 83, 1177,
	0, 1183, 1184, 1185, 1109, 0, 1144, 761, 386, 598,
	600, 603, 604, 605, 390, 392, 393, 394, 0, -2,
	571, 1590, 1637, -2, -2, 563, 1503, -2, -2, 397,
	484, 483, 415, 0, 489, 489, 475, 475, 475, 475,
	444, 489, 447, 450, 451, 492, 0, 492, 492, 492,
	492, 489, 0, 0, 436, 437, 438, 427, 0, 428,
	477, 430, 0, 431, 432, 433, 434, 577, 578, 0,
	0, 0, 93, 0, 102, -2, 499, 500, 501, 0,
	496, 1199, 103, 0, 279, 280, 0, 217, 0, 248,
	249, 110, 0, 0, 264, 0, 385, 0, 652, 0,
	654, 253, 656, 666, 667, 657, 0, 0, 716, 674,
	675, 676, 876, 0, 0, 688, 712, 713, 711, 714,
	692, 706, 0, 0, 699, 0, 734, 829, 329, 330,
	352, 79, 0, 1227, 1246, 0, 1250, 1252, 0, 200,
	202, 0, 151, 0, 0, 193, 0, 165, 0, 0,
	0, 0, 0, 527, 0, 756, 61, 611, 612, -2,
	643, 1206, 643, 643, 629, 546, 643, 0, 0, 0,
	57, 0, 1155, 0, 0, 48, 0, 1485, 51, 0,
	1140, 1141, 1133, 0, 1192, 1193, 1120, 1121, 94, 765,
	900, 902, 904, 0, 920, 891, 912, 895, 0, 892,
	0, 886, 0, 0, 783, 0, 783, 783, 0, 979,
	0, 980, 1007, 0, 992, 783, 783, 0, 0, 0,
	0, 0, 0, 986, 987, 988, 989, 783, 783, 783,
	783, 0, 0, 0, 783, 783, 783, 0, 925, -2,
	990, 991, 0, 0, 0, 0, 0, 1035, 0, 0,
	1036, 1001, 0, 0, 0, 0, 0, 1130, 0, 1104,
	0, 0, 1010, 1030, 1031, 1032, 1033, 1034, 1160, 0,
	0, 0, 1149, 0, 876, 1168, 0, 0, 810, 843,
	845, 0, 840, 853, 854, 856, 0, 858, 0, 860,
	861, 830, 816, 919, 818, 0, 0, 0, 872, 827,
	0, 0, 0, 0, 1130, 0, 876, 69, 70, 0,
	85, 86, 0, 0, 92, 493, 494, 0, 216, 0,
	601, 0, 391, 0, 564, 0, 0, 548, 563, 559,
	560, 563, 562, 563, 554, 564, 555, 0, 402, 0,
	404, 405, 406, 407, 408, 0, 0, 0, 0, 488,
	0, 513, 515, 0, 0, 411, 485, 0, 492, 492,
	489, 442, 443, 475, 448, 492, 452, 0, 453, 454,
	455, 456, 492, 0, 473, 0, 0, 429, 0, 594,
	0, 1215, 95, 0, 502, 503, 504, 0, 546, 546,
	546, 0, 281, 282, 283, 863, 0, 218, 219, 0,
	0, 0, 0, 870, 120, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 74, 257, 683, 585, 586, 828,
	690, 913, 700, 702, 703, 489, 0, 1248, 0, 0,
	0, 0, 0, 212, 195, 0, 0, 0, 0, 158,
	0, 764, 0, 0, 563, 0, 630, 631, 0, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1207, 1208, 0, 0, 0, 547, 0, 638, 639,
	0, 1158, 1157, 0, 49, 50, 1146, 38, 47, 0,
	775, 1110, 0, 893, 0, 896, 783, 923, 964, 784,
	770, 0, 965, 966, 783, 776, 777, 779, 981, 968,
	969, 982, 983, 984, 783, 783, 985, 973, 972, 971,
	974, 0, 0, 783, 977, 976, 978, 960, 0, 475,
	475, 1089, 475, 479, 1092, 475, 1094, 475, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1101, 1009, 1107, 0, 62, 0, 1160, 1147, 1162, 1164,
	0, 0, 0, 0, -2, 1432, 0, 834, 1130, 0,
	0, 0, 837, 844, 0, 0, 838, 0, 839, 857,
	859, 814, 0, 0, 819, 0, 0, -2, 826, 0,
	0, 0, 836, 1138, 877, 68, 89, 90, 91, 599,
	602, 0, 565, 475, 475, 0, 569, 561, 570, 550,
	551, 553, 0, 403, 0, 0, 486, 0, 512, 514,
	516, 517, 476, 440, 441, 492, 449, 445, 490, 491,
	457, 489, 0, 489, 0, 480, 0, 581, 595, 0,
	0, 0, 93, 546, 0, 0, 0, 0, 225, 0,
	221, 0, 0, 0, 128, 0, 111, 112, 113, 115,
	116, 0, 0, 0, 109, 0, 266, 0, 269, 270,
	653, 655, 714, 1238, 864, 212, 201, 203, 204, 212,
	215, 152, 0, 153, 155, 0, 154, 532, 94, 613,
	0, 640, 0, 0, 1214, 561, 0, -2, 616, 621,
	622, 623, 624, 625, 0, 636, 0, 618, 0, 640,
	0, 633, 0, 0, 0, 52, 45, 94, 94, 961,
	897, 963, 0, 967, 781, 780, 962, 970, 0, 0,
	975, 994, 1086, 489, 1090, 1091, 1093, 1095, 1096, 1098,
	996, 995, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 1105, 0, 63, 0, 1165, -2, 0,
	0, 80, 0, 1138, 1169, 1170, 1171, 841, 0, 846,
	0, 832, 0, 872, 824, 0, 0, 0, 0, 67,
	538, 0, 1135, 1135, 549, 563, 0, 0, 0, 487,
	0, 0, 446, 492, 474, 492, 0, 0, 596, 0,
	93, 95, 0, 507, 508, 509, 510, 511, 0, 94,
	226, 227, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 220, 222, 223, 224, 146, 129, 130, 0, 0,
	0, 0, 121, 122, 0, 0, 0, 0, 0, 117,
	118, 119, 265, 0, 0, 268, 0, 0, 689, 1240,
	1234, 205, 205, 0, 156, 0, 0, 615, 641, 0,
	401, 401, 0, 563, 0, 632, 0, 1204, 1205, 0,
	627, 640, 0, 0, 0, 1159, 876, 0, 0, 766,
	771, 1130, 0, 0, 0, 1087, 1088, 0, 0, 0,
	0, 1003, 1004, 1005, 1037, 1008, 1102, 0, 1163, 1148,
	0, 1152, 0, 835, 66, 0, 831, 0, 820, 822,
	872, 873, 874, 875, 537, 541, 0, 546, 0, 566,
	567, 568, 552, 0, 398, 0, 463, 464, 478, 481,
	0, 100, 0, 505, 506, 0, 95, 228, 229, 230,
	231, 233, 234, 0, 0, 0, 106, 0, 0, 131,
	0, 0, 0, 0, 141, 142, 143, 144, 145, 123,
	124, 125, 126, 127, 114, 0, 0, 267, 0, 272,
	273, 1202, 1242, -2, 0, 149, 0, 150, 213, 0,
	614, 642, 395, 396, 0, 1214, 0, 617, 626, 628,
	0, 635, 0, 1122, 46, 94, 785, 0, 1026, 1027,
	997, 999, 998, 1000, 0, 0, 0, 0, 1151, 0,
	842, 833, 825, 542, 543, 0, 545, 0, 409, 399,
	400, 0, 539, 93, 0, 0, 235, 236, 237, 238,
	147, 148, 132, 133, 0, 135, 136, 0, 0, 0,
	275, 0, 271, 830, 0, 1234, 0, 1236, 0, 1233,
	0, 206, 876, 0, 0, 0, 634, 0, 646, 0,
	1127, 0, 767, 0, 0, 0, 782, 1006, 0, 0,
	0, 1161, -2, 544, 0, 398, 99, 540, 101, 284,
	93, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 0, 0, 0, 0, 137, 0, 139, 140,
	274, 0, 36, 0, 1241, 0, 1239, 0, 0, 1235,
	0, 1122, 539, 0, 539, 645, 0, 0, 795, 0,
	0, 778, 786, 0, 789, 0, 0, 0, 800, 0,
	787, 1038, 0, 1041, 0, 410, 93, 0, 0, 105,
	0, 0, 1216, 0, 0, 311, 312, 313, 1218, 0,
	353, 134, 138, 276, 1203, 1243, 0, 0, 0, 1127,
	619, 0, 637, 647, 0, 44, 0, 1128, 1129, 1123,
	1124, 1126, 0, 790, 791, 792, 793, 794, 0, 1039,
	0, 95, 285, 286, 0, 295, 0, 0, 0, 0,
	0, 309, 0, 0, 1237, 1231, 207, 208, 209, 211,
	795, 539, 0, 796, 797, 0, 0, 0, 801, 0,
	572, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 1219, 239, 354, 0, 42, 620, 0, 0, 0,
	1125, 788, 0, 573, 574, 0, 93, 287, 288, 289,
	290, 291, 0, 293, 0, 0, 0, 305, 306, 307,
	0, 314, 316, 317, 318, 0, 320, 321, 310, 210,
	0, 798, 799, 1040, 575, 0, 576, 0, 0, 0,
	104, 0, 0, 0, 0, 0, 0, 302, 0, 308,
	0, 319, 0, 0, 587, 589, 590, 0, 0, 588,
	0, 0, 297, 298, 0, 0, 0, 303, 0, 315,
	648, 649, 591, 592, 593, 292, 294, 0, 300, 0,
	0, 0, 0, 0, 299, 0, 304, 301,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 91, 3, 3, 3, 126, 118, 3,
	68, 70, 123, 121, 69, 122, 176, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 555,
	100, 99, 101, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 117, 3, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 92, 93, 94, 95, 96,
	97, 98, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 119, 120, 125,
	127, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:516
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:520
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:562
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:574
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:585
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
			if yyDollar[1].selStmt.HasIntoDefined() {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:601
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:608
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:612
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:619
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:625
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:633
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:637
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:643
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:647
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:651
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:661
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:665
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:671
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:685
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:691
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			if yyDollar[1].selStmt.HasIntoDefined() {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:705
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			if yyDollar[1].selStmt.HasIntoDefined() {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:725
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 63:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:737
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:749
		{
			yyVAL.str = InsertStr
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			yyVAL.str = ReplaceStr
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:759
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:765
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:769
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:773
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:777
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:791
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:797
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:801
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:807
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:811
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:816
		{
			yyVAL.partitions = nil
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:820
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:830
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:837
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:860
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:864
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:870
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:878
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:887
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:892
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:897
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:903
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:912
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:917
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:922
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 100:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:926
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:932
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:938
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:946
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 104:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:954
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 105:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:958
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:962
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:981
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:990
		{
			yyVAL.accountNames = nil
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:999
		{
			yyVAL.tlsOptionItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yyVAL.tlsOptionItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1013
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1023
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1027
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1031
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1044
		{
			yyVAL.accountLimitItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1048
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1054
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1068
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1081
		{
			yyVAL.passLockItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1085
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1101
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1105
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1109
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1121
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1125
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1129
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1133
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1137
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1141
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1149
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1153
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1158
		{
			yyVAL.str = ""
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1162
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1173
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1178
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1182
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1186
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1192
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1197
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1201
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1205
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1209
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1213
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1223
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1243
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1255
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1354
		{
			yyVAL.strs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1364
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1368
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1377
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1381
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1391
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1395
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1407
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1412
		{
			yyVAL.grantAssumption = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1420
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1424
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1428
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1432
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1436
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1441
		{
			yyVAL.boolean = false
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyVAL.boolean = true
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1450
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1461
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1469
		{
			yyVAL.procedureParams = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1483
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1489
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1493
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1497
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1501
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1506
		{
			yyVAL.characteristics = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1520
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1526
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1530
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1534
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1550
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1554
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1562
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1568
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1634
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1642
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1656
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1662
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1692
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1702
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1706
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1710
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1714
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1720
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1724
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1728
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1732
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1736
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1740
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1746
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1754
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1764
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = BeforeStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = AfterStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = InsertStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = UpdateStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = DeleteStr
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1793
		{
			yyVAL.triggerOrder = nil
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1797
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1817
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1823
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1827
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1843
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1849
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 299:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1854
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1859
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1865
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1877
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1883
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1889
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1893
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 308:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1901
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1905
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1909
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1978
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2004
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.statement = &Resignal{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2072
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2086
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2091
		{
			yyVAL.exprs = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.exprs = nil
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2099
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2109
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2150
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2166
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2183
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2193
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2212
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2220
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2239
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2252
		{
			yyVAL.columnType = ColumnType{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2256
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2283
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2292
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2301
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2319
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2328
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2511
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2519
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2543
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2612
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2617
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2622
		{
			yyVAL.sqlVal = nil
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2626
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2631
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2635
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2643
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2647
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2653
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2670
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2680
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2686
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2697
		{
			yyVAL.str = ""
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2710
		{
			yyVAL.str = ""
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2714
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2718
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2723
		{
			yyVAL.boolean = false
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.boolean = true
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2732
		{
			yyVAL.charsetCollates = nil
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2754
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2768
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2772
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2776
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2780
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2786
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2790
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2796
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2802
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.colKeyOpt = colKey
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2810
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2818
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2824
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2830
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2836
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2840
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2860
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2864
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2872
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = ""
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = ""
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = yyDollar[1].str
		}
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2902
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2906
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			yyVAL.indexOptions = nil
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2925
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2940
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2956
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2960
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2964
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2968
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2972
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2981
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2985
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2999
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3018
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3022
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3027
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3041
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3051
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3061
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 572:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3071
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 573:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3075
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 574:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3079
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 575:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3083
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 576:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3087
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3093
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3097
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3101
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3111
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3121
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3126
		{
			yyVAL.str = ""
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3130
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3134
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3140
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3146
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3156
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3173
		{
			yyVAL.boolean = true
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3177
		{
			yyVAL.boolean = true
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.boolean = false
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3186
		{
			yyVAL.str = ""
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = yyDollar[1].str
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3206
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3216
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = ""
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3238
		{
			yyVAL.str = string("")
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3242
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3251
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3264
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3268
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3274
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3281
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3288
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3292
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 619:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3301
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 620:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3305
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3309
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3314
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3324
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3333
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3337
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3344
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3360
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3366
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 634:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3375
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3379
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 637:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3387
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3393
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3402
		{
			yyVAL.columnOrder = nil
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3406
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3410
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3415
		{
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
		}
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3421
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3431
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 648:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3437
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 649:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3441
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3457
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3461
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3469
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3473
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3479
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3487
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3491
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3499
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3507
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3515
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3523
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3531
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3539
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3548
		{

		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3552
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3556
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3566
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3577
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3582
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3590
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3594
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3598
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3603
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3607
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3611
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3615
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3623
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3627
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3631
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3635
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3639
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3643
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3647
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 689:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3651
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 690:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3656
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3665
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3669
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3677
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3695
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3700
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3704
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3709
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 702:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3713
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 703:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3717
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3721
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3725
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3731
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3737
		{
			yyVAL.boolean = false
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3741
		{
			yyVAL.boolean = true
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3771
		{
			yyVAL.showFilter = nil
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3789
		{
			yyVAL.str = ""
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.str = SessionStr
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			yyVAL.str = GlobalStr
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3803
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3807
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.statement = &Begin{}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3823
		{
			yyVAL.statement = &Begin{}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3827
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3831
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.statement = &Commit{}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.statement = &Rollback{}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3855
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3859
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3863
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3867
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3873
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3883
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3916
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3922
		{
			setAllowComments(yylex, true)
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3926
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3932
		{
			yyVAL.bytes2 = nil
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = UnionStr
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3946
		{
			yyVAL.str = UnionAllStr
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = UnionDistinctStr
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3955
		{
			yyVAL.byt = 0
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.byt = 1
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = SQLCacheStr
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3985
		{
			yyVAL.str = DistinctStr
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3990
		{
			yyVAL.str = ""
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.str = StraightJoinHint
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4000
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4008
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4027
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4031
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4037
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4041
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4045
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4049
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 778:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4065
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4078
		{
			yyVAL.exprs = nil
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4082
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4087
		{
			yyVAL.over = nil
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.over = yyDollar[1].over
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.frame = nil
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4100
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4111
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4149
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4157
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4168
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.window = nil
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4179
		{
			yyVAL.window = yyDollar[2].window
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4188
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4194
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4207
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4212
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4220
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4248
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4262
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4278
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4285
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4291
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4295
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4301
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4306
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4321
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4325
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4333
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4344
		{
			yyVAL.expr = nil
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4353
		{
			yyVAL.columns = nil
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4357
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4377
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4383
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4396
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4400
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4404
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4408
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4414
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4416
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4420
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4422
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4426
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4428
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4431
		{
			yyVAL.empty = struct{}{}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.empty = struct{}{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4438
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = JoinStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = JoinStr
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4456
		{
			yyVAL.str = JoinStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.str = StraightJoinStr
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = LeftJoinStr
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = LeftJoinStr
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = RightJoinStr
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = RightJoinStr
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = NaturalJoinStr
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4504
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4530
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4540
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4546
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4551
		{
			yyVAL.indexHints = nil
		}
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4555
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4559
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4563
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4568
		{
			yyVAL.expr = nil
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4572
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4578
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4582
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4586
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4590
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4594
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4602
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4608
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4612
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4632
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4652
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4656
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 897:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4660
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4664
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			yyVAL.str = IsNullStr
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4674
		{
			yyVAL.str = IsNotNullStr
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = IsTrueStr
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.str = IsNotTrueStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = IsFalseStr
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = IsNotFalseStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.str = EqualStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4700
		{
			yyVAL.str = LessThanStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = GreaterThanStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = LessEqualStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = GreaterEqualStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.str = NotEqualStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4725
		{
			yyVAL.expr = nil
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4729
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4735
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4743
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4749
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4755
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4759
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4765
		{
			yyVAL.selectExprs = nil
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4772
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4776
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4786
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4792
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4796
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4804
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4816
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4820
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4824
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4836
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4844
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4848
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4856
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4860
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4864
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4868
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4880
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4884
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4892
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4934
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4938
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4948
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4952
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4956
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4960
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4964
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4968
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4972
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4976
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4980
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4984
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4988
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4992
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4996
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 975:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5000
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5004
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5008
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5012
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5021
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5025
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5029
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5033
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5037
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5041
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5045
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5049
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5053
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5057
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5061
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5072
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5076
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5080
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5088
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5092
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5096
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5100
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 998:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5104
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 999:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5108
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5112
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5116
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5120
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1003:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5124
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1004:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5132
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1006:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5136
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5140
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1008:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5144
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5148
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5152
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5185
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5196
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5200
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5205
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5209
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5213
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5218
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5228
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5232
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5236
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5257
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5261
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5265
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5269
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5273
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5277
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5283
		{
			yyVAL.str = ""
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5287
		{
			yyVAL.str = BooleanModeStr
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1040:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5295
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5315
		{
			yyVAL.str = Armscii8Str
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.str = AsciiStr
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			yyVAL.str = Big5Str
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = UBinaryStr
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = Cp1250Str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5335
		{
			yyVAL.str = Cp1251Str
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = Cp1256Str
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = Cp1257Str
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			yyVAL.str = Cp850Str
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5351
		{
			yyVAL.str = Cp852Str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5355
		{
			yyVAL.str = Cp866Str
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = Cp932Str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.str = Dec8Str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = EucjpmsStr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5371
		{
			yyVAL.str = EuckrStr
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
			yyVAL.str = Gb18030Str
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
			yyVAL.str = Gb2312Str
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.str = GbkStr
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.str = Geostd8Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.str = GreekStr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5395
		{
			yyVAL.str = HebrewStr
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5399
		{
			yyVAL.str = Hp8Str
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = Keybcs2Str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = Koi8rStr
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5411
		{
			yyVAL.str = Koi8uStr
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.str = Latin1Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.str = Latin2Str
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.str = Latin5Str
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = Latin7Str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5431
		{
			yyVAL.str = MacceStr
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5435
		{
			yyVAL.str = MacromanStr
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.str = SjisStr
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5443
		{
			yyVAL.str = Swe7Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
			yyVAL.str = Tis620Str
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5451
		{
			yyVAL.str = Ucs2Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5455
		{
			yyVAL.str = UjisStr
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.str = Utf16Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.str = Utf16leStr
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.str = Utf32Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5485
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5489
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5493
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5501
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5505
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5515
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5523
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5527
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5531
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5535
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5540
		{
			yyVAL.expr = nil
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5544
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5549
		{
			yyVAL.str = string("")
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5553
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5559
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5563
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5569
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5574
		{
			yyVAL.expr = nil
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5578
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5588
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5592
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5602
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5606
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5610
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5614
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5626
		{
			yyVAL.expr = &NullVal{}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5632
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5636
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5640
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5645
		{
			yyVAL.exprs = nil
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5649
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5655
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5659
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5665
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5670
		{
			yyVAL.expr = nil
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5674
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5680
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5685
		{
			yyVAL.orderBy = nil
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5689
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5695
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5699
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5705
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5710
		{
			yyVAL.str = AscScr
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = AscScr
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = DescScr
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5723
		{
			yyVAL.limit = nil
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5727
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5731
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5735
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5741
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5745
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = ""
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = ForUpdateStr
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5758
		{
			yyVAL.str = ShareModeStr
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5771
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5775
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5779
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5783
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5788
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5792
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5796
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5802
		{
			yyVAL.columns = nil
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5806
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5812
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5816
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5820
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5824
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5829
		{
			yyVAL.assignExprs = nil
		}
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5833
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5839
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5843
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5849
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5853
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5859
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5865
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5875
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5879
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5885
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5888
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5894
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5898
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5904
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5915
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5928
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5941
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5947
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5951
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5957
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5961
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5965
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5971
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5975
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5979
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5986
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6001
		{
			yyVAL.expr = &Default{}
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6010
		{
			yyVAL.byt = 0
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6012
		{
			yyVAL.byt = 1
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6015
		{
			yyVAL.byt = 0
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6017
		{
			yyVAL.byt = 1
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6020
		{
			yyVAL.byt = 0
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6022
		{
			yyVAL.byt = 1
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = ""
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6027
		{
			yyVAL.str = IgnoreStr
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6030
		{
			yyVAL.sqlVal = nil
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6032
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6036
		{
			yyVAL.empty = struct{}{}
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6038
		{
			yyVAL.empty = struct{}{}
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6041
		{
			yyVAL.empty = struct{}{}
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6043
		{
			yyVAL.empty = struct{}{}
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6045
		{
			yyVAL.empty = struct{}{}
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6049
		{
			yyVAL.str = UniqueStr
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6051
		{
			yyVAL.str = FulltextStr
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6053
		{
			yyVAL.str = SpatialStr
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6056
		{
			yyVAL.str = ""
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6058
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6061
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6063
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6067
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6071
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6077
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6081
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6088
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6094
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6098
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6105
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6110
		{
			yyVAL.str = string("")
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6112
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6115
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6117
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6120
		{
			yyVAL.EnclosedBy = nil
		}
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6124
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6129
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6133
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6138
		{
			yyVAL.sqlVal = nil
		}
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6142
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6147
		{
			yyVAL.sqlVal = nil
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6156
		{
			yyVAL.Fields = nil
		}
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6160
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6165
		{
			yyVAL.Lines = nil
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6169
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6174
		{
			yyVAL.sqlVal = nil
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6178
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6184
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6190
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6194
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6200
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6204
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.lockType = LockRead
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6214
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.lockType = LockWrite
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6222
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6228
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6234
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6238
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6242
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6766
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6775
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
